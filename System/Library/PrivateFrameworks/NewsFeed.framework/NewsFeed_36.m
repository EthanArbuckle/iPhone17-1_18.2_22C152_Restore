void sub_1C12C9898(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v17;
  uint64_t v18;
  void *v19;
  double MaxY;
  id v21;
  id v22;
  CGRect v23;
  CGRect v24;

  v17 = a1 + 16;
  swift_beginAccess();
  v18 = MEMORY[0x1C18C9C60](v17);
  if (v18)
  {
    v19 = (void *)v18;
    v23.origin.x = a2;
    v23.origin.y = a3;
    v23.size.width = a4;
    v23.size.height = a5;
    MaxY = CGRectGetMaxY(v23);
    v24.origin.x = a6;
    v24.origin.y = a7;
    v24.size.width = a8;
    v24.size.height = a9;
    if (MaxY - CGRectGetMinY(v24) > -14.0)
    {
      v21 = v19;
      objc_msgSend(v21, sel_contentInset);
      objc_msgSend(v21, sel_setContentInset_);

      v22 = v21;
      objc_msgSend(v22, sel_contentOffset);
      objc_msgSend(v22, sel_setContentOffset_);
    }
  }
}

void sub_1C12C99C8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v3, sel_contentInset);
    objc_msgSend(v3, sel_setContentInset_);
  }
}

uint64_t FeedItemRenderer.deinit()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  __swift_destroy_boxed_opaque_existential_1(v0 + 304);
  __swift_destroy_boxed_opaque_existential_1(v0 + 344);
  __swift_destroy_boxed_opaque_existential_1(v0 + 384);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedItemRenderer.__deallocating_deinit()
{
  FeedItemRenderer.deinit();
  return swift_deallocClassInstance();
}

void sub_1C12C9B24(void *a1)
{
  sub_1C12C9FE0();
}

void (*sub_1C12C9B5C(void *a1))(void *a1)
{
  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FeedItemRenderer.presentingViewController.modify(v2);
  return sub_1C02B53A8;
}

uint64_t sub_1C12C9BB4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1C12C9BE8(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_1C12C9C28())()
{
  return j_j__swift_endAccess;
}

void sub_1C12C9C7C(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5 = *a4;
  unsigned __int8 v7 = *a3;
  uint64_t v6 = v5;
  FeedItemRenderer.render(in:at:options:layoutAttributes:actionSenderHandler:)(a1, a2, &v7, &v6, (uint64_t)nullsub_1, 0, a5);
}

uint64_t sub_1C12C9CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v21 + 24) = 0;
  *(void *)(v21 + 432) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v21 + 440) = 0;
  *(void *)(v21 + 448) = 0;
  sub_1BFC66384(a1, v21 + 32);
  uint64_t v34 = a1;
  sub_1BFC66384(a1, (uint64_t)v35);
  type metadata accessor for FeedItemCellSelectionRenderer();
  uint64_t v26 = swift_allocObject();
  sub_1BFC773DC(v35, v26 + 16);
  *(void *)(v21 + 72) = v26;
  *(void *)(v21 + 80) = a2;
  *(void *)(v21 + 88) = a3;
  *(void *)(v21 + 96) = a4;
  *(void *)(v21 + 104) = a5;
  *(void *)(v21 + 112) = a6;
  *(void *)(v21 + 120) = a7;
  sub_1BFC66384(a8, v21 + 128);
  *(void *)(v21 + 168) = a9;
  *(void *)(v21 + 176) = a10;
  *(void *)(v21 + 184) = a11;
  *(void *)(v21 + 192) = a12;
  *(void *)(v21 + 200) = a13;
  *(void *)(v21 + 208) = a14;
  *(void *)(v21 + 216) = a15;
  sub_1BFC66384(a16, v21 + 224);
  sub_1BFC66384(a17, v21 + 264);
  sub_1BFC66384(a18, v21 + 304);
  sub_1BFC66384(a19, v21 + 344);
  *(void *)(v21 + 424) = a20;
  sub_1BFC66384(a21, v21 + 384);
  uint64_t v27 = qword_1EB87B0E0;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  if (v27 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_1C12CAA3C(&qword_1EB885C08, v28, (void (*)(uint64_t))type metadata accessor for FeedItemRenderer);
  sub_1C1516FCC();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a21);
  __swift_destroy_boxed_opaque_existential_1(a19);
  __swift_destroy_boxed_opaque_existential_1(a18);
  __swift_destroy_boxed_opaque_existential_1(a17);
  __swift_destroy_boxed_opaque_existential_1(a16);
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1(v34);
  *(unsigned char *)(v21 + 440) = v35[0];
  return v21;
}

uint64_t sub_1C12C9FE0()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = MEMORY[0x1C18C9C60](v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, ObjectType, v1);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = swift_getObjectType();
  uint64_t v6 = MEMORY[0x1C18C9C60](v0 + 16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v5, v4);
}

void sub_1C12CA0A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C12CA10C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12CA144()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12CA17C()
{
  uint64_t v1 = sub_1C151677C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1C12CA26C(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1C151677C() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = (v7 & 0xFFFFFFFFFFFFFFF8) + v2;
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  char v11 = *(unsigned char *)(v2 + v7);
  uint64_t v12 = *(void *)(v8 + 8);
  uint64_t v13 = *(void *)(v8 + 16);
  sub_1C12C5D78(a1, a2, v9, v10, v2 + v6, v11, v12, v13);
}

uint64_t sub_1C12CA320@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v3);
  *a2 = result;
  return result;
}

void sub_1C12CA370(id *a1)
{
  id v1 = *a1;
  sub_1C12C9FE0();
}

uint64_t dispatch thunk of FeedItemRendererType.presentingViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemRendererType.presentingViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeedItemRendererType.presentingViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FeedItemRendererType.disableFormatLayoutViewCellDequeueing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemRendererType.disableFormatLayoutViewCellDequeueing.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeedItemRendererType.disableFormatLayoutViewCellDequeueing.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedItemRendererType.render(in:at:options:layoutAttributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of FeedItemRendererType.render(in:at:options:layoutAttributes:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

unsigned char *storeEnumTagSinglePayload for FeedItemRendererOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12CA52CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemRendererOptions()
{
  return &type metadata for FeedItemRendererOptions;
}

uint64_t method lookup function for FeedItemRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedItemRenderer);
}

uint64_t sub_1C12CA57C(char *a1)
{
  return sub_1C12C436C(a1);
}

uint64_t sub_1C12CA584()
{
  uint64_t v1 = sub_1C151677C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

void sub_1C12CA6D0()
{
  uint64_t v1 = *(void *)(sub_1C151677C() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1C12C61E0(*(void *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(void **)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1C12CA79C()
{
  return swift_deallocObject();
}

uint64_t sub_1C12CA7AC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C12CA7EC()
{
  sub_1C12C62FC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C12CA7F4()
{
  return swift_deallocObject();
}

uint64_t sub_1C12CA804()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12CA87C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C12CA8EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 6));
  }
  if (v0[14]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 11));
  }
  if (v0[19]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  }
  return swift_deallocObject();
}

uint64_t sub_1C12CA95C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12CA9C4()
{
  return sub_1C12C94C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1C12CA9D8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12CAA20()
{
  return sub_1C12C9624(v0[2], v0[3], v0[4]);
}

void sub_1C12CAA2C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  sub_1C12C9898(v8, a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1C12CAA34()
{
  sub_1C12C99C8(v0);
}

uint64_t sub_1C12CAA3C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatStateMachineActionEvent.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateMachineActionEvent.eventIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C12CAAE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatStateMachineActionEvent.init(from:)(a1, a2);
}

uint64_t sub_1C12CAB00(void *a1)
{
  return FormatStateMachineActionEvent.encode(to:)(a1);
}

unint64_t sub_1C12CAB18(uint64_t a1)
{
  unint64_t result = sub_1C12CAB40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12CAB40()
{
  unint64_t result = qword_1EA1ADDE8;
  if (!qword_1EA1ADDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDE8);
  }
  return result;
}

unint64_t sub_1C12CAB94(void *a1)
{
  a1[1] = sub_1C087A244();
  a1[2] = sub_1C08FE8AC();
  unint64_t result = sub_1C12CABCC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12CABCC()
{
  unint64_t result = qword_1EA1ADDF0;
  if (!qword_1EA1ADDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDF0);
  }
  return result;
}

uint64_t destroy for FormatStateMachineAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC41E8(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatStateMachineAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  char v11 = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF429DC(v7, v8, v9, v10, v11);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = v11;
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatStateMachineAction(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  char v8 = *(unsigned char *)(a2 + 80);
  sub_1BFF429DC(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  char v13 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = v8;
  sub_1BFEC41E8(v9, v10, v11, v12, v13);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatStateMachineAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  char v10 = *(unsigned char *)(a1 + 80);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 80) = v5;
  sub_1BFEC41E8(v6, v7, v8, v9, v10);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineAction()
{
  return &type metadata for FormatStateMachineAction;
}

ValueMetadata *type metadata accessor for FormatStateMachineActionEvent()
{
  return &type metadata for FormatStateMachineActionEvent;
}

void *sub_1C12CAF8C(uint64_t a1)
{
  sub_1C12CB4FC(a1, (uint64_t)v45);
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v1);
  sub_1C0181BEC(0);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v29 = *(void *)(*(void *)(v3 - 8) + 72);
  uint64_t v27 = 2 * v29;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1527210;
  uint64_t v7 = (char *)(v6 + v5);
  sub_1C12CB4FC((uint64_t)v45, (uint64_t)v46);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  if (sub_1C0263AB8((uint64_t)v46) != 1)
  {
    uint64_t v8 = v46[0];
    uint64_t v9 = v46[1];
    swift_bridgeObjectRetain();
  }
  sub_1C0433600(0x696669746E656449, 0xEA00000000007265, v8, v9, v7);
  uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
  long long v11 = (void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  uint64_t v28 = *v11;
  (*v11)(v7, 0, 1, v10);
  sub_1C12CB4FC((uint64_t)v45, (uint64_t)&v38);
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (sub_1C0263AB8((uint64_t)&v38) != 1)
  {
    uint64_t v12 = v39;
    uint64_t v13 = v40;
    swift_bridgeObjectRetain();
  }
  sub_1C0433600(1701667150, 0xE400000000000000, v12, v13, &v7[v29]);
  v28(&v7[v29], 0, 1, v10);
  sub_1C09BCFA4(0x614D206574617453, 0xED0000656E696863, 0, 0, v6, v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v14 = swift_allocObject();
  *(void *)(inited + 32) = v14;
  *(void *)(v14 + 48) = v42;
  long long v15 = v41[1];
  *(_OWORD *)(v14 + 16) = v41[0];
  *(_OWORD *)(v14 + 32) = v15;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C152C7F0;
  v17 = (char *)(v16 + v5);
  sub_1C12CB4FC((uint64_t)v45, (uint64_t)v35);
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  if (sub_1C0263AB8((uint64_t)v35) != 1)
  {
    uint64_t v18 = v36;
    uint64_t v19 = v37;
    swift_bridgeObjectRetain();
  }
  sub_1C0433600(0x696669746E656449, 0xEA00000000007265, v18, v19, v17);
  v28(v17, 0, 1, v10);
  sub_1C12CB4FC((uint64_t)v45, (uint64_t)v33);
  if (sub_1C0263AB8((uint64_t)v33) == 1)
  {
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = v34;
    swift_bridgeObjectRetain();
  }
  sub_1C043C7A8(0x617453206D6F7246, 0xEA00000000006574, v20, &v17[v29]);
  v28(&v17[v29], 0, 1, v10);
  sub_1C12CB4FC((uint64_t)v45, (uint64_t)v30);
  if (sub_1C0263AB8((uint64_t)v30) == 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v21 = v31;
    uint64_t v22 = v32;
    swift_bridgeObjectRetain();
  }
  sub_1C0433600(0x6574617453206F54, 0xE800000000000000, v21, v22, &v17[v27]);
  v28(&v17[v27], 0, 1, v10);
  sub_1C09BCFA4(0x746E657645, 0xE500000000000000, 0, 0, v16, v43);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v23 = swift_allocObject();
  *(void *)(inited + 72) = v23;
  *(void *)(v23 + 48) = v44;
  long long v24 = v43[1];
  *(_OWORD *)(v23 + 16) = v43[0];
  *(_OWORD *)(v23 + 32) = v24;
  v25 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v25;
}

uint64_t sub_1C12CB4FC(uint64_t a1, uint64_t a2)
{
  sub_1C0CE88F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12CB560()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t destroy for FormatStateMachineInlineOutput()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed30FormatStateMachineInlineOutputVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatStateMachineInlineOutput(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatStateMachineInlineOutput(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineOutput()
{
  return &type metadata for FormatStateMachineInlineOutput;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineOutput.Scope()
{
  return &type metadata for FormatStateMachineInlineOutput.Scope;
}

uint64_t sub_1C12CB6F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 16;
      swift_unknownObjectRetain();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1C12CB7A8(uint64_t a1)
{
  sub_1C12DF67C();
  uint64_t v43 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v42 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v41 = (char *)v32 - v7;
  sub_1C0607698(0);
  uint64_t v40 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v44 = (uint64_t)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (!v10) {
    return v11;
  }
  v32[1] = v1;
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1C05F8924(0, v10, 0);
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v37 = v4 + 32;
  uint64_t v38 = v4 + 16;
  uint64_t v39 = v4;
  uint64_t v35 = a1 + 64;
  uint64_t v36 = v4 + 8;
  char v17 = *(unsigned char *)(a1 + 32);
  v32[0] = a1 + 88;
  int64_t v33 = v10;
  uint64_t v34 = v13;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << v17)
  {
    unint64_t v20 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_28;
    }
    uint64_t v21 = a1;
    uint64_t v22 = v41;
    uint64_t v23 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v41, *(void *)(a1 + 56) + *(void *)(v4 + 72) * v14, v43);
    long long v24 = v42;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v42, v22, v23);
    swift_getKeyPath();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v24, v23);
    uint64_t v11 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F8924(0, *(void *)(v11 + 16) + 1, 1);
      uint64_t v11 = v45;
    }
    unint64_t v26 = *(void *)(v11 + 16);
    unint64_t v25 = *(void *)(v11 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_1C05F8924(v25 > 1, v26 + 1, 1);
      uint64_t v11 = v45;
    }
    *(void *)(v11 + 16) = v26 + 1;
    uint64_t result = sub_1C12DF818(v44, v11+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v26, (uint64_t (*)(void))sub_1C0607698);
    char v17 = *(unsigned char *)(v21 + 32);
    unint64_t v18 = 1 << v17;
    if (v14 >= 1 << v17) {
      goto LABEL_29;
    }
    uint64_t v16 = v35;
    uint64_t v27 = *(void *)(v35 + 8 * v20);
    if ((v27 & (1 << v14)) == 0) {
      goto LABEL_30;
    }
    a1 = v21;
    LODWORD(v13) = v34;
    if (*(_DWORD *)(v21 + 36) != v34) {
      goto LABEL_31;
    }
    unint64_t v28 = v27 & (-2 << (v14 & 0x3F));
    if (v28)
    {
      unint64_t v18 = __clz(__rbit64(v28)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v33;
    }
    else
    {
      unint64_t v29 = v20 + 1;
      unint64_t v30 = (v18 + 63) >> 6;
      int64_t v19 = v33;
      if (v20 + 1 < v30)
      {
        unint64_t v31 = *(void *)(v35 + 8 * v29);
        if (!v31)
        {
          unint64_t v29 = v20 + 2;
          if (v20 + 2 >= v30) {
            goto LABEL_4;
          }
          unint64_t v31 = *(void *)(v35 + 8 * v29);
          if (!v31)
          {
            while (v30 - 3 != v20)
            {
              unint64_t v31 = *(void *)(v32[0] + 8 * v20++);
              if (v31)
              {
                unint64_t v29 = v20 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        unint64_t v18 = __clz(__rbit64(v31)) + (v29 << 6);
      }
    }
LABEL_4:
    ++v15;
    uint64_t v14 = v18;
    if (v15 == v19) {
      return v11;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C12CBBD8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v25 = *v12;
    unint64_t v15 = *(void *)(v26 + 16);
    unint64_t v14 = *(void *)(v26 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1BFF661B8(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v26 + 16) = v15 + 1;
    uint64_t v16 = v26 + 16 * v15;
    *(void *)(v16 + 32) = v25;
    *(void *)(v16 + 40) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C12CBDE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (id *)(swift_bridgeObjectRetain() + 48);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    int v5 = *(v2 - 2);
    uint64_t v4 = *(v2 - 1);
    id v6 = *v2;
    swift_unknownObjectRetain();
    id v7 = v4;
    id v8 = objc_msgSend(v5, sel_publisherID);
    if (v8)
    {
      int64_t v9 = v8;
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1BFEF9B68(0, v3[2] + 1, 1, v3);
      }
      unint64_t v14 = v3[2];
      unint64_t v13 = v3[3];
      if (v14 >= v13 >> 1) {
        uint64_t v3 = sub_1BFEF9B68((void *)(v13 > 1), v14 + 1, 1, v3);
      }
      v3[2] = v14 + 1;
      unint64_t v15 = &v3[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
    }
    else
    {

      swift_unknownObjectRelease();
    }
    v2 += 3;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C12CBF54(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 32;
    do
    {
      if (swift_dynamicCastObjCProtocolConditional())
      {
        uint64_t v5 = swift_unknownObjectRetain();
        MEMORY[0x1C18C66D0](v5);
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

void *FeedClusteringService.__allocating_init(cloudContext:allowlistProvider:feedPersonalizer:personalizationService:headlineClusterOrderer:topicClusteringJournalStorageService:tagService:headlineService:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, long long *a6, long long *a7, long long *a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  sub_1BFC773DC(a4, (uint64_t)(v16 + 5));
  v16[10] = a5;
  sub_1BFC773DC(a6, (uint64_t)(v16 + 11));
  sub_1BFC773DC(a7, (uint64_t)(v16 + 16));
  sub_1BFC773DC(a8, (uint64_t)(v16 + 21));
  return v16;
}

void *FeedClusteringService.init(cloudContext:allowlistProvider:feedPersonalizer:personalizationService:headlineClusterOrderer:topicClusteringJournalStorageService:tagService:headlineService:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, long long *a6, long long *a7, long long *a8)
{
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BFC773DC(a4, (uint64_t)(v8 + 5));
  v8[10] = a5;
  sub_1BFC773DC(a6, (uint64_t)(v8 + 11));
  sub_1BFC773DC(a7, (uint64_t)(v8 + 16));
  sub_1BFC773DC(a8, (uint64_t)(v8 + 21));
  return v8;
}

uint64_t FeedClusteringService.createClusters(request:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FeedClusteringRequest(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  id v6 = sub_1C12CC364(a1);
  sub_1C12CC5D8();
  sub_1C151932C();
  sub_1C12DBD68(a1, (uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FeedClusteringRequest);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  sub_1C12DF818((uint64_t)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for FeedClusteringRequest);
  *(void *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C12CD4FC;
  *(void *)(v9 + 24) = v8;
  swift_retain();
  id v10 = v6;
  uint64_t v11 = (void *)sub_1C1518E7C();
  uint64_t v12 = sub_1C1518FEC();

  swift_release();
  swift_release();

  return v12;
}

id sub_1C12CC364(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 16);
  id v4 = objc_msgSend(v3, sel_personalizationTreatment);
  id v5 = objc_msgSend(v4, sel_minClusterSizeIPhone);
  id v6 = objc_msgSend(v4, sel_minClusterSizeIPad);
  id v7 = objc_msgSend(v4, sel_maxClusterSizeIPhone);
  id v8 = objc_msgSend(v4, sel_maxClusterSizeIPad);
  uint64_t v9 = *(void **)(v1 + 16);
  unsigned int v16 = objc_msgSend(v9, sel_deviceIsiPad);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 32);
  id result = objc_msgSend(v9, sel_pptContext);
  if (result)
  {
    unsigned int v12 = objc_msgSend(result, sel_isRunningPPT);
    swift_unknownObjectRelease();
    if (objc_msgSend(v3, sel_respondsToSelector_, sel_todayFeedEnabled)) {
      unsigned __int8 v13 = objc_msgSend(v3, sel_todayFeedEnabled);
    }
    else {
      unsigned __int8 v13 = 0;
    }
    LOBYTE(v15) = v13;
    id v14 = objc_msgSend(self, sel_rulesWithTreatment_deviceIsiPad_limitUnpaidArticles_enforcePublisherCap_minClusterSizeiPhone_maxClusterSizeiPhone_minClusterSizeiPad_maxClusterSizeiPad_todayFeedEnabled_, v4, v16, v10, v12 ^ 1, v5, v7, v6, v8, v15);

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12CC4F8()
{
  sub_1C12E0218();
  swift_allocObject();
  sub_1C151911C();
  sub_1C12E0288();
  swift_allocObject();
  sub_1C151911C();
  uint64_t v0 = sub_1C15192FC();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C12CC5BC()
{
  return sub_1C12CC4F8();
}

void sub_1C12CC5D8()
{
  if (!qword_1EB85DFC0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB85DFB8);
    sub_1C12DE6EC(255, (unint64_t *)&unk_1EB85DFD0, &qword_1EB85DFC8, (uint64_t)&protocolRef_FCTranslationProvider, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB85DFC0);
    }
  }
}

uint64_t sub_1C12CC684()
{
  return sub_1C151911C();
}

uint64_t sub_1C12CC710()
{
  uint64_t v1 = (int *)type metadata accessor for FeedClusteringRequest(0);
  uint64_t v68 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v66 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v69 = v0;
  uint64_t v67 = (v68 + 24) & ~v68;
  uint64_t v2 = v0 + v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v67 + v1[10];
  id v4 = (int *)type metadata accessor for FeedClusteringOptions(0);
  id v5 = *(unsigned int (**)(void, void, void))(*((void *)v4 - 1) + 48);
  v70 = v5;
  if (!v5(v3, 1, v4))
  {
    uint64_t v6 = v3 + v4[5];
    uint64_t v7 = sub_1C1516D9C();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v10 = v3 + v4[7];
    if (!v9(v10, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    }
    uint64_t v11 = v3 + v4[8];
    uint64_t v12 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11 + *(int *)(v12 + 24), v7);
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = v3 + v4[10];
    if (!v9(v13, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
    }
    uint64_t v14 = v3 + v4[12];
    if (!v9(v14, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
    }
    uint64_t v15 = v3 + v4[14];
    if (!v9(v15, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
    }
    uint64_t v16 = v3 + v4[16];
    if (!v9(v16, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
    }
    if (*(void *)(v3 + v4[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = v3 + v4[19];
    uint64_t v18 = sub_1C1516D2C();
    uint64_t v19 = *(void *)(v18 - 8);
    id v5 = v70;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
  }
  uint64_t v20 = v2 + v1[11];
  if (!v5(v20, 1, v4))
  {
    uint64_t v21 = v20 + v4[5];
    uint64_t v22 = sub_1C1516D9C();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v25 = v20 + v4[7];
    if (!v24(v25, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    }
    uint64_t v26 = v20 + v4[8];
    uint64_t v27 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v26 + *(int *)(v27 + 24), v22);
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = v20 + v4[10];
    if (!v24(v28, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v22);
    }
    uint64_t v29 = v20 + v4[12];
    if (!v24(v29, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v29, v22);
    }
    uint64_t v30 = v20 + v4[14];
    if (!v24(v30, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v30, v22);
    }
    uint64_t v31 = v20 + v4[16];
    if (!v24(v31, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v31, v22);
    }
    if (*(void *)(v20 + v4[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v32 = v20 + v4[19];
    uint64_t v33 = sub_1C1516D2C();
    uint64_t v34 = *(void *)(v33 - 8);
    id v5 = v70;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33)) {
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = v2 + v1[13];
  if (!v5(v35, 1, v4))
  {
    uint64_t v36 = v35 + v4[5];
    uint64_t v37 = sub_1C1516D9C();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (!v39(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v40 = v35 + v4[7];
    if (!v39(v40, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v37);
    }
    uint64_t v41 = v35 + v4[8];
    uint64_t v42 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v41, 1, v42))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41 + *(int *)(v42 + 24), v37);
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = v35 + v4[10];
    if (!v39(v43, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v43, v37);
    }
    uint64_t v44 = v35 + v4[12];
    if (!v39(v44, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v44, v37);
    }
    uint64_t v45 = v35 + v4[14];
    if (!v39(v45, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v45, v37);
    }
    uint64_t v46 = v35 + v4[16];
    if (!v39(v46, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v46, v37);
    }
    if (*(void *)(v35 + v4[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v35 + v4[19];
    uint64_t v48 = sub_1C1516D2C();
    uint64_t v49 = *(void *)(v48 - 8);
    id v5 = v70;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48)) {
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
  }
  uint64_t v50 = v2 + v1[14];
  if (!v5(v50, 1, v4))
  {
    uint64_t v51 = v50 + v4[5];
    uint64_t v52 = sub_1C1516D9C();
    uint64_t v53 = *(void *)(v52 - 8);
    v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
    if (!v54(v51, 1, v52)) {
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
    }
    uint64_t v55 = v50 + v4[7];
    if (!v54(v55, 1, v52)) {
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v52);
    }
    uint64_t v56 = v50 + v4[8];
    uint64_t v57 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v56, 1, v57))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56 + *(int *)(v57 + 24), v52);
      swift_bridgeObjectRelease();
    }
    uint64_t v58 = v50 + v4[10];
    if (!v54(v58, 1, v52)) {
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v58, v52);
    }
    uint64_t v59 = v50 + v4[12];
    if (!v54(v59, 1, v52)) {
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v59, v52);
    }
    uint64_t v60 = v50 + v4[14];
    if (!v54(v60, 1, v52)) {
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v60, v52);
    }
    uint64_t v61 = v50 + v4[16];
    if (!v54(v61, 1, v52)) {
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v61, v52);
    }
    if (*(void *)(v50 + v4[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v62 = v50 + v4[19];
    uint64_t v63 = sub_1C1516D2C();
    uint64_t v64 = *(void *)(v63 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63)) {
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
    }
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C12CD4FC()
{
  type metadata accessor for FeedClusteringRequest(0);
  return sub_1C12CC684();
}

uint64_t sub_1C12CD5AC(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1C12CD5E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, unsigned __int8 a12, unsigned __int8 a13, uint64_t a14)
{
  double v609 = a11;
  double v608 = a10;
  int v606 = a8;
  uint64_t v679 = a6;
  uint64_t v681 = a4;
  uint64_t v684 = a3;
  uint64_t v607 = a2;
  id v678 = a1;
  uint64_t v605 = a9;
  sub_1C12DF310();
  MEMORY[0x1F4188790](v16 - 8);
  v604 = (char *)&v531 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12DFF00();
  MEMORY[0x1F4188790](v18 - 8);
  v651 = (char *)&v531 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v600 = sub_1C1516DDC();
  uint64_t v599 = *(void *)(v600 - 8);
  MEMORY[0x1F4188790](v600);
  v650 = (char *)&v531 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12DF4AC();
  MEMORY[0x1F4188790](v21 - 8);
  v649 = (char *)&v531 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v646 = sub_1C1516DCC();
  uint64_t v645 = *(void *)(v646 - 8);
  MEMORY[0x1F4188790](v646);
  v543 = (char *)&v531 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  v648 = (char *)&v531 - v25;
  MEMORY[0x1F4188790](v26);
  v541 = (char *)&v531 - v27;
  MEMORY[0x1F4188790](v28);
  v636 = (char *)&v531 - v29;
  MEMORY[0x1F4188790](v30);
  v539 = (char *)&v531 - v31;
  MEMORY[0x1F4188790](v32);
  v633 = (char *)&v531 - v33;
  MEMORY[0x1F4188790](v34);
  v537 = (char *)&v531 - v35;
  MEMORY[0x1F4188790](v36);
  v626 = (char *)&v531 - v37;
  sub_1BFF90234(0);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v542 = (uint64_t)&v531 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v540 = (uint64_t)&v531 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v538 = (uint64_t)&v531 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v536 = (uint64_t)&v531 - v45;
  uint64_t v603 = sub_1C1516E0C();
  uint64_t v602 = *(void *)(v603 - 8);
  MEMORY[0x1F4188790](v603);
  v535 = (char *)&v531 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v47);
  v644 = (char *)&v531 - v48;
  MEMORY[0x1F4188790](v49);
  v534 = (char *)&v531 - v50;
  MEMORY[0x1F4188790](v51);
  v635 = (char *)&v531 - v52;
  MEMORY[0x1F4188790](v53);
  v533 = (char *)&v531 - v54;
  MEMORY[0x1F4188790](v55);
  v632 = (char *)&v531 - v56;
  MEMORY[0x1F4188790](v57);
  v532 = (char *)&v531 - v58;
  MEMORY[0x1F4188790](v59);
  v625 = (char *)&v531 - v60;
  sub_1C12DF174();
  MEMORY[0x1F4188790](v61 - 8);
  v647 = (char *)&v531 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0607698(0);
  MEMORY[0x1F4188790](v63 - 8);
  uint64_t v677 = (uint64_t)&v531 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v65);
  uint64_t v673 = (uint64_t)&v531 - v66;
  MEMORY[0x1F4188790](v67);
  uint64_t v672 = (uint64_t)&v531 - v68;
  sub_1C0EF837C();
  MEMORY[0x1F4188790](v69 - 8);
  v654 = (void (*)(char *, uint64_t, uint64_t))((char *)&v531 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v71);
  v583 = (char *)&v531 - v72;
  MEMORY[0x1F4188790](v73);
  uint64_t v581 = (uint64_t)&v531 - v74;
  MEMORY[0x1F4188790](v75);
  v577 = (char *)&v531 - v76;
  MEMORY[0x1F4188790](v77);
  v575 = (char *)&v531 - v78;
  MEMORY[0x1F4188790](v79);
  v674 = (char *)&v531 - v80;
  MEMORY[0x1F4188790](v81);
  v653 = (char *)&v531 - v82;
  MEMORY[0x1F4188790](v83);
  v652 = (char *)&v531 - v84;
  MEMORY[0x1F4188790](v85);
  v615 = (char *)&v531 - v86;
  MEMORY[0x1F4188790](v87);
  v610 = (char *)&v531 - v88;
  MEMORY[0x1F4188790](v89);
  v618 = (char *)&v531 - v90;
  MEMORY[0x1F4188790](v91);
  v614 = (char *)&v531 - v92;
  MEMORY[0x1F4188790](v93);
  v612 = (char *)&v531 - v94;
  MEMORY[0x1F4188790](v95);
  v616 = (char *)&v531 - v96;
  MEMORY[0x1F4188790](v97);
  v613 = (char *)&v531 - v98;
  MEMORY[0x1F4188790](v99);
  v590 = (char *)&v531 - v100;
  MEMORY[0x1F4188790](v101);
  v582 = (char *)&v531 - v102;
  uint64_t v676 = sub_1C1516D9C();
  uint64_t v643 = *(void *)(v676 - 8);
  MEMORY[0x1F4188790](v676);
  v642 = (char *)&v531 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v104);
  v640 = (char *)&v531 - v105;
  MEMORY[0x1F4188790](v106);
  v641 = (char *)&v531 - v107;
  MEMORY[0x1F4188790](v108);
  v639 = (char *)&v531 - v109;
  MEMORY[0x1F4188790](v110);
  v638 = (char *)&v531 - v111;
  MEMORY[0x1F4188790](v112);
  v637 = (char *)&v531 - v113;
  MEMORY[0x1F4188790](v114);
  v598 = (char *)&v531 - v115;
  MEMORY[0x1F4188790](v116);
  v596 = (char *)&v531 - v117;
  MEMORY[0x1F4188790](v118);
  v597 = (char *)&v531 - v119;
  MEMORY[0x1F4188790](v120);
  v595 = (char *)&v531 - v121;
  MEMORY[0x1F4188790](v122);
  v634 = (char *)&v531 - v123;
  MEMORY[0x1F4188790](v124);
  v631 = (char *)&v531 - v125;
  MEMORY[0x1F4188790](v126);
  v629 = (char *)&v531 - v127;
  MEMORY[0x1F4188790](v128);
  v630 = (char *)&v531 - v129;
  MEMORY[0x1F4188790](v130);
  v628 = (char *)&v531 - v131;
  MEMORY[0x1F4188790](v132);
  v627 = (char *)&v531 - v133;
  MEMORY[0x1F4188790](v134);
  v675 = (char *)&v531 - v135;
  MEMORY[0x1F4188790](v136);
  v624 = (char *)&v531 - v137;
  MEMORY[0x1F4188790](v138);
  v622 = (char *)&v531 - v139;
  MEMORY[0x1F4188790](v140);
  v623 = (char *)&v531 - v141;
  MEMORY[0x1F4188790](v142);
  v621 = (char *)&v531 - v143;
  MEMORY[0x1F4188790](v144);
  v620 = (char *)&v531 - v145;
  MEMORY[0x1F4188790](v146);
  v619 = (char *)&v531 - v147;
  MEMORY[0x1F4188790](v148);
  v671 = (char *)&v531 - v149;
  MEMORY[0x1F4188790](v150);
  v670 = (char *)&v531 - v151;
  MEMORY[0x1F4188790](v152);
  v669 = (char *)&v531 - v153;
  MEMORY[0x1F4188790](v154);
  v668 = (char *)&v531 - v155;
  MEMORY[0x1F4188790](v156);
  v667 = (char *)&v531 - v157;
  MEMORY[0x1F4188790](v158);
  v666 = (char *)&v531 - v159;
  MEMORY[0x1F4188790](v160);
  v665 = (char *)&v531 - v161;
  MEMORY[0x1F4188790](v162);
  v664 = (char *)&v531 - v163;
  MEMORY[0x1F4188790](v164);
  v663 = (char *)&v531 - v165;
  MEMORY[0x1F4188790](v166);
  v662 = (char *)&v531 - v167;
  MEMORY[0x1F4188790](v168);
  v661 = (char *)&v531 - v169;
  MEMORY[0x1F4188790](v170);
  v660 = (char *)&v531 - v171;
  MEMORY[0x1F4188790](v172);
  v659 = (char *)&v531 - v173;
  MEMORY[0x1F4188790](v174);
  v658 = (char *)&v531 - v175;
  MEMORY[0x1F4188790](v176);
  v657 = (char *)&v531 - v177;
  MEMORY[0x1F4188790](v178);
  v656 = (char *)&v531 - v179;
  MEMORY[0x1F4188790](v180);
  v655 = (char *)&v531 - v181;
  sub_1C12DBD34(0);
  MEMORY[0x1F4188790](v182 - 8);
  uint64_t v601 = (uint64_t)&v531 - ((v183 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v184);
  uint64_t v594 = (uint64_t)&v531 - v185;
  MEMORY[0x1F4188790](v186);
  uint64_t v592 = (uint64_t)&v531 - v187;
  MEMORY[0x1F4188790](v188);
  uint64_t v591 = (uint64_t)&v531 - v189;
  MEMORY[0x1F4188790](v190);
  v588 = (char *)&v531 - v191;
  MEMORY[0x1F4188790](v192);
  uint64_t v586 = (uint64_t)&v531 - v193;
  MEMORY[0x1F4188790](v194);
  uint64_t v584 = (uint64_t)&v531 - v195;
  MEMORY[0x1F4188790](v196);
  v580 = (char *)&v531 - v197;
  MEMORY[0x1F4188790](v198);
  v579 = (char *)&v531 - v199;
  MEMORY[0x1F4188790](v200);
  v578 = (char *)&v531 - v201;
  MEMORY[0x1F4188790](v202);
  uint64_t v576 = (uint64_t)&v531 - v203;
  MEMORY[0x1F4188790](v204);
  uint64_t v574 = (uint64_t)&v531 - v205;
  MEMORY[0x1F4188790](v206);
  v573 = (char *)&v531 - v207;
  MEMORY[0x1F4188790](v208);
  v565 = (char *)&v531 - v209;
  MEMORY[0x1F4188790](v210);
  uint64_t v572 = (uint64_t)&v531 - v211;
  MEMORY[0x1F4188790](v212);
  v571 = (char *)&v531 - v213;
  MEMORY[0x1F4188790](v214);
  uint64_t v570 = (uint64_t)&v531 - v215;
  MEMORY[0x1F4188790](v216);
  uint64_t v569 = (uint64_t)&v531 - v217;
  MEMORY[0x1F4188790](v218);
  v568 = (char *)&v531 - v219;
  MEMORY[0x1F4188790](v220);
  uint64_t v566 = (uint64_t)&v531 - v221;
  MEMORY[0x1F4188790](v222);
  v558 = (char *)&v531 - v223;
  MEMORY[0x1F4188790](v224);
  v564 = (char *)&v531 - v225;
  MEMORY[0x1F4188790](v226);
  uint64_t v563 = (uint64_t)&v531 - v227;
  MEMORY[0x1F4188790](v228);
  uint64_t v561 = (uint64_t)&v531 - v229;
  MEMORY[0x1F4188790](v230);
  uint64_t v560 = (uint64_t)&v531 - v231;
  MEMORY[0x1F4188790](v232);
  v567 = (char *)&v531 - v233;
  MEMORY[0x1F4188790](v234);
  v562 = (char *)&v531 - v235;
  MEMORY[0x1F4188790](v236);
  uint64_t v559 = (uint64_t)&v531 - v237;
  MEMORY[0x1F4188790](v238);
  v554 = (char *)&v531 - v239;
  MEMORY[0x1F4188790](v240);
  uint64_t v557 = (uint64_t)&v531 - v241;
  MEMORY[0x1F4188790](v242);
  v556 = (char *)&v531 - v243;
  MEMORY[0x1F4188790](v244);
  uint64_t v555 = (uint64_t)&v531 - v245;
  MEMORY[0x1F4188790](v246);
  v551 = (char *)&v531 - v247;
  MEMORY[0x1F4188790](v248);
  v553 = (char *)&v531 - v249;
  MEMORY[0x1F4188790](v250);
  v611 = (char *)&v531 - v251;
  MEMORY[0x1F4188790](v252);
  uint64_t v552 = (uint64_t)&v531 - v253;
  MEMORY[0x1F4188790](v254);
  v256 = (char *)&v531 - v255;
  MEMORY[0x1F4188790](v257);
  uint64_t v550 = (uint64_t)&v531 - v258;
  MEMORY[0x1F4188790](v259);
  v549 = (char *)&v531 - v260;
  MEMORY[0x1F4188790](v261);
  uint64_t v548 = (uint64_t)&v531 - v262;
  MEMORY[0x1F4188790](v263);
  uint64_t v546 = (uint64_t)&v531 - v264;
  MEMORY[0x1F4188790](v265);
  uint64_t v545 = (uint64_t)&v531 - v266;
  MEMORY[0x1F4188790](v267);
  uint64_t v544 = (uint64_t)&v531 - v268;
  MEMORY[0x1F4188790](v269);
  v271 = (char *)&v531 - v270;
  MEMORY[0x1F4188790](v272);
  v274 = (char *)&v531 - v273;
  MEMORY[0x1F4188790](v275);
  v277 = (char *)&v531 - v276;
  MEMORY[0x1F4188790](v278);
  v280 = (char *)&v531 - v279;
  MEMORY[0x1F4188790](v281);
  v283 = (char *)&v531 - v282;
  MEMORY[0x1F4188790](v284);
  v286 = (char *)&v531 - v285;
  *(void *)&double v288 = MEMORY[0x1F4188790](v287).n128_u64[0];
  v290 = (char *)&v531 - v289;
  uint64_t v587 = *a7;
  LODWORD(v682) = objc_msgSend(*(id *)(v686 + 16), sel_deviceIsiPad, v288);
  uint64_t v680 = a5;
  sub_1C12DBD68(a5, (uint64_t)v290, (uint64_t (*)(void))sub_1C12DBD34);
  uint64_t v291 = type metadata accessor for FeedClusteringOptions(0);
  uint64_t v292 = *(void *)(v291 - 8);
  v293 = *(unsigned int (**)(char *, uint64_t, int *))(v292 + 48);
  v683 = (int *)v291;
  v685 = v293;
  uint64_t v686 = v292 + 48;
  if (((unsigned int (*)(char *, uint64_t))v293)(v290, 1) == 1)
  {
    sub_1C12E0148((uint64_t)v290, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    id v294 = *(id *)v290;
    char v295 = v290[8];
    sub_1C12E0148((uint64_t)v290, type metadata accessor for FeedClusteringOptions);
    if ((v295 & 1) == 0) {
      goto LABEL_7;
    }
  }
  v296 = &selRef_minClusterSizeIPad;
  if (!v682) {
    v296 = &selRef_minClusterSizeIPhone;
  }
  id v294 = [v678 *v296];
LABEL_7:
  id v593 = v294;
  sub_1C12DBD68(v684, (uint64_t)v286, (uint64_t (*)(void))sub_1C12DBD34);
  if (v685(v286, 1, v683) == 1)
  {
    sub_1C12E0148((uint64_t)v286, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    id v617 = *(id *)v286;
    char v297 = v286[8];
    sub_1C12E0148((uint64_t)v286, type metadata accessor for FeedClusteringOptions);
    if ((v297 & 1) == 0) {
      goto LABEL_14;
    }
  }
  if (v682) {
    v298 = &selRef_minClusterSizeIPadAutoFavorite;
  }
  else {
    v298 = &selRef_minClusterSizeIPhoneAutoFavorite;
  }
  id v617 = [v678 *v298];
LABEL_14:
  sub_1C12DBD68(v681, (uint64_t)v283, (uint64_t (*)(void))sub_1C12DBD34);
  if (v685(v283, 1, v683) == 1)
  {
    sub_1C12E0148((uint64_t)v283, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    id v299 = *(id *)v283;
    char v300 = v283[8];
    sub_1C12E0148((uint64_t)v283, type metadata accessor for FeedClusteringOptions);
    if ((v300 & 1) == 0)
    {
      id v302 = v678;
      goto LABEL_22;
    }
  }
  if (v682) {
    v301 = &selRef_minClusterSizeIPadAutoFavorite;
  }
  else {
    v301 = &selRef_minClusterSizeIPhoneAutoFavorite;
  }
  id v302 = v678;
  id v299 = [v678 *v301];
LABEL_22:
  uint64_t v303 = v643;
  uint64_t v304 = (uint64_t)v616;
  id v585 = v299;
  sub_1C12DBD68(v679, (uint64_t)v280, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v305 = v685(v280, 1, v683);
  v547 = v256;
  if (v305 == 1)
  {
    sub_1C12E0148((uint64_t)v280, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    v306 = *(void **)v280;
    char v307 = v280[8];
    sub_1C12E0148((uint64_t)v280, type metadata accessor for FeedClusteringOptions);
    if ((v307 & 1) == 0)
    {
      id v589 = v306;
      goto LABEL_29;
    }
  }
  v308 = &selRef_minMoreForYouSizeIPad;
  if (!v682) {
    v308 = &selRef_minMoreForYouSizeIPhone;
  }
  id v589 = [v302 *v308];
LABEL_29:
  v309 = v685;
  uint64_t v310 = (uint64_t)v549;
  sub_1C12DBD68(v680, (uint64_t)v277, (uint64_t (*)(void))sub_1C12DBD34);
  v311 = v683;
  if (v309(v277, 1, v683) == 1)
  {
    sub_1C12E0148((uint64_t)v277, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v312 = (uint64_t)v582;
    uint64_t v313 = v676;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v303 + 56))(v582, 1, 1, v676);
LABEL_32:
    sub_1C1516D8C();
    sub_1C12E0148(v312, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_34;
  }
  uint64_t v314 = (uint64_t)&v277[v311[5]];
  uint64_t v312 = (uint64_t)v582;
  sub_1C12DBD68(v314, (uint64_t)v582, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148((uint64_t)v277, type metadata accessor for FeedClusteringOptions);
  uint64_t v313 = v676;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v312, 1, v676) == 1) {
    goto LABEL_32;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v655, v312, v313);
LABEL_34:
  sub_1C12DBD68(v684, (uint64_t)v274, (uint64_t (*)(void))sub_1C12DBD34);
  v315 = v683;
  if (v309(v274, 1, v683) == 1)
  {
    sub_1C12E0148((uint64_t)v274, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v316 = (uint64_t)v590;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v303 + 56))(v590, 1, 1, v313);
LABEL_37:
    sub_1C1516D8C();
    sub_1C12E0148(v316, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_39;
  }
  uint64_t v317 = (uint64_t)&v274[v315[5]];
  uint64_t v316 = (uint64_t)v590;
  sub_1C12DBD68(v317, (uint64_t)v590, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148((uint64_t)v274, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v316, 1, v313) == 1) {
    goto LABEL_37;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v656, v316, v313);
LABEL_39:
  sub_1C12DBD68(v681, (uint64_t)v271, (uint64_t (*)(void))sub_1C12DBD34);
  v318 = v683;
  if (v309(v271, 1, v683) == 1)
  {
    sub_1C12E0148((uint64_t)v271, (uint64_t (*)(void))sub_1C12DBD34);
    v319 = v613;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v303 + 56))(v613, 1, 1, v313);
    uint64_t v320 = (uint64_t)v618;
LABEL_42:
    sub_1C1516D8C();
    sub_1C12E0148((uint64_t)v319, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_44;
  }
  uint64_t v321 = (uint64_t)&v271[v318[5]];
  v319 = v613;
  sub_1C12DBD68(v321, (uint64_t)v613, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148((uint64_t)v271, type metadata accessor for FeedClusteringOptions);
  int v322 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v303 + 48))(v319, 1, v313);
  uint64_t v320 = (uint64_t)v618;
  if (v322 == 1) {
    goto LABEL_42;
  }
  (*(void (**)(char *, char *, uint64_t))(v303 + 32))(v657, v319, v313);
LABEL_44:
  uint64_t v323 = v544;
  sub_1C12DBD68(v680, v544, (uint64_t (*)(void))sub_1C12DBD34);
  v324 = v683;
  if (v309((char *)v323, 1, v683) == 1)
  {
    sub_1C12E0148(v323, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    uint64_t v325 = v323 + v324[6];
    v326 = *(char **)v325;
    uint64_t v327 = v323;
    char v328 = *(unsigned char *)(v325 + 8);
    sub_1C12E0148(v327, type metadata accessor for FeedClusteringOptions);
    if ((v328 & 1) == 0) {
      goto LABEL_50;
    }
  }
  v329 = &selRef_maxClusterSizeIPad;
  if (!v682) {
    v329 = &selRef_maxClusterSizeIPhone;
  }
  v326 = (char *)[v302 *v329];
LABEL_50:
  v590 = v326;
  uint64_t v330 = v545;
  sub_1C12DBD68(v684, v545, (uint64_t (*)(void))sub_1C12DBD34);
  if (v309((char *)v330, 1, v324) == 1)
  {
    sub_1C12E0148(v330, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    uint64_t v331 = v330 + v324[6];
    v613 = *(char **)v331;
    uint64_t v332 = v330;
    char v333 = *(unsigned char *)(v331 + 8);
    sub_1C12E0148(v332, type metadata accessor for FeedClusteringOptions);
    if ((v333 & 1) == 0) {
      goto LABEL_57;
    }
  }
  if (v682) {
    v334 = &selRef_maxClusterSizeIPadAutoFavorite;
  }
  else {
    v334 = &selRef_maxClusterSizeIPhoneAutoFavorite;
  }
  v613 = (char *)[v302 *v334];
LABEL_57:
  uint64_t v335 = v546;
  sub_1C12DBD68(v681, v546, (uint64_t (*)(void))sub_1C12DBD34);
  if (v685((char *)v335, 1, v324) == 1)
  {
    sub_1C12E0148(v335, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    v336 = (char **)(v335 + v324[6]);
    v616 = *v336;
    uint64_t v337 = v335;
    char v338 = *((unsigned char *)v336 + 8);
    sub_1C12E0148(v337, type metadata accessor for FeedClusteringOptions);
    if ((v338 & 1) == 0) {
      goto LABEL_64;
    }
  }
  if (v682) {
    v339 = &selRef_maxClusterSizeIPadAutoFavorite;
  }
  else {
    v339 = &selRef_maxClusterSizeIPhoneAutoFavorite;
  }
  v616 = (char *)[v302 *v339];
LABEL_64:
  uint64_t v340 = v548;
  sub_1C12DBD68(v679, v548, (uint64_t (*)(void))sub_1C12DBD34);
  v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
  if (v685((char *)v340, 1, v324) == 1)
  {
    sub_1C12E0148(v340, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v342 = (uint64_t)v614;
  }
  else
  {
    uint64_t v343 = v340 + v324[6];
    v344 = *(char **)v343;
    uint64_t v345 = v340;
    int v346 = *(unsigned __int8 *)(v343 + 8);
    sub_1C12E0148(v345, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v346 == 1;
    uint64_t v342 = (uint64_t)v614;
    if (!v347) {
      goto LABEL_71;
    }
  }
  v348 = &selRef_maxMoreForYouSizeIPad;
  if (!v682) {
    v348 = &selRef_maxMoreForYouSizeIPhone;
  }
  v344 = (char *)[v302 *v348];
LABEL_71:
  sub_1C12DBD68(v680, v310, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v310, 1, v324) == 1)
  {
    sub_1C12E0148(v310, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v304, 1, 1, v313);
LABEL_74:
    sub_1C1516D8C();
    sub_1C12E0148(v304, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_76;
  }
  sub_1C12DBD68(v310 + v324[7], v304, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v310, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v304, 1, v313) == 1) {
    goto LABEL_74;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v658, v304, v313);
LABEL_76:
  uint64_t v349 = v550;
  sub_1C12DBD68(v684, v550, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v349, 1, v324) == 1)
  {
    sub_1C12E0148(v349, (uint64_t (*)(void))sub_1C12DBD34);
    v350 = v612;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v303 + 56))(v612, 1, 1, v313);
    uint64_t v351 = (uint64_t)v547;
LABEL_79:
    sub_1C1516D8C();
    sub_1C12E0148((uint64_t)v350, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_81;
  }
  v350 = v612;
  sub_1C12DBD68(v349 + v324[7], (uint64_t)v612, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v349, type metadata accessor for FeedClusteringOptions);
  int v352 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v303 + 48))(v350, 1, v313);
  uint64_t v351 = (uint64_t)v547;
  if (v352 == 1) {
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v303 + 32))(v659, v350, v313);
LABEL_81:
  sub_1C12DBD68(v681, v351, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v353 = v341(v351, 1, v324);
  uint64_t v354 = (uint64_t)v556;
  if (v353 == 1)
  {
    sub_1C12E0148(v351, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v342, 1, 1, v313);
LABEL_84:
    sub_1C1516D8C();
    sub_1C12E0148(v342, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_86;
  }
  sub_1C12DBD68(v351 + v324[7], v342, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v351, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v342, 1, v313) == 1) {
    goto LABEL_84;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v660, v342, v313);
LABEL_86:
  uint64_t v355 = v552;
  sub_1C12DBD68(v680, v552, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v356 = v341(v355, 1, v324);
  v582 = v344;
  if (v356 == 1)
  {
    sub_1C12E0148(v355, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    v357 = (char **)(v355 + v324[11]);
    v618 = *v357;
    int v358 = *((unsigned __int8 *)v357 + 8);
    sub_1C12E0148(v355, type metadata accessor for FeedClusteringOptions);
    if (v358 != 1) {
      goto LABEL_90;
    }
  }
  v618 = (char *)objc_msgSend(v302, sel_maxEvergreenArticlesPerGroup);
LABEL_90:
  v359 = v611;
  uint64_t v360 = (uint64_t)v551;
  sub_1C12DBD68(v684, (uint64_t)v611, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341((uint64_t)v359, 1, v324) == 1)
  {
    sub_1C12E0148((uint64_t)v359, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v361 = (uint64_t)v553;
LABEL_94:
    v611 = (char *)objc_msgSend(v302, sel_maxEvergreenArticlesPerGroup);
    goto LABEL_95;
  }
  v362 = &v359[v324[11]];
  v611 = *(char **)v362;
  uint64_t v363 = (uint64_t)v359;
  int v364 = v362[8];
  sub_1C12E0148(v363, type metadata accessor for FeedClusteringOptions);
  BOOL v347 = v364 == 1;
  uint64_t v361 = (uint64_t)v553;
  if (v347) {
    goto LABEL_94;
  }
LABEL_95:
  sub_1C12DBD68(v681, v361, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v361, 1, v324) == 1)
  {
    sub_1C12E0148(v361, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    uint64_t v365 = v361 + v324[11];
    v612 = *(char **)v365;
    uint64_t v366 = v361;
    int v367 = *(unsigned __int8 *)(v365 + 8);
    sub_1C12E0148(v366, type metadata accessor for FeedClusteringOptions);
    if (v367 != 1) {
      goto LABEL_99;
    }
  }
  v612 = (char *)objc_msgSend(v302, sel_maxEvergreenArticlesPerGroup);
LABEL_99:
  sub_1C12DBD68(v679, v360, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v360, 1, v324) == 1)
  {
    sub_1C12E0148(v360, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v368 = (uint64_t)v610;
LABEL_103:
    v614 = (char *)objc_msgSend(v302, sel_maxEvergreenArticlesPerGroup);
    goto LABEL_104;
  }
  v369 = (char **)(v360 + v324[11]);
  v614 = *v369;
  int v370 = *((unsigned __int8 *)v369 + 8);
  sub_1C12E0148(v360, type metadata accessor for FeedClusteringOptions);
  BOOL v347 = v370 == 1;
  uint64_t v368 = (uint64_t)v610;
  if (v347) {
    goto LABEL_103;
  }
LABEL_104:
  uint64_t v371 = (uint64_t)v615;
  uint64_t v372 = v555;
  sub_1C12DBD68(v680, v555, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v372, 1, v324) == 1)
  {
    sub_1C12E0148(v372, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v320, 1, 1, v313);
LABEL_107:
    sub_1C1516D8C();
    sub_1C12E0148(v320, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_109;
  }
  sub_1C12DBD68(v372 + v324[12], v320, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v372, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v320, 1, v313) == 1) {
    goto LABEL_107;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v661, v320, v313);
LABEL_109:
  uint64_t v373 = v681;
  sub_1C12DBD68(v684, v354, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v374 = v341(v354, 1, v324);
  uint64_t v375 = (uint64_t)v562;
  if (v374 == 1)
  {
    sub_1C12E0148(v354, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v368, 1, 1, v313);
LABEL_112:
    sub_1C1516D8C();
    sub_1C12E0148(v368, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_114;
  }
  sub_1C12DBD68(v354 + v324[12], v368, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v354, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v368, 1, v313) == 1) {
    goto LABEL_112;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v662, v368, v313);
LABEL_114:
  uint64_t v376 = (uint64_t)v554;
  uint64_t v377 = v557;
  sub_1C12DBD68(v373, v557, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v377, 1, v324) == 1)
  {
    sub_1C12E0148(v377, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v371, 1, 1, v313);
LABEL_117:
    sub_1C1516D8C();
    sub_1C12E0148(v371, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_119;
  }
  sub_1C12DBD68(v377 + v324[12], v371, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v377, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v371, 1, v313) == 1) {
    goto LABEL_117;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v663, v371, v313);
LABEL_119:
  sub_1C12DBD68(v680, v376, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v376, 1, v324) == 1)
  {
    sub_1C12E0148(v376, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    v378 = (char **)(v376 + v324[9]);
    v615 = *v378;
    int v379 = *((unsigned __int8 *)v378 + 8);
    sub_1C12E0148(v376, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v379 == 1;
    v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
    if (!v347) {
      goto LABEL_127;
    }
  }
  if (v682) {
    v380 = &selRef_maxUnpaidArticlesIPad;
  }
  else {
    v380 = &selRef_maxUnpaidArticlesIPhone;
  }
  v615 = (char *)[v302 *v380];
LABEL_127:
  uint64_t v381 = v559;
  sub_1C12DBD68(v684, v559, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v381, 1, v324) == 1)
  {
    sub_1C12E0148(v381, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    v382 = (char **)(v381 + v324[9]);
    v610 = *v382;
    int v383 = *((unsigned __int8 *)v382 + 8);
    sub_1C12E0148(v381, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v383 == 1;
    v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
    if (!v347) {
      goto LABEL_135;
    }
  }
  if (v682) {
    v384 = &selRef_maxUnpaidArticlesIPad;
  }
  else {
    v384 = &selRef_maxUnpaidArticlesIPhone;
  }
  v610 = (char *)[v302 *v384];
LABEL_135:
  sub_1C12DBD68(v373, v375, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v375, 1, v324) == 1)
  {
    sub_1C12E0148(v375, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    uint64_t v385 = v375 + v324[9];
    uint64_t v386 = v375;
    v387 = *(char **)v385;
    int v388 = *(unsigned __int8 *)(v385 + 8);
    sub_1C12E0148(v386, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v388 == 1;
    v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
    if (!v347) {
      goto LABEL_143;
    }
  }
  if (v682) {
    v389 = &selRef_maxUnpaidArticlesIPad;
  }
  else {
    v389 = &selRef_maxUnpaidArticlesIPhone;
  }
  v387 = (char *)[v302 *v389];
LABEL_143:
  uint64_t v390 = (uint64_t)v567;
  sub_1C12DBD68(v679, (uint64_t)v567, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v390, 1, v324) == 1)
  {
    sub_1C12E0148(v390, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    uint64_t v391 = v390 + v324[9];
    uint64_t v392 = v390;
    v393 = *(char **)v391;
    int v394 = *(unsigned __int8 *)(v391 + 8);
    sub_1C12E0148(v392, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v394 == 1;
    v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
    if (!v347) {
      goto LABEL_151;
    }
  }
  if (v682) {
    v395 = &selRef_maxUnpaidArticlesIPad;
  }
  else {
    v395 = &selRef_maxUnpaidArticlesIPhone;
  }
  v393 = (char *)[v302 *v395];
LABEL_151:
  uint64_t v396 = (uint64_t)v674;
  uint64_t v397 = (uint64_t)v653;
  v567 = v393;
  uint64_t v398 = v560;
  sub_1C12DBD68(v680, v560, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v398, 1, v324) == 1)
  {
    sub_1C12E0148(v398, (uint64_t (*)(void))sub_1C12DBD34);
    v399 = v652;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v303 + 56))(v652, 1, 1, v313);
LABEL_154:
    uint64_t v402 = v680;
    sub_1C1516D8C();
    sub_1C12E0148((uint64_t)v399, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_156;
  }
  uint64_t v400 = v398 + v324[10];
  uint64_t v401 = v398;
  v399 = v652;
  sub_1C12DBD68(v400, (uint64_t)v652, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v401, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v303 + 48))(v399, 1, v313) == 1) {
    goto LABEL_154;
  }
  uint64_t v402 = v680;
  (*(void (**)(char *, char *, uint64_t))(v303 + 32))(v664, v399, v313);
LABEL_156:
  uint64_t v403 = v561;
  sub_1C12DBD68(v684, v561, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v404 = v341(v403, 1, v324);
  uint64_t v405 = (uint64_t)v568;
  v562 = v387;
  if (v404 == 1)
  {
    sub_1C12E0148(v403, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v397, 1, 1, v313);
LABEL_159:
    sub_1C1516D8C();
    sub_1C12E0148(v397, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_161;
  }
  sub_1C12DBD68(v403 + v324[10], v397, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v403, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v397, 1, v313) == 1) {
    goto LABEL_159;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v665, v397, v313);
LABEL_161:
  uint64_t v406 = v402;
  uint64_t v407 = v563;
  sub_1C12DBD68(v681, v563, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v408 = v341(v407, 1, v324);
  uint64_t v409 = (uint64_t)v564;
  id v410 = v678;
  if (v408 == 1)
  {
    sub_1C12E0148(v407, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v396, 1, 1, v313);
LABEL_164:
    sub_1C1516D8C();
    sub_1C12E0148(v396, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_166;
  }
  sub_1C12DBD68(v407 + v324[10], v396, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v407, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v396, 1, v313) == 1) {
    goto LABEL_164;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v666, v396, v313);
LABEL_166:
  uint64_t v411 = (uint64_t)v558;
  sub_1C12DBD68(v406, v409, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v409, 1, v324) == 1)
  {
    sub_1C12E0148(v409, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    v412 = (char **)(v409 + v324[13]);
    v674 = *v412;
    int v413 = *((unsigned __int8 *)v412 + 8);
    sub_1C12E0148(v409, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v413 == 1;
    v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
    if (!v347) {
      goto LABEL_174;
    }
  }
  if (v682) {
    v414 = &selRef_maxPublisherOccurrencesIPad;
  }
  else {
    v414 = &selRef_maxPublisherOccurrencesIPhone;
  }
  v674 = (char *)[v410 *v414];
LABEL_174:
  sub_1C12DBD68(v684, v411, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v411, 1, v324) == 1)
  {
    sub_1C12E0148(v411, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    uint64_t v415 = v411 + v324[13];
    v652 = *(char **)v415;
    int v416 = *(unsigned __int8 *)(v415 + 8);
    sub_1C12E0148(v411, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v416 == 1;
    v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
    if (!v347) {
      goto LABEL_182;
    }
  }
  if (v682) {
    v417 = &selRef_maxPublisherOccurrencesIPad;
  }
  else {
    v417 = &selRef_maxPublisherOccurrencesIPhone;
  }
  v652 = (char *)[v410 *v417];
LABEL_182:
  uint64_t v418 = v566;
  sub_1C12DBD68(v679, v566, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v418, 1, v324) == 1)
  {
    sub_1C12E0148(v418, (uint64_t (*)(void))sub_1C12DBD34);
  }
  else
  {
    v419 = (char **)(v418 + v324[13]);
    v653 = *v419;
    int v420 = *((unsigned __int8 *)v419 + 8);
    sub_1C12E0148(v418, type metadata accessor for FeedClusteringOptions);
    BOOL v347 = v420 == 1;
    v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
    if (!v347) {
      goto LABEL_190;
    }
  }
  if (v682) {
    v421 = &selRef_maxPublisherOccurrencesIPad;
  }
  else {
    v421 = &selRef_maxPublisherOccurrencesIPhone;
  }
  v653 = (char *)[v410 *v421];
LABEL_190:
  uint64_t v422 = (uint64_t)v577;
  uint64_t v423 = (uint64_t)v575;
  uint64_t v424 = (uint64_t)v573;
  uint64_t v425 = (uint64_t)v565;
  sub_1C12DBD68(v406, v405, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v405, 1, v324) == 1)
  {
    sub_1C12E0148(v405, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v423, 1, 1, v313);
LABEL_193:
    sub_1C1516D8C();
    sub_1C12E0148(v423, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_195;
  }
  sub_1C12DBD68(v405 + v324[14], v423, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v405, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v423, 1, v313) == 1) {
    goto LABEL_193;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v667, v423, v313);
LABEL_195:
  uint64_t v426 = v681;
  uint64_t v427 = v569;
  sub_1C12DBD68(v684, v569, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v427, 1, v324) == 1)
  {
    sub_1C12E0148(v427, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v422, 1, 1, v313);
LABEL_198:
    sub_1C1516D8C();
    sub_1C12E0148(v422, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_200;
  }
  sub_1C12DBD68(v427 + v324[14], v422, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v427, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v422, 1, v313) == 1) {
    goto LABEL_198;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v668, v422, v313);
LABEL_200:
  uint64_t v428 = v570;
  sub_1C12DBD68(v406, v570, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v428, 1, v324) == 1)
  {
    sub_1C12E0148(v428, (uint64_t (*)(void))sub_1C12DBD34);
    v429 = v674;
  }
  else
  {
    uint64_t v430 = v428 + v324[15];
    uint64_t v431 = v428;
    v432 = *(char **)v430;
    int v433 = *(unsigned __int8 *)(v430 + 8);
    sub_1C12E0148(v431, type metadata accessor for FeedClusteringOptions);
    v429 = v674;
    if (!v433) {
      v429 = v432;
    }
  }
  v577 = v429;
  uint64_t v434 = (uint64_t)v571;
  sub_1C12DBD68(v684, (uint64_t)v571, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v434, 1, v324) == 1)
  {
    sub_1C12E0148(v434, (uint64_t (*)(void))sub_1C12DBD34);
    v435 = v652;
  }
  else
  {
    uint64_t v436 = v434 + v324[15];
    uint64_t v437 = v434;
    v438 = *(char **)v436;
    int v439 = *(unsigned __int8 *)(v436 + 8);
    sub_1C12E0148(v437, type metadata accessor for FeedClusteringOptions);
    v435 = v652;
    if (!v439) {
      v435 = v438;
    }
  }
  v571 = v435;
  uint64_t v440 = v572;
  sub_1C12DBD68(v426, v572, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v440, 1, v324) == 1)
  {
    sub_1C12E0148(v440, (uint64_t (*)(void))sub_1C12DBD34);
    v441 = v674;
  }
  else
  {
    uint64_t v442 = v440 + v324[15];
    uint64_t v443 = v440;
    v444 = *(char **)v442;
    int v445 = *(unsigned __int8 *)(v442 + 8);
    sub_1C12E0148(v443, type metadata accessor for FeedClusteringOptions);
    v441 = v674;
    if (!v445) {
      v441 = v444;
    }
  }
  v573 = v441;
  sub_1C12DBD68(v679, v425, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v425, 1, v324) == 1)
  {
    sub_1C12E0148(v425, (uint64_t (*)(void))sub_1C12DBD34);
    v446 = v653;
  }
  else
  {
    uint64_t v447 = v425 + v324[15];
    v448 = *(char **)v447;
    int v449 = *(unsigned __int8 *)(v447 + 8);
    sub_1C12E0148(v425, type metadata accessor for FeedClusteringOptions);
    v446 = v653;
    if (!v449) {
      v446 = v448;
    }
  }
  v575 = v446;
  uint64_t v450 = (uint64_t)v654;
  uint64_t v451 = v584;
  uint64_t v452 = (uint64_t)v583;
  sub_1C12DBD68(v406, v424, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v424, 1, v324) == 1)
  {
    sub_1C12E0148(v424, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v453 = v581;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v581, 1, 1, v313);
LABEL_219:
    sub_1C1516D8C();
    sub_1C12E0148(v453, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_221;
  }
  uint64_t v454 = v424 + v324[16];
  uint64_t v455 = v424;
  uint64_t v453 = v581;
  sub_1C12DBD68(v454, v581, (uint64_t (*)(void))sub_1C0EF837C);
  uint64_t v456 = v455;
  uint64_t v426 = v681;
  sub_1C12E0148(v456, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v453, 1, v313) == 1) {
    goto LABEL_219;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v669, v453, v313);
LABEL_221:
  uint64_t v457 = v574;
  sub_1C12DBD68(v684, v574, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v457, 1, v324) == 1)
  {
    sub_1C12E0148(v457, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v452, 1, 1, v313);
LABEL_224:
    sub_1C1516D8C();
    sub_1C12E0148(v452, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_226;
  }
  sub_1C12DBD68(v457 + v324[16], v452, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v457, type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v452, 1, v313) == 1) {
    goto LABEL_224;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v670, v452, v313);
LABEL_226:
  uint64_t v458 = v426;
  uint64_t v459 = v576;
  sub_1C12DBD68(v458, v576, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v460 = v341(v459, 1, v324);
  uint64_t v461 = (uint64_t)v579;
  if (v460 == 1)
  {
    sub_1C12E0148(v459, (uint64_t (*)(void))sub_1C12DBD34);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56))(v450, 1, 1, v313);
    uint64_t v462 = (uint64_t)v578;
LABEL_229:
    sub_1C1516D8C();
    sub_1C12E0148(v450, (uint64_t (*)(void))sub_1C0EF837C);
    goto LABEL_231;
  }
  sub_1C12DBD68(v459 + v324[16], v450, (uint64_t (*)(void))sub_1C0EF837C);
  sub_1C12E0148(v459, type metadata accessor for FeedClusteringOptions);
  int v463 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v303 + 48))(v450, 1, v313);
  uint64_t v462 = (uint64_t)v578;
  if (v463 == 1) {
    goto LABEL_229;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v671, v450, v313);
LABEL_231:
  sub_1C12DBD68(v406, v462, (uint64_t (*)(void))sub_1C12DBD34);
  unsigned int v464 = v341(v462, 1, v324);
  uint64_t v465 = (uint64_t)v580;
  if (v464 == 1)
  {
    sub_1C12E0148(v462, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v466 = sub_1C1516D2C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v466 - 8) + 56))(v672, 1, 1, v466);
  }
  else
  {
    sub_1C12DBD68(v462 + v324[19], v672, (uint64_t (*)(void))sub_1C0607698);
    sub_1C12E0148(v462, type metadata accessor for FeedClusteringOptions);
  }
  sub_1C12DBD68(v684, v461, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v461, 1, v324) == 1)
  {
    sub_1C12E0148(v461, (uint64_t (*)(void))sub_1C12DBD34);
    uint64_t v467 = sub_1C1516D2C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v467 - 8) + 56))(v673, 1, 1, v467);
  }
  else
  {
    sub_1C12DBD68(v461 + v324[19], v673, (uint64_t (*)(void))sub_1C0607698);
    sub_1C12E0148(v461, type metadata accessor for FeedClusteringOptions);
  }
  v468 = *(void (**)(char *, char *, uint64_t))(v303 + 16);
  v468(v619, v662, v313);
  v468(v620, v665, v313);
  v468(v621, v668, v313);
  v468(v623, v670, v313);
  v468(v622, v659, v313);
  uint64_t v682 = v303 + 16;
  v654 = (void (*)(char *, uint64_t, uint64_t))v468;
  v468(v624, v656, v313);
  sub_1C12DBD68(v684, v465, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v465, 1, v324) == 1)
  {
    v469 = sub_1C12DBD34;
    uint64_t v470 = v465;
LABEL_241:
    uint64_t v473 = sub_1C12E0148(v470, (uint64_t (*)(void))v469);
    MEMORY[0x1C18BE930](v473);
    goto LABEL_243;
  }
  uint64_t v471 = v536;
  sub_1C12DBD68(v465 + v324[8], v536, (uint64_t (*)(void))sub_1BFF90234);
  sub_1C12E0148(v465, type metadata accessor for FeedClusteringOptions);
  uint64_t v472 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v472 - 8) + 48))(v471, 1, v472) == 1)
  {
    v469 = sub_1BFF90234;
    uint64_t v470 = v471;
    goto LABEL_241;
  }
  v654(v675, v471 + *(int *)(v472 + 24), v313);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v474 = v532;
  v341 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
  sub_1C1516DEC();
  sub_1C12E0148(v471, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v602 + 32))(v625, v474, v603);
LABEL_243:
  sub_1C12DBD68(v684, v451, (uint64_t (*)(void))sub_1C12DBD34);
  if (v341(v451, 1, v324) == 1)
  {
    sub_1C12E0148(v451, (uint64_t (*)(void))sub_1C12DBD34);
    sub_1C1516DAC();
  }
  else
  {
    v475 = (uint64_t *)(v451 + v324[17]);
    sub_1C091BFC4(*v475, v475[1], v475[2], v475[3], v475[4]);
    v476 = v537;
    sub_1C1516DBC();
    sub_1C12E0148(v451, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v645 + 32))(v626, v476, v646);
  }
  uint64_t v584 = a14;
  sub_1C12DBD68(v673, v677, (uint64_t (*)(void))sub_1C0607698);
  sub_1C1516CAC();
  sub_1C1516CBC();
  sub_1C1516CCC();
  sub_1C1516C9C();
  sub_1C1516C6C();
  sub_1C1516C7C();
  sub_1C1516CDC();
  sub_1C1516C8C();
  sub_1C12E009C(&qword_1EB862898, 255, MEMORY[0x1E4FB77E0]);
  sub_1C12E009C(&qword_1EB862890, 255, MEMORY[0x1E4FB77B0]);
  sub_1C1516D4C();
  uint64_t v477 = v676;
  v478 = (void (*)(char *, char *, uint64_t))v654;
  v654(v627, (uint64_t)v663, v676);
  v478(v628, v666, v477);
  v478(v630, v671, v477);
  v478(v629, v660, v477);
  v478(v631, v657, v477);
  uint64_t v479 = v681;
  uint64_t v480 = v586;
  sub_1C12DBD68(v681, v586, (uint64_t (*)(void))sub_1C12DBD34);
  v481 = v683;
  if (v685((char *)v480, 1, v683) == 1)
  {
    uint64_t v482 = sub_1C12E0148(v480, (uint64_t (*)(void))sub_1C12DBD34);
    v483 = v633;
    uint64_t v484 = (uint64_t)v588;
LABEL_250:
    MEMORY[0x1C18BE930](v482);
    goto LABEL_252;
  }
  uint64_t v485 = v538;
  sub_1C12DBD68(v480 + v481[8], v538, (uint64_t (*)(void))sub_1BFF90234);
  sub_1C12E0148(v480, type metadata accessor for FeedClusteringOptions);
  uint64_t v486 = type metadata accessor for FeedGroupBundleArticleQuotas();
  int v487 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v486 - 8) + 48))(v485, 1, v486);
  v483 = v633;
  uint64_t v484 = (uint64_t)v588;
  if (v487 == 1)
  {
    uint64_t v482 = sub_1C12E0148(v485, (uint64_t (*)(void))sub_1BFF90234);
    goto LABEL_250;
  }
  v654(v675, v485 + *(int *)(v486 + 24), v477);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v488 = v533;
  uint64_t v479 = v681;
  sub_1C1516DEC();
  sub_1C12E0148(v485, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v602 + 32))(v632, v488, v603);
LABEL_252:
  v489 = (unsigned int (*)(uint64_t, uint64_t, int *))v685;
  sub_1C12DBD68(v479, v484, (uint64_t (*)(void))sub_1C12DBD34);
  v490 = v683;
  if (v489(v484, 1, v683) == 1)
  {
    sub_1C12E0148(v484, (uint64_t (*)(void))sub_1C12DBD34);
    sub_1C1516DAC();
  }
  else
  {
    v491 = (uint64_t *)(v484 + v490[17]);
    sub_1C091BFC4(*v491, v491[1], v491[2], v491[3], v491[4]);
    v492 = v539;
    sub_1C1516DBC();
    sub_1C12E0148(v484, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v645 + 32))(v483, v492, v646);
  }
  uint64_t v493 = sub_1C1516D2C();
  uint64_t v494 = *(void *)(v493 - 8);
  v495 = *(char **)(v494 + 56);
  v626 = (char *)v493;
  v625 = v495;
  v624 = (char *)(v494 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t))v495)(v677, 1, 1);
  sub_1C1516D8C();
  uint64_t v684 = sub_1C1516BAC();
  sub_1C1516BBC();
  sub_1C1516BCC();
  sub_1C1516B9C();
  sub_1C1516B6C();
  sub_1C1516B7C();
  sub_1C1516BDC();
  sub_1C1516B8C();
  sub_1C12E009C(&qword_1EB862878, 255, MEMORY[0x1E4FB7740]);
  sub_1C12E009C(&qword_1EB862870, 255, MEMORY[0x1E4FB7710]);
  sub_1C1516D4C();
  id v496 = v678;
  objc_msgSend(v678, sel_channelScoreWeight);
  uint64_t v684 = v497;
  (*(void (**)(char *, void, uint64_t))(v599 + 104))(v650, **((unsigned int **)&unk_1E6418DB8 + v587), v600);
  uint64_t v681 = sub_1C12DCF44(v584);
  objc_msgSend(v496, sel_managedTopicMultiplier);
  v652 = v498;
  objc_msgSend(v496, sel_managedWinnerTopicMultiplier);
  v633 = (char *)objc_msgSend(v496, sel_maxNumberOfTotalTopicAndChannelGroups);
  uint64_t v499 = v679;
  uint64_t v500 = v591;
  sub_1C12DBD68(v679, v591, (uint64_t (*)(void))sub_1C12DBD34);
  v501 = v683;
  if (v685((char *)v500, 1, v683) == 1)
  {
    uint64_t v502 = sub_1C12E0148(v500, (uint64_t (*)(void))sub_1C12DBD34);
    v503 = v636;
LABEL_259:
    MEMORY[0x1C18BE930](v502);
    goto LABEL_261;
  }
  uint64_t v504 = v540;
  sub_1C12DBD68(v500 + v501[8], v540, (uint64_t (*)(void))sub_1BFF90234);
  sub_1C12E0148(v500, type metadata accessor for FeedClusteringOptions);
  uint64_t v505 = type metadata accessor for FeedGroupBundleArticleQuotas();
  int v506 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v505 - 8) + 48))(v504, 1, v505);
  v503 = v636;
  if (v506 == 1)
  {
    uint64_t v502 = sub_1C12E0148(v504, (uint64_t (*)(void))sub_1BFF90234);
    v501 = v683;
    goto LABEL_259;
  }
  v654(v675, v504 + *(int *)(v505 + 24), v676);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v507 = v534;
  sub_1C1516DEC();
  sub_1C12E0148(v504, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v602 + 32))(v635, v507, v603);
  v501 = v683;
LABEL_261:
  uint64_t v508 = v592;
  sub_1C12DBD68(v499, v592, (uint64_t (*)(void))sub_1C12DBD34);
  if (v685((char *)v508, 1, v501) == 1)
  {
    sub_1C12E0148(v508, (uint64_t (*)(void))sub_1C12DBD34);
    sub_1C1516DAC();
  }
  else
  {
    v509 = (uint64_t *)(v508 + v501[17]);
    sub_1C091BFC4(*v509, v509[1], v509[2], v509[3], v509[4]);
    v510 = v541;
    sub_1C1516DBC();
    sub_1C12E0148(v508, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v645 + 32))(v503, v510, v646);
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, char *))v625)(v677, 1, 1, v626);
  sub_1C1516D8C();
  sub_1C1516D8C();
  sub_1C1516D8C();
  sub_1C1516D8C();
  sub_1C1516D8C();
  sub_1C1516D8C();
  uint64_t v679 = sub_1C1516C2C();
  v632 = (char *)sub_1C1516C3C();
  v631 = (char *)sub_1C1516C4C();
  sub_1C1516C1C();
  sub_1C1516BEC();
  sub_1C1516BFC();
  sub_1C1516C5C();
  sub_1C1516C0C();
  sub_1C12E009C(&qword_1EB862888, 255, MEMORY[0x1E4FB7790]);
  sub_1C12E009C(&qword_1EB862880, 255, MEMORY[0x1E4FB7760]);
  sub_1C1516D4C();
  id v511 = v678;
  objc_msgSend(v678, sel_relatedTopicMultiplier);
  objc_msgSend(v511, sel_relatedTopicRatioFilter);
  LODWORD(v679) = objc_msgSend(v511, sel_reorderHeadlinesUsingEmbeddingScoreBeforeGrouping);
  v653 = (char *)objc_msgSend(v511, sel_thumbnailMinHammingDistance);
  objc_msgSend(v511, sel_topicAutofavoritedMultiplier);
  uint64_t v512 = v676;
  v513 = (void (*)(char *, char *, uint64_t))v654;
  v654(v637, (uint64_t)v661, v676);
  v513(v638, v664, v512);
  v513(v639, v667, v512);
  v513(v641, v669, v512);
  v513(v640, v658, v512);
  v513(v642, v655, v512);
  uint64_t v514 = v680;
  uint64_t v515 = v594;
  sub_1C12DBD68(v680, v594, (uint64_t (*)(void))sub_1C12DBD34);
  v516 = v683;
  if (v685((char *)v515, 1, v683) == 1)
  {
    v517 = sub_1C12DBD34;
    uint64_t v518 = v515;
LABEL_268:
    uint64_t v521 = sub_1C12E0148(v518, (uint64_t (*)(void))v517);
    v522 = v648;
    MEMORY[0x1C18BE930](v521);
    goto LABEL_270;
  }
  uint64_t v519 = v542;
  sub_1C12DBD68(v515 + v516[8], v542, (uint64_t (*)(void))sub_1BFF90234);
  sub_1C12E0148(v515, type metadata accessor for FeedClusteringOptions);
  uint64_t v520 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v520 - 8) + 48))(v519, 1, v520) == 1)
  {
    v517 = sub_1BFF90234;
    uint64_t v518 = v519;
    goto LABEL_268;
  }
  v654(v675, v519 + *(int *)(v520 + 24), v512);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v523 = v535;
  v516 = v683;
  sub_1C1516DEC();
  sub_1C12E0148(v519, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  (*(void (**)(char *, char *, uint64_t))(v602 + 32))(v644, v523, v603);
  v522 = v648;
LABEL_270:
  uint64_t v524 = v601;
  LODWORD(v682) = a13;
  LODWORD(v675) = a12;
  sub_1C12DBD68(v514, v601, (uint64_t (*)(void))sub_1C12DBD34);
  if (v685((char *)v524, 1, v516) == 1)
  {
    sub_1C12E0148(v524, (uint64_t (*)(void))sub_1C12DBD34);
    sub_1C1516DAC();
  }
  else
  {
    v525 = (uint64_t *)(v524 + v516[17]);
    sub_1C091BFC4(*v525, v525[1], v525[2], v525[3], v525[4]);
    v526 = v543;
    sub_1C1516DBC();
    sub_1C12E0148(v524, type metadata accessor for FeedClusteringOptions);
    (*(void (**)(char *, char *, uint64_t))(v645 + 32))(v522, v526, v646);
  }
  sub_1C12DBD68(v672, v677, (uint64_t (*)(void))sub_1C0607698);
  sub_1C1516A0C();
  sub_1C1516A1C();
  sub_1C1516A2C();
  sub_1C15169FC();
  sub_1C15169DC();
  sub_1C15169EC();
  sub_1C1516A3C();
  sub_1C1516A4C();
  sub_1C12E009C(&qword_1EB861130, 255, MEMORY[0x1E4FB7690]);
  sub_1C12E009C((unint64_t *)&unk_1EB862848, 255, MEMORY[0x1E4FB76A0]);
  sub_1C1516D4C();
  id v527 = v678;
  objc_msgSend(v678, sel_topicFavoritedMultiplier);
  objc_msgSend(v527, sel_topicGroupSizeMultiplier);
  objc_msgSend(v527, sel_topicGroupableMultiplier);
  objc_msgSend(v527, sel_topicScoreWeight);
  objc_msgSend(v527, sel_topicSpecificityMultiplier);
  sub_1C1516A5C();
  sub_1C12E0148(v673, (uint64_t (*)(void))sub_1C0607698);
  sub_1C12E0148(v672, (uint64_t (*)(void))sub_1C0607698);
  v528 = *(void (**)(char *, uint64_t))(v643 + 8);
  uint64_t v529 = v676;
  v528(v671, v676);
  v528(v670, v529);
  v528(v669, v529);
  v528(v668, v529);
  v528(v667, v529);
  v528(v666, v529);
  v528(v665, v529);
  v528(v664, v529);
  v528(v663, v529);
  v528(v662, v529);
  v528(v661, v529);
  v528(v660, v529);
  v528(v659, v529);
  v528(v658, v529);
  v528(v657, v529);
  v528(v656, v529);
  return ((uint64_t (*)(char *, uint64_t))v528)(v655, v529);
}

uint64_t sub_1C12D3420@<X0>(char **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  sub_1C0607698(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v78 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1516DCC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v88 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF90234(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1516E0C();
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v68 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v87 = (char *)&v67 - v13;
  sub_1C0EF837C();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v74 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v72 = (char *)&v67 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v67 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v67 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v67 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v67 - v28;
  uint64_t v30 = sub_1C1516D9C();
  uint64_t v80 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v67 = (char *)&v67 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v86 = (char *)&v67 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v84 = (char *)&v67 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v85 = (char *)&v67 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v83 = (char *)&v67 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v82 = (char *)&v67 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v81 = (char *)&v67 - v43;
  uint64_t v44 = (int *)type metadata accessor for FeedClusteringOptions(0);
  uint64_t v45 = (char *)a1 + v44[11];
  int v46 = v45[8];
  uint64_t v76 = v9;
  uint64_t v73 = v23;
  uint64_t v47 = v20;
  if (v46 == 1) {
    uint64_t v77 = sub_1C1516AEC();
  }
  else {
    uint64_t v77 = *(void *)v45;
  }
  sub_1C12DBD68((uint64_t)a1 + v44[12], (uint64_t)v29, (uint64_t (*)(void))sub_1C0EF837C);
  uint64_t v48 = v80;
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  if (v49(v29, 1, v30) == 1)
  {
    sub_1C1516D8C();
    sub_1C12E0148((uint64_t)v29, (uint64_t (*)(void))sub_1C0EF837C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v81, v29, v30);
  }
  uint64_t v50 = (char *)a1 + v44[9];
  uint64_t v51 = (uint64_t)v47;
  if (v50[8] == 1) {
    uint64_t v75 = sub_1C1516B0C();
  }
  else {
    uint64_t v75 = *(void *)v50;
  }
  uint64_t v52 = v80;
  sub_1C12DBD68((uint64_t)a1 + v44[10], (uint64_t)v26, (uint64_t (*)(void))sub_1C0EF837C);
  if (v49(v26, 1, v30) == 1)
  {
    sub_1C1516D8C();
    sub_1C12E0148((uint64_t)v26, (uint64_t (*)(void))sub_1C0EF837C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v82, v26, v30);
  }
  uint64_t v53 = (char *)a1 + v44[13];
  uint64_t v54 = (uint64_t)v72;
  if (v53[8] == 1) {
    uint64_t v80 = sub_1C1516B2C();
  }
  else {
    uint64_t v80 = *(void *)v53;
  }
  uint64_t v55 = (uint64_t)v73;
  sub_1C12DBD68((uint64_t)a1 + v44[14], (uint64_t)v73, (uint64_t (*)(void))sub_1C0EF837C);
  if (v49((char *)v55, 1, v30) == 1)
  {
    sub_1C1516D8C();
    sub_1C12E0148(v55, (uint64_t (*)(void))sub_1C0EF837C);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v83, v55, v30);
  }
  uint64_t v56 = (char **)((char *)a1 + v44[15]);
  if (*((unsigned char *)v56 + 8) == 1) {
    uint64_t v73 = (char *)sub_1C1516ACC();
  }
  else {
    uint64_t v73 = *v56;
  }
  uint64_t v57 = v52;
  sub_1C12DBD68((uint64_t)a1 + v44[16], v51, (uint64_t (*)(void))sub_1C0EF837C);
  unsigned int v58 = v49((char *)v51, 1, v30);
  uint64_t v59 = (uint64_t)v74;
  if (v58 == 1)
  {
    sub_1C1516D8C();
    sub_1C12E0148(v51, (uint64_t (*)(void))sub_1C0EF837C);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v85, v51, v30);
  }
  uint64_t v60 = (char *)a1 + v44[6];
  if (v60[8] == 1) {
    uint64_t v71 = sub_1C1516A7C();
  }
  else {
    uint64_t v71 = *(void *)v60;
  }
  sub_1C12DBD68((uint64_t)a1 + v44[7], v54, (uint64_t (*)(void))sub_1C0EF837C);
  if (v49((char *)v54, 1, v30) == 1)
  {
    sub_1C1516D8C();
    sub_1C12E0148(v54, (uint64_t (*)(void))sub_1C0EF837C);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v84, v54, v30);
  }
  if (*((unsigned char *)a1 + 8) == 1) {
    uint64_t v72 = (char *)sub_1C1516A9C();
  }
  else {
    uint64_t v72 = *a1;
  }
  sub_1C12DBD68((uint64_t)a1 + v44[5], v59, (uint64_t (*)(void))sub_1C0EF837C);
  if (v49((char *)v59, 1, v30) == 1)
  {
    sub_1C1516D8C();
    sub_1C12E0148(v59, (uint64_t (*)(void))sub_1C0EF837C);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v86, v59, v30);
  }
  uint64_t v61 = (uint64_t)v76;
  sub_1C12DBD68((uint64_t)a1 + v44[8], (uint64_t)v76, (uint64_t (*)(void))sub_1BFF90234);
  uint64_t v62 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62) == 1)
  {
    uint64_t v63 = sub_1C12E0148(v61, (uint64_t (*)(void))sub_1BFF90234);
    MEMORY[0x1C18BE680](v63);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v67, v61 + *(int *)(v62 + 24), v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v64 = v68;
    sub_1C1516DEC();
    sub_1C12E0148(v61, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v87, v64, v70);
  }
  uint64_t v65 = (uint64_t *)((char *)a1 + v44[17]);
  sub_1C091BFC4(*v65, v65[1], v65[2], v65[3], v65[4]);
  sub_1C1516DBC();
  sub_1C12DBD68((uint64_t)a1 + v44[19], v78, (uint64_t (*)(void))sub_1C0607698);
  uint64_t v76 = (char *)sub_1C1516AFC();
  sub_1C1516B1C();
  sub_1C1516B3C();
  sub_1C1516ADC();
  sub_1C1516A8C();
  sub_1C1516AAC();
  sub_1C1516B5C();
  sub_1C1516ABC();
  sub_1C12E009C((unint64_t *)&unk_1EB862860, 255, MEMORY[0x1E4FB76F0]);
  sub_1C12E009C(&qword_1EB862858, 255, MEMORY[0x1E4FB76C0]);
  return sub_1C1516D4C();
}

uint64_t sub_1C12D3FE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v103 = *v4;
  uint64_t v9 = sub_1C1516E1C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v89 - v15;
  uint64_t v17 = *a2;
  uint64_t v93 = a2[1];
  uint64_t v94 = v17;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v18((char *)&v89 - v15, a1, v9, v14);
  uint64_t v95 = v12;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v12, a1, v9);
  uint64_t v99 = a3;
  swift_bridgeObjectRetain();
  if (!sub_1C12D54DC())
  {
    int v46 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v44 = v10 + 8;
    uint64_t v45 = v46;
    v46(v16, v9);
    if (qword_1EB85FD10 != -1) {
      swift_once();
    }
    id v47 = (id)qword_1EB93C330;
    sub_1C151F38C();
    uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
    sub_1C15197BC();

    id v49 = objc_msgSend(objc_msgSend(*(id *)(v100 + 16), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
    swift_unknownObjectRelease();
    uint64_t v50 = v94;
    if (qword_1EB863760 != -1) {
      swift_once();
    }
    if (objc_msgSend(v49, sel_respondsToSelector_, sel_splitTopicGroups)) {
      objc_msgSend(v49, sel_splitTopicGroups);
    }
    sub_1C12E009C(&qword_1EB865088, v51, (void (*)(uint64_t))type metadata accessor for FeedClusteringService);
    if ((sub_1C1516FDC() & 1) == 0)
    {
      id v68 = (id)qword_1EB93C330;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v69 = v93;
      swift_bridgeObjectRetain();
      v45(v95, v9);
      goto LABEL_41;
    }
    id v98 = v49;
    uint64_t v101 = v45;
    uint64_t v91 = v44;
    uint64_t v92 = v9;
    uint64_t v113 = v48;
    uint64_t v102 = *(void *)(v50 + 16);
    if (!v102)
    {
LABEL_40:
      uint64_t v78 = (void *)qword_1EB93C330;
      sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1C1527210;
      uint64_t v110 = *(void *)(v50 + 16);
      id v80 = v78;
      uint64_t v81 = sub_1C152088C();
      uint64_t v83 = v82;
      uint64_t v84 = MEMORY[0x1E4FBB1A0];
      *(void *)(v79 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v85 = sub_1BFE9C558();
      *(void *)(v79 + 64) = v85;
      *(void *)(v79 + 32) = v81;
      *(void *)(v79 + 40) = v83;
      uint64_t v110 = v48[2];
      uint64_t v86 = sub_1C152088C();
      *(void *)(v79 + 96) = v84;
      *(void *)(v79 + 104) = v85;
      *(void *)(v79 + 72) = v86;
      *(void *)(v79 + 80) = v87;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v69 = v93;
      swift_bridgeObjectRetain();
      v101(v95, v92);
      uint64_t v50 = (uint64_t)v48;
      goto LABEL_41;
    }
    uint64_t v90 = a4;
    swift_bridgeObjectRetain_n();
    unint64_t v53 = 0;
    a4 = (uint64_t *)(v50 + 48);
    while (1)
    {
      uint64_t v55 = (void *)*(a4 - 2);
      uint64_t v54 = (void *)*(a4 - 1);
      uint64_t v56 = *a4;
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v57 = sub_1C12D4B2C(v55, v99, v53);
      uint64_t v103 = v54;
      uint64_t v104 = v55;
      uint64_t v105 = v54;
      uint64_t v106 = v56;
      sub_1C12D5A3C(&v110, &v107, (uint64_t)&v104, v57);
      uint64_t v9 = v110;
      uint64_t v58 = v111;
      uint64_t v59 = v112;
      uint64_t v60 = v107;
      uint64_t v10 = v108;
      uint64_t v61 = v109;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C12DF0F4(v60);
      sub_1C12DF134(v60);
      if (v113[2] < v53) {
        break;
      }
      sub_1C0246C8C(v53, v53, v9, v58, v59);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C12DF0F4(v60);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if (v60)
      {
        uint64_t v62 = v113;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v62 = sub_1C0EE44DC(0, v62[2] + 1, 1, v62);
        }
        unint64_t v64 = v62[2];
        unint64_t v63 = v62[3];
        uint64_t v65 = (char *)(v64 + 1);
        if (v64 >= v63 >> 1)
        {
          uint64_t v97 = (char *)(v64 + 1);
          uint64_t v67 = sub_1C0EE44DC((void *)(v63 > 1), v64 + 1, 1, v62);
          uint64_t v65 = v97;
          uint64_t v62 = v67;
        }
        v62[2] = v65;
        uint64_t v66 = &v62[3 * v64];
        v66[4] = v60;
        v66[5] = v10;
        v66[6] = v61;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1C12DF134(v60);
        sub_1C12DF134(v60);
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        uint64_t v113 = v62;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1C12DF134(0);
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
      }
      a4 += 3;
      if (v102 == ++v53)
      {
        uint64_t v50 = v94;
        swift_bridgeObjectRelease_n();
        uint64_t v48 = v113;
        a4 = v90;
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v97 = v16;
  if (qword_1EB85FD10 != -1) {
LABEL_43:
  }
    swift_once();
  uint64_t v19 = &unk_1EB93C000;
  id v20 = (id)qword_1EB93C330;
  sub_1C151F38C();
  uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  sub_1C15197BC();

  uint64_t v96 = *(void *)(v94 + 16);
  if (v96)
  {
    uint64_t v91 = v10;
    uint64_t v92 = v9;
    uint64_t v90 = a4;
    uint64_t v22 = 0;
    uint64_t v23 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    uint64_t v24 = v21;
    do
    {
      uint64_t v101 = (void (*)(char *, uint64_t))v21;
      uint64_t v27 = (void *)*(v23 - 1);
      uint64_t v28 = *v23;
      uint64_t v104 = (void *)*(v23 - 2);
      uint64_t v26 = v104;
      uint64_t v105 = v27;
      uint64_t v106 = v28;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_1C12D4B2C(v26, v99, v22);
      sub_1C12D5A3C(&v110, &v107, (uint64_t)&v104, v29);
      uint64_t v30 = v110;
      uint64_t v31 = v111;
      uint64_t v32 = v112;
      uint64_t v33 = v107;
      uint64_t v102 = v108;
      uint64_t v34 = v109;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v98 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v24 = sub_1C0EE44DC(0, v24[2] + 1, 1, v24);
      }
      unint64_t v37 = v24[2];
      unint64_t v36 = v24[3];
      uint64_t v103 = v24;
      if (v37 >= v36 >> 1) {
        uint64_t v103 = sub_1C0EE44DC((void *)(v36 > 1), v37 + 1, 1, v103);
      }
      uint64_t v38 = v103;
      v103[2] = v37 + 1;
      uint64_t v24 = v38;
      uint64_t v39 = &v38[3 * v37];
      v39[4] = v30;
      v39[5] = v31;
      v39[6] = v32;
      if (v33)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = v101;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1C0EE44DC(0, v21[2] + 1, 1, v21);
        }
        unint64_t v41 = v21[2];
        unint64_t v40 = v21[3];
        if (v41 >= v40 >> 1) {
          uint64_t v21 = sub_1C0EE44DC((void *)(v40 > 1), v41 + 1, 1, v21);
        }
        v21[2] = v41 + 1;
        uint64_t v42 = &v21[3 * v41];
        uint64_t v43 = v102;
        v42[4] = v33;
        v42[5] = v43;
        v42[6] = v98;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1C12DF134(v33);
        uint64_t v25 = v97;
        uint64_t v24 = v103;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v21 = v101;
        uint64_t v25 = v97;
      }
      ++v22;
      v23 += 3;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    while (v96 != v22);
    swift_bridgeObjectRelease();
    a4 = v90;
    uint64_t v9 = v92;
    uint64_t v10 = v91;
    uint64_t v52 = v24;
    uint64_t v19 = (void *)&unk_1EB93C000;
  }
  else
  {
    uint64_t v52 = v21;
    uint64_t v25 = v97;
  }
  uint64_t v70 = *(void (**)(char *, uint64_t))(v10 + 8);
  v70(v25, v9);
  uint64_t v71 = (void *)v19[102];
  sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_1C1527210;
  uint64_t v73 = v52[2];
  uint64_t v74 = MEMORY[0x1E4FBB550];
  uint64_t v75 = MEMORY[0x1E4FBB5C8];
  *(void *)(v72 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v72 + 64) = v75;
  *(void *)(v72 + 32) = v73;
  uint64_t v76 = v21[2];
  *(void *)(v72 + 96) = v74;
  *(void *)(v72 + 104) = v75;
  *(void *)(v72 + 72) = v76;
  id v77 = v71;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v110 = (uint64_t)v52;
  sub_1C104BB18((uint64_t)v21);
  uint64_t v50 = v110;
  uint64_t v69 = v93;
  swift_bridgeObjectRetain();
  v70(v95, v9);
LABEL_41:
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v50;
  a4[1] = v69;
  return result;
}

uint64_t sub_1C12D4B2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v97 = a3;
  uint64_t v90 = a2;
  sub_1C12DF174();
  uint64_t v86 = *(void *)(v5 - 8);
  uint64_t v87 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v79 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v83 = (char *)v77 - v8;
  sub_1C12DF310();
  uint64_t v84 = *(void *)(v9 - 8);
  uint64_t v85 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v78 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v82 = (char *)v77 - v12;
  sub_1C12DF4AC();
  uint64_t v93 = *(void *)(v13 - 8);
  uint64_t v94 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v89 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v92 = (char *)v77 - v16;
  sub_1C0607698(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v81 = (char *)v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v80 = (char *)v77 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v91 = (char *)v77 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v77 - v24;
  uint64_t v26 = sub_1C1516D2C();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v98 = v26;
  uint64_t v99 = v27;
  MEMORY[0x1F4188790](v26);
  v77[2] = (char *)v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  v77[1] = (char *)v77 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v88 = (char *)v77 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)v77 - v34;
  sub_1C12DF648(0);
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)v77 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12DF67C();
  uint64_t v40 = v39;
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v43 = (char *)v77 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = v3;
  uint64_t v44 = sub_1C1516CFC();
  id v96 = a1;
  id v45 = objc_msgSend(a1, sel_identifier);
  uint64_t v46 = sub_1C151E62C();
  uint64_t v48 = v47;

  if (*(void *)(v44 + 16) && (unint64_t v49 = sub_1BFEF2D8C(v46, v48), (v50 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v38, *(void *)(v44 + 56) + *(void *)(v41 + 72) * v49, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v38, 1, 1, v40);
  }
  uint64_t v51 = v98;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v38, 1, v40) == 1)
  {
    sub_1C12E0148((uint64_t)v38, (uint64_t (*)(void))sub_1C12DF648);
    id v52 = v96;
    id v53 = objc_msgSend(v96, sel_asChannel);
    swift_unknownObjectRelease();
    uint64_t v54 = v99;
    if (v53)
    {
      uint64_t v55 = v92;
      sub_1C1516D0C();
      uint64_t v56 = (uint64_t)v91;
      uint64_t v57 = v94;
      sub_1C1516D3C();
      uint64_t v58 = *(void (**)(char *, uint64_t))(v93 + 8);
      v58(v55, v57);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v56, 1, v51) == 1)
      {
        sub_1C12E0148(v56, (uint64_t (*)(void))sub_1C0607698);
        uint64_t v59 = v89;
        sub_1C1516D0C();
        uint64_t v60 = sub_1C1516D5C();
        v58(v59, v57);
        return v60;
      }
      uint64_t v72 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v88, v56, v51);
LABEL_23:
      uint64_t v60 = sub_1C1516D1C();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v72, v51);
      return v60;
    }
    id v62 = objc_msgSend(v52, sel_identifier);
    uint64_t v63 = sub_1C151E62C();
    uint64_t v65 = v64;

    LOBYTE(v62) = sub_1BFF896B4(v63, v65, v90);
    swift_bridgeObjectRelease();
    uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    if (v62)
    {
      uint64_t v67 = v82;
      sub_1C1516CEC();
      uint64_t v68 = (uint64_t)v80;
      uint64_t v69 = v85;
      sub_1C1516D3C();
      uint64_t v70 = *(void (**)(char *, uint64_t))(v84 + 8);
      v70(v67, v69);
      if ((*v66)(v68, 1, v51) == 1)
      {
        sub_1C12E0148(v68, (uint64_t (*)(void))sub_1C0607698);
        uint64_t v71 = v78;
        sub_1C1516CEC();
LABEL_19:
        uint64_t v60 = sub_1C1516D5C();
        v70(v71, v69);
        return v60;
      }
      uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
      uint64_t v75 = &v100;
    }
    else
    {
      uint64_t v73 = v83;
      sub_1C1516A6C();
      uint64_t v68 = (uint64_t)v81;
      uint64_t v69 = v87;
      sub_1C1516D3C();
      uint64_t v70 = *(void (**)(char *, uint64_t))(v86 + 8);
      v70(v73, v69);
      if ((*v66)(v68, 1, v51) == 1)
      {
        sub_1C12E0148(v68, (uint64_t (*)(void))sub_1C0607698);
        uint64_t v71 = v79;
        sub_1C1516A6C();
        goto LABEL_19;
      }
      uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
      uint64_t v75 = &v101;
    }
    uint64_t v72 = (char *)*(v75 - 32);
    v74(v72, v68, v51);
    goto LABEL_23;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v43, v38, v40);
  sub_1C1516D3C();
  uint64_t v61 = v99;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v25, 1, v51) == 1)
  {
    sub_1C12E0148((uint64_t)v25, (uint64_t (*)(void))sub_1C0607698);
    uint64_t v60 = sub_1C1516D5C();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v35, v25, v51);
    uint64_t v60 = sub_1C1516D1C();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v51);
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  return v60;
}

BOOL sub_1C12D54DC()
{
  uint64_t v0 = sub_1C1516D2C();
  uint64_t v42 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v45 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v41 = (char *)&v37 - v3;
  sub_1C0607698(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v44 = (uint64_t)&v37 - v9;
  sub_1C12DF310();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  uint64_t v40 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v38 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12DF174();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12E00E4(0, &qword_1EB863610, (uint64_t (*)(uint64_t))sub_1C0607698, MEMORY[0x1E4FBBE00]);
  uint64_t v18 = *(void *)(v5 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1527210;
  unint64_t v37 = v19;
  sub_1C1516A6C();
  sub_1C1516D3C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v43 = v18;
  uint64_t v21 = v38;
  sub_1C1516CEC();
  uint64_t v22 = v39;
  sub_1C1516D3C();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v22);
  uint64_t v23 = sub_1C1516CFC();
  uint64_t v24 = sub_1C12CB7A8(v23);
  swift_bridgeObjectRelease();
  uint64_t v46 = v20;
  sub_1C104B92C(v24);
  uint64_t v25 = *(void *)(v46 + 16);
  if (v25)
  {
    uint64_t v26 = v46 + v37;
    uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v42 + 32);
    uint64_t v40 = v46;
    swift_bridgeObjectRetain();
    unint64_t v29 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v30 = v44;
      sub_1C12DBD68(v26, v44, (uint64_t (*)(void))sub_1C0607698);
      sub_1C12DF818(v30, (uint64_t)v7, (uint64_t (*)(void))sub_1C0607698);
      if ((*v27)(v7, 1, v0) == 1)
      {
        sub_1C12E0148((uint64_t)v7, (uint64_t (*)(void))sub_1C0607698);
      }
      else
      {
        uint64_t v31 = *v28;
        uint64_t v32 = v41;
        (*v28)(v41, v7, v0);
        v31(v45, v32, v0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v29 = sub_1C0EE8CC0(0, *(void *)(v29 + 16) + 1, 1, v29);
        }
        unint64_t v34 = *(void *)(v29 + 16);
        unint64_t v33 = *(void *)(v29 + 24);
        if (v34 >= v33 >> 1) {
          unint64_t v29 = sub_1C0EE8CC0(v33 > 1, v34 + 1, 1, v29);
        }
        *(void *)(v29 + 16) = v34 + 1;
        v31((char *)(v29+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v34), v45, v0);
      }
      v26 += v43;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v29 = MEMORY[0x1E4FBC860];
  }
  uint64_t v35 = *(void *)(v29 + 16);
  swift_bridgeObjectRelease();
  return v35 != 0;
}

void sub_1C12D5A3C(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = *(void **)a3;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t v8 = *(void *)(a3 + 16);
  if (qword_1EB85FD10 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EB93C330;
  sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C152C7F0;
  id v11 = v9;
  uint64_t v12 = (uint64_t)objc_msgSend(v6, sel_name);
  uint64_t v13 = sub_1C151E62C();
  uint64_t v15 = v14;

  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 64) = sub_1BFE9C558();
  *(void *)(v10 + 32) = v13;
  *(void *)(v10 + 40) = v15;
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = MEMORY[0x1E4FBB550];
  uint64_t v18 = MEMORY[0x1E4FBB5C8];
  *(void *)(v10 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v10 + 104) = v18;
  *(void *)(v10 + 72) = v16;
  *(void *)(v10 + 136) = v17;
  *(void *)(v10 + 144) = v18;
  *(void *)(v10 + 112) = a4;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  if ((uint64_t)(a4 + 0x4000000000000000) < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v12 = 2 * a4;
  if (v16 >= (uint64_t)(2 * a4))
  {
    if ((a4 & 0x8000000000000000) == 0)
    {
      if (*(void *)(v7 + 16) >= a4)
      {
        uint64_t v10 = v7 + 32;
        sub_1C1520B6C();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v19 = swift_dynamicCastClass();
        if (!v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = MEMORY[0x1E4FBC860];
        }
        uint64_t v20 = *(void *)(v19 + 16);
        swift_release();
        if (v20 == a4)
        {
          uint64_t v21 = swift_dynamicCastClass();
          if (!v21)
          {
            swift_bridgeObjectRelease();
            uint64_t v21 = MEMORY[0x1E4FBC860];
          }
LABEL_15:
          swift_bridgeObjectRelease();
          *a1 = v6;
          a1[1] = v21;
          a1[2] = v8;
          unint64_t v22 = *(void *)(v7 + 16);
          if (v22 < a4)
          {
            __break(1u);
          }
          else
          {
            swift_bridgeObjectRetain_n();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            uint64_t v23 = swift_dynamicCastClass();
            if (!v23)
            {
              swift_bridgeObjectRelease();
              uint64_t v23 = MEMORY[0x1E4FBC860];
            }
            uint64_t v24 = *(void *)(v23 + 16);
            swift_release();
            if (v24 == v22 - a4)
            {
              uint64_t v25 = swift_dynamicCastClass();
              if (!v25)
              {
                swift_bridgeObjectRelease();
                uint64_t v25 = MEMORY[0x1E4FBC860];
              }
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v25 = sub_1C00B2AD0(v7, v10, a4, (2 * v22) | 1);
LABEL_21:
          swift_bridgeObjectRelease();
          type metadata accessor for Localized();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          id v27 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
          sub_1C1515B8C();

          swift_bridgeObjectRetain();
          uint64_t v28 = (void *)sub_1C151E5EC();
          id v29 = objc_msgSend(v6, sel_setTitleDisplayPrefixOverride_, v28, 0x80000001C163B680);
          swift_bridgeObjectRelease_n();

          *a2 = v29;
          a2[1] = v25;
          a2[2] = v8;
          return;
        }
LABEL_25:
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_1C00B2AD0(v7, v10, 0, v12 | 1);
        goto LABEL_15;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
}

id sub_1C12D5E84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, __int16 *a5, double a6, double a7)
{
  __int16 v14 = *a5;
  id v15 = objc_msgSend(*(id *)(v7 + 16), sel_subscriptionList);
  id result = objc_msgSend(v15, sel_ignoredTagIDs);
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v18 = sub_1C151EFBC();

    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1BFEF3988(v18, a4);
    id result = objc_msgSend(v15, sel_mutedTagIDs);
    if (result)
    {
      uint64_t v20 = result;
      uint64_t v21 = sub_1C151EFBC();

      uint64_t v22 = sub_1BFEF3988(v21, v19);
      MEMORY[0x1F4188790](v22);
      sub_1BFD35C60();
      sub_1C151932C();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = a2;
      *(void *)(v23 + 24) = v15;
      *(void *)(v23 + 32) = v7;
      *(void *)(v23 + 40) = a1;
      *(void *)(v23 + 48) = a3;
      *(void *)(v23 + 56) = v22;
      *(_WORD *)(v23 + 64) = v14;
      *(double *)(v23 + 72) = a6;
      *(double *)(v23 + 80) = a7;
      swift_unknownObjectRetain();
      id v24 = a2;
      id v25 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v26 = (void *)sub_1C1518E7C();
      sub_1C12DFBA0();
      uint64_t v27 = sub_1C1518FEC();

      swift_release();
      swift_release();

      return (id)v27;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C12D60B0(char a1, uint64_t a2, uint64_t a3)
{
  if (a1 == 2)
  {
    if (qword_1EB85FD10 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EB93C330;
    sub_1C151F38C();
    sub_1C15197BC();

    sub_1C12E00E4(0, &qword_1EB871498, (uint64_t (*)(uint64_t))sub_1BFD35C60, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    uint64_t v6 = sub_1C12CBDE4(a2);
    swift_bridgeObjectRetain();
    sub_1C12DFCEC((uint64_t)v6, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EB85FD10 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1EB93C330;
    sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    id v9 = v7;
    uint64_t v10 = sub_1C152088C();
    uint64_t v12 = v11;
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 64) = sub_1BFE9C558();
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v12;
    sub_1C151F38C();
    sub_1C15197BC();

    uint64_t v13 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v13);
    sub_1C12DE6EC(0, (unint64_t *)&qword_1EB879F90, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, MEMORY[0x1E4FBB320]);
    sub_1C151932C();
    __int16 v14 = (void *)sub_1C1518E7C();
    sub_1BFD35C60();
    sub_1C12DE754();
    uint64_t v4 = sub_1C151915C();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v4;
}

uint64_t sub_1C12D6418(uint64_t *a1, id a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, int a8, double a9)
{
  uint64_t v16 = *a1;
  id v17 = objc_msgSend(a2, sel_subscribedTags);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  unint64_t v18 = sub_1C151EBCC();

  uint64_t v125 = MEMORY[0x1E4FBC870];
  uint64_t v110 = v9;
  uint64_t v111 = a4;
  uint64_t v105 = a7;
  uint64_t v107 = a5;
  uint64_t v99 = a6;
  uint64_t v100 = v16;
  LODWORD(v108) = a8;
  if (v18 >> 62) {
    goto LABEL_15;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v19)
  {
    while (1)
    {
      unint64_t v20 = v18 & 0xC000000000000001;
      uint64_t v21 = 4;
      uint64_t v22 = 0;
      if ((v18 & 0xC000000000000001) == 0) {
        break;
      }
      while (1)
      {
        uint64_t v23 = (void *)MEMORY[0x1C18C7CB0](v22, v18);
        uint64_t v24 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          break;
        }
LABEL_8:
        if (objc_msgSend(v23, sel_tagType) == (id)2)
        {
          id v25 = objc_msgSend(v23, sel_identifier);
          uint64_t v113 = v21;
          unint64_t v26 = v20;
          uint64_t v27 = sub_1C151E62C();
          unint64_t v28 = v18;
          uint64_t v30 = v29;

          uint64_t v31 = v27;
          unint64_t v20 = v26;
          uint64_t v21 = v113;
          uint64_t v32 = v30;
          unint64_t v18 = v28;
          sub_1BFEFFC1C((uint64_t *)&v119, v31, v32);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          if (v24 == v19) {
            goto LABEL_16;
          }
        }
        else
        {
          swift_unknownObjectRelease();
          if (v24 == v19) {
            goto LABEL_16;
          }
        }
        uint64_t v22 = ++v21 - 4;
        if (!v20) {
          goto LABEL_7;
        }
      }
LABEL_14:
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C15204BC();
      if (!v19) {
        goto LABEL_16;
      }
    }
LABEL_7:
    uint64_t v23 = *(void **)(v18 + 8 * v21);
    swift_unknownObjectRetain();
    uint64_t v24 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      goto LABEL_14;
    }
    goto LABEL_8;
  }
LABEL_16:
  swift_bridgeObjectRelease_n();
  uint64_t v33 = v125;
  id v34 = objc_msgSend(self, sel_sharedAccount);
  id v35 = objc_msgSend(v34, sel_primaryLanguageCode);

  uint64_t v36 = sub_1C151E62C();
  uint64_t v38 = v37;

  id v39 = objc_msgSend(a3, sel_subscribedTagIDs);
  if (v39)
  {
    uint64_t v40 = v39;
    uint64_t v41 = sub_1C151EFBC();
  }
  else
  {
    uint64_t v41 = MEMORY[0x1E4FBC870];
  }
  id v42 = objc_msgSend(a3, sel_autoFavoriteTagIDs);
  uint64_t v43 = (void *)v111;
  if (v42)
  {
    uint64_t v44 = v42;
    uint64_t v45 = sub_1C151EFBC();
  }
  else
  {
    uint64_t v45 = MEMORY[0x1E4FBC870];
  }
  id v46 = objc_msgSend(a3, sel_groupableTagIDs);
  uint64_t v47 = MEMORY[0x1E4FBC870];
  uint64_t v101 = v36;
  if (v46)
  {
    uint64_t v48 = v46;
    uint64_t v114 = sub_1C151EFBC();
  }
  else
  {
    uint64_t v114 = MEMORY[0x1E4FBC870];
  }
  id v97 = *(id *)(v111 + 16);
  id v49 = objc_msgSend(objc_msgSend(v97, sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if (objc_msgSend(v49, sel_respondsToSelector_, sel_isImprovedManagedTopicGroupingEnabled)) {
    LOBYTE(v103) = objc_msgSend(v49, sel_isImprovedManagedTopicGroupingEnabled);
  }
  else {
    LOBYTE(v103) = 0;
  }
  swift_unknownObjectRelease();
  if (qword_1EB863748 != -1) {
    goto LABEL_60;
  }
LABEL_29:
  type metadata accessor for FeedClusteringService();
  sub_1C12E009C(&qword_1EB865088, v50, (void (*)(uint64_t))type metadata accessor for FeedClusteringService);
  sub_1C1516FBC();
  char v51 = (char)v119;
  v124[0] = MEMORY[0x1E4FBC860];
  v124[1] = v47;
  v124[2] = v47;
  v124[3] = MEMORY[0x1E4FBC868];
  v124[4] = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v104 = v41;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1C12DD66C(v124, v107, v33, v99, v101, v38, v105, v108, &v119, v100, v41, v45, v114, (char)v103, v51, (uint64_t)v43);
  uint64_t v98 = v110;
  uint64_t v110 = (uint64_t)v119;
  uint64_t v107 = v121;
  uint64_t v108 = v120;
  uint64_t v101 = v123;
  id v103 = v122;
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v109 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1EB85FD10 != -1) {
    swift_once();
  }
  id v52 = (void *)qword_1EB93C330;
  sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1C152C7F0;
  uint64_t v119 = *(void **)(v110 + 16);
  id v106 = v52;
  uint64_t v54 = sub_1C152088C();
  uint64_t v56 = v55;
  uint64_t v57 = MEMORY[0x1E4FBB1A0];
  *(void *)(v53 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v58 = sub_1BFE9C558();
  *(void *)(v53 + 64) = v58;
  *(void *)(v53 + 32) = v54;
  *(void *)(v53 + 40) = v56;
  uint64_t v59 = v108;
  uint64_t v119 = *(void **)(v108 + 16);
  uint64_t v60 = sub_1C152088C();
  *(void *)(v53 + 96) = v57;
  *(void *)(v53 + 104) = v58;
  *(void *)(v53 + 72) = v60;
  *(void *)(v53 + 80) = v61;
  uint64_t v41 = v107;
  uint64_t v119 = *(void **)(v107 + 16);
  uint64_t v62 = sub_1C152088C();
  *(void *)(v53 + 136) = v57;
  *(void *)(v53 + 144) = v58;
  *(void *)(v53 + 112) = v62;
  *(void *)(v53 + 120) = v63;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v64 = sub_1C12DD82C(MEMORY[0x1E4FBC870], v108, v104, v45, v114, (uint64_t)v103, v101, a9);
  uint64_t v105 = v98;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = swift_bridgeObjectRetain();
  uint64_t v66 = sub_1BFEF3988(v65, v64);
  id v67 = objc_msgSend(*(id *)(v111 + 24), sel_allowlist);
  if (!v67)
  {
    uint64_t v71 = MEMORY[0x1E4FBC860];
    goto LABEL_35;
  }
  uint64_t v68 = v67;
  id v69 = objc_msgSend(v67, sel_optionalTags);

  if (v69)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
    uint64_t v70 = sub_1C151E33C();

    uint64_t v71 = sub_1C12CBBD8(v70);
    swift_bridgeObjectRelease();
LABEL_35:
    uint64_t v99 = (void *)sub_1BFEF4060(v71);
    swift_bridgeObjectRelease();
    uint64_t v72 = *(void *)(v111 + 64);
    uint64_t v73 = *(void *)(v111 + 72);
    __swift_project_boxed_opaque_existential_1((void *)(v111 + 40), v72);
    uint64_t v74 = swift_bridgeObjectRetain();
    uint64_t v75 = sub_1BFE71F8C(v74);
    uint64_t v100 = v66;
    swift_bridgeObjectRelease();
    uint64_t v76 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v73 + 32))(v75, v72, v73);
    swift_release();
    uint64_t v45 = *(void *)(v76 + 16);
    if (!v45)
    {
      uint64_t v43 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v90 = v104;
LABEL_52:
      swift_bridgeObjectRelease();
      sub_1C12D8BEC(v111);
      double v92 = v91;
      id v93 = objc_msgSend(objc_msgSend(v97, sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
      swift_unknownObjectRelease();
      if (objc_msgSend(v93, sel_respondsToSelector_, sel_channelGroupBaselineMultipliers))
      {
        id v94 = objc_msgSend(v93, sel_channelGroupBaselineMultipliers);
        swift_unknownObjectRelease();
        if (v94)
        {
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
          uint64_t v95 = sub_1C151E33C();

LABEL_57:
          *(void *)&long long v115 = v110;
          *((void *)&v115 + 1) = v59;
          uint64_t v116 = v41;
          id v117 = v103;
          uint64_t v118 = v101;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v112 = sub_1C12DE084(v100, &v115, (uint64_t)v43, v95, (uint64_t)v99, v90, v109, v114, v92);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v119 = (void *)v110;
          uint64_t v120 = v112;
          sub_1C12E00E4(0, &qword_1EB863EB0, (uint64_t (*)(uint64_t))sub_1C12DFBA0, MEMORY[0x1E4FAB088]);
          swift_allocObject();
          return sub_1C151908C();
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
      uint64_t v95 = sub_1C018FE90(MEMORY[0x1E4FBC860]);
      goto LABEL_57;
    }
    swift_bridgeObjectRetain();
    id v77 = (double *)(v76 + 48);
    uint64_t v43 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v38 = 1;
    while (1)
    {
      uint64_t v33 = *((void *)v77 - 2);
      uint64_t v47 = *((void *)v77 - 1);
      a9 = *v77;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v119 = v43;
      unint64_t v80 = sub_1BFEF2D8C(v33, v47);
      uint64_t v81 = v43[2];
      BOOL v82 = (v79 & 1) == 0;
      uint64_t v83 = v81 + v82;
      if (__OFADD__(v81, v82))
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        swift_once();
        goto LABEL_29;
      }
      uint64_t v41 = v79;
      if (v43[3] >= v83)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v43 = v119;
          if (v79) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1C106D1CC();
          uint64_t v43 = v119;
          if (v41) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1C10583AC(v83, isUniquelyReferenced_nonNull_native);
        unint64_t v84 = sub_1BFEF2D8C(v33, v47);
        if ((v41 & 1) != (v85 & 1)) {
          goto LABEL_62;
        }
        unint64_t v80 = v84;
        uint64_t v43 = v119;
        if (v41)
        {
LABEL_37:
          *(double *)(v43[7] + 8 * v80) = a9;
          goto LABEL_38;
        }
      }
      v43[(v80 >> 6) + 8] |= 1 << v80;
      uint64_t v86 = (uint64_t *)(v43[6] + 16 * v80);
      *uint64_t v86 = v33;
      v86[1] = v47;
      *(double *)(v43[7] + 8 * v80) = a9;
      uint64_t v87 = v43[2];
      BOOL v88 = __OFADD__(v87, 1);
      uint64_t v89 = v87 + 1;
      if (v88) {
        goto LABEL_59;
      }
      _OWORD v43[2] = v89;
      swift_bridgeObjectRetain();
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v77 += 3;
      if (!--v45)
      {
        swift_bridgeObjectRelease();
        uint64_t v90 = v104;
        uint64_t v41 = v107;
        uint64_t v59 = v108;
        goto LABEL_52;
      }
    }
  }
  __break(1u);
LABEL_62:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C12D7138(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15)
{
  uint64_t v16 = v15;
  uint64_t v139 = a6;
  uint64_t v131 = a5;
  uint64_t v23 = sub_1C15169CC();
  uint64_t v133 = *(void *)(v23 - 8);
  uint64_t v134 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v132 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1C15169BC();
  uint64_t v136 = *(void *)(v25 - 8);
  uint64_t v137 = v25;
  *(void *)&double v26 = MEMORY[0x1F4188790](v25).n128_u64[0];
  uint64_t v135 = (char *)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void **)a2;
  unint64_t v28 = *(void **)(a2 + 8);
  uint64_t v140 = *(void **)(a2 + 16);
  uint64_t v141 = v28;
  id v30 = objc_msgSend(v29, sel_publisherID, v26);
  uint64_t v142 = v29;
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = sub_1C151E62C();
    uint64_t v34 = v33;

    LOBYTE(v31) = sub_1BFF896B4(v32, v34, a3);
    uint64_t v29 = v142;
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_5;
    }
  }
  id v35 = objc_msgSend(v29, sel_sourceFeedID);
  if (!v35) {
    goto LABEL_6;
  }
  uint64_t v36 = v35;
  uint64_t v37 = sub_1C151E62C();
  uint64_t v39 = v38;

  LOBYTE(v36) = sub_1BFF896B4(v37, v39, a3);
  uint64_t v29 = v142;
  swift_bridgeObjectRelease();
  if (v36) {
LABEL_5:
  }
    uint64_t v40 = 1;
  else {
LABEL_6:
  }
    uint64_t v40 = 0;
  id v41 = objc_msgSend(v29, sel_topics);
  if (v41)
  {
    id v42 = v41;
    sub_1BFC39268(0, &qword_1EB85F208);
    unint64_t v43 = sub_1C151EBCC();
  }
  else
  {
    unint64_t v43 = MEMORY[0x1E4FBC860];
  }
  uint64_t v138 = (unint64_t *)a1;
  if (a4 && (objc_msgSend(v29, sel_respondsToSelector_, sel_language) & 1) != 0)
  {
    swift_unknownObjectRetain();
    id v44 = objc_msgSend(v29, sel_language);
    if (v44)
    {
      uint64_t v45 = v44;
      uint64_t v46 = sub_1C151E62C();
      uint64_t v48 = v47;

      if (v46 == v131 && v48 == v139)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        a1 = (uint64_t)v138;
        uint64_t v29 = v142;
        goto LABEL_20;
      }
      char v49 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v49)
      {
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
    }
    swift_unknownObjectRetain();
    id v50 = sub_1C12DD478(MEMORY[0x1E4FBC860], v43, a4);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    unint64_t v43 = (unint64_t)v50;
    goto LABEL_19;
  }
LABEL_20:
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C15204BC();
    if (!v51) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v51 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v51) {
      goto LABEL_29;
    }
  }
  if (v51 < 1)
  {
    __break(1u);
LABEL_121:
    swift_once();
LABEL_41:
    id v68 = (id)qword_1EB93C330;
    sub_1C151F36C();
    sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_1C1529AE0;
    *(void *)(v69 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v69 + 64) = sub_1BFE9C558();
    *(void *)(v69 + 32) = a1;
    *(void *)(v69 + 40) = v40;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
LABEL_42:
    uint64_t v29 = v142;
    goto LABEL_43;
  }
  LODWORD(v139) = a8;
  uint64_t v52 = 0;
  do
  {
    if ((v43 & 0xC000000000000001) != 0) {
      id v53 = (id)MEMORY[0x1C18C7CB0](v52, v43);
    }
    else {
      id v53 = *(id *)(v43 + 8 * v52 + 32);
    }
    uint64_t v54 = v53;
    ++v52;
    id v145 = v53;
    sub_1C12D8250(&v145, a7, a1, v40);
  }
  while (v51 != v52);
  uint64_t v29 = v142;
  LOWORD(a8) = v139;
LABEL_29:
  uint64_t v139 = a10;
  int v55 = (unsigned __int16)a8;
  swift_bridgeObjectRelease();
  if (a8 == 2) {
    goto LABEL_43;
  }
  uint64_t v56 = v140;
  swift_unknownObjectRetain();
  uint64_t v57 = v29;
  unint64_t v58 = v141;
  id v59 = objc_msgSend(v57, sel_publisherID);
  if (!v59)
  {

    swift_unknownObjectRelease();
    uint64_t v29 = v57;
    goto LABEL_43;
  }
  uint64_t v60 = v59;
  LODWORD(v130) = v55;
  uint64_t v131 = sub_1C151E62C();
  uint64_t v40 = v61;

  swift_unknownObjectRelease();
  a1 = v131;
  uint64_t v29 = v57;
  if ((sub_1BFF896B4(v131, v40, a7) & 1) == 0)
  {
    if (*(void *)(a9 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v62 = sub_1BFEF2D8C(a1, v40);
      if (v63)
      {
        uint64_t v64 = *(void **)(*(void *)(a9 + 56) + 8 * v62);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v130 & 1) == 0)
        {
          switch((unint64_t)objc_msgSend(v64, sel_groupingEligibility))
          {
            case 0uLL:
              goto LABEL_114;
            case 1uLL:
              goto LABEL_113;
            case 2uLL:
              uint64_t v65 = a1;
              uint64_t v66 = v40;
              uint64_t v67 = v139;
              goto LABEL_112;
            case 3uLL:
              goto LABEL_109;
            default:
              swift_bridgeObjectRelease();
              if (qword_1EB85FD10 != -1) {
                swift_once();
              }
              id v120 = (id)qword_1EB93C330;
              sub_1C151F36C();
              sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
              uint64_t v121 = swift_allocObject();
              *(_OWORD *)(v121 + 16) = xmmword_1C1529AE0;
              id v145 = objc_msgSend(v64, sel_groupingEligibility);
              uint64_t v122 = sub_1C152088C();
              uint64_t v124 = v123;
              *(void *)(v121 + 56) = MEMORY[0x1E4FBB1A0];
              *(void *)(v121 + 64) = sub_1BFE9C558();
              *(void *)(v121 + 32) = v122;
              *(void *)(v121 + 40) = v124;
              sub_1C15197BC();

              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_42;
          }
        }
        goto LABEL_113;
      }
      swift_bridgeObjectRelease();
    }
    if (qword_1EB85FD10 == -1) {
      goto LABEL_41;
    }
    goto LABEL_121;
  }
  while (1)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    id v145 = (id)MEMORY[0x1E4FBC870];
    uint64_t v146 = MEMORY[0x1E4FBC870];
    uint64_t v147 = MEMORY[0x1E4FBC870];
    if (!v51) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = 4;
    while (1)
    {
      id v70 = (v43 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C18C7CB0](v40 - 4, v43)
          : *(id *)(v43 + 8 * v40);
      uint64_t v29 = v70;
      a1 = v40 - 3;
      if (__OFADD__(v40 - 4, 1)) {
        break;
      }
      *(void *)&long long v143 = v70;
      sub_1C12D85C4((uint64_t)&v145, (id *)&v143, a13 & 1, a14 & 1, v142, v141, v140, v139);
      if (v16) {
        goto LABEL_124;
      }
      uint64_t v16 = 0;

      ++v40;
      if (a1 == v51)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = v142;
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_109:
    if (sub_1BFF896B4(a1, v40, v139) & 1) != 0 || (sub_1BFF896B4(a1, v40, a11)) {
      goto LABEL_113;
    }
    uint64_t v67 = a12;
    uint64_t v65 = a1;
    uint64_t v66 = v40;
LABEL_112:
    if (sub_1BFF896B4(v65, v66, v67))
    {
LABEL_113:
      sub_1BFEFFC1C((uint64_t *)&v145, a1, v40);
      swift_unknownObjectRelease();
    }
    else
    {
LABEL_114:
      swift_unknownObjectRelease();
    }
  }
LABEL_52:
  swift_bridgeObjectRelease();
  id v71 = v145;
  uint64_t v72 = v146;
  uint64_t v73 = v147;
  uint64_t v74 = v140;
  swift_unknownObjectRetain();
  uint64_t v75 = v141;
  id v76 = objc_msgSend(v29, sel_itemID);
  uint64_t v140 = (void *)sub_1C151E62C();
  uint64_t v141 = v77;

  swift_unknownObjectRelease();
  id v78 = objc_msgSend(v29, sel_publisherID);
  uint64_t v139 = v73;
  if (v78)
  {
    uint64_t v79 = v78;
    uint64_t v131 = sub_1C151E62C();
    unint64_t v130 = v80;
  }
  else
  {
    uint64_t v131 = 0;
    unint64_t v130 = 0xE000000000000000;
  }
  objc_msgSend(v75, sel_sortingScore);
  uint64_t v81 = *(void **)(a15 + 16);
  id v82 = objc_msgSend(v81, sel_paidAccessChecker);
  if (!v82)
  {
    __break(1u);
    goto LABEL_123;
  }
  uint64_t v83 = v82;
  id v129 = v71;
  unsigned int v84 = objc_msgSend(v29, sel_isPaid);
  if (objc_msgSend(v29, sel_respondsToSelector_, sel_isBundlePaid)) {
    unsigned __int8 v85 = objc_msgSend(v29, sel_isBundlePaid);
  }
  else {
    unsigned __int8 v85 = 0;
  }
  uint64_t v128 = v72;
  id v86 = objc_msgSend(v29, sel_publisherID);
  if (v86)
  {
    uint64_t v87 = v86;
    uint64_t v127 = sub_1C151E62C();
    uint64_t v89 = v88;

    if (v84) {
      goto LABEL_61;
    }
  }
  else
  {
    uint64_t v127 = 0;
    uint64_t v89 = 0;
    if (v84)
    {
LABEL_61:
      id v90 = objc_msgSend(v83, sel_purchaseProvider);
      if (v89)
      {
        id v91 = objc_msgSend(v90, sel_purchasedTagIDs);
        uint64_t v92 = sub_1C151EFBC();

        LOBYTE(v91) = sub_1BFF896B4(v127, v89, v92);
        swift_unknownObjectRelease();
        uint64_t v29 = v142;
        swift_bridgeObjectRelease();
        if ((v91 & 1) != 0 || (v85 & 1) == 0) {
          goto LABEL_67;
        }
      }
      else
      {
        swift_unknownObjectRelease();
        if ((v85 & 1) == 0) {
          goto LABEL_67;
        }
      }
      goto LABEL_69;
    }
  }
  if ((v85 & 1) == 0) {
    goto LABEL_67;
  }
LABEL_69:
  if (!v89)
  {
    swift_unknownObjectRelease();
    goto LABEL_92;
  }
  id v93 = (char *)objc_msgSend(objc_msgSend(v83, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v93, v93 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v143 = 0u;
    long long v144 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v143, (uint64_t)&v145);
  if (!v148)
  {
    sub_1BFEFE4A0((uint64_t)&v145);
    goto LABEL_79;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_79:
    id v94 = 0;
    unint64_t v96 = 0;
    goto LABEL_80;
  }
  id v94 = v149;
  id v95 = objc_msgSend(v149, sel_integerValue);
  if (v95 == (id)-1)
  {

    uint64_t v29 = v142;
    goto LABEL_91;
  }
  unint64_t v96 = (unint64_t)v95;
LABEL_80:
  if (objc_getAssociatedObject(v93, (const void *)~v96))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v143 = 0u;
    long long v144 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v143, (uint64_t)&v145);
  if (v148)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
    if (swift_dynamicCast())
    {
      id v97 = v149;
      id v126 = v94;
      id v98 = v97;
      unsigned __int8 v99 = objc_msgSend(v97, sel_integerValue);

      char v100 = (v99 + 1) ^ (v96 + 1);
      uint64_t v29 = v142;
      if (v100) {
        goto LABEL_91;
      }
LABEL_67:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_92;
    }
  }
  else
  {
    sub_1BFEFE4A0((uint64_t)&v145);
  }

  uint64_t v29 = v142;
  if ((v96 & 1) == 0) {
    goto LABEL_67;
  }
LABEL_91:
  id v101 = objc_msgSend(objc_msgSend(v83, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  id v102 = objc_msgSend(v101, sel_bundleChannelIDs);

  id v103 = (void *)sub_1C151E5EC();
  objc_msgSend(v102, sel_containsObject_, v103);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

LABEL_92:
  id v104 = objc_msgSend(v81, sel_paidAccessChecker);
  uint64_t v105 = v138;
  if (!v104)
  {
LABEL_123:
    __break(1u);
LABEL_124:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x1C12D8240);
  }
  id v106 = objc_msgSend(v104, sel_bundleSubscriptionProvider);
  swift_unknownObjectRelease();
  id v107 = objc_msgSend(v106, sel_bundleSubscription);
  swift_unknownObjectRelease();
  objc_msgSend(v107, sel_containsItem_, v29);

  if (objc_msgSend(v29, sel_respondsToSelector_, sel_isAIGenerated)) {
    objc_msgSend(v29, sel_isAIGenerated);
  }
  if (objc_msgSend(v29, sel_respondsToSelector_, sel_isEvergreen)) {
    objc_msgSend(v29, sel_isEvergreen);
  }
  objc_msgSend(v75, sel_embeddingScore);
  if (objc_msgSend(v29, sel_respondsToSelector_, sel_thumbnailPerceptualHash))
  {
    id v108 = objc_msgSend(v29, sel_thumbnailPerceptualHash);
    if (v108)
    {
      uint64_t v109 = v108;
      uint64_t v110 = sub_1C151606C();
      unint64_t v112 = v111;
    }
    else
    {
      uint64_t v110 = 0;
      unint64_t v112 = 0xF000000000000000;
    }
    *(void *)&long long v143 = v110;
    *((void *)&v143 + 1) = v112;
    sub_1C12DFCA0(0, &qword_1EB863678, MEMORY[0x1E4F277C0], MEMORY[0x1E4FBB718]);
    sub_1C151FD7C();
    sub_1BFE95878(v110, v112);
  }
  (*(void (**)(char *, void, uint64_t))(v133 + 104))(v132, *MEMORY[0x1E4FB75E0], v134);
  uint64_t v113 = v135;
  sub_1C151698C();
  unint64_t v114 = *v105;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v114 = sub_1C0EE8D98(0, *(void *)(v114 + 16) + 1, 1, v114);
  }
  uint64_t v116 = v136;
  uint64_t v115 = v137;
  unint64_t v118 = *(void *)(v114 + 16);
  unint64_t v117 = *(void *)(v114 + 24);
  if (v118 >= v117 >> 1) {
    unint64_t v114 = sub_1C0EE8D98(v117 > 1, v118 + 1, 1, v114);
  }
  *(void *)(v114 + 16) = v118 + 1;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v116 + 32))(v114+ ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(void *)(v116 + 72) * v118, v113, v115);
  *uint64_t v105 = v114;
  return result;
}

id sub_1C12D8250(id *a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v7 = (unint64_t)*a1;
  id result = objc_msgSend(*a1, sel_tagID);
  if (!result) {
    return result;
  }
  uint64_t v9 = result;
  uint64_t v10 = sub_1C151E62C();
  uint64_t v12 = v11;

  if (sub_1BFF896B4(v10, v12, a2)) {
    return (id)swift_bridgeObjectRelease();
  }
  if ((objc_msgSend((id)v7, sel_isEligibleForGroupingIfFavorited) & 1) != 0
    || objc_msgSend((id)v7, sel_isEligibleForGroupingIfAutofavorited))
  {
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(&v37, v10, v12);
    swift_bridgeObjectRelease();
  }
  if (!objc_msgSend((id)v7, sel_isEligibleForGrouping)) {
    return (id)swift_bridgeObjectRelease();
  }
  if (a4)
  {
    swift_bridgeObjectRetain();
    LOBYTE(v9) = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = *(void *)(a3 + 24);
    uint64_t v13 = v37;
    *(void *)(a3 + 24) = 0x8000000000000000;
    unint64_t v15 = sub_1BFEF2D8C(v10, v12);
    uint64_t v16 = *(void *)(v13 + 16);
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_32;
    }
    char v19 = v14;
    if (*(void *)(v13 + 24) >= v18)
    {
      if ((v9 & 1) == 0)
      {
        sub_1C106CB6C();
        uint64_t v13 = v37;
      }
    }
    else
    {
      sub_1C1057680(v18, (char)v9);
      uint64_t v13 = v37;
      unint64_t v20 = sub_1BFEF2D8C(v10, v12);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_35;
      }
      unint64_t v15 = v20;
    }
    *(void *)(a3 + 24) = v13;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)(a3 + 24);
    swift_bridgeObjectRetain();
    if ((v19 & 1) == 0)
    {
      sub_1C106A2F8(v15, v10, v12, 0, v22);
      swift_bridgeObjectRetain();
    }
    unint64_t v7 = v22[7];
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(v7 + 8 * v15);
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_33;
    }
    *(void *)(v7 + 8 * v15) = v25;
    swift_bridgeObjectRelease();
    unint64_t v15 = (unint64_t)sub_1C0053D20;
  }
  else
  {
    unint64_t v15 = 0;
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = *(void *)(a3 + 32);
  uint64_t v27 = v37;
  *(void *)(a3 + 32) = 0x8000000000000000;
  unint64_t v7 = sub_1BFEF2D8C(v10, v12);
  uint64_t v29 = *(void *)(v27 + 16);
  BOOL v30 = (v28 & 1) == 0;
  uint64_t v31 = v29 + v30;
  if (__OFADD__(v29, v30))
  {
    __break(1u);
    goto LABEL_31;
  }
  LOBYTE(v9) = v28;
  if (*(void *)(v27 + 24) >= v31)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_34;
    }
    goto LABEL_25;
  }
  sub_1C1057680(v31, isUniquelyReferenced_nonNull_native);
  uint64_t v27 = v37;
  unint64_t v32 = sub_1BFEF2D8C(v10, v12);
  if ((v9 & 1) != (v33 & 1))
  {
LABEL_35:
    id result = (id)sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v7 = v32;
  while (1)
  {
LABEL_25:
    *(void *)(a3 + 32) = v27;
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void **)(a3 + 32);
    swift_bridgeObjectRetain();
    if ((v9 & 1) == 0)
    {
      sub_1C106A2F8(v7, v10, v12, 0, v34);
      swift_bridgeObjectRetain();
    }
    uint64_t v9 = (void *)v34[7];
    swift_bridgeObjectRelease();
    uint64_t v35 = *((void *)v9 + v7);
    BOOL v24 = __OFADD__(v35, 1);
    uint64_t v36 = v35 + 1;
    if (!v24) {
      break;
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    sub_1C106CB6C();
    uint64_t v27 = v37;
  }
  *((void *)v9 + v7) = v36;
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C(&v37, v10, v12);
  swift_bridgeObjectRelease();
  return (id)sub_1BFC3E5C0(v15);
}

id sub_1C12D85C4(uint64_t a1, id *a2, char a3, char a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  id v14 = *a2;
  id result = objc_msgSend(*a2, sel_tagID);
  if (result)
  {
    uint64_t v16 = result;
    id v59 = a6;
    uint64_t v63 = v8;
    uint64_t v17 = sub_1C151E62C();
    uint64_t v19 = v18;

    if (objc_msgSend(v14, sel_isManagedTopic))
    {
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v61, v17, v19);
      swift_bridgeObjectRelease();
    }
    if (objc_msgSend(v14, sel_isManagedTopicWinner))
    {
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v61, v17, v19);
      swift_bridgeObjectRelease();
    }
    if ((a3 & 1) == 0) {
      goto LABEL_16;
    }
    if (objc_msgSend(v14, sel_isDisallowedFromGrouping))
    {
      id result = (id)swift_bridgeObjectRelease();
      if ((a4 & 1) == 0) {
        return result;
      }
      if (qword_1EB85FD10 != -1) {
        swift_once();
      }
      unint64_t v20 = (void *)qword_1EB93C330;
      sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
      id v22 = a7;
      id v23 = v20;
      swift_unknownObjectRetain();
      id v24 = v59;
      id v25 = objc_msgSend(a5, sel_itemID);
      uint64_t v26 = sub_1C151E62C();
      uint64_t v28 = v27;

      swift_unknownObjectRelease();
      uint64_t v29 = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v30 = sub_1BFE9C558();
      *(void *)(v21 + 64) = v30;
      *(void *)(v21 + 32) = v26;
      *(void *)(v21 + 40) = v28;
      uint64_t v61 = 0;
      unint64_t v62 = 0xE000000000000000;
      id v31 = objc_msgSend(v14, sel_tagID);
      if (v31)
      {
        unint64_t v32 = v31;
        sub_1C151E62C();
      }
      sub_1C12DFCA0(0, (unint64_t *)&qword_1EB879C00, v29, MEMORY[0x1E4FBB718]);
      sub_1C151E6AC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v50 = v61;
      unint64_t v51 = v62;
      *(void *)(v21 + 96) = v29;
      *(void *)(v21 + 104) = v30;
      *(void *)(v21 + 72) = v50;
      *(void *)(v21 + 80) = v51;
      sub_1C151F38C();
      sub_1C15197BC();

      return (id)swift_bridgeObjectRelease();
    }
    if (!objc_msgSend(v14, sel_hardFollowRequiredForGrouping)) {
      goto LABEL_16;
    }
    id v33 = objc_msgSend(a5, sel_publisherID);
    if (v33)
    {
      uint64_t v34 = v33;
      uint64_t v58 = sub_1C151E62C();
      uint64_t v36 = v35;

      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v34) = sub_1BFF896B4(v58, v36, a8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v34)
      {
LABEL_16:
        sub_1BFEFFC1C(&v61, v17, v19);
        return (id)swift_bridgeObjectRelease();
      }
    }
    id result = (id)swift_bridgeObjectRelease();
    if (a4)
    {
      if (qword_1EB85FD10 != -1) {
        swift_once();
      }
      uint64_t v37 = (void *)qword_1EB93C330;
      sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1C152C7F0;
      id v39 = a7;
      id v40 = v37;
      swift_unknownObjectRetain();
      id v41 = v59;
      id v42 = objc_msgSend(a5, sel_itemID);
      uint64_t v43 = sub_1C151E62C();
      uint64_t v45 = v44;

      swift_unknownObjectRelease();
      uint64_t v46 = MEMORY[0x1E4FBB1A0];
      *(void *)(v38 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v47 = sub_1BFE9C558();
      *(void *)(v38 + 64) = v47;
      *(void *)(v38 + 32) = v43;
      *(void *)(v38 + 40) = v45;
      uint64_t v61 = 0;
      unint64_t v62 = 0xE000000000000000;
      id v48 = objc_msgSend(v14, sel_tagID);
      if (v48)
      {
        char v49 = v48;
        sub_1C151E62C();
      }
      sub_1C12DFCA0(0, (unint64_t *)&qword_1EB879C00, v46, MEMORY[0x1E4FBB718]);
      sub_1C151E6AC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v52 = v61;
      unint64_t v53 = v62;
      *(void *)(v38 + 96) = v46;
      *(void *)(v38 + 104) = v47;
      *(void *)(v38 + 72) = v52;
      *(void *)(v38 + 80) = v53;
      uint64_t v61 = 0;
      unint64_t v62 = 0xE000000000000000;
      id v54 = objc_msgSend(a5, sel_publisherID);
      if (v54)
      {
        int v55 = v54;
        sub_1C151E62C();
      }
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v56 = v61;
      unint64_t v57 = v62;
      *(void *)(v38 + 136) = v46;
      *(void *)(v38 + 144) = v47;
      *(void *)(v38 + 112) = v56;
      *(void *)(v38 + 120) = v57;
      sub_1C151F38C();
      sub_1C15197BC();

      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C12D8BEC(uint64_t a1)
{
  id v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 16), sel_appConfigurationManager), sel_possiblyUnfetchedAppConfiguration);
  swift_unknownObjectRelease();
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_enableTabiTagScoring) & 1) != 0
    && objc_msgSend(v2, sel_enableTabiTagScoring)
    && (objc_msgSend(v2, sel_respondsToSelector_, sel_newsTabiConfiguration) & 1) != 0
    && (id v3 = objc_msgSend(v2, sel_newsTabiConfiguration),
        id v4 = objc_msgSend(v3, sel_tagScoringConfiguration),
        v3,
        v4))
  {
    objc_msgSend(v4, sel_minimumChannelScoreForGrouping);

    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 64);
    uint64_t v7 = *(void *)(a1 + 72);
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 40), v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 64))(v6, v7);
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1C12D8D40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v75 = a9;
  *(void *)&long long v73 = a8;
  uint64_t v70 = a6;
  uint64_t v71 = a7;
  uint64_t v69 = a5;
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = sub_1C151690C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v72 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v69 - v19;
  MEMORY[0x1F4188790](v21);
  id v23 = (char *)&v69 - v22;
  uint64_t v25 = *a1;
  uint64_t v24 = a1[1];
  char v26 = sub_1BFF896B4(v25, v24, v14);
  uint64_t v76 = v16;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  uint64_t v28 = (unsigned int *)MEMORY[0x1E4FB7508];
  if (v26) {
    uint64_t v28 = (unsigned int *)MEMORY[0x1E4FB7510];
  }
  uint64_t v29 = *v28;
  uint64_t v77 = v15;
  v27(v23, v29, v15);
  if (*(void *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1BFEF2D8C(v25, v24);
    double v31 = 0.0;
    if (v32) {
      double v31 = *(double *)(*(void *)(a3 + 56) + 8 * v30);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    double v31 = 0.0;
  }
  uint64_t v33 = *(void *)(a4 + 16);
  swift_bridgeObjectRetain();
  if (v33 && (unint64_t v34 = sub_1BFEF2D8C(v25, v24), (v35 & 1) != 0))
  {
    uint64_t v36 = v25;
    id v37 = *(id *)(*(void *)(a4 + 56) + 8 * v34);
  }
  else
  {
    uint64_t v36 = v25;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
    id v37 = (id)sub_1C151FB3C();
  }
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  sub_1C151EF2C();
  double v40 = v39;

  uint64_t v42 = v76;
  uint64_t v41 = v77;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  v43(v20, v23, v77);
  int v44 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v20, v41);
  if (v44 == *MEMORY[0x1E4FB7510])
  {
    double v45 = v40 * a10;
  }
  else
  {
    double v45 = 0.0;
    if (v44 != *MEMORY[0x1E4FB7508]) {
      (*(void (**)(char *, uint64_t))(v76 + 8))(v20, v77);
    }
  }
  uint64_t v74 = v23;
  if (v45 <= v31)
  {
    swift_bridgeObjectRetain();
    LODWORD(v69) = sub_1BFF896B4(v36, v24, v69);
    LODWORD(v70) = sub_1BFF896B4(v36, v24, v70);
    sub_1BFF896B4(v36, v24, v71);
    sub_1BFF896B4(v36, v24, v73);
    uint64_t v64 = v23;
    uint64_t v65 = v76;
    uint64_t v66 = v77;
    v43(v72, v64, v77);
    uint64_t v67 = v75;
    sub_1C15168FC();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v74, v66);
    uint64_t v68 = sub_1C151691C();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 0, 1, v68);
  }
  else
  {
    if (qword_1EB85FD10 != -1) {
      swift_once();
    }
    uint64_t v46 = (void *)qword_1EB93C330;
    sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1C152A660;
    uint64_t v48 = MEMORY[0x1E4FBB1A0];
    *(void *)(v47 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v49 = sub_1BFE9C558();
    *(void *)(v47 + 64) = v49;
    *(void *)(v47 + 32) = v36;
    *(void *)(v47 + 40) = v24;
    uint64_t v50 = swift_allocObject();
    long long v73 = xmmword_1C1529AE0;
    uint64_t v51 = MEMORY[0x1E4FBB3D0];
    *(_OWORD *)(v50 + 16) = xmmword_1C1529AE0;
    uint64_t v52 = MEMORY[0x1E4FBB460];
    *(void *)(v50 + 56) = v51;
    *(void *)(v50 + 64) = v52;
    *(double *)(v50 + 32) = v31;
    swift_bridgeObjectRetain();
    id v53 = v46;
    uint64_t v54 = sub_1C151E66C();
    *(void *)(v47 + 96) = v48;
    *(void *)(v47 + 104) = v49;
    *(void *)(v47 + 72) = v54;
    *(void *)(v47 + 80) = v55;
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v73;
    *(void *)(v56 + 56) = v51;
    *(void *)(v56 + 64) = v52;
    *(double *)(v56 + 32) = v45;
    uint64_t v57 = sub_1C151E66C();
    *(void *)(v47 + 136) = v48;
    *(void *)(v47 + 144) = v49;
    *(void *)(v47 + 112) = v57;
    *(void *)(v47 + 120) = v58;
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v73;
    *(void *)(v59 + 56) = v51;
    *(void *)(v59 + 64) = v52;
    *(double *)(v59 + 32) = v40;
    uint64_t v60 = sub_1C151E66C();
    *(void *)(v47 + 176) = v48;
    *(void *)(v47 + 184) = v49;
    *(void *)(v47 + 152) = v60;
    *(void *)(v47 + 160) = v61;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v77);
    uint64_t v62 = sub_1C151691C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v75, 1, 1, v62);
  }
}

uint64_t sub_1C12D9334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, id a8, uint64_t a9, void *a10)
{
  id v89 = a8;
  id v104 = a7;
  uint64_t v95 = a1;
  uint64_t v96 = a2;
  uint64_t v12 = (int *)type metadata accessor for FeedClusteringRequest(0);
  unint64_t v90 = *((void *)v12 - 1);
  MEMORY[0x1F4188790](v12);
  id v91 = v13;
  uint64_t v101 = (uint64_t)&v84 - ((unint64_t)(v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12DBD34(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v86 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1C1516E1C();
  uint64_t v105 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  char v100 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v84 - v18;
  uint64_t v20 = sub_1C15197FC();
  uint64_t v102 = *(void *)(v20 - 8);
  uint64_t v103 = v20;
  MEMORY[0x1F4188790](v20);
  unsigned __int8 v99 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = v21;
  MEMORY[0x1F4188790](v22);
  id v106 = (char *)&v84 - v23;
  uint64_t v94 = sub_1C151982C();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v25 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB85FD10 != -1) {
    swift_once();
  }
  uint64_t v85 = a9;
  id v26 = (id)qword_1EB93C330;
  sub_1C151980C();
  uint64_t v92 = v25;
  sub_1C151981C();
  sub_1C15197DC();
  id v27 = v26;
  sub_1C15197EC();
  tf_os_signpost_clustering_begin();

  id v28 = objc_msgSend(*(id *)(a5 + 16), sel_personalizationTreatment);
  uint64_t v29 = *(void *)(a5 + 40);
  int v30 = *(unsigned __int8 *)(a5 + v12[17]);
  double v31 = *(double *)(a5 + v12[18]);
  double v32 = *(double *)(a5 + v12[19]);
  uint64_t v33 = v12[20];
  unsigned int v34 = *(unsigned __int16 *)(a5 + v12[21]);
  LOBYTE(v108[0]) = *(unsigned char *)(a5 + v12[16]);
  int v35 = (v34 >> 8) & 1;
  if (v34 == 2) {
    LOBYTE(v35) = 0;
  }
  uint64_t v36 = a5 + v12[10];
  uint64_t v37 = a5 + v12[11];
  uint64_t v38 = a5 + v12[13];
  uint64_t v39 = a5 + v12[14];
  uint64_t v83 = *(void *)(a5 + v12[12]);
  unsigned __int8 v82 = *(unsigned char *)(a5 + v33);
  id v98 = v28;
  sub_1C12CD5E4(v28, v29, v36, v37, v38, v39, (char *)v108, v30, (uint64_t)v19, v31, v32, v35, v82, v83);
  sub_1C15180CC();
  char v40 = sub_1C151809C();
  uint64_t v97 = a6;
  if (v40)
  {
    uint64_t v41 = (void *)qword_1EB93C330;
    sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C1529AE0;
    id v43 = v41;
    uint64_t v44 = sub_1C12D9C1C();
    unint64_t v46 = v45;
    *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v42 + 64) = sub_1BFE9C558();
    uint64_t v47 = 7104878;
    if (v46) {
      uint64_t v47 = v44;
    }
    unint64_t v48 = 0xE300000000000000;
    if (v46) {
      unint64_t v48 = v46;
    }
    *(void *)(v42 + 32) = v47;
    *(void *)(v42 + 40) = v48;
    sub_1C151F38C();
    sub_1C15197BC();

    a6 = v97;
    swift_bridgeObjectRelease();
  }
  unsigned int v84 = a10;
  uint64_t v49 = *(void *)a5;
  objc_msgSend(v98, sel_uGroupMinimumSubscribedChannelSourceFeedArticleRatio, a10);
  double v51 = v50;
  uint64_t v52 = *(void *)(a5 + v12[15]);
  LOWORD(v108[0]) = v34;
  uint64_t v53 = v86;
  sub_1C12DBD68(v37, v86, (uint64_t (*)(void))sub_1C12DBD34);
  uint64_t v54 = type metadata accessor for FeedClusteringOptions(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v53, 1, v54) == 1)
  {
    sub_1C12E0148(v53, (uint64_t (*)(void))sub_1C12DBD34);
    double v55 = 1.0;
  }
  else
  {
    uint64_t v56 = v53 + *(int *)(v54 + 72);
    double v57 = *(double *)v56;
    int v58 = *(unsigned __int8 *)(v56 + 8);
    sub_1C12E0148(v53, type metadata accessor for FeedClusteringOptions);
    if (v58) {
      double v55 = 1.0;
    }
    else {
      double v55 = v57;
    }
  }
  id v89 = sub_1C12D5E84(v49, v104, (uint64_t)v89, v52, (__int16 *)v108, v51, v55);
  uint64_t v59 = v105;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v100, v19, v107);
  sub_1BFC66384(v85, (uint64_t)v108);
  sub_1C12DBD68(a5, v101, type metadata accessor for FeedClusteringRequest);
  uint64_t v60 = v102;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v106, v103);
  unint64_t v61 = (*(unsigned __int8 *)(v59 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v62 = (v88 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v63 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (*(unsigned __int8 *)(v90 + 80) + v63 + 40) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  unint64_t v90 = (unint64_t)&v91[v64 + 7] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v90 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (*(unsigned __int8 *)(v60 + 80) + v65 + 8) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  id v91 = v19;
  unint64_t v67 = (v87 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v68 + v61, v100, v107);
  id v69 = v98;
  *(void *)(v68 + v62) = v98;
  sub_1BFC773DC(v108, v68 + v63);
  sub_1C12DF818(v101, v68 + v64, type metadata accessor for FeedClusteringRequest);
  uint64_t v70 = v84;
  *(void *)(v68 + v90) = v84;
  uint64_t v71 = v104;
  *(void *)(v68 + v65) = v104;
  unint64_t v72 = v68 + v66;
  uint64_t v74 = v102;
  uint64_t v73 = v103;
  (*(void (**)(unint64_t, char *, uint64_t))(v102 + 32))(v72, v99, v103);
  uint64_t v75 = (void *)(v68 + v67);
  uint64_t v76 = v96;
  *uint64_t v75 = v95;
  v75[1] = v76;
  swift_retain();
  id v77 = v69;
  id v78 = v70;
  id v79 = v71;
  swift_retain();
  unint64_t v80 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();

  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v105 + 8))(v91, v107);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v106, v73);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v92, v94);
}

uint64_t sub_1C12D9C1C()
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1C151E68C();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C151536C();
  swift_allocObject();
  sub_1C151535C();
  sub_1C1516E1C();
  sub_1C12E009C(&qword_1EB8628F0, 255, MEMORY[0x1E4FB7840]);
  uint64_t v7 = sub_1C151533C();
  unint64_t v9 = v8;
  swift_release();
  uint64_t v10 = self;
  uint64_t v11 = (void *)sub_1C151605C();
  v23[0] = 0;
  id v12 = objc_msgSend(v10, sel_JSONObjectWithData_options_error_, v11, 0, v23);

  id v13 = v23[0];
  if (v12)
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v24, v26);
    uint64_t v14 = sub_1C1520A7C();
    v23[0] = 0;
    id v15 = objc_msgSend(v10, sel_dataWithJSONObject_options_error_, v14, 1, v23);
    swift_unknownObjectRelease();
    id v16 = v23[0];
    if (v15)
    {
      uint64_t v17 = sub_1C151606C();
      unint64_t v19 = v18;

      sub_1C151E67C();
      uint64_t v5 = sub_1C151E64C();
      sub_1BFE95664(v7, v9);
      sub_1BFE95664(v17, v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
      return v5;
    }
    uint64_t v22 = v16;
    uint64_t v21 = (void *)sub_1C1515D3C();

    swift_willThrow();
    sub_1BFE95664(v7, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  }
  else
  {
    uint64_t v20 = v13;
    uint64_t v21 = (void *)sub_1C1515D3C();

    swift_willThrow();
    sub_1BFE95664(v7, v9);
  }
  if (qword_1EB85FD10 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EB93C330;
  sub_1C151F36C();
  sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1C152036C();
  uint64_t v3 = v24;
  unint64_t v4 = v25;
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1BFE9C558();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C12DA010(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  id v135 = a7;
  id v136 = a8;
  id v145 = a5;
  *(void *)&long long v146 = a6;
  uint64_t v142 = a3;
  uint64_t v134 = sub_1C15197FC();
  uint64_t v129 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  uint64_t v128 = v14;
  uint64_t v133 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1C1516ECC();
  uint64_t v130 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v132 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = v15;
  MEMORY[0x1F4188790](v16);
  long long v143 = (char *)&v118 - v17;
  uint64_t v18 = sub_1C1516E1C();
  uint64_t v138 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v126 = v19;
  uint64_t v140 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C151692C();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = *a1;
  uint64_t v24 = sub_1C15180CC();
  if (sub_1C151809C())
  {
    uint64_t v144 = v24;
    if (qword_1EB863730 != -1) {
      swift_once();
    }
    type metadata accessor for FeedClusteringService();
    sub_1C12E009C(&qword_1EB865088, v25, (void (*)(uint64_t))type metadata accessor for FeedClusteringService);
    sub_1C1516FBC();
    *uint64_t v23 = (_BYTE)v147;
    (*(void (**)(unsigned char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4FB7530], v20);
  }
  else
  {
    (*(void (**)(unsigned char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4FB7528], v20);
  }
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
  uint64_t v125 = v138 + 16;
  uint64_t v124 = v26;
  v26(v140, v142, v18);
  sub_1C151697C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C151695C();
  id v28 = objc_msgSend(a4, sel_defaultTopicsConfig);
  if (!v28)
  {
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  uint64_t v29 = v28;
  sub_1C10F111C();

  uint64_t v139 = (void *)a2;
  id v30 = objc_msgSend(*(id *)(a2 + 16), sel_bundleSubscriptionManager);
  if (!v30) {
    goto LABEL_41;
  }
  id v31 = objc_msgSend(v30, sel_bundleSubscription);
  swift_unknownObjectRelease();
  objc_msgSend(v31, sel_isSubscribed);

  sub_1C1516E4C();
  swift_bridgeObjectRelease();
  if (sub_1C151809C())
  {
    uint64_t v32 = v145[3];
    uint64_t v33 = v145[4];
    __swift_project_boxed_opaque_existential_1(v145, v32);
    unsigned int v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8);
    uint64_t v35 = swift_retain();
    v34(v35, v32, v33);
    swift_release();
  }
  uint64_t v131 = v18;
  uint64_t v36 = *(void *)v146;
  uint64_t v37 = *(void *)(*(void *)v146 + 16);
  uint64_t v122 = v27;
  if (!v37)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = MEMORY[0x1E4FBC868];
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v147 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v68 = *(void *)(sub_1C1516EBC() + 16);
    if (v68)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = 48;
      do
      {
        uint64_t v70 = swift_bridgeObjectRetain();
        sub_1BFEF95B8(v70);
        v69 += 24;
        --v68;
      }
      while (v68);
      swift_bridgeObjectRelease();
    }
    uint64_t v120 = a9;
    swift_bridgeObjectRelease();
    uint64_t v71 = *(void *)(sub_1C1516EAC() + 16);
    if (v71)
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = 48;
      do
      {
        uint64_t v73 = swift_bridgeObjectRetain();
        sub_1BFEF95B8(v73);
        v72 += 24;
        --v71;
      }
      while (v71);
      swift_bridgeObjectRelease();
    }
    uint64_t v144 = a11;
    uint64_t v121 = a10;
    swift_bridgeObjectRelease();
    uint64_t v74 = sub_1C1516E9C();
    sub_1BFEF95B8(v74);
    uint64_t v75 = (uint64_t)v147;
    swift_bridgeObjectRetain();
    uint64_t v76 = v123;
    uint64_t v119 = sub_1C12DE554(v75, v39);
    id v145 = v76;
    swift_bridgeObjectRelease();
    uint64_t v123 = (void *)v39;
    swift_bridgeObjectRelease();
    *(void *)&long long v146 = sub_1C1516EAC();
    uint64_t v47 = (void *)sub_1C1516EBC();
    if (qword_1EB85FD10 != -1) {
      goto LABEL_39;
    }
    goto LABEL_36;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v121 = v36;
  uint64_t v38 = (void **)(v36 + 48);
  uint64_t v39 = MEMORY[0x1E4FBC868];
  while (1)
  {
    long long v146 = *((_OWORD *)v38 - 1);
    uint64_t v42 = *v38;
    uint64_t v144 = v37;
    id v145 = v42;
    id v43 = v42;
    uint64_t v44 = (void *)v146;
    swift_unknownObjectRetain();
    id v45 = *((id *)&v146 + 1);
    unint64_t v46 = v43;
    swift_unknownObjectRetain();
    uint64_t v47 = v45;
    id v48 = objc_msgSend(v44, sel_itemID);
    uint64_t v49 = sub_1C151E62C();
    uint64_t v51 = v50;

    swift_unknownObjectRelease();
    uint64_t v52 = v39;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v147 = (void *)v39;
    unint64_t v55 = sub_1BFEF2D8C(v49, v51);
    uint64_t v56 = *(void *)(v39 + 16);
    BOOL v57 = (v54 & 1) == 0;
    uint64_t v58 = v56 + v57;
    if (__OFADD__(v56, v57)) {
      break;
    }
    char v59 = v54;
    if (*(void *)(v52 + 24) >= v58)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v62 = v147;
        if (v54) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1C1075130();
        unint64_t v62 = v147;
        if (v59) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_1C1064704(v58, isUniquelyReferenced_nonNull_native);
      unint64_t v60 = sub_1BFEF2D8C(v49, v51);
      if ((v59 & 1) != (v61 & 1)) {
        goto LABEL_42;
      }
      unint64_t v55 = v60;
      unint64_t v62 = v147;
      if (v59)
      {
LABEL_12:
        uint64_t v39 = (uint64_t)v62;
        uint64_t v40 = v62[7] + 24 * v55;
        uint64_t v41 = *(void **)(v40 + 16);

        swift_unknownObjectRelease();
        *(void *)uint64_t v40 = v44;
        *(void *)(v40 + 8) = v47;
        *(void *)(v40 + 16) = v145;
        goto LABEL_13;
      }
    }
    v62[(v55 >> 6) + 8] |= 1 << v55;
    unint64_t v63 = (uint64_t *)(v62[6] + 16 * v55);
    *unint64_t v63 = v49;
    v63[1] = v51;
    uint64_t v64 = v62[7] + 24 * v55;
    *(_OWORD *)uint64_t v64 = v146;
    *(void *)(v64 + 16) = v145;
    uint64_t v65 = v62[2];
    BOOL v66 = __OFADD__(v65, 1);
    uint64_t v67 = v65 + 1;
    if (v66) {
      goto LABEL_38;
    }
    uint64_t v39 = (uint64_t)v62;
    v62[2] = v67;
    swift_bridgeObjectRetain();
LABEL_13:
    v38 += 3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v144 - 1;
    if (v144 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  swift_once();
LABEL_36:
  id v77 = (void *)qword_1EB93C330;
  sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_1C152A660;
  uint64_t v147 = *(void **)(v141 + 16);
  id v79 = v77;
  uint64_t v80 = sub_1C152088C();
  uint64_t v82 = v81;
  uint64_t v83 = MEMORY[0x1E4FBB1A0];
  *(void *)(v78 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v84 = sub_1BFE9C558();
  *(void *)(v78 + 64) = v84;
  *(void *)(v78 + 32) = v80;
  *(void *)(v78 + 40) = v82;
  unint64_t v118 = v47;
  uint64_t v147 = (void *)v47[2];
  uint64_t v85 = sub_1C152088C();
  *(void *)(v78 + 96) = v83;
  *(void *)(v78 + 104) = v84;
  *(void *)(v78 + 72) = v85;
  *(void *)(v78 + 80) = v86;
  uint64_t v147 = *(void **)(v146 + 16);
  uint64_t v87 = sub_1C152088C();
  *(void *)(v78 + 136) = v83;
  *(void *)(v78 + 144) = v84;
  *(void *)(v78 + 112) = v87;
  *(void *)(v78 + 120) = v88;
  uint64_t v89 = (uint64_t)v119;
  uint64_t v147 = (void *)v119[2];
  uint64_t v90 = sub_1C152088C();
  *(void *)(v78 + 176) = v83;
  *(void *)(v78 + 184) = v84;
  *(void *)(v78 + 152) = v90;
  *(void *)(v78 + 160) = v91;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v92 = v143;
  uint64_t v93 = sub_1C12DADFC();
  MEMORY[0x1F4188790](v93);
  *(&v118 - 2) = v139;
  *(&v118 - 1) = v94;
  sub_1C12DE6EC(0, (unint64_t *)&qword_1EB879F90, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, MEMORY[0x1E4FBB320]);
  sub_1C151932C();
  uint64_t v147 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v95 = (void *)sub_1C1518E7C();
  sub_1BFD35C60();
  sub_1C12DE754();
  sub_1C151915C();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1C12DAF08(v89);
  swift_bridgeObjectRelease();
  uint64_t v141 = sub_1C15192FC();
  swift_release();
  swift_release();
  v124(v140, v142, v131);
  uint64_t v96 = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v133, v120, v134);
  uint64_t v97 = v130;
  (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v132, v92, v137);
  uint64_t v98 = v138;
  unint64_t v99 = (*(unsigned __int8 *)(v138 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
  unint64_t v100 = (v126 + *(unsigned __int8 *)(v96 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  unint64_t v101 = (v128 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v102 = (*(unsigned __int8 *)(v97 + 80) + v101 + 16) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  unint64_t v103 = (v127 + v102 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v104 = (char *)swift_allocObject();
  uint64_t v105 = v118;
  *((void *)v104 + 2) = v123;
  *((void *)v104 + 3) = v105;
  id v106 = v140;
  id v107 = v135;
  *((void *)v104 + 4) = v139;
  *((void *)v104 + 5) = v107;
  uint64_t v108 = v146;
  *((void *)v104 + 6) = v136;
  *((void *)v104 + 7) = v108;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v104[v99], v106, v131);
  (*(void (**)(char *, char *, uint64_t))(v96 + 32))(&v104[v100], v133, v134);
  uint64_t v109 = &v104[v101];
  uint64_t v110 = v144;
  *(void *)uint64_t v109 = v121;
  *((void *)v109 + 1) = v110;
  unint64_t v111 = &v104[v102];
  uint64_t v112 = v137;
  (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v111, v132, v137);
  *(void *)&v104[v103] = v122;
  uint64_t v113 = swift_allocObject();
  *(void *)(v113 + 16) = sub_1C12DEA14;
  *(void *)(v113 + 24) = v104;
  swift_retain();
  swift_retain();
  id v114 = v135;
  id v115 = v136;
  swift_retain();
  uint64_t v116 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v143, v112);
}

uint64_t sub_1C12DADFC()
{
  uint64_t v0 = sub_1C1516EBC();
  uint64_t v1 = sub_1C1516EAC();
  sub_1C104BC74(v1);
  int64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v2, 0);
    uint64_t v3 = v11;
    unint64_t v4 = (uint64_t *)(v0 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_1BFF661B8(v8 > 1, v7 + 1, 1);
      }
      v4 += 3;
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v9 = v11 + 16 * v7;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C12DAF08(uint64_t a1)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C12CBF54(v3);
  swift_bridgeObjectRelease();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 == *(void *)(a1 + 16))
  {
    sub_1C0153EDC();
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EB85FD10 != -1) {
      swift_once();
    }
    unint64_t v7 = (void *)qword_1EB93C330;
    sub_1C12E00E4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    swift_bridgeObjectRetain();
    id v9 = v7;
    unint64_t v10 = sub_1C11E4DC8(a1);
    swift_bridgeObjectRelease();
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBB5C8];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v8 + 64) = v12;
    *(void *)(v8 + 32) = v11;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v13 = v1[24];
    uint64_t v14 = v1[25];
    __swift_project_boxed_opaque_existential_1(v1 + 21, v13);
    return HeadlineServiceType.fetchHeadlines(for:feedPersonalizer:purpose:)(a1, v1[4], *MEMORY[0x1E4F7E020], v13, v14);
  }
}

uint64_t sub_1C12DB148(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(void **), uint64_t a12, uint64_t a13, uint64_t a14)
{
  id v57 = a7;
  uint64_t v58 = a8;
  uint64_t v63 = a14;
  uint64_t v65 = a12;
  BOOL v66 = a11;
  uint64_t v20 = a9;
  uint64_t v59 = a10;
  uint64_t v60 = a13;
  uint64_t v64 = sub_1C151694C();
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  char v61 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C12DDD50(MEMORY[0x1E4FBC868], a2, a3);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a4 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v56 = a5;
    swift_retain();
    id v68 = a6;
    swift_bridgeObjectRetain();
    uint64_t v55 = a4;
    uint64_t v24 = (uint64_t *)(a4 + 48);
    uint64_t v69 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v67 = a9;
    do
    {
      if (*(void *)(a1 + 16))
      {
        uint64_t v25 = *(v24 - 1);
        uint64_t v26 = *v24;
        uint64_t v27 = *(v24 - 2);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v28 = sub_1BFEF2D8C(v27, v25);
        if (v29)
        {
          uint64_t v30 = *(void *)(*(void *)(a1 + 56) + 8 * v28);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          id v31 = sub_1C12DF994(v26, v22);
          swift_bridgeObjectRelease();
          uint64_t v32 = v22;
          swift_bridgeObjectRelease();
          uint64_t v33 = sub_1C12DEC48(v31);
          swift_bridgeObjectRelease();
          id v34 = v68;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v69 = sub_1C0EE8E14(0, v69[2] + 1, 1, v69);
          }
          unint64_t v36 = v69[2];
          unint64_t v35 = v69[3];
          if (v36 >= v35 >> 1) {
            uint64_t v69 = sub_1C0EE8E14((void *)(v35 > 1), v36 + 1, 1, v69);
          }
          uint64_t v37 = v69;
          v69[2] = v36 + 1;
          uint64_t v38 = &v37[3 * v36];
          v38[4] = v30;
          v38[5] = v33;
          v38[6] = v34;
          uint64_t v20 = v67;
          uint64_t v22 = v32;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
      }
      v24 += 3;
      --v23;
    }
    while (v23);
    a5 = v56;
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v69 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v57, sel_subscribedTags);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB87A160);
  unint64_t v40 = sub_1C151EBCC();

  uint64_t v41 = sub_1C0A793E8(v40);
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_1BFEF4060(v41);
  uint64_t v43 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v43);
  *(&v55 - 6) = a1;
  *(&v55 - 5) = v22;
  *(&v55 - 4) = a5;
  *(&v55 - 3) = v20;
  *(&v55 - 2) = v42;
  uint64_t v44 = swift_bridgeObjectRetain();
  id v45 = sub_1C12DEF1C(v44, (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C12DEC18);
  swift_bridgeObjectRelease();
  if (qword_1EB85FD10 != -1) {
    swift_once();
  }
  id v46 = (id)qword_1EB93C330;
  sub_1C15197EC();
  tf_os_signpost_clustering_end();

  uint64_t v47 = sub_1C1516E9C();
  swift_bridgeObjectRetain();
  id v48 = sub_1C12DF994(v47, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v74[0] = (uint64_t)v45;
  v74[1] = (uint64_t)v48;
  sub_1C12D3FE8(v20, v74, v42, (uint64_t *)&v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v70;
  uint64_t v50 = v71;
  uint64_t v51 = v61;
  sub_1C151696C();
  uint64_t v52 = sub_1C151693C();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v51, v64);
  uint64_t v53 = sub_1C12DD2D0(v52);
  swift_bridgeObjectRelease();
  uint64_t v70 = v69;
  uint64_t v71 = v49;
  uint64_t v72 = v50;
  uint64_t v73 = v53;
  v66(&v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12DB6A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>, uint64_t a8)
{
  if (*(void *)(a5 + 16))
  {
    uint64_t v14 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1BFEF2D8C(a2, a3);
    if (v16)
    {
      uint64_t v17 = *(void **)(*(void *)(a5 + 56) + 8 * v15);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C12DF994(a4, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1C12DEC48(v18);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C12D4B2C(v17, a8, v14);
      *a7 = v17;
      a7[1] = v19;
      a7[2] = result;
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a7 = 0;
  a7[1] = 0;
  a7[2] = 0;
  return result;
}

id sub_1C12DB7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = *(void **)(a5 + 16);
  swift_retain();
  id result = objc_msgSend(v9, sel_translationManager);
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1BFD35658;
    *(void *)(v12 + 24) = v8;
    v14[4] = sub_1BFD2E71C;
    v14[5] = v12;
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 1107296256;
    v14[2] = sub_1C03CCFCC;
    v14[3] = &block_descriptor_105;
    uint64_t v13 = _Block_copy(v14);
    swift_release();
    objc_msgSend(v11, sel_fetchTranslationProvider_, v13);
    _Block_release(v13);
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C12DB8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = *(void **)(a5 + 16);
  swift_retain();
  id v12 = objc_msgSend(v11, sel_subscriptionController);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1C15182FC();
    uint64_t v14 = (void *)sub_1C15182AC();
    unint64_t v15 = (void *)swift_allocObject();
    v15[2] = sub_1BFD35658;
    v15[3] = v10;
    v15[4] = a3;
    v15[5] = a4;
    v17[4] = sub_1C12E034C;
    v17[5] = v15;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 1107296256;
    v17[2] = sub_1C10AF224;
    v17[3] = &block_descriptor_41;
    char v16 = _Block_copy(v17);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_fetchAllTagsWithCallbackQueue_maximumCachedAge_qualityOfService_completion_, v14, 25, v16, 86400.0);
    _Block_release(v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C12DBA80(void *a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  if (a1)
  {
    id v11 = a1;
    a3();
    uint64_t v6 = v11;
  }
  else
  {
    id v8 = a2;
    if (a2)
    {
      id v9 = a2;
      uint64_t v10 = (uint64_t)v8;
    }
    else
    {
      sub_1C12E0358();
      uint64_t v10 = swift_allocError();
      id v8 = (id)v10;
    }
    a5(v10);
    uint64_t v6 = v8;
  }
}

uint64_t sub_1C12DBB5C(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[19];
  uint64_t v4 = a1[20];
  __swift_project_boxed_opaque_existential_1(a1 + 16, v3);
  id v5 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, 86400.0);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v4 + 24))(a2, v5, v3, v4);

  return v6;
}

uint64_t FeedClusteringService.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return v0;
}

uint64_t FeedClusteringService.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedClusteringService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedClusteringService);
}

uint64_t dispatch thunk of FeedClusteringService.__allocating_init(cloudContext:allowlistProvider:feedPersonalizer:personalizationService:headlineClusterOrderer:topicClusteringJournalStorageService:tagService:headlineService:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1C12DBD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C12D9334(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32), *(id *)(v4 + 40), *(void *)(v4 + 48), *(void **)(v4 + 56));
}

void sub_1C12DBD34(uint64_t a1)
{
}

uint64_t sub_1C12DBD68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12DBDD0()
{
  uint64_t v1 = sub_1C1516E1C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (int *)type metadata accessor for FeedClusteringRequest(0);
  uint64_t v77 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v74 = *(void *)(*((void *)v6 - 1) + 64);
  uint64_t v7 = sub_1C15197FC();
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  uint64_t v76 = *(unsigned __int8 *)(v78 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  __swift_destroy_boxed_opaque_existential_1(v0 + v5);
  uint64_t v75 = (v5 + v77 + 40) & ~v77;
  uint64_t v8 = v0 + v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v75 + v6[10];
  uint64_t v10 = (int *)type metadata accessor for FeedClusteringOptions(0);
  id v11 = *(unsigned int (**)(void, void, void))(*((void *)v10 - 1) + 48);
  uint64_t v80 = v11;
  uint64_t v81 = v6;
  if (!v11(v9, 1, v10))
  {
    uint64_t v12 = v9 + v10[5];
    uint64_t v13 = sub_1C1516D9C();
    uint64_t v14 = *(void *)(v13 - 8);
    unint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v16 = v9 + v10[7];
    if (!v15(v16, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
    }
    uint64_t v17 = v9 + v10[8];
    uint64_t v18 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17 + *(int *)(v18 + 24), v13);
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = v9 + v10[10];
    if (!v15(v19, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
    }
    uint64_t v20 = v9 + v10[12];
    if (!v15(v20, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v20, v13);
    }
    uint64_t v21 = v9 + v10[14];
    if (!v15(v21, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
    }
    uint64_t v22 = v9 + v10[16];
    if (!v15(v22, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v13);
    }
    if (*(void *)(v9 + v10[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v9 + v10[19];
    uint64_t v24 = sub_1C1516D2C();
    uint64_t v25 = *(void *)(v24 - 8);
    id v11 = v80;
    uint64_t v6 = v81;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
  }
  uint64_t v26 = v8 + v6[11];
  if (!v11(v26, 1, v10))
  {
    uint64_t v27 = v26 + v10[5];
    uint64_t v28 = sub_1C1516D9C();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    if (!v30(v27, 1, v28)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    }
    uint64_t v31 = v26 + v10[7];
    if (!v30(v31, 1, v28)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
    }
    uint64_t v32 = v26 + v10[8];
    uint64_t v33 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32 + *(int *)(v33 + 24), v28);
      swift_bridgeObjectRelease();
    }
    uint64_t v34 = v26 + v10[10];
    if (!v30(v34, 1, v28)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v28);
    }
    uint64_t v35 = v26 + v10[12];
    if (!v30(v35, 1, v28)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v35, v28);
    }
    uint64_t v36 = v26 + v10[14];
    if (!v30(v36, 1, v28)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v28);
    }
    uint64_t v37 = v26 + v10[16];
    if (!v30(v37, 1, v28)) {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v37, v28);
    }
    if (*(void *)(v26 + v10[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v38 = v26 + v10[19];
    uint64_t v39 = sub_1C1516D2C();
    uint64_t v40 = *(void *)(v39 - 8);
    id v11 = v80;
    uint64_t v6 = v81;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39)) {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = v8 + v6[13];
  if (!v11(v41, 1, v10))
  {
    uint64_t v42 = v41 + v10[5];
    uint64_t v43 = sub_1C1516D9C();
    uint64_t v44 = *(void *)(v43 - 8);
    id v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
    if (!v45(v42, 1, v43)) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    }
    uint64_t v46 = v41 + v10[7];
    if (!v45(v46, 1, v43)) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v43);
    }
    uint64_t v47 = v41 + v10[8];
    uint64_t v48 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 1, v48))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47 + *(int *)(v48 + 24), v43);
      swift_bridgeObjectRelease();
    }
    uint64_t v49 = v41 + v10[10];
    if (!v45(v49, 1, v43)) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v49, v43);
    }
    uint64_t v50 = v41 + v10[12];
    if (!v45(v50, 1, v43)) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v50, v43);
    }
    uint64_t v51 = v41 + v10[14];
    if (!v45(v51, 1, v43)) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v51, v43);
    }
    uint64_t v52 = v41 + v10[16];
    if (!v45(v52, 1, v43)) {
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v52, v43);
    }
    if (*(void *)(v41 + v10[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v53 = v41 + v10[19];
    uint64_t v54 = sub_1C1516D2C();
    uint64_t v55 = *(void *)(v54 - 8);
    id v11 = v80;
    uint64_t v6 = v81;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54)) {
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
    }
  }
  uint64_t v56 = v8 + v6[14];
  if (!v11(v56, 1, v10))
  {
    uint64_t v57 = v56 + v10[5];
    uint64_t v58 = sub_1C1516D9C();
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    if (!v60(v57, 1, v58)) {
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
    }
    uint64_t v61 = v56 + v10[7];
    if (!v60(v61, 1, v58)) {
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v61, v58);
    }
    uint64_t v62 = v56 + v10[8];
    uint64_t v63 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v62, 1, v63))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v62 + *(int *)(v63 + 24), v58);
      swift_bridgeObjectRelease();
    }
    uint64_t v64 = v56 + v10[10];
    if (!v60(v64, 1, v58)) {
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v64, v58);
    }
    uint64_t v65 = v56 + v10[12];
    if (!v60(v65, 1, v58)) {
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v65, v58);
    }
    uint64_t v66 = v56 + v10[14];
    if (!v60(v66, 1, v58)) {
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v66, v58);
    }
    uint64_t v67 = v56 + v10[16];
    if (!v60(v67, 1, v58)) {
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v67, v58);
    }
    if (*(void *)(v56 + v10[17] + 32) != 1) {
      swift_bridgeObjectRelease();
    }
    uint64_t v68 = v56 + v10[19];
    uint64_t v69 = sub_1C1516D2C();
    uint64_t v70 = *(void *)(v69 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69)) {
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
    }
  }
  unint64_t v71 = (v74 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v72 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v78 + 8))(v0 + ((v76 + v72 + 8) & ~v76), v79);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12DCD10(uint64_t *a1)
{
  uint64_t v3 = *(void *)(sub_1C1516E1C() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for FeedClusteringRequest(0) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_1C15197FC() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + v10 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (uint64_t *)(v1 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C12DA010(a1, *(void *)(v1 + 16), v1 + v4, *(void **)(v1 + v5), (void *)(v1 + v6), v1 + v8, *(void **)(v1 + v9), *(void **)(v1 + v10), v1 + v12, *v13, v13[1]);
}

void sub_1C12DCED0(double a1, double a2)
{
  if ((~COERCE__INT64(a2 - a1) & 0x7FF0000000000000) != 0) {
    sub_1C11A46EC(0x20000000000001uLL);
  }
  else {
    __break(1u);
  }
}

uint64_t sub_1C12DCF44(uint64_t a1)
{
  sub_1C12DF67C();
  uint64_t v35 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v37 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FeedClusteringOptions(0);
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char **)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C12E01A8();
  uint64_t result = sub_1C15204DC();
  unint64_t v10 = (void *)result;
  int64_t v11 = 0;
  uint64_t v38 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v30 = v13;
  int64_t v31 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v33 = result + 64;
  uint64_t v34 = v4;
  uint64_t v32 = v4 + 32;
  uint64_t v18 = (uint64_t)v37;
  if ((v16 & v12) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v11 << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v38 + 48) + 16 * i);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_1C12DBD68(*(void *)(v38 + 56) + *(void *)(v36 + 72) * i, (uint64_t)v8, type metadata accessor for FeedClusteringOptions);
    swift_bridgeObjectRetain();
    sub_1C12D3420(v8, v18);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C12E0148((uint64_t)v8, type metadata accessor for FeedClusteringOptions);
      return (uint64_t)v10;
    }
    sub_1C12E0148((uint64_t)v8, type metadata accessor for FeedClusteringOptions);
    *(void *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v27 = (void *)(v10[6] + 16 * i);
    *uint64_t v27 = v25;
    v27[1] = v26;
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v34 + 32))(v10[7] + *(void *)(v34 + 72) * i, v18, v35);
    uint64_t v28 = v10[2];
    BOOL v21 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v21)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v10[2] = v29;
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v21 = __OFADD__(v11++, 1);
    if (v21) {
      goto LABEL_27;
    }
    if (v11 >= v31) {
      return (uint64_t)v10;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v11);
    if (!v22) {
      break;
    }
LABEL_15:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v11 + 1;
  if (v11 + 1 >= v31) {
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v11 + 2;
  if (v11 + 2 >= v31) {
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v11 + 3;
  if (v11 + 3 >= v31) {
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22)
  {
LABEL_14:
    int64_t v11 = v23;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v31) {
      return (uint64_t)v10;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C12DD2D0(uint64_t a1)
{
  sub_1C12DF08C();
  uint64_t result = sub_1C15204DC();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    uint64_t v18 = (void *)(v3[6] + 16 * i);
    long long v19 = *(_OWORD *)(*(void *)(a1 + 56) + 16 * i);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *uint64_t v18 = v17;
    v18[1] = result;
    *(_OWORD *)(v3[7] + 16 * i) = v19;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1C12DD478(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v4 = a2;
  uint64_t v5 = a1;
  if (!(a2 >> 62))
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return (id)v5;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C15204BC();
  if (!v6) {
    goto LABEL_18;
  }
LABEL_3:
  unint64_t v17 = v4;
  unint64_t v7 = v4 & 0xC000000000000001;
  for (uint64_t i = 4; ; ++i)
  {
    uint64_t v5 = i - 4;
    if (v7) {
      id v10 = (id)MEMORY[0x1C18C7CB0](i - 4, v4);
    }
    else {
      id v10 = *(id *)(v4 + 8 * i);
    }
    int64_t v9 = v10;
    uint64_t v11 = i - 3;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    id result = objc_msgSend(v10, sel_tagID);
    if (!result) {
      break;
    }
    int64_t v13 = result;
    id v14 = objc_msgSend(a3, sel_topicTranslationForTagID_, result);

    if (v14)
    {
      id v15 = objc_msgSend(v14, sel_articleTopic);

      if (v15)
      {
        id v16 = v15;
        MEMORY[0x1C18C66D0]();
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();

        int64_t v9 = v16;
        unint64_t v4 = v17;
      }
    }

    if (v11 == v6)
    {
      swift_bridgeObjectRelease();
      return (id)a1;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1C12DD66C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, uint64_t a16)
{
  int v41 = a8;
  uint64_t v18 = *result;
  uint64_t v17 = result[1];
  uint64_t v19 = result[2];
  uint64_t v20 = result[3];
  uint64_t v21 = result[4];
  uint64_t v36 = *result;
  uint64_t v37 = v17;
  uint64_t v38 = v19;
  uint64_t v39 = v20;
  uint64_t v40 = v21;
  uint64_t v22 = *(void *)(a2 + 16);
  if (v22)
  {
    uint64_t v29 = a9;
    swift_bridgeObjectRetain();
    uint64_t v24 = (void **)(a2 + 48);
    while (1)
    {
      uint64_t v25 = *(v24 - 1);
      uint64_t v26 = *v24;
      v35[0] = *(v24 - 2);
      v35[1] = v25;
      v35[2] = v26;
      id v27 = v26;
      swift_unknownObjectRetain();
      id v28 = v25;
      sub_1C12D7138((uint64_t)&v36, (uint64_t)v35, a3, a4, a5, a6, a7, v41, a10, a11, a12, a13, a14 & 1, a15 & 1, a16);
      if (v16) {
        break;
      }
      v24 += 3;

      swift_unknownObjectRelease();
      if (!--v22)
      {
        id result = (uint64_t *)swift_bridgeObjectRelease();
        uint64_t v18 = v36;
        uint64_t v17 = v37;
        uint64_t v19 = v38;
        uint64_t v20 = v39;
        uint64_t v21 = v40;
        a9 = v29;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    *a9 = v18;
    a9[1] = v17;
    a9[2] = v19;
    a9[3] = v20;
    a9[4] = v21;
  }
  return result;
}

uint64_t sub_1C12DD82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v38 = a1;
  uint64_t v36 = a2 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a2 + 56);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v32 = a6;
  if (v14) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v20 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v20 < v15)
    {
      unint64_t v21 = *(void *)(v36 + 8 * v20);
      ++v17;
      if (v21) {
        goto LABEL_22;
      }
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v36 + 8 * v17);
      if (v21) {
        goto LABEL_22;
      }
      int64_t v17 = v20 + 2;
      if (v20 + 2 >= v15) {
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v36 + 8 * v17);
      if (v21) {
        goto LABEL_22;
      }
      int64_t v17 = v20 + 3;
      if (v20 + 3 >= v15) {
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v36 + 8 * v17);
      if (v21)
      {
LABEL_22:
        unint64_t v14 = (v21 - 1) & v21;
        for (unint64_t i = __clz(__rbit64(v21)) + (v17 << 6); ; unint64_t i = v18 | (v17 << 6))
        {
          int64_t v23 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
          uint64_t v24 = *v23;
          uint64_t v25 = v23[1];
          swift_bridgeObjectRetain();
          if ((sub_1BFF896B4(v24, v25, a3) & 1) != 0
            || (sub_1BFF896B4(v24, v25, a4) & 1) != 0
            || (sub_1BFF896B4(v24, v25, a5) & 1) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1BFEFFC1C(&v37, v24, v25);
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (!v14) {
              goto LABEL_7;
            }
          }
          else
          {
            if (*(void *)(a6 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v26 = sub_1BFEF2D8C(v24, v25);
              if (v27) {
                uint64_t v28 = *(void *)(*(void *)(a6 + 56) + 8 * v26);
              }
              else {
                uint64_t v28 = 0;
              }
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v28 = 0;
            }
            if (*(void *)(a7 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v29 = sub_1BFEF2D8C(v24, v25);
              if (v30)
              {
                uint64_t v31 = *(void *)(*(void *)(a7 + 56) + 8 * v29);
                swift_bridgeObjectRelease();
                if (v31 > 0 && (double)v28 / (double)v31 > a8)
                {
                  swift_bridgeObjectRetain();
                  sub_1BFEFFC1C(&v37, v24, v25);
                  swift_bridgeObjectRelease();
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            uint64_t result = swift_bridgeObjectRelease();
            a6 = v32;
            if (!v14) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v18 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
        }
      }
      int64_t v22 = v20 + 4;
      if (v22 < v15)
      {
        unint64_t v21 = *(void *)(v36 + 8 * v22);
        if (v21)
        {
          int64_t v17 = v22;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v17 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_42;
          }
          if (v17 >= v15) {
            break;
          }
          unint64_t v21 = *(void *)(v36 + 8 * v17);
          ++v22;
          if (v21) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_40:
    swift_release();
    return v38;
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1C12DDB34(void *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  if (a2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      unint64_t v23 = v4 & 0xC000000000000001;
      uint64_t v6 = 4;
      unint64_t v21 = v4;
      do
      {
        uint64_t v7 = v6 - 4;
        if (v23)
        {
          unint64_t v8 = (void *)MEMORY[0x1C18C7CB0](v6 - 4, v4);
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          unint64_t v8 = *(void **)(v4 + 8 * v6);
          swift_unknownObjectRetain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        id v10 = objc_msgSend(v8, sel_identifier);
        uint64_t v11 = sub_1C151E62C();
        uint64_t v13 = v12;

        if (*(void *)(a3 + 16) && (unint64_t v14 = sub_1BFEF2D8C(v11, v13), (v15 & 1) != 0))
        {
          long long v22 = *(_OWORD *)(*(void *)(a3 + 56) + 16 * v14);
          swift_unknownObjectRetain_n();
          id v16 = *((id *)&v22 + 1);
          swift_bridgeObjectRelease();
          id v17 = v16;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a1 = sub_1C0EE25A4(0, a1[2] + 1, 1, a1);
          }
          unint64_t v19 = a1[2];
          unint64_t v18 = a1[3];
          if (v19 >= v18 >> 1) {
            a1 = sub_1C0EE25A4((void *)(v18 > 1), v19 + 1, 1, a1);
          }
          a1[2] = v19 + 1;
          *(_OWORD *)&a1[2 * v19 + 4] = v22;
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          unint64_t v4 = v21;
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C12DDD50(void *a1, unint64_t a2, void *a3)
{
  unint64_t v4 = a2;
  if (a2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    if (v6) {
      goto LABEL_3;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_29;
  }
LABEL_3:
  unint64_t v42 = v4;
  unint64_t v43 = v4 & 0xC000000000000001;
  uint64_t v7 = 4;
  int v41 = a3;
  while (1)
  {
    uint64_t v9 = v7 - 4;
    if (v43)
    {
      id v10 = (void *)MEMORY[0x1C18C7CB0](v7 - 4, v4);
      uint64_t v11 = v7 - 3;
      if (__OFADD__(v9, 1)) {
        goto LABEL_25;
      }
    }
    else
    {
      id v10 = *(void **)(v4 + 8 * v7);
      swift_unknownObjectRetain();
      uint64_t v11 = v7 - 3;
      if (__OFADD__(v9, 1))
      {
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    uint64_t v44 = v11;
    id v12 = objc_msgSend(v10, sel_identifier);
    uint64_t v13 = sub_1C151E62C();
    uint64_t v45 = v14;

    id v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    if (a3[2] && (unint64_t v19 = sub_1BFEF2D8C(v16, v18), (v20 & 1) != 0))
    {
      uint64_t v21 = a3[7] + 24 * v19;
      long long v22 = *(void **)(v21 + 8);
      id v23 = *(id *)(v21 + 16);
      swift_unknownObjectRetain();
      id v24 = v22;

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v46 = a1;
    uint64_t v26 = v13;
    a3 = a1;
    unint64_t v4 = sub_1BFEF2D8C(v13, v45);
    uint64_t v28 = a1[2];
    BOOL v29 = (v27 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_26;
    }
    char v31 = v27;
    if (a1[3] < v30) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a3 = &v46;
      sub_1C1074F64();
    }
    uint64_t v32 = v45;
    a1 = v46;
    if (v31)
    {
LABEL_4:
      uint64_t v8 = a1[7] + 16 * v4;

      swift_unknownObjectRelease();
      *(void *)uint64_t v8 = v10;
      *(void *)(v8 + 8) = v24;
      goto LABEL_5;
    }
LABEL_23:
    a1[(v4 >> 6) + 8] |= 1 << v4;
    uint64_t v35 = (uint64_t *)(a1[6] + 16 * v4);
    *uint64_t v35 = v26;
    v35[1] = v32;
    uint64_t v36 = (void *)(a1[7] + 16 * v4);
    *uint64_t v36 = v10;
    v36[1] = v24;
    uint64_t v37 = a1[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_27;
    }
    a1[2] = v39;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v7;
    a3 = v41;
    unint64_t v4 = v42;
    if (v44 == v6) {
      goto LABEL_29;
    }
  }
  sub_1C10643F0(v30, isUniquelyReferenced_nonNull_native);
  a3 = v46;
  uint64_t v32 = v45;
  unint64_t v33 = sub_1BFEF2D8C(v26, v45);
  if ((v31 & 1) == (v34 & 1))
  {
    unint64_t v4 = v33;
    a1 = v46;
    if (v31) {
      goto LABEL_4;
    }
    goto LABEL_23;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C12DE084(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v55 = a6;
  uint64_t v56 = a7;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v52 = a3;
  long long v13 = *a2;
  long long v50 = a2[1];
  long long v51 = v13;
  uint64_t v49 = *((void *)a2 + 4);
  sub_1C12DFC6C(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C151691C();
  MEMORY[0x1F4188790](v17);
  uint64_t v48 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v40 = (char *)&v40 - v21;
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v44 = a1 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v45 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v41 = v20;
  uint64_t v46 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v27 = 0;
  unint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v43 = a1;
  uint64_t v42 = a8;
  if (v25) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v27++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v27 >= v45) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v44 + 8 * v27);
  if (v32) {
    goto LABEL_19;
  }
  int64_t v33 = v27 + 1;
  if (v27 + 1 >= v45) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v44 + 8 * v33);
  if (v32)
  {
LABEL_18:
    int64_t v27 = v33;
LABEL_19:
    unint64_t v25 = (v32 - 1) & v32;
    for (unint64_t i = __clz(__rbit64(v32)) + (v27 << 6); ; unint64_t i = v29 | (v27 << 6))
    {
      char v34 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
      uint64_t v35 = v34[1];
      v59[0] = *v34;
      v59[1] = v35;
      v57[0] = v51;
      v57[1] = v50;
      uint64_t v58 = v49;
      swift_bridgeObjectRetain();
      sub_1C12D8D40(v59, (uint64_t)v57, v52, v53, v54, v55, v56, a8, (uint64_t)v16, a9);
      if (v9) {
        break;
      }
      swift_bridgeObjectRelease();
      if ((*v47)(v16, 1, v17) == 1)
      {
        uint64_t result = sub_1C12E0148((uint64_t)v16, (uint64_t (*)(void))sub_1C12DFC6C);
        if (!v25) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v36 = *v46;
        uint64_t v37 = v40;
        (*v46)(v40, v16, v17);
        v36(v48, v37, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v28 = sub_1C0EE8D50(0, *(void *)(v28 + 16) + 1, 1, v28);
        }
        unint64_t v39 = *(void *)(v28 + 16);
        unint64_t v38 = *(void *)(v28 + 24);
        if (v39 >= v38 >> 1) {
          unint64_t v28 = sub_1C0EE8D50(v38 > 1, v39 + 1, 1, v28);
        }
        *(void *)(v28 + 16) = v39 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v36)(v28+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v39, v48, v17);
        a1 = v43;
        a8 = v42;
        if (!v25) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v29 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return v28;
  }
  int64_t v33 = v27 + 2;
  if (v27 + 2 >= v45)
  {
LABEL_33:
    swift_release();
    return v28;
  }
  unint64_t v32 = *(void *)(v44 + 8 * v33);
  if (v32) {
    goto LABEL_18;
  }
  int64_t v33 = v27 + 3;
  if (v27 + 3 >= v45) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v44 + 8 * v33);
  if (v32) {
    goto LABEL_18;
  }
  int64_t v33 = v27 + 4;
  if (v27 + 4 >= v45) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v44 + 8 * v33);
  if (v32) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v27 >= v45) {
      goto LABEL_33;
    }
    unint64_t v32 = *(void *)(v44 + 8 * v27);
    ++v33;
    if (v32) {
      goto LABEL_19;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

void *sub_1C12DE554(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain_n();
      unint64_t v8 = sub_1BFEF2D8C(v7, v6);
      if (v9)
      {
        uint64_t v10 = *(void *)(a2 + 56) + 24 * v8;
        long long v18 = *(_OWORD *)v10;
        uint64_t v11 = *(void **)(v10 + 16);
        id v12 = v11;
        swift_unknownObjectRetain();
        id v13 = *((id *)&v18 + 1);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1C0EE70C8(0, v5[2] + 1, 1, v5);
        }
        unint64_t v15 = v5[2];
        unint64_t v14 = v5[3];
        if (v15 >= v14 >> 1) {
          uint64_t v5 = sub_1C0EE70C8((void *)(v14 > 1), v15 + 1, 1, v5);
        }
        v5[2] = v15 + 1;
        uint64_t v16 = &v5[3 * v15];
        *((_OWORD *)v16 + 2) = v18;
        v16[6] = v11;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C12DE6D0()
{
  return sub_1C12DBB5C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C12DE6EC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC9DBE8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C12DE754()
{
  unint64_t result = qword_1EB879FA0;
  if (!qword_1EB879FA0)
  {
    sub_1C12DE6EC(255, (unint64_t *)&qword_1EB879F90, (unint64_t *)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879FA0);
  }
  return result;
}

uint64_t sub_1C12DE7D8()
{
  uint64_t v12 = sub_1C1516E1C();
  uint64_t v1 = *(void *)(v12 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v11 = sub_1C15197FC();
  uint64_t v3 = *(void *)(v11 - 8);
  unint64_t v4 = (v10 + v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_1C1516ECC();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v10, v12);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v11);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12DEA14(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C1516E1C() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1C15197FC() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_1C1516ECC() - 8);
  unint64_t v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_1C12DB148(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), v2 + v6, v2 + v9, *(void (**)(void **))(v2 + v10), *(void *)(v2 + v10 + 8), v2 + v12, *(void *)(v2 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C12DEBA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12DEBE0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1C12DEC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1C12DB6A0(a1, a2, a3, a4, v5[2], v5[3], a5, v5[6]);
}

uint64_t sub_1C12DEC48(void *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = a1[2];
  if (!v2)
  {
    unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
    sub_1C12CB6F8((uint64_t)v1);
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
    unint64_t v25 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    id v26 = (id)FCPromoteOneHeadlineIgnoringProminence();

    if (v26)
    {
      unint64_t v27 = sub_1C151EBCC();

      swift_bridgeObjectRetain();
      uint64_t v1 = sub_1C12DDB34(MEMORY[0x1E4FBC860], v27, (uint64_t)v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  unint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    long long v29 = *(_OWORD *)&v1[2 * v3 + 4];
    unint64_t v6 = (void *)v1[2 * v3 + 4];
    swift_unknownObjectRetain();
    id v7 = *((id *)&v29 + 1);
    id v8 = objc_msgSend(v6, sel_identifier);
    uint64_t v9 = sub_1C151E62C();
    uint64_t v11 = v10;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_1BFEF2D8C(v9, v11);
    uint64_t v15 = v4[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      break;
    }
    char v18 = v13;
    if (v4[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v13) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C1074F64();
        if (v18) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C10643F0(v17, isUniquelyReferenced_nonNull_native);
      unint64_t v19 = sub_1BFEF2D8C(v9, v11);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_24;
      }
      unint64_t v14 = v19;
      if (v18)
      {
LABEL_3:
        uint64_t v5 = v4[7] + 16 * v14;

        swift_unknownObjectRelease();
        *(_OWORD *)uint64_t v5 = v29;
        goto LABEL_4;
      }
    }
    v4[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v21 = (uint64_t *)(v4[6] + 16 * v14);
    *uint64_t v21 = v9;
    v21[1] = v11;
    *(_OWORD *)(v4[7] + 16 * v14) = v29;
    uint64_t v22 = v4[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_23;
    }
    v4[2] = v24;
    swift_bridgeObjectRetain();
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2 == v3)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

void *sub_1C12DEF1C(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = 0;
  uint64_t v5 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  unint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v9 = *(v5 - 1);
    uint64_t v8 = *v5;
    uint64_t v10 = *(v5 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v18, v4, v10, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((void)v18)
    {
      long long v17 = v18;
      uint64_t v11 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_1C0EE44DC(0, v6[2] + 1, 1, v6);
      }
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      long long v14 = v17;
      if (v13 >= v12 >> 1)
      {
        uint64_t v15 = sub_1C0EE44DC((void *)(v12 > 1), v13 + 1, 1, v6);
        long long v14 = v17;
        unint64_t v6 = v15;
      }
      v6[2] = v13 + 1;
      id v7 = &v6[3 * v13];
      *((_OWORD *)v7 + 2) = v14;
      v7[6] = v11;
    }
    ++v4;
    v5 += 3;
  }
  while (v2 != v4);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1C12DF08C()
{
  if (!qword_1EB86B540)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B540);
    }
  }
}

uint64_t sub_1C12DF0F4(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C12DF134(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C12DF174()
{
  if (!qword_1EB86C1D0)
  {
    sub_1C1516CAC();
    sub_1C1516CBC();
    sub_1C1516CCC();
    sub_1C1516C9C();
    sub_1C1516C6C();
    sub_1C1516C7C();
    sub_1C1516CDC();
    sub_1C1516C8C();
    sub_1C12E009C(&qword_1EB862898, 255, MEMORY[0x1E4FB77E0]);
    sub_1C12E009C(&qword_1EB862890, 255, MEMORY[0x1E4FB77B0]);
    unint64_t v0 = sub_1C1516D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C1D0);
    }
  }
}

void sub_1C12DF310()
{
  if (!qword_1EB86C188)
  {
    sub_1C1516A0C();
    sub_1C1516A1C();
    sub_1C1516A2C();
    sub_1C15169FC();
    sub_1C15169DC();
    sub_1C15169EC();
    sub_1C1516A3C();
    sub_1C1516A4C();
    sub_1C12E009C(&qword_1EB861130, 255, MEMORY[0x1E4FB7690]);
    sub_1C12E009C((unint64_t *)&unk_1EB862848, 255, MEMORY[0x1E4FB76A0]);
    unint64_t v0 = sub_1C1516D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C188);
    }
  }
}

void sub_1C12DF4AC()
{
  if (!qword_1EB86C1B0)
  {
    sub_1C1516BAC();
    sub_1C1516BBC();
    sub_1C1516BCC();
    sub_1C1516B9C();
    sub_1C1516B6C();
    sub_1C1516B7C();
    sub_1C1516BDC();
    sub_1C1516B8C();
    sub_1C12E009C(&qword_1EB862878, 255, MEMORY[0x1E4FB7740]);
    sub_1C12E009C(&qword_1EB862870, 255, MEMORY[0x1E4FB7710]);
    unint64_t v0 = sub_1C1516D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C1B0);
    }
  }
}

void sub_1C12DF648(uint64_t a1)
{
}

void sub_1C12DF67C()
{
  if (!qword_1EB86C198)
  {
    sub_1C1516AFC();
    sub_1C1516B1C();
    sub_1C1516B3C();
    sub_1C1516ADC();
    sub_1C1516A8C();
    sub_1C1516AAC();
    sub_1C1516B5C();
    sub_1C1516ABC();
    sub_1C12E009C((unint64_t *)&unk_1EB862860, 255, MEMORY[0x1E4FB76F0]);
    sub_1C12E009C(&qword_1EB862858, 255, MEMORY[0x1E4FB76C0]);
    unint64_t v0 = sub_1C1516D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C198);
    }
  }
}

uint64_t sub_1C12DF818(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12DF880()
{
  return MEMORY[0x1E4FB76D0];
}

uint64_t sub_1C12DF88C()
{
  return MEMORY[0x1E4FB76D8];
}

uint64_t sub_1C12DF898()
{
  return MEMORY[0x1E4FB76E0];
}

uint64_t sub_1C12DF8A4()
{
  return MEMORY[0x1E4FB76C8];
}

uint64_t sub_1C12DF8B0()
{
  return MEMORY[0x1E4FB76A8];
}

uint64_t sub_1C12DF8BC()
{
  return MEMORY[0x1E4FB76B0];
}

uint64_t sub_1C12DF8C8()
{
  return sub_1C12E009C((unint64_t *)&unk_1EB862860, 255, MEMORY[0x1E4FB76F0]);
}

uint64_t sub_1C12DF914()
{
  return sub_1C12E009C(&qword_1EB862858, 255, MEMORY[0x1E4FB76C0]);
}

uint64_t sub_1C12DF960()
{
  return sub_1C1516D3C();
}

void *sub_1C12DF994(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain_n();
      unint64_t v8 = sub_1BFEF2D8C(v7, v6);
      if (v9)
      {
        long long v14 = *(_OWORD *)(*(void *)(a2 + 56) + 16 * v8);
        swift_unknownObjectRetain();
        id v10 = *((id *)&v14 + 1);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1C0EE25A4(0, v5[2] + 1, 1, v5);
        }
        unint64_t v12 = v5[2];
        unint64_t v11 = v5[3];
        if (v12 >= v11 >> 1) {
          uint64_t v5 = sub_1C0EE25A4((void *)(v11 > 1), v12 + 1, 1, v5);
        }
        v5[2] = v12 + 1;
        *(_OWORD *)&v5[2 * v12 + 4] = v14;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C12DFAF0()
{
  return sub_1C12D60B0(*(_WORD *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C12DFB14()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12DFB74(uint64_t *a1)
{
  return sub_1C12D6418(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int16 *)(v1 + 64), *(double *)(v1 + 72));
}

void sub_1C12DFBA0()
{
  if (!qword_1EB86AFB8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C12E00E4(255, &qword_1EB86AFB0, MEMORY[0x1E4FB7550], MEMORY[0x1E4FBB320]);
    sub_1C12E00E4(255, &qword_1EB86AFA8, MEMORY[0x1E4FB7518], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86AFB8);
    }
  }
}

void sub_1C12DFC6C(uint64_t a1)
{
}

void sub_1C12DFCA0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C12DFCEC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v24 = result + 32;
  uint64_t v5 = a2 + 56;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v25 = v6;
    while (1)
    {
      if (v4 == v25)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = (uint64_t *)(v24 + 16 * v4);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      ++v4;
      if (!*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v10 = sub_1C1520E0C();
      uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v12 = v10 & ~v11;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v13 = *(void *)(a2 + 48);
      long long v14 = (void *)(v13 + 16 * v12);
      BOOL v15 = *v14 == v9 && v14[1] == v8;
      if (!v15 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      if (v4 == v2) {
        return v23;
      }
    }
    uint64_t v16 = ~v11;
    while (1)
    {
      unint64_t v12 = (v12 + 1) & v16;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        break;
      }
      long long v17 = (void *)(v13 + 16 * v12);
      BOOL v18 = *v17 == v9 && v17[1] == v8;
      if (v18 || (sub_1C1520A9C() & 1) != 0) {
        goto LABEL_7;
      }
    }
LABEL_25:
    uint64_t v19 = v23;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1BFF661B8(0, *(void *)(v23 + 16) + 1, 1);
      uint64_t v19 = v23;
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1)
    {
      uint64_t result = sub_1BFF661B8(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v23;
    }
    *(void *)(v19 + 16) = v21 + 1;
    uint64_t v23 = v19;
    uint64_t v22 = v19 + 16 * v21;
    *(void *)(v22 + 32) = v9;
    *(void *)(v22 + 40) = v8;
  }
  while (v4 != v2);
  return v23;
}

void sub_1C12DFF00()
{
  if (!qword_1EB86C1C0)
  {
    sub_1C1516C2C();
    sub_1C1516C3C();
    sub_1C1516C4C();
    sub_1C1516C1C();
    sub_1C1516BEC();
    sub_1C1516BFC();
    sub_1C1516C5C();
    sub_1C1516C0C();
    sub_1C12E009C(&qword_1EB862888, 255, MEMORY[0x1E4FB7790]);
    sub_1C12E009C(&qword_1EB862880, 255, MEMORY[0x1E4FB7760]);
    unint64_t v0 = sub_1C1516D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C1C0);
    }
  }
}

uint64_t sub_1C12E009C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C12E00E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C12E0148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C12E01A8()
{
  if (!qword_1EB86DE78)
  {
    sub_1C12DF67C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DE78);
    }
  }
}

void sub_1C12E0210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C12DB8FC(a1, a2, a3, a4, v4);
}

void sub_1C12E0218()
{
  if (!qword_1EB85C890)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB85DFB8);
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C890);
    }
  }
}

id sub_1C12E0280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C12DB7C0(a1, a2, a3, a4, v4);
}

void sub_1C12E0288()
{
  if (!qword_1EB85C898)
  {
    sub_1C12DE6EC(255, (unint64_t *)&unk_1EB85DFD0, &qword_1EB85DFC8, (uint64_t)&protocolRef_FCTranslationProvider, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C898);
    }
  }
}

uint64_t sub_1C12E030C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C12E034C(void *a1, void *a2)
{
  sub_1C12DBA80(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32));
}

unint64_t sub_1C12E0358()
{
  unint64_t result = qword_1EA1ADE00;
  if (!qword_1EA1ADE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedClusteringService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12E0448);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedClusteringService.Errors()
{
  return &type metadata for FeedClusteringService.Errors;
}

unint64_t sub_1C12E0484()
{
  unint64_t result = qword_1EA1ADE08;
  if (!qword_1EA1ADE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE08);
  }
  return result;
}

uint64_t sub_1C12E04F0()
{
  return sub_1C12DE6D0();
}

uint64_t *sub_1C12E0508(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(v4 + 20);
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v11 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
        uint64_t started = type metadata accessor for StartTime(0);
        v8[*(int *)(started + 20)] = v9[*(int *)(started + 20)];
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
        uint64_t v15 = sub_1C151631C();
        uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16);
        v16(v8, v9, v15);
        uint64_t v17 = type metadata accessor for StartTimeEndTime(0);
        v16(&v8[*(int *)(v17 + 20)], &v9[*(int *)(v17 + 20)], v15);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C12E0A58(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for SportsEventStatusResponseEmbed() + 20);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t v4 = sub_1C151631C();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t v6 = v4;
      uint64_t v7 = v2;
      goto LABEL_4;
    case 8:
    case 9:
      uint64_t v8 = sub_1C151631C();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v8 - 8), v2, v8);
      uint64_t v7 = v2 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      uint64_t v6 = v8;
      int v5 = v9;
LABEL_4:
      uint64_t result = v5(v7, v6);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C12E0BB4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(type metadata accessor for SportsEventStatusResponseEmbed() + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v9 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
      uint64_t started = type metadata accessor for StartTime(0);
      v6[*(int *)(started + 20)] = v7[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v11 = sub_1C151631C();
      unint64_t v12 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(v6, v7, v11);
      uint64_t v13 = type metadata accessor for StartTimeEndTime(0);
      v12(&v6[*(int *)(v13 + 20)], &v7[*(int *)(v13 + 20)], v11);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1C12E1090(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  if (a1 != a2)
  {
    uint64_t v5 = *(int *)(v4 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    sub_1C12E158C((uint64_t)a1 + v5);
    uint64_t v8 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v9 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
        uint64_t started = type metadata accessor for StartTime(0);
        v6[*(int *)(started + 20)] = v7[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v11 = sub_1C151631C();
        unint64_t v12 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16);
        v12(v6, v7, v11);
        uint64_t v13 = type metadata accessor for StartTimeEndTime(0);
        v12(&v6[*(int *)(v13 + 20)], &v7[*(int *)(v13 + 20)], v11);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C12E158C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1C12E15E8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for SportsEventStatusResponseEmbed() + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v8 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      uint64_t started = type metadata accessor for StartTime(0);
      v5[*(int *)(started + 20)] = v6[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v10 = sub_1C151631C();
      uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v5, v6, v10);
      uint64_t v12 = type metadata accessor for StartTimeEndTime(0);
      v11(&v5[*(int *)(v12 + 20)], &v6[*(int *)(v12 + 20)], v10);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1C12E1ABC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for SportsEventStatusResponseEmbed();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C12E158C((uint64_t)a1 + v6);
    uint64_t v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v10 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
        uint64_t started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v12 = sub_1C151631C();
        uint64_t v13 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32);
        v13(v7, v8, v12);
        uint64_t v14 = type metadata accessor for StartTimeEndTime(0);
        v13(&v7[*(int *)(v14 + 20)], &v8[*(int *)(v14 + 20)], v12);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C12E1FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C12E1FBC);
}

uint64_t sub_1C12E1FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C12E2028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C12E203C);
}

uint64_t sub_1C12E203C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SportsEventStatusResponseData()
{
  uint64_t result = qword_1EB868C40;
  if (!qword_1EB868C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C12E20F8()
{
  uint64_t result = type metadata accessor for SportsEventStatusResponseEmbed();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C12E2184@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for SportsEventStatusResponseEmbed();
  MEMORY[0x1F4188790](v4);
  BOOL v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12E2770(0, &qword_1EB86B6F8, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v17 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for SportsEventStatusResponseData();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12E26B4();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v13 = v17;
    sub_1C12E27D4(&qword_1EB8690D8);
    uint64_t v14 = (uint64_t)v18;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    sub_1C12E2708(v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
    sub_1C12E2708((uint64_t)v12, v16, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseData);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C12E240C()
{
  return 0x6465626D65;
}

uint64_t sub_1C12E2420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6465626D65 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C12E24B0(uint64_t a1)
{
  unint64_t v2 = sub_1C12E26B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12E24EC(uint64_t a1)
{
  unint64_t v2 = sub_1C12E26B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C12E2528@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C12E2184(a1, a2);
}

uint64_t sub_1C12E2540(void *a1)
{
  sub_1C12E2770(0, &qword_1EA1ADE10, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12E26B4();
  sub_1C1520F0C();
  type metadata accessor for SportsEventStatusResponseEmbed();
  sub_1C12E27D4(&qword_1EA1ADE18);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C12E26B4()
{
  unint64_t result = qword_1EB868C10;
  if (!qword_1EB868C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868C10);
  }
  return result;
}

uint64_t sub_1C12E2708(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C12E2770(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C12E26B4();
    unint64_t v7 = a3(a1, &type metadata for SportsEventStatusResponseData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C12E27D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SportsEventStatusResponseEmbed();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsEventStatusResponseData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12E28B4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEventStatusResponseData.CodingKeys()
{
  return &type metadata for SportsEventStatusResponseData.CodingKeys;
}

unint64_t sub_1C12E28F0()
{
  unint64_t result = qword_1EA1ADE20;
  if (!qword_1EA1ADE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE20);
  }
  return result;
}

unint64_t sub_1C12E2948()
{
  unint64_t result = qword_1EB868C20;
  if (!qword_1EB868C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868C20);
  }
  return result;
}

unint64_t sub_1C12E29A0()
{
  unint64_t result = qword_1EB868C18;
  if (!qword_1EB868C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868C18);
  }
  return result;
}

uint64_t FormatMicaNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatMicaNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 232);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatMicaNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatMicaNode.runMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  char v4 = *(unsigned char *)(v1 + 216);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 212);
  *(unsigned char *)(a1 + 4) = v4;
  return result;
}

uint64_t FormatMicaNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 224);
}

uint64_t FormatMicaNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t FormatMicaNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatMicaNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatMicaNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatMicaNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatMicaNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatMicaNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
  return swift_retain();
}

uint64_t FormatMicaNode.mediaTiming.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C0A5C348(v1 + 72, (uint64_t)v4);
  sub_1C0A5C348((uint64_t)v4, a1);
  return sub_1C00F6940((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
}

uint64_t FormatMicaNode.runMode.setter(int *a1)
{
  int v2 = *a1;
  char v3 = *((unsigned char *)a1 + 4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v1 + 212) = v2;
  *(unsigned char *)(v1 + 216) = v3;
  return result;
}

uint64_t (*FormatMicaNode.runMode.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 224) = a1;
  return result;
}

uint64_t (*FormatMicaNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C12E2EB4(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 232);
  *(void *)(v3 + 232) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatMicaNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 232);
  *(void *)(v1 + 232) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatMicaNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 240) = a1;
  return result;
}

uint64_t (*FormatMicaNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatMicaNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 256);
  *(void *)a1 = *(void *)(v1 + 248);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1C12E3058(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 264) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatMicaNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 264) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatMicaNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatMicaNode.__allocating_init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, int *a9, uint64_t a10, uint64_t *a11, char a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v19 = swift_allocObject();
  FormatMicaNode.init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v19;
}

uint64_t FormatMicaNode.init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, int *a9, uint64_t a10, uint64_t *a11, char a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v17 = *a3;
  uint64_t v18 = *a4;
  uint64_t v19 = *a7;
  sub_1C0A5C348(a8, (uint64_t)v28);
  int v20 = *a9;
  char v21 = *((unsigned char *)a9 + 4);
  uint64_t v22 = *a11;
  uint64_t v27 = *a13;
  char v23 = *((unsigned char *)a13 + 8);
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = v17;
  *(void *)(v14 + 40) = v18;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = a6;
  *(void *)(v14 + 64) = v19;
  sub_1C0A5C348((uint64_t)v28, v14 + 72);
  swift_beginAccess();
  *(_DWORD *)(v14 + 212) = v20;
  *(unsigned char *)(v14 + 216) = v21;
  swift_beginAccess();
  *(void *)(v14 + 224) = a10;
  swift_beginAccess();
  *(void *)(v14 + 232) = v22;
  swift_beginAccess();
  *(unsigned char *)(v14 + 240) = a12;
  *(void *)(v14 + 248) = v27;
  *(unsigned char *)(v14 + 256) = v23;
  swift_beginAccess();
  *(void *)(v14 + 264) = a14;
  return v14;
}

uint64_t FormatMicaNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1C0A5C348(v0 + 72, (uint64_t)v2);
  sub_1C00F6940((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
  sub_1BFF0056C(*(void *)(v0 + 232));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatMicaNode.__deallocating_deinit()
{
  FormatMicaNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12E3458(uint64_t a1)
{
  uint64_t result = sub_1C12E35EC(&qword_1EA1ADE28);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatMicaNode()
{
  return self;
}

uint64_t sub_1C12E34C0(void *a1)
{
  a1[1] = sub_1C12E35EC(&qword_1EA19DF50);
  a1[2] = sub_1C12E35EC(&qword_1EA1A0AA8);
  uint64_t result = sub_1C12E35EC(&qword_1EA1ADE30);
  a1[3] = result;
  return result;
}

void *sub_1C12E354C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C089AE20(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C12E3578(void *a1)
{
  return FormatMicaNode.encode(to:)(a1);
}

uint64_t sub_1C12E359C(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed14FormatMicaNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C12E35A8(uint64_t a1)
{
  uint64_t result = sub_1C12E35EC(&qword_1EA1ADE38);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C12E35EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatMicaNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12E362C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>)
{
  uint64_t v16 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v18 = *(void *)(a4 + 16);
  uint64_t v17 = *(void *)(a4 + 24);
  uint64_t v19 = *(void *)(v16 + 40);
  if (!v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = v17;
    uint64_t v29 = v18;
    uint64_t v20 = *(void *)(a4 + 40);
    if (v20) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v21 = 0;
    goto LABEL_6;
  }
  uint64_t v38 = *(void *)(v16 + 32);
  uint64_t v39 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v28 = v19;
  uint64_t v29 = v38;
  uint64_t v18 = *(void *)(a4 + 16);
  uint64_t v17 = *(void *)(a4 + 24);
  uint64_t v20 = *(void *)(a4 + 40);
  if (!v20) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v21 = *(void *)(v20 + 16);
  swift_retain();
LABEL_6:
  uint64_t v22 = swift_allocObject();
  uint64_t v40 = v21;
  swift_beginAccess();
  uint64_t v23 = *(void *)(a4 + 224);
  swift_beginAccess();
  unint64_t v36 = *(void *)(a4 + 232);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v36);
  sub_1BFE6EF70(a3, &v37);
  sub_1BFF0056C(v36);
  swift_beginAccess();
  char v24 = *(unsigned char *)(a4 + 240);
  sub_1C1517EFC();
  uint64_t v25 = v34;
  char v26 = *(unsigned char *)(a4 + 256);
  uint64_t v34 = *(void *)(a4 + 248);
  char v35 = v26;
  type metadata accessor for FormatMicaNodeLayoutAttributes();
  swift_allocObject();
  *(void *)(v22 + 16) = FormatMicaNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(a1, a2, v29, v28, v18, v17, a5, &v40, a7, a8, a9, a10, v23, &v37, v24, v25, &v34);
  *a6 = v22 | 0x6000000000000000;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12E3890@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12E38E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12E3930@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 216);
  *(_DWORD *)a2 = *(_DWORD *)(v3 + 212);
  *(unsigned char *)(a2 + 4) = v5;
  return result;
}

uint64_t sub_1C12E3980(int *a1, uint64_t *a2)
{
  int v2 = *a1;
  char v3 = *((unsigned char *)a1 + 4);
  uint64_t v4 = *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 212) = v2;
  *(unsigned char *)(v4 + 216) = v3;
  return result;
}

uint64_t sub_1C12E39D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 224);
  return result;
}

uint64_t sub_1C12E3A1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 224) = v2;
  return result;
}

unint64_t sub_1C12E3A60@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 232);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C12E3AB0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 240);
  return result;
}

uint64_t sub_1C12E3AF8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 240) = v2;
  return result;
}

uint64_t sub_1C12E3B3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 264);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatMicaNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatMicaNode);
}

uint64_t dispatch thunk of FormatMicaNode.__allocating_init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_1C12E3BD8()
{
  swift_release();
  return swift_deallocObject();
}

id FormatPuzzleEmbedNodeRenderer.render<A>(context:for:with:contentFrame:in:viewportSize:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  return sub_1C12E4218(a4, a5, a6, a7, a1, a2);
}

uint64_t FormatPuzzleEmbedNodeRenderer.deinit()
{
  return v0;
}

uint64_t FormatPuzzleEmbedNodeRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C12E3C3C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  return sub_1C12E4218(a4, a5, a6, a7, a1, a2);
}

uint64_t sub_1C12E3C50(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void *a5, void *a6, unsigned char *a7, double a8, double a9, double a10, double a11, double a12, double a13)
{
  int v71 = a4;
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  uint64_t v23 = type metadata accessor for PuzzleResourceSource();
  uint64_t v67 = *(void *)(v23 - 8);
  uint64_t v24 = *(void *)(v67 + 64);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v66 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2ED30(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v65 - v26;
  sub_1BFF2ED30(0, qword_1EB896E10, (void (*)(uint64_t))type metadata accessor for PuzzleData);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v65 - v29;
  uint64_t v31 = type metadata accessor for PuzzleData();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v65 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = a1;
  id v35 = PuzzleResourceSource.identifier.getter();
  unint64_t v36 = &a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *unint64_t v36 = v35;
  v36[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = (double *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  swift_beginAccess();
  *uint64_t v38 = a8;
  v38[1] = a9;
  v38[2] = a10;
  v38[3] = a11;
  uint64_t v39 = (double *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  swift_beginAccess();
  *uint64_t v39 = a12;
  v39[1] = a13;
  *(void *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation] = a5;
  id v40 = a5;
  swift_unknownObjectRelease();
  uint64_t v41 = *(void **)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration];
  *(void *)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration] = a6;
  id v42 = a6;

  uint64_t v43 = *(void **)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_interactionProvider];
  uint64_t v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1C0C8B5E8;
  aBlock[5] = v44;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_106;
  int64_t v45 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v43, sel_setInteractionBlock_, v45);
  _Block_release(v45);
  uint64_t v46 = (uint64_t)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  sub_1C0C88954(v46, (uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    uint64_t v47 = v68;
    uint64_t v48 = v67;
    uint64_t v65 = v24;
    uint64_t v49 = (uint64_t)v66;
    uint64_t v51 = v69;
    uint64_t v50 = v70;
    __int16 v52 = v71;
    uint64_t result = sub_1C12E4938((uint64_t)v30);
    if (a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] != 1)
    {
      a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 1;
      uint64_t v54 = sub_1C151EE9C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v27, 1, 1, v54);
      sub_1C12E49B0(v47, v49);
      sub_1C151EE6C();
      uint64_t v55 = a7;
      uint64_t v56 = v50;
      sub_1BFEF9C98(v51, v50);
      uint64_t v57 = sub_1C151EE5C();
      unint64_t v58 = (*(unsigned __int8 *)(v48 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      unint64_t v59 = (v65 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v60 = (void *)swift_allocObject();
      uint64_t v61 = MEMORY[0x1E4FBCFD8];
      v60[2] = v57;
      v60[3] = v61;
      v60[4] = v55;
      sub_1C0C8ABE8(v49, (uint64_t)v60 + v58, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
      uint64_t v62 = (char *)v60 + v59;
      *(void *)uint64_t v62 = v51;
      *((void *)v62 + 1) = v56;
      *((_WORD *)v62 + 8) = v52;
      sub_1C0C833AC((uint64_t)v27, (uint64_t)&unk_1EA1A5618, (uint64_t)v60);
      return swift_release();
    }
  }
  else
  {
    sub_1C0C8ABE8((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for PuzzleData);
    uint64_t v63 = *(void **)&a7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
    id v64 = sub_1C0C85234((uint64_t)&v34[*(int *)(v31 + 20)]);
    objc_msgSend(v63, sel_setConfiguration_, v64);

    return sub_1C12E4BE0((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  }
  return result;
}

id sub_1C12E4218(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, double a5, double a6)
{
  sub_1BFF2ED30(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = type metadata accessor for PuzzleResourceSource();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF5984C(a3, (uint64_t)&v71);
  if (v72)
  {
    double v18 = *(double *)(a2 + 80);
    double v19 = *(double *)(a2 + 88);
    double v20 = 0.0;
    double v21 = 0.0;
  }
  else
  {
    double v67 = a5;
    double v68 = a6;
    CGFloat v22 = *(double *)(a2 + 64);
    CGFloat v23 = *(double *)(a2 + 72);
    CGFloat v24 = *(double *)(a2 + 80);
    CGFloat v25 = *(double *)(a2 + 88);
    v73.origin.x = v22;
    v73.origin.y = v23;
    v73.size.width = v24;
    v73.size.height = v25;
    CGRectGetMinX(v73);
    sub_1C151F73C();
    v74.origin.x = v22;
    v74.origin.y = v23;
    a5 = v67;
    a6 = v68;
    v74.size.width = v24;
    v74.size.height = v25;
    CGRectGetMinY(v74);
    sub_1C151F74C();
    double v20 = v26;
    double v21 = v27;
    double v18 = v28;
    double v19 = v29;
  }
  id result = objc_msgSend(a4, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v31 = result;
  uint64_t v65 = v14;
  uint64_t v66 = v15;
  double v67 = *(double *)&v17;
  double v68 = *(double *)&a1;
  sub_1C151F8FC();

  id result = objc_msgSend(a4, sel_view);
  if (!result)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v32 = result;
  uint64_t v33 = *(void *)(a2 + 104);
  uint64_t v34 = *(void *)(a2 + 128);
  uint64_t v63 = *(void *)(a2 + 136);
  unint64_t v35 = *(void *)(a2 + 144);
  uint64_t v64 = v33;
  if (v33) {
    uint64_t v36 = (v35 >> 8) & 1;
  }
  else {
    uint64_t v36 = 0;
  }
  objc_msgSend(result, sel_setAccessibilityIgnoresInvertColors_, v36);

  id result = objc_msgSend(a4, sel_view);
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v37 = result;
  uint64_t v62 = *(void *)(a2 + 208);
  uint64_t v38 = *(unsigned __int8 *)(a2 + 216);
  objc_msgSend(result, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(v37, sel_setAccessibilityElementsHidden_, 0);
  if (v38 > 0xFD) {
    goto LABEL_16;
  }
  if ((v38 & 0x80) != 0)
  {
    if (!(v62 | v38 ^ 0x80)) {
      goto LABEL_16;
    }
    uint64_t v39 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    uint64_t v39 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(v37, *v39, 1);
LABEL_16:

  id v40 = *(char **)&a4[OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController];
  id result = objc_msgSend(v40, sel_view);
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v41 = result;
  objc_msgSend(result, sel_setAccessibilityIgnoresInvertColors_, v36);

  id result = objc_msgSend(v40, sel_view);
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v42 = result;
  objc_msgSend(result, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(v42, sel_setAccessibilityElementsHidden_, 0);
  if (v38 > 0xFD) {
    goto LABEL_24;
  }
  if ((v38 & 0x80) != 0)
  {
    if (!(v62 | v38 ^ 0x80)) {
      goto LABEL_24;
    }
    uint64_t v43 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    uint64_t v43 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(v42, *v43, 1);
LABEL_24:

  id result = objc_msgSend(a4, sel_view);
  if (!result)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  uint64_t v44 = result;
  uint64_t v45 = v63;
  if (v64)
  {
    sub_1BFEF6828(v34, v63, v35);
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v45 = 0;
    LOBYTE(v35) = -2;
  }
  id v46 = objc_msgSend(v44, sel_layer);
  objc_msgSend(v44, sel_bounds);
  v69[0] = v34;
  v69[1] = v45;
  char v70 = v35;
  sub_1BFE6A0C8(v46, (uint64_t)v69, v47, v48, v49, v50);

  sub_1BFEF68AC(v34, v45, v35);
  char v51 = *(unsigned char *)(a2 + 217);
  __int16 v52 = (double *)&v40[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  swift_beginAccess();
  *__int16 v52 = v20;
  v52[1] = v21;
  v52[2] = v18;
  v52[3] = v19;
  v40[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable] = v51;
  uint64_t v54 = *(void *)&v67;
  double v53 = v68;
  **(void **)&double v67 = *(void *)(*(void *)&v68 + 88);
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = v65;
  uint64_t v56 = sub_1C1515FDC();
  uint64_t v57 = *(void *)(v56 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v55, 1, 1, v56);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v58 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  unint64_t v59 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56) != 1)
  {
    unint64_t v59 = (void *)sub_1C1515E9C();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v56);
  }
  id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F900]), sel_initWithContext_URL_, v58, v59);

  id v61 = *(id *)(*(void *)(*(void *)&v53 + 240) + 16);
  sub_1C12E3C50(v54, 0, 0, 0, v60, v61, v40, v20, v21, v18, v19, a5, a6);

  return (id)sub_1C12E4BE0(v54, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
}

uint64_t dispatch thunk of FormatPuzzleEmbedNodeRendererType.render<A>(context:for:with:contentFrame:in:viewportSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _OWORD *))(a9 + 8);
  char v10 = *(unsigned char *)(a4 + 32);
  long long v11 = *(_OWORD *)(a4 + 16);
  v13[0] = *(_OWORD *)a4;
  v13[1] = v11;
  char v14 = v10;
  return v9(a1, a2, a3, v13);
}

uint64_t method lookup function for FormatPuzzleEmbedNodeRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPuzzleEmbedNodeRenderer);
}

uint64_t sub_1C12E4900()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12E4938(uint64_t a1)
{
  sub_1BFF2ED30(0, qword_1EB896E10, (void (*)(uint64_t))type metadata accessor for PuzzleData);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12E49B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleResourceSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12E4A14()
{
  uint64_t v1 = *(void *)(type metadata accessor for PuzzleResourceSource() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v4 = v0 + v2;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      sub_1C023675C();
      uint64_t v7 = v6;
      uint64_t v8 = v4 + *(int *)(v6 + 48);
      uint64_t v9 = sub_1C1515FDC();
      uint64_t v10 = *(void *)(v9 - 8);
      long long v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(v8, v9);
      uint64_t v12 = v4 + *(int *)(v7 + 64);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
        v11(v12, v9);
      }
      break;
    case 1:
      swift_unknownObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  if (*(void *)(v0 + v3 + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12E4BE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FeedPluginModel.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPluginModel.group.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t FeedPluginModel.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t sub_1C12E4CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  uint64_t v16 = (int *)type metadata accessor for FeedPluginModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(&a9[v16[13]], a3, a7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(&a9[v16[14]], a4, a8);
  double v18 = &a9[v16[15]];
  *(void *)double v18 = a5;
  *((void *)v18 + 1) = a6;
  return result;
}

uint64_t FeedPluginModel.next(revision:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  CGFloat v25 = a3;
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v3 + *(int *)(v15 + 52);
  uint64_t v27 = sub_1C151811C();
  uint64_t v28 = v17;
  sub_1C151E80C();
  uint64_t v26 = a1;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v16, v10);
  uint64_t v20 = v23;
  uint64_t v21 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v23 + *(int *)(a2 + 56), v24);
  sub_1C12E4CE0(v18, v19, (uint64_t)v14, (uint64_t)v8, *(void *)(v20 + *(int *)(a2 + 60)), *(void *)(v20 + *(int *)(a2 + 60) + 8), v10, v21, v25);
  return swift_retain();
}

uint64_t static FeedPluginModel.== infix(_:_:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  uint64_t v9 = type metadata accessor for FeedPluginModel();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v38 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v37 = (char *)v36 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v36 - v15;
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v36 - v19;
  uint64_t v21 = a1[1];
  uint64_t v22 = a2[1];
  BOOL v23 = *a1 == *a2;
  v36[1] = a5;
  if (v23 && v21 == v22) {
    char v24 = 1;
  }
  else {
    char v24 = sub_1C1520A9C();
  }
  CGFloat v25 = *(void (**)(char *, void *, uint64_t, __n128))(v10 + 16);
  v25(v20, a1, v9, v18);
  ((void (*)(char *, void *, uint64_t))v25)(v16, a2, v9);
  if (v24) {
    char v26 = sub_1C151E5CC();
  }
  else {
    char v26 = 0;
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v16, v9);
  v27(v20, v9);
  uint64_t v28 = v37;
  ((void (*)(char *, void *, uint64_t))v25)(v37, a1, v9);
  double v29 = v38;
  ((void (*)(char *, void *, uint64_t))v25)(v38, a2, v9);
  if (v26)
  {
    uint64_t v30 = *(int *)(v9 + 56);
    uint64_t v31 = *(uint64_t (**)(char *, char *))&v28[*(int *)(v9 + 60)];
    uint64_t v32 = &v28[v30];
    uint64_t v33 = &v29[v30];
    swift_retain();
    char v34 = v31(v32, v33);
    swift_release();
  }
  else
  {
    char v34 = 0;
  }
  v27(v29, v9);
  v27(v28, v9);
  return v34 & 1;
}

uint64_t sub_1C12E5294(void *a1, void *a2, uint64_t *a3)
{
  return static FeedPluginModel.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t (*FeedPluginModel<>.init(group:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>))()
{
  *a8 = sub_1C151811C();
  a8[1] = v16;
  uint64_t v17 = (int *)type metadata accessor for FeedPluginModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))((char *)a8 + v17[13], a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))((char *)a8 + v17[14], a2, a4);
  uint64_t result = (uint64_t (*)())swift_allocObject();
  *((void *)result + 2) = a3;
  *((void *)result + 3) = a4;
  *((void *)result + 4) = a5;
  *((void *)result + 5) = a6;
  *((void *)result + 6) = a7;
  uint64_t v19 = (uint64_t (**)())((char *)a8 + v17[15]);
  *uint64_t v19 = sub_1BFEE6F94;
  v19[1] = result;
  return result;
}

uint64_t sub_1C12E53DC()
{
  return swift_deallocObject();
}

uint64_t FeedPluginModel<>.init(group:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_1C151811C();
  a3[1] = v6;
  uint64_t v7 = type metadata accessor for FeedPluginModel();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))((char *)a3 + *(int *)(v7 + 52), a1, a2);
  uint64_t v9 = (uint64_t (**)())((char *)a3 + *(int *)(v7 + 60));
  *uint64_t v9 = sub_1BFE31C54;
  v9[1] = 0;
  return result;
}

uint64_t *sub_1C12E54BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  if ((v9 | v6) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v11 + ((v7 + v9 + ((v6 + 16) & ~v6)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + (((v9 | v6) & 0xF8 ^ 0x1F8) & ((v9 | v6) + 16)));
  }
  else
  {
    uint64_t v15 = ~v9;
    uint64_t v24 = *(void *)(a3 + 16);
    uint64_t v16 = a2[1];
    *a1 = *a2;
    a1[1] = v16;
    uint64_t v17 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v18 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v19(v17, v18, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v15, (v18 + v10) & v15, v4);
    uint64_t v20 = (void *)((v11 + ((v18 + v10) & v15)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)((v11 + ((v17 + v10) & v15)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v22 = *v20;
    v22[1] = v21;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C12E5698(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((v6
                                                                                            + *(void *)(v5 + 56)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  return swift_release();
}

void *sub_1C12E5774(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v8 = *(void *)(v6 - 8) + 16;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  v7(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v8 + 48) + v14;
  uint64_t v16 = (v15 + v10) & ~v14;
  uint64_t v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 48) + 7;
  uint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_retain();
  return a1;
}

void *sub_1C12E5884(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (v15 + v9) & ~v14;
  uint64_t v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 40) + 7;
  uint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1C12E59AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = v11 + 32;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = (v14 + v8) & ~v13;
  uint64_t v16 = (v14 + v9) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v15, v16);
  *(_OWORD *)((*(void *)(v12 + 32) + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v12 + 32)
                                                                                       + 7
                                                                                       + v16) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C12E5AA8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  *(_OWORD *)((*(void *)(v14 + 24) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v14 + 24)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C12E5BB8(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v5 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v14 = ((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + v11 + ((v9 + 16) & ~v9)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = a2 - v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v14);
        if (!*((unsigned char *)a1 + v14)) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v14);
        if (*(_WORD *)((char *)a1 + v14)) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C12E5DB0);
      case 4:
        int v18 = *(int *)((char *)a1 + v14);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if ((v14 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v13 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if ((v12 & 0x80000000) != 0)
  {
    uint64_t v23 = ((unint64_t)a1 + v9 + 16) & ~v9;
    if (v5 == v13) {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))(v23);
    }
    else {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))((v23 + v10 + v11) & ~v11, v8, v6);
    }
  }
  else
  {
    unint64_t v22 = *((void *)a1 + 1);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    return (v22 + 1);
  }
}

void sub_1C12E5DC4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  size_t v15 = ((*(void *)(*(void *)(v8 - 8) + 64) + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v14 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_20:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if ((v13 & 0x80000000) != 0)
            {
              unint64_t v23 = (unint64_t)&a1[v10 + 16] & ~v10;
              if (v7 == v14)
              {
                uint64_t v24 = *(void (**)(unint64_t))(v6 + 56);
                v24(v23);
              }
              else
              {
                unint64_t v25 = (v23 + v11 + v12) & ~v12;
                char v26 = *(void (**)(unint64_t))(v9 + 56);
                v26(v25);
              }
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *(void *)a1 = a2 ^ 0x80000000;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              *((void *)a1 + 1) = a2 - 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v14;
    if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
         + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v17 = v16 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v21 = v20;
  else {
    int v21 = 1;
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 16) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v14 + a2;
    bzero(a1, v15);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1C12E6070);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1C12E6098()
{
  sub_1BFEC06E0(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - v1;
  uint64_t v3 = sub_1C151928C();
  __swift_allocate_value_buffer(v3, qword_1EB893CD8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB893CD8);
  type metadata accessor for FormatJSONDecoder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C15192CC();
  uint64_t v7 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t static Format.appVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C12E621C(&qword_1EB8943F8, (uint64_t)qword_1EB893CD8, a1);
}

uint64_t sub_1C12E621C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

unsigned char *storeEnumTagSinglePayload for FormatVersionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12E6380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVersionError()
{
  return &type metadata for FormatVersionError;
}

uint64_t sub_1C12E63B8()
{
  uint64_t v0 = sub_1C151928C();
  __swift_allocate_value_buffer(v0, qword_1EB93CB88);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB93CB88);
  return sub_1C151929C();
}

unint64_t sub_1C12E6414()
{
  unint64_t result = qword_1EA1ADE40;
  if (!qword_1EA1ADE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE40);
  }
  return result;
}

ValueMetadata *type metadata accessor for J12_V1()
{
  return &type metadata for J12_V1;
}

uint64_t sub_1C12E6478(void *a1)
{
  uint64_t v3 = v1;
  sub_1C12E8E58(0, &qword_1EA1ADF00, (uint64_t (*)(void))sub_1C12E8E04, (uint64_t)&type metadata for J12_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12E8E04();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C12E8620(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1C01BD088(&qword_1EA197D78, (void (*)(void))sub_1C01BD118);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C12E66D4(uint64_t a1)
{
  unint64_t v2 = sub_1C12E8E04();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12E6710(uint64_t a1)
{
  unint64_t v2 = sub_1C12E8E04();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C12E674C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C12E8B40(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C12E6794(void *a1)
{
  return sub_1C12E6478(a1);
}

uint64_t sub_1C12E67AC()
{
  sub_1C12E86E8();
  return sub_1C151798C();
}

uint64_t sub_1C12E6828@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C12E8E58(0, &qword_1EB85C818, (uint64_t (*)(void))sub_1C01BC9AC, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C12E68E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a1;
  uint64_t v38 = a3;
  uint64_t v41 = sub_1C151635C();
  uint64_t v6 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v45 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v38 - v12;
  uint64_t v44 = (uint64_t)&v38 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v47 = v14;
  MEMORY[0x1F4188790](v14);
  char v16 = *v3;
  unsigned int v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v42 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for GroupLayoutBindingContext;
  sub_1BFF1B00C(a1, v42, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1BFF1B00C(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v40 = sub_1C151633C();
  uint64_t v39 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v41);
  id v60 = &type metadata for J12_V1;
  unint64_t v20 = sub_1C0185D50();
  unint64_t v61 = v20;
  LOBYTE(v58) = v16;
  *((void *)&v58 + 1) = v17;
  unsigned __int8 v59 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v56 = sub_1C1520FAC();
  uint64_t v57 = v22;
  uint64_t v54 = 95;
  unint64_t v55 = 0xE100000000000000;
  uint64_t v52 = 45;
  unint64_t v53 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t)v45;
  uint64_t v27 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v28 = v39;
  *uint64_t v27 = v40;
  v27[1] = v28;
  sub_1BFC66384((uint64_t)&v58, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v42, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v29, 0, 1, v47);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C(v44, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v30, 0, 1, v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1BFFFC630(v17, v18);
  id v60 = &type metadata for J12_V1;
  unint64_t v61 = v20;
  LOBYTE(v58) = v16;
  *((void *)&v58 + 1) = v17;
  unsigned __int8 v59 = v18;
  sub_1BFF1B00C(v48, v26, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  uint64_t v31 = v62;
  uint64_t v32 = sub_1C0E69930((uint64_t)&unk_1F1B83468, 0, 0, 0, 0, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BFF1F1C4(v26, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  }
  else
  {
    uint64_t v34 = v32;
    uint64_t v35 = type metadata accessor for J12_V1.Bound();
    uint64_t v36 = v38;
    v38[3] = v35;
    v36[4] = sub_1C12E8620(&qword_1EA1ADE58, (void (*)(uint64_t))type metadata accessor for J12_V1.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v58, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v26, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = v34;
  }
  return result;
}

uint64_t sub_1C12E6E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for J12_V1.Bound() + 28));
  uint64_t v34 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0183444((void (*)(void *__return_ptr, _OWORD *))sub_1C12E8668, (uint64_t)v33, v8);
  *(void *)&long long v26 = 0;
  swift_bridgeObjectRelease();
  uint64_t v29 = v9;
  *(void *)&long long v36 = v9;
  sub_1C01BCA00(0, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v11 = v10;
  sub_1BFEB3578(&qword_1EB85DF28, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
  uint64_t v28 = v11;
  uint64_t v12 = sub_1C151F0BC();
  uint64_t v13 = *MEMORY[0x1E4FAB6D8];
  uint64_t v14 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v30 = v12;
  uint64_t v31 = 4;
  uint64_t v32 = v2;
  sub_1C12E893C(0, &qword_1EA1ADE78, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v15 = sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v27 = v15;
  uint64_t v16 = v26;
  uint64_t v17 = sub_1C1517BFC();
  if (v16)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v25[1] = v25;
    long long v26 = v36;
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    uint64_t v35 = v39;
    *(void *)&long long v36 = v29;
    MEMORY[0x1F4188790](v17);
    unint64_t v20 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1BFEB3578(&qword_1EB85DF20, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
    sub_1BFEB3578(&qword_1EB85DF08, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C151951C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v36 = v21;
    sub_1C01BCA00(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v20);
    sub_1BFEB3578((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
    sub_1BFEB0FD4();
    uint64_t v22 = sub_1C151E91C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)a1 = 0;
    *(_OWORD *)(a1 + 8) = v26;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    *(void *)(a1 + 40) = v22;
    *(void *)(a1 + 48) = v24;
  }
  return result;
}

uint64_t sub_1C12E72DC@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[5];
  long long v6 = a1[7];
  long long v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  long long v7 = a1[1];
  long long v8 = a1[3];
  long long v28 = a1[2];
  long long v29 = v8;
  long long v9 = a1[3];
  long long v10 = a1[5];
  long long v30 = a1[4];
  long long v31 = v10;
  long long v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  long long v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  void v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  uint64_t v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1C01B3C58(v34);
  sub_1C0181C7C((uint64_t)v34, (uint64_t)v24);
  uint64_t v14 = (char *)a2 + *(int *)(type metadata accessor for J12_V1.Bound() + 24);
  uint64_t v15 = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(*(void *)&v14[*(int *)(v15 + 40)] + 16);
  double v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BFC66384(v16 + 16, (uint64_t)v22);
  sub_1BFC66384(v16 + 56, (uint64_t)v21);
  double v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v22, inited + 16);
  sub_1BFC773DC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1C0187FB0((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

void sub_1C12E7470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a1;
  uint64_t v50 = a4;
  uint64_t v40 = a3;
  sub_1C12E8E58(0, &qword_1EA1ADE90, (uint64_t (*)(void))sub_1C12E8694, (uint64_t)&type metadata for J12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = (uint64_t *)((char *)&v39 - v7);
  uint64_t v52 = *(void *)(a2 + 16);
  if (v52)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v51 = a2 + 32;
    unsigned int v46 = *MEMORY[0x1E4FABA08];
    uint64_t v44 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v45 = (void (**)(uint64_t *, void, uint64_t))(v6 + 104);
    unsigned int v43 = *MEMORY[0x1E4FABA28];
    unsigned int v42 = *MEMORY[0x1E4FAB638];
    uint64_t v39 = a2;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    long long v10 = &dword_1EB891000;
    long long v41 = xmmword_1C1529AE0;
    while (1)
    {
      uint64_t v25 = *(void *)(v51 + 8 * v9);
      uint64_t v26 = *(void *)(v25 + 16);
      uint64_t v27 = *(void *)(v8 + 16);
      uint64_t v57 = v25;
      if (v26 != v27) {
        break;
      }
      if (v26 && v25 != v8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v28 = 32;
        while (1)
        {
          sub_1C01BC5C8(v25 + v28, (uint64_t)v61);
          sub_1C01BC5C8(v8 + v28, (uint64_t)v60);
          uint64_t v30 = v61[0];
          uint64_t v31 = v60[0];
          BOOL v32 = *(void *)(v61[0] + 16) == *(void *)(v60[0] + 16)
             && *(void *)(v61[0] + 24) == *(void *)(v60[0] + 24);
          if (!v32 && (sub_1C1520A9C() & 1) == 0) {
            break;
          }
          uint64_t v33 = *((void *)v10 + 62);
          uint64_t v34 = *(void *)(v30 + v33);
          uint64_t v35 = *(void *)(v30 + v33 + 8);
          long long v36 = (void *)(v31 + v33);
          if (v34 == *v36 && v35 == v36[1])
          {
            sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
            sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
          }
          else
          {
            char v38 = sub_1C1520A9C();
            sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
            sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
            if ((v38 & 1) == 0) {
              goto LABEL_33;
            }
          }
          if (v59[2] == v58[2] && v59[3] == v58[3])
          {
            sub_1C01BC710((uint64_t)v59);
            sub_1C01BC710((uint64_t)v58);
            sub_1C01BC710((uint64_t)v60);
            sub_1C01BC710((uint64_t)v61);
          }
          else
          {
            char v29 = sub_1C1520A9C();
            sub_1C01BC710((uint64_t)v59);
            sub_1C01BC710((uint64_t)v58);
            sub_1C01BC710((uint64_t)v60);
            sub_1C01BC710((uint64_t)v61);
            if ((v29 & 1) == 0) {
              goto LABEL_34;
            }
          }
          v28 += 392;
          if (!--v26)
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
        sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
LABEL_33:
        sub_1C01BC710((uint64_t)v59);
        sub_1C01BC710((uint64_t)v58);
        sub_1C01BC710((uint64_t)v60);
        sub_1C01BC710((uint64_t)v61);
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v26 = *(void *)(v25 + 16);
LABEL_28:
        if (v26 != v40) {
          goto LABEL_5;
        }
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t v11 = v49;
      v61[0] = v49;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0x4024000000000000;
      uint64_t v13 = v47;
      *uint64_t v47 = v12;
      uint64_t v14 = *v45;
      uint64_t v56 = v9;
      uint64_t v15 = v48;
      v14(v13, v46, v48);
      uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
      sub_1C12E893C(0, &qword_1EA1ADE98, MEMORY[0x1E4FAB6F0]);
      uint64_t v54 = v17;
      uint64_t v53 = sub_1C12E8860(&qword_1EA1ADEA0, &qword_1EA1ADE98, v16);
      sub_1C151738C();
      unint64_t v55 = *v44;
      v55(v13, v15);
      v61[0] = v11;
      v14(v13, v43, v15);
      sub_1C12E88A4();
      sub_1C12E8E58(0, &qword_1EA1ADEB0, (uint64_t (*)(void))sub_1C12E8694, (uint64_t)&type metadata for J12_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)(v18 - 8);
      unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v41;
      uint64_t v23 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, v42, v19);
      long long v10 = &dword_1EB891000;
      MEMORY[0x1F4188790](v23);
      sub_1C151731C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v15;
      uint64_t v9 = v56;
      v55(v13, v24);
LABEL_5:
      swift_bridgeObjectRelease();
      if (++v9 == v52)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
}

void sub_1C12E7A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v63 = a1;
  uint64_t v62 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  unint64_t v61 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12E8E58(0, &qword_1EA1ADE90, (uint64_t (*)(void))sub_1C12E8694, (uint64_t)&type metadata for J12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v48 - v10);
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    uint64_t v60 = a3 + *(int *)(type metadata accessor for J12_V1.Bound() + 24);
    uint64_t v59 = *(int *)(type metadata accessor for GroupLayoutContext() + 40);
    uint64_t v13 = a2 + 32;
    unsigned int v58 = *MEMORY[0x1E4FAB7A8];
    unsigned int v57 = *MEMORY[0x1E4FAB7B0];
    unsigned int v56 = *MEMORY[0x1E4FAB9E8];
    unint64_t v55 = (void (**)(uint64_t *, void, uint64_t))(v9 + 104);
    unsigned int v54 = *MEMORY[0x1E4FAB5E8];
    unsigned int v53 = *MEMORY[0x1E4FAB620];
    double v67 = &v70;
    uint64_t v51 = (void (**)(uint64_t *, uint64_t))(v9 + 8);
    uint64_t v52 = (void (**)(char *, void, uint64_t))(v5 + 104);
    unsigned int v50 = *MEMORY[0x1E4FAB8F8];
    v48[1] = a2;
    swift_bridgeObjectRetain();
    long long v49 = xmmword_1C1529AE0;
    do
    {
      uint64_t v65 = v13;
      uint64_t v66 = v12;
      sub_1C01BC5C8(v13, (uint64_t)v69);
      uint64_t v68 = v63;
      uint64_t KeyPath = swift_getKeyPath();
      sub_1BFF35C38();
      uint64_t v15 = v14;
      uint64_t v16 = swift_allocBox();
      uint64_t v18 = v17;
      uint64_t v19 = (char *)v17 + *(int *)(v15 + 48);
      sub_1C151728C();
      uint64_t v20 = swift_allocBox();
      sub_1C151727C();
      *uint64_t v18 = v20;
      uint64_t v21 = sub_1C151786C();
      uint64_t v22 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104);
      v22(v18, v58, v21);
      v22((uint64_t *)v19, v57, v21);
      *uint64_t v11 = v16;
      (*v55)(v11, v56, v8);
      sub_1C12E88A4();
      sub_1C12E8E58(0, &qword_1EA1ADEB0, (uint64_t (*)(void))sub_1C12E8694, (uint64_t)&type metadata for J12_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)(v23 - 8);
      unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v49;
      unint64_t v28 = v27 + v26;
      sub_1C12E8E58(0, &qword_1EA1ADEB8, (uint64_t (*)(void))sub_1C12E8694, (uint64_t)&type metadata for J12_V1.Layout, MEMORY[0x1E4FAB618]);
      (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v54, v29);
      (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v28, v53, v24);
      uint64_t v30 = *(void *)(*(void *)(v60 + v59) + 24);
      uint64_t v31 = v71;
      uint64_t v32 = v72;
      __swift_project_boxed_opaque_existential_1(v67, v71);
      uint64_t v33 = v8;
      uint64_t v34 = *(double (**)(uint64_t, uint64_t))(v32 + 16);
      swift_retain();
      double v35 = v34(v31, v32);
      if (qword_1EB85E720 != -1) {
        swift_once();
      }
      objc_msgSend((id)qword_1EB93C2A0, sel_size);
      double v38 = v35 * (v36 / v37);
      uint64_t v39 = v71;
      uint64_t v40 = v72;
      long long v41 = v67;
      __swift_project_boxed_opaque_existential_1(v67, v71);
      (*(void (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
      uint64_t v42 = v71;
      uint64_t v43 = v72;
      __swift_project_boxed_opaque_existential_1(v41, v71);
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 56))(v42, v43);
      unint64_t v45 = MEMORY[0x1F4188790](v44).n128_u64[0];
      v48[-6] = v30;
      v48[-5] = v69;
      *(double *)&v48[-4] = v38;
      *(double *)&v48[-3] = v35;
      unint64_t v47 = v45;
      (*v52)(v61, v50, v62);
      sub_1C01BC774();
      swift_allocObject();
      sub_1C1517BEC();
      swift_release();
      unsigned int v46 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C12E893C(0, &qword_1EA1ADEC0, MEMORY[0x1E4FAB4D0]);
      sub_1C12E8860(&qword_1EA1ADEC8, &qword_1EA1ADEC0, v46);
      unint64_t v47 = sub_1C01BC91C();
      sub_1C151735C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*v51)(v11, v33);
      sub_1C01BC710((uint64_t)v69);
      uint64_t v13 = v65 + 392;
      uint64_t v12 = v66 - 1;
      uint64_t v8 = v33;
    }
    while (v66 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C12E818C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  sub_1C01BC5C8(a2, v10 + 16);
  memcpy((void *)(v10 + 408), a3, 0x180uLL);
  uint64_t v11 = a4 + *(int *)(type metadata accessor for J12_V1.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v13 = *(void *)(v11 + *(int *)(result + 28));
  BOOL v14 = __OFADD__(v13, a1);
  uint64_t v15 = v13 + a1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v10 + 792) = v15;
    *a5 = v10 | 0x5000000000000000;
  }
  return result;
}

uint64_t sub_1C12E824C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C12E68E4(a1, a2, a3);
}

uint64_t sub_1C12E8264()
{
  return sub_1C12BC3AC();
}

unint64_t sub_1C12E8274(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C12E82A4();
  unint64_t result = sub_1C12E82F8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C12E82A4()
{
  unint64_t result = qword_1EA1ADE48;
  if (!qword_1EA1ADE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE48);
  }
  return result;
}

unint64_t sub_1C12E82F8()
{
  unint64_t result = qword_1EA1ADE50;
  if (!qword_1EA1ADE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE50);
  }
  return result;
}

uint64_t type metadata accessor for J12_V1.Bound()
{
  uint64_t result = qword_1EA1ADE60;
  if (!qword_1EA1ADE60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C12E8398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C12E83AC);
}

uint64_t sub_1C12E83AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C12E845C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C12E8470);
}

void *sub_1C12E8470(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C12E8518()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C12E85C8(uint64_t a1)
{
  uint64_t result = sub_1C12E8620(&qword_1EA1ADE70, (void (*)(uint64_t))type metadata accessor for J12_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C12E8620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12E8668@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C12E72DC(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1C12E8688(uint64_t a1)
{
  sub_1C12E7470(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1C12E8694()
{
  unint64_t result = qword_1EA1ADE80;
  if (!qword_1EA1ADE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE80);
  }
  return result;
}

unint64_t sub_1C12E86E8()
{
  unint64_t result = qword_1EA1ADE88;
  if (!qword_1EA1ADE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADE88);
  }
  return result;
}

uint64_t sub_1C12E873C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C12E818C(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C12E8744()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 152) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 296) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12E8850()
{
  return swift_deallocObject();
}

uint64_t sub_1C12E8860(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C12E893C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C12E88A4()
{
  if (!qword_1EA1ADEA8)
  {
    sub_1C12E8E58(255, &qword_1EA1ADEB0, (uint64_t (*)(void))sub_1C12E8694, (uint64_t)&type metadata for J12_V1.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ADEA8);
    }
  }
}

void sub_1C12E8934(uint64_t a1)
{
  sub_1C12E7A70(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C12E893C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for J12_V1.Layout;
    v8[1] = &type metadata for J12_V1.Layout.Attributes;
    v8[2] = sub_1C12E8694();
    v8[3] = sub_1C12E86E8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

ValueMetadata *type metadata accessor for J12_V1.Layout.Attributes()
{
  return &type metadata for J12_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for J12_V1.Layout()
{
  return &type metadata for J12_V1.Layout;
}

unint64_t sub_1C12E89E4()
{
  unint64_t result = qword_1EA1ADED0;
  if (!qword_1EA1ADED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADED0);
  }
  return result;
}

unint64_t sub_1C12E8A3C()
{
  unint64_t result = qword_1EA1ADED8;
  if (!qword_1EA1ADED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADED8);
  }
  return result;
}

unint64_t sub_1C12E8A94()
{
  unint64_t result = qword_1EA1ADEE0;
  if (!qword_1EA1ADEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADEE0);
  }
  return result;
}

unint64_t sub_1C12E8AEC()
{
  unint64_t result = qword_1EA1ADEE8;
  if (!qword_1EA1ADEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADEE8);
  }
  return result;
}

uint64_t sub_1C12E8B40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C12E8E58(0, &qword_1EA1ADEF0, (uint64_t (*)(void))sub_1C12E8E04, (uint64_t)&type metadata for J12_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12E8E04();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C12E8620(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
  char v23 = 1;
  sub_1C01BD088(&qword_1EB85DF10, (void (*)(void))sub_1C01BCFCC);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C12E8E04()
{
  unint64_t result = qword_1EA1ADEF8;
  if (!qword_1EA1ADEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADEF8);
  }
  return result;
}

void sub_1C12E8E58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for J12_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12E8F8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for J12_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for J12_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C12E8FC8()
{
  unint64_t result = qword_1EA1ADF08;
  if (!qword_1EA1ADF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF08);
  }
  return result;
}

unint64_t sub_1C12E9020()
{
  unint64_t result = qword_1EA1ADF10;
  if (!qword_1EA1ADF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF10);
  }
  return result;
}

unint64_t sub_1C12E9078()
{
  unint64_t result = qword_1EA1ADF18;
  if (!qword_1EA1ADF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF18);
  }
  return result;
}

uint64_t sub_1C12E90CC(uint64_t a1)
{
  uint64_t v2 = *(char **)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v2)
  {
    uint64_t v3 = *(void *)&v2[qword_1EB86F060];
    BOOL v4 = *(void *)(a1 + 16) == *(void *)(v3 + 16) && *(void *)(a1 + 24) == *(void *)(v3 + 24);
    if (v4 || (sub_1C1520A9C() & 1) != 0)
    {
      CGFloat v5 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds);
      CGFloat v6 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 8);
      CGFloat v7 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 16);
      CGFloat v8 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 24);
      char v9 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds + 32);
      objc_msgSend(v2, sel_bounds);
      if ((v9 & 1) == 0)
      {
        v18.origin.x = v10;
        v18.origin.y = v11;
        v18.size.width = v12;
        v18.size.height = v13;
        v17.origin.x = v5;
        v17.origin.y = v6;
        v17.size.width = v7;
        v17.size.height = v8;
        if (CGRectEqualToRect(v17, v18))
        {
          uint64_t v14 = 0;
LABEL_13:

          return v14;
        }
      }
    }
    else
    {
      uint64_t v15 = v2;
    }
    sub_1C12E9304();
    uint64_t v14 = 1;
    goto LABEL_13;
  }
  return 1;
}

id sub_1C12E91C0(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&a1[qword_1EB870530];
  swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v4 + 17);
  *(unsigned char *)(v4 + 17) = 0;
  if ((v5 & 0xFFFFFFC1) != 0) {
    LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  }
  CGFloat v6 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView] = a1;

  CGFloat v7 = a1;
  objc_msgSend(v7, sel_bounds);
  CGFloat v8 = &v2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds];
  *(void *)CGFloat v8 = v9;
  *((void *)v8 + 1) = v10;
  *((void *)v8 + 2) = v11;
  *((void *)v8 + 3) = v12;
  v8[32] = 0;
  return objc_msgSend(v2, sel_addSubview_, v7);
}

double sub_1C12E9304()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView;
  uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v3)
  {
    uint64_t v4 = *(void *)&v3[qword_1EB870530];
    swift_beginAccess();
    int v5 = *(unsigned __int8 *)(v4 + 17);
    *(unsigned char *)(v4 + 17) = 0;
    if ((v5 & 0xFFFFFFC1) != 0)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      swift_release();
    }
    CGFloat v6 = *(void **)(v1 + v2);
    if (v6)
    {
      objc_msgSend(v6, sel_removeFromSuperview);
      uint64_t v3 = *(char **)(v1 + v2);
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  *(void *)(v1 + v2) = 0;

  uint64_t v7 = v1 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_lastRenderedBounds;
  double result = 0.0;
  *(_OWORD *)uint64_t v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(unsigned char *)(v7 + 32) = 1;
  return result;
}

uint64_t sub_1C12E94A4()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C12E94E4()
{
  return sub_1C12E9514();
}

uint64_t sub_1C12E94FC()
{
  return sub_1C12E9598();
}

uint64_t sub_1C12E9514()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + qword_1EB870530);
    uint64_t result = swift_beginAccess();
    int v4 = *(unsigned __int8 *)(v2 + 17);
    *(unsigned char *)(v2 + 17) = 1;
    if ((v4 & 0xFFFFFFC1) != 1)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C12E9598()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + qword_1EB870530);
    uint64_t result = swift_beginAccess();
    int v4 = *(unsigned __int8 *)(v2 + 17);
    *(unsigned char *)(v2 + 17) = 0;
    if ((v4 & 0xFFFFFFC1) != 0)
    {
      swift_retain();
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C12E9614(void *a1, uint64_t a2, char a3)
{
  id v5 = objc_msgSend(a1, sel_asChannel);
  if (!v5) {
    goto LABEL_10;
  }
  CGFloat v6 = v5;
  if (!objc_msgSend(v5, sel_supportsNotifications))
  {
    swift_unknownObjectRelease();
LABEL_10:
    sub_1C12E9974();
    swift_allocObject();
    swift_retain();
    return sub_1C151908C();
  }
  if (a3) {
    goto LABEL_11;
  }
  id v7 = objc_msgSend(v6, sel_identifier);
  if (!v7)
  {
    sub_1C151E62C();
    id v7 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v8 = objc_msgSend(v3, sel_subscribeNotificationPromptForTagID_, v7);

  if (v8 == (id)2) {
    goto LABEL_11;
  }
  if (v8 == (id)1)
  {
    MEMORY[0x1F4188790](v9);
    sub_1C12E9974();
    swift_allocObject();
    uint64_t v10 = sub_1C151911C();
    swift_unknownObjectRelease();
    return v10;
  }
  if (!v8)
  {
LABEL_11:
    sub_1C12E9974();
    swift_allocObject();
    swift_retain();
    uint64_t v10 = sub_1C151908C();
    swift_unknownObjectRelease();
    return v10;
  }
  uint64_t result = sub_1C1520CAC();
  __break(1u);
  return result;
}

unint64_t SubscribeNotificationPrompt.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_1C12E9834@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

BOOL NotificationPrompt.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1C12E9878()
{
  unint64_t result = qword_1EA1ADF40;
  if (!qword_1EA1ADF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF40);
  }
  return result;
}

unint64_t sub_1C12E98D0()
{
  unint64_t result = qword_1EA1ADF48;
  if (!qword_1EA1ADF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF48);
  }
  return result;
}

void *sub_1C12E9924@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeNotificationPrompt()
{
  return &type metadata for SubscribeNotificationPrompt;
}

ValueMetadata *type metadata accessor for NotificationPrompt()
{
  return &type metadata for NotificationPrompt;
}

void sub_1C12E9974()
{
  if (!qword_1EA1ADF50)
  {
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ADF50);
    }
  }
}

uint64_t sub_1C12E99CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  CGFloat v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a5;
  v13[3] = sub_1C12E9AEC;
  v13[4] = v12;
  v13[5] = a6;
  v13[6] = a7;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  id v14 = a5;
  sub_1C151950C();
  return swift_release();
}

uint64_t sub_1C12E9AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C12E99CC(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

uint64_t sub_1C12E9AB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12E9AEC(__int16 a1, uint64_t a2)
{
  BOOL v3 = *(uint64_t (**)(__int16 *))(v2 + 16);
  __int16 v5 = a1 & 0xFF01;
  uint64_t v6 = a2;
  return v3(&v5);
}

uint64_t sub_1C12E9B34(void *a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  if (a1)
  {
    id v9 = a1;
    id v10 = objc_msgSend(a5, sel_name);
    sub_1C151E62C();

    sub_1C12E9D68();
    sub_1C151C80C();
    swift_allocObject();
    sub_1C151C7CC();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a2;
    v11[3] = a3;
    v11[4] = a4;
    swift_retain();
    swift_retain();
    sub_1C151C7EC();
    swift_release();
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = a2;
    v12[3] = a3;
    v12[4] = a4;
    swift_retain();
    swift_retain();
    sub_1C151C7FC();
    swift_release();
    swift_release();
    sub_1C151C7DC();

    swift_release();
  }
  else
  {
    swift_retain();
    a2(768, a4);
  }
  return swift_release();
}

uint64_t sub_1C12E9D08()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12E9D58()
{
  return sub_1C12E9B34(*(void **)(v0 + 16), *(void (**)(uint64_t, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

unint64_t sub_1C12E9D68()
{
  unint64_t result = qword_1EA1ADF58;
  if (!qword_1EA1ADF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF58);
  }
  return result;
}

uint64_t sub_1C12E9DC0(uint64_t a1)
{
  return sub_1C12E9DD4(a1, 257);
}

uint64_t sub_1C12E9DCC(uint64_t a1)
{
  return sub_1C12E9DD4(a1, 512);
}

uint64_t sub_1C12E9DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 32);
  swift_retain();
  v4(a2, v5);
  return swift_release();
}

uint64_t sub_1C12E9E40(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NotificationPromptResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for NotificationPromptResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for NotificationPromptResult()
{
  return &type metadata for NotificationPromptResult;
}

unsigned char *storeEnumTagSinglePayload for NotificationPromptResult.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12E9FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationPromptResult.Action()
{
  return &type metadata for NotificationPromptResult.Action;
}

unint64_t sub_1C12EA020()
{
  unint64_t result = qword_1EA1ADF60;
  if (!qword_1EA1ADF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF60);
  }
  return result;
}

uint64_t sub_1C12EA078@<X0>(uint64_t *a1@<X8>)
{
  sub_1C151594C();
  uint64_t result = sub_1C151593C();
  *a1 = result;
  return result;
}

uint64_t sub_1C12EA0AC@<X0>(uint64_t *a1@<X8>)
{
  sub_1C151594C();
  uint64_t result = sub_1C151593C();
  *a1 = result;
  return result;
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.init(items:options:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1C12EA0F4()
{
  if (*v0) {
    return 0x736E6F6974706FLL;
  }
  else {
    return 0x736D657469;
  }
}

uint64_t sub_1C12EA12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C12EAB60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C12EA154(uint64_t a1)
{
  unint64_t v2 = sub_1C12EA430();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12EA190(uint64_t a1)
{
  unint64_t v2 = sub_1C12EA430();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.encode(to:)(void *a1)
{
  sub_1C12EA7CC(0, &qword_1EB8635E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v11 - v7;
  uint64_t v9 = *v1;
  uint64_t v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12EA430();
  sub_1C1520F0C();
  uint64_t v13 = v9;
  char v12 = 0;
  sub_1C12EA484(0, (unint64_t *)&qword_1EB87C330, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
  sub_1C12EA830(&qword_1EB863358, (unint64_t *)&unk_1EB863130);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v13 = v11;
    char v12 = 1;
    sub_1C12EA484(0, (unint64_t *)&unk_1EB879D90, (void (*)(uint64_t))type metadata accessor for FormatOption);
    sub_1BFD485EC((unint64_t *)&qword_1EB85C3C0, &qword_1EB870AC0);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C12EA430()
{
  unint64_t result = qword_1EB868F68;
  if (!qword_1EB868F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868F68);
  }
  return result;
}

void sub_1C12EA484(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151ED5C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatContentSlotItemAuxiliary.Resolved.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C12EA7CC(0, &qword_1EB86B708, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12EA430();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1C12EA484(0, (unint64_t *)&qword_1EB87C330, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
  char v14 = 0;
  sub_1C12EA830(&qword_1EB86B288, &qword_1EB869348);
  sub_1C15206EC();
  uint64_t v10 = v15;
  sub_1C12EA484(0, (unint64_t *)&unk_1EB879D90, (void (*)(uint64_t))type metadata accessor for FormatOption);
  char v14 = 1;
  sub_1BFD485EC((unint64_t *)&qword_1EB879DA0, &qword_1EB874230);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = v15;
  *a2 = v10;
  a2[1] = v11;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C12EA7CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C12EA430();
    unint64_t v7 = a3(a1, &_s8ResolvedV10CodingKeysON_4, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C12EA830(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C12EA484(255, (unint64_t *)&qword_1EB87C330, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
    sub_1C12EA8DC(a2, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12EA8DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12EA924@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatContentSlotItemAuxiliary.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1C12EA93C(void *a1)
{
  return FormatContentSlotItemAuxiliary.Resolved.encode(to:)(a1);
}

unsigned char *_s8ResolvedV10CodingKeysOwst_4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12EAA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_4()
{
  return &_s8ResolvedV10CodingKeysON_4;
}

unint64_t sub_1C12EAA5C()
{
  unint64_t result = qword_1EA1ADF70;
  if (!qword_1EA1ADF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF70);
  }
  return result;
}

unint64_t sub_1C12EAAB4()
{
  unint64_t result = qword_1EB868F78;
  if (!qword_1EB868F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868F78);
  }
  return result;
}

unint64_t sub_1C12EAB0C()
{
  unint64_t result = qword_1EB868F70;
  if (!qword_1EB868F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868F70);
  }
  return result;
}

uint64_t sub_1C12EAB60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736D657469 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_1C12EAC4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content;
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for FormatContent(0) + 60));
  unint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v30 = *(void *)(v3 + 16);
  if (v30)
  {
    uint64_t v5 = type metadata accessor for FormatContentSubgroup();
    uint64_t v28 = v3
        + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
    uint64_t v29 = v5;
    uint64_t v27 = *(void *)(*(void *)(v5 - 8) + 72);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v30; ++i)
    {
      uint64_t v8 = *(void *)(v28 + v27 * i + *(int *)(v29 + 32));
      unint64_t v34 = v4;
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v31 = i;
        uint64_t v10 = v8 + 32;
        swift_bridgeObjectRetain();
        for (uint64_t j = 0; j != v9; ++j)
        {
          uint64_t v13 = (long long *)(v10 + 48 * j);
          long long v14 = *v13;
          long long v15 = v13[2];
          v36[1] = v13[1];
          void v36[2] = v15;
          v36[0] = v14;
          uint64_t v16 = v15;
          v37[0] = v15;
          unint64_t v33 = v4;
          uint64_t v17 = *(void *)(v15 + 16);
          if (v17)
          {
            unint64_t v18 = v4;
            uint64_t v19 = *(void *)(type metadata accessor for FormatContentSlotItem() - 8);
            uint64_t v20 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
            sub_1BFFAF7A4((uint64_t)v37);
            sub_1BFFAF7A4((uint64_t)v37);
            sub_1C12EBEFC((uint64_t)v36);
            uint64_t v21 = *(void *)(v19 + 72);
            do
            {
              sub_1C12EB6CC(v20, v1, (uint64_t *)v36, (uint64_t *)&v32);
              sub_1C104AF0C(v32);
              v20 += v21;
              --v17;
            }
            while (v17);
            sub_1BFCA59C8((uint64_t)v37);
            sub_1BFCA59C8((uint64_t)v37);
            sub_1C12EBF60((uint64_t)v36);
            unint64_t v12 = v33;
            unint64_t v4 = v18;
          }
          else
          {
            unint64_t v12 = v4;
          }
          sub_1C104AF0C(v12);
        }
        swift_bridgeObjectRelease();
        unint64_t v7 = v34;
        uint64_t i = v31;
      }
      else
      {
        unint64_t v7 = v4;
      }
      sub_1C104AF0C(v7);
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v35;
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options;
  uint64_t v24 = *(void *)(v23 + *(int *)(type metadata accessor for FormatServiceOptions() + 44));
  type metadata accessor for FeedGroupDebugCandidates();
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = v22;
  uint64_t v35 = v22;
  sub_1C00BC220(0);
  sub_1C12EBFC4((unint64_t *)&unk_1EB88FF88, sub_1C00BC220);
  sub_1C12EBFC4(&qword_1EB886940, (void (*)(uint64_t))type metadata accessor for FeedGroupDebugCandidateItem);
  swift_bridgeObjectRetain();
  v25[3] = sub_1C151E90C();
  v25[4] = v24;
  v25[5] = v4;
  return v25;
}

uint64_t FormatServiceResult.resolvedContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFECA754(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, a1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
}

uint64_t FormatServiceResult.resolvedPool.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFECA754(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, a1, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
}

uint64_t FormatServiceResult.copy(adjustedContent:)(uint64_t a1)
{
  uint64_t v20 = a1;
  uint64_t v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatContentPool();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for FormatContent(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatServiceOptions();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA754(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1BFECA754(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, (uint64_t)v13, type metadata accessor for FormatContent);
  sub_1BFECA754(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFECA754(v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFECA754(v1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  uint64_t v17 = swift_allocObject();
  sub_1C00327E4((uint64_t)v16, v17 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  sub_1C00327E4((uint64_t)v13, v17 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1C00327E4((uint64_t)v10, v17 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1C00327E4((uint64_t)v4, v17 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C00327E4((uint64_t)v7, v17 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  return v17;
}

uint64_t FormatServiceResult.deinit()
{
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  return v0;
}

uint64_t FormatServiceResult.__deallocating_deinit()
{
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  sub_1BFD21878(v0 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  return swift_deallocClassInstance();
}

uint64_t sub_1C12EB520()
{
  return type metadata accessor for FormatServiceResult();
}

uint64_t type metadata accessor for FormatServiceResult()
{
  uint64_t result = qword_1EB888F40;
  if (!qword_1EB888F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C12EB574()
{
  uint64_t result = type metadata accessor for FormatContent.Resolved();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FormatContentPool();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for FormatContent(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for FormatServiceOptions();
        if (v4 <= 0x3F) {
          return swift_updateClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t method lookup function for FormatServiceResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatServiceResult);
}

uint64_t sub_1C12EB6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatContentSlotItemObject();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA754(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v28 = *v14;
      uint64_t v29 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool + 8);
      if (!*(void *)(v29 + 16)) {
        goto LABEL_2;
      }
      uint64_t v30 = *(void *)(v28 + 16);
      uint64_t v31 = *(void *)(v28 + 24);
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1BFEF2D8C(v30, v31);
      if ((v33 & 1) == 0) {
        goto LABEL_40;
      }
      goto LABEL_21;
    case 2u:
    case 3u:
    case 6u:
    case 7u:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
      goto LABEL_2;
    case 4u:
      uint64_t v34 = *v14;
      uint64_t v29 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool + 32);
      if (!*(void *)(v29 + 16)) {
        goto LABEL_2;
      }
      uint64_t v35 = *(void *)(v34 + 16);
      uint64_t v36 = *(void *)(v34 + 24);
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1BFEF2D8C(v35, v36);
      if (v37)
      {
LABEL_21:
        unint64_t v38 = *(void *)(*(void *)(v29 + 56) + 8 * v32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1C12EBEFC((uint64_t)a3);
        uint64_t v16 = sub_1C12EC00C(v38, a3);
        sub_1C12EBF60((uint64_t)a3);
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        goto LABEL_4;
      }
LABEL_40:
      swift_bridgeObjectRelease();
LABEL_2:
      uint64_t result = swift_release();
      goto LABEL_3;
    case 5u:
      sub_1C00327E4((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
      uint64_t v39 = *(void *)&v11[*(int *)(v9 + 28)];
      if (!v39) {
        goto LABEL_48;
      }
      uint64_t v72 = a4;
      uint64_t v73 = v4;
      uint64_t v40 = *(void *)(v39 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      uint64_t v41 = OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool;
      uint64_t v42 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool);
      uint64_t v71 = swift_retain_n();
      uint64_t v43 = v71;
      while (2)
      {
        uint64_t v44 = *(void *)(v43 + 24);
        if (*(void *)(v42 + 16))
        {
          uint64_t v45 = *(void *)(v43 + 16);
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v46 = sub_1BFEF2D8C(v45, v44);
          if (v47)
          {
LABEL_50:
            uint64_t v64 = *(void *)(*(void *)(v42 + 56) + 8 * v46);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            sub_1BFE4DBE0();
            uint64_t v65 = swift_allocObject();
            *(_OWORD *)(v65 + 16) = xmmword_1C15320E0;
            uint64_t v67 = *a3;
            uint64_t v66 = a3[1];
            swift_bridgeObjectRetain();
            id v68 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
            if (!v68) {
              id v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
            }
            type metadata accessor for FeedGroupDebugCandidateItem();
            uint64_t v69 = (void *)swift_allocObject();
            void v69[2] = v67;
            v69[3] = v66;
            v69[4] = v64;
            v69[5] = v68;
            v69[6] = 0;
            *(void *)(v65 + 32) = v69;
            uint64_t v74 = v65;
            sub_1C151EBEC();
            uint64_t v16 = v74;
            swift_release_n();
            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            uint64_t result = sub_1BFD21878((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
            goto LABEL_53;
          }
          swift_bridgeObjectRelease();
          uint64_t v44 = *(void *)(v43 + 24);
        }
        else
        {
          swift_retain();
        }
        uint64_t v48 = *(void *)(a2 + v41);
        if (*(void *)(v48 + 16))
        {
          uint64_t v49 = *(void *)(v43 + 16);
          swift_bridgeObjectRetain();
          unint64_t v46 = sub_1BFEF2D8C(v49, v44);
          if ((v50 & 1) == 0)
          {
            swift_release();
            swift_bridgeObjectRelease();
            if (!v40) {
              goto LABEL_47;
            }
LABEL_33:
            uint64_t v43 = v40;
            uint64_t v40 = *(void *)(v40 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
            continue;
          }
          uint64_t v42 = v48;
          goto LABEL_50;
        }
        break;
      }
      swift_release();
      if (v40) {
        goto LABEL_33;
      }
LABEL_47:
      swift_release_n();
      a4 = v72;
LABEL_48:
      uint64_t result = sub_1BFD21878((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed);
LABEL_3:
      uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_4:
      *a4 = v16;
      return result;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 9u:
      uint64_t v51 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool + 72);
      if (*(void *)(v51 + 16) && (unint64_t v52 = sub_1BFEF2D8C(*v14, v14[1]), (v53 & 1) != 0))
      {
        unsigned int v54 = (void *)(*(void *)(v51 + 56) + (v52 << 6));
        uint64_t v55 = v54[1];
        uint64_t v56 = v54[4];
        uint64_t v72 = (uint64_t *)v54[3];
        uint64_t v73 = v55;
        uint64_t v71 = v56;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1C12EBEFC((uint64_t)a3);
        uint64_t v57 = swift_bridgeObjectRetain();
        uint64_t v16 = sub_1C12EC1C8(v57, a3);
        sub_1C12EBF60((uint64_t)a3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v16 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_4;
    case 0xAu:
      uint64_t result = sub_1BFD21878((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject);
      goto LABEL_3;
    default:
      uint64_t v72 = a4;
      uint64_t v73 = v4;
      uint64_t v17 = *v14;
      uint64_t v18 = *(void *)(*v14 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      uint64_t v19 = OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool;
      uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool);
      swift_retain_n();
      uint64_t v71 = v17;
      while (2)
      {
        uint64_t v21 = *(void *)(v17 + 24);
        if (*(void *)(v20 + 16))
        {
          uint64_t v22 = *(void *)(v17 + 16);
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v23 = sub_1BFEF2D8C(v22, v21);
          if (v24) {
            goto LABEL_44;
          }
          swift_bridgeObjectRelease();
          uint64_t v21 = *(void *)(v17 + 24);
        }
        else
        {
          swift_retain();
        }
        uint64_t v25 = *(void *)(a2 + v19);
        if (!*(void *)(v25 + 16))
        {
          swift_release();
          if (!v18)
          {
LABEL_42:
            uint64_t result = swift_release_n();
            uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_53:
            a4 = v72;
            goto LABEL_4;
          }
LABEL_15:
          uint64_t v17 = v18;
          uint64_t v18 = *(void *)(v18 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
          continue;
        }
        break;
      }
      uint64_t v26 = *(void *)(v17 + 16);
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1BFEF2D8C(v26, v21);
      if ((v27 & 1) == 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        if (!v18) {
          goto LABEL_42;
        }
        goto LABEL_15;
      }
      uint64_t v20 = v25;
LABEL_44:
      uint64_t v58 = *(void *)(*(void *)(v20 + 56) + 8 * v23);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BFE4DBE0();
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_1C15320E0;
      uint64_t v61 = *a3;
      uint64_t v60 = a3[1];
      swift_bridgeObjectRetain();
      id v62 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
      if (!v62) {
        id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      type metadata accessor for FeedGroupDebugCandidateItem();
      uint64_t v63 = (void *)swift_allocObject();
      v63[2] = v61;
      v63[3] = v60;
      v63[4] = v58;
      v63[5] = v62;
      v63[6] = 0;
      *(void *)(v59 + 32) = v63;
      uint64_t v74 = v59;
      sub_1C151EBEC();
      uint64_t v16 = v74;
      swift_release_n();
      swift_unknownObjectRelease();
      swift_release();
      uint64_t result = swift_release();
      goto LABEL_53;
  }
}

uint64_t sub_1C12EBEFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C12EBF60(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C12EBFC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12EC00C(unint64_t a1, uint64_t *a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v4) {
      break;
    }
    uint64_t v11 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C152028C();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    uint64_t v7 = *a2;
    a2 = (uint64_t *)a2[1];
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x1C18C7CB0](v6, a1);
      }
      else
      {
        uint64_t v9 = *(void *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRetain();
      id v10 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
      if (!v10) {
        id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      ++v6;
      type metadata accessor for FeedGroupDebugCandidateItem();
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = v7;
      v8[3] = a2;
      void v8[4] = v9;
      v8[5] = v10;
      v8[6] = 0;
      swift_unknownObjectRelease();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (v4 == v6) {
        return v11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C12EC1C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v19 = a2;
  uint64_t v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    v17[0] = a1;
    v17[1] = v2;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    uint64_t v18 = v11;
    do
    {
      sub_1BFECA754(v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1BFD21878((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      else
      {
        uint64_t v12 = *v7;
        uint64_t v13 = *v19;
        uint64_t v14 = v19[1];
        swift_bridgeObjectRetain();
        id v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
        if (!v15) {
          id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
        }
        swift_unknownObjectRelease();
        type metadata accessor for FeedGroupDebugCandidateItem();
        uint64_t v16 = (void *)swift_allocObject();
        v16[2] = v13;
        v16[3] = v14;
        v16[4] = v12;
        v16[5] = v15;
        v16[6] = 0;
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
        uint64_t v11 = v18;
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t sub_1C12EC404(uint64_t *a1, uint64_t a2)
{
  FormatOptionValue.type.getter((char *)&v10);
  uint64_t result = sub_1BFF2AB84(v10, a2);
  if ((result & 1) == 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C090EA08((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
    swift_allocError();
    uint64_t v6 = v5;
    uint64_t v8 = *a1;
    uint64_t v7 = a1[1];
    swift_bridgeObjectRetain();
    FormatOptionValue.type.getter((char *)&v10);
    unsigned __int8 v9 = v10;
    *(void *)uint64_t v6 = v8;
    *(void *)(v6 + 8) = v7;
    *(unsigned char *)(v6 + 16) = v9;
    *(void *)(v6 + 24) = a2;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C12EC520(void *a1, uint64_t a2)
{
  sub_1C12ED1C0(0, &qword_1EA1ADFA0, (uint64_t (*)(void))sub_1C12ED16C, (uint64_t)&type metadata for FormatOptionValidator.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12ED16C();
  sub_1C1520F0C();
  v10[1] = a2;
  sub_1C12ED1C0(0, &qword_1EA1ADF90, (uint64_t (*)(void))sub_1C007E638, (uint64_t)&type metadata for FormatOptionType, MEMORY[0x1E4FBB510]);
  sub_1C12ED228(&qword_1EA1ADFA8, (void (*)(void))sub_1BFF08118);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C12EC708()
{
  return 0x7365707974;
}

uint64_t sub_1C12EC71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7365707974 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C12EC7AC(uint64_t a1)
{
  unint64_t v2 = sub_1C12ED16C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12EC7E8(uint64_t a1)
{
  unint64_t v2 = sub_1C12ED16C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C12EC824@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C12ECF40(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C12EC850(void *a1)
{
  return sub_1C12EC520(a1, *v1);
}

uint64_t sub_1C12EC86C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00ABAD8(*a1, *a2);
}

uint64_t sub_1C12EC878()
{
  uint64_t v1 = *v0;
  sub_1C1520DBC();
  sub_1C1475940((uint64_t)v3, v1);
  return sub_1C1520E0C();
}

uint64_t sub_1C12EC8C0(uint64_t a1)
{
  return sub_1C1475940(a1, *v1);
}

uint64_t sub_1C12EC8C8()
{
  uint64_t v1 = *v0;
  sub_1C1520DBC();
  sub_1C1475940((uint64_t)v3, v1);
  return sub_1C1520E0C();
}

uint64_t sub_1C12EC90C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v19;
    int64_t v4 = sub_1BFD44A04(a1);
    int v6 = v5;
    char v8 = v7 & 1;
    do
    {
      if (v4 < 0 || v4 >= 1 << *(unsigned char *)(a1 + 32))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x1C12ECBA4);
      }
      if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v9 = 0xE700000000000000;
      uint64_t v10 = 0x6E61656C6F6F62;
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v4))
      {
        case 1:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1702125924;
          break;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1836412517;
          break;
        case 3:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x74616F6C66;
          break;
        case 4:
          uint64_t v10 = 0x72656765746E69;
          break;
        case 5:
          unint64_t v9 = 0xE600000000000000;
          uint64_t v10 = 0x676E69727473;
          break;
        case 6:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v10 = 7107189;
          break;
        case 7:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x726F6C6F63;
          break;
        case 8:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6567616D69;
          break;
        case 9:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6F65646976;
          break;
        case 0xA:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1953394534;
          break;
        case 0xB:
          unint64_t v9 = 0xEB00000000726579;
          uint64_t v10 = 0x616C506F65646976;
          break;
        default:
          break;
      }
      unint64_t v12 = *(void *)(v19 + 16);
      unint64_t v11 = *(void *)(v19 + 24);
      if (v12 >= v11 >> 1) {
        sub_1BFF661B8(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v19 + 16) = v12 + 1;
      uint64_t v13 = v19 + 16 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      int64_t v14 = sub_1BFD43BF8(v4, v6, v8 & 1, a1);
      int64_t v4 = v14;
      int v6 = v15;
      char v8 = v16 & 1;
      --v1;
    }
    while (v1);
    sub_1C0153754(v14, v15, v16 & 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = MEMORY[0x1C18C6710](v2, MEMORY[0x1E4FBB1A0]);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C12ECBD4()
{
  return sub_1C12EC90C(*v0);
}

uint64_t sub_1C12ECBDC(uint64_t *a1, char *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  char v4 = *a2;
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF582A4();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *(unsigned char *)(inited + 32) = v4;
    uint64_t v13 = sub_1C00B857C(inited);
    swift_setDeallocating();
    return v13;
  }
  uint64_t v18 = *a1;
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 32 + 8 * v5 - 8);
  uint64_t v8 = FormatOptionType.rawValue.getter();
  uint64_t v10 = v9;
  if (v8 == FormatOptionType.rawValue.getter() && v10 == v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    goto LABEL_7;
  }
  char v14 = sub_1C1520A9C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v13 = sub_1C00B857C((uint64_t)&unk_1F1B65FE8);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EB87BD48 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_1EB879FE0;
      swift_bridgeObjectRetain();
    }
    return v13;
  }
  swift_bridgeObjectRelease();
  type metadata accessor for FormatLayoutError();
  sub_1C090EA08((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  swift_allocError();
  char v16 = v15;
  uint64_t v13 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1C152036C();
  if (v7) {
    swift_bridgeObjectRelease();
  }
  sub_1C152036C();
  *char v16 = v18;
  v16[1] = v2;
  v16[2] = 0;
  v16[3] = 0xE000000000000000;
  v16[4] = 0;
  v16[5] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

ValueMetadata *type metadata accessor for FormatOptionValidator()
{
  return &type metadata for FormatOptionValidator;
}

unint64_t sub_1C12ECEEC()
{
  unint64_t result = qword_1EA1ADF78;
  if (!qword_1EA1ADF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF78);
  }
  return result;
}

void *sub_1C12ECF40(void *a1)
{
  sub_1C12ED1C0(0, &qword_1EA1ADF80, (uint64_t (*)(void))sub_1C12ED16C, (uint64_t)&type metadata for FormatOptionValidator.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12ED16C();
  uint64_t v9 = v8;
  sub_1C1520EBC();
  if (!v1)
  {
    sub_1C12ED1C0(0, &qword_1EA1ADF90, (uint64_t (*)(void))sub_1C007E638, (uint64_t)&type metadata for FormatOptionType, MEMORY[0x1E4FBB510]);
    sub_1C12ED228(&qword_1EA1ADF98, (void (*)(void))sub_1BFF71ADC);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1C12ED16C()
{
  unint64_t result = qword_1EA1ADF88;
  if (!qword_1EA1ADF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADF88);
  }
  return result;
}

void sub_1C12ED1C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C12ED228(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C12ED1C0(255, &qword_1EA1ADF90, (uint64_t (*)(void))sub_1C007E638, (uint64_t)&type metadata for FormatOptionType, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatOptionValidator.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12ED368);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionValidator.CodingKeys()
{
  return &type metadata for FormatOptionValidator.CodingKeys;
}

unint64_t sub_1C12ED3A4()
{
  unint64_t result = qword_1EA1ADFB0;
  if (!qword_1EA1ADFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADFB0);
  }
  return result;
}

unint64_t sub_1C12ED3FC()
{
  unint64_t result = qword_1EA1ADFB8;
  if (!qword_1EA1ADFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADFB8);
  }
  return result;
}

unint64_t sub_1C12ED454()
{
  unint64_t result = qword_1EA1ADFC0;
  if (!qword_1EA1ADFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADFC0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for FormatJson(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 8u:
      case 0xAu:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v9 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v9;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v10 = sub_1C1515FDC();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(void *)a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v11 = *a2;
        *(void *)a1 = *a2;
        unint64_t v12 = v11;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FormatJson(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 5u:
    case 8u:
    case 0xAu:
      swift_bridgeObjectRelease();
      break;
    case 6u:
      uint64_t v2 = sub_1C1515FDC();
      int v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
      v3(a1, v2);
      break;
    case 7u:
      swift_release();
      break;
    case 9u:
      unsigned int v4 = *a1;

      break;
    default:
      return;
  }
}

void *initializeWithCopy for FormatJson(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 8u:
    case 0xAu:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 5u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 6u:
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_8;
    case 7u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_8;
    case 9u:
      uint64_t v8 = (void *)*a2;
      *a1 = *a2;
      id v9 = v8;
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for FormatJson(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C12EF7CC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatJson);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 8u:
      case 0xAu:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 6u:
        uint64_t v6 = sub_1C1515FDC();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_9;
      case 7u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_9;
      case 9u:
        uint64_t v7 = (void *)*a2;
        *a1 = *a2;
        id v8 = v7;
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for FormatJson()
{
  uint64_t result = qword_1EB865600;
  if (!qword_1EB865600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for FormatJson(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v6 = sub_1C1515FDC();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for FormatJson(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C12EF7CC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatJson);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C12EDDBC()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1C12EDE90(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = sub_1C12F0138(a1, a2);
  swift_release();
  return v2;
}

id sub_1C12EDED4(uint64_t a1)
{
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_traitCollectionWithUserInterfaceStyle_, a1);
  return v1;
}

uint64_t sub_1C12EDF20@<X0>(objc_class *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v200 = a2;
  int v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C12EF908(0, &qword_1EB870458, (uint64_t (*)(uint64_t))type metadata accessor for FormatJson, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v196 - v7;
  uint64_t v9 = type metadata accessor for FormatOption();
  uint64_t v203 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v211 = (char *)&v196 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12EF908(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], v5);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v208 = (char *)&v196 - v12;
  uint64_t v13 = sub_1C1518CDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v214 = (char *)&v196 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v209 = (char *)&v196 - v17;
  uint64_t v18 = sub_1C1515FDC();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FormatJson();
  *(void *)&long long v212 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v197 = (void **)((char *)&v196 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  uint64_t v199 = (uint64_t)&v196 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v198 = (void **)((char *)&v196 - v27);
  MEMORY[0x1F4188790](v28);
  uint64_t v216 = (void (**)(char *, uint64_t, uint64_t))((char *)&v196 - v29);
  MEMORY[0x1F4188790](v30);
  uint64_t v215 = (uint64_t)&v196 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (uint64_t *)((char *)&v196 - v33);
  sub_1C12EF764(v3, (uint64_t)&v196 - v33, (uint64_t (*)(void))type metadata accessor for FormatJson);
  uint64_t v210 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v22;
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  Class v213 = a1;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v39 = *v34;
      swift_retain();
      unint64_t v40 = sub_1C12EDE90(v39, (uint64_t)a1);
      swift_bridgeObjectRelease();
      if (!*(void *)(v40 + 16)) {
        goto LABEL_109;
      }
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v40;
      uint64_t v42 = v200;
      *uint64_t v200 = v41;
      uint64_t v43 = (unsigned int *)MEMORY[0x1E4FAAFA0];
      goto LABEL_106;
    case 2:
      uint64_t v44 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 104);
      uint64_t v45 = (unsigned int *)MEMORY[0x1E4FAAF98];
      if (!*(unsigned char *)v34) {
        uint64_t v45 = (unsigned int *)MEMORY[0x1E4FAAFA8];
      }
      uint64_t v46 = *v45;
      uint64_t v42 = v200;
      goto LABEL_107;
    case 3:
      uint64_t v47 = *v34;
      uint64_t v48 = swift_allocObject();
      uint64_t v217 = (void *)v47;
      sub_1BFF01BC4();
      uint64_t v49 = sub_1C151FF2C();
      goto LABEL_11;
    case 4:
      uint64_t v48 = swift_allocObject();
      uint64_t v49 = sub_1C151EF4C();
LABEL_11:
      *(void *)(v48 + 16) = v49;
      *(void *)(v48 + 24) = v50;
      uint64_t v51 = v200;
      *uint64_t v200 = v48;
      (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v51, *MEMORY[0x1E4FAAFB0], v13);
      unint64_t v52 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      char v53 = v51;
      goto LABEL_108;
    case 5:
      uint64_t v55 = *v34;
      unint64_t v54 = v34[1];
      uint64_t v56 = HIBYTE(v54) & 0xF;
      if ((v54 & 0x2000000000000000) == 0) {
        uint64_t v56 = v55 & 0xFFFFFFFFFFFFLL;
      }
      if (!v56) {
        goto LABEL_109;
      }
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v55;
      *(void *)(v57 + 24) = v54;
      uint64_t v42 = v200;
      *uint64_t v200 = v57;
      uint64_t v43 = (unsigned int *)MEMORY[0x1E4FAAFC0];
      goto LABEL_106;
    case 6:
      (*(void (**)(char *, uint64_t *, uint64_t))(v19 + 32))(v21, v34, v18);
      uint64_t v58 = swift_allocObject();
      uint64_t v59 = sub_1C1515E2C();
      uint64_t v60 = v13;
      uint64_t v61 = v14;
      uint64_t v63 = v62;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      *(void *)(v58 + 16) = v59;
      *(void *)(v58 + 24) = v63;
      uint64_t v64 = v200;
      *uint64_t v200 = v58;
      (*(void (**)(uint64_t *, void, uint64_t))(v61 + 104))(v64, *MEMORY[0x1E4FAAFC0], v60);
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v61 + 56))(v64, 0, 1, v60);
    case 7:
      uint64_t v214 = (char *)*v34;
      uint64_t v217 = v214;
      Class v66 = FormatColor.color.getter(EnumCaseMultiPayload);
      sub_1BFE4DBE0();
      uint64_t v207 = v13;
      uint64_t v67 = swift_allocObject();
      long long v212 = xmmword_1C15320F0;
      *(_OWORD *)(v67 + 16) = xmmword_1C15320F0;
      id v68 = self;
      uint64_t v215 = v14;
      uint64_t v69 = v68;
      id v70 = objc_msgSend(v68, sel_currentTraitCollection);
      id v71 = objc_msgSend(v70, sel_userInterfaceLevel);

      *(void *)(v67 + 32) = objc_msgSend(v69, sel_traitCollectionWithUserInterfaceLevel_, v71);
      *(void *)(v67 + 40) = objc_msgSend(v69, sel_traitCollectionWithUserInterfaceStyle_, 1);
      uint64_t v217 = (void *)v67;
      sub_1C151EBEC();
      sub_1C12EF8C8();
      uint64_t v72 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      id v73 = objc_msgSend(v69, sel_traitCollectionWithTraitsFromCollections_, v72);

      Class v74 = v66;
      Class v213 = v66;
      uint64_t v216 = (void (**)(char *, uint64_t, uint64_t))[(objc_class *)v66 resolvedColorWithTraitCollection:v73];

      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = v212;
      id v76 = objc_msgSend(v69, sel_currentTraitCollection);
      id v77 = objc_msgSend(v76, sel_userInterfaceLevel);

      *(void *)(v75 + 32) = objc_msgSend(v69, sel_traitCollectionWithUserInterfaceLevel_, v77);
      *(void *)(v75 + 40) = objc_msgSend(v69, sel_traitCollectionWithUserInterfaceStyle_, 2);
      uint64_t v217 = (void *)v75;
      sub_1C151EBEC();
      uint64_t v78 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      id v79 = objc_msgSend(v69, sel_traitCollectionWithTraitsFromCollections_, v78);

      uint64_t v211 = (char *)[(objc_class *)v74 resolvedColorWithTraitCollection:v79];
      *(void *)&long long v212 = swift_allocObject();
      sub_1C12EF908(0, &qword_1EB870528, (uint64_t (*)(uint64_t))sub_1C028E144, MEMORY[0x1E4FBBE00]);
      sub_1C028E144();
      uint64_t v81 = v80 - 8;
      uint64_t v82 = *(void *)(*(void *)(v80 - 8) + 72);
      unint64_t v83 = (*(unsigned __int8 *)(*(void *)(v80 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v80 - 8) + 80);
      uint64_t v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_1C1527210;
      uint64_t v85 = (void *)(v84 + v83);
      uint64_t v86 = (uint64_t *)(v84 + v83 + *(int *)(v81 + 56));
      *uint64_t v85 = 0x746867696CLL;
      v85[1] = 0xE500000000000000;
      uint64_t v87 = swift_allocObject();
      *(void *)(v87 + 16) = sub_1C0B33DE0();
      *(void *)(v87 + 24) = v88;
      *uint64_t v86 = v87;
      uint64_t v89 = *MEMORY[0x1E4FAAFC0];
      uint64_t v90 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v215 + 104);
      uint64_t v91 = v207;
      v90(v86, v89, v207);
      uint64_t v92 = (void *)(v84 + v83 + v82);
      uint64_t v93 = (void *)((char *)v92 + *(int *)(v81 + 56));
      *uint64_t v92 = 1802658148;
      v92[1] = 0xE400000000000000;
      uint64_t v94 = swift_allocObject();
      id v95 = v211;
      *(void *)(v94 + 16) = sub_1C0B33DE0();
      *(void *)(v94 + 24) = v96;
      *uint64_t v93 = v94;
      v90(v93, v89, v91);
      unint64_t v97 = sub_1C018D7A4(v84);

      swift_release();
      uint64_t v98 = v212;
      *(void *)(v212 + 16) = v97;
      unint64_t v99 = v200;
      *uint64_t v200 = v98;
      v90(v99, *MEMORY[0x1E4FAAFB8], v91);
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v215 + 56))(v99, 0, 1, v91);
    case 8:
      uint64_t v100 = *v34;
      uint64_t v101 = *(void *)(v100 + 16);
      if (v101)
      {
        unint64_t v102 = (char *)type metadata accessor for FormatJsonKeyValue();
        uint64_t v103 = v14;
        id v104 = (uint64_t *)(v100
                         + ((*(unsigned __int8 *)(*((void *)v102 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v102 - 1) + 80)));
        uint64_t v105 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
        uint64_t v106 = *(void *)(*((void *)v102 - 1) + 72);
        uint64_t v215 = v103;
        uint64_t v216 = (void (**)(char *, uint64_t, uint64_t))(v103 + 32);
        *(void *)&long long v212 = v103 + 16;
        uint64_t v204 = v103 + 40;
        uint64_t v205 = v103 + 8;
        uint64_t v203 = v100;
        swift_bridgeObjectRetain();
        id v107 = (void *)MEMORY[0x1E4FBC868];
        uint64_t v108 = (uint64_t)v208;
        uint64_t v206 = v106;
        uint64_t v207 = v13;
        uint64_t v210 = v105;
        uint64_t v211 = v102;
        while (1)
        {
          sub_1C12EDF20(a1);
          if ((*v105)(v108, 1, v13) != 1) {
            break;
          }
          sub_1BFE3074C(v108, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
LABEL_22:
          id v104 = (uint64_t *)((char *)v104 + v106);
          if (!--v101)
          {
            swift_bridgeObjectRelease();
            uint64_t v14 = v215;
            goto LABEL_103;
          }
        }
        uint64_t v109 = *v216;
        uint64_t v110 = v209;
        (*v216)(v209, v108, v13);
        uint64_t v112 = *v104;
        uint64_t v111 = v104[1];
        (*(void (**)(char *, char *, uint64_t))v212)(v214, v110, v13);
        swift_bridgeObjectRetain();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v217 = v107;
        unint64_t v115 = sub_1BFEF2D8C(v112, v111);
        uint64_t v116 = v107[2];
        BOOL v117 = (v114 & 1) == 0;
        uint64_t v118 = v116 + v117;
        if (__OFADD__(v116, v117)) {
          goto LABEL_116;
        }
        char v119 = v114;
        if (v107[3] < v118)
        {
          sub_1C1056C00(v118, isUniquelyReferenced_nonNull_native);
          unint64_t v120 = sub_1BFEF2D8C(v112, v111);
          if ((v119 & 1) != (v121 & 1)) {
            goto LABEL_121;
          }
          unint64_t v115 = v120;
          uint64_t v122 = v217;
          if ((v119 & 1) == 0) {
            goto LABEL_33;
          }
LABEL_31:
          unint64_t v123 = v122[7] + *(void *)(v215 + 72) * v115;
          uint64_t v13 = v207;
          (*(void (**)(unint64_t, char *, uint64_t))(v215 + 40))(v123, v214, v207);
LABEL_35:
          id v107 = v217;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))v205)(v209, v13);
          a1 = v213;
          uint64_t v108 = (uint64_t)v208;
          uint64_t v105 = v210;
          uint64_t v106 = v206;
          goto LABEL_22;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v122 = v217;
          if (v114) {
            goto LABEL_31;
          }
        }
        else
        {
          sub_1C106D378();
          uint64_t v122 = v217;
          if (v119) {
            goto LABEL_31;
          }
        }
LABEL_33:
        v122[(v115 >> 6) + 8] |= 1 << v115;
        uint64_t v124 = (uint64_t *)(v122[6] + 16 * v115);
        *uint64_t v124 = v112;
        v124[1] = v111;
        unint64_t v125 = v122[7] + *(void *)(v215 + 72) * v115;
        uint64_t v13 = v207;
        v109((char *)v125, (uint64_t)v214, v207);
        uint64_t v126 = v122[2];
        BOOL v127 = __OFADD__(v126, 1);
        uint64_t v128 = v126 + 1;
        if (v127) {
          goto LABEL_117;
        }
        v122[2] = v128;
        swift_bridgeObjectRetain();
        goto LABEL_35;
      }
      id v107 = (void *)MEMORY[0x1E4FBC868];
LABEL_103:
      swift_bridgeObjectRelease();
      if (v107[2])
      {
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v107;
LABEL_105:
        uint64_t v42 = v200;
        *uint64_t v200 = v38;
        uint64_t v43 = (unsigned int *)MEMORY[0x1E4FAAFB8];
LABEL_106:
        uint64_t v46 = *v43;
        uint64_t v44 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 104);
LABEL_107:
        v44(v42, v46, v13);
        unint64_t v52 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v14 + 56);
        char v53 = v42;
LABEL_108:
        uint64_t v195 = 0;
      }
      else
      {
LABEL_109:
        swift_bridgeObjectRelease();
LABEL_110:
        unint64_t v52 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v14 + 56);
        char v53 = v200;
        uint64_t v195 = 1;
      }
      return v52(v53, v195, 1, v13);
    case 9:
      uint64_t v129 = (void *)*v34;
      if (!*v34) {
        goto LABEL_110;
      }
      uint64_t v130 = swift_allocObject();
      id v131 = v129;
      uint64_t v132 = v14;
      id v133 = objc_msgSend(v131, sel_remoteURL);
      sub_1C1515F1C();

      uint64_t v134 = sub_1C1515E2C();
      uint64_t v135 = v13;
      uint64_t v137 = v136;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);

      *(void *)(v130 + 16) = v134;
      *(void *)(v130 + 24) = v137;
      uint64_t v138 = v200;
      *uint64_t v200 = v130;
      (*(void (**)(uint64_t *, void, uint64_t))(v132 + 104))(v138, *MEMORY[0x1E4FAAFC0], v135);
      return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v132 + 56))(v138, 0, 1, v135);
    case 10:
      uint64_t v217 = (void *)*v34;
      sub_1C12EF908(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
      sub_1C0B3ADC0();
      sub_1C007E638();
      uint64_t v139 = sub_1C151E93C();
      swift_bridgeObjectRelease();
      int64_t v140 = 0;
      uint64_t v141 = *(void *)(v139 + 64);
      uint64_t v201 = v139 + 64;
      uint64_t v205 = v139;
      uint64_t v142 = 1 << *(unsigned char *)(v139 + 32);
      uint64_t v143 = -1;
      if (v142 < 64) {
        uint64_t v143 = ~(-1 << v142);
      }
      unint64_t v144 = v143 & v141;
      int64_t v202 = (unint64_t)(v142 + 63) >> 6;
      uint64_t v214 = (char *)(v212 + 48);
      uint64_t v196 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v209 = v8;
      long long v146 = v210;
      id v145 = (uint64_t *)v211;
      if ((v143 & v141) == 0) {
        goto LABEL_45;
      }
      while (2)
      {
        while (2)
        {
          unint64_t v147 = __clz(__rbit64(v144));
          v144 &= v144 - 1;
          unint64_t v148 = v147 | (v140 << 6);
LABEL_59:
          uint64_t v152 = *(void *)(v205 + 56);
          uint64_t v204 = *(unsigned __int8 *)(*(void *)(v205 + 48) + v148);
          uint64_t v153 = *(void *)(v152 + 8 * v148);
          uint64_t v154 = *(void *)(v153 + 16);
          if (v154)
          {
            uint64_t v207 = v140;
            uint64_t v208 = (char *)v144;
            uint64_t v155 = v203;
            uint64_t v156 = v153
                 + ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80));
            uint64_t v206 = v153;
            swift_bridgeObjectRetain();
            uint64_t v157 = *(void *)(v155 + 72);
            uint64_t v158 = (void *)MEMORY[0x1E4FBC868];
            do
            {
              sub_1C12EF764(v156, (uint64_t)v145, (uint64_t (*)(void))type metadata accessor for FormatOption);
              uint64_t v217 = (void *)v145[2];
              swift_retain();
              sub_1C118D3B0((uint64_t)a1, v8);
              swift_release();
              if ((*(unsigned int (**)(char *, uint64_t, void))v214)(v8, 1, v146) == 1)
              {
                sub_1C12EF7CC((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for FormatOption);
                sub_1BFE3074C((uint64_t)v8, &qword_1EB870458, (uint64_t (*)(uint64_t))type metadata accessor for FormatJson);
              }
              else
              {
                uint64_t v159 = v215;
                sub_1C12F00D0((uint64_t)v8, v215, (uint64_t (*)(void))type metadata accessor for FormatJson);
                uint64_t v160 = v145;
                uint64_t v161 = *v145;
                uint64_t v162 = v160[1];
                sub_1C12EF764(v159, (uint64_t)v216, (uint64_t (*)(void))type metadata accessor for FormatJson);
                swift_bridgeObjectRetain();
                int v163 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v217 = v158;
                unint64_t v165 = sub_1BFEF2D8C(v161, v162);
                uint64_t v166 = v158[2];
                BOOL v167 = (v164 & 1) == 0;
                uint64_t v168 = v166 + v167;
                if (__OFADD__(v166, v167))
                {
                  __break(1u);
LABEL_114:
                  __break(1u);
LABEL_115:
                  __break(1u);
LABEL_116:
                  __break(1u);
LABEL_117:
                  __break(1u);
LABEL_118:
                  __break(1u);
LABEL_119:
                  __break(1u);
LABEL_120:
                  __break(1u);
LABEL_121:
                  sub_1C1520CFC();
                  __break(1u);
                  JUMPOUT(0x1C12EF708);
                }
                char v169 = v164;
                if (v158[3] >= v168)
                {
                  if ((v163 & 1) == 0) {
                    sub_1C106C4E8();
                  }
                }
                else
                {
                  sub_1C1056BAC(v168, v163);
                  unint64_t v170 = sub_1BFEF2D8C(v161, v162);
                  if ((v169 & 1) != (v171 & 1)) {
                    goto LABEL_121;
                  }
                  unint64_t v165 = v170;
                }
                a1 = v213;
                uint64_t v158 = v217;
                if (v169)
                {
                  sub_1C12EF82C((uint64_t)v216, v217[7] + *(void *)(v212 + 72) * v165);
                }
                else
                {
                  v217[(v165 >> 6) + 8] |= 1 << v165;
                  uint64_t v172 = (uint64_t *)(v158[6] + 16 * v165);
                  *uint64_t v172 = v161;
                  v172[1] = v162;
                  sub_1C12F00D0((uint64_t)v216, v158[7] + *(void *)(v212 + 72) * v165, (uint64_t (*)(void))type metadata accessor for FormatJson);
                  uint64_t v173 = v158[2];
                  BOOL v127 = __OFADD__(v173, 1);
                  uint64_t v174 = v173 + 1;
                  if (v127) {
                    goto LABEL_114;
                  }
                  v158[2] = v174;
                  swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C12EF7CC(v215, (uint64_t (*)(void))type metadata accessor for FormatJson);
                id v145 = (uint64_t *)v211;
                sub_1C12EF7CC((uint64_t)v211, (uint64_t (*)(void))type metadata accessor for FormatOption);
                id v8 = v209;
                long long v146 = v210;
              }
              v156 += v157;
              --v154;
            }
            while (v154);
            swift_bridgeObjectRelease();
            int64_t v140 = v207;
            unint64_t v144 = (unint64_t)v208;
            if (!v158[2])
            {
LABEL_43:
              swift_bridgeObjectRelease();
              if (v144) {
                continue;
              }
              goto LABEL_45;
            }
          }
          else
          {
            uint64_t v158 = (void *)MEMORY[0x1E4FBC868];
            if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
              goto LABEL_43;
            }
          }
          break;
        }
        uint64_t v208 = (char *)v144;
        uint64_t v175 = 0xE700000000000000;
        uint64_t v176 = 0x6E61656C6F6F62;
        int64_t v177 = v140;
        switch(v204)
        {
          case 1:
            uint64_t v175 = 0xE400000000000000;
            uint64_t v176 = 1702125924;
            break;
          case 2:
            uint64_t v175 = 0xE400000000000000;
            uint64_t v176 = 1836412517;
            break;
          case 3:
            uint64_t v175 = 0xE500000000000000;
            uint64_t v176 = 0x74616F6C66;
            break;
          case 4:
            uint64_t v176 = 0x72656765746E69;
            break;
          case 5:
            uint64_t v175 = 0xE600000000000000;
            uint64_t v176 = 0x676E69727473;
            break;
          case 6:
            uint64_t v175 = 0xE300000000000000;
            uint64_t v176 = 7107189;
            break;
          case 7:
            uint64_t v175 = 0xE500000000000000;
            uint64_t v176 = 0x726F6C6F63;
            break;
          case 8:
            uint64_t v175 = 0xE500000000000000;
            uint64_t v176 = 0x6567616D69;
            break;
          case 9:
            uint64_t v175 = 0xE500000000000000;
            uint64_t v176 = 0x6F65646976;
            break;
          case 10:
            uint64_t v175 = 0xE400000000000000;
            uint64_t v176 = 1953394534;
            break;
          case 11:
            uint64_t v175 = 0xEB00000000726579;
            uint64_t v176 = 0x616C506F65646976;
            break;
          default:
            break;
        }
        uint64_t v178 = (uint64_t)v198;
        *uint64_t v198 = v158;
        swift_storeEnumTagMultiPayload();
        sub_1C12F00D0(v178, v199, (uint64_t (*)(void))type metadata accessor for FormatJson);
        uint64_t v179 = v196;
        int v180 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v217 = v179;
        unint64_t v182 = sub_1BFEF2D8C(v176, v175);
        uint64_t v183 = v179[2];
        BOOL v184 = (v181 & 1) == 0;
        uint64_t v185 = v183 + v184;
        if (__OFADD__(v183, v184)) {
          goto LABEL_119;
        }
        char v186 = v181;
        if (v179[3] >= v185)
        {
          if ((v180 & 1) == 0) {
            sub_1C106C4E8();
          }
        }
        else
        {
          sub_1C1056BAC(v185, v180);
          unint64_t v187 = sub_1BFEF2D8C(v176, v175);
          if ((v186 & 1) != (v188 & 1)) {
            goto LABEL_121;
          }
          unint64_t v182 = v187;
        }
        id v145 = (uint64_t *)v211;
        uint64_t v189 = v217;
        uint64_t v196 = v217;
        if (v186)
        {
          sub_1C12EF82C(v199, v217[7] + *(void *)(v212 + 72) * v182);
        }
        else
        {
          uint64_t v190 = v217;
          v217[(v182 >> 6) + 8] |= 1 << v182;
          uint64_t v191 = (uint64_t *)(v189[6] + 16 * v182);
          *uint64_t v191 = v176;
          v191[1] = v175;
          sub_1C12F00D0(v199, v190[7] + *(void *)(v212 + 72) * v182, (uint64_t (*)(void))type metadata accessor for FormatJson);
          uint64_t v192 = v190[2];
          BOOL v127 = __OFADD__(v192, 1);
          uint64_t v193 = v192 + 1;
          if (v127) {
            goto LABEL_120;
          }
          v190[2] = v193;
          swift_bridgeObjectRetain();
        }
        int64_t v140 = v177;
        unint64_t v144 = (unint64_t)v208;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v8 = v209;
        if (v144) {
          continue;
        }
        break;
      }
LABEL_45:
      int64_t v149 = v140 + 1;
      if (__OFADD__(v140, 1)) {
        goto LABEL_115;
      }
      if (v149 < v202)
      {
        unint64_t v150 = *(void *)(v201 + 8 * v149);
        ++v140;
        if (!v150)
        {
          int64_t v140 = v149 + 1;
          if (v149 + 1 >= v202) {
            goto LABEL_100;
          }
          unint64_t v150 = *(void *)(v201 + 8 * v140);
          if (!v150)
          {
            int64_t v140 = v149 + 2;
            if (v149 + 2 >= v202) {
              goto LABEL_100;
            }
            unint64_t v150 = *(void *)(v201 + 8 * v140);
            if (!v150)
            {
              int64_t v151 = v149 + 3;
              if (v151 >= v202) {
                goto LABEL_100;
              }
              unint64_t v150 = *(void *)(v201 + 8 * v151);
              if (!v150)
              {
                while (1)
                {
                  int64_t v140 = v151 + 1;
                  if (__OFADD__(v151, 1)) {
                    goto LABEL_118;
                  }
                  if (v140 >= v202) {
                    goto LABEL_100;
                  }
                  unint64_t v150 = *(void *)(v201 + 8 * v140);
                  ++v151;
                  if (v150) {
                    goto LABEL_58;
                  }
                }
              }
              int64_t v140 = v151;
            }
          }
        }
LABEL_58:
        unint64_t v144 = (v150 - 1) & v150;
        unint64_t v148 = __clz(__rbit64(v150)) + (v140 << 6);
        goto LABEL_59;
      }
LABEL_100:
      swift_release();
      uint64_t v194 = (uint64_t)v197;
      *uint64_t v197 = v196;
      swift_storeEnumTagMultiPayload();
      sub_1C12EDF20(a1);
      return sub_1C12EF7CC(v194, (uint64_t (*)(void))type metadata accessor for FormatJson);
    default:
      uint64_t v36 = *v34;
      swift_retain();
      uint64_t v37 = sub_1C12EF9A4(v36, (uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_release();
      if (!*(void *)(v37 + 16)) {
        goto LABEL_109;
      }
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v37;
      goto LABEL_105;
  }
}

uint64_t sub_1C12EF764(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12EF7CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C12EF82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatJson();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12EF890()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C12EF8C8()
{
  unint64_t result = qword_1EB87BD58;
  if (!qword_1EB87BD58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87BD58);
  }
  return result;
}

void sub_1C12EF908(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C12EF96C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12EF9A4(uint64_t a1, uint64_t a2)
{
  sub_1C12EF908(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v75 = (char *)v61 - v5;
  uint64_t v77 = sub_1C1518CDC();
  uint64_t v6 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77 - 8);
  uint64_t v72 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v67 = (char *)v61 - v9;
  sub_1C12F0064();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  Class v66 = (void *)((char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  Class v74 = (void *)((char *)v61 - v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (void *)((char *)v61 - v16);
  uint64_t v78 = MEMORY[0x1E4FBC868];
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v69 = a1 + 64;
  uint64_t v19 = -1 << *(unsigned char *)(a1 + 32);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1 << -(char)v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  v61[0] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v68 = (unint64_t)(63 - v19) >> 6;
  id v73 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v63 = v6;
  id v71 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v65 = a1;
  uint64_t v64 = a2;
  uint64_t v62 = v17;
  if (v21) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v25 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v25 < v68)
    {
      unint64_t v26 = *(void *)(v69 + 8 * v25);
      int64_t v27 = i + 1;
      if (v26) {
        goto LABEL_23;
      }
      int64_t v27 = i + 2;
      if (i + 2 >= v68) {
        goto LABEL_39;
      }
      unint64_t v26 = *(void *)(v69 + 8 * v27);
      if (v26) {
        goto LABEL_23;
      }
      int64_t v27 = i + 3;
      if (i + 3 >= v68) {
        goto LABEL_39;
      }
      unint64_t v26 = *(void *)(v69 + 8 * v27);
      if (v26) {
        goto LABEL_23;
      }
      int64_t v27 = i + 4;
      if (i + 4 >= v68) {
        goto LABEL_39;
      }
      unint64_t v26 = *(void *)(v69 + 8 * v27);
      if (v26)
      {
LABEL_23:
        unint64_t v21 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
        for (i = v27; ; unint64_t v24 = v23 | (i << 6))
        {
          uint64_t v29 = *(void *)(a1 + 56);
          uint64_t v30 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v24);
          uint64_t v32 = *v30;
          uint64_t v31 = v30[1];
          uint64_t v33 = type metadata accessor for FormatJson();
          sub_1C12EF764(v29 + *(void *)(*(void *)(v33 - 8) + 72) * v24, (uint64_t)v17 + *(int *)(v11 + 48), (uint64_t (*)(void))type metadata accessor for FormatJson);
          void *v17 = v32;
          v17[1] = v31;
          uint64_t v34 = v74;
          sub_1C12F00D0((uint64_t)v17, (uint64_t)v74, (uint64_t (*)(void))sub_1C12F0064);
          uint64_t v35 = (uint64_t)v34 + *(int *)(v11 + 48);
          swift_bridgeObjectRetain();
          uint64_t v36 = (uint64_t)v75;
          sub_1C12EDF20(a2);
          uint64_t v37 = v77;
          if ((*v73)(v36, 1, v77) == 1)
          {
            sub_1C12EF7CC((uint64_t)v34, (uint64_t (*)(void))sub_1C12F0064);
            uint64_t result = sub_1BFE3074C(v36, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            if (!v21) {
              goto LABEL_8;
            }
          }
          else
          {
            unint64_t v70 = v21;
            uint64_t v38 = *v71;
            uint64_t v39 = v11;
            unint64_t v40 = v67;
            (*v71)(v67, v36, v37);
            uint64_t v41 = v39;
            uint64_t v42 = v66;
            uint64_t v43 = (uint64_t)v66 + *(int *)(v39 + 48);
            uint64_t v44 = v37;
            uint64_t v46 = *v34;
            uint64_t v45 = v34[1];
            uint64_t v47 = v43;
            *Class v66 = v46;
            v42[1] = v45;
            sub_1C12F00D0(v35, v43, (uint64_t (*)(void))type metadata accessor for FormatJson);
            v38(v72, (uint64_t)v40, v44);
            uint64_t v48 = v38;
            uint64_t v49 = v78;
            unint64_t v50 = *(void *)(v78 + 16);
            if (*(void *)(v78 + 24) <= v50)
            {
              sub_1C1056C00(v50 + 1, 1);
              uint64_t v49 = v78;
            }
            sub_1C1520DBC();
            sub_1C151E77C();
            uint64_t result = sub_1C1520E0C();
            uint64_t v51 = v49 + 64;
            uint64_t v52 = -1 << *(unsigned char *)(v49 + 32);
            unint64_t v53 = result & ~v52;
            unint64_t v54 = v53 >> 6;
            uint64_t v11 = v41;
            unint64_t v21 = v70;
            if (((-1 << v53) & ~*(void *)(v49 + 64 + 8 * (v53 >> 6))) != 0)
            {
              unint64_t v55 = __clz(__rbit64((-1 << v53) & ~*(void *)(v49 + 64 + 8 * (v53 >> 6)))) | v53 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v56 = 0;
              unint64_t v57 = (unint64_t)(63 - v52) >> 6;
              do
              {
                if (++v54 == v57 && (v56 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_40;
                }
                BOOL v58 = v54 == v57;
                if (v54 == v57) {
                  unint64_t v54 = 0;
                }
                v56 |= v58;
                uint64_t v59 = *(void *)(v51 + 8 * v54);
              }
              while (v59 == -1);
              unint64_t v55 = __clz(__rbit64(~v59)) + (v54 << 6);
            }
            *(void *)(v51 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
            uint64_t v60 = (void *)(*(void *)(v49 + 48) + 16 * v55);
            *uint64_t v60 = v46;
            v60[1] = v45;
            v48((char *)(*(void *)(v49 + 56) + *(void *)(v63 + 72) * v55), (uint64_t)v72, v77);
            ++*(void *)(v49 + 16);
            uint64_t result = sub_1C12EF7CC(v47, (uint64_t (*)(void))type metadata accessor for FormatJson);
            a1 = v65;
            a2 = v64;
            uint64_t v17 = v62;
            if (!v21) {
              goto LABEL_8;
            }
          }
LABEL_7:
          unint64_t v23 = __clz(__rbit64(v21));
          v21 &= v21 - 1;
        }
      }
      int64_t v28 = i + 5;
      if (i + 5 < v68)
      {
        unint64_t v26 = *(void *)(v69 + 8 * v28);
        if (v26)
        {
          int64_t v27 = i + 5;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v27 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_41;
          }
          if (v27 >= v68) {
            break;
          }
          unint64_t v26 = *(void *)(v69 + 8 * v27);
          ++v28;
          if (v26) {
            goto LABEL_23;
          }
        }
      }
    }
LABEL_39:
    sub_1BFEFB808();
    return v78;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1C12F0064()
{
  if (!qword_1EB870498)
  {
    type metadata accessor for FormatJson();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB870498);
    }
  }
}

uint64_t sub_1C12F00D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C12F0138(uint64_t a1, uint64_t a2)
{
  sub_1C12EF908(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v26 - v6;
  uint64_t v8 = sub_1C1518CDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v32 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v31 = (char *)v26 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  _OWORD v26[2] = v2;
  uint64_t v14 = *(void *)(type metadata accessor for FormatJson() - 8);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v28 = v9;
  uint64_t v17 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v18 = *(void *)(v14 + 72);
  v26[1] = a1;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v29 = v8;
  uint64_t v30 = a2;
  uint64_t v27 = v18;
  do
  {
    sub_1C12EDF20(a2);
    if ((*v16)(v7, 1, v8) == 1)
    {
      sub_1BFE3074C((uint64_t)v7, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    }
    else
    {
      uint64_t v20 = *v17;
      unint64_t v21 = v31;
      (*v17)(v31, v7, v8);
      v20(v32, v21, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1C0EE1ED4(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v23 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      if (v23 >= v22 >> 1) {
        unint64_t v19 = sub_1C0EE1ED4(v22 > 1, v23 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v23 + 1;
      unint64_t v24 = v19
          + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))
          + *(void *)(v28 + 72) * v23;
      uint64_t v8 = v29;
      v20((char *)v24, v32, v29);
      a2 = v30;
      uint64_t v18 = v27;
    }
    v15 += v18;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v19;
}

Swift::Void __swiftcall ArticleThumbnailView.prepareForReuse(identifier:)(Swift::String_optional identifier)
{
  uint64_t v2 = v1;
  *(Swift::String_optional *)(v1 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier) = identifier;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView);
  sub_1C151CD6C();
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
  id v5 = objc_msgSend(v4, sel_subviews);
  sub_1C0063B40();
  unint64_t v6 = sub_1C151EBCC();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x1C18C7CB0](i, v6);
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    uint64_t v10 = v9;
    objc_msgSend(v9, sel_removeFromSuperview);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setHidden_, 1);
  objc_msgSend(v3, sel_setHidden_, 1);
  uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
  *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = 0;

  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) == 1)
  {
    sub_1C151A3AC();
    sub_1C151A39C();
    sub_1C12F1CE4(&qword_1EA1ADFF0);
    sub_1C151A38C();
    swift_release();
    *(unsigned char *)(v2 + v12) = 0;
  }
}

uint64_t type metadata accessor for ArticleThumbnailView()
{
  return self;
}

void ArticleThumbnailView.asStatic(identifier:block:)(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v4 = v3;
  id v5 = (void *)(v3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (v6)
  {
    BOOL v8 = *v5 == a1 && v6 == a2;
    if (v8 || (sub_1C1520A9C() & 1) != 0)
    {
      unint64_t v19 = a3;
      id v9 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView);
      sub_1C151CD6C();
      uint64_t v10 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
      id v11 = objc_msgSend(v10, sel_subviews);
      sub_1C0063B40();
      unint64_t v12 = sub_1C151EBCC();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v13) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v13)
        {
LABEL_9:
          if (v13 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v13; ++i)
          {
            if ((v12 & 0xC000000000000001) != 0) {
              id v15 = (id)MEMORY[0x1C18C7CB0](i, v12);
            }
            else {
              id v15 = *(id *)(v12 + 8 * i + 32);
            }
            uint64_t v16 = v15;
            objc_msgSend(v15, sel_removeFromSuperview);
          }
        }
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setHidden_, 1);
      objc_msgSend(v9, sel_setHidden_, 0);
      uint64_t v17 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
      *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = 0;

      v19(v9);
      uint64_t v18 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
      if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) == 1)
      {
        sub_1C151A3AC();
        sub_1C151A39C();
        sub_1C12F1CE4(&qword_1EA1ADFF0);
        sub_1C151A38C();
        swift_release();
        *(unsigned char *)(v4 + v18) = 0;
      }
    }
  }
}

void ArticleThumbnailView.asDynamic<A>(identifier:dynamicView:block:)(uint64_t a1, uint64_t a2, id a3, void (*a4)(id))
{
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (v6)
  {
    uint64_t v7 = v4;
    BOOL v9 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier) == a1 && v6 == a2;
    if (v9 || (sub_1C1520A9C() & 1) != 0)
    {
      id v10 = objc_msgSend(a3, sel_superview);
      id v11 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
      if (v10)
      {
        unint64_t v12 = v10;
        sub_1C0063B40();
        id v13 = v11;
        id v14 = v12;
        LOBYTE(v12) = sub_1C151FB6C();

        if (v12)
        {
LABEL_20:
          a4(a3);
          sub_1C12F0F48();
          return;
        }
      }
      id v15 = objc_msgSend(v11, sel_subviews);
      sub_1C0063B40();
      unint64_t v16 = sub_1C151EBCC();

      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v17)
        {
LABEL_11:
          if (v17 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v17; ++i)
          {
            if ((v16 & 0xC000000000000001) != 0) {
              id v19 = (id)MEMORY[0x1C18C7CB0](i, v16);
            }
            else {
              id v19 = *(id *)(v16 + 8 * i + 32);
            }
            uint64_t v20 = v19;
            objc_msgSend(v19, sel_removeFromSuperview);
          }
        }
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_addSubview_, a3);
      objc_msgSend(v11, sel_setHidden_, 0);
      objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView), sel_setHidden_, 1);
      unint64_t v21 = *(void **)(v7 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
      *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = a3;

      id v22 = a3;
      goto LABEL_20;
    }
  }
}

id ArticleThumbnailView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *ArticleThumbnailView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView;
  id v11 = objc_allocWithZone((Class)sub_1C151CD7C());
  unint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView;
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v12[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView] = 0;
  v12[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] = 0;
  id v14 = &v12[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier];
  *(void *)id v14 = 0;
  *((void *)v14 + 1) = 0;

  v19.receiver = v12;
  v19.super_class = ObjectType;
  id v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setAccessibilityIgnoresInvertColors_, 1);
  unint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView];
  objc_msgSend(v15, sel_addSubview_, v16);
  objc_msgSend(v15, sel_addSubview_, *(void *)&v15[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView]);
  id v17 = v16;
  objc_msgSend(v17, sel_setHidden_, 1);

  return v15;
}

id ArticleThumbnailView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

Swift::Void __swiftcall ArticleThumbnailView.layoutSubviews()()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);
}

Swift::Void __swiftcall ArticleThumbnailView.didMoveToSuperview()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_didMoveToSuperview);
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView], sel_isHidden) & 1) == 0)sub_1C12F0F48(); {
}
  }

uint64_t sub_1C12F0F48()
{
  uint64_t result = swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) & 1) == 0)
  {
    sub_1C151A3AC();
    sub_1C151A39C();
    sub_1C12F1CE4(&qword_1EA1ADFF0);
    sub_1C151A37C();
    swift_release();
    *(unsigned char *)(v0 + v2) = 1;
    if (qword_1EB85E798 != -1) {
      swift_once();
    }
    sub_1C12F1CE4(&qword_1EB85E5F8);
    uint64_t result = sub_1C1516FBC();
    if ((v3 & 1) == 0 && *(unsigned char *)(v0 + v2) == 1)
    {
      sub_1C151A39C();
      sub_1C151A38C();
      uint64_t result = swift_release();
      *(unsigned char *)(v0 + v2) = 0;
    }
  }
  return result;
}

Swift::Void __swiftcall ArticleThumbnailView.removeFromSuperview()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_removeFromSuperview);
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView], sel_isHidden) & 1) == 0)
  {
    uint64_t v1 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
    if (v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] == 1)
    {
      sub_1C151A3AC();
      sub_1C151A39C();
      sub_1C12F1CE4(&qword_1EA1ADFF0);
      sub_1C151A38C();
      swift_release();
      v0[v1] = 0;
    }
  }
}

id ArticleThumbnailView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ArticleThumbnailView.motionManager(_:didUpdateMotionData:)()
{
}

void ArticleThumbnailView.motionManager(_:motionEnabled:)()
{
}

void sub_1C12F12E0()
{
}

void sub_1C12F12E8()
{
}

void sub_1C12F12F4()
{
  sub_1C12F1CE4(&qword_1EA1AE000);
  JUMPOUT(0x1C18C4650);
}

void sub_1C12F134C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, _OWORD *a8)
{
  uint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (v9)
  {
    BOOL v15 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier) == a1 && v9 == a2;
    if (v15 || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t v28 = a7;
      uint64_t v29 = a8;
      unint64_t v16 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView);
      sub_1C151CD6C();
      id v17 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
      id v18 = objc_msgSend(v17, sel_subviews);
      sub_1C0063B40();
      unint64_t v19 = sub_1C151EBCC();

      unint64_t v26 = a5;
      uint64_t v27 = a6;
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v20)
        {
LABEL_9:
          if (v20 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v20; ++i)
          {
            if ((v19 & 0xC000000000000001) != 0) {
              id v22 = (id)MEMORY[0x1C18C7CB0](i, v19);
            }
            else {
              id v22 = *(id *)(v19 + 8 * i + 32);
            }
            unint64_t v23 = v22;
            objc_msgSend(v22, sel_removeFromSuperview, v26, v27, v28, v29);
          }
        }
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setHidden_, 1);
      objc_msgSend(v16, sel_setHidden_, 0);
      unint64_t v24 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
      *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = 0;

      sub_1C0357AA0((uint64_t *)v16, a4, v26, v27, v28, v29);
      uint64_t v25 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
      if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion) == 1)
      {
        sub_1C151A3AC();
        sub_1C151A39C();
        sub_1C12F1CE4(&qword_1EA1ADFF0);
        sub_1C151A38C();
        swift_release();
        *(unsigned char *)(a3 + v25) = 0;
      }
    }
  }
}

void sub_1C12F1584(uint64_t a1, uint64_t a2, id a3, uint64_t a4, void *a5, uint64_t a6, int a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = (void *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier);
  uint64_t v14 = *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier + 8);
  if (v14)
  {
    BOOL v20 = *v13 == a1 && v14 == a2;
    if (v20 || (sub_1C1520A9C() & 1) != 0)
    {
      uint64_t v34 = a6;
      id v21 = objc_msgSend(a3, sel_superview);
      id v22 = *(void **)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
      if (v21)
      {
        unint64_t v23 = v21;
        sub_1C0063B40();
        id v24 = v22;
        id v25 = v23;
        LOBYTE(v23) = sub_1C151FB6C();

        if (v23) {
          goto LABEL_19;
        }
      }
      id v26 = objc_msgSend(v22, sel_subviews);
      sub_1C0063B40();
      unint64_t v27 = sub_1C151EBCC();

      if (v27 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        if (v28) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v28)
        {
LABEL_11:
          if (v28 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v28; ++i)
          {
            if ((v27 & 0xC000000000000001) != 0) {
              id v30 = (id)MEMORY[0x1C18C7CB0](i, v27);
            }
            else {
              id v30 = *(id *)(v27 + 8 * i + 32);
            }
            uint64_t v31 = v30;
            objc_msgSend(v30, sel_removeFromSuperview);
          }
        }
      }
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_addSubview_, a3);
      objc_msgSend(v22, sel_setHidden_, 0);
      objc_msgSend(*(id *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView), sel_setHidden_, 1);
      uint64_t v32 = *(void **)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView);
      *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView) = a3;

      id v33 = a3;
LABEL_19:
      sub_1C03580F8(a3, a5, v34, a7, a8, a9, a10, a11, a12);
      sub_1C12F0F48();
    }
  }
}

void _s8NewsFeed20ArticleThumbnailViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_staticContentView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)sub_1C151CD7C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicView] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] = 0;
  char v3 = &v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_identifier];
  *char v3 = 0;
  v3[1] = 0;

  sub_1C152040C();
  __break(1u);
}

void sub_1C12F18D4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView);
  if (objc_msgSend(v1, sel_isHidden)) {
    return;
  }
  id v2 = objc_msgSend(v1, sel_subviews);
  sub_1C0063B40();
  unint64_t v3 = sub_1C151EBCC();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x1C18C7CB0](i, v3);
        }
        else {
          id v6 = *(id *)(v3 + 8 * i + 32);
        }
        uint64_t v7 = v6;
        sub_1C151B24C();
        if (swift_dynamicCastClass()) {
          sub_1C151B21C();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1C12F1A48()
{
  uint64_t v1 = v0;
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v12);
  if (qword_1EB85E6C0 != -1) {
    swift_once();
  }
  if (*(double *)&qword_1EB93C290 < Width)
  {
    unint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView];
    if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_dynamicContentView], sel_isHidden, *(double *)&qword_1EB93C290))return; {
    id v5 = objc_msgSend(v3, sel_subviews);
    }
    sub_1C0063B40();
    unint64_t v6 = sub_1C151EBCC();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v7)
      {
LABEL_13:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v9 = (id)MEMORY[0x1C18C7CB0](i, v6);
          }
          else {
            id v9 = *(id *)(v6 + 8 * i + 32);
          }
          uint64_t v10 = v9;
          sub_1C151B24C();
          if (swift_dynamicCastClass()) {
            sub_1C151B23C();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion;
  if (v0[OBJC_IVAR____TtC8NewsFeed20ArticleThumbnailView_observingMotion] == 1)
  {
    sub_1C151A3AC();
    sub_1C151A39C();
    sub_1C12F1CE4(&qword_1EA1ADFF0);
    sub_1C151A38C();
    swift_release();
    v0[v4] = 0;
  }
  sub_1C12F18D4();
}

uint64_t sub_1C12F1CB0()
{
  return sub_1C12F1CE4(&qword_1EA1ADFF8);
}

uint64_t sub_1C12F1CE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ArticleThumbnailView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StubOfflineProvider.__allocating_init(offlineReason:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

id sub_1C12F1D58(uint64_t a1)
{
  return objc_msgSend(*v1, sel_addObserver_, a1);
}

id sub_1C12F1D6C(uint64_t a1)
{
  return objc_msgSend(*v1, sel_removeObserver_, a1);
}

id sub_1C12F1D80()
{
  return objc_msgSend(*v0, sel_offlineReason);
}

uint64_t StubOfflineProvider.offlineReason.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t StubOfflineProvider.offlineReason.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*StubOfflineProvider.offlineReason.modify())()
{
  return j__swift_endAccess;
}

uint64_t StubOfflineProvider.deinit()
{
  return v0;
}

uint64_t StubOfflineProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of OfflineProviding.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for StubOfflineProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StubOfflineProvider);
}

uint64_t dispatch thunk of StubOfflineProvider.__allocating_init(offlineReason:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatGroupNodeLayoutAttributes.flipRightToLeft(bounds:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v12 = *(void *)(v1 + 48);
  char v11 = *(unsigned char *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFF305B8(&qword_1EB88A8A0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C151798C();
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  swift_retain();
  sub_1BFE6FA30(v4);
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FormatGroupNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 16);
}

unint64_t FormatGroupNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 24);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatGroupNodeLayoutAttributes.isUserInteractionEnabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*FormatGroupNodeLayoutAttributes.isUserInteractionEnabled.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatGroupNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatGroupNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 48);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatGroupNodeLayoutAttributes.maskLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v10 = *a2;
  uint64_t v11 = *a4;
  uint64_t v12 = *a7;
  char v13 = *((unsigned char *)a7 + 8);
  *(void *)a9 = result;
  *(void *)(a9 + 8) = v10;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = v11;
  *(unsigned char *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = v12;
  *(unsigned char *)(a9 + 56) = v13;
  *(void *)(a9 + 64) = a8;
  *(void *)(a9 + 72) = a10;
  return result;
}

double FormatGroupNodeLayoutAttributes.frame.getter()
{
  return *(double *)(*(void *)v0 + 16);
}

unint64_t sub_1C12F20F4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E697A69736572;
      break;
    case 2:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 3:
      unint64_t result = 0x696C696269736976;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x656C797473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C12F2208()
{
  return sub_1C12F20F4(*v0);
}

uint64_t sub_1C12F2210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C12F3598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C12F2238(uint64_t a1)
{
  unint64_t v2 = sub_1C12F2744();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12F2274(uint64_t a1)
{
  unint64_t v2 = sub_1C12F2744();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatGroupNodeLayoutAttributes.encode(to:)(void *a1)
{
  sub_1C12F2F88(0, &qword_1EA1AE008, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v27 = v1[2];
  uint64_t v28 = v8;
  uint64_t v26 = v1[3];
  int v31 = *((unsigned __int8 *)v1 + 32);
  uint64_t v10 = v1[5];
  uint64_t v24 = v1[6];
  int v25 = *((unsigned __int8 *)v1 + 56);
  uint64_t v11 = v1[8];
  uint64_t v12 = v1[9];
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1;
  uint64_t v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_1C12F2744();
  sub_1C1520F0C();
  uint64_t v29 = v9;
  char v32 = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFF305B8(&qword_1EB88A8A8, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v17 = v26;
    char v18 = v31;
    uint64_t v29 = v28;
    char v32 = 1;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v29) = 2;
    sub_1C15207FC();
    uint64_t v29 = v17;
    char v32 = 3;
    sub_1C009DA10();
    sub_1C152080C();
    if ((v18 & 1) == 0)
    {
      LOBYTE(v29) = 4;
      char v32 = 0;
      sub_1C12F2798();
      sub_1C1520BAC();
    }
    uint64_t v29 = v22;
    char v32 = 5;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFF305B8(&qword_1EA198B58, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    uint64_t v20 = v23;
    uint64_t v29 = v24;
    char v30 = v25;
    char v32 = 6;
    sub_1BFDD5084();
    sub_1C152078C();
    uint64_t v29 = v20;
    char v32 = 7;
    type metadata accessor for FormatGroupNodeMaskLayoutAttributes();
    sub_1BFF305B8(&qword_1EA1AE020, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskLayoutAttributes);
    sub_1C152078C();
    uint64_t v29 = v12;
    char v32 = 8;
    type metadata accessor for FormatGroupNodeStyle();
    sub_1BFF305B8(&qword_1EB866A88, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v16);
}

unint64_t sub_1C12F2744()
{
  unint64_t result = qword_1EA1AE010;
  if (!qword_1EA1AE010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE010);
  }
  return result;
}

unint64_t sub_1C12F2798()
{
  unint64_t result = qword_1EA1AE018;
  if (!qword_1EA1AE018)
  {
    sub_1C12F2F88(255, &qword_1EA1AE008, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE018);
  }
  return result;
}

uint64_t FormatGroupNodeLayoutAttributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C12F2F88(0, &qword_1EA1AE028, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12F2744();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  type metadata accessor for FormatLayoutAttributes();
  char v32 = 0;
  sub_1BFF305B8(&qword_1EB88A8B0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C15206EC();
  unint64_t v11 = v28;
  char v32 = 1;
  sub_1C0260F28();
  swift_retain();
  sub_1C152065C();
  unint64_t v12 = v28;
  LOBYTE(v28) = 2;
  swift_retain();
  uint64_t v26 = sub_1C15206DC();
  char v32 = 3;
  sub_1BFE3D540();
  sub_1C15206EC();
  unint64_t v13 = v28;
  LOBYTE(v28) = 4;
  unint64_t v25 = v13;
  sub_1BFE6FA30(v13);
  if (sub_1C152071C())
  {
    char v32 = 4;
    sub_1C15206EC();
    int v14 = v31;
  }
  else
  {
    int v14 = 1;
  }
  int v30 = v14;
  type metadata accessor for FormatContextLayoutOptions();
  char v32 = 5;
  sub_1BFF305B8(&qword_1EA198B88, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
  sub_1C15206EC();
  unint64_t v15 = v28;
  char v32 = 6;
  sub_1BFE3CF9C();
  unint64_t v27 = v15;
  swift_retain();
  sub_1C152065C();
  unint64_t v24 = v28;
  int v23 = v29;
  type metadata accessor for FormatGroupNodeMaskLayoutAttributes();
  char v32 = 7;
  sub_1BFF305B8(&qword_1EA1AE030, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskLayoutAttributes);
  sub_1C152065C();
  unint64_t v16 = v28;
  v21[1] = type metadata accessor for FormatGroupNodeStyle();
  char v32 = 8;
  sub_1BFF305B8(&qword_1EB8896C0, (void (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle);
  unint64_t v22 = v16;
  swift_retain();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v17 = v28;
  swift_retain();
  swift_retain();
  unint64_t v18 = v25;
  sub_1BFE6FA30(v25);
  swift_retain();
  sub_1BFF0056C(v18);
  swift_release();
  swift_release();
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  unint64_t v19 = v27;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v18;
  *(unsigned char *)(a2 + 32) = v30;
  unint64_t v20 = v24;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v20;
  *(unsigned char *)(a2 + 56) = v23;
  *(void *)(a2 + 64) = v22;
  *(void *)(a2 + 72) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_release();
  swift_release();
  sub_1BFF0056C(v18);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C12F2F88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C12F2744();
    unint64_t v7 = a3(a1, &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C12F2FF0()
{
  unint64_t result = qword_1EA1AE038;
  if (!qword_1EA1AE038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE038);
  }
  return result;
}

uint64_t sub_1C12F3044()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C12F3084()
{
  unint64_t result = qword_1EA1AE040;
  if (!qword_1EA1AE040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE040);
  }
  return result;
}

uint64_t sub_1C12F30D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupNodeLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1C12F30F0(void *a1)
{
  return FormatGroupNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C12F310C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 32);
  return result;
}

unsigned char *sub_1C12F3118(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 32) = *result;
  return result;
}

uint64_t destroy for FormatGroupNodeLayoutAttributes(uint64_t a1)
{
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(a1 + 24));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FormatGroupNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_retain();
  sub_1BFE6FA30(v5);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatGroupNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  sub_1BFE6FA30(v4);
  unint64_t v5 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  sub_1BFF0056C(v5);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  unint64_t v4 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1BFF0056C(v4);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupNodeLayoutAttributes()
{
  return &type metadata for FormatGroupNodeLayoutAttributes;
}

unsigned char *storeEnumTagSinglePayload for FormatGroupNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12F3458);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatGroupNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C12F3494()
{
  unint64_t result = qword_1EA1AE048;
  if (!qword_1EA1AE048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE048);
  }
  return result;
}

unint64_t sub_1C12F34EC()
{
  unint64_t result = qword_1EA1AE050;
  if (!qword_1EA1AE050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE050);
  }
  return result;
}

unint64_t sub_1C12F3544()
{
  unint64_t result = qword_1EA1AE058;
  if (!qword_1EA1AE058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE058);
  }
  return result;
}

uint64_t sub_1C12F3598(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C1608CE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1629430 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t FormatSponsoredBannerSizing.filled.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1BFF35EA4(v2);
}

unint64_t FormatSponsoredBannerSizing.unfilled.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  *a1 = v2;
  return sub_1C05D88D4(v2);
}

uint64_t sub_1C12F3930@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatSponsoredBannerSizing.init(from:)(a1, a2);
}

uint64_t sub_1C12F3948(void *a1)
{
  return FormatSponsoredBannerSizing.encode(to:)(a1);
}

uint64_t sub_1C12F3964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  char v32 = a4;
  uint64_t v7 = sub_1C151D6DC();
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *v4;
  unint64_t v14 = v4[1];
  uint64_t v15 = a1;
  uint64_t result = sub_1C098DFF8(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v12);
  if (!v5)
  {
    uint64_t v17 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v9, &v12[*(int *)(v10 + 20)], v7);
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v9, v7);
    uint64_t v19 = v7;
    if (v18 == *MEMORY[0x1E4F7ACE0])
    {
      unint64_t v35 = v13;
      sub_1BFF35EA4(v13);
      sub_1BFF30600(v15, v33, v34);
      sub_1BFF322A8(v13);
      sub_1C12F4120((uint64_t)v12);
      unint64_t v20 = v9;
    }
    else
    {
      int v30 = v9;
      if (v18 != *MEMORY[0x1E4F7ACD8])
      {
        uint64_t result = sub_1C1520A8C();
        __break(1u);
        return result;
      }
      unint64_t v21 = v14;
      BOOL v22 = (~v14 & 0xF000000000000007) == 0;
      int v23 = v32;
      uint64_t v24 = v33;
      uint64_t v25 = v34;
      if (v22)
      {
        sub_1C12F4120((uint64_t)v12);
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = 0x3FF0000000000000;
        *int v23 = v26;
        uint64_t v27 = *MEMORY[0x1E4FABA08];
        sub_1BFF35CA0();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v23, v27, v28);
      }
      else
      {
        unint64_t v35 = v21;
        sub_1BFF35EA4(v21);
        sub_1BFF30600(v15, v24, v25);
        sub_1C12F4120((uint64_t)v12);
        sub_1C05D88E8(v21);
      }
      unint64_t v20 = v30;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v19);
  }
  return result;
}

BOOL _s8NewsFeed27FormatSponsoredBannerSizingV2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  unint64_t v8 = v2;
  if ((static FormatSize.== infix(_:_:)(&v8, &v7) & 1) == 0) {
    return 0;
  }
  if ((~v3 & 0xF000000000000007) == 0)
  {
    if ((~v4 & 0xF000000000000007) == 0) {
      return 1;
    }
    goto LABEL_7;
  }
  unint64_t v8 = v3;
  if ((~v4 & 0xF000000000000007) == 0)
  {
    sub_1BFF35EA4(v3);
    sub_1BFF35EA4(v3);
    sub_1BFF322A8(v3);
LABEL_7:
    sub_1C05D88D4(v4);
    sub_1C05D88E8(v3);
    sub_1C05D88E8(v4);
    return 0;
  }
  unint64_t v7 = v4;
  sub_1BFF35EA4(v3);
  sub_1BFF35EA4(v3);
  char v5 = static FormatSize.== infix(_:_:)(&v8, &v7);
  sub_1BFF322A8(v8);
  sub_1C05D88E8(v3);
  return (v5 & 1) != 0;
}

unint64_t sub_1C12F3D30(uint64_t a1)
{
  unint64_t result = sub_1C12F3D58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12F3D58()
{
  unint64_t result = qword_1EA1AE060;
  if (!qword_1EA1AE060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE060);
  }
  return result;
}

unint64_t sub_1C12F3DAC(void *a1)
{
  a1[1] = sub_1C08B0EB0();
  a1[2] = sub_1C08F0AAC();
  unint64_t result = sub_1C12F3DE4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12F3DE4()
{
  unint64_t result = qword_1EA1AE068;
  if (!qword_1EA1AE068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE068);
  }
  return result;
}

unint64_t destroy for FormatSponsoredBannerSizing(unint64_t *a1)
{
  sub_1BFF322A8(*a1);
  unint64_t result = a1[1];
  if ((~result & 0xF000000000000007) != 0)
  {
    return sub_1BFF322A8(result);
  }
  return result;
}

unint64_t *_s8NewsFeed27FormatSponsoredBannerSizingVwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF35EA4(*a2);
  *a1 = v4;
  unint64_t v5 = a2[1];
  if ((~v5 & 0xF000000000000007) != 0) {
    sub_1BFF35EA4(v5);
  }
  a1[1] = v5;
  return a1;
}

unint64_t *assignWithCopy for FormatSponsoredBannerSizing(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1BFF35EA4(*a2);
  unint64_t v5 = *a1;
  *a1 = v4;
  sub_1BFF322A8(v5);
  unsigned int v6 = a1 + 1;
  unint64_t v7 = a2[1];
  unint64_t v8 = v7 & 0xF000000000000007;
  if ((~a1[1] & 0xF000000000000007) != 0)
  {
    if (v8 == 0xF000000000000007)
    {
      sub_1C12F3F98((uint64_t)(a1 + 1));
      *unsigned int v6 = a2[1];
    }
    else
    {
      sub_1BFF35EA4(a2[1]);
      unint64_t v9 = *v6;
      *unsigned int v6 = v7;
      sub_1BFF322A8(v9);
    }
  }
  else
  {
    if (v8 != 0xF000000000000007) {
      sub_1BFF35EA4(a2[1]);
    }
    *unsigned int v6 = v7;
  }
  return a1;
}

uint64_t sub_1C12F3F98(uint64_t a1)
{
  return a1;
}

unint64_t *assignWithTake for FormatSponsoredBannerSizing(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  *a1 = *a2;
  sub_1BFF322A8(v4);
  unsigned int v6 = a1 + 1;
  unint64_t v5 = a1[1];
  unint64_t v7 = a2[1];
  if ((~v5 & 0xF000000000000007) != 0)
  {
    if ((~v7 & 0xF000000000000007) != 0)
    {
      *unsigned int v6 = v7;
      sub_1BFF322A8(v5);
      return a1;
    }
    sub_1C12F3F98((uint64_t)(a1 + 1));
  }
  *unsigned int v6 = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSponsoredBannerSizing(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x6A && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 106);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x69) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatSponsoredBannerSizing(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x69)
  {
    *(void *)unint64_t result = a2 - 106;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x6A) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6A) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSponsoredBannerSizing()
{
  return &type metadata for FormatSponsoredBannerSizing;
}

uint64_t sub_1C12F4120(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedSponsorshipBannerAd();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12F417C()
{
  return swift_deallocObject();
}

uint64_t FeedGroupDebugFormat.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFDBB6C4(v1 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content, a1);
}

uint64_t FeedGroupDebugFormat.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFD60E9C(v0 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content);
  return v0;
}

uint64_t sub_1C12F4240()
{
  return type metadata accessor for FeedGroupDebugFormat();
}

uint64_t method lookup function for FeedGroupDebugFormat(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupDebugFormat);
}

uint64_t FeedGroupKnobsRepool.repooling(cursor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupKnobsRepool.repooling(context:)(a1 + *(void *)(*(void *)a1 + 176), a2);
}

uint64_t FeedGroupKnobsRepool.repooling(context:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v34[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v2;
  if (*v2)
  {
    uint64_t v5 = result;
    unint64_t v6 = *(void *)(v4 + 24);
    if (v6 >> 62) {
      goto LABEL_28;
    }
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v7)
    {
      uint64_t v24 = a2;
      uint64_t v5 = *(void *)(v5 + *(int *)(type metadata accessor for FeedContext() + 40));
      int v25 = *(unsigned __int8 *)(v4 + 16);
      unint64_t v29 = v6 & 0xC000000000000001;
      unint64_t v26 = v6 + 32;
      swift_bridgeObjectRetain_n();
      uint64_t v33 = v5;
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
      uint64_t v27 = v7;
      unint64_t v28 = v6;
      while (1)
      {
        if (v29)
        {
          a2 = MEMORY[0x1C18C7CB0](v4, v6);
          BOOL v8 = __OFADD__(v4++, 1);
          if (v8) {
            break;
          }
          goto LABEL_11;
        }
        a2 = *(void *)(v26 + 8 * v4);
        swift_retain();
        BOOL v8 = __OFADD__(v4++, 1);
        if (v8) {
          break;
        }
LABEL_11:
        if (qword_1EB87F148 != -1) {
          swift_once();
        }
        uint64_t v5 = *(void *)(a2 + 24);
        v34[0] = *(void *)(a2 + 16);
        v34[1] = v5;
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1BFEF53C0(v34);
        swift_bridgeObjectRelease();
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10)
        {
          uint64_t v31 = a2;
          uint64_t v32 = v4;
          uint64_t v30 = v9;
          uint64_t v11 = (uint64_t *)(v9 + 64);
          while (1)
          {
            uint64_t v5 = *(v11 - 1);
            uint64_t v12 = *v11;
            char v13 = *(unsigned char *)(v5 + 32);
            unsigned int v14 = v13 & 0x3F;
            unint64_t v15 = (unint64_t)((1 << v13) + 63) >> 6;
            size_t v16 = 8 * v15;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v14 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)&v24 - ((v16 + 15) & 0x3FFFFFFFFFFFFFF0), v16);
              uint64_t v18 = sub_1BFEFB09C((uint64_t)&v24 - ((v16 + 15) & 0x3FFFFFFFFFFFFFF0), v15, v5, v33);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v19 = (void *)swift_slowAlloc();
              bzero(v19, v16);
              uint64_t v18 = sub_1BFEFB09C((uint64_t)v19, v15, v5, v33);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v19, -1, -1);
            }
            char v20 = sub_1BFEFAE14(v18, v5);
            swift_release();
            if (v20) {
              break;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_16:
            v11 += 5;
            if (!--v10) {
              goto LABEL_24;
            }
          }
          char v21 = sub_1BFEFB810(v33, v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0) {
            goto LABEL_16;
          }
          int v25 = *(unsigned __int8 *)(v31 + 32);
LABEL_24:
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v7 = v27;
          unint64_t v6 = v28;
          uint64_t v4 = v32;
          if (v32 == v27)
          {
LABEL_25:
            swift_bridgeObjectRelease();
            unint64_t result = swift_bridgeObjectRelease_n();
            a2 = v24;
            char v22 = v25;
            goto LABEL_30;
          }
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          if (v4 == v7) {
            goto LABEL_25;
          }
        }
      }
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C15204BC();
      unint64_t result = swift_bridgeObjectRelease();
    }
    char v22 = *(unsigned char *)(v4 + 16);
LABEL_30:
    char v23 = v22 & 1;
  }
  else
  {
    char v23 = 2;
  }
  *(unsigned char *)a2 = v23;
  return result;
}

uint64_t static FeedGroupKnobsRepool.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      if (*(unsigned __int8 *)(v2 + 16) == *(unsigned __int8 *)(v3 + 16))
      {
        uint64_t v4 = *(void *)(v2 + 24);
        uint64_t v5 = *(void *)(v3 + 24);
        swift_retain();
        swift_retain();
        LOBYTE(v4) = sub_1C00F369C(v4, v5);
        swift_release();
        swift_release();
        if (v4) {
          return 1;
        }
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1C12F473C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x676E697A65657266 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C12F47C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C12F473C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C12F47F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C12F484C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FeedGroupKnobsRepool.encode(to:)(void *a1)
{
  type metadata accessor for FeedGroupKnobsRepool.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_1C152083C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v13 - v5;
  uint64_t v7 = *v1;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1C1520F0C();
  v13[3] = v7;
  sub_1BFD33CDC();
  sub_1BFD33D60(&qword_1EB865360);
  sub_1C152078C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v11);
}

uint64_t sub_1C12F4A40(void *a1)
{
  return FeedGroupKnobsRepool.encode(to:)(a1);
}

void *sub_1C12F4A5C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1C12F4A98(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

unsigned char *sub_1C12F4ACC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12F4B68);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12F4B90()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C12F4BAC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = (unint64_t *)result;
  uint64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = a4 + 56;
    uint64_t v9 = 1 << *(unsigned char *)(a4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(a4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = a3 + 56;
    while (1)
    {
LABEL_6:
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v7 << 6);
      }
      else
      {
        int64_t v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v16 >= v12) {
          goto LABEL_60;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        ++v7;
        if (!v17)
        {
          int64_t v7 = v16 + 1;
          if (v16 + 1 >= v12) {
            goto LABEL_60;
          }
          unint64_t v17 = *(void *)(v8 + 8 * v7);
          if (!v17)
          {
            int64_t v7 = v16 + 2;
            if (v16 + 2 >= v12) {
              goto LABEL_60;
            }
            unint64_t v17 = *(void *)(v8 + 8 * v7);
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v12)
              {
LABEL_60:
                swift_retain();
                return sub_1C139A410(v45, a2, v6, a3);
              }
              unint64_t v17 = *(void *)(v8 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v7 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    break;
                  }
                  if (v7 >= v12) {
                    goto LABEL_60;
                  }
                  unint64_t v17 = *(void *)(v8 + 8 * v7);
                  ++v18;
                  if (v17) {
                    goto LABEL_21;
                  }
                }
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
              int64_t v7 = v18;
            }
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
      }
      unsigned int v19 = *(_DWORD *)(*(void *)(a4 + 48) + 4 * v15);
      uint64_t result = MEMORY[0x1C18C88D0](*(void *)(a3 + 40), v19, 4);
      uint64_t v20 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      uint64_t v23 = 1 << v21;
      if (((1 << v21) & *(void *)(v13 + 8 * (v21 >> 6))) != 0)
      {
        uint64_t v24 = *(void *)(a3 + 48);
        if (*(_DWORD *)(v24 + 4 * v21) != v19)
        {
          for (unint64_t i = v21 + 1; ; unint64_t i = v26 + 1)
          {
            unint64_t v26 = i & ~v20;
            if (((*(void *)(v13 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
              goto LABEL_6;
            }
            if (*(_DWORD *)(v24 + 4 * v26) == v19) {
              break;
            }
          }
          unint64_t v22 = v26 >> 6;
          uint64_t v23 = 1 << v26;
        }
        v45[v22] |= v23;
        BOOL v27 = __OFADD__(v6++, 1);
        if (v27) {
          break;
        }
      }
    }
    __break(1u);
  }
  int64_t v28 = 0;
  uint64_t v29 = a3 + 56;
  uint64_t v30 = 1 << *(unsigned char *)(a3 + 32);
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  else {
    uint64_t v31 = -1;
  }
  unint64_t v32 = v31 & *(void *)(a3 + 56);
  int64_t v46 = (unint64_t)(v30 + 63) >> 6;
  uint64_t v33 = a4 + 56;
  while (v32)
  {
    unint64_t v34 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    unint64_t v35 = v34 | (v28 << 6);
LABEL_52:
    unsigned int v39 = *(_DWORD *)(*(void *)(a3 + 48) + 4 * v35);
    uint64_t result = MEMORY[0x1C18C88D0](*(void *)(a4 + 40), v39, 4);
    uint64_t v40 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v41 = result & ~v40;
    if ((*(void *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41))
    {
      uint64_t v42 = *(void *)(a4 + 48);
      if (*(_DWORD *)(v42 + 4 * v41) == v39)
      {
LABEL_57:
        *(unint64_t *)((char *)v45 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
        BOOL v27 = __OFADD__(v6++, 1);
        if (v27)
        {
          __break(1u);
          goto LABEL_60;
        }
      }
      else
      {
        uint64_t v43 = ~v40;
        while (1)
        {
          unint64_t v41 = (v41 + 1) & v43;
          if (((*(void *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
            break;
          }
          if (*(_DWORD *)(v42 + 4 * v41) == v39) {
            goto LABEL_57;
          }
        }
      }
    }
  }
  int64_t v36 = v28 + 1;
  if (__OFADD__(v28, 1)) {
    goto LABEL_62;
  }
  if (v36 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v36);
  ++v28;
  if (v37) {
    goto LABEL_51;
  }
  int64_t v28 = v36 + 1;
  if (v36 + 1 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v28);
  if (v37) {
    goto LABEL_51;
  }
  int64_t v28 = v36 + 2;
  if (v36 + 2 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v28);
  if (v37)
  {
LABEL_51:
    unint64_t v32 = (v37 - 1) & v37;
    unint64_t v35 = __clz(__rbit64(v37)) + (v28 << 6);
    goto LABEL_52;
  }
  int64_t v38 = v36 + 3;
  if (v38 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v38);
  if (v37)
  {
    int64_t v28 = v38;
    goto LABEL_51;
  }
  while (1)
  {
    int64_t v28 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v28 >= v46) {
      goto LABEL_60;
    }
    unint64_t v37 = *(void *)(v29 + 8 * v28);
    ++v38;
    if (v37) {
      goto LABEL_51;
    }
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t namespaced(_:)()
{
  return sub_1C151E55C();
}

Swift::String __swiftcall namespaced(_:)(Swift::OpaquePointer a1)
{
  sub_1BFED9C20();
  sub_1BFE99E40();
  uint64_t v1 = sub_1C151E55C();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

Swift::Bool __swiftcall isNamespaced(_:)(Swift::String a1)
{
  return sub_1C151FF0C() & 1;
}

uint64_t _s8NewsFeed33FormatOptionsNodeStatementBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(unsigned __int16 *)(a1 + 48);
  uint64_t v10 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 40);
  uint64_t v15 = *(unsigned __int16 *)(a2 + 48);
  uint64_t v70 = v6;
  uint64_t v71 = v7;
  uint64_t v69 = v4;
  switch(v8 >> 13)
  {
    case 1u:
      unsigned int v68 = *(unsigned __int16 *)(a1 + 48);
      uint64_t v16 = *(void *)a1;
      if ((v15 & 0xE000) != 0x2000) {
        goto LABEL_21;
      }
      unsigned int v18 = (char)v2;
      char v48 = *(void *)a2;
      int v63 = *(void *)a1;
      uint64_t v19 = *(void *)(a2 + 32);
      sub_1C0DF266C(v2, v3, v69, v5, v6, v7, *(unsigned __int16 *)(a1 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
      sub_1C0DF266C(v10, v9, v11, v12, v19, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
      int v20 = (v18 >> 5) & 3;
      if (v20)
      {
        if (v20 == 1)
        {
          if ((v48 & 0x60) != 0x20 || ((v10 ^ v63) & 0x9FLL) != 0) {
            goto LABEL_22;
          }
        }
        else
        {
          if ((v48 & 0x60) != 0x40) {
            goto LABEL_22;
          }
          if ((v18 & 0x80000000) != 0)
          {
            if ((v48 & 0x80) == 0 || ((v10 ^ v63) & 0x1F) != 0) {
              goto LABEL_22;
            }
          }
          else if (v48 < 0 || ((v10 ^ v63) & 1) != 0)
          {
            goto LABEL_22;
          }
        }
      }
      else if (v48 & 0x60) != 0 || ((v10 ^ v63))
      {
        goto LABEL_22;
      }
      char v17 = 1;
      return v17 & 1;
    case 2u:
      unsigned int v21 = (v8 >> 8) & 0x1F;
      if ((v15 & 0xE000) == 0x4000)
      {
        uint64_t v79 = *(void *)a1;
        uint64_t v80 = v3;
        uint64_t v62 = v3;
        uint64_t v81 = v4;
        uint64_t v82 = v5;
        uint64_t v65 = v5;
        uint64_t v66 = v9;
        uint64_t v83 = v6;
        uint64_t v84 = v7;
        __int16 v85 = v8 & 0x1FFF;
        uint64_t v72 = v10;
        uint64_t v73 = v9;
        uint64_t v74 = v11;
        uint64_t v75 = v12;
        uint64_t v76 = v13;
        uint64_t v77 = v14;
        __int16 v78 = v15 & 0x1FFF;
        uint64_t v22 = v15;
        unsigned int v52 = v15;
        uint64_t v58 = v14;
        uint64_t v60 = v12;
        uint64_t v49 = v11;
        uint64_t v23 = v9;
        uint64_t v24 = v11;
        uint64_t v25 = v11;
        uint64_t v26 = v12;
        uint64_t v27 = v6;
        uint64_t v28 = v7;
        uint64_t v29 = v13;
        uint64_t v55 = v13;
        uint64_t v30 = v2;
        uint64_t v64 = v2;
        sub_1C0DF266C(v10, v23, v24, v26, v13, v14, v22, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        sub_1C0DF266C(v30, v62, v4, v5, v27, v28, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        sub_1C0DF266C(v10, v66, v25, v60, v29, v14, v52, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        sub_1C0DF266C(v64, v62, v4, v5, v70, v71, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        char v17 = _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
        sub_1C0DF266C(v64, v62, v4, v5, v70, v71, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
        sub_1C0DF266C(v10, v66, v49, v60, v55, v58, v52, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
        sub_1C0DF266C(v10, v66, v49, v60, v55, v58, v52, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
        goto LABEL_17;
      }
      unsigned int v68 = *(unsigned __int16 *)(a1 + 48);
      uint64_t v43 = *(void *)(a2 + 32);
      uint64_t v16 = *(void *)a1;
      sub_1BFF2A99C(v2, v3, *(void *)(a1 + 16), v5, v6, v7, *(_WORD *)(a1 + 48), v21);
      goto LABEL_20;
    case 3u:
      if ((v15 & 0xE000) != 0x6000) {
        goto LABEL_18;
      }
      uint64_t v79 = *(void *)a1;
      uint64_t v80 = v3;
      uint64_t v61 = v12;
      uint64_t v62 = v3;
      uint64_t v81 = v4;
      uint64_t v65 = v5;
      uint64_t v67 = v9;
      LOBYTE(v82) = v5;
      uint64_t v72 = v10;
      uint64_t v73 = v9;
      uint64_t v74 = v11;
      LOBYTE(v75) = v12;
      uint64_t v51 = v10;
      uint64_t v31 = v9;
      uint64_t v56 = v13;
      uint64_t v59 = v14;
      uint64_t v32 = v13;
      uint64_t v33 = v2;
      uint64_t v64 = v2;
      sub_1C0DF266C(v10, v31, v11, v12, v13, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
      uint64_t v50 = v11;
      unsigned int v53 = v15;
      sub_1C0DF266C(v33, v3, v4, v65, v70, v71, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
      sub_1C0DF266C(v10, v67, v11, v12, v32, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
      uint64_t v34 = v64;
      uint64_t v35 = v62;
      uint64_t v37 = v4;
      uint64_t v36 = v70;
      uint64_t v38 = v71;
      sub_1C0DF266C(v64, v62, v4, v65, v70, v71, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
      char v39 = _s8NewsFeed16FormatURLBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
      goto LABEL_16;
    case 4u:
      if ((v15 & 0xE000) == 0x8000)
      {
        uint64_t v79 = *(void *)a1;
        uint64_t v80 = v3;
        uint64_t v61 = v12;
        uint64_t v62 = v3;
        uint64_t v81 = v4;
        uint64_t v65 = v5;
        uint64_t v67 = v9;
        LOBYTE(v82) = v5;
        uint64_t v72 = v10;
        uint64_t v73 = v9;
        uint64_t v74 = v11;
        LOBYTE(v75) = v12;
        uint64_t v51 = v10;
        uint64_t v40 = v9;
        uint64_t v56 = v13;
        uint64_t v59 = v14;
        uint64_t v41 = v13;
        uint64_t v42 = v2;
        uint64_t v64 = v2;
        sub_1C0DF266C(v10, v40, v11, v12, v13, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        uint64_t v50 = v11;
        unsigned int v53 = v15;
        sub_1C0DF266C(v42, v3, v4, v65, v70, v71, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        sub_1C0DF266C(v10, v67, v11, v12, v41, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        uint64_t v34 = v64;
        uint64_t v35 = v62;
        uint64_t v37 = v4;
        uint64_t v36 = v70;
        uint64_t v38 = v71;
        sub_1C0DF266C(v64, v62, v4, v65, v70, v71, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        char v39 = _s8NewsFeed21FormatDateTimeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
LABEL_16:
        char v17 = v39;
        sub_1C0DF266C(v34, v35, v37, v65, v36, v38, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
        sub_1C0DF266C(v51, v67, v50, v61, v56, v59, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
        sub_1C0DF266C(v51, v67, v50, v61, v56, v59, v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
LABEL_17:
        sub_1C0DF266C(v64, v62, v4, v65, v70, v71, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
      }
      else
      {
LABEL_18:
        unsigned int v68 = *(unsigned __int16 *)(a1 + 48);
        uint64_t v43 = *(void *)(a2 + 32);
        uint64_t v16 = *(void *)a1;
        sub_1BFE86E48(v2, v3, *(void *)(a1 + 16), v5);
LABEL_20:
        uint64_t v13 = v43;
LABEL_21:
        uint64_t v44 = v9;
        uint64_t v45 = v9;
        uint64_t v46 = v13;
        sub_1C0DF266C(v10, v45, v11, v12, v13, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
        sub_1C0DF266C(v16, v3, v69, v5, v70, v71, v68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
        sub_1C0DF266C(v10, v44, v11, v12, v46, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
LABEL_22:
        char v17 = 0;
      }
      break;
    default:
      unsigned int v68 = *(unsigned __int16 *)(a1 + 48);
      uint64_t v16 = *(void *)a1;
      if (v15 >= 0x2000) {
        goto LABEL_21;
      }
      uint64_t v79 = *(void *)a1;
      LOWORD(v80) = v3;
      uint64_t v72 = v10;
      LOWORD(v73) = v9;
      uint64_t v54 = v13;
      uint64_t v57 = v14;
      char v17 = _s8NewsFeed17FormatBoolBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
      sub_1C0DF266C(v16, v3, v4, v5, v70, v71, v68, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
      sub_1C0DF266C(v10, v9, v11, v12, v54, v57, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
      break;
  }
  return v17 & 1;
}

unint64_t sub_1C12F59A8(uint64_t a1)
{
  unint64_t result = sub_1C12F59D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12F59D0()
{
  unint64_t result = qword_1EA1AE070;
  if (!qword_1EA1AE070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE070);
  }
  return result;
}

unint64_t sub_1C12F5A24(void *a1)
{
  a1[1] = sub_1BFD97320();
  a1[2] = sub_1BFD4A1DC();
  unint64_t result = sub_1C12F5A5C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12F5A5C()
{
  unint64_t result = qword_1EA1AE078;
  if (!qword_1EA1AE078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE078);
  }
  return result;
}

uint64_t destroy for FormatOptionsNodeStatementBinding(uint64_t a1)
{
  return sub_1C0DF266C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
}

uint64_t initializeWithCopy for FormatOptionsNodeStatementBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(unsigned __int16 *)(a2 + 48);
  sub_1C0DF266C(*(void *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatOptionsNodeStatementBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(unsigned __int16 *)(a2 + 48);
  sub_1C0DF266C(*(void *)a2, v4, v5, v6, v7, v8, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v16 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v9;
  sub_1C0DF266C(v10, v11, v12, v13, v14, v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
  return a1;
}

uint64_t assignWithTake for FormatOptionsNodeStatementBinding(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v11 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v3;
  sub_1C0DF266C(v4, v6, v5, v7, v8, v9, v11, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
  return a1;
}

uint64_t sub_1C12F5D28(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 48) >> 13;
}

uint64_t sub_1C12F5D34(uint64_t result)
{
  *(_WORD *)(result + 48) &= 0x1FFFu;
  return result;
}

uint64_t sub_1C12F5D44(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 48) = *(_WORD *)(result + 48) & 0x7FF | (a2 << 13);
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionsNodeStatementBinding()
{
  return &type metadata for FormatOptionsNodeStatementBinding;
}

uint64_t sub_1C12F5D68(uint64_t a1)
{
  sub_1C0178190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12F5DC4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12F5E04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for DebugFormatLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12F5F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLocation()
{
  return &type metadata for DebugFormatLocation;
}

unint64_t sub_1C12F5F48()
{
  unint64_t result = qword_1EA1AE080;
  if (!qword_1EA1AE080)
  {
    sub_1C12F5FA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE080);
  }
  return result;
}

void sub_1C12F5FA0()
{
  if (!qword_1EA1AE088)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE088);
    }
  }
}

uint64_t sub_1C12F5FF8()
{
  return sub_1C15171AC();
}

uint64_t sub_1C12F6288@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  switch((char)result)
  {
    case 1:
      long long v2 = xmmword_1C15E2B50;
      goto LABEL_13;
    case 2:
      long long v2 = xmmword_1C15E2B60;
      goto LABEL_13;
    case 3:
      long long v2 = xmmword_1C15E2B80;
      goto LABEL_13;
    case 4:
      long long v2 = xmmword_1C15E2B40;
      goto LABEL_13;
    case 5:
      long long v2 = xmmword_1C15E2B70;
      goto LABEL_13;
    case 6:
      long long v2 = xmmword_1C15E2B10;
      goto LABEL_13;
    case 7:
      long long v2 = xmmword_1C15E2B20;
      goto LABEL_13;
    case 8:
      long long v2 = xmmword_1C15E2B00;
      goto LABEL_13;
    case 9:
      long long v2 = xmmword_1C15D9420;
      goto LABEL_13;
    case 10:
      long long v2 = xmmword_1C15E2B30;
LABEL_13:
      *(_OWORD *)a2 = v2;
      *(unsigned char *)(a2 + 16) = 0;
      break;
    default:
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(unsigned char *)(a2 + 16) = 1;
      break;
  }
  return result;
}

uint64_t sub_1C12F6368(char a1)
{
  uint64_t result = 0x697461636F4C6F6ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74746F6C72616863;
      break;
    case 2:
      uint64_t result = 0x6E6F7473756F68;
      break;
    case 3:
      uint64_t result = 0x6C65676E41736F6CLL;
      break;
    case 4:
      uint64_t result = 0x696D61696DLL;
      break;
    case 5:
      uint64_t result = 0x436B726F5977656ELL;
      break;
    case 6:
      uint64_t result = 0x6E656D6172636173;
      break;
    case 7:
      uint64_t result = 0x6E6F746E416E6173;
      break;
    case 8:
      uint64_t result = 0x6F676569446E6173;
      break;
    case 9:
      uint64_t result = 0x636E6172466E6173;
      break;
    case 10:
      uint64_t result = 0x74676E6968736177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12F64DC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C12F6368(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C12F6368(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C12F6568()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C12F6368(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C12F65CC()
{
  sub_1C12F6368(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12F6620()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C12F6368(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C12F6680@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C12F6848();
  *a1 = result;
  return result;
}

uint64_t sub_1C12F66B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C12F6368(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C12F66DC(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7B734();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C12F6730(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0C7B734();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C12F678C(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7B734();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

void sub_1C12F67E0(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A4D8;
}

unint64_t sub_1C12F67F4()
{
  unint64_t result = qword_1EA1AE090;
  if (!qword_1EA1AE090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE090);
  }
  return result;
}

uint64_t sub_1C12F6848()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t FormatIssueCoverTraits.rawValue.getter()
{
  if (*v0) {
    return 0x4D6465726579616CLL;
  }
  else {
    return 0x616C506F65646976;
  }
}

uint64_t sub_1C12F68E4(char *a1, char *a2)
{
  return sub_1C14804D0(*a1, *a2);
}

uint64_t sub_1C12F68F0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12F6988()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12F6A0C()
{
  return sub_1C1520E0C();
}

void sub_1C12F6AA0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x616C506F65646976;
  if (*v1) {
    uint64_t v2 = 0x4D6465726579616CLL;
  }
  unint64_t v3 = 0xED00006B63616279;
  if (*v1) {
    unint64_t v3 = 0xEC00000061696465;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C12F6AF4(void *a1)
{
  return FormatIssueCoverTraits.encode(to:)(a1);
}

uint64_t FormatIssueCoverTraits.description.getter()
{
  if (*v0) {
    return 0x4D6465726579616CLL;
  }
  else {
    return 0x616C506F65646976;
  }
}

unint64_t sub_1C12F6B60()
{
  unint64_t result = qword_1EA1AE098;
  if (!qword_1EA1AE098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE098);
  }
  return result;
}

unint64_t sub_1C12F6BB4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C12F6BE4();
  unint64_t result = sub_1BFC525CC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C12F6BE4()
{
  unint64_t result = qword_1EA1AE0A0;
  if (!qword_1EA1AE0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE0A0);
  }
  return result;
}

unint64_t sub_1C12F6C38(uint64_t a1)
{
  unint64_t result = sub_1C12F6C60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12F6C60()
{
  unint64_t result = qword_1EA1AE0A8;
  if (!qword_1EA1AE0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE0A8);
  }
  return result;
}

unint64_t sub_1C12F6CB4(void *a1)
{
  a1[1] = sub_1C0074170();
  a1[2] = sub_1C00741C4();
  unint64_t result = sub_1C12F6B60();
  a1[3] = result;
  return result;
}

uint64_t sub_1C12F6CEC()
{
  if (*v0) {
    return 0x4D6465726579616CLL;
  }
  else {
    return 0x616C506F65646976;
  }
}

ValueMetadata *type metadata accessor for FormatIssueCoverTraits()
{
  return &type metadata for FormatIssueCoverTraits;
}

uint64_t sub_1C12F6D74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C12F73C8(0, &qword_1EB86B7F8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12F712C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v25 = v14;
  uint64_t v22 = v13;
  uint64_t v23 = v10;
  char v28 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v21 = sub_1C152060C();
  uint64_t v16 = v15;
  sub_1C01CBAF4();
  char v27 = 3;
  sub_1C01CBC04((unint64_t *)&unk_1EB86B2F0, (void (*)(void))sub_1C01CBB4C);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = v26;
  swift_bridgeObjectRetain();
  uint64_t v19 = v16;
  uint64_t v20 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v18;
  *(unsigned char *)(a2 + 56) = 4;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C12F712C()
{
  unint64_t result = qword_1EB86ABC8;
  if (!qword_1EB86ABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABC8);
  }
  return result;
}

uint64_t sub_1C12F7180(void *a1)
{
  sub_1C12F73C8(0, &qword_1EA1AE0B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v8;
  uint64_t v9 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v9;
  uint64_t v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12F712C();
  sub_1C1520F0C();
  char v24 = 0;
  uint64_t v10 = v19;
  sub_1C15207CC();
  if (!v10)
  {
    uint64_t v11 = v14;
    char v23 = 1;
    sub_1C15207CC();
    char v22 = 2;
    sub_1C152074C();
    uint64_t v20 = v11;
    char v21 = 3;
    sub_1C01CBAF4();
    sub_1C01CBC04(&qword_1EA197EC0, (void (*)(void))sub_1C01CBC70);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1C12F73C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C12F712C();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseBoxScoreItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12F74F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseBoxScoreItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseBoxScoreItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseBoxScoreItem()
{
  return &type metadata for SportsDataVisualizationResponseBoxScoreItem;
}

uint64_t sub_1C12F7540()
{
  uint64_t result = 0x6E6F6E6143636D75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6449746E657665;
      break;
    case 2:
      uint64_t result = 0x615465756761656CLL;
      break;
    case 3:
      uint64_t result = 0x53617461446C7275;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12F75F0(uint64_t a1)
{
  unint64_t v2 = sub_1C12F712C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12F762C(uint64_t a1)
{
  unint64_t v2 = sub_1C12F712C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C12F7668@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C12F6D74(a1, a2);
}

uint64_t sub_1C12F7680(void *a1)
{
  return sub_1C12F7180(a1);
}

unint64_t sub_1C12F769C()
{
  unint64_t result = qword_1EA1AE0B8[0];
  if (!qword_1EA1AE0B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1AE0B8);
  }
  return result;
}

unint64_t sub_1C12F76F4()
{
  unint64_t result = qword_1EB86ABD8;
  if (!qword_1EB86ABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABD8);
  }
  return result;
}

unint64_t sub_1C12F774C()
{
  unint64_t result = qword_1EB86ABD0;
  if (!qword_1EB86ABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABD0);
  }
  return result;
}

__n128 sub_1C12F77A0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 result = *a2;
  unint64_t v4 = a2[1].n128_u64[0];
  unint64_t v5 = a2[1].n128_u64[1];
  *(void *)a3 = a1;
  *(__n128 *)(a3 + 8) = result;
  *(void *)(a3 + 24) = v4;
  *(void *)(a3 + 32) = v5;
  return result;
}

uint64_t FeedItemFilterResult.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemFilterResult.journal.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12F7804()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C12F7848(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C12F78A0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1C12F7928(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for FeedItemFilterResult()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1C12F7998(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  unint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*(void *)(*v7 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1BFEF2D8C(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 56);
  swift_retain();
  swift_release();
  if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) != 0xF)
  {
    swift_release();
    goto LABEL_13;
  }
  id v13 = *(id *)((v12 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  swift_release();
  id v14 = objc_msgSend(v13, sel_view);
  if (!v14)
  {
    __break(1u);
LABEL_10:
    swift_endAccess();
LABEL_13:
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1C151E3CC();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C152040C();
    __break(1u);
    JUMPOUT(0x1C12F7C10);
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, sel_setAutoresizingMask_, 0);
  if (v6)
  {
    swift_retain();
    objc_msgSend(v15, sel_setAutoresizingMask_, sub_1C0D7FB8C());

    swift_release();
  }
  else
  {
  }
  return v13;
}

uint64_t sub_1C12F7C5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  unint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*(void *)(*v7 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1BFEF2D8C(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 56);
  swift_retain();
  swift_release();
  if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) != 5)
  {
    swift_release();
    goto LABEL_13;
  }
  id v13 = *(id *)((v12 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  swift_release();
  id v14 = objc_msgSend(v13, sel_view);
  if (!v14)
  {
    __break(1u);
LABEL_10:
    swift_endAccess();
LABEL_13:
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1C151E3CC();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C152040C();
    __break(1u);
    return result;
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, sel_setAutoresizingMask_, 0);
  if (v6)
  {
    swift_retain();
    objc_msgSend(v15, sel_setAutoresizingMask_, sub_1C0D7FB8C());

    swift_release();
  }
  else
  {
  }
  return (uint64_t)v13;
}

uint64_t sub_1C12F7ED4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  unint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*(void *)(*v7 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1BFEF2D8C(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 56);
  swift_retain();
  swift_release();
  if (((v12 >> 59) & 0x1E | (v12 >> 2) & 1) != 0x12)
  {
    swift_release();
    goto LABEL_13;
  }
  id v13 = *(id *)((v12 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  swift_release();
  id v14 = objc_msgSend(v13, sel_view);
  if (!v14)
  {
    __break(1u);
LABEL_10:
    swift_endAccess();
LABEL_13:
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1C151E3CC();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C152040C();
    __break(1u);
    return result;
  }
  uint64_t v15 = v14;
  objc_msgSend(v14, sel_setAutoresizingMask_, 0);
  if (v6)
  {
    swift_retain();
    objc_msgSend(v15, sel_setAutoresizingMask_, sub_1C0D7FB8C());

    swift_release();
  }
  else
  {
  }
  return (uint64_t)v13;
}

uint64_t sub_1C12F814C()
{
  return sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, (uint64_t (*)(void))sub_1C0377DB0);
}

uint64_t sub_1C12F8178()
{
  return sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, sub_1C037869C);
}

uint64_t sub_1C12F81A4(uint64_t (*a1)(uint64_t), uint64_t (*a2)(void))
{
  uint64_t v5 = (void *)(v2 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(v2 + 16);
  if (!(v6 >> 62))
  {
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v12 = swift_endAccess();
    uint64_t v13 = *(void *)(v2 + 64);
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (!v14)
    {
      *(void *)(v2 + 64) = v15;
      return (*(uint64_t (**)(uint64_t))(v2 + 40))(v12);
    }
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v7 = sub_1BFFCB238(a1);
  if (v7)
  {
LABEL_7:
    uint64_t v10 = v7;
    swift_endAccess();
    return v10;
  }
  if (*v5 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t result = v16 - 1;
    if (!__OFSUB__(v16, 1)) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = v8 - 1;
  if (!__OFSUB__(v8, 1))
  {
LABEL_6:
    uint64_t v7 = a2();
    goto LABEL_7;
  }
LABEL_15:
  __break(1u);
  return result;
}

id FormatLayoutView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1C151C26C();
      swift_unknownObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations);
  id result = (id)swift_beginAccess();
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1C15204BC();
    id result = (id)swift_bridgeObjectRelease();
    if (!v39) {
      return result;
    }
  }
  else if (!*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v8 = *v6;
  uint64_t v102 = MEMORY[0x1E4FBC860];
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_1C15204BC();
    uint64_t v9 = (uint64_t)result;
    if (result) {
      goto LABEL_9;
    }
LABEL_58:
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_81;
    }
    goto LABEL_59;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_58;
  }
LABEL_9:
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_85;
  }
  uint64_t v10 = 0;
  uint64_t v99 = v9;
  unint64_t v100 = v8 & 0xC000000000000001;
  id v95 = (void *)(v8 + 32);
  uint64_t v97 = v8;
  do
  {
    if (v100)
    {
      uint64_t v11 = (void *)MEMORY[0x1C18C7CB0](v10, v97);
    }
    else
    {
      uint64_t v11 = (void *)v95[v10];
      swift_retain();
    }
    uint64_t v13 = (void *)v11[4];
    uint64_t v12 = v11[5];
    uint64_t v14 = v11[6];
    swift_beginAccess();
    uint64_t v15 = v13[2];
    if (*(void *)(v15 + 16))
    {
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v16 = sub_1C1520E0C();
      uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v18 = v16 & ~v17;
      if ((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
      {
        uint64_t v19 = *(void *)(v15 + 48);
        uint64_t v20 = (void *)(v19 + 16 * v18);
        BOOL v21 = *v20 == v12 && v20[1] == v14;
        if (v21 || (sub_1C1520A9C() & 1) != 0)
        {
LABEL_11:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        uint64_t v22 = ~v17;
        while (1)
        {
          unint64_t v18 = (v18 + 1) & v22;
          if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            break;
          }
          char v23 = (void *)(v19 + 16 * v18);
          BOOL v24 = *v23 == v12 && v23[1] == v14;
          if (v24 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_11;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v25 = v13[3];
    if (*(void *)(v25 + 16))
    {
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v26 = sub_1C1520E0C();
      uint64_t v27 = -1 << *(unsigned char *)(v25 + 32);
      unint64_t v28 = v26 & ~v27;
      if ((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
      {
        uint64_t v29 = *(void *)(v25 + 48);
        char v30 = (void *)(v29 + 16 * v28);
        BOOL v31 = *v30 == v12 && v30[1] == v14;
        if (v31 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_11;
        }
        uint64_t v32 = ~v27;
        while (1)
        {
          unint64_t v28 = (v28 + 1) & v32;
          if (((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            break;
          }
          uint64_t v33 = (void *)(v29 + 16 * v28);
          BOOL v34 = *v33 == v12 && v33[1] == v14;
          if (v34 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_11;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v35 = v13[4];
    swift_bridgeObjectRetain();
    char v36 = sub_1BFF896B4(v12, v14, v35);
    swift_bridgeObjectRelease();
    if ((v36 & 1) != 0
      || (uint64_t v37 = *(void *)(v11[11] + 16), *(unsigned __int8 *)(v37 + 84) == 255)
      || (*(unsigned int *)(v37 + 80) | ((unint64_t)*(unsigned __int8 *)(v37 + 84) << 32)) >> 33)
    {
      swift_release();
    }
    else
    {
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
LABEL_12:
    ++v10;
  }
  while (v10 != v99);
  swift_bridgeObjectRelease();
  uint64_t v38 = v102;
  if ((v102 & 0x8000000000000000) == 0)
  {
LABEL_59:
    if ((v38 & 0x4000000000000000) != 0) {
      goto LABEL_81;
    }
    uint64_t v40 = *(void *)(v38 + 16);
    if (v40) {
      goto LABEL_61;
    }
    return (id)swift_release();
  }
LABEL_81:
  swift_retain();
  uint64_t v40 = sub_1C15204BC();
  swift_release();
  if (!v40) {
    return (id)swift_release();
  }
LABEL_61:
  uint64_t v41 = self;
  id result = objc_msgSend(v41, sel_begin);
  if (v40 >= 1)
  {
    id v96 = v41;
    uint64_t v98 = v40;
    uint64_t v42 = 0;
    unint64_t v43 = v38 & 0xC000000000000001;
    while (1)
    {
      if (v43)
      {
        uint64_t v44 = (void *)MEMORY[0x1C18C7CB0](v42, v38);
      }
      else
      {
        uint64_t v44 = *(void **)(v38 + 8 * v42 + 32);
        swift_retain();
      }
      uint64_t v45 = *(void *)(v44[11] + 16);
      if (*(unsigned __int8 *)(v45 + 84) == 255) {
        goto LABEL_64;
      }
      float v46 = *(float *)(v45 + 80);
      if (!*(unsigned char *)(v45 + 84)) {
        break;
      }
      if (*(unsigned char *)(v45 + 84) != 1) {
        goto LABEL_64;
      }
      uint64_t v47 = v44[4];
      uint64_t v101 = v44[5];
      uint64_t v48 = v44[6];
      uint64_t v49 = (void *)v44[7];
      objc_msgSend(v49, sel_bounds);
      double v50 = 0.0;
      if (CGRectGetHeight(v104) > 0.0)
      {
        uint64_t v51 = (void *)sub_1C151BE9C();
        objc_msgSend(v49, sel_bounds);
        objc_msgSend(v51, sel_convertRect_fromCoordinateSpace_, v49);
        CGFloat v53 = v52;
        CGFloat v55 = v54;
        CGFloat v57 = v56;
        CGFloat v59 = v58;

        unint64_t v43 = v38 & 0xC000000000000001;
        uint64_t v60 = (void *)sub_1C151BE9C();
        objc_msgSend(v60, sel_bounds);
        CGFloat v62 = v61;
        CGFloat v64 = v63;
        CGFloat v66 = v65;
        CGFloat v68 = v67;

        v105.origin.x = v62;
        v105.origin.y = v64;
        v105.size.width = v66;
        v105.size.height = v68;
        v112.origin.x = v53;
        v112.origin.y = v55;
        v112.size.width = v57;
        v112.size.height = v59;
        CGRect v106 = CGRectIntersection(v105, v112);
        double Height = CGRectGetHeight(v106);
        objc_msgSend(v49, sel_bounds);
        double v50 = Height / CGRectGetHeight(v107);
      }
      swift_beginAccess();
      uint64_t v70 = *(void *)(v47 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      char v71 = sub_1BFF896B4(v101, v48, v70);
      swift_bridgeObjectRelease();
      if ((v71 & 1) == 0) {
        goto LABEL_78;
      }
LABEL_63:
      swift_release();
LABEL_64:
      ++v42;
      swift_release();
      if (v40 == v42)
      {
        swift_release();
        return objc_msgSend(v96, sel_commit);
      }
    }
    uint64_t v72 = v44[4];
    uint64_t v101 = v44[5];
    uint64_t v48 = v44[6];
    uint64_t v73 = (void *)v44[7];
    objc_msgSend(v73, sel_bounds);
    double v50 = 0.0;
    if (CGRectGetHeight(v108) > 0.0)
    {
      uint64_t v74 = (void *)sub_1C151BE9C();
      objc_msgSend(v73, sel_bounds);
      objc_msgSend(v74, sel_convertRect_fromCoordinateSpace_, v73);
      CGFloat v76 = v75;
      CGFloat v78 = v77;
      CGFloat v80 = v79;
      CGFloat v82 = v81;

      unint64_t v43 = v38 & 0xC000000000000001;
      uint64_t v83 = (void *)sub_1C151BE9C();
      objc_msgSend(v83, sel_bounds);
      CGFloat v85 = v84;
      CGFloat v87 = v86;
      CGFloat v89 = v88;
      CGFloat v91 = v90;

      v109.origin.x = v85;
      v109.origin.y = v87;
      v109.size.width = v89;
      v109.size.height = v91;
      v113.origin.x = v76;
      v113.origin.y = v78;
      v113.size.width = v80;
      v113.size.height = v82;
      CGRect v110 = CGRectIntersection(v109, v113);
      double v92 = CGRectGetHeight(v110);
      uint64_t v40 = v98;
      objc_msgSend(v73, sel_bounds);
      double v50 = v92 / CGRectGetHeight(v111);
    }
    swift_beginAccess();
    uint64_t v93 = *(void *)(v72 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    char v94 = sub_1BFF896B4(v101, v48, v93);
    swift_bridgeObjectRelease();
    if (v94) {
      goto LABEL_63;
    }
LABEL_78:
    if (v50 >= v46)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v103, v101, v48);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1C14E3C14();
    }
    goto LABEL_63;
  }
LABEL_85:
  __break(1u);
  return result;
}

Swift::Void __swiftcall FormatLayoutView.viewDidLoad()()
{
}

Swift::Void __swiftcall FormatLayoutView.viewWillAppear()()
{
}

uint64_t sub_1C12F8BBC(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers;
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(*(void *)v3 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BFC66384(v6, (uint64_t)v9);
      uint64_t v7 = v10;
      uint64_t v8 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      a1(v7, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      v6 += 40;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall FormatLayoutView.viewDidAppear()()
{
}

Swift::Void __swiftcall FormatLayoutView.viewWillDisappear()()
{
}

Swift::Void __swiftcall FormatLayoutView.viewDidDisappear()()
{
}

void sub_1C12F8CC8()
{
  qword_1EB88F6B0 = 0x4024000000000000;
}

uint64_t FormatLayoutView.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatLayoutView.viewsByName.getter()
{
  return swift_bridgeObjectRetain();
}

id sub_1C12F8D7C@<X0>(void *a1@<X8>)
{
  sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  id result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  *a1 = result;
  return result;
}

void sub_1C12F8DE0(uint64_t a1, uint64_t a2)
{
  sub_1BFE9E0D8(0, &qword_1EB8851A0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD758]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v14 - v6);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C18C9C60](a2 + 16);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    *uint64_t v7 = 1;
    (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAD748], v4);
    uint64_t v10 = sub_1C151C86C();
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v11 = OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture;
    uint64_t v12 = *(void **)&v9[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture];
    *(void *)&v9[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture] = v10;

    uint64_t v13 = *(void **)&v9[v11];
    if (v13) {
      objc_msgSend(v13, sel_setDelegate_, v9);
    }
  }
}

id FormatLayoutView.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1EB88CB30 != -1) {
LABEL_28:
  }
    swift_once();
  if (*(unsigned char *)(qword_1EB93C930 + 152) != 1)
  {
LABEL_26:
    v17.receiver = v0;
    v17.super_class = ObjectType;
    return objc_msgSendSuper2(&v17, sel_dealloc);
  }
  Class v2 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v8) {
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_25;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_25;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_25;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v10);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_7:
    unint64_t v13 = *(void *)(*(void *)(*(void *)(v3 + 56) + 8 * v12) + 56);
    swift_retain();
    sub_1C11F177C(v13);
    id result = (id)swift_release();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_25:
    swift_release();
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall FormatLayoutView.point(inside:with:)(CGPoint inside, UIEvent_optional with)
{
  uint64_t isa = (uint64_t)with.value.super.isa;
  double y = inside.y;
  double x = inside.x;
  id v6 = objc_msgSend(v2, sel_subviews);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v7 = sub_1C151EBCC();

  id v8 = (id)isa;
  id v9 = v2;
  LOBYTE(isa) = sub_1C12FDE08(v7, v9, isa, x, y);
  swift_bridgeObjectRelease();

  return isa & 1;
}

void sub_1C12F94F8(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13 = a1 + 16;
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C18C9C60](v13);
  if (v14)
  {
    unint64_t v15 = (void *)v14;
    int64_t v16 = *(void (**)(double, double))(v14 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation);
    sub_1BFC648F8((uint64_t)v16);

    if (v16)
    {
      v16(a2 - a4 + a6, a3 - a5 + a7);
      sub_1BFC3E5C0((uint64_t)v16);
    }
  }
}

void sub_1C12F95C4(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
}

void sub_1C12F95D0(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
}

void sub_1C12F95DC(uint64_t a1, void *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v19 = a1 + 16;
  swift_beginAccess();
  uint64_t v20 = (char *)MEMORY[0x1C18C9C60](v19);
  if (v20)
  {
    BOOL v21 = v20;
    uint64_t v22 = (uint64_t *)&v20[*a2];
    char v23 = (void (*)(double, double, double, double, double, double, double, double))*v22;
    if (*v22)
    {
      sub_1BFC648F8(*v22);

      v23(a3, a4, a5, a6, a7, a8, a9, a10);
      sub_1BFC3E5C0((uint64_t)v23);
    }
    else
    {
    }
  }
}

void sub_1C12F96D8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    a2();
  }
}

void sub_1C12F9740(uint64_t *a1, unint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  char v5 = *((unsigned char *)a1 + 32);
  if (v3 >= 0x13)
  {
    uint64_t v6 = *(void *)(v3 + 24);
    uint64_t v7 = *a1;
    uint64_t v8 = v2;
    unint64_t v9 = v3;
    uint64_t v10 = v4;
    char v11 = v5;
    sub_1C12F9E80((uint64_t)&v7, a2, v6);
  }
  else
  {
    uint64_t v7 = *a1;
    uint64_t v8 = v2;
    unint64_t v9 = v3;
    uint64_t v10 = v4;
    char v11 = v5;
    sub_1BFFCB2C8((uint64_t)&v7, a2);
  }
}

void sub_1C12F97A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C18C9C60](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = Strong;
      swift_beginAccess();
      uint64_t v9 = MEMORY[0x1C18C9C60](a3 + 16);
      if (v9)
      {
        uint64_t v10 = (char *)v9;
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          char v11 = v10;
          sub_1C0CBDD64(v8, v6, (uint64_t)v11);
          swift_release();
        }
        unint64_t v12 = (uint64_t *)&v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers];
        swift_beginAccess();
        id v13 = v6;
        unint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = sub_1C12FDCB8(v14, v13);
        swift_release();
        swift_bridgeObjectRelease();

        *unint64_t v12 = v15;
        swift_bridgeObjectRelease();
        v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 1;
      }
      else
      {

        swift_release();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1C12F9940(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t v4 = MEMORY[0x1C18C9C60](a2 + 16);
    if (v4)
    {
      id v5 = (id)v4;
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        id v5 = v5;
        sub_1C151B11C();
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

id sub_1C12F9A20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v3 = *(unsigned __int8 *)(*(void *)a1 + 152) >> 6;
  if (!v3)
  {
    if (qword_1EB88CB30 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void *)(qword_1EB93C930 + 96);
    swift_beginAccess();
    swift_retain();
    uint64_t v12 = sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, sub_1C037869C);
    id result = (id)swift_endAccess();
    if (!v12)
    {
      uint64_t v13 = *(void *)(v11 + 64);
      BOOL v8 = __OFADD__(v13, 1);
      uint64_t v14 = v13 + 1;
      if (v8)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      *(void *)(v11 + 64) = v14;
      uint64_t v12 = (*(uint64_t (**)(id))(v11 + 40))(result);
    }
    swift_release();
    id result = objc_msgSend((id)v12, sel_setAccessibilityIgnoresInvertColors_, 1);
    uint64_t v10 = (void *)(v12 | 0x4000000000000000);
    goto LABEL_21;
  }
  if (v3 == 1)
  {
    if (qword_1EB88CB30 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(qword_1EB93C930 + 104);
    swift_beginAccess();
    swift_retain();
    uint64_t v5 = sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, sub_1C037869C);
    id result = (id)swift_endAccess();
    if (v5) {
      goto LABEL_8;
    }
    uint64_t v7 = *(void *)(v4 + 64);
    BOOL v8 = __OFADD__(v7, 1);
    uint64_t v9 = v7 + 1;
    if (!v8)
    {
      *(void *)(v4 + 64) = v9;
      uint64_t v5 = (*(uint64_t (**)(id))(v4 + 40))(result);
LABEL_8:
      swift_release();
      id result = objc_msgSend((id)v5, sel_setAccessibilityIgnoresInvertColors_, 1);
      uint64_t v10 = (void *)(v5 | 0x8000000000000000);
LABEL_21:
      *a2 = v10;
      return result;
    }
    __break(1u);
    goto LABEL_23;
  }
  if (qword_1EB88CB30 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)(qword_1EB93C930 + 88);
  swift_beginAccess();
  swift_retain();
  uint64_t v10 = (void *)sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, sub_1C037869C);
  id result = (id)swift_endAccess();
  if (v10)
  {
LABEL_20:
    swift_release();
    id result = objc_msgSend(v10, sel_setAccessibilityIgnoresInvertColors_, 1);
    goto LABEL_21;
  }
  uint64_t v16 = *(void *)(v15 + 64);
  BOOL v8 = __OFADD__(v16, 1);
  uint64_t v17 = v16 + 1;
  if (!v8)
  {
    *(void *)(v15 + 64) = v17;
    uint64_t v10 = (void *)(*(uint64_t (**)(id))(v15 + 40))(result);
    goto LABEL_20;
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_1C12F9D04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x1C18C9C60](a2 + 16);
    if (v6)
    {
      uint64_t v7 = (char *)v6;
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        BOOL v8 = v7;
        sub_1C151B11C();

        swift_release();
      }
      id v9 = objc_msgSend(v5, sel_view);
      if (!v9)
      {
        __break(1u);
        return;
      }
      uint64_t v10 = v9;
      objc_msgSend(v9, sel_removeFromSuperview);

      uint64_t v11 = (uint64_t *)&v7[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers];
      swift_beginAccess();
      unint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C12FDCB8(v12, v5);
      swift_bridgeObjectRelease();

      *uint64_t v11 = v13;
      swift_bridgeObjectRelease();
      v7[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 1;
    }
    else
    {
      uint64_t v7 = v5;
    }
  }
}

void sub_1C12F9E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v8 = v3;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v49 = *(void *)a1;
  uint64_t v50 = *(void *)(a1 + 8);
  uint64_t v48 = *(void *)(a1 + 24);
  char v47 = *(unsigned char *)(a1 + 32);
  unint64_t v56 = sub_1BFE67330(MEMORY[0x1E4FBC860]);
  sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C15320E0;
  *(void *)(v12 + 32) = sub_1BFFCB630(a2);
  sub_1C151EBEC();
  unint64_t v55 = v12;
  sub_1C12FE414(a2, a3, &v55, (uint64_t *)&v56);
  sub_1C12FE70C(a2, a3, &v55, (uint64_t *)&v56);
  sub_1C12FE9FC(a2, a3, &v55, (uint64_t *)&v56);
  sub_1C12FEC68(a2, a3, &v55, (uint64_t *)&v56);
  sub_1C12FEEB8(a2, a3, &v55, (uint64_t *)&v56);
  sub_1C12FF1A0(a2, a3, &v55, (uint64_t *)&v56);
  unint64_t v13 = v55;
  unint64_t v14 = v55 >> 62;
  if (v55 >> 62)
  {
    uint64_t v19 = v8;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C15204BC();
    double v52 = v8;
    if (!v15) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v16 = v8;
    swift_bridgeObjectRetain();
    double v52 = v8;
    if (!v15) {
      goto LABEL_10;
    }
  }
  if (v15 < 1) {
    goto LABEL_58;
  }
  uint64_t v4 = 0;
  unint64_t v6 = v13 & 0xC000000000000001;
  unint64_t v7 = (unint64_t)&_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  uint64_t v17 = v52;
  do
  {
    if (v6) {
      unint64_t v18 = (char *)MEMORY[0x1C18C7CB0](v4, v13);
    }
    else {
      unint64_t v18 = (char *)*(id *)(v13 + 8 * v4 + 32);
    }
    BOOL v8 = v18;
    ++v4;
    objc_msgSend(v17, sel_addSubview_, v18);

    uint64_t v17 = v8;
  }
  while (v15 != v4);
LABEL_10:
  swift_bridgeObjectRelease();
  if (!v14)
  {
    uint64_t v20 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v5 = v11;
    if (v20) {
      goto LABEL_12;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v51 = (void *)sub_1BFFCB630(a2);
    uint64_t v11 = v50;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C15204BC();
  unint64_t v5 = v11;
  if (!v20) {
    goto LABEL_17;
  }
LABEL_12:
  uint64_t v11 = v50;
  if ((v13 & 0xC000000000000001) != 0) {
    goto LABEL_59;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_61;
  }
  for (id i = *(id *)(v13 + 32); ; id i = (id)MEMORY[0x1C18C7CB0](0, v13))
  {
    uint64_t v51 = i;
    swift_bridgeObjectRelease();
LABEL_18:
    unint64_t v6 = swift_allocObject();
    unint64_t v22 = v56;
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = v22;
    if (v14)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFFCC7B0(v5);
      swift_retain();
      id v26 = v51;
      uint64_t v23 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v23 < 0)
      {
        __break(1u);
        return;
      }
      if (v23 >= 1) {
        a2 = 1;
      }
      else {
        a2 = v23;
      }
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v27 < a2)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      sub_1BFFCC7B0(v5);
      if (v23 >= 1) {
        a2 = 1;
      }
      else {
        a2 = v23;
      }
      uint64_t v24 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      id v25 = v51;
      if (v24 < (unint64_t)a2) {
        goto LABEL_56;
      }
    }
    if (v24 >= v23) {
      break;
    }
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    ;
  }
  if ((v13 & 0xC000000000000001) != 0 && (unint64_t)v23 >= 2)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    uint64_t v28 = a2;
    do
    {
      uint64_t v29 = v28 + 1;
      sub_1C152015C();
      uint64_t v28 = v29;
    }
    while (v23 != v29);
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C15204CC();
    uint64_t v4 = v30;
    a2 = v31;
    unint64_t v7 = v32;
    swift_bridgeObjectRelease_n();
    if ((v7 & 1) == 0) {
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v20 = v13 & 0xFFFFFFFFFFFFFF8;
    uint64_t v4 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v7 = (2 * v23) | 1;
    if ((v7 & 1) == 0) {
      goto LABEL_39;
    }
  }
  sub_1C1520B6C();
  swift_unknownObjectRetain_n();
  uint64_t v34 = swift_dynamicCastClass();
  if (!v34)
  {
    swift_unknownObjectRelease();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  uint64_t v35 = *(void *)(v34 + 16);
  swift_release();
  if (__OFSUB__(v7 >> 1, a2))
  {
LABEL_61:
    __break(1u);
LABEL_62:
    swift_unknownObjectRelease();
LABEL_39:
    uint64_t v33 = sub_1C00B2E14(v20, v4, a2, v7);
    goto LABEL_46;
  }
  if (v35 != (v7 >> 1) - a2) {
    goto LABEL_62;
  }
  uint64_t v33 = swift_dynamicCastClass();
  if (!v33)
  {
    swift_unknownObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC860];
  }
LABEL_46:
  swift_unknownObjectRelease();
  type metadata accessor for FormatLayoutViewContainer();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 80) = 0;
  *(void *)(v36 + 88) = 0;
  *(void *)(v36 + 16) = v49;
  *(void *)(v36 + 24) = v11;
  *(void *)(v36 + 32) = v5;
  *(void *)(v36 + 40) = v48;
  *(unsigned char *)(v36 + 48) = v47;
  *(void *)(v36 + 56) = v6 | 0x3000000000000000;
  *(void *)(v36 + 64) = v51;
  *(void *)(v36 + 72) = v33;
  uint64_t v37 = &v52[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v54 = *(void *)v37;
  *(void *)uint64_t v37 = 0x8000000000000000;
  sub_1BFFCB7A8(v36, v49, v11, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v37 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v39 = sub_1BFFCB7E4();
  uint64_t v40 = *(void *)(v39 + 16);
  if (v40)
  {
    uint64_t v41 = &v52[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
    uint64_t v42 = (long long *)(v39 + 32);
    do
    {
      long long v53 = *v42;
      swift_getObjectType();
      swift_unknownObjectRetain();
      if (sub_1C151C25C())
      {
        swift_beginAccess();
        unint64_t v43 = *(void **)v41;
        swift_unknownObjectRetain();
        char v44 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v41 = v43;
        if ((v44 & 1) == 0)
        {
          unint64_t v43 = sub_1C0EE5C20(0, v43[2] + 1, 1, v43);
          *(void *)uint64_t v41 = v43;
        }
        unint64_t v46 = v43[2];
        unint64_t v45 = v43[3];
        if (v46 >= v45 >> 1)
        {
          unint64_t v43 = sub_1C0EE5C20((void *)(v45 > 1), v46 + 1, 1, v43);
          *(void *)uint64_t v41 = v43;
        }
        _OWORD v43[2] = v46 + 1;
        *(_OWORD *)&v43[2 * v46 + 4] = v53;
        swift_endAccess();
      }
      swift_unknownObjectRelease();
      ++v42;
      --v40;
    }
    while (v40);
  }

  swift_bridgeObjectRelease();
  swift_release();
}

void sub_1C12FA594()
{
}

uint64_t sub_1C12FA5B8()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1C12FA614()
{
  sub_1C12FDFF4(&qword_1EB875310);
  JUMPOUT(0x1C18C4650);
}

uint64_t FormatLayoutView.isSelectable.getter()
{
  uint64_t v1 = (char *)sub_1C12FA76C(v0);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed22WebEmbedViewController_interactionProvider];
  uint64_t v3 = v1;
  id v4 = objc_msgSend(v2, sel_interaction);
  BOOL v5 = (BOOL)v4;
  if (!v4)
  {
LABEL_5:

    return v5;
  }
  unint64_t v6 = (unint64_t)objc_msgSend(v4, sel_type);
  swift_unknownObjectRelease();
  if (v6 < 3)
  {
    BOOL v5 = (v6 & 7) == 2;
    goto LABEL_5;
  }
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

uint64_t sub_1C12FA76C(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers;
  uint64_t result = swift_beginAccess();
  int64_t v3 = 0;
  uint64_t v4 = *(void *)v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*(void *)v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v12 >= v8) {
      return 0;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        return 0;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          return 0;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            return 0;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13)
          {
            int64_t v14 = v12 + 4;
            if (v14 >= v8) {
              return 0;
            }
            unint64_t v13 = *(void *)(v4 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v3 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_27;
                }
                if (v3 >= v8) {
                  return 0;
                }
                unint64_t v13 = *(void *)(v4 + 8 * v3);
                ++v14;
                if (v13) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v3 = v14;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = *(void *)(*(void *)(*(void *)(*(void *)v1 + 56) + 8 * v10) + 56);
    if (((v11 >> 59) & 0x1E | (v11 >> 2) & 1) == 5)
    {
      uint64_t v15 = *(void **)((v11 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      id v16 = v15;
      return (uint64_t)v15;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C12FA8F0()
{
  return FormatLayoutView.isSelectable.getter() & 1;
}

uint64_t FormatLayoutView.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t FormatLayoutView.blueprintViewportMonitor(_:didEndDisplayingCellWith:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      if (v7 < 1) {
        goto LABEL_45;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)MEMORY[0x1C18C7CB0](i, v6);
        }
        else {
          id v9 = *(id *)(v6 + 8 * i + 32);
        }
        unint64_t v10 = v9;
        sub_1C151C41C();
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v11 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = *v11 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(*v11 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(*v11 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v21 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v22 = v21 | (v18 << 6);
LABEL_33:
    unint64_t v26 = *(void *)(*(void *)(*(void *)(v12 + 56) + 8 * v22) + 56);
    switch((v26 >> 59) & 0x1E | (v26 >> 2) & 1)
    {
      case 4uLL:
        uint64_t v19 = *(void **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        id v20 = v19;
        FormatLayoutView.blueprintViewportMonitor(_:didEndDisplayingCellWith:)(a1, a2);
        swift_release();

        goto LABEL_14;
      case 0xBuLL:
        uint64_t v27 = *(char **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v28 = *(void *)&v27[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v28) {
          continue;
        }
        uint64_t v29 = *(void *)(v28 + qword_1EB870530);
        goto LABEL_40;
      case 0xCuLL:
        uint64_t v30 = *(char **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        swift_beginAccess();
        int v32 = *(unsigned __int8 *)(v31 + 17);
        *(unsigned char *)(v31 + 17) = 0;
        if ((v32 & 0xFFFFFFC1) == 0) {
          continue;
        }
        swift_retain();
        swift_retain();
        uint64_t v33 = v30;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_14;
      case 0xDuLL:
        uint64_t v27 = *(char **)((v26 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v34 = *(void *)&v27[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v34) {
          continue;
        }
        uint64_t v29 = *(void *)(v34 + qword_1EB870530);
LABEL_40:
        swift_beginAccess();
        int v35 = *(unsigned __int8 *)(v29 + 17);
        *(unsigned char *)(v29 + 17) = 0;
        if ((v35 & 0xFFFFFFC1) != 0)
        {
          swift_retain();
          swift_retain();
          uint64_t v36 = v27;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_14:
          swift_release();
        }
        break;
      default:
        continue;
    }
  }
  int64_t v23 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v23 >= v17) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v13 + 8 * v23);
  ++v18;
  if (v24) {
    goto LABEL_32;
  }
  int64_t v18 = v23 + 1;
  if (v23 + 1 >= v17) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v13 + 8 * v18);
  if (v24) {
    goto LABEL_32;
  }
  int64_t v18 = v23 + 2;
  if (v23 + 2 >= v17) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v13 + 8 * v18);
  if (v24) {
    goto LABEL_32;
  }
  int64_t v18 = v23 + 3;
  if (v23 + 3 >= v17) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v13 + 8 * v18);
  if (v24)
  {
LABEL_32:
    unint64_t v16 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
    goto LABEL_33;
  }
  int64_t v25 = v23 + 4;
  if (v25 < v17)
  {
    unint64_t v24 = *(void *)(v13 + 8 * v25);
    if (!v24)
    {
      while (1)
      {
        int64_t v18 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          break;
        }
        if (v18 >= v17) {
          return swift_release();
        }
        unint64_t v24 = *(void *)(v13 + 8 * v18);
        ++v25;
        if (v24) {
          goto LABEL_32;
        }
      }
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      JUMPOUT(0x1C12FAD68);
    }
    int64_t v18 = v25;
    goto LABEL_32;
  }
  return swift_release();
}

uint64_t FormatLayoutView.blueprintViewportMonitorDidEndDisplayingSupplementaryView(_:)(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(*v2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(*v2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v7)
  {
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v13 = v12 | (v9 << 6);
LABEL_24:
    unint64_t v17 = *(void *)(*(void *)(*(void *)(v3 + 56) + 8 * v13) + 56);
    switch((v17 >> 59) & 0x1E | (v17 >> 2) & 1)
    {
      case 4uLL:
        unint64_t v10 = *(void **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        swift_retain();
        id v11 = v10;
        FormatLayoutView.blueprintViewportMonitorDidEndDisplayingSupplementaryView(_:)(a1);
        swift_release();

        goto LABEL_5;
      case 0xBuLL:
        int64_t v18 = *(char **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v19 = *(void *)&v18[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_layeredMediaView];
        if (!v19) {
          continue;
        }
        uint64_t v20 = *(void *)(v19 + qword_1EB870530);
        goto LABEL_31;
      case 0xCuLL:
        unint64_t v21 = *(char **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
        swift_beginAccess();
        int v23 = *(unsigned __int8 *)(v22 + 17);
        *(unsigned char *)(v22 + 17) = 0;
        if ((v23 & 0xFFFFFFC1) == 0) {
          continue;
        }
        swift_retain();
        swift_retain();
        unint64_t v24 = v21;
        LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
        swift_release();

        goto LABEL_5;
      case 0xDuLL:
        int64_t v18 = *(char **)((v17 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v25 = *(void *)&v18[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView];
        if (!v25) {
          continue;
        }
        uint64_t v20 = *(void *)(v25 + qword_1EB870530);
LABEL_31:
        swift_beginAccess();
        int v26 = *(unsigned __int8 *)(v20 + 17);
        *(unsigned char *)(v20 + 17) = 0;
        if ((v26 & 0xFFFFFFC1) != 0)
        {
          swift_retain();
          swift_retain();
          uint64_t v27 = v18;
          swift_retain();
          LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
          swift_release();

          swift_release();
LABEL_5:
          swift_release();
        }
        break;
      default:
        continue;
    }
  }
  int64_t v14 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v14 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v14);
  ++v9;
  if (v15) {
    goto LABEL_23;
  }
  int64_t v9 = v14 + 1;
  if (v14 + 1 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v9);
  if (v15) {
    goto LABEL_23;
  }
  int64_t v9 = v14 + 2;
  if (v14 + 2 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v9);
  if (v15) {
    goto LABEL_23;
  }
  int64_t v9 = v14 + 3;
  if (v14 + 3 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v9);
  if (v15)
  {
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
    goto LABEL_24;
  }
  int64_t v16 = v14 + 4;
  if (v16 < v8)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v9 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v9 >= v8) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v4 + 8 * v9);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
LABEL_35:
      __break(1u);
      JUMPOUT(0x1C12FB0E8);
    }
    int64_t v9 = v16;
    goto LABEL_23;
  }
  return swift_release();
}

uint64_t FormatLayoutView.accessibilityContainerType.getter()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    return 0;
  }
  swift_retain();
  uint64_t v1 = sub_1C0CD9F5C();
  __int16 v3 = v2;
  swift_release();
  if ((v3 & 0x100) != 0) {
    return 0;
  }
  if (v3) {
    return 4 * (v1 == 0);
  }
  return v1;
}

uint64_t (*FormatLayoutView.accessibilityContainerType.modify(uint64_t *a1))()
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)
    || (swift_retain(), uint64_t v3 = sub_1C0CD9F5C(), v5 = v4, swift_release(), (v5 & 0x100) != 0))
  {
    uint64_t v3 = 0;
  }
  else if (v5)
  {
    uint64_t v3 = 4 * (v3 == 0);
  }
  *a1 = v3;
  return nullsub_1;
}

BOOL FormatLayoutView.isAccessibilityElement.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)
    && (swift_retain(), uint64_t v1 = sub_1C0CD9F5C(), v3 = v2, swift_release(), (v3 & 0x101) == 1))
  {
    return v1 != 0;
  }
  else
  {
    return 0;
  }
}

uint64_t (*FormatLayoutView.isAccessibilityElement.modify(BOOL *a1))()
{
  BOOL v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)
    && (swift_retain(), uint64_t v3 = sub_1C0CD9F5C(), v5 = v4, swift_release(), (v5 & 0x101) == 1)
    && v3 != 0;
  *a1 = v6;
  return nullsub_1;
}

uint64_t FormatLayoutView.accessibilityElements.getter()
{
  return sub_1C12FC580((uint64_t (*)(uint64_t))sub_1C0CDA1B4);
}

uint64_t (*FormatLayoutView.accessibilityElements.modify(uint64_t *a1))()
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    uint64_t v3 = sub_1C0CDA1B4();
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  *a1 = v3;
  return destroy for FormatOptionBindingModifier;
}

uint64_t FormatLayoutView.accessibilityIdentifier.getter()
{
  return sub_1C12FBD84((void (*)(uint64_t, uint64_t))sub_1C12FD1C0);
}

uint64_t (*FormatLayoutView.accessibilityIdentifier.modify(uint64_t *a1))()
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    goto LABEL_9;
  }
  swift_retain();
  uint64_t v3 = sub_1C0CD9F5C();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    goto LABEL_10;
  }
  unint64_t v5 = sub_1C0CD9BCC();
  swift_retain();
  BOOL v6 = sub_1C12FD1C0(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C12FDF34((unint64_t *)&unk_1EB879F40);
  uint64_t v7 = sub_1C151E92C();
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1C12FDF34((unint64_t *)&qword_1EB879F30);
  uint64_t v8 = sub_1C151E55C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityLabel.getter()
{
  return sub_1C12FBD84((void (*)(uint64_t, uint64_t))sub_1C12FD394);
}

uint64_t (*FormatLayoutView.accessibilityLabel.modify(uint64_t *a1))()
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    goto LABEL_9;
  }
  swift_retain();
  uint64_t v3 = sub_1C0CD9F5C();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    goto LABEL_10;
  }
  unint64_t v5 = sub_1C0CD9BCC();
  swift_retain();
  BOOL v6 = sub_1C12FD394(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C12FDF34((unint64_t *)&unk_1EB879F40);
  uint64_t v7 = sub_1C151E92C();
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1C12FDF34((unint64_t *)&qword_1EB879F30);
  uint64_t v8 = sub_1C151E55C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityValue.getter()
{
  return sub_1C12FBD84((void (*)(uint64_t, uint64_t))sub_1C12FD568);
}

uint64_t (*FormatLayoutView.accessibilityValue.modify(uint64_t *a1))()
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    goto LABEL_9;
  }
  swift_retain();
  uint64_t v3 = sub_1C0CD9F5C();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    goto LABEL_10;
  }
  unint64_t v5 = sub_1C0CD9BCC();
  swift_retain();
  BOOL v6 = sub_1C12FD568(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C12FDF34((unint64_t *)&unk_1EB879F40);
  uint64_t v7 = sub_1C151E92C();
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1C12FDF34((unint64_t *)&qword_1EB879F30);
  uint64_t v8 = sub_1C151E55C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.ts_accessibilityElementHelp.getter()
{
  return sub_1C12FBD84((void (*)(uint64_t, uint64_t))sub_1C12FD73C);
}

uint64_t (*FormatLayoutView.ts_accessibilityElementHelp.modify(uint64_t *a1))()
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    goto LABEL_9;
  }
  swift_retain();
  uint64_t v3 = sub_1C0CD9F5C();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    goto LABEL_10;
  }
  unint64_t v5 = sub_1C0CD9BCC();
  swift_retain();
  BOOL v6 = sub_1C12FD73C(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C12FDF34((unint64_t *)&unk_1EB879F40);
  uint64_t v7 = sub_1C151E92C();
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1C12FDF34((unint64_t *)&qword_1EB879F30);
  uint64_t v8 = sub_1C151E55C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityHint.getter()
{
  return sub_1C12FBD84((void (*)(uint64_t, uint64_t))sub_1C12FD910);
}

uint64_t sub_1C12FBD84(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer);
  if (v2)
  {
    swift_retain();
    uint64_t v4 = sub_1C0CD9F5C();
    if ((v5 & 0x100) != 0 || (v5 & 1) != 0 && !v4)
    {
      swift_release();
    }
    else
    {
      uint64_t v8 = sub_1C0CD9BCC();
      swift_retain();
      a1(v8, v2);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1C12FDF34((unint64_t *)&unk_1EB879F40);
      if (*(void *)(sub_1C151E92C() + 16))
      {
        sub_1C12FDF34((unint64_t *)&qword_1EB879F30);
        uint64_t v6 = sub_1C151E55C();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v6;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t FormatLayoutView.accessibilityHint.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayoutView.accessibilityHint.modify(uint64_t *a1))()
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    goto LABEL_9;
  }
  swift_retain();
  uint64_t v3 = sub_1C0CD9F5C();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    goto LABEL_10;
  }
  unint64_t v5 = sub_1C0CD9BCC();
  swift_retain();
  uint64_t v6 = sub_1C12FD910(v5);
  swift_release();
  swift_bridgeObjectRelease();
  a1[2] = (uint64_t)v6;
  sub_1BFE9E0D8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C12FDF34((unint64_t *)&unk_1EB879F40);
  uint64_t v7 = sub_1C151E92C();
  if (!*(void *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  a1[2] = v7;
  sub_1C12FDF34((unint64_t *)&qword_1EB879F30);
  uint64_t v8 = sub_1C151E55C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v10;
  return destroy for FormatSelector;
}

id sub_1C12FC154(char *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer];
  if (v3)
  {
    unint64_t v5 = a1;
    uint64_t v6 = swift_retain();
    a3(v6);
    uint64_t v8 = v7;

    swift_release();
    if (v8)
    {
      uint64_t v3 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = 0;
    }
  }
  return v3;
}

uint64_t FormatLayoutView.accessibilityLanguage.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    uint64_t v1 = sub_1C0CD9F5C();
    if ((v2 & 0x100) != 0 || (v2 & 1) != 0 && !v1)
    {
      swift_release();
    }
    else
    {
      unint64_t v5 = sub_1C0CD9BCC();
      swift_retain();
      uint64_t v6 = sub_1C12FDAE4(v5);
      swift_bridgeObjectRelease();
      swift_release();
      if (v6[2])
      {
        uint64_t v3 = v6[4];
        swift_bridgeObjectRetain();
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t (*FormatLayoutView.accessibilityLanguage.modify(void *a1))()
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    goto LABEL_9;
  }
  swift_retain();
  uint64_t v3 = sub_1C0CD9F5C();
  if ((v4 & 0x100) != 0 || (v4 & 1) != 0 && !v3)
  {
LABEL_8:
    swift_release();
LABEL_9:
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    goto LABEL_10;
  }
  unint64_t v5 = sub_1C0CD9BCC();
  swift_retain();
  uint64_t v6 = sub_1C12FDAE4(v5);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v6[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v8 = v6[4];
  uint64_t v7 = v6[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_10:
  *a1 = v8;
  a1[1] = v7;
  return destroy for FormatSelectorsExpression;
}

uint64_t FormatLayoutView.accessibilityTraits.getter()
{
  return sub_1C12FC580((uint64_t (*)(uint64_t))sub_1C0CDB088);
}

uint64_t (*FormatLayoutView.accessibilityTraits.modify(uint64_t *a1))()
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    uint64_t v3 = sub_1C0CDB088();
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  *a1 = v3;
  return nullsub_1;
}

uint64_t FormatLayoutView.accessibilityCustomActions.getter()
{
  return sub_1C12FC580((uint64_t (*)(uint64_t))sub_1C0CDB3AC);
}

uint64_t sub_1C12FC580(uint64_t (*a1)(uint64_t))
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer)) {
    return 0;
  }
  uint64_t v3 = swift_retain();
  uint64_t v4 = a1(v3);
  swift_release();
  return v4;
}

uint64_t (*FormatLayoutView.accessibilityCustomActions.modify(uint64_t *a1))()
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer))
  {
    swift_retain();
    uint64_t v3 = sub_1C0CDB3AC();
    swift_release();
  }
  else
  {
    uint64_t v3 = 0;
  }
  *a1 = v3;
  return destroy for FeedEditionConfig.RepoolInterval;
}

uint64_t sub_1C12FC654()
{
  swift_beginAccess();
  id v1 = v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1C12FCEB8(v2);
  swift_bridgeObjectRelease();

  v13[0] = v3;
  id v4 = v1;
  swift_bridgeObjectRetain();
  sub_1C1301268(v13, v4);
  swift_bridgeObjectRelease();

  unint64_t v5 = v13[0];
  int64_t v6 = v13[0][2];
  if (v6)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1BFD431D4(0, v6, 0);
    uint64_t v7 = (uint64_t)(v5 + 4);
    uint64_t v8 = v16;
    do
    {
      sub_1C13015E0(v7, (uint64_t)v13, (uint64_t (*)(void))sub_1C0607558);
      sub_1BFF6A008((uint64_t)&v14, (uint64_t)v12);
      sub_1BFF993A8(v12, v15);
      sub_1BFEE31C0((uint64_t)v13, (uint64_t (*)(void))sub_1C0607558);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFD431D4(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v16;
      }
      unint64_t v10 = *(void *)(v8 + 16);
      unint64_t v9 = *(void *)(v8 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BFD431D4(v9 > 1, v10 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v10 + 1;
      sub_1BFF993A8(v15, (_OWORD *)(v8 + 32 * v10 + 32));
      v7 += 80;
      --v6;
    }
    while (v6);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v8;
}

void sub_1C12FC85C()
{
}

void sub_1C12FC880()
{
}

void sub_1C12FC8A4()
{
}

void sub_1C12FC8C8()
{
}

void sub_1C12FC8EC()
{
}

Swift::Bool __swiftcall FormatLayoutView.gestureRecognizer(_:shouldRequireFailureOf:)(UIGestureRecognizer _, UIGestureRecognizer shouldRequireFailureOf)
{
  id v2 = [(objc_class *)shouldRequireFailureOf.super.isa view];
  if (v2)
  {
    uint64_t v3 = v2;
    type metadata accessor for FormatButton();
    id v2 = (id)swift_dynamicCastClass();
    if (!v2)
    {

      id v2 = 0;
    }
  }
  Swift::Bool v4 = v2 != 0;

  return v4;
}

void __swiftcall FormatLayoutView.sourceView(identifier:)(UIView_optional *__return_ptr retstr, Swift::String identifier)
{
  uint64_t v3 = v2;
  object = identifier._object;
  uint64_t countAndFlagsBits = identifier._countAndFlagsBits;
  sub_1BFEE17D4(0, &qword_1EB873480, type metadata accessor for FeedItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v34 - v7;
  uint64_t v9 = type metadata accessor for FeedItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)&v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem];
  swift_beginAccess();
  sub_1C0492580(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BFEE4C00((uint64_t)v8, &qword_1EB873480, type metadata accessor for FeedItem);
    goto LABEL_3;
  }
  sub_1BFEE4958((uint64_t)v8, (uint64_t)v12);
  if (FeedItem.identifier.getter() == countAndFlagsBits && v30 == object)
  {
    swift_bridgeObjectRelease();
    sub_1BFEE31C0((uint64_t)v12, type metadata accessor for FeedItem);
LABEL_36:
    uint64_t v33 = v3;
    return;
  }
  char v32 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  sub_1BFEE31C0((uint64_t)v12, type metadata accessor for FeedItem);
  if (v32) {
    goto LABEL_36;
  }
LABEL_3:
  v34[0] = countAndFlagsBits;
  v34[1] = object;
  uint64_t v14 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)v14 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(*(void *)v14 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(*(void *)v14 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (v19) {
    goto LABEL_8;
  }
LABEL_9:
  int64_t v24 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    if (v24 < v20)
    {
      unint64_t v25 = *(void *)(v16 + 8 * v24);
      ++v21;
      if (v25) {
        goto LABEL_22;
      }
      int64_t v21 = v24 + 1;
      if (v24 + 1 >= v20) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v16 + 8 * v21);
      if (v25) {
        goto LABEL_22;
      }
      int64_t v21 = v24 + 2;
      if (v24 + 2 >= v20) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v16 + 8 * v21);
      if (v25)
      {
LABEL_22:
        unint64_t v19 = (v25 - 1) & v25;
        for (unint64_t i = __clz(__rbit64(v25)) + (v21 << 6); ; unint64_t i = v22 | (v21 << 6))
        {
          uint64_t v37 = *(void **)(*(void *)(*(void *)(v15 + 56) + 8 * i) + 64);
          uint64_t v27 = v37;
          sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
          sub_1C12FDF9C();
          swift_retain();
          id v28 = v27;
          if (swift_dynamicCast())
          {
            sub_1BFC773DC(v35, (uint64_t)v38);
            __swift_project_boxed_opaque_existential_1(v38, v38[3]);
            uint64_t v29 = sub_1C151C0CC();
            swift_release();
            if (v29)
            {
              swift_release();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
              return;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
            if (!v19) {
              goto LABEL_9;
            }
          }
          else
          {
            uint64_t v36 = 0;
            memset(v35, 0, sizeof(v35));
            swift_release();
            sub_1BFEE4C00((uint64_t)v35, &qword_1EA1AE180, (uint64_t (*)(uint64_t))sub_1C12FDF9C);
            if (!v19) {
              goto LABEL_9;
            }
          }
LABEL_8:
          unint64_t v22 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
        }
      }
      int64_t v26 = v24 + 3;
      if (v26 < v20)
      {
        unint64_t v25 = *(void *)(v16 + 8 * v26);
        if (v25)
        {
          int64_t v21 = v26;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v21 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            goto LABEL_38;
          }
          if (v21 >= v20) {
            break;
          }
          unint64_t v25 = *(void *)(v16 + 8 * v21);
          ++v26;
          if (v25) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_33:
    swift_release();
    return;
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1C12FCE94(uint64_t a1@<X0>, UIView_optional *a2@<X8>)
{
}

uint64_t sub_1C12FCEB8(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  unint64_t v43 = (void *)MEMORY[0x1E4FBC860];
  if (v5) {
    goto LABEL_8;
  }
LABEL_14:
  int64_t v26 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v26 < v6)
    {
      unint64_t v27 = *(void *)(v2 + 8 * v26);
      ++v8;
      if (v27) {
        goto LABEL_29;
      }
      int64_t v8 = v26 + 1;
      if (v26 + 1 >= v6) {
        goto LABEL_34;
      }
      unint64_t v27 = *(void *)(v2 + 8 * v8);
      if (v27) {
        goto LABEL_29;
      }
      int64_t v8 = v26 + 2;
      if (v26 + 2 >= v6) {
        goto LABEL_34;
      }
      unint64_t v27 = *(void *)(v2 + 8 * v8);
      if (v27) {
        goto LABEL_29;
      }
      int64_t v8 = v26 + 3;
      if (v26 + 3 >= v6) {
        goto LABEL_34;
      }
      unint64_t v27 = *(void *)(v2 + 8 * v8);
      if (v27)
      {
LABEL_29:
        unint64_t v5 = (v27 - 1) & v27;
        for (unint64_t i = __clz(__rbit64(v27)) + (v8 << 6); ; unint64_t i = v20 | (v8 << 6))
        {
          uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8 * i);
          unsigned int v30 = *(unsigned __int8 *)(v29 + 48);
          if (v30 > 0x3F)
          {
            *(void *)&long long v38 = 0;
            BYTE8(v38) = 1;
          }
          else
          {
            uint64_t v31 = *(void *)(v29 + 40);
            int v32 = v30 & 1;
            if (v32) {
              uint64_t v31 = 0;
            }
            *(void *)&long long v38 = v31;
            BYTE8(v38) = v32;
          }
          unint64_t v9 = *(void *)(v29 + 56);
          swift_retain();
          uint64_t v10 = (void *)sub_1BFFCB630(v9);
          objc_msgSend(v10, sel_frame);
          uint64_t v12 = v11;
          uint64_t v14 = v13;
          uint64_t v16 = v15;
          uint64_t v18 = v17;

          *(void *)&long long v39 = v12;
          *((void *)&v39 + 1) = v14;
          *(void *)&long long v40 = v16;
          *((void *)&v40 + 1) = v18;
          unint64_t v19 = sub_1BFFCB630(v9);
          *((void *)&v42 + 1) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
          *(void *)&long long v41 = v19;
          swift_release();
          if (*((void *)&v42 + 1))
          {
            long long v35 = v40;
            long long v36 = v41;
            long long v37 = v42;
            long long v33 = v38;
            long long v34 = v39;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_1C0EE7AD0(0, v43[2] + 1, 1, v43);
              unint64_t v43 = (void *)result;
            }
            unint64_t v23 = v43[2];
            unint64_t v22 = v43[3];
            if (v23 >= v22 >> 1)
            {
              uint64_t result = (uint64_t)sub_1C0EE7AD0((void *)(v22 > 1), v23 + 1, 1, v43);
              unint64_t v43 = (void *)result;
            }
            int64_t v24 = v43;
            _OWORD v43[2] = v23 + 1;
            unint64_t v25 = &v24[10 * v23];
            void v25[2] = v33;
            v25[5] = v36;
            v25[6] = v37;
            v25[3] = v34;
            v25[4] = v35;
            if (!v5) {
              goto LABEL_14;
            }
          }
          else
          {
            uint64_t result = sub_1BFEE4C00((uint64_t)&v38, &qword_1EA1AE188, (uint64_t (*)(uint64_t))sub_1C0607558);
            if (!v5) {
              goto LABEL_14;
            }
          }
LABEL_8:
          unint64_t v20 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      int64_t v28 = v26 + 4;
      if (v28 < v6)
      {
        unint64_t v27 = *(void *)(v2 + 8 * v28);
        if (v27)
        {
          int64_t v8 = v28;
          goto LABEL_29;
        }
        while (1)
        {
          int64_t v8 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_36;
          }
          if (v8 >= v6) {
            break;
          }
          unint64_t v27 = *(void *)(v2 + 8 * v8);
          ++v28;
          if (v27) {
            goto LABEL_29;
          }
        }
      }
    }
LABEL_34:
    swift_release();
    return (uint64_t)v43;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_1C12FD1C0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v3 = v1 & 0xC000000000000001;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      unint64_t v19 = v1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v3)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](v5 - 4, v1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(unsigned char *)(*(void *)(v7 + 16) + 32) == 18)
        {
          unint64_t v9 = v1;
          uint64_t v10 = v2;
          uint64_t v11 = *(void *)(v7 + 24);
          uint64_t v20 = v11;
          sub_1BFF51F0C(v11);
          uint64_t v12 = sub_1C0CDAA44(&v20);
          uint64_t v14 = v13;
          sub_1BFE14324(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
            }
            unint64_t v16 = v4[2];
            unint64_t v15 = v4[3];
            if (v16 >= v15 >> 1) {
              uint64_t v4 = sub_1BFEF9B68((void *)(v15 > 1), v16 + 1, 1, v4);
            }
            v4[2] = v16 + 1;
            uint64_t v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          uint64_t v2 = v10;
          unint64_t v1 = v9;
          unint64_t v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_1C12FD394(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v3 = v1 & 0xC000000000000001;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      unint64_t v19 = v1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v3)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](v5 - 4, v1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(unsigned char *)(*(void *)(v7 + 16) + 32) == 19)
        {
          unint64_t v9 = v1;
          uint64_t v10 = v2;
          uint64_t v11 = *(void *)(v7 + 24);
          uint64_t v20 = v11;
          sub_1BFF51F0C(v11);
          uint64_t v12 = sub_1C0CDAA44(&v20);
          uint64_t v14 = v13;
          sub_1BFE14324(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
            }
            unint64_t v16 = v4[2];
            unint64_t v15 = v4[3];
            if (v16 >= v15 >> 1) {
              uint64_t v4 = sub_1BFEF9B68((void *)(v15 > 1), v16 + 1, 1, v4);
            }
            v4[2] = v16 + 1;
            uint64_t v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          uint64_t v2 = v10;
          unint64_t v1 = v9;
          unint64_t v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_1C12FD568(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v3 = v1 & 0xC000000000000001;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      unint64_t v19 = v1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v3)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](v5 - 4, v1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(unsigned char *)(*(void *)(v7 + 16) + 32) == 20)
        {
          unint64_t v9 = v1;
          uint64_t v10 = v2;
          uint64_t v11 = *(void *)(v7 + 24);
          uint64_t v20 = v11;
          sub_1BFF51F0C(v11);
          uint64_t v12 = sub_1C0CDAA44(&v20);
          uint64_t v14 = v13;
          sub_1BFE14324(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
            }
            unint64_t v16 = v4[2];
            unint64_t v15 = v4[3];
            if (v16 >= v15 >> 1) {
              uint64_t v4 = sub_1BFEF9B68((void *)(v15 > 1), v16 + 1, 1, v4);
            }
            v4[2] = v16 + 1;
            uint64_t v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          uint64_t v2 = v10;
          unint64_t v1 = v9;
          unint64_t v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_1C12FD73C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v3 = v1 & 0xC000000000000001;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      unint64_t v19 = v1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v3)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](v5 - 4, v1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(unsigned char *)(*(void *)(v7 + 16) + 32) == 21)
        {
          unint64_t v9 = v1;
          uint64_t v10 = v2;
          uint64_t v11 = *(void *)(v7 + 24);
          uint64_t v20 = v11;
          sub_1BFF51F0C(v11);
          uint64_t v12 = sub_1C0CDAA44(&v20);
          uint64_t v14 = v13;
          sub_1BFE14324(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
            }
            unint64_t v16 = v4[2];
            unint64_t v15 = v4[3];
            if (v16 >= v15 >> 1) {
              uint64_t v4 = sub_1BFEF9B68((void *)(v15 > 1), v16 + 1, 1, v4);
            }
            v4[2] = v16 + 1;
            uint64_t v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          uint64_t v2 = v10;
          unint64_t v1 = v9;
          unint64_t v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_1C12FD910(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v3 = v1 & 0xC000000000000001;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      unint64_t v19 = v1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v3)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](v5 - 4, v1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(unsigned char *)(*(void *)(v7 + 16) + 32) == 22)
        {
          unint64_t v9 = v1;
          uint64_t v10 = v2;
          uint64_t v11 = *(void *)(v7 + 24);
          uint64_t v20 = v11;
          sub_1BFF51F0C(v11);
          uint64_t v12 = sub_1C0CDAA44(&v20);
          uint64_t v14 = v13;
          sub_1BFE14324(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
            }
            unint64_t v16 = v4[2];
            unint64_t v15 = v4[3];
            if (v16 >= v15 >> 1) {
              uint64_t v4 = sub_1BFEF9B68((void *)(v15 > 1), v16 + 1, 1, v4);
            }
            v4[2] = v16 + 1;
            uint64_t v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          uint64_t v2 = v10;
          unint64_t v1 = v9;
          unint64_t v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_1C12FDAE4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v3 = v1 & 0xC000000000000001;
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      unint64_t v19 = v1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v3)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](v5 - 4, v1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(unsigned char *)(*(void *)(v7 + 16) + 32) == 23)
        {
          unint64_t v9 = v1;
          uint64_t v10 = v2;
          uint64_t v11 = *(void *)(v7 + 24);
          uint64_t v20 = v11;
          sub_1BFF51F0C(v11);
          uint64_t v12 = sub_1C0CDAA44(&v20);
          uint64_t v14 = v13;
          sub_1BFE14324(v11);
          swift_release();
          if (v14)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
            }
            unint64_t v16 = v4[2];
            unint64_t v15 = v4[3];
            if (v16 >= v15 >> 1) {
              uint64_t v4 = sub_1BFEF9B68((void *)(v15 > 1), v16 + 1, 1, v4);
            }
            v4[2] = v16 + 1;
            uint64_t v17 = &v4[2 * v16];
            v17[4] = v12;
            v17[5] = v14;
          }
          uint64_t v2 = v10;
          unint64_t v1 = v9;
          unint64_t v3 = v19;
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v2) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C12FDCB8(unint64_t a1, id a2)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x1C18C7CB0](v5, a1);
LABEL_9:
        unint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        if (v6 == a2)
        {
        }
        else
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
        }
        ++v5;
        if (v7 == v4) {
          return v9;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = sub_1C15204BC();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

id sub_1C12FDE08(unint64_t a1, void *a2, uint64_t a3, double a4, double a5)
{
  if (a1 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1C15204BC())
  {
    uint64_t v11 = 4;
    while (1)
    {
      id v12 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](v11 - 4, a1) : *(id *)(a1 + 8 * v11);
      uint64_t v13 = v12;
      uint64_t v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      objc_msgSend(a2, sel_convertPoint_toCoordinateSpace_, v12, a4, a5);
      id v15 = objc_msgSend(v13, sel_pointInside_withEvent_, a3);

      if ((v15 & 1) == 0)
      {
        ++v11;
        if (v14 != v10) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  id v15 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C12FDF34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE9E0D8(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C12FDF9C()
{
  unint64_t result = qword_1EA1AE178;
  if (!qword_1EA1AE178)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1AE178);
  }
  return result;
}

uint64_t sub_1C12FDFF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatLayoutView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12FE038()
{
  return type metadata accessor for FormatLayoutView();
}

void sub_1C12FE040()
{
  sub_1BFEE17D4(319, &qword_1EB873480, type metadata accessor for FeedItem, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1C12FE160(void *a1, unint64_t a2, void *a3)
{
  if (*a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v12) {
      return;
    }
  }
  else if (!*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  id v6 = (void *)sub_1BFFCB238((uint64_t (*)(uint64_t))sub_1C0378E04);
  if (!v6)
  {
    if (*a3 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v7 = (void *)sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (!__OFSUB__(v7, 1)) {
        goto LABEL_6;
      }
    }
    else
    {
      unint64_t v7 = *(void **)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!__OFSUB__(v7, 1))
      {
LABEL_6:
        id v6 = (void *)sub_1C037869C();
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_27:
    sub_1C151EC8C();
    goto LABEL_21;
  }
LABEL_7:
  unint64_t v7 = v6;
  int v8 = (a2 >> 59) & 0x1E | (a2 >> 2) & 1;
  if ((v8 - 3) < 0x11 || !v8)
  {
    id v13 = v6;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    id v9 = a1;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    goto LABEL_13;
  }
  if (v8 == 1)
  {
    id v13 = *(id *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    objc_msgSend(a1, sel_setMaskView_);
  }
  else
  {
    id v13 = *(id *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v10 = (void *)sub_1C151CD3C();
    objc_msgSend(a1, sel_setMaskView_, v10);
  }
  id v11 = a1;
  MEMORY[0x1C18C66D0]();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_27;
  }
LABEL_21:
  sub_1C151ECEC();
  sub_1C151EBEC();

LABEL_13:
}

uint64_t sub_1C12FE414(uint64_t result, uint64_t a2, void *a3, uint64_t *a4)
{
  if (!*(void *)(a2 + 16)) {
    return result;
  }
  unint64_t v7 = result;
  sub_1C1520DBC();
  sub_1C151E77C();
  uint64_t result = sub_1C1520E0C();
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = result & ~v8;
  if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return result;
  }
  uint64_t v10 = ~v8;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(a2 + 48) + v9))
    {
      case 2:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v11 = sub_1C1520A9C();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
        {
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            return result;
          }
          continue;
        }
LABEL_9:
        if (qword_1EB88CB30 != -1) {
          swift_once();
        }
        uint64_t v12 = *(void *)(qword_1EB93C930 + 112);
        swift_beginAccess();
        swift_retain();
        id v13 = (void *)sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, sub_1C037869C);
        uint64_t v14 = swift_endAccess();
        if (!v13)
        {
          uint64_t v15 = *(void *)(v12 + 64);
          BOOL v16 = __OFADD__(v15, 1);
          uint64_t v17 = v15 + 1;
          if (v16)
          {
            __break(1u);
            JUMPOUT(0x1C12FE6F4);
          }
          *(void *)(v12 + 64) = v17;
          id v13 = (void *)(*(uint64_t (**)(uint64_t))(v12 + 40))(v14);
        }
        swift_release();
        sub_1C12FE160(v13, v7, a3);
        id v18 = v13;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = *a4;
        *a4 = 0x8000000000000000;
        sub_1C106812C((uint64_t)v13, 0, 2u, isUniquelyReferenced_nonNull_native);
        *a4 = v20;

        return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C12FE70C(uint64_t result, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v7 = result;
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v9 = result & ~v8;
    if ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v10 = ~v8;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v9))
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
            char v11 = sub_1C1520A9C();
            uint64_t result = swift_bridgeObjectRelease();
            if (v11) {
              goto LABEL_9;
            }
            unint64_t v9 = (v9 + 1) & v10;
            if ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9)) {
              continue;
            }
            break;
          default:
            swift_bridgeObjectRelease();
LABEL_9:
            if (qword_1EB88CB30 != -1) {
              swift_once();
            }
            uint64_t v12 = *(void *)(qword_1EB93C930 + 120);
            swift_beginAccess();
            swift_retain();
            id v13 = (void *)sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, sub_1C037869C);
            uint64_t v14 = swift_endAccess();
            if (!v13)
            {
              uint64_t v15 = *(void *)(v12 + 64);
              BOOL v16 = __OFADD__(v15, 1);
              uint64_t v17 = v15 + 1;
              if (v16)
              {
                __break(1u);
                JUMPOUT(0x1C12FE9E4);
              }
              *(void *)(v12 + 64) = v17;
              id v13 = (void *)(*(uint64_t (**)(uint64_t))(v12 + 40))(v14);
            }
            swift_release();
            sub_1C12FE160(v13, v7, a3);
            id v18 = v13;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v20 = *a4;
            *a4 = 0x8000000000000000;
            sub_1C106812C((uint64_t)v13, 1, 0, isUniquelyReferenced_nonNull_native);
            *a4 = v20;

            uint64_t result = swift_bridgeObjectRelease();
            break;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_1C12FE9FC(uint64_t result, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v7 = result;
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v9 = result & ~v8;
    if ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v10 = ~v8;
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v9))
        {
          case 1:
            swift_bridgeObjectRelease();
            goto LABEL_9;
          default:
            char v11 = sub_1C1520A9C();
            uint64_t result = swift_bridgeObjectRelease();
            if (v11)
            {
LABEL_9:
              id v12 = objc_msgSend(objc_allocWithZone((Class)sub_1C151B16C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
              sub_1C12FE160(v12, v7, a3);
              id v13 = v12;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v15 = *a4;
              *a4 = 0x8000000000000000;
              sub_1C106812C((uint64_t)v12, 2, 1u, isUniquelyReferenced_nonNull_native);
              *a4 = v15;

              return swift_bridgeObjectRelease();
            }
            unint64_t v9 = (v9 + 1) & v10;
            if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
              return result;
            }
            break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C12FEC68(uint64_t result, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v7 = result;
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v9 = result & ~v8;
    if ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v10 = ~v8;
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v9))
        {
          case 3:
            swift_bridgeObjectRelease();
            goto LABEL_9;
          default:
            char v11 = sub_1C1520A9C();
            uint64_t result = swift_bridgeObjectRelease();
            if (v11)
            {
LABEL_9:
              id v12 = objc_msgSend(objc_allocWithZone((Class)sub_1C151CD7C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
              sub_1C12FE160(v12, v7, a3);
              id v13 = v12;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v15 = *a4;
              *a4 = 0x8000000000000000;
              sub_1C106812C((uint64_t)v12, 3, 3u, isUniquelyReferenced_nonNull_native);
              *a4 = v15;

              return swift_bridgeObjectRelease();
            }
            unint64_t v9 = (v9 + 1) & v10;
            if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
              return result;
            }
            break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C12FEEB8(uint64_t result, uint64_t a2, void *a3, uint64_t *a4)
{
  if (!*(void *)(a2 + 16)) {
    return result;
  }
  unint64_t v7 = result;
  sub_1C1520DBC();
  sub_1C151E77C();
  uint64_t result = sub_1C1520E0C();
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = result & ~v8;
  if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return result;
  }
  uint64_t v10 = ~v8;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(a2 + 48) + v9))
    {
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      default:
        char v11 = sub_1C1520A9C();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
        {
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            return result;
          }
          continue;
        }
LABEL_9:
        if (qword_1EB88CB30 != -1) {
          swift_once();
        }
        uint64_t v12 = *(void *)(qword_1EB93C930 + 80);
        swift_beginAccess();
        swift_retain();
        id v13 = (void *)sub_1C00640FC((uint64_t (*)(uint64_t))sub_1C0378E04, sub_1C037869C);
        uint64_t v14 = swift_endAccess();
        if (!v13)
        {
          uint64_t v15 = *(void *)(v12 + 64);
          BOOL v16 = __OFADD__(v15, 1);
          uint64_t v17 = v15 + 1;
          if (v16)
          {
            __break(1u);
            JUMPOUT(0x1C12FF188);
          }
          *(void *)(v12 + 64) = v17;
          id v13 = (void *)(*(uint64_t (**)(uint64_t))(v12 + 40))(v14);
        }
        swift_release();
        sub_1C12FE160(v13, v7, a3);
        id v18 = v13;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = *a4;
        *a4 = 0x8000000000000000;
        sub_1C106812C((uint64_t)v13, 4, 4u, isUniquelyReferenced_nonNull_native);
        *a4 = v20;

        return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C12FF1A0(uint64_t result, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v7 = result;
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v9 = result & ~v8;
    if ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v10 = ~v8;
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v9))
        {
          case 5:
            swift_bridgeObjectRelease();
            goto LABEL_9;
          default:
            char v11 = sub_1C1520A9C();
            uint64_t result = swift_bridgeObjectRelease();
            if (v11)
            {
LABEL_9:
              id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
              sub_1C12FE160(v12, v7, a3);
              id v13 = v12;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v15 = *a4;
              *a4 = 0x8000000000000000;
              sub_1C106812C((uint64_t)v12, 5, 5u, isUniquelyReferenced_nonNull_native);
              *a4 = v15;

              return swift_bridgeObjectRelease();
            }
            unint64_t v9 = (v9 + 1) & v10;
            if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
              return result;
            }
            break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C12FF404(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, CGFloat a7, CGFloat a8, double a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13, CGFloat a14)
{
  double v22 = a9;
  uint64_t v91 = a1;
  char v27 = a2 & 1;
  char v92 = a2 & 1;
  CGFloat v93 = a7;
  CGFloat v94 = a8;
  double v95 = a9;
  CGFloat v96 = a10;
  sub_1BFF6A008(a3, (uint64_t)v97);
  uint64_t v84 = a4;
  char v85 = a5 & 1;
  CGFloat v86 = a11;
  CGFloat v87 = a12;
  CGFloat v88 = a13;
  CGFloat v89 = a14;
  sub_1BFF6A008(a6, (uint64_t)v90);
  uint64_t v77 = a1;
  char v78 = v27;
  CGFloat v79 = a7;
  CGFloat v80 = a8;
  double v62 = a8;
  CGFloat v81 = v22;
  CGFloat v82 = a10;
  sub_1BFF6A008((uint64_t)v97, (uint64_t)v83);
  if (a2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    if (a5)
    {
      v63[4] = a1;
      char v64 = 1;
      CGFloat v65 = a7;
      CGFloat v66 = a8;
      double v67 = v22;
      CGFloat v68 = a10;
      sub_1BFF6A008((uint64_t)v97, (uint64_t)v69);
      v98.origin.double x = a7;
      v98.origin.double y = a8;
      v98.size.CGFloat width = v22;
      v98.size.height = a10;
      double MinX = CGRectGetMinX(v98);
      sub_1BFF6A008((uint64_t)v90, (uint64_t)v63);
      v99.origin.double x = a11;
      v99.origin.double y = a12;
      v99.size.CGFloat width = a13;
      v99.size.height = a14;
      CGFloat v61 = a11;
      double v29 = CGRectGetMinX(v99);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      BOOL v30 = MinX < v29;
      CGFloat v59 = a7;
      CGFloat v60 = a12;
      if (MinX < v29)
      {
        sub_1BFF6A008((uint64_t)v97, (uint64_t)v69);
        uint64_t v77 = a1;
        char v78 = 1;
        CGFloat v79 = a7;
        CGFloat v80 = v62;
        CGFloat v81 = v22;
        CGFloat v82 = a10;
        sub_1BFF993A8(v69, v83);
        sub_1BFF6A008((uint64_t)v90, (uint64_t)v69);
        uint64_t v70 = a4;
        char v71 = 1;
        CGFloat v72 = v61;
        CGFloat v73 = a12;
        CGFloat v74 = a13;
        CGFloat v75 = a14;
        sub_1BFF993A8(v69, v76);
        CGFloat v32 = a7;
        CGFloat v31 = a12;
        CGFloat v39 = a14;
        CGFloat v36 = v61;
        CGFloat v34 = v62;
        CGFloat v37 = a10;
        double v38 = v31;
      }
      else
      {
        sub_1BFF6A008((uint64_t)v90, (uint64_t)v69);
        uint64_t v77 = a4;
        char v78 = 1;
        CGFloat v32 = v61;
        CGFloat v79 = v61;
        CGFloat v80 = a12;
        CGFloat v81 = a13;
        CGFloat v82 = a14;
        sub_1BFF993A8(v69, v83);
        sub_1BFF6A008((uint64_t)v97, (uint64_t)v69);
        uint64_t v70 = a1;
        char v71 = 1;
        CGFloat v72 = a7;
        CGFloat v73 = v62;
        CGFloat v74 = v22;
        CGFloat v75 = a10;
        sub_1BFF993A8(v69, v76);
        CGFloat v33 = a14;
        CGFloat v34 = a12;
        CGFloat v35 = a13;
        CGFloat v36 = a7;
        CGFloat v37 = v33;
        double v38 = v62;
        a13 = v22;
        double v22 = v35;
        CGFloat v39 = a10;
      }
      CGFloat v40 = v36;
      CGFloat v41 = v38;
      CGFloat v42 = a13;
      CGFloat v43 = v39;
      double v58 = CGRectGetMinX(*(CGRect *)(&v38 - 1));
      v100.origin.double x = v32;
      v100.origin.double y = v34;
      v100.size.CGFloat width = v22;
      v100.size.height = v37;
      CGFloat MaxX = CGRectGetMaxX(v100);
      v101.size.CGFloat width = v22;
      double v45 = MaxX;
      CGFloat v57 = v32;
      v101.origin.double x = v32;
      v101.origin.double y = v34;
      CGFloat width = v101.size.width;
      CGFloat v56 = v37;
      v101.size.height = v37;
      double MinY = CGRectGetMinY(v101);
      v102.origin.double x = v36;
      v102.origin.double y = v41;
      v102.size.CGFloat width = a13;
      v102.size.height = v39;
      double v47 = MinY - CGRectGetMinY(v102);
      if (qword_1EB88F6B8 != -1) {
        swift_once();
      }
      double v48 = v60;
      if (v47 >= *(double *)&qword_1EB88F6B0 || v47 >= v58 - v45)
      {
        sub_1BFEE31C0((uint64_t)&v70, (uint64_t (*)(void))sub_1C0607558);
        sub_1BFEE31C0((uint64_t)&v77, (uint64_t (*)(void))sub_1C0607558);
        sub_1BFEE31C0((uint64_t)&v84, (uint64_t (*)(void))sub_1C0607558);
        sub_1BFEE31C0((uint64_t)&v91, (uint64_t (*)(void))sub_1C0607558);
        double v52 = v61;
        double v53 = v59;
      }
      else
      {
        v103.origin.double x = v36;
        v103.origin.double y = v41;
        v103.size.CGFloat width = a13;
        v103.size.height = v39;
        double MaxY = CGRectGetMaxY(v103);
        v104.origin.double y = v34;
        v104.origin.double x = v57;
        v104.size.CGFloat width = width;
        v104.size.height = v56;
        double v50 = CGRectGetMinY(v104);
        sub_1BFEE31C0((uint64_t)&v70, (uint64_t (*)(void))sub_1C0607558);
        sub_1BFEE31C0((uint64_t)&v77, (uint64_t (*)(void))sub_1C0607558);
        sub_1BFEE31C0((uint64_t)&v84, (uint64_t (*)(void))sub_1C0607558);
        sub_1BFEE31C0((uint64_t)&v91, (uint64_t (*)(void))sub_1C0607558);
        BOOL v51 = v50 < MaxY;
        double v48 = v60;
        double v52 = v61;
        double v53 = v59;
        if (v51) {
          return v30;
        }
      }
      if (v62 == v48) {
        return v53 <= v52;
      }
      else {
        return v62 < v48;
      }
    }
    else
    {
      sub_1BFEE31C0((uint64_t)&v84, (uint64_t (*)(void))sub_1C0607558);
      sub_1BFEE31C0((uint64_t)&v91, (uint64_t (*)(void))sub_1C0607558);
      return 0;
    }
  }
  else
  {
    sub_1BFEE31C0((uint64_t)&v91, (uint64_t (*)(void))sub_1C0607558);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    uint64_t v77 = a4;
    char v78 = a5 & 1;
    CGFloat v79 = a11;
    CGFloat v80 = a12;
    CGFloat v81 = a13;
    CGFloat v82 = a14;
    sub_1BFF993A8(v90, v83);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    if (a5)
    {
      return 1;
    }
    else if (a1 == a4)
    {
      if (a8 == a12) {
        return a7 <= a11;
      }
      else {
        return a8 < a12;
      }
    }
    else
    {
      return a1 < a4;
    }
  }
}

uint64_t sub_1C12FF93C(char *__src, char *a2, unint64_t a3, char *__dst, void *a5)
{
  unint64_t v5 = __dst;
  id v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 80;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 80;
  CGFloat v74 = __src;
  CGFloat v73 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -79) {
      goto LABEL_43;
    }
    if (__dst != a2 || &a2[80 * v11] <= __dst) {
      memmove(__dst, a2, 80 * v11);
    }
    double v29 = &v5[80 * v11];
    unint64_t v72 = (unint64_t)v29;
    CGFloat v74 = v6;
    if (__src >= v6 || v10 < 80) {
      goto LABEL_42;
    }
    BOOL v30 = (char *)(a3 - 80);
    double v47 = __src;
    while (1)
    {
      uint64_t v49 = v30 + 80;
      sub_1C13015E0((uint64_t)(v29 - 80), (uint64_t)&v65, (uint64_t (*)(void))sub_1C0607558);
      CGFloat v31 = v6 - 80;
      sub_1C13015E0((uint64_t)(v6 - 80), (uint64_t)&v58, (uint64_t (*)(void))sub_1C0607558);
      uint64_t v32 = v65;
      char v33 = v66;
      uint64_t v51 = v65;
      char v52 = v66;
      CGFloat v34 = v67;
      CGFloat v35 = v68;
      double v36 = v69;
      CGFloat v37 = v70;
      double v53 = v67;
      double v54 = v68;
      double v55 = v69;
      double v56 = v70;
      sub_1BFF6A008((uint64_t)v71, (uint64_t)v57);
      uint64_t v38 = v58;
      char v39 = v59;
      CGFloat v40 = v60;
      CGFloat v41 = v61;
      CGFloat v42 = v62;
      CGFloat v43 = v63;
      sub_1BFF6A008((uint64_t)v64, (uint64_t)v50);
      LOBYTE(v38) = sub_1C12FF404(v32, v33, (uint64_t)v57, v38, v39, (uint64_t)v50, v34, v35, v36, v37, v40, v41, v42, v43);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      sub_1BFEE31C0((uint64_t)&v58, (uint64_t (*)(void))sub_1C0607558);
      sub_1BFEE31C0((uint64_t)&v65, (uint64_t (*)(void))sub_1C0607558);
      if (v38) {
        break;
      }
      unint64_t v44 = v72;
      double v29 = (char *)(v72 - 80);
      v72 -= 80;
      if ((unint64_t)v49 < v44 || (unint64_t)v30 >= v44)
      {
        memmove(v30, (const void *)(v44 - 80), 0x50uLL);
        CGFloat v31 = v6;
        goto LABEL_40;
      }
      if (v49 != (char *)v44) {
        memmove(v30, (const void *)(v44 - 80), 0x50uLL);
      }
      CGFloat v31 = v6;
      double v45 = v47;
      if (v29 <= v5) {
        goto LABEL_42;
      }
LABEL_41:
      v30 -= 80;
      id v6 = v31;
      if (v31 <= v45) {
        goto LABEL_42;
      }
    }
    if (v49 != v6 || v30 >= v6) {
      memmove(v30, v6 - 80, 0x50uLL);
    }
    v74 -= 80;
    double v29 = (char *)v72;
LABEL_40:
    double v45 = v47;
    if (v29 <= v5) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v8 >= -79)
  {
    if (__dst != __src || &__src[80 * v9] <= __dst) {
      memmove(__dst, __src, 80 * v9);
    }
    unint64_t v12 = (unint64_t)&v5[80 * v9];
    unint64_t v72 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 80)
    {
      do
      {
        sub_1C13015E0((uint64_t)v6, (uint64_t)&v65, (uint64_t (*)(void))sub_1C0607558);
        sub_1C13015E0((uint64_t)v5, (uint64_t)&v58, (uint64_t (*)(void))sub_1C0607558);
        uint64_t v13 = v65;
        char v14 = v66;
        uint64_t v51 = v65;
        char v52 = v66;
        CGFloat v15 = v67;
        CGFloat v16 = v68;
        double v17 = v69;
        CGFloat v18 = v70;
        double v53 = v67;
        double v54 = v68;
        double v55 = v69;
        double v56 = v70;
        sub_1BFF6A008((uint64_t)v71, (uint64_t)v57);
        uint64_t v19 = v58;
        char v20 = v59;
        CGFloat v21 = v60;
        CGFloat v22 = v61;
        CGFloat v23 = v62;
        CGFloat v24 = v63;
        sub_1BFF6A008((uint64_t)v64, (uint64_t)v50);
        char v25 = sub_1C12FF404(v13, v14, (uint64_t)v57, v19, v20, (uint64_t)v50, v15, v16, v17, v18, v21, v22, v23, v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
        sub_1BFEE31C0((uint64_t)&v58, (uint64_t (*)(void))sub_1C0607558);
        sub_1BFEE31C0((uint64_t)&v65, (uint64_t (*)(void))sub_1C0607558);
        int64_t v26 = v74;
        if (v25)
        {
          unint64_t v27 = (unint64_t)(v6 + 80);
          if (v74 >= v6 && (unint64_t)v74 < v27 && v74 == v6) {
            int64_t v26 = v6;
          }
          else {
            memmove(v74, v6, 0x50uLL);
          }
        }
        else
        {
          int64_t v28 = v73 + 80;
          if (v74 != v73 || v74 >= v28) {
            memmove(v74, v73, 0x50uLL);
          }
          CGFloat v73 = v28;
          unint64_t v27 = (unint64_t)v6;
        }
        CGFloat v74 = v26 + 80;
        unint64_t v5 = v73;
        if ((unint64_t)v73 >= v12) {
          break;
        }
        id v6 = (char *)v27;
      }
      while (v27 < a3);
    }
LABEL_42:
    sub_1C0635F68((void **)&v74, (const void **)&v73, &v72);
    return 1;
  }
LABEL_43:

  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C12FFEC8(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = result;
  uint64_t v44 = a3;
  if (a3 != a2)
  {
    uint64_t v5 = 80 * v44;
LABEL_5:
    uint64_t v6 = v25;
    uint64_t v26 = v5;
    while (1)
    {
      uint64_t v7 = *a4 + v5;
      sub_1C13015E0(v7, (uint64_t)&v39, (uint64_t (*)(void))sub_1C0607558);
      sub_1C13015E0(v7 - 80, (uint64_t)&v32, (uint64_t (*)(void))sub_1C0607558);
      uint64_t v8 = v39;
      char v9 = BYTE8(v39);
      v27[4] = v39;
      char v28 = BYTE8(v39);
      long long v10 = v40;
      long long v11 = v41;
      long long v29 = v40;
      long long v30 = v41;
      sub_1BFF6A008((uint64_t)&v42, (uint64_t)v31);
      uint64_t v12 = v32;
      char v13 = v33;
      CGFloat v14 = v34;
      CGFloat v15 = v35;
      CGFloat v16 = v36;
      CGFloat v17 = v37;
      sub_1BFF6A008((uint64_t)&v38, (uint64_t)v27);
      LOBYTE(v8) = sub_1C12FF404(v8, v9, (uint64_t)v31, v12, v13, (uint64_t)v27, *(CGFloat *)&v10, *((CGFloat *)&v10 + 1), *(double *)&v11, *((CGFloat *)&v11 + 1), v14, v15, v16, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      sub_1BFEE31C0((uint64_t)&v32, (uint64_t (*)(void))sub_1C0607558);
      uint64_t result = sub_1BFEE31C0((uint64_t)&v39, (uint64_t (*)(void))sub_1C0607558);
      if ((v8 & 1) == 0)
      {
LABEL_4:
        uint64_t v5 = v26 + 80;
        if (++v44 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!*a4) {
        break;
      }
      CGFloat v18 = (long long *)(*a4 + v5);
      long long v40 = v18[1];
      long long v41 = v18[2];
      long long v42 = v18[3];
      long long v43 = v18[4];
      long long v39 = *v18;
      long long v19 = *(v18 - 2);
      v18[2] = *(v18 - 3);
      v18[3] = v19;
      v18[4] = *(v18 - 1);
      long long v20 = *(v18 - 4);
      *CGFloat v18 = *(v18 - 5);
      v18[1] = v20;
      *(v18 - 5) = v39;
      long long v21 = v40;
      long long v22 = v41;
      long long v23 = v43;
      *(v18 - 2) = v42;
      *(v18 - 1) = v23;
      *(v18 - 4) = v21;
      *(v18 - 3) = v22;
      v5 -= 80;
      if (v44 == ++v6) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1C130013C(void *a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = a1[1];
  id v5 = a2;
  uint64_t v6 = sub_1C152086C();
  if (v6 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_161;
    }
    if (v4) {
      sub_1C12FFEC8(0, v4, 1, v3);
    }

    goto LABEL_138;
  }
  if (v4 >= 0) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v4 + 1;
  }
  if (v4 >= -1)
  {
    uint64_t v154 = v6;
    uint64_t v161 = v5;
    if (v4 >= 2)
    {
      uint64_t v8 = v7 >> 1;
      sub_1C0607558();
      uint64_t v9 = sub_1C151ECCC();
      *(void *)(v9 + 16) = v8;
      uint64_t v153 = v9;
      __dst = (char *)(v9 + 32);
      goto LABEL_13;
    }
    long long v10 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v153 = MEMORY[0x1E4FBC860];
    if (v4 == 1)
    {
LABEL_13:
      uint64_t v11 = 0;
      uint64_t v234 = (char *)&v221;
      uint64_t v12 = v196;
      long long v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v173 = v3;
      while (1)
      {
        uint64_t v14 = v11++;
        uint64_t v156 = v14;
        if (v11 < v4)
        {
          __src = (void *)v4;
          uint64_t v15 = *v3;
          sub_1C13015E0(*v3 + 80 * v11, (uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
          sub_1C13015E0(v15 + 80 * v14, (uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
          uint64_t v16 = v229;
          char v17 = BYTE8(v229);
          uint64_t v217 = v229;
          char v218 = BYTE8(v229);
          CGPoint v18 = v230;
          long long v19 = v231;
          CGPoint v219 = v230;
          long long v220 = v231;
          long long v20 = v234;
          sub_1BFF6A008((uint64_t)&v232, (uint64_t)v234);
          uint64_t v21 = v222;
          char v22 = v223;
          uint64_t v210 = v222;
          char v211 = v223;
          CGFloat v23 = v224;
          CGFloat v24 = v225;
          CGFloat v25 = v226;
          CGFloat v26 = v227;
          double v212 = v224;
          double v213 = v225;
          double v214 = v226;
          double v215 = v227;
          sub_1BFF6A008((uint64_t)v228, (uint64_t)v216);
          int v174 = sub_1C12FF404(v16, v17, (uint64_t)v20, v21, v22, (uint64_t)v216, v18.x, v18.y, *(double *)&v19, *((CGFloat *)&v19 + 1), v23, v24, v25, v26);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
          sub_1BFEE31C0((uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
          uint64_t v14 = v156;
          sub_1BFEE31C0((uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
          uint64_t v11 = v156 + 2;
          uint64_t v170 = v15;
          if (v156 + 2 >= (uint64_t)__src)
          {
            uint64_t v12 = v196;
LABEL_25:
            uint64_t v4 = (uint64_t)__src;
            if (v174)
            {
LABEL_26:
              if (v11 < v14) {
                goto LABEL_162;
              }
              if (v14 < v11)
              {
                long long v41 = (_OWORD *)(v170 + 80 * v11 - 80);
                uint64_t v42 = v170;
                uint64_t v43 = v14;
                uint64_t v44 = (long long *)(v170 + 80 * v14);
                uint64_t v45 = v11;
                do
                {
                  if (v43 != --v45)
                  {
                    if (!v42) {
                      goto LABEL_167;
                    }
                    CGPoint v230 = (CGPoint)v44[1];
                    long long v231 = v44[2];
                    long long v232 = v44[3];
                    long long v233 = v44[4];
                    long long v229 = *v44;
                    memmove(v44, v41, 0x50uLL);
                    v41[1] = v230;
                    _OWORD v41[2] = v231;
                    v41[3] = v232;
                    v41[4] = v233;
                    _OWORD *v41 = v229;
                    uint64_t v42 = v170;
                  }
                  ++v43;
                  v41 -= 5;
                  v44 += 5;
                }
                while (v43 < v45);
                uint64_t v14 = v156;
              }
            }
          }
          else
          {
            unint64_t v27 = v10;
            uint64_t v28 = v15 + 80 * v156 + 80;
            do
            {
              uint64_t v29 = v28 + 80;
              sub_1C13015E0(v28 + 80, (uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
              sub_1C13015E0(v28, (uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
              uint64_t v30 = v229;
              char v31 = BYTE8(v229);
              uint64_t v217 = v229;
              char v218 = BYTE8(v229);
              CGPoint v32 = v230;
              long long v33 = v231;
              CGPoint v219 = v230;
              long long v220 = v231;
              double v34 = v234;
              sub_1BFF6A008((uint64_t)&v232, (uint64_t)v234);
              uint64_t v35 = v222;
              char v36 = v223;
              uint64_t v210 = v222;
              char v211 = v223;
              CGFloat v37 = v224;
              CGFloat v38 = v225;
              CGFloat v39 = v226;
              CGFloat v40 = v227;
              double v212 = v224;
              double v213 = v225;
              double v214 = v226;
              double v215 = v227;
              sub_1BFF6A008((uint64_t)v228, (uint64_t)v216);
              LODWORD(v35) = sub_1C12FF404(v30, v31, (uint64_t)v34, v35, v36, (uint64_t)v216, v32.x, v32.y, *(double *)&v33, *((CGFloat *)&v33 + 1), v37, v38, v39, v40);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
              sub_1BFEE31C0((uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
              sub_1BFEE31C0((uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
              if ((v174 ^ v35))
              {
                long long v10 = v27;
                uint64_t v12 = v196;
                unint64_t v3 = v173;
                uint64_t v14 = v156;
                goto LABEL_25;
              }
              ++v11;
              uint64_t v28 = v29;
            }
            while (__src != (void *)v11);
            uint64_t v4 = (uint64_t)__src;
            uint64_t v11 = (uint64_t)__src;
            long long v10 = v27;
            uint64_t v12 = v196;
            unint64_t v3 = v173;
            uint64_t v14 = v156;
            if (v174) {
              goto LABEL_26;
            }
          }
        }
        if (v11 >= v4) {
          goto LABEL_75;
        }
        if (__OFSUB__(v11, v14)) {
          goto LABEL_160;
        }
        if (v11 - v14 >= v154) {
          goto LABEL_75;
        }
        uint64_t v46 = v14 + v154;
        if (__OFADD__(v14, v154)) {
          goto LABEL_163;
        }
        if (v46 >= v4) {
          uint64_t v46 = v4;
        }
        if (v46 < v14) {
          break;
        }
        if (v11 == v46) {
          goto LABEL_75;
        }
        uint64_t v155 = v46;
        uint64_t v158 = v10;
        uint64_t v47 = 80 * v11;
        while (2)
        {
          uint64_t v49 = v14;
          uint64_t v157 = v47;
          uint64_t v50 = v47;
          uint64_t v171 = v11;
          while (1)
          {
            uint64_t v51 = *v3 + v50;
            sub_1C13015E0(v51, (uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
            sub_1C13015E0(v51 - 80, (uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
            uint64_t v52 = v229;
            double v53 = v12;
            char v54 = BYTE8(v229);
            uint64_t v217 = v229;
            char v218 = BYTE8(v229);
            CGPoint v55 = v230;
            CGFloat v56 = *((double *)&v231 + 1);
            CGFloat v57 = *(double *)&v231;
            CGPoint v219 = v230;
            long long v220 = v231;
            uint64_t v58 = v234;
            sub_1BFF6A008((uint64_t)&v232, (uint64_t)v234);
            uint64_t v59 = v222;
            char v60 = v223;
            uint64_t v210 = v222;
            char v211 = v223;
            double v61 = v224;
            double y = v225;
            CGFloat v63 = v226;
            CGFloat v64 = v227;
            double v212 = v224;
            double v213 = v225;
            double v214 = v226;
            double v215 = v227;
            sub_1BFF6A008((uint64_t)v228, (uint64_t)v216);
            uint64_t v204 = v52;
            char v205 = v54;
            CGPoint v206 = v55;
            CGFloat v207 = v57;
            CGFloat v208 = v56;
            sub_1BFF6A008((uint64_t)v58, (uint64_t)v209);
            uint64_t v197 = v59;
            char v198 = v60;
            double v199 = v61;
            double v200 = y;
            CGFloat v201 = v63;
            CGFloat v202 = v64;
            sub_1BFF6A008((uint64_t)v216, (uint64_t)v203);
            uint64_t v191 = v52;
            char v192 = v54;
            CGPoint v193 = v55;
            CGFloat v194 = v57;
            CGFloat v195 = v56;
            sub_1BFF6A008((uint64_t)v209, (uint64_t)v53);
            if ((v54 & 1) == 0)
            {
              sub_1BFEE31C0((uint64_t)&v204, (uint64_t (*)(void))sub_1C0607558);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
              uint64_t v191 = v59;
              char v192 = v60;
              v193.CGFloat x = v61;
              v193.double y = y;
              CGFloat v194 = v63;
              CGFloat v195 = v64;
              sub_1BFF993A8(v203, v53);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
              uint64_t v12 = v53;
              if (v60)
              {
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v234);
                sub_1BFEE31C0((uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
                sub_1BFEE31C0((uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
                unint64_t v3 = v173;
                goto LABEL_70;
              }
              if (v52 == v59)
              {
                if (v55.y == y) {
                  BOOL v69 = v55.x <= v61;
                }
                else {
                  BOOL v69 = v55.y < y;
                }
              }
              else
              {
                BOOL v69 = v52 < v59;
              }
              unint64_t v3 = v173;
              goto LABEL_69;
            }
            uint64_t v169 = v49;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
            uint64_t v65 = v53;
            if ((v60 & 1) == 0) {
              break;
            }
            v179[4] = v52;
            char v180 = 1;
            CGPoint v181 = v55;
            CGFloat v182 = v57;
            CGFloat v183 = v56;
            sub_1BFF6A008((uint64_t)v209, (uint64_t)v184);
            v235.origin = v55;
            v235.size.CGFloat width = v57;
            v235.size.height = v56;
            double MinX = CGRectGetMinX(v235);
            sub_1BFF6A008((uint64_t)v203, (uint64_t)v179);
            v236.origin.CGFloat x = v61;
            v236.origin.double y = y;
            v236.size.CGFloat width = v63;
            v236.size.height = v64;
            CGFloat x = v61;
            double v68 = CGRectGetMinX(v236);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v179);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v184);
            BOOL v69 = MinX < v68;
            double v167 = y;
            double v168 = x;
            if (MinX < v68)
            {
              sub_1BFF6A008((uint64_t)v209, (uint64_t)v184);
              uint64_t v191 = v52;
              char v192 = 1;
              CGFloat v71 = x;
              CGFloat x = v55.x;
              CGPoint v193 = v55;
              CGFloat v194 = v57;
              CGFloat v195 = v56;
              uint64_t v12 = v65;
              sub_1BFF993A8(v184, v65);
              sub_1BFF6A008((uint64_t)v203, (uint64_t)v184);
              uint64_t v185 = v59;
              char v186 = 1;
              v187.CGFloat x = v71;
              v187.double y = y;
              CGFloat v188 = v63;
              CGFloat v189 = v64;
              sub_1BFF993A8(v184, v190);
              CGFloat v70 = y;
              double y = v55.y;
            }
            else
            {
              sub_1BFF6A008((uint64_t)v203, (uint64_t)v184);
              uint64_t v191 = v59;
              char v192 = 1;
              v193.CGFloat x = x;
              v193.double y = y;
              CGFloat v194 = v63;
              CGFloat v195 = v64;
              sub_1BFF993A8(v184, v65);
              uint64_t v12 = v65;
              sub_1BFF6A008((uint64_t)v209, (uint64_t)v184);
              uint64_t v185 = v52;
              char v186 = 1;
              CGFloat v70 = v55.y;
              CGFloat v71 = v55.x;
              CGPoint v187 = v55;
              CGFloat v188 = v57;
              CGFloat v189 = v56;
              sub_1BFF993A8(v184, v190);
              double v72 = v63;
              double v73 = v64;
              CGFloat v63 = v57;
              CGFloat v57 = v72;
              CGFloat v64 = v56;
              CGFloat v56 = v73;
            }
            v237.origin.CGFloat x = v71;
            v237.origin.double y = v70;
            v237.size.CGFloat width = v63;
            v237.size.height = v64;
            double v166 = CGRectGetMinX(v237);
            v238.origin.CGFloat x = x;
            v238.origin.double y = y;
            v238.size.CGFloat width = v57;
            v238.size.height = v56;
            CGFloat rect_24 = v57;
            double MaxX = CGRectGetMaxX(v238);
            v239.origin.CGFloat x = x;
            CGFloat rect_8 = y;
            CGFloat rect_16 = v56;
            v239.origin.double y = y;
            v239.size.CGFloat width = v57;
            v239.size.height = v56;
            double MinY = CGRectGetMinY(v239);
            v240.origin.CGFloat x = v71;
            v240.origin.double y = v70;
            v240.size.CGFloat width = v63;
            v240.size.height = v64;
            double v75 = CGRectGetMinY(v240);
            unint64_t v3 = v173;
            uint64_t v49 = v169;
            CGFloat v76 = x;
            if (qword_1EB88F6B8 != -1) {
              swift_once();
            }
            if (MinY - v75 >= *(double *)&qword_1EB88F6B0 || MinY - v75 >= v166 - MaxX)
            {
              sub_1BFEE31C0((uint64_t)&v185, (uint64_t (*)(void))sub_1C0607558);
              sub_1BFEE31C0((uint64_t)&v191, (uint64_t (*)(void))sub_1C0607558);
              sub_1BFEE31C0((uint64_t)&v197, (uint64_t (*)(void))sub_1C0607558);
              sub_1BFEE31C0((uint64_t)&v204, (uint64_t (*)(void))sub_1C0607558);
            }
            else
            {
              v241.origin.CGFloat x = v71;
              v241.origin.double y = v70;
              v241.size.CGFloat width = v63;
              v241.size.height = v64;
              double MaxY = CGRectGetMaxY(v241);
              v242.origin.CGFloat x = v76;
              v242.origin.double y = rect_8;
              v242.size.height = rect_16;
              v242.size.CGFloat width = rect_24;
              double v78 = CGRectGetMinY(v242);
              sub_1BFEE31C0((uint64_t)&v185, (uint64_t (*)(void))sub_1C0607558);
              sub_1BFEE31C0((uint64_t)&v191, (uint64_t (*)(void))sub_1C0607558);
              sub_1BFEE31C0((uint64_t)&v197, (uint64_t (*)(void))sub_1C0607558);
              sub_1BFEE31C0((uint64_t)&v204, (uint64_t (*)(void))sub_1C0607558);
              if (v78 < MaxY) {
                goto LABEL_69;
              }
            }
            if (v55.y == v167) {
              BOOL v69 = v55.x <= v168;
            }
            else {
              BOOL v69 = v55.y < v167;
            }
LABEL_69:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v234);
            sub_1BFEE31C0((uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
            sub_1BFEE31C0((uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
            if (!v69)
            {
              uint64_t v48 = v171;
              goto LABEL_44;
            }
LABEL_70:
            if (!*v3) {
              goto LABEL_165;
            }
            CGFloat v79 = (long long *)(*v3 + v50);
            CGPoint v230 = (CGPoint)v79[1];
            long long v231 = v79[2];
            long long v232 = v79[3];
            long long v233 = v79[4];
            long long v229 = *v79;
            long long v80 = *(v79 - 2);
            v79[2] = *(v79 - 3);
            v79[3] = v80;
            v79[4] = *(v79 - 1);
            long long v81 = *(v79 - 4);
            *CGFloat v79 = *(v79 - 5);
            v79[1] = v81;
            *(v79 - 5) = v229;
            CGPoint v82 = v230;
            long long v83 = v231;
            long long v84 = v233;
            *(v79 - 2) = v232;
            *(v79 - 1) = v84;
            *(v79 - 4) = (__int128)v82;
            *(v79 - 3) = v83;
            v50 -= 80;
            ++v49;
            uint64_t v48 = v171;
            if (v171 == v49) {
              goto LABEL_44;
            }
          }
          sub_1BFEE31C0((uint64_t)&v197, (uint64_t (*)(void))sub_1C0607558);
          sub_1BFEE31C0((uint64_t)&v204, (uint64_t (*)(void))sub_1C0607558);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v234);
          sub_1BFEE31C0((uint64_t)&v222, (uint64_t (*)(void))sub_1C0607558);
          sub_1BFEE31C0((uint64_t)&v229, (uint64_t (*)(void))sub_1C0607558);
          uint64_t v48 = v171;
          unint64_t v3 = v173;
          uint64_t v12 = v65;
LABEL_44:
          uint64_t v11 = v48 + 1;
          uint64_t v14 = v156;
          uint64_t v47 = v157 + 80;
          if (v11 != v155) {
            continue;
          }
          break;
        }
        uint64_t v11 = v155;
        long long v10 = v158;
LABEL_75:
        if (v11 < v14) {
          goto LABEL_155;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v10 = sub_1C0634CC8(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v86 = *((void *)v10 + 2);
        unint64_t v85 = *((void *)v10 + 3);
        unint64_t v13 = v86 + 1;
        if (v86 >= v85 >> 1) {
          long long v10 = sub_1C0634CC8((char *)(v85 > 1), v86 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v13;
        CGFloat v87 = v10 + 32;
        CGFloat v88 = &v10[16 * v86 + 32];
        *(void *)CGFloat v88 = v14;
        *((void *)v88 + 1) = v11;
        if (v86)
        {
          uint64_t v159 = v10;
          uint64_t v172 = v11;
          uint64_t v175 = v10 + 32;
          while (1)
          {
            unint64_t v89 = v13 - 1;
            if (v13 >= 4)
            {
              CGFloat v94 = &v87[16 * v13];
              uint64_t v95 = *((void *)v94 - 8);
              uint64_t v96 = *((void *)v94 - 7);
              BOOL v100 = __OFSUB__(v96, v95);
              uint64_t v97 = v96 - v95;
              if (v100) {
                goto LABEL_144;
              }
              uint64_t v99 = *((void *)v94 - 6);
              uint64_t v98 = *((void *)v94 - 5);
              BOOL v100 = __OFSUB__(v98, v99);
              uint64_t v92 = v98 - v99;
              char v93 = v100;
              if (v100) {
                goto LABEL_145;
              }
              unint64_t v101 = v13 - 2;
              CGRect v102 = &v87[16 * v13 - 32];
              uint64_t v104 = *(void *)v102;
              uint64_t v103 = *((void *)v102 + 1);
              BOOL v100 = __OFSUB__(v103, v104);
              uint64_t v105 = v103 - v104;
              if (v100) {
                goto LABEL_147;
              }
              BOOL v100 = __OFADD__(v92, v105);
              uint64_t v106 = v92 + v105;
              if (v100) {
                goto LABEL_150;
              }
              if (v106 >= v97)
              {
                uint64_t v124 = &v87[16 * v89];
                uint64_t v126 = *(void *)v124;
                uint64_t v125 = *((void *)v124 + 1);
                BOOL v100 = __OFSUB__(v125, v126);
                uint64_t v127 = v125 - v126;
                if (v100) {
                  goto LABEL_154;
                }
                BOOL v117 = v92 < v127;
                goto LABEL_113;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v118 = *((void *)v10 + 4);
                uint64_t v119 = *((void *)v10 + 5);
                BOOL v100 = __OFSUB__(v119, v118);
                uint64_t v111 = v119 - v118;
                char v112 = v100;
                goto LABEL_107;
              }
              uint64_t v91 = *((void *)v10 + 4);
              uint64_t v90 = *((void *)v10 + 5);
              BOOL v100 = __OFSUB__(v90, v91);
              uint64_t v92 = v90 - v91;
              char v93 = v100;
            }
            if (v93) {
              goto LABEL_146;
            }
            unint64_t v101 = v13 - 2;
            CGRect v107 = &v87[16 * v13 - 32];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v110 = __OFSUB__(v108, v109);
            uint64_t v111 = v108 - v109;
            char v112 = v110;
            if (v110) {
              goto LABEL_149;
            }
            CGRect v113 = &v87[16 * v89];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v100 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v100) {
              goto LABEL_152;
            }
            if (__OFADD__(v111, v116)) {
              goto LABEL_153;
            }
            if (v111 + v116 >= v92)
            {
              BOOL v117 = v92 < v116;
LABEL_113:
              if (v117) {
                unint64_t v89 = v101;
              }
              goto LABEL_115;
            }
LABEL_107:
            if (v112) {
              goto LABEL_148;
            }
            unint64_t v120 = &v87[16 * v89];
            uint64_t v122 = *(void *)v120;
            uint64_t v121 = *((void *)v120 + 1);
            BOOL v100 = __OFSUB__(v121, v122);
            uint64_t v123 = v121 - v122;
            if (v100) {
              goto LABEL_151;
            }
            if (v123 < v111) {
              goto LABEL_15;
            }
LABEL_115:
            unint64_t v128 = v89 - 1;
            if (v89 - 1 >= v13)
            {
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
              goto LABEL_164;
            }
            uint64_t v129 = *v173;
            if (!*v173) {
              goto LABEL_166;
            }
            uint64_t v130 = &v87[16 * v128];
            id v131 = v87;
            uint64_t v132 = *(void *)v130;
            unint64_t v133 = v89;
            uint64_t v134 = &v131[16 * v89];
            uint64_t v135 = *((void *)v134 + 1);
            __srca = (char *)(v129 + 80 * *(void *)v130);
            uint64_t v136 = (char *)(v129 + 80 * *(void *)v134);
            unint64_t v137 = v129 + 80 * v135;
            id v138 = v161;
            sub_1C12FF93C(__srca, v136, v137, __dst, v138);
            if (v2)
            {
LABEL_123:
              swift_bridgeObjectRelease();
              id v5 = v161;

              *(void *)(v153 + 16) = 0;
              goto LABEL_137;
            }

            long long v10 = v159;
            if (v135 < v132) {
              goto LABEL_141;
            }
            if (v133 > *((void *)v159 + 2)) {
              goto LABEL_142;
            }
            unint64_t v139 = v133;
            *(void *)uint64_t v130 = v132;
            CGFloat v87 = v175;
            *(void *)&v175[16 * v128 + 8] = v135;
            unint64_t v140 = *((void *)v159 + 2);
            if (v139 >= v140) {
              goto LABEL_143;
            }
            unint64_t v13 = v140 - 1;
            memmove(v134, v134 + 16, 16 * (v140 - 1 - v139));
            *((void *)v159 + 2) = v140 - 1;
            uint64_t v11 = v172;
            unint64_t v3 = v173;
            uint64_t v12 = v196;
            if (v140 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_15:
        uint64_t v4 = v3[1];
        if (v11 >= v4) {
          goto LABEL_125;
        }
      }
LABEL_164:
      __break(1u);
LABEL_165:

      __break(1u);
LABEL_166:

      __break(1u);
LABEL_167:

      __break(1u);
LABEL_168:
      id v5 = v161;

      __break(1u);
      goto LABEL_169;
    }
    unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_125:
    if (v13 >= 2)
    {
      uint64_t v141 = *v3;
      uint64_t v178 = *v3;
      do
      {
        unint64_t v142 = v13 - 2;
        if (v13 < 2) {
          goto LABEL_156;
        }
        if (!v141) {
          goto LABEL_168;
        }
        uint64_t v143 = v10;
        unint64_t v144 = v10 + 32;
        uint64_t v145 = *(void *)&v10[16 * v142 + 32];
        uint64_t v146 = *(void *)&v10[16 * v13 + 24];
        uint64_t v147 = *(void *)&v144[16 * v13 - 16];
        uint64_t v234 = (char *)(v141 + 80 * v145);
        unint64_t v148 = (char *)(v141 + 80 * v147);
        unint64_t v149 = v141 + 80 * v146;
        id v150 = v161;
        sub_1C12FF93C(v234, v148, v149, __dst, v150);
        if (v2) {
          goto LABEL_123;
        }

        if (v146 < v145) {
          goto LABEL_157;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v143 = sub_1C063604C((uint64_t)v143);
        }
        if (v142 >= *((void *)v143 + 2)) {
          goto LABEL_158;
        }
        int64_t v151 = &v143[16 * v142 + 32];
        *(void *)int64_t v151 = v145;
        *((void *)v151 + 1) = v146;
        unint64_t v152 = *((void *)v143 + 2);
        if (v13 > v152) {
          goto LABEL_159;
        }
        long long v10 = v143;
        memmove(&v143[16 * v13 + 16], &v143[16 * v13 + 32], 16 * (v152 - v13));
        *((void *)v143 + 2) = v152 - 1;
        unint64_t v13 = v152 - 1;
        uint64_t v141 = v178;
      }
      while (v152 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)(v153 + 16) = 0;
    id v5 = v161;
LABEL_137:

    swift_bridgeObjectRelease();
LABEL_138:

    return;
  }
LABEL_169:

  sub_1C15203FC();
  __break(1u);
}

void sub_1C1301268(void **a1, void *a2)
{
  unint64_t v3 = *a1;
  id v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = (void *)sub_1C0636630(v3);
  }
  uint64_t v5 = v3[2];
  v7[0] = v3 + 4;
  v7[1] = v5;
  id v6 = v4;
  sub_1C130013C(v7, v6);

  *a1 = v3;
}

void sub_1C1301300()
{
  unint64_t v1 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier];
  *unint64_t v1 = 0;
  v1[1] = 0xE000000000000000;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  void *v2 = 0;
  v2[1] = 0;
  unint64_t v3 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  *unint64_t v3 = 0;
  v3[1] = 0;
  id v4 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide];
  *id v4 = 0;
  v4[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem];
  uint64_t v6 = type metadata accessor for FeedItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 0;
  uint64_t v8 = MEMORY[0x1E4FBC868];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers] = MEMORY[0x1E4FBC868];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers] = v7;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers] = v7;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_layoutObservers] = v7;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers] = v7;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewKey] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewsByName] = v8;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture] = 0;

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C1301494()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C13014CC(uint64_t a1)
{
  sub_1C12F8DE0(a1, v1);
}

uint64_t sub_1C13014D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C1301510()
{
  return swift_deallocObject();
}

void sub_1C1301550()
{
  sub_1C12F9D04(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C1301570()
{
  if (!qword_1EA1AE190)
  {
    type metadata accessor for FormatShareAttributionData();
    type metadata accessor for FormatShareAttributionNodeLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AE190);
    }
  }
}

uint64_t sub_1C13015E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C130164C()
{
  return sub_1C12F9940(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C1301658()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1301690()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C13016E0()
{
  sub_1C12F97A0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C13016EC()
{
  return swift_deallocObject();
}

uint64_t sub_1C1301724()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatLatestCompatibleFileReference.init(latestCompatible:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatFileReference();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  sub_1C152089C();
  swift_allocObject();
  uint64_t v6 = sub_1C151EC6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, a1, v4);
  uint64_t v8 = sub_1BFE94A38(v6);
  FormatFileReferenceCollection.init(references:)(v8, &v11);
  uint64_t v9 = v11;
  uint64_t result = type metadata accessor for FormatLatestCompatibleFileReference();
  *(void *)(a2 + *(int *)(result + 36)) = v9;
  return result;
}

uint64_t static FormatLatestCompatibleFileReference.== infix(_:_:)(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  if (static FormatFileReference.== infix(_:_:)(a1, a2, a3, a4))
  {
    type metadata accessor for FormatLatestCompatibleFileReference();
    char v4 = static FormatFileReferenceCollection.== infix(_:_:)();
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t FormatLatestCompatibleFileReference.latestCompatible.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatFileReference();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1C1301A2C@<X0>(void *a1@<X8>)
{
  type metadata accessor for FormatFileReference();
  swift_getWitnessTable();
  uint64_t result = sub_1C1520A3C();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t FormatLatestCompatibleFileReference.encode(to:)(void *a1)
{
  return FormatFileReferenceCollection.encode(to:)(a1);
}

uint64_t sub_1C1301B18(void *a1)
{
  return FormatLatestCompatibleFileReference.encode(to:)(a1);
}

uint64_t sub_1C1301B30(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  return static FormatLatestCompatibleFileReference.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1C1301B3C@<X0>(void *a1@<X8>)
{
  return sub_1C1301A2C(a1);
}

uint64_t sub_1C1301B5C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

void *sub_1C1301BDC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = (v12 | 7) + v8;
  uint64_t v15 = v12 + 16;
  uint64_t v16 = *(void *)(v10 + 64);
  uint64_t v17 = v16 + v12;
  if (*(_DWORD *)(v10 + 84)) {
    size_t v18 = *(void *)(v10 + 64);
  }
  else {
    size_t v18 = v16 + 1;
  }
  unint64_t v19 = ((((((((v18 + 7 + ((v16 + v12 + ((v16 + v12 + ((v12 + 16) & ~v12)) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v20 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v21 = *(void *)(v20 + 64) + v13;
  if (v19 + (v21 & ~v13) <= v19 + (v14 & ~(v12 | 7))) {
    unint64_t v22 = v19 + (v14 & ~(v12 | 7));
  }
  else {
    unint64_t v22 = v19 + (v21 & ~v13);
  }
  uint64_t v23 = v13 | (*(unsigned char *)(v20 + 80) | *(unsigned char *)(v7 + 80));
  if (v23 != 7
    || ((*(_DWORD *)(v20 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v11 + 80)) & 0x100000) != 0
    || v22 + 16 > 0x18)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    unint64_t v27 = (void *)(v26 + ((v23 + 16) & ~v23));
    swift_retain();
  }
  else
  {
    BOOL v69 = a1;
    unsigned int v28 = *((unsigned __int8 *)a2 + v22);
    if ((v22 & 0xFFFFFFF8) != 0 && v28 >= 2) {
      unsigned int v28 = *(_DWORD *)a2 + 2;
    }
    size_t __n = v18;
    uint64_t v65 = v9;
    size_t v66 = v18 + 7;
    unint64_t v67 = v22;
    double v68 = a2;
    uint64_t v30 = ~v13;
    uint64_t v31 = ~v12;
    if (v28 == 1)
    {
      (*(void (**)(void *, void *))(v20 + 16))(v69, v68);
      CGPoint v32 = (void *)(((unint64_t)v69 + v21) & v30);
      long long v33 = (void *)(((unint64_t)v68 + v21) & v30);
      *CGPoint v32 = *v33;
      v32[1] = v33[1];
      unint64_t v34 = ((unint64_t)v32 + v15) & v31;
      unint64_t v35 = ((unint64_t)v33 + v15) & v31;
      char v36 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v36(v34, v35, v65);
      unint64_t v37 = (v17 + v34) & v31;
      unint64_t v38 = (v17 + v35) & v31;
      v36(v37, v38, v65);
      CGFloat v39 = (void *)((v17 + v37) & v31);
      CGFloat v40 = (const void *)((v17 + v38) & v31);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v40, 1, v65))
      {
        memcpy(v39, v40, __n);
      }
      else
      {
        v36((unint64_t)v39, (unint64_t)v40, v65);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v39, 0, 1, v65);
      }
      uint64_t v50 = (void *)(((unint64_t)v39 + v66) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v51 = (void *)(((unint64_t)v40 + v66) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v50 = *v51;
      uint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
      double v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v52 = *v53;
      char v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      CGPoint v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v54 = *v55;
      *(void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v56 = 1;
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v69, v68, v6);
      long long v41 = (void *)(((unint64_t)v69 + v14) & v30);
      uint64_t v42 = (void *)(((unint64_t)v68 + v14) & v30);
      void *v41 = *v42;
      v41[1] = v42[1];
      unint64_t v43 = ((unint64_t)v41 + v15) & v31;
      unint64_t v44 = ((unint64_t)v42 + v15) & v31;
      uint64_t v45 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v45(v43, v44, v65);
      unint64_t v46 = (v17 + v43) & v31;
      unint64_t v47 = (v17 + v44) & v31;
      v45(v46, v47, v65);
      uint64_t v48 = (void *)((v17 + v46) & v31);
      uint64_t v49 = (const void *)((v17 + v47) & v31);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v49, 1, v65))
      {
        memcpy(v48, v49, __n);
      }
      else
      {
        v45((unint64_t)v48, (unint64_t)v49, v65);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v65);
      }
      char v56 = 0;
      CGFloat v57 = (void *)(((unint64_t)v48 + v66) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v58 = (void *)(((unint64_t)v49 + v66) & 0xFFFFFFFFFFFFFFF8);
      *CGFloat v57 = *v58;
      uint64_t v59 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v60 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v59 = *v60;
      double v61 = (void *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
      double v62 = (void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *double v61 = *v62;
      *(void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
    }
    unint64_t v27 = v69;
    *((unsigned char *)v69 + v67) = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)(((unint64_t)v69 + v67 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v68 + v67 + 8) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v27;
}

_DWORD *sub_1C130213C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  char v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v81 = *(void *)(v6 - 8);
    uint64_t v82 = v6;
    uint64_t v7 = *(void *)(v81 + 64);
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = v10 | 7;
    uint64_t v12 = (v10 | 7) + v7;
    uint64_t v13 = v10 + 16;
    size_t v14 = *(void *)(v9 + 64);
    size_t v15 = v14 + v10;
    uint64_t v16 = (v14 + v10 + ((v14 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84)) {
      ++v14;
    }
    size_t __n = v14;
    uint64_t v83 = a3;
    size_t v84 = v14 + 7;
    unint64_t v17 = ((((((((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    uint64_t v18 = *(void *)(a3 + 16);
    uint64_t v79 = *(void *)(v18 - 8);
    uint64_t v80 = *(void *)(v79 + 64) + v11;
    if (v17 + (v80 & ~v11) <= v17 + (v12 & ~(v10 | 7))) {
      unint64_t v19 = v17 + (v12 & ~(v10 | 7));
    }
    else {
      unint64_t v19 = v17 + (v80 & ~v11);
    }
    unsigned int v20 = *((unsigned __int8 *)a1 + v19);
    unint64_t v85 = v19;
    uint64_t v21 = v19 & 0xFFFFFFF8;
    uint64_t v77 = v21;
    BOOL v22 = v20 < 2 || v21 == 0;
    if (!v22) {
      unsigned int v20 = *a1 + 2;
    }
    uint64_t v23 = ~v11;
    uint64_t v24 = ~v10;
    uint64_t v74 = v18;
    uint64_t v75 = v12;
    if (v20 == 1)
    {
      (*(void (**)(_DWORD *, uint64_t))(v79 + 8))(a1, v18);
      unint64_t v25 = (unint64_t)a1 + v80;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v81 + 8))(a1, v82);
      unint64_t v25 = (unint64_t)a1 + v12;
    }
    unint64_t v26 = v25 & v23;
    swift_bridgeObjectRelease();
    unint64_t v27 = (v13 + v26) & v24;
    unsigned int v28 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v28(v27, v8);
    size_t v29 = (v15 + v27) & v24;
    v28(v29, v8);
    size_t v30 = (v15 + v29) & v24;
    double v78 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v78(v30, 1, v8)) {
      v28(v30, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v31 = *((unsigned __int8 *)a2 + v85);
    if (v77) {
      BOOL v32 = v31 >= 2;
    }
    else {
      BOOL v32 = 0;
    }
    if (v32) {
      unsigned int v31 = *a2 + 2;
    }
    if (v31 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v79 + 16))(a1, a2, v74);
      long long v33 = (void *)(((unint64_t)a1 + v80) & v23);
      unint64_t v34 = (void *)(((unint64_t)a2 + v80) & v23);
      *long long v33 = *v34;
      v33[1] = v34[1];
      unint64_t v35 = ((unint64_t)v33 + v13) & v24;
      unint64_t v36 = ((unint64_t)v34 + v13) & v24;
      unint64_t v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v37(v35, v36, v8);
      unint64_t v38 = (v15 + v35) & v24;
      unint64_t v39 = (v15 + v36) & v24;
      v37(v38, v39, v8);
      CGFloat v40 = (void *)((v15 + v38) & v24);
      long long v41 = (const void *)((v15 + v39) & v24);
      if (v78((size_t)v41, 1, v8))
      {
        memcpy(v40, v41, __n);
      }
      else
      {
        v37((unint64_t)v40, (unint64_t)v41, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v40, 0, 1, v8);
      }
      uint64_t v51 = (void *)(((unint64_t)v40 + v84) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v52 = (void *)(((unint64_t)v41 + v84) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v51 = *v52;
      double v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      *double v53 = *v54;
      CGPoint v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v56 = (void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      *CGPoint v55 = *v56;
      *(void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)a1 + v85) = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v81 + 16))(a1, a2, v82);
      uint64_t v42 = (void *)(((unint64_t)a1 + v75) & v23);
      unint64_t v43 = (void *)(((unint64_t)a2 + v75) & v23);
      *uint64_t v42 = *v43;
      v42[1] = v43[1];
      unint64_t v44 = ((unint64_t)v42 + v13) & v24;
      unint64_t v45 = ((unint64_t)v43 + v13) & v24;
      unint64_t v46 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v46(v44, v45, v8);
      unint64_t v47 = (v15 + v44) & v24;
      unint64_t v48 = (v15 + v45) & v24;
      v46(v47, v48, v8);
      uint64_t v49 = (void *)((v15 + v47) & v24);
      uint64_t v50 = (const void *)((v15 + v48) & v24);
      if (v78((size_t)v50, 1, v8))
      {
        memcpy(v49, v50, __n);
      }
      else
      {
        v46((unint64_t)v49, (unint64_t)v50, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v49, 0, 1, v8);
      }
      CGFloat v57 = (void *)(((unint64_t)v49 + v84) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v58 = (void *)(((unint64_t)v50 + v84) & 0xFFFFFFFFFFFFFFF8);
      *CGFloat v57 = *v58;
      uint64_t v59 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v60 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v59 = *v60;
      double v61 = (void *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
      double v62 = (void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *double v61 = *v62;
      *(void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)a1 + v85) = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v4 = a2;
    a3 = v83;
  }
  uint64_t v63 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v64 = *(void *)(sub_1C151928C() - 8);
  uint64_t v65 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v66 = *(void *)(v64 + 64);
  BOOL v22 = *(_DWORD *)(v64 + 84) == 0;
  uint64_t v67 = (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + (v65 | 7)) & ~(v65 | 7);
  uint64_t v68 = ((v65 | 7) + v63) & ~(v65 | 7);
  uint64_t v69 = (v66 + v65 + ((v66 + v65 + ((v65 + 16) & ~v65)) & ~v65)) & ~v65;
  if (v22) {
    ++v66;
  }
  unint64_t v70 = ((((((((v66 + v69 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v71 = v70 + v68;
  unint64_t v72 = v70 + v67;
  if (v72 <= v71) {
    unint64_t v72 = v71;
  }
  *(void *)(((unint64_t)a1 + v72 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v4 + v72 + 8) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C13028A4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v49 + 64);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v9 | 7;
  uint64_t v11 = (v9 | 7) + v6;
  uint64_t v12 = v9 + 16;
  size_t v13 = *(void *)(v8 + 64);
  size_t v14 = v13 + v9;
  uint64_t v15 = (v13 + v9 + ((v13 + v9 + ((v9 + 16) & ~v9)) & ~v9)) & ~v9;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v13;
  }
  size_t __n = v13;
  size_t v51 = v13 + 7;
  unint64_t v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v18 = *(void *)(v17 + 64) + v10;
  if (v16 + (v18 & ~v10) <= v16 + (v11 & ~(v9 | 7))) {
    unint64_t v19 = v16 + (v11 & ~(v9 | 7));
  }
  else {
    unint64_t v19 = v16 + (v18 & ~v10);
  }
  unsigned int v20 = *((unsigned __int8 *)a2 + v19);
  unint64_t v52 = v19;
  uint64_t v21 = v19 & 0xFFFFFFF8;
  if (v20 >= 2 && v21 != 0) {
    unsigned int v20 = *a2 + 2;
  }
  uint64_t v23 = ~v10;
  uint64_t v24 = ~v9;
  if (v20 == 1)
  {
    (*(void (**)(uint64_t, _DWORD *))(v17 + 32))(a1, a2);
    unint64_t v25 = (_OWORD *)((v18 + a1) & v23);
    unint64_t v26 = (_OWORD *)(((unint64_t)a2 + v18) & v23);
    _OWORD *v25 = *v26;
    unint64_t v27 = ((unint64_t)v25 + v12) & v24;
    unint64_t v28 = ((unint64_t)v26 + v12) & v24;
    size_t v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
    v29(v27, v28, v7);
    unint64_t v30 = (v14 + v27) & v24;
    unint64_t v31 = (v14 + v28) & v24;
    v29(v30, v31, v7);
    BOOL v32 = (void *)((v14 + v30) & v24);
    long long v33 = (const void *)((v14 + v31) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v33, 1, v7))
    {
      memcpy(v32, v33, __n);
      char v34 = 1;
    }
    else
    {
      v29((unint64_t)v32, (unint64_t)v33, v7);
      char v34 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
    }
  }
  else
  {
    (*(void (**)(uint64_t, _DWORD *, uint64_t))(v49 + 32))(a1, a2, v5);
    unint64_t v35 = (_OWORD *)((v11 + a1) & v23);
    unint64_t v36 = (_OWORD *)(((unint64_t)a2 + v11) & v23);
    *unint64_t v35 = *v36;
    unint64_t v37 = ((unint64_t)v35 + v12) & v24;
    unint64_t v38 = ((unint64_t)v36 + v12) & v24;
    unint64_t v39 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
    v39(v37, v38, v7);
    unint64_t v40 = (v14 + v37) & v24;
    unint64_t v41 = (v14 + v38) & v24;
    v39(v40, v41, v7);
    BOOL v32 = (void *)((v14 + v40) & v24);
    long long v33 = (const void *)((v14 + v41) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v33, 1, v7))
    {
      memcpy(v32, v33, __n);
    }
    else
    {
      v39((unint64_t)v32, (unint64_t)v33, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
    }
    char v34 = 0;
  }
  uint64_t v42 = (void *)(((unint64_t)v32 + v51) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v43 = (void *)(((unint64_t)v33 + v51) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v42 = *v43;
  unint64_t v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v45 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v44 = *v45;
  unint64_t v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v46 = *v47;
  *(void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t result = a1;
  *(unsigned char *)(a1 + v52) = v34;
  *(void *)((v52 + 8 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v52 + 8) & 0xFFFFFFFFFFFFFFF8);
  return result;
}

_DWORD *sub_1C1302D38(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  char v4 = a2;
  if (a1 != a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v80 = *(void *)(v6 - 8);
    uint64_t v7 = *(void *)(v80 + 64);
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = v10 | 7;
    uint64_t v79 = (v10 | 7) + v7;
    uint64_t v12 = v10 + 16;
    size_t v13 = *(void *)(v9 + 64);
    size_t v14 = v13 + v10;
    uint64_t v15 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84)) {
      ++v13;
    }
    size_t __n = v13;
    size_t v82 = v13 + 7;
    unint64_t v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    uint64_t v77 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v78 = *(void *)(v77 + 64) + v11;
    if (v16 + (v78 & ~v11) <= v16 + (v79 & ~(v10 | 7))) {
      unint64_t v17 = v16 + (v79 & ~(v10 | 7));
    }
    else {
      unint64_t v17 = v16 + (v78 & ~v11);
    }
    unsigned int v18 = *((unsigned __int8 *)a1 + v17);
    unint64_t v83 = v17;
    uint64_t v19 = v17 & 0xFFFFFFF8;
    uint64_t v75 = v19;
    BOOL v20 = v18 < 2 || v19 == 0;
    if (!v20) {
      unsigned int v18 = *a1 + 2;
    }
    uint64_t v81 = a3;
    size_t v84 = v4;
    uint64_t v21 = ~v11;
    uint64_t v22 = ~v10;
    uint64_t v72 = *(void *)(a3 + 16);
    uint64_t v73 = v6;
    if (v18 == 1)
    {
      (*(void (**)(_DWORD *, void))(v77 + 8))(a1, *(void *)(a3 + 16));
      uint64_t v23 = v78;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v80 + 8))(a1, v6);
      uint64_t v23 = v79;
    }
    unint64_t v24 = ((unint64_t)a1 + v23) & v21;
    swift_bridgeObjectRelease();
    unint64_t v25 = (v12 + v24) & v22;
    unint64_t v26 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v26(v25, v8);
    size_t v27 = (v14 + v25) & v22;
    v26(v27, v8);
    size_t v28 = (v14 + v27) & v22;
    CGFloat v76 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v76(v28, 1, v8)) {
      v26(v28, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v29 = *((unsigned __int8 *)v84 + v83);
    if (v75) {
      BOOL v30 = v29 >= 2;
    }
    else {
      BOOL v30 = 0;
    }
    if (v30) {
      unsigned int v29 = *v84 + 2;
    }
    if (v29 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v77 + 32))(a1, v84, v72);
      unint64_t v31 = (_OWORD *)(((unint64_t)a1 + v78) & v21);
      BOOL v32 = (_OWORD *)(((unint64_t)v84 + v78) & v21);
      *unint64_t v31 = *v32;
      unint64_t v33 = ((unint64_t)v31 + v12) & v22;
      unint64_t v34 = ((unint64_t)v32 + v12) & v22;
      unint64_t v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v35(v33, v34, v8);
      unint64_t v36 = (v14 + v33) & v22;
      unint64_t v37 = (v14 + v34) & v22;
      v35(v36, v37, v8);
      unint64_t v38 = (void *)((v14 + v36) & v22);
      unint64_t v39 = (const void *)((v14 + v37) & v22);
      if (v76((size_t)v39, 1, v8))
      {
        memcpy(v38, v39, __n);
      }
      else
      {
        v35((unint64_t)v38, (unint64_t)v39, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
      }
      uint64_t v49 = (void *)(((unint64_t)v38 + v82) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v50 = (void *)(((unint64_t)v39 + v82) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v49 = *v50;
      size_t v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
      *size_t v51 = *v52;
      double v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      *double v53 = *v54;
      *(void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)a1 + v83) = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v80 + 32))(a1, v84, v73);
      unint64_t v40 = (_OWORD *)(((unint64_t)a1 + v79) & v21);
      unint64_t v41 = (_OWORD *)(((unint64_t)v84 + v79) & v21);
      *unint64_t v40 = *v41;
      unint64_t v42 = ((unint64_t)v40 + v12) & v22;
      unint64_t v43 = ((unint64_t)v41 + v12) & v22;
      unint64_t v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v44(v42, v43, v8);
      unint64_t v45 = (v14 + v42) & v22;
      unint64_t v46 = (v14 + v43) & v22;
      v44(v45, v46, v8);
      unint64_t v47 = (void *)((v14 + v45) & v22);
      unint64_t v48 = (const void *)((v14 + v46) & v22);
      if (v76((size_t)v48, 1, v8))
      {
        memcpy(v47, v48, __n);
      }
      else
      {
        v44((unint64_t)v47, (unint64_t)v48, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v47, 0, 1, v8);
      }
      CGPoint v55 = (void *)(((unint64_t)v47 + v82) & 0xFFFFFFFFFFFFFFF8);
      char v56 = (void *)(((unint64_t)v48 + v82) & 0xFFFFFFFFFFFFFFF8);
      *CGPoint v55 = *v56;
      CGFloat v57 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v58 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
      *CGFloat v57 = *v58;
      uint64_t v59 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v60 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v59 = *v60;
      *(void *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)a1 + v83) = 0;
    }
    char v4 = v84;
    a3 = v81;
  }
  uint64_t v61 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v62 = *(void *)(sub_1C151928C() - 8);
  uint64_t v63 = *(unsigned __int8 *)(v62 + 80);
  uint64_t v64 = *(void *)(v62 + 64);
  BOOL v20 = *(_DWORD *)(v62 + 84) == 0;
  uint64_t v65 = (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + (v63 | 7)) & ~(v63 | 7);
  uint64_t v66 = ((v63 | 7) + v61) & ~(v63 | 7);
  uint64_t v67 = (v64 + v63 + ((v64 + v63 + ((v63 + 16) & ~v63)) & ~v63)) & ~v63;
  if (v20) {
    ++v64;
  }
  unint64_t v68 = ((((((((v64 + v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v69 = v68 + v66;
  unint64_t v70 = v68 + v65;
  if (v70 <= v69) {
    unint64_t v70 = v69;
  }
  *(void *)(((unint64_t)a1 + v70 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v4 + v70 + 8) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

id sub_1C130349C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  int v4 = *(unsigned __int8 *)(a1 + 64);
  sub_1C1517EFC();
  uint64_t v5 = sub_1BFF88E38();
  swift_release();
  if (v4) {
    uint64_t v6 = &unk_1F1B65DB0;
  }
  else {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = sub_1BFFEEC2C((uint64_t)v6, v5);
  swift_bridgeObjectRelease();
  char v8 = sub_1BFFD07D4(12, v7);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = &unk_1F1B65DD8;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = 0;
  *(_WORD *)(a2 + 40) = 768;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v3;
  *(unsigned char *)(a2 + 64) = v8 & 1 | 0x10;
  type metadata accessor for FormatAction();
  swift_storeEnumTagMultiPayload();
  return v3;
}

uint64_t static FormatIssueBinding.Action.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatIssueBinding.Action.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatIssueBinding.Action.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C130360C()
{
  unint64_t result = qword_1EA1AE198;
  if (!qword_1EA1AE198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE198);
  }
  return result;
}

unint64_t sub_1C1303660(uint64_t a1)
{
  unint64_t result = sub_1C1303688();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1303688()
{
  unint64_t result = qword_1EA1AE1A0;
  if (!qword_1EA1AE1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE1A0);
  }
  return result;
}

unint64_t sub_1C13036DC(void *a1)
{
  a1[1] = sub_1C087A2F8();
  a1[2] = sub_1C08FE7F8();
  unint64_t result = sub_1C130360C();
  a1[3] = result;
  return result;
}

uint64_t sub_1C1303714(void *a1)
{
  return FormatIssueBinding.Action.init(from:)(a1);
}

uint64_t sub_1C130372C(void *a1)
{
  return FormatIssueBinding.Action.encode(to:)(a1);
}

unsigned char *_s6ActionOwst_1(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C13037E0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Action()
{
  return &type metadata for FormatIssueBinding.Action;
}

uint64_t type metadata accessor for DebugFormatUploadHiddenTableViewCell()
{
  return self;
}

char *sub_1C1303ACC(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button;
  uint64_t v7 = self;
  char v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_buttonWithType_, 0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_onTap;
  sub_1BFD22278();
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(v10), sel_init);

  if (a2)
  {
    uint64_t v11 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v20.receiver = v8;
  v20.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v20, sel_initWithStyle_reuseIdentifier_, 3, v11);

  size_t v13 = (char *)v12;
  id v14 = objc_msgSend(v13, sel_contentView);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button;
  objc_msgSend(v14, sel_addSubview_, *(void *)&v13[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_button]);

  unint64_t v16 = *(void **)&v13[v15];
  id v17 = *(id *)&v13[OBJC_IVAR____TtC8NewsFeed36DebugFormatUploadHiddenTableViewCell_onTap];
  id v18 = v16;
  sub_1C151C87C();

  return v13;
}

uint64_t SharingTagTextActivityItemSource.__allocating_init(tag:)(uint64_t a1)
{
  return sub_1C1303CF8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1304A3C);
}

id SharingTagTextActivityItemSource.__allocating_init(feedDescriptor:)(void *a1)
{
  uint64_t v2 = v1;
  unsigned int v4 = (char *)objc_allocWithZone(v2);
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = FCFeedDescriptor.feedTag.getter();
  uint64_t v5 = FCFeedDescriptor.feedExternalTitle.getter();
  uint64_t v6 = (uint64_t *)&v4[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *uint64_t v6 = v5;
  v6[1] = v7;

  v10.receiver = v4;
  v10.super_class = v2;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  return v8;
}

uint64_t SharingTagTextActivityItemSource.init(tag:)(uint64_t a1)
{
  return sub_1C1303CF8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C130493C);
}

uint64_t sub_1C1303CF8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = a2(a1, v2, ObjectType);
  swift_unknownObjectRelease();
  return v6;
}

id SharingTagTextActivityItemSource.init(feedDescriptor:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = v2;
  *(void *)&v5[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = FCFeedDescriptor.feedTag.getter();
  uint64_t v6 = FCFeedDescriptor.feedExternalTitle.getter();
  uint64_t v7 = (uint64_t *)&v5[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *uint64_t v7 = v6;
  v7[1] = v8;

  v11.receiver = v5;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

uint64_t SharingTagTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void SharingTagTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (sub_1C151E62C() == 0xD000000000000026 && v5 == 0x80000001C160BC20)
    {
      id v6 = a1;
      swift_bridgeObjectRelease();
LABEL_6:
      id v9 = (void *)sub_1C151E39C();
      uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
      uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
      if (v10) {
        BOOL v12 = 0;
      }
      else {
        BOOL v12 = v11 == 0xE000000000000000;
      }
      if (!v12 && (sub_1C1520A9C() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v23[0] = v9;
        sub_1C1065BB8(v10, v11, 0x2D6C656E6E616863, 0xED0000656C746974, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
      id v14 = self;
      uint64_t v15 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      v23[0] = 0;
      id v16 = objc_msgSend(v14, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v15, 1, v23);

      id v17 = v23[0];
      if (v16)
      {
        uint64_t v18 = sub_1C151606C();
        uint64_t v20 = v19;

        *(void *)(a2 + 24) = MEMORY[0x1E4F277C0];
        *(void *)a2 = v18;
        *(void *)(a2 + 8) = v20;
      }
      else
      {
        uint64_t v21 = v17;
        uint64_t v22 = (void *)sub_1C1515D3C();

        swift_willThrow();
        *(_OWORD *)a2 = 0u;
        *(_OWORD *)(a2 + 16) = 0u;
      }
      return;
    }
    char v7 = sub_1C1520A9C();
    id v8 = a1;
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_6;
    }
  }
  sub_1C1304104(a1, v2, a2);
}

uint64_t sub_1C1304104@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;
  if (v6 == sub_1C151E62C() && v8 == v9) {
    goto LABEL_16;
  }
  char v11 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_17:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  size_t v13 = (void *)*MEMORY[0x1E4F435A0];
  uint64_t v14 = sub_1C151E62C();
  uint64_t v16 = v15;
  if (v14 == sub_1C151E62C() && v16 == v17)
  {
    id v29 = v13;
    id v30 = a1;

LABEL_16:
    uint64_t result = swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v19 = sub_1C1520A9C();
  id v20 = v13;
  id v21 = a1;

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_17;
  }
  uint64_t v22 = (void *)*MEMORY[0x1E4F435D0];
  uint64_t v23 = sub_1C151E62C();
  uint64_t v25 = v24;
  if (v23 == sub_1C151E62C() && v25 == v26)
  {
    id v27 = v22;
    id v28 = v21;

LABEL_22:
    uint64_t result = swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  char v31 = sub_1C1520A9C();
  id v32 = v22;
  id v33 = v21;

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v31)
  {
LABEL_23:
    *(void *)(a3 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0xE000000000000000;
    return result;
  }
  unint64_t v34 = (void *)*MEMORY[0x1E4F435B0];
  uint64_t v35 = sub_1C151E62C();
  uint64_t v37 = v36;
  if (v35 == sub_1C151E62C() && v37 == v38)
  {
    id v39 = v34;
    id v40 = v33;

    goto LABEL_22;
  }
  char v41 = sub_1C1520A9C();
  id v42 = v34;
  id v43 = v33;

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_23;
  }
LABEL_25:
  uint64_t v45 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
  uint64_t v44 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
  *(void *)(a3 + 24) = MEMORY[0x1E4FBB1A0];
  *(void *)a3 = v45;
  *(void *)(a3 + 8) = v44;
  return swift_bridgeObjectRetain();
}

Swift::String __swiftcall SharingTagTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  if (dataTypeIdentifierForActivityType.value)
  {
    unint64_t v3 = 0xD00000000000001DLL;
    if (sub_1C151E62C() == 0xD000000000000026 && v4 == 0x80000001C160BC20)
    {
      uint64_t v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      unint64_t v6 = 0x80000001C160BC50;
    }
    else
    {
      char v7 = sub_1C1520A9C();
      uint64_t v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if (v7)
      {
        unint64_t v6 = 0x80000001C160BC50;
      }
      else
      {
        unint64_t v3 = 0;
        unint64_t v6 = 0xE000000000000000;
      }
    }
  }
  else
  {
    unint64_t v3 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v9 = v3;
  uint64_t v10 = (void *)v6;
  result._object = v10;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall SharingTagTextActivityItemSource.activityViewController(_:subjectForActivityType:)(UIActivityViewController *_, UIActivityType_optional subjectForActivityType)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle);
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle + 8);
  swift_bridgeObjectRetain();
  uint64_t v5 = v3;
  unint64_t v6 = v4;
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

id SharingTagTextActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingTagTextActivityItemSource.init()()
{
}

id SharingTagTextActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C130493C(void *a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a2[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_tag] = a1;
  uint64_t v5 = a2;
  swift_unknownObjectRetain();
  id v6 = objc_msgSend(a1, sel_asPuzzleType);
  if (v6)
  {
    id v7 = objc_msgSend(v6, sel_nameForSharing);
    swift_unknownObjectRelease();
  }
  else
  {
    id v7 = objc_msgSend(a1, sel_displayName);
  }
  uint64_t v8 = sub_1C151E62C();
  uint64_t v10 = v9;

  char v11 = (uint64_t *)&v5[OBJC_IVAR____TtC8NewsFeed32SharingTagTextActivityItemSource_itemTitle];
  *char v11 = v8;
  v11[1] = v10;

  v13.receiver = v5;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

id sub_1C1304A3C(void *a1, Class a2)
{
  uint64_t v3 = (char *)objc_allocWithZone(a2);
  return sub_1C130493C(a1, v3);
}

uint64_t type metadata accessor for SharingTagTextActivityItemSource()
{
  return self;
}

uint64_t method lookup function for SharingTagTextActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingTagTextActivityItemSource);
}

uint64_t dispatch thunk of SharingTagTextActivityItemSource.__allocating_init(tag:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SharingTagTextActivityItemSource.__allocating_init(feedDescriptor:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t ResetPuzzleProgressCommandHandler.__allocating_init(historyService:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BFC773DC(a1, v2 + 16);
  return v2;
}

uint64_t ResetPuzzleProgressCommandHandler.init(historyService:)(long long *a1)
{
  sub_1BFC773DC(a1, v1 + 16);
  return v1;
}

uint64_t ResetPuzzleProgressCommandHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = v4[5];
  uint64_t v7 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v6);
  id v8 = objc_msgSend(a4, sel_identifier);
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v9, v11, v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t ResetPuzzleProgressCommandHandler.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ResetPuzzleProgressCommandHandler.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C1304C50(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v5 = *a4;
  uint64_t v6 = *(void *)(*(void *)v4 + 40);
  uint64_t v7 = *(void *)(*(void *)v4 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v4 + 16), v6);
  id v8 = objc_msgSend(v5, sel_identifier);
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v9, v11, v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed33ResetPuzzleProgressCommandHandlerC9canHandle13commandCenter0J04with6sourceSb5TeaUI0fK4Type_p_AI0F0CySo17FCPuzzleProviding_pGSoAM_pAI0F15ExecutionSourceCSgtF_0()
{
  uint64_t v0 = sub_1C151BBFC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151706C();
  sub_1C151704C();
  sub_1C1516EDC();
  sub_1C151703C();
  swift_release();
  swift_release();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E4FACB98])
  {
    char v5 = 0;
  }
  else
  {
    int v6 = v4;
    int v7 = *MEMORY[0x1E4FACBA0];
    int v8 = *MEMORY[0x1E4FACBA8];
    sub_1C15180CC();
    char v5 = sub_1C151809C();
    if (v6 != v7 && v6 != v8) {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
  return v5 & 1;
}

uint64_t method lookup function for ResetPuzzleProgressCommandHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ResetPuzzleProgressCommandHandler);
}

uint64_t dispatch thunk of ResetPuzzleProgressCommandHandler.__allocating_init(historyService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatCompilerSlotDefinitionItemSet.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinitionItemSet.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinitionItemSet.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerSlotDefinitionItemSet.auxiliary.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  return sub_1C1304F9C(v1 + *(int *)(v3 + 20), a1, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
}

uint64_t FormatCompilerSlotDefinitionItemSet.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  return sub_1C1304F9C(v1 + *(int *)(v3 + 24), a1, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

uint64_t sub_1C1304F9C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1305008(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C1305008(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1305060@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerSlotDefinitionItemSet.init(from:)(a1, a2);
}

uint64_t sub_1C1305078(void *a1)
{
  return FormatCompilerSlotDefinitionItemSet.encode(to:)(a1);
}

BOOL _s8NewsFeed35FormatCompilerSlotDefinitionItemSetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v72 = sub_1C1518CDC();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C13074AC(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v68 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v71 = (uint64_t)&v63 - v7;
  sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, v5);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v67 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v73 = (uint64_t)&v63 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v69 = (uint64_t)&v63 - v13;
  uint64_t v14 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v75 = *(void *)(v14 - 8);
  uint64_t v76 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C13074AC(0, &qword_1EA1AE1E0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  uint64_t v74 = v17;
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v63 - v18;
  sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (uint64_t *)((char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v63 - v24;
  MEMORY[0x1F4188790](v26);
  id v28 = (char *)&v63 - v27;
  id v29 = a1;
  uint64_t v30 = *a1;
  char v31 = a2;
  uint64_t v32 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1C00DFA40(v30, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  uint64_t v65 = v22;
  uint64_t v63 = v16;
  uint64_t v33 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  unint64_t v34 = v29;
  sub_1C1304F9C((uint64_t)v29 + *(int *)(v33 + 20), (uint64_t)v28, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  uint64_t v64 = v33;
  sub_1C1304F9C((uint64_t)v31 + *(int *)(v33 + 20), (uint64_t)v25, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  uint64_t v35 = (uint64_t)&v19[*(int *)(v74 + 48)];
  sub_1C1304F9C((uint64_t)v28, (uint64_t)v19, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  sub_1C1304F9C((uint64_t)v25, v35, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  uint64_t v37 = v31;
  if (v36((uint64_t)v19, 1, v76) != 1)
  {
    uint64_t v38 = v65;
    sub_1C1304F9C((uint64_t)v19, (uint64_t)v65, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    if (v36(v35, 1, v76) != 1)
    {
      id v43 = v63;
      sub_1C13075B4(v35, (uint64_t)v63);
      BOOL v44 = _s8NewsFeed44FormatCompilerSlotDefinitionItemSetAuxiliaryV2eeoiySbAC_ACtFZ_0(v38, v43);
      sub_1C130694C((uint64_t)v43);
      sub_1BFE307BC((uint64_t)v25, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      sub_1BFE307BC((uint64_t)v28, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      sub_1C130694C((uint64_t)v38);
      sub_1BFE307BC((uint64_t)v19, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      if (!v44) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_1BFE307BC((uint64_t)v25, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    sub_1BFE307BC((uint64_t)v28, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    sub_1C130694C((uint64_t)v38);
LABEL_7:
    id v39 = &qword_1EA1AE1E0;
    id v40 = &qword_1EB8943F0;
    char v41 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary;
    uint64_t v42 = (uint64_t)v19;
LABEL_15:
    sub_1C1307510(v42, v39, v40, (void (*)(uint64_t))v41);
    return 0;
  }
  sub_1BFE307BC((uint64_t)v25, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  sub_1BFE307BC((uint64_t)v28, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
  if (v36(v35, 1, v76) != 1) {
    goto LABEL_7;
  }
  sub_1BFE307BC((uint64_t)v19, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
LABEL_9:
  uint64_t v45 = v64;
  uint64_t v46 = (uint64_t)v34 + *(int *)(v64 + 24);
  unint64_t v47 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  uint64_t v48 = v69;
  sub_1C1304F9C(v46, v69, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v49 = v73;
  sub_1C1304F9C((uint64_t)v37 + *(int *)(v45 + 24), v73, (unint64_t *)&qword_1EB884FE0, v47);
  uint64_t v50 = v71;
  uint64_t v51 = v71 + *(int *)(v68 + 48);
  sub_1C1304F9C(v48, v71, (unint64_t *)&qword_1EB884FE0, v47);
  sub_1C1304F9C(v49, v51, (unint64_t *)&qword_1EB884FE0, v47);
  uint64_t v52 = v70;
  double v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  uint64_t v54 = v72;
  if (v53(v50, 1, v72) == 1)
  {
    CGPoint v55 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
    sub_1BFE307BC(v49, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    sub_1BFE307BC(v48, (unint64_t *)&qword_1EB884FE0, v55);
    if (v53(v51, 1, v54) == 1)
    {
      sub_1BFE307BC(v50, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v56 = v67;
  sub_1C1304F9C(v50, v67, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  if (v53(v51, 1, v54) == 1)
  {
    CGFloat v57 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
    sub_1BFE307BC(v73, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    sub_1BFE307BC(v48, (unint64_t *)&qword_1EB884FE0, v57);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v56, v54);
LABEL_14:
    id v39 = (unint64_t *)&qword_1EB884FE8;
    id v40 = (unint64_t *)&qword_1EB884FE0;
    char v41 = (uint64_t (*)())MEMORY[0x1E4FAAFC8];
    uint64_t v42 = v50;
    goto LABEL_15;
  }
  uint64_t v59 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v66, v51, v54);
  sub_1C130756C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
  char v60 = sub_1C151E5CC();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v52 + 8);
  v61(v59, v54);
  uint64_t v62 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE307BC(v73, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  sub_1BFE307BC(v48, (unint64_t *)&qword_1EB884FE0, v62);
  v61((char *)v56, v54);
  sub_1BFE307BC(v50, (unint64_t *)&qword_1EB884FE0, v62);
  return (v60 & 1) != 0;
}

uint64_t sub_1C13059B8(uint64_t a1)
{
  uint64_t result = sub_1C130756C(&qword_1EA1AE1D0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1305A10(void *a1)
{
  a1[1] = sub_1C130756C(&qword_1EB880A50, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  a1[2] = sub_1C130756C(&qword_1EB860AC0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  uint64_t result = sub_1C130756C(&qword_1EA1AE1D8, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  a1[3] = result;
  return result;
}

uint64_t sub_1C1305ABC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1305AC8(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCompilerSlotDefinitionItemSet(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v29 = v12;
      uint64_t v15 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = *(int *)(v11 + 24);
      __dst = (char *)v9 + v16;
      uint64_t v30 = (char *)v10 + v16;
      char v31 = v9;
      uint64_t v17 = sub_1C1518CDC();
      uint64_t v18 = *(void *)(v17 - 8);
      char v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v30, 1, v17))
      {
        sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(__dst, v30, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v30, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v11);
    }
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_1C1518CDC();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return v7;
}

uint64_t destroy for FormatCompilerSlotDefinitionItemSet(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_1C1518CDC();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = sub_1C1518CDC();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

void *initializeWithCopy for FormatCompilerSlotDefinitionItemSet(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = v7;
    uint64_t v14 = v8[1];
    *uint64_t v13 = *v8;
    v13[1] = v14;
    uint64_t v15 = *(int *)(v9 + 24);
    uint64_t v29 = v13;
    uint64_t v30 = v3;
    uint64_t v27 = (char *)v8 + v15;
    __dst = (char *)v13 + v15;
    uint64_t v16 = sub_1C1518CDC();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v27, 1, v16))
    {
      sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v27, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v27, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
    uint64_t v3 = v30;
  }
  uint64_t v20 = *(int *)(v3 + 24);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1C1518CDC();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

void *assignWithCopy for FormatCompilerSlotDefinitionItemSet(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v7 + 1) = *((void *)v8 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = *(int *)(v9 + 24);
      uint64_t v24 = &v7[v23];
      uint64_t v25 = &v8[v23];
      uint64_t v26 = sub_1C1518CDC();
      uint64_t v27 = *(void *)(v26 - 8);
      id v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
      int v29 = v28(v24, 1, v26);
      int v30 = v28(v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v30)
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
      }
      sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v20 = *(void *)(*(void *)(v41 - 8) + 64);
      uint64_t v21 = v24;
      uint64_t v22 = v25;
LABEL_8:
      memcpy(v21, v22, v20);
      goto LABEL_14;
    }
    sub_1C130694C((uint64_t)v7);
LABEL_7:
    sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    size_t v20 = *(void *)(*(void *)(v19 - 8) + 64);
    uint64_t v21 = v7;
    uint64_t v22 = v8;
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  BOOL v44 = v4;
  *(void *)uint64_t v7 = *(void *)v8;
  *((void *)v7 + 1) = *((void *)v8 + 1);
  uint64_t v14 = *(int *)(v9 + 24);
  uint64_t v42 = &v8[v14];
  __dst = &v7[v14];
  uint64_t v15 = sub_1C1518CDC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v42, 1, v15))
  {
    sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(__dst, v42, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v42, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v4 = v44;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)v4 + v31;
  uint64_t v34 = sub_1C1518CDC();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_19;
  }
  if (v38)
  {
LABEL_19:
    sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  return a1;
}

uint64_t sub_1C130694C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for FormatCompilerSlotDefinitionItemSet(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    uint64_t v13 = *(int *)(v9 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_1C1518CDC();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v19 = *(int *)(a3 + 24);
  size_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_1C1518CDC();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

void *assignWithTake for FormatCompilerSlotDefinitionItemSet(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_bridgeObjectRelease();
      *((void *)v7 + 1) = *((void *)v8 + 1);
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(v9 + 24);
      uint64_t v26 = &v7[v25];
      uint64_t v27 = &v8[v25];
      uint64_t v28 = sub_1C1518CDC();
      uint64_t v29 = *(void *)(v28 - 8);
      int v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
      int v31 = v30(v26, 1, v28);
      int v32 = v30(v27, 1, v28);
      if (v31)
      {
        if (!v32)
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v32)
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
      }
      sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v22 = *(void *)(*(void *)(v43 - 8) + 64);
      uint64_t v23 = v26;
      uint64_t v24 = v27;
LABEL_8:
      memcpy(v23, v24, v22);
      goto LABEL_14;
    }
    sub_1C130694C((uint64_t)v7);
LABEL_7:
    sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    size_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
    uint64_t v23 = v7;
    uint64_t v24 = v8;
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = *((void *)v8 + 1);
  *(void *)uint64_t v7 = *(void *)v8;
  *((void *)v7 + 1) = v14;
  uint64_t v15 = *(int *)(v9 + 24);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_1C1518CDC();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v33 = *(int *)(a3 + 24);
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_1C1518CDC();
  uint64_t v37 = *(void *)(v36 - 8);
  int v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    goto LABEL_19;
  }
  if (v40)
  {
LABEL_19:
    sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  return a1;
}

uint64_t sub_1C13071E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

void *sub_1C1307348(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C1305008(0, &qword_1EB8943F0, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1C1305008(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C13074AC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C1305008(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C1307510(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C13074AC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C130756C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C13075B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:contextLayoutOptions:contentFrameIdentifier:puzzleIdentifier:accessibilityRole:isResizable:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22,uint64_t a23)
{
  swift_allocObject();
  uint64_t v27 = sub_1C1308BEC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23);
  swift_release();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatPuzzleEmbedNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.style.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[12];
  uint64_t v3 = v1[13];
  uint64_t v4 = v1[14];
  uint64_t v5 = v1[15];
  uint64_t v6 = v1[16];
  uint64_t v7 = v1[17];
  uint64_t v8 = v1[18];
  uint64_t v9 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1C05DDB68(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 160);
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 168);
}

unint64_t FormatPuzzleEmbedNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 176);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.contentFrameIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatPuzzleEmbedNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 216);
  *(void *)a1 = *(void *)(v1 + 208);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.isResizable.getter()
{
  return *(unsigned __int8 *)(v0 + 217);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.location.getter()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:contextLayoutOptions:contentFrameIdentifier:puzzleIdentifier:accessibilityRole:isResizable:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23 = sub_1C1308BEC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23);
  swift_release();
  swift_bridgeObjectRelease();
  return v23;
}

unint64_t sub_1C1307940(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x656C797473;
      break;
    case 5:
      unint64_t result = 0x676E697A69736572;
      break;
    case 6:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 7:
      unint64_t result = 0x696C696269736976;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x617A697365527369;
      break;
    case 12:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 13:
      unint64_t result = 0x6564496573756572;
      break;
    case 14:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1307B2C()
{
  return sub_1C1307940(*v0);
}

uint64_t sub_1C1307B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1309218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1307B5C(uint64_t a1)
{
  unint64_t v2 = sub_1C1308CD0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1307B98(uint64_t a1)
{
  unint64_t v2 = sub_1C1308CD0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *FormatPuzzleEmbedNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C05DDBE4(v0[12], v0[13], v0[14], v0[15], v0[16], v0[17], v0[18]);
  swift_release();
  sub_1BFF0056C(v0[22]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.__deallocating_deinit()
{
  FormatPuzzleEmbedNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1308D24(0, &qword_1EA1AE1E8, (uint64_t (*)(void))sub_1C1308CD0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1308CD0();
  sub_1C1520F0C();
  LOBYTE(v15) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1C15207CC();
    LOBYTE(v15) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    long long v15 = *(_OWORD *)(v3 + 64);
    long long v16 = v10;
    char v19 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C730(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    long long v11 = *(_OWORD *)(v3 + 112);
    long long v15 = *(_OWORD *)(v3 + 96);
    long long v16 = v11;
    long long v12 = *(_OWORD *)(v3 + 144);
    long long v17 = *(_OWORD *)(v3 + 128);
    long long v18 = v12;
    char v19 = 4;
    sub_1C08F28B8();
    sub_1C152078C();
    *(void *)&long long v15 = *(void *)(v3 + 160);
    char v19 = 5;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v15) = 6;
    sub_1C15207FC();
    *(void *)&long long v15 = *(void *)(v3 + 176);
    char v19 = 7;
    sub_1C009DA10();
    sub_1C152080C();
    *(void *)&long long v15 = *(void *)(v3 + 184);
    char v19 = 8;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C730(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    LOBYTE(v15) = 9;
    sub_1C152074C();
    char v13 = *(unsigned char *)(v3 + 216);
    *(void *)&long long v15 = *(void *)(v3 + 208);
    BYTE8(v15) = v13;
    char v19 = 10;
    sub_1BFDD5084();
    sub_1C152078C();
    LOBYTE(v15) = 11;
    sub_1C15207DC();
    LOBYTE(v15) = 12;
    sub_1C152074C();
    LOBYTE(v15) = 13;
    sub_1C15207CC();
    *(void *)&long long v15 = *(void *)(v3 + 256);
    char v19 = 14;
    sub_1C1308D24(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C1308D8C(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatPuzzleEmbedNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatPuzzleEmbedNodeLayoutAttributes.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1308D24(0, &qword_1EA1AE1F8, (uint64_t (*)(void))sub_1C1308CD0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1308CD0();
  uint64_t v24 = v7;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
    uint64_t v20 = (uint64_t)a1;
  }
  else
  {
    uint64_t v21 = a1;
    uint64_t v8 = v22;
    LOBYTE(v25) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v9;
    LOBYTE(v25) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v25) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v29 = 3;
    sub_1BFE4C730(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v26;
    *(_OWORD *)(v1 + 64) = v25;
    *(_OWORD *)(v1 + 80) = v12;
    char v29 = 4;
    sub_1C089E5DC();
    sub_1C152065C();
    long long v14 = v26;
    *(_OWORD *)(v1 + 96) = v25;
    *(_OWORD *)(v1 + 112) = v14;
    long long v15 = v28;
    *(_OWORD *)(v1 + 128) = v27;
    *(_OWORD *)(v1 + 144) = v15;
    char v29 = 5;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 160) = v25;
    LOBYTE(v25) = 6;
    *(void *)(v1 + 168) = sub_1C15206DC();
    char v29 = 7;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 176) = v25;
    type metadata accessor for FormatContextLayoutOptions();
    char v29 = 8;
    sub_1BFE4C730(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 184) = v25;
    LOBYTE(v25) = 9;
    *(void *)(v1 + 192) = sub_1C152060C();
    *(void *)(v1 + 200) = v16;
    char v29 = 10;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v17 = BYTE8(v25);
    *(void *)(v1 + 208) = v25;
    *(unsigned char *)(v1 + 216) = v17;
    LOBYTE(v25) = 11;
    *(unsigned char *)(v1 + 217) = sub_1C15206AC() & 1;
    LOBYTE(v25) = 12;
    *(void *)(v1 + 224) = sub_1C152060C();
    *(void *)(v1 + 232) = v18;
    LOBYTE(v25) = 13;
    *(void *)(v1 + 240) = sub_1C152069C();
    *(void *)(v1 + 248) = v19;
    sub_1C1308D24(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v29 = 14;
    sub_1C1308D8C(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v23);
    uint64_t v3 = v1;
    *(void *)(v1 + 256) = v25;
    uint64_t v20 = (uint64_t)v21;
  }
  __swift_destroy_boxed_opaque_existential_1(v20);
  return v3;
}

uint64_t sub_1C1308AC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatPuzzleEmbedNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C1308B1C(void *a1)
{
  return FormatPuzzleEmbedNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C1308B40(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C730(&qword_1EA1A93E8, a2, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t sub_1C1308BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24 = *a8;
  uint64_t v25 = *a14;
  uint64_t v26 = *a20;
  char v27 = *((unsigned char *)a20 + 8);
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  *(void *)(v23 + 32) = a3;
  *(void *)(v23 + 40) = a4;
  *(void *)(v23 + 48) = a5;
  *(void *)(v23 + 56) = a6;
  *(double *)(v23 + 64) = a9;
  *(double *)(v23 + 72) = a10;
  *(double *)(v23 + 80) = a11;
  *(double *)(v23 + 88) = a12;
  long long v28 = a7[1];
  *(_OWORD *)(v23 + 96) = *a7;
  *(_OWORD *)(v23 + 112) = v28;
  long long v29 = a7[3];
  *(_OWORD *)(v23 + 128) = a7[2];
  *(_OWORD *)(v23 + 144) = v29;
  *(void *)(v23 + 160) = v24;
  *(void *)(v23 + 168) = a13;
  *(void *)(v23 + 176) = v25;
  *(void *)(v23 + 184) = a15;
  *(void *)(v23 + 192) = a16;
  *(void *)(v23 + 200) = a17;
  *(void *)(v23 + 208) = v26;
  *(unsigned char *)(v23 + 216) = v27;
  *(unsigned char *)(v23 + 217) = a21;
  *(void *)(v23 + 224) = a22;
  *(void *)(v23 + 232) = a23;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C151E80C();
  sub_1C151E80C();
  *(void *)(v23 + 240) = a3;
  *(void *)(v23 + 248) = a4;
  *(void *)(v23 + 256) = MEMORY[0x1E4FBC870];
  return v23;
}

unint64_t sub_1C1308CD0()
{
  unint64_t result = qword_1EA1AE1F0;
  if (!qword_1EA1AE1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE1F0);
  }
  return result;
}

void sub_1C1308D24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C1308D8C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1308D24(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1308E30(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C730(&qword_1EA1AE200, a2, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C1308E9C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C730(&qword_1EA1A9340, a2, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t sub_1C1308EE4(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C730(&qword_1EA1A9398, a2, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t sub_1C1308F2C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C730(&qword_1EA1AE208, a2, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t method lookup function for FormatPuzzleEmbedNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPuzzleEmbedNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:contextLayoutOptions:contentFrameIdentifier:puzzleIdentifier:accessibilityRole:isResizable:location:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of FormatPuzzleEmbedNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

unsigned char *storeEnumTagSinglePayload for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C13090D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatPuzzleEmbedNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C1309114()
{
  unint64_t result = qword_1EA1AE210;
  if (!qword_1EA1AE210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE210);
  }
  return result;
}

unint64_t sub_1C130916C()
{
  unint64_t result = qword_1EA1AE218;
  if (!qword_1EA1AE218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE218);
  }
  return result;
}

unint64_t sub_1C13091C4()
{
  unint64_t result = qword_1EA1AE220;
  if (!qword_1EA1AE220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE220);
  }
  return result;
}

uint64_t sub_1C1309218(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C15FCE70 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x617A697365527369 && a2 == 0xEB00000000656C62 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

id sub_1C1309840(uint64_t a1)
{
  return sub_1C1309860(a1, 1, &qword_1EB8613D0);
}

id sub_1C1309850(uint64_t a1)
{
  return sub_1C1309860(a1, 3, &qword_1EA1AE228);
}

id sub_1C1309860(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
  objc_msgSend(v5, sel_setUnitsStyle_, a2);
  id result = objc_msgSend(v5, sel_setAllowedUnits_, 240);
  *a3 = v5;
  return result;
}

uint64_t type metadata accessor for PuzzlePlayDurationFormatter()
{
  return self;
}

BOOL static FormatBindingURLExpressionLogic.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatBindingURLExpressionLogic.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatBindingURLExpressionLogic.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C1309990()
{
  unint64_t result = qword_1EA1AE230;
  if (!qword_1EA1AE230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE230);
  }
  return result;
}

unint64_t sub_1C13099E4(uint64_t a1)
{
  unint64_t result = sub_1C1309A0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1309A0C()
{
  unint64_t result = qword_1EA1AE238;
  if (!qword_1EA1AE238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE238);
  }
  return result;
}

unint64_t sub_1C1309A60(void *a1)
{
  a1[1] = sub_1BFCC9024();
  a1[2] = sub_1BFD02A44();
  unint64_t result = sub_1C1309990();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingURLExpressionLogic()
{
  return &type metadata for FormatBindingURLExpressionLogic;
}

id sub_1C1309AD0(uint64_t a1, uint64_t a2, uint64_t *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v64 = a7;
  uint64_t v62 = a8;
  uint64_t v63 = a6;
  uint64_t v60 = a1;
  uint64_t v61 = a5;
  uint64_t v53 = type metadata accessor for FormatAction();
  MEMORY[0x1F4188790](v53);
  uint64_t v54 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  CGPoint v55 = &v47[-v15];
  sub_1BFFEEDD0(0, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = &v47[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = &v47[-v20];
  uint64_t v23 = *a3;
  uint64_t v22 = a3[1];
  uint64_t v58 = a3[2];
  uint64_t v59 = v22;
  uint64_t v24 = a3[3];
  uint64_t v56 = a3[4];
  uint64_t v57 = v24;
  uint64_t v25 = &a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_createMenuElementsBlock];
  uint64_t v26 = *(void *)&a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_createMenuElementsBlock];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  sub_1BFC3E5C0(v26);
  objc_msgSend(a4, sel_setActivityItemsConfiguration_, 0);
  uint64_t v27 = *(void *)(v23 + 16);
  uint64_t v29 = *(void *)(v27 + 48);
  uint64_t v28 = *(void *)(v27 + 56);
  int v30 = &a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_identifier];
  swift_beginAccess();
  *(void *)int v30 = v29;
  *((void *)v30 + 1) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v31 = *(void **)&a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_onTap];

  int v32 = *(void **)&a4[OBJC_IVAR____TtC8NewsFeed12FormatButton_onLongPress];
  sub_1C151F8FC();
  uint64_t v33 = *(void *)(v23 + 72);
  uint64_t v34 = *(unsigned __int8 *)(v23 + 80);
  objc_msgSend(a4, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a4, sel_setAccessibilityElementsHidden_, 0);
  if (v34 <= 0xFD)
  {
    if ((v34 & 0x80) != 0)
    {
      if (!(v33 | v34 ^ 0x80)) {
        goto LABEL_7;
      }
      uint64_t v35 = &selRef_setAccessibilityElementsHidden_;
    }
    else
    {
      uint64_t v35 = &selRef_setIsAccessibilityElement_;
    }
    objc_msgSend(a4, *v35, 1);
  }
LABEL_7:
  swift_beginAccess();
  id result = objc_msgSend(a4, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(v23 + 56));
  if (*(unsigned char *)(v23 + 56) == 1)
  {
    uint64_t v52 = v32;
    uint64_t v49 = v18;
    sub_1C007AF6C(a2, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeDataAction);
    uint64_t v37 = type metadata accessor for FormatButtonNodeDataAction();
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v38 + 56))(v21, 0, 1, v37);
    uint64_t v65 = v23;
    uint64_t v66 = v59;
    uint64_t v67 = v58;
    uint64_t v68 = v57;
    uint64_t v69 = v56;
    uint64_t v50 = a10;
    uint64_t v51 = a9;
    int v48 = sub_1C130A1E8(v60, a4, v31, (uint64_t)v21, v61, v63, &v65, v64, v62, a9, a10);
    sub_1BFFE9588((uint64_t)v21, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
    uint64_t v39 = a2 + *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
    uint64_t v40 = (uint64_t)v49;
    sub_1BFFEAB38(v39, (uint64_t)v49, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v37) == 1)
    {
      sub_1BFFE9588(v40, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
      char v41 = 0;
    }
    else
    {
      uint64_t v42 = v55;
      sub_1C007AF6C(v40, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatAction);
      sub_1BFC54B6C(v40, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeDataAction);
      uint64_t v43 = v54;
      sub_1C007AF6C((uint64_t)v42, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for FormatAction);
      char v41 = 0;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 4u:
        case 5u:
          sub_1BFC54B6C((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatAction);
          goto LABEL_17;
        case 3u:
        case 6u:
LABEL_17:
          char v41 = 1;
          break;
        case 7u:
          break;
        default:
          sub_1BFC54B6C((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatAction);
          char v41 = 0;
          break;
      }
      sub_1BFC54B6C((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatAction);
    }
    sub_1C00831CC(v41);
    uint64_t v65 = v23;
    uint64_t v66 = v59;
    uint64_t v67 = v58;
    uint64_t v68 = v57;
    uint64_t v69 = v56;
    int v44 = sub_1C130A1E8(v60, a4, v52, v39, v61, v63, &v65, v64, v62, v51, v50);
    if (v48 == 2)
    {
      uint64_t v45 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
      if (v44 == 2) {
        uint64_t v46 = 0;
      }
      else {
        uint64_t v46 = v44 & 1;
      }
    }
    else
    {
      uint64_t v45 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
      if (v44 == 2) {
        uint64_t v46 = v48 & 1;
      }
      else {
        uint64_t v46 = (v48 | v44) & 1;
      }
    }
    id result = objc_msgSend(a4, (SEL)v45[450], v46);
    if (!*(void *)v25)
    {
      if (objc_msgSend(a4, sel_isContextMenuInteractionEnabled)) {
        objc_msgSend(a4, sel_setContextMenuInteractionEnabled_, 0);
      }
      id result = objc_msgSend(a4, sel_showsMenuAsPrimaryAction);
      if (result) {
        return objc_msgSend(a4, sel_setShowsMenuAsPrimaryAction_, 0);
      }
    }
  }
  else if (!*(void *)v25)
  {
    if (objc_msgSend(a4, sel_isContextMenuInteractionEnabled)) {
      objc_msgSend(a4, sel_setContextMenuInteractionEnabled_, 0);
    }
    id result = objc_msgSend(a4, sel_showsMenuAsPrimaryAction);
    if (result) {
      return objc_msgSend(a4, sel_setShowsMenuAsPrimaryAction_, 0);
    }
  }
  return result;
}

uint64_t sub_1C130A1E8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v97 = a8;
  uint64_t v95 = a6;
  uint64_t v96 = a5;
  id v100 = a3;
  id v102 = a2;
  uint64_t v15 = a10;
  uint64_t v14 = a11;
  uint64_t v16 = type metadata accessor for FormatPurchaseData(0);
  uint64_t v88 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v91 = (uint64_t)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v94 = (uint64_t)&v86 - v19;
  uint64_t v93 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v89 = v21;
  uint64_t v92 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFEEDD0(0, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v86 - v23;
  uint64_t v101 = type metadata accessor for FormatAction();
  MEMORY[0x1F4188790](v101);
  uint64_t v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a7[2];
  uint64_t v27 = a7[3];
  uint64_t v29 = a7[4];
  uint64_t v103 = a1;
  if (v27)
  {
    uint64_t v30 = *a7;
    *(void *)&long long v105 = v28;
    *((void *)&v105 + 1) = v27;
    *(void *)&long long v106 = v29;
    uint64_t v31 = *(void *)(v30 + 16);
    uint64_t v99 = a10;
    uint64_t v98 = (uint64_t)v26;
    uint64_t v32 = *(void *)(v31 + 64);
    uint64_t v33 = *(void *)(v31 + 72);
    sub_1C017C3D4(v28, v27);
    swift_bridgeObjectRetain();
    uint64_t v34 = v32;
    uint64_t v14 = a11;
    uint64_t v15 = v99;
    sub_1C1011968(v34, v33, v99, a11, &v110);
    swift_bridgeObjectRelease();
    uint64_t v26 = (char *)v98;
    sub_1C017C418(v28, v27);
    uint64_t v27 = *((void *)&v110 + 1);
    uint64_t v28 = v110;
    uint64_t v29 = v111;
  }
  sub_1BFFEAB38(a4, (uint64_t)v24, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  uint64_t v35 = type metadata accessor for FormatButtonNodeDataAction();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v24, 1, v35) == 1)
  {
    sub_1BFFE9588((uint64_t)v24, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
    sub_1C017C418(v28, v27);
    return 2;
  }
  else
  {
    sub_1C007AF6C((uint64_t)v24, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FormatAction);
    sub_1BFC54B6C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeDataAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v38 = v103;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        long long v44 = *((_OWORD *)v26 + 3);
        long long v112 = *((_OWORD *)v26 + 2);
        long long v113 = v44;
        LOBYTE(v114) = v26[64];
        long long v45 = *((_OWORD *)v26 + 1);
        long long v110 = *(_OWORD *)v26;
        long long v111 = v45;
        uint64_t v101 = v27;
        sub_1C151F91C();
        uint64_t v97 = swift_allocObject();
        swift_weakInit();
        uint64_t v98 = swift_allocObject();
        swift_weakInit();
        uint64_t v94 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v46 = v93;
        unint64_t v47 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v38, v15);
        unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        uint64_t v91 = v29;
        unint64_t v49 = (v48 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v50 = (v48 + v89 + 79) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v90 = v28;
        unint64_t v52 = (v51 + 31) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v53 = (char *)swift_allocObject();
        uint64_t v99 = v15;
        *((void *)v53 + 2) = v15;
        *((void *)v53 + 3) = v14;
        uint64_t v87 = v14;
        *((void *)v53 + 4) = v97;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v53[v48], v47, v15);
        uint64_t v54 = &v53[v49];
        long long v55 = v113;
        *((_OWORD *)v54 + 2) = v112;
        *((_OWORD *)v54 + 3) = v55;
        v54[64] = v114;
        long long v56 = v111;
        *(_OWORD *)uint64_t v54 = v110;
        *((_OWORD *)v54 + 1) = v56;
        *(void *)&v53[v50] = v98;
        uint64_t v57 = (uint64_t *)&v53[v51];
        uint64_t v58 = v90;
        uint64_t v59 = v101;
        *uint64_t v57 = v90;
        v57[1] = v59;
        uint64_t v60 = v91;
        _OWORD v57[2] = v91;
        *(void *)&v53[v52] = v94;
        swift_retain();
        sub_1C130CA40((uint64_t)&v110);
        swift_retain();
        sub_1C017C3D4(v58, v59);
        swift_retain();
        id v61 = v102;
        sub_1C1383290(v100, (uint64_t)sub_1C130C984, (uint64_t)v53);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        long long v107 = v112;
        long long v108 = v113;
        char v109 = v114;
        long long v106 = v111;
        long long v105 = v110;
        v104[0] = v58;
        v104[1] = v59;
        v104[2] = v60;
        sub_1C130B23C(v103, (uint64_t)&v105, v95, v104, v61, v96, v99, v87);
        swift_bridgeObjectRelease();
        sub_1C017C418(v58, v59);
        sub_1C130CAA0((uint64_t)&v110);
        goto LABEL_16;
      case 2:
        uint64_t v62 = *(void *)v26;
        sub_1C151F91C();
        uint64_t v63 = swift_allocObject();
        swift_weakInit();
        uint64_t v64 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v65 = (void *)swift_allocObject();
        v65[2] = v63;
        v65[3] = v64;
        v65[4] = v28;
        v65[5] = v27;
        v65[6] = v29;
        v65[7] = v62;
        swift_retain();

        swift_release();
        goto LABEL_15;
      case 3:
      case 6:
        sub_1C017C418(v28, v27);
        char v83 = *v26;
        sub_1C151F91C();
        uint64_t v84 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = v84;
        *(unsigned char *)(v85 + 24) = v83;
        *(void *)(v85 + 32) = v97;
        *(void *)(v85 + 40) = a9;
        swift_retain();

        goto LABEL_15;
      case 4:
        sub_1C017C418(v28, v27);
        long long v66 = *((_OWORD *)v26 + 5);
        long long v114 = *((_OWORD *)v26 + 4);
        long long v115 = v66;
        long long v67 = *((_OWORD *)v26 + 7);
        long long v116 = *((_OWORD *)v26 + 6);
        long long v117 = v67;
        long long v68 = *((_OWORD *)v26 + 1);
        long long v110 = *(_OWORD *)v26;
        long long v111 = v68;
        long long v69 = *((_OWORD *)v26 + 3);
        long long v112 = *((_OWORD *)v26 + 2);
        long long v113 = v69;
        sub_1C151F91C();
        uint64_t v70 = (_OWORD *)swift_allocObject();
        long long v71 = v115;
        v70[5] = v114;
        v70[6] = v71;
        long long v72 = v117;
        v70[7] = v116;
        v70[8] = v72;
        long long v73 = v111;
        v70[1] = v110;
        v70[2] = v73;
        long long v74 = v113;
        v70[3] = v112;
        v70[4] = v74;
        sub_1C130C688((uint64_t)&v110);
        uint64_t v75 = (void *)sub_1C151C83C();
        sub_1C034A888((uint64_t)&v110);

        goto LABEL_15;
      case 5:
        sub_1C017C418(v28, v27);
        uint64_t v76 = v94;
        sub_1BFFEAA68((uint64_t)v26, v94, type metadata accessor for FormatPurchaseData);
        sub_1C151F91C();
        uint64_t v77 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v78 = v91;
        sub_1C007AF6C(v76, v91, type metadata accessor for FormatPurchaseData);
        unint64_t v79 = (*(unsigned __int8 *)(v88 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
        unint64_t v80 = (v90 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        *(void *)(v81 + 16) = v77;
        sub_1BFFEAA68(v78, v81 + v79, type metadata accessor for FormatPurchaseData);
        size_t v82 = (uint64_t *)(v81 + v80);
        *size_t v82 = v97;
        v82[1] = a9;
        swift_retain();

        swift_release();
        sub_1BFC54B6C(v76, type metadata accessor for FormatPurchaseData);
        goto LABEL_16;
      case 7:
        sub_1C017C418(v28, v27);
        objc_msgSend(v102, sel_setUserInteractionEnabled_, 0);
        return 0;
      default:
        uint64_t v40 = *(void *)v26;
        uint64_t v39 = (void *)*((void *)v26 + 1);
        unsigned __int8 v41 = v26[16];
        if (!*(void *)(*(void *)v26 + 16))
        {
          sub_1C017C418(v28, v27);
          swift_bridgeObjectRelease();
          sub_1C0181C68(v39, v41);
          return 2;
        }
        sub_1C151F91C();
        uint64_t v42 = swift_allocObject();
        swift_weakInit();
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = v42;
        *(void *)(v43 + 24) = v28;
        *(void *)(v43 + 32) = v27;
        *(void *)(v43 + 40) = v29;
        *(void *)(v43 + 48) = v40;
        *(void *)(v43 + 56) = v39;
        *(unsigned char *)(v43 + 64) = v41;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C130CB7C(v39, v41);
        sub_1C1383290(v100, (uint64_t)sub_1C130CB68, v43);
        swift_bridgeObjectRelease();
        sub_1C0181C68(v39, v41);
        swift_release();
LABEL_15:
        swift_release();
LABEL_16:
        uint64_t result = 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C130AEC0(int a1, id a2, uint64_t a3)
{
  if (objc_msgSend(a2, sel_showsMenuAsPrimaryAction)) {
    return (uint64_t)objc_msgSend(a2, sel__feldsparAccessibilityPresentMenu);
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](a3 + 16);
  if (result)
  {
    char v6 = (void *)result;
    MEMORY[0x1C18C4390]();

    return 1;
  }
  return result;
}

uint64_t sub_1C130AF48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1C151BBCC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v14 = Strong;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FACB48], v9);
  uint64_t v15 = *(void *)(v14 + 32);
  swift_retain();
  sub_1C017C3D4(a3, a4);
  id v16 = a1;
  uint64_t v17 = sub_1C130BE80(a3, a4, a5, (uint64_t)v12, v15);
  swift_retain();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C130C200(v18, v14, v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v19;
}

uint64_t sub_1C130B0F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  long long v17 = *(_OWORD *)(a4 + 48);
  v24[2] = *(_OWORD *)(a4 + 32);
  v24[3] = v17;
  char v25 = *(unsigned char *)(a4 + 64);
  long long v18 = *(_OWORD *)(a4 + 16);
  v24[0] = *(_OWORD *)a4;
  v24[1] = v18;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v23[0] = a6;
  v23[1] = a7;
  id v23[2] = a8;
  swift_beginAccess();
  uint64_t v20 = (void *)MEMORY[0x1C18C9C60](a9 + 16);
  uint64_t v21 = sub_1C130B23C(a3, (uint64_t)v24, Strong, v23, a1, (uint64_t)v20, a10, a11);

  swift_release();
  swift_release();
  return v21;
}

uint64_t sub_1C130B23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v50 = a8;
  uint64_t v49 = a7;
  uint64_t v60 = a3;
  uint64_t v61 = a6;
  uint64_t v48 = a1;
  uint64_t v53 = sub_1C151BBFC();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  unint64_t v51 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151BBCC();
  __n128 v14 = MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *(void **)a2;
  uint64_t v56 = *(void *)(a2 + 8);
  uint64_t v57 = v17;
  uint64_t v18 = *(void *)(a2 + 16);
  uint64_t v19 = *(void *)(a2 + 32);
  uint64_t v54 = *(void *)(a2 + 24);
  uint64_t v55 = v18;
  uint64_t v59 = *(char **)(a2 + 48);
  uint64_t v20 = *a4;
  uint64_t v21 = a4[1];
  uint64_t v22 = a4[2];
  char v24 = *(unsigned char *)(a2 + 41);
  uint64_t v25 = *(unsigned __int8 *)(a2 + 40);
  (*(void (**)(char *, void, __n128))(v23 + 104))(v16, *MEMORY[0x1E4FACB48], v14);
  uint64_t v26 = *(void *)(v8 + 32);
  swift_retain();
  id v58 = a5;
  sub_1C017C3D4(v20, v21);
  uint64_t v27 = v26;
  uint64_t v28 = v8;
  sub_1C130BE80(v20, v21, v22, (uint64_t)v16, v27);
  uint64_t v30 = v56;
  uint64_t v29 = v57;
  uint64_t v63 = v57;
  uint64_t v64 = v56;
  uint64_t v32 = v54;
  uint64_t v31 = v55;
  uint64_t v65 = v55;
  uint64_t v66 = v54;
  uint64_t v67 = v19;
  unsigned __int8 v68 = v25;
  char v69 = v24;
  uint64_t v33 = *(void *)(v28 + 80);
  swift_retain();
  uint64_t v34 = v25;
  uint64_t v35 = v60;
  sub_1BFF43AA4(v29, v30, v31, v32, v19, v34, v24);
  uint64_t v36 = sub_1C151B6FC();
  v62[0] = v33;
  v62[1] = v36;
  v62[2] = v37;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v38 = (void *)_s5TeaUI11ContextMenuC8NewsFeedE07contextD6Groups3for7options14sourceItemDataSayAA0cD9Groupable_pSgGAcDE0D4TypeO_ShyAcDE0L7OptionsOGAD012FormatSourcelcdM0VSgtFZ_0((uint64_t)&v63, v59, (uint64_t)v62);
  sub_1BFC54B6C((uint64_t)v62, (uint64_t (*)(void))sub_1C0E693FC);
  sub_1BFF4363C(v63, v64, v65, v66, v67, v68, v69);
  uint64_t v70 = v38;
  if (v35)
  {
    sub_1C15180CC();
    swift_retain();
    if ((sub_1C151809C() & 1) == 0) {
      goto LABEL_6;
    }
    sub_1C151706C();
    sub_1C151704C();
    sub_1C1516EDC();
    uint64_t v39 = v51;
    sub_1C151703C();
    swift_release();
    swift_release();
    uint64_t v40 = v52;
    uint64_t v41 = v53;
    int v42 = (*(uint64_t (**)(char *, uint64_t))(v52 + 88))(v39, v53);
    if (v42 == *MEMORY[0x1E4FACB98]) {
      goto LABEL_6;
    }
    if (v42 == *MEMORY[0x1E4FACBA0])
    {
      sub_1C0DEF704(v48, v49, v50, (uint64_t)&v63);
      sub_1C0E69308((uint64_t)&v63, (uint64_t)v62);
      sub_1C0246E30(0, 0, (uint64_t)v62);
LABEL_6:
      swift_release();
      goto LABEL_7;
    }
    if (v42 == *MEMORY[0x1E4FACBA8])
    {
      sub_1C0DEF704(v48, v49, v50, (uint64_t)&v63);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = sub_1C0EE5C48(0, v38[2] + 1, 1, v38);
      }
      unint64_t v47 = v38[2];
      unint64_t v46 = v38[3];
      if (v47 >= v46 >> 1) {
        uint64_t v38 = sub_1C0EE5C48((void *)(v46 > 1), v47 + 1, 1, v38);
      }
      v38[2] = v47 + 1;
      sub_1C0E69308((uint64_t)&v63, (uint64_t)&v38[5 * v47 + 4]);
      swift_release();
      uint64_t v70 = v38;
    }
    else
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    }
  }
LABEL_7:
  swift_retain();
  swift_retain();
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = sub_1C130C08C(v43);
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release_n();
  return v44;
}

void sub_1C130B734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1C151BBCC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  __n128 v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    swift_beginAccess();
    uint64_t v17 = MEMORY[0x1C18C9C60](a2 + 16);
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FACB48], v11);
      uint64_t v19 = *(void *)(v16 + 32);
      swift_retain();
      sub_1C017C3D4(a3, a4);
      id v20 = v18;
      uint64_t v21 = sub_1C130BE80(a3, a4, a5, (uint64_t)v14, v19);
      uint64_t v22 = *(void *)(v16 + 24);
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(a6 + 56);
      uint64_t v24 = swift_unknownObjectRetain();
      v23(v24, v22, v21);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1C130B918(uint64_t a1, char a2, void (*a3)(unsigned char *))
{
  uint64_t v6 = type metadata accessor for FeedActionSenderInternal(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](a1 + 16);
  if (result)
  {
    uint64_t v10 = (void *)result;
    *uint64_t v8 = a2;
    type metadata accessor for FeedAction(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for FeedActionInternal(0);
    swift_storeEnumTagMultiPayload();
    *(void *)&v8[*(int *)(v6 + 20)] = v10;
    id v11 = v10;
    a3(v8);

    return sub_1BFC54B6C((uint64_t)v8, type metadata accessor for FeedActionSenderInternal);
  }
  return result;
}

void sub_1C130BA40(_OWORD *a1)
{
  id v2 = objc_msgSend(self, sel_defaultCenter);
  int v3 = (void *)sub_1C151E5EC();
  sub_1BFFEEDD0(0, (unint64_t *)&unk_1EA1AE240, (uint64_t (*)(uint64_t))sub_1C130CB90, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C152006C();
  *(void *)(inited + 96) = &type metadata for FormatStateMachineAction;
  id v5 = (_OWORD *)swift_allocObject();
  *(void *)(inited + 72) = v5;
  long long v6 = a1[1];
  v5[1] = *a1;
  v5[2] = v6;
  long long v7 = a1[3];
  v5[3] = a1[2];
  v5[4] = v7;
  long long v8 = a1[5];
  v5[5] = a1[4];
  v5[6] = v8;
  long long v9 = a1[7];
  v5[7] = a1[6];
  v5[8] = v9;
  sub_1C130C688((uint64_t)a1);
  sub_1C018ED1C(inited);
  uint64_t v10 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_postNotificationName_object_userInfo_, v3, 0, v10);
}

uint64_t sub_1C130BBDC(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v6 = type metadata accessor for FeedActionSenderInternal(0);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](a1 + 16);
  if (result)
  {
    uint64_t v10 = (void *)result;
    sub_1C007AF6C(a2, (uint64_t)v8, type metadata accessor for FormatPurchaseData);
    type metadata accessor for FeedAction(0);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for FeedActionInternal(0);
    swift_storeEnumTagMultiPayload();
    *(void *)&v8[*(int *)(v6 + 20)] = v10;
    id v11 = v10;
    a3(v8);

    return sub_1BFC54B6C((uint64_t)v8, type metadata accessor for FeedActionSenderInternal);
  }
  return result;
}

uint64_t sub_1C130BD20(uint64_t a1, char a2, void (*a3)(unsigned char *))
{
  uint64_t v6 = type metadata accessor for FeedActionSenderInternal(0);
  MEMORY[0x1F4188790](v6);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](a1 + 16);
  if (result)
  {
    uint64_t v10 = (void *)result;
    *long long v8 = a2;
    type metadata accessor for FeedActionInternal(0);
    swift_storeEnumTagMultiPayload();
    *(void *)&v8[*(int *)(v6 + 20)] = v10;
    id v11 = v10;
    a3(v8);

    return sub_1BFC54B6C((uint64_t)v8, type metadata accessor for FeedActionSenderInternal);
  }
  return result;
}

uint64_t sub_1C130BE30()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C130BE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1C151BBCC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C151B75C();
  v16[3] = sub_1C1517D0C();
  v16[4] = sub_1C0EFDD24();
  v16[0] = a5;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
  sub_1BFC66384((uint64_t)v16, (uint64_t)v15);
  long long v17 = 0u;
  long long v18 = 0u;
  char v19 = 1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C151B6DC();
    sub_1C017C418(a1, a2);
  }
  else
  {
    uint64_t v13 = sub_1C151B72C();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a4, v9);
  return v13;
}

uint64_t sub_1C130C08C(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BFFEAB38(v4, (uint64_t)v7, (unint64_t *)&qword_1EB8945F0, (uint64_t (*)(uint64_t))sub_1C01EE39C);
      if (v8)
      {
        __swift_project_boxed_opaque_existential_1(v7, v8);
        uint64_t v5 = sub_1C151B32C();
        uint64_t v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
        if (v5)
        {
          MEMORY[0x1C18C66D0](v6);
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
      }
      else
      {
        sub_1BFFE9588((uint64_t)v7, (unint64_t *)&qword_1EB8945F0, (uint64_t (*)(uint64_t))sub_1C01EE39C);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1C130C200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      swift_retain();
      uint64_t v10 = sub_1C108014C(v7, v8, a3);
      uint64_t v11 = swift_release();
      if (v10)
      {
        MEMORY[0x1C18C66D0](v11);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C130C320()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C130C358()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C130C398(int a1)
{
  return sub_1C130AEC0(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C130C3A4()
{
  return sub_1C130BD20(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(unsigned char *))(v0 + 32));
}

uint64_t sub_1C130C3B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FormatPurchaseData(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = type metadata accessor for FormatPurchaseLandingPageData();
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v2, 1, v5))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = *(int *)(v5 + 20);
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
  }
  uint64_t v6 = v0 + v2 + v4;
  uint64_t v7 = type metadata accessor for FormatPostPurchaseData();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 2, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    }
  }
LABEL_9:
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C130C5D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FormatPurchaseData(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void (**)(char *))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C130BBDC(v3, v0 + v2, v4);
}

void sub_1C130C680()
{
  sub_1C130BA40((_OWORD *)(v0 + 16));
}

uint64_t sub_1C130C688(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF429DC(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroy_11Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C130C788()
{
  return sub_1C130B918(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(unsigned char *))(v0 + 32));
}

uint64_t sub_1C130C798()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C130C7D0()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1C130C82C()
{
  sub_1C130B734(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1C130C83C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  unint64_t v5 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (((v4 + 79) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1BFF4363C(*(void **)(v0 + v5), *(void *)(v0 + v5 + 8), *(void *)(v0 + v5 + 16), *(void *)(v0 + v5 + 24), *(void *)(v0 + v5 + 32), *(unsigned __int8 *)(v0 + v5 + 40), *(unsigned char *)(v0 + v5 + 41));
  swift_bridgeObjectRelease();
  sub_1BFF43600(*(void **)(v0 + v5 + 56), *(unsigned char *)(v0 + v5 + 64));
  swift_release();
  if (*(void *)(v0 + v6 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C130C984(void *a1)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80);
  unint64_t v3 = v2 + *(void *)(*(void *)(v1[2] - 8) + 64);
  unint64_t v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v3 + 79) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C130B0F4(a1, v1[4], (uint64_t)v1 + v2, (uint64_t)v1 + v4, *(uint64_t *)((char *)v1 + v5), *(uint64_t *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(uint64_t *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(uint64_t *)((char *)v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)), v1[2], v1[3]);
}

uint64_t sub_1C130CA40(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 56);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 64);
  sub_1BFF43AA4(*(id *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(unsigned char *)(a1 + 41));
  swift_bridgeObjectRetain();
  sub_1BFF43A68(v2, v3);
  return a1;
}

uint64_t sub_1C130CAA0(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 56);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 64);
  sub_1BFF4363C(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(unsigned char *)(a1 + 41));
  swift_bridgeObjectRelease();
  sub_1BFF43600(v2, v3);
  return a1;
}

uint64_t sub_1C130CB00()
{
  swift_release();
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unsigned int v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 <= 0xFD) {
    sub_1BFF43600(*(void **)(v0 + 56), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1C130CB68(void *a1)
{
  return sub_1C130AF48(a1, v1[2], v1[3], v1[4], v1[5]);
}

id sub_1C130CB7C(id result, unsigned __int8 a2)
{
  if (a2 <= 0xFDu) {
    return sub_1BFF43A68(result, a2);
  }
  return result;
}

void sub_1C130CB90()
{
  if (!qword_1EA1977A0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1977A0);
    }
  }
}

uint64_t objectdestroy_18Tm_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC41E8(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t CommandExecutionSource.init(sourceItemData:location:tracker:sourceView:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 32);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1(a3, v9);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  __n128 v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v15 + 16))(v14, v12);
  uint64_t v16 = sub_1C130CD94(a1, a2, (uint64_t)v14, a4, v4, v9, v10);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v16;
}

uint64_t sub_1C130CD94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_1C151BBCC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22[3] = a6;
  v22[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, a3, a6);
  uint64_t v17 = a1[1];
  if (v17)
  {
    uint64_t v18 = *a1;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    sub_1BFC66384((uint64_t)v22, (uint64_t)v21);
    long long v23 = 0u;
    long long v24 = 0u;
    char v25 = 1;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C151B6DC();
    sub_1C017C418(v18, v17);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    sub_1BFC66384((uint64_t)v22, (uint64_t)v21);
    long long v23 = 0u;
    long long v24 = 0u;
    char v25 = 1;
    uint64_t v19 = sub_1C151B72C();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  return v19;
}

void sub_1C130CFC8(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ZIndexable() - 8);
  unsigned __int8 v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned __int8 v3 = (void *)sub_1C06365E0(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C1310EB8(v5);
  *a1 = v3;
}

id sub_1C130D070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFC66384(a1, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_colorPaletteProvider]);
  sub_1BFC66384(a1, (uint64_t)v30);
  type metadata accessor for FeedItemCellSelectionRenderer();
  uint64_t v19 = swift_allocObject();
  sub_1BFC773DC(v30, v19 + 16);
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_cellSelectionRenderer] = v19;
  id v20 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_imageHeadlineViewRenderer];
  *(void *)id v20 = a2;
  *((void *)v20 + 1) = a3;
  uint64_t v21 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverIssueViewRenderer];
  *(void *)uint64_t v21 = a4;
  *((void *)v21 + 1) = a5;
  uint64_t v22 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverChannelViewRenderer];
  *(void *)uint64_t v22 = a6;
  *((void *)v22 + 1) = a7;
  long long v23 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_formatLayoutViewRenderer];
  *(void *)long long v23 = a8;
  *((void *)v23 + 1) = a9;
  long long v24 = &v11[OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_internalErrorViewRenderer];
  *(void *)long long v24 = a10;
  *((void *)v24 + 1) = a11;
  v29.receiver = v11;
  v29.super_class = ObjectType;
  id v25 = objc_msgSendSuper2(&v29, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v25;
}

uint64_t sub_1C130D1C8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  uint64_t v12 = v11;
  uint64_t v245 = a7;
  uint64_t v244 = a6;
  uint64_t v243 = a5;
  CGRect v242 = a4;
  v201[1] = swift_getObjectType();
  uint64_t v20 = sub_1C151C1FC();
  unint64_t v235 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v216 = (char *)v201 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v217 = (char *)v201 - v23;
  uint64_t v237 = sub_1C151C5DC();
  uint64_t v233 = *(void *)(v237 - 8);
  MEMORY[0x1F4188790](v237);
  uint64_t v209 = (void *)((char *)v201 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  CGFloat v208 = (void *)((char *)v201 - v26);
  MEMORY[0x1F4188790](v27);
  char v211 = (void *)((char *)v201 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v210 = (void *)((char *)v201 - v30);
  uint64_t v232 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v231 = *(void *)(v232 - 8);
  MEMORY[0x1F4188790](v232);
  double v213 = (long long *)((char *)v201 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v32);
  CGPoint v219 = (long long *)((char *)v201 - v33);
  MEMORY[0x1F4188790](v34);
  uint64_t v230 = (uint64_t)v201 - v35;
  MEMORY[0x1F4188790](v36);
  double v215 = (long long *)((char *)v201 - v37);
  MEMORY[0x1F4188790](v38);
  uint64_t v221 = (long long *)((char *)v201 - v39);
  MEMORY[0x1F4188790](v40);
  CGFloat v207 = (char *)v201 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v239 = (uint64_t)v201 - v43;
  uint64_t v246 = type metadata accessor for ZIndexable();
  uint64_t v44 = *(void *)(v246 - 8);
  MEMORY[0x1F4188790](v246);
  v201[0] = (char *)v201 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v46);
  uint64_t v228 = (uint64_t)v201 - v47;
  MEMORY[0x1F4188790](v48);
  double v224 = (void *)((char *)v201 - v49);
  MEMORY[0x1F4188790](v50);
  double v212 = (char *)v201 - v51;
  MEMORY[0x1F4188790](v52);
  uint64_t v234 = (uint64_t)v201 - v53;
  MEMORY[0x1F4188790](v54);
  uint64_t v220 = (uint64_t)v201 - v55;
  MEMORY[0x1F4188790](v56);
  double v225 = (void *)((char *)v201 - v57);
  MEMORY[0x1F4188790](v58);
  uint64_t v238 = (uint64_t)v201 - v59;
  MEMORY[0x1F4188790](v60);
  uint64_t v62 = (char *)v201 - v61;
  MEMORY[0x1F4188790](v63);
  uint64_t v65 = (void *)((char *)v201 - v64);
  uint64_t v66 = *(void *)(a1 + 48);
  uint64_t v240 = *(void *)(a1 + 40);
  sub_1C151F72C();
  sub_1C151F75C();
  double v68 = v67;
  double v70 = v69;
  double v72 = v71;
  double v74 = v73;
  id v75 = objc_allocWithZone((Class)type metadata accessor for DebugGroupLayoutView());
  uint64_t v76 = sub_1C0B723F4(v68, v70, v72, v74, a8, a9, a10, a11);
  if (a3) {
    objc_msgSend(a3, sel_addSubview_, v76);
  }
  long long v257 = xmmword_1C1527210;
  CGRect v236 = v258;
  int64_t v77 = *(void *)(a2 + 16);
  unint64_t v78 = MEMORY[0x1E4FBC860];
  CGRect v241 = v76;
  uint64_t v226 = v20;
  v201[2] = v12;
  if (v77)
  {
    *(void *)&long long v247 = MEMORY[0x1E4FBC860];
    sub_1C05F7BE0(0, v77, 0);
    unint64_t v78 = v247;
    unint64_t v79 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v80 = *v79++;
      *uint64_t v65 = v80;
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v247 = v78;
      unint64_t v81 = *(void *)(v78 + 16);
      unint64_t v82 = *(void *)(v78 + 24);
      swift_retain();
      if (v81 >= v82 >> 1)
      {
        sub_1C05F7BE0(v82 > 1, v81 + 1, 1);
        unint64_t v78 = v247;
      }
      *(void *)(v78 + 16) = v81 + 1;
      sub_1C13183D4((uint64_t)v65, v78+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v81, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      --v77;
    }
    while (v77);
    uint64_t v76 = v241;
    uint64_t v20 = v226;
  }
  sub_1C0E6A3F4(v78);
  v258[0] = v83;
  int64_t v84 = *(void *)(v66 + 16);
  uint64_t v85 = MEMORY[0x1E4FBC860];
  if (v84)
  {
    uint64_t v86 = v231;
    *(void *)&long long v247 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7BE0(0, v84, 0);
    uint64_t v87 = v66 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
    uint64_t v88 = *(void *)(v86 + 72);
    do
    {
      uint64_t v89 = v239;
      sub_1C1318618(v87, v239, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C1318618(v89, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      swift_storeEnumTagMultiPayload();
      sub_1C0086F0C(v89, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      uint64_t v90 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7BE0(0, *(void *)(v90 + 16) + 1, 1);
        uint64_t v90 = v247;
      }
      unint64_t v92 = *(void *)(v90 + 16);
      unint64_t v91 = *(void *)(v90 + 24);
      if (v92 >= v91 >> 1)
      {
        sub_1C05F7BE0(v91 > 1, v92 + 1, 1);
        uint64_t v90 = v247;
      }
      *(void *)(v90 + 16) = v92 + 1;
      sub_1C13183D4((uint64_t)v62, v90+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v92, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      v87 += v88;
      --v84;
      uint64_t v76 = v241;
    }
    while (v84);
    swift_bridgeObjectRelease();
    uint64_t v20 = v226;
    uint64_t v85 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v90 = MEMORY[0x1E4FBC860];
  }
  v258[1] = v90;
  *(void *)&long long v247 = v85;
  uint64_t v93 = v85;
  uint64_t v94 = swift_bridgeObjectRetain();
  sub_1C104AC84(v94);
  uint64_t v95 = swift_bridgeObjectRetain();
  sub_1C104AC84(v95);
  sub_1C1318EB0(0, (unint64_t *)&unk_1EA1AE310, (uint64_t (*)(uint64_t))type metadata accessor for ZIndexable, MEMORY[0x1E4FBB320]);
  swift_arrayDestroy();
  swift_bridgeObjectRetain();
  sub_1C130CFC8((void **)&v247);
  swift_bridgeObjectRelease();
  uint64_t v96 = v247;
  uint64_t v256 = v93;
  uint64_t v97 = *(void **)(v247 + 16);
  swift_retain();
  uint64_t v98 = v237;
  CGRect v236 = v97;
  if (!v97)
  {
    swift_release();
    uint64_t v169 = MEMORY[0x1E4FBC860];
    uint64_t v168 = MEMORY[0x1E4FBC860];
    goto LABEL_106;
  }
  unint64_t v99 = 0;
  unsigned int v229 = *MEMORY[0x1E4FAD570];
  char v223 = (void (**)(uint64_t *, uint64_t, uint64_t))(v233 + 104);
  LODWORD(v231) = *MEMORY[0x1E4FAD578];
  double v227 = (uint64_t (**)(uint64_t *, uint64_t))(v233 + 88);
  char v205 = (void (**)(uint64_t *, uint64_t))(v233 + 8);
  double v214 = (void (**)(uint64_t *, uint64_t))(v233 + 96);
  unsigned int v204 = *MEMORY[0x1E4FAD2B0];
  uint64_t v222 = (void (**)(char *, uint64_t, uint64_t))(v235 + 104);
  unsigned int v218 = *MEMORY[0x1E4FAD2A8];
  CGPoint v206 = (uint64_t (**)(char *, uint64_t))(v235 + 88);
  CGFloat v202 = (void (**)(char *, uint64_t))(v235 + 8);
  uint64_t v233 = v96;
  uint64_t v100 = (uint64_t)v207;
  uint64_t v203 = v44;
  while (v99 < *(void *)(v96 + 16))
  {
    uint64_t v101 = *(void *)(v44 + 72);
    unint64_t v235 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v102 = v238;
    sub_1C1318618(v96 + v235 + v101 * v99, v238, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    uint64_t v103 = v225;
    sub_1C1318618(v102, (uint64_t)v225, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1C13183D4((uint64_t)v103, v100, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C1318618(v100, (uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      long long v108 = v217;
      if (EnumCaseMultiPayload < 2) {
        goto LABEL_38;
      }
      if (EnumCaseMultiPayload == 2)
      {
        long long v109 = v221[5];
        long long v251 = v221[4];
        long long v252 = v109;
        long long v110 = v221[7];
        long long v253 = v221[6];
        long long v254 = v110;
        long long v111 = v221[1];
        long long v247 = *v221;
        long long v248 = v111;
        long long v112 = v221[3];
        long long v249 = v221[2];
        long long v250 = v112;
        uint64_t v113 = *((void *)v221 + 16);
        sub_1C0955B08((uint64_t)&v247);
        uint64_t v114 = *(void *)(v113 + 56);
        char v115 = *(unsigned char *)(v113 + 64);
        swift_release();
        uint64_t v116 = v231;
        long long v117 = v210;
        if ((v115 & 1) == 0)
        {
          *uint64_t v210 = v114;
          uint64_t v116 = v229;
        }
        uint64_t v98 = v237;
        (*v223)(v117, v116, v237);
        int v118 = (*v227)(v117, v98);
        if (v118 == v229)
        {
          (*v214)(v117, v98);
          uint64_t v119 = *v117;
          uint64_t v76 = v241;
        }
        else
        {
          uint64_t v76 = v241;
          if (v118 == v231)
          {
            long long v108 = v217;
            goto LABEL_39;
          }
          (*v205)(v117, v98);
          uint64_t v119 = 0;
        }
      }
      else
      {
        sub_1C0086F0C((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_38:
        (*v223)(v210, v231, v98);
LABEL_39:
        sub_1C1318618(v100, (uint64_t)v215, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        unsigned int v120 = swift_getEnumCaseMultiPayload();
        if (v120 >= 2)
        {
          uint64_t v100 = (uint64_t)v207;
          if (v120 == 2)
          {
            long long v121 = v215[5];
            long long v251 = v215[4];
            long long v252 = v121;
            long long v122 = v215[7];
            long long v253 = v215[6];
            long long v254 = v122;
            long long v123 = v215[1];
            long long v247 = *v215;
            long long v248 = v123;
            long long v124 = v215[3];
            long long v249 = v215[2];
            long long v250 = v124;
            uint64_t v125 = *((void *)v215 + 16);
            sub_1C0955B08((uint64_t)&v247);
            char v126 = *(unsigned char *)(*(void *)(v125
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            uint64_t v127 = *v222;
            long long v108 = v217;
            if (v126)
            {
              v127(v217, v218, v20);
              uint64_t v98 = v237;
              unsigned int v128 = v204;
            }
            else
            {
              unsigned int v128 = v204;
              v127(v217, v204, v20);
              uint64_t v98 = v237;
            }
          }
          else
          {
            unsigned int v128 = v204;
            (*v222)(v108, v204, v20);
            sub_1C0086F0C((uint64_t)v215, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          }
          int v129 = (*v206)(v108, v20);
          if (v129 == v128)
          {
            uint64_t v119 = 2000;
          }
          else if (v129 == v218)
          {
            uint64_t v119 = 1000;
          }
          else
          {
            (*v202)(v108, v20);
            uint64_t v119 = 0;
          }
          uint64_t v44 = v203;
        }
        else
        {
          (*v222)(v108, v218, v20);
          uint64_t v119 = 1000;
          uint64_t v100 = (uint64_t)v207;
        }
      }
      sub_1C0086F0C(v100, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if (v119 < 0) {
        goto LABEL_56;
      }
      goto LABEL_20;
    }
    uint64_t v255 = *v103;
    FeedGroupDecoration.decorationItem.getter((uint64_t *)&v247);
    __swift_project_boxed_opaque_existential_1(&v247, *((uint64_t *)&v248 + 1));
    uint64_t v104 = v211;
    sub_1C151C6AC();
    uint64_t v98 = v237;
    int v105 = (*v227)(v104, v237);
    if (v105 == v229)
    {
      (*v214)(v104, v98);
      uint64_t v106 = *v104;
    }
    else
    {
      if (v105 != v231) {
        (*v205)(v104, v98);
      }
      uint64_t v106 = -100;
    }
    uint64_t v96 = v233;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v247);
    swift_release();
    uint64_t v20 = v226;
    if (v106 < 0)
    {
LABEL_56:
      sub_1C13183D4(v238, v220, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      uint64_t v130 = v256;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7BE0(0, *(void *)(v130 + 16) + 1, 1);
        uint64_t v98 = v237;
        uint64_t v130 = v256;
      }
      unint64_t v132 = *(void *)(v130 + 16);
      unint64_t v131 = *(void *)(v130 + 24);
      if (v132 >= v131 >> 1)
      {
        sub_1C05F7BE0(v131 > 1, v132 + 1, 1);
        uint64_t v98 = v237;
        uint64_t v130 = v256;
      }
      *(void *)(v130 + 16) = v132 + 1;
      sub_1C13183D4(v220, v130 + v235 + v132 * v101, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      uint64_t v76 = v241;
      uint64_t v96 = v233;
      goto LABEL_21;
    }
LABEL_20:
    sub_1C0086F0C(v238, (uint64_t (*)(void))type metadata accessor for ZIndexable);
LABEL_21:
    if (v236 == (void *)++v99)
    {
      uint64_t v238 = v256;
      swift_release();
      unint64_t v133 = 0;
      uint64_t v256 = MEMORY[0x1E4FBC860];
      uint64_t v134 = v96 + v235;
      uint64_t v135 = v204;
      while (1)
      {
        if ((unint64_t)v133 >= *(void *)(v233 + 16)) {
          goto LABEL_151;
        }
        uint64_t v136 = v234;
        sub_1C1318618(v134, v234, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        unint64_t v137 = v224;
        sub_1C1318618(v136, (uint64_t)v224, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        if (swift_getEnumCaseMultiPayload() != 1) {
          break;
        }
        uint64_t v255 = *v137;
        FeedGroupDecoration.decorationItem.getter((uint64_t *)&v247);
        __swift_project_boxed_opaque_existential_1(&v247, *((uint64_t *)&v248 + 1));
        id v138 = v209;
        sub_1C151C6AC();
        uint64_t v98 = v237;
        int v139 = (*v227)(v138, v237);
        if (v139 == v229)
        {
          (*v214)(v138, v98);
          uint64_t v140 = *v138;
        }
        else
        {
          if (v139 != v231) {
            (*v205)(v138, v98);
          }
          uint64_t v140 = -100;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v247);
        swift_release();
        uint64_t v20 = v226;
        if ((v140 & 0x8000000000000000) == 0)
        {
LABEL_99:
          sub_1C13183D4(v234, v228, (uint64_t (*)(void))type metadata accessor for ZIndexable);
          uint64_t v165 = v256;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F7BE0(0, *(void *)(v165 + 16) + 1, 1);
            uint64_t v98 = v237;
            uint64_t v165 = v256;
          }
          unint64_t v167 = *(void *)(v165 + 16);
          unint64_t v166 = *(void *)(v165 + 24);
          if (v167 >= v166 >> 1)
          {
            sub_1C05F7BE0(v166 > 1, v167 + 1, 1);
            uint64_t v98 = v237;
            uint64_t v165 = v256;
          }
          *(void *)(v165 + 16) = v167 + 1;
          sub_1C13183D4(v228, v165 + v235 + v167 * v101, (uint64_t (*)(void))type metadata accessor for ZIndexable);
          uint64_t v76 = v241;
          goto LABEL_63;
        }
LABEL_62:
        sub_1C0086F0C(v234, (uint64_t (*)(void))type metadata accessor for ZIndexable);
LABEL_63:
        unint64_t v133 = (void *)((char *)v133 + 1);
        v134 += v101;
        if (v236 == v133)
        {
          uint64_t v168 = v256;
          uint64_t v169 = v238;
LABEL_106:
          swift_release();
          uint64_t v170 = *(void *)(v169 + 16);
          uint64_t v171 = v212;
          if (v170)
          {
            uint64_t v172 = v169 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
            uint64_t v173 = *(void *)(v44 + 72);
            swift_retain();
            do
            {
              sub_1C1318618(v172, (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for ZIndexable);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *(void *)&long long v247 = *v171;
                sub_1C1317C00((uint64_t *)&v247, (uint64_t)v76, v68, v70, v72, v74);
                swift_release();
              }
              else
              {
                uint64_t v174 = (uint64_t)v171;
                uint64_t v175 = v239;
                sub_1C13183D4(v174, v239, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
                sub_1C130F0DC(v175, (uint64_t)v76, v242, v243, v244, v245);
                uint64_t v176 = v175;
                uint64_t v171 = v212;
                sub_1C0086F0C(v176, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
              }
              v172 += v173;
              --v170;
            }
            while (v170);
            swift_release_n();
          }
          else
          {
            swift_release();
          }
          uint64_t v20 = v240 + 64;
          uint64_t v177 = 1 << *(unsigned char *)(v240 + 32);
          uint64_t v178 = -1;
          if (v177 < 64) {
            uint64_t v178 = ~(-1 << v177);
          }
          unint64_t v179 = v178 & *(void *)(v240 + 64);
          int64_t v180 = (unint64_t)(v177 + 63) >> 6;
          swift_bridgeObjectRetain();
          int64_t v181 = 0;
          while (1)
          {
            if (v179)
            {
              unint64_t v182 = __clz(__rbit64(v179));
              v179 &= v179 - 1;
              unint64_t v183 = v182 | (v181 << 6);
            }
            else
            {
              int64_t v184 = v181 + 1;
              if (__OFADD__(v181, 1)) {
                goto LABEL_152;
              }
              if (v184 >= v180)
              {
LABEL_134:
                swift_release();
                uint64_t v187 = *(void *)(v168 + 16);
                if (v187)
                {
                  uint64_t v188 = v168
                       + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
                  uint64_t v189 = *(void *)(v44 + 72);
                  swift_retain();
                  uint64_t v190 = (void *)v201[0];
                  uint64_t v191 = v239;
                  do
                  {
                    sub_1C1318618(v188, (uint64_t)v190, (uint64_t (*)(void))type metadata accessor for ZIndexable);
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      *(void *)&long long v247 = *v190;
                      sub_1C1317C00((uint64_t *)&v247, (uint64_t)v76, v68, v70, v72, v74);
                      swift_release();
                    }
                    else
                    {
                      sub_1C13183D4((uint64_t)v190, v191, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
                      sub_1C130F0DC(v191, (uint64_t)v76, v242, v243, v244, v245);
                      sub_1C0086F0C(v191, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
                    }
                    v188 += v189;
                    --v187;
                  }
                  while (v187);
                  swift_release_n();
                }
                else
                {
                  swift_release();
                }
                uint64_t v20 = (uint64_t)v241;
                if (qword_1EA1944D8 != -1) {
                  goto LABEL_154;
                }
                goto LABEL_143;
              }
              unint64_t v185 = *(void *)(v20 + 8 * v184);
              ++v181;
              if (!v185)
              {
                int64_t v181 = v184 + 1;
                if (v184 + 1 >= v180) {
                  goto LABEL_134;
                }
                unint64_t v185 = *(void *)(v20 + 8 * v181);
                if (!v185)
                {
                  int64_t v181 = v184 + 2;
                  if (v184 + 2 >= v180) {
                    goto LABEL_134;
                  }
                  unint64_t v185 = *(void *)(v20 + 8 * v181);
                  if (!v185)
                  {
                    int64_t v186 = v184 + 3;
                    if (v186 >= v180) {
                      goto LABEL_134;
                    }
                    unint64_t v185 = *(void *)(v20 + 8 * v186);
                    if (!v185)
                    {
                      while (1)
                      {
                        int64_t v181 = v186 + 1;
                        if (__OFADD__(v186, 1)) {
                          goto LABEL_153;
                        }
                        if (v181 >= v180) {
                          goto LABEL_134;
                        }
                        unint64_t v185 = *(void *)(v20 + 8 * v181);
                        ++v186;
                        if (v185) {
                          goto LABEL_133;
                        }
                      }
                    }
                    int64_t v181 = v186;
                  }
                }
              }
LABEL_133:
              unint64_t v179 = (v185 - 1) & v185;
              unint64_t v183 = __clz(__rbit64(v185)) + (v181 << 6);
            }
            *(void *)&long long v247 = *(void *)(*(void *)(v240 + 56) + 8 * v183);
            swift_retain();
            sub_1C130F598((uint64_t *)&v247, (uint64_t)v76, (uint64_t)v242, v243, v244, v245);
            swift_release();
          }
        }
      }
      uint64_t v141 = (uint64_t)v137;
      uint64_t v142 = v230;
      sub_1C13183D4(v141, v230, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C1318618(v142, (uint64_t)v219, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      unsigned int v143 = swift_getEnumCaseMultiPayload();
      unint64_t v144 = v216;
      if (v143 < 2)
      {
LABEL_80:
        (*v223)(v208, v231, v98);
      }
      else
      {
        if (v143 != 2)
        {
          sub_1C0086F0C((uint64_t)v219, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          goto LABEL_80;
        }
        long long v145 = v219[5];
        long long v251 = v219[4];
        long long v252 = v145;
        long long v146 = v219[7];
        long long v253 = v219[6];
        long long v254 = v146;
        long long v147 = v219[1];
        long long v247 = *v219;
        long long v248 = v147;
        long long v148 = v219[3];
        long long v249 = v219[2];
        long long v250 = v148;
        uint64_t v149 = *((void *)v219 + 16);
        sub_1C0955B08((uint64_t)&v247);
        uint64_t v150 = *(void *)(v149 + 56);
        char v151 = *(unsigned char *)(v149 + 64);
        swift_release();
        uint64_t v152 = v231;
        uint64_t v153 = v208;
        if ((v151 & 1) == 0)
        {
          *CGFloat v208 = v150;
          uint64_t v152 = v229;
        }
        uint64_t v98 = v237;
        (*v223)(v153, v152, v237);
        int v154 = (*v227)(v153, v98);
        if (v154 == v229)
        {
          (*v214)(v153, v98);
          uint64_t v155 = *v153;
          uint64_t v76 = v241;
          goto LABEL_98;
        }
        uint64_t v76 = v241;
        if (v154 != v231)
        {
          (*v205)(v153, v98);
          goto LABEL_97;
        }
        unint64_t v144 = v216;
      }
      sub_1C1318618(v230, (uint64_t)v213, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      unsigned int v156 = swift_getEnumCaseMultiPayload();
      if (v156 >= 2)
      {
        if (v156 == 2)
        {
          long long v157 = v213[5];
          long long v251 = v213[4];
          long long v252 = v157;
          long long v158 = v213[7];
          long long v253 = v213[6];
          long long v254 = v158;
          long long v159 = v213[1];
          long long v247 = *v213;
          long long v248 = v159;
          long long v160 = v213[3];
          long long v249 = v213[2];
          long long v250 = v160;
          uint64_t v161 = *((void *)v213 + 16);
          sub_1C0955B08((uint64_t)&v247);
          char v162 = *(unsigned char *)(*(void *)(v161
                                      + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                          + 208);
          swift_release();
          unint64_t v144 = v216;
          if (v162) {
            uint64_t v163 = v218;
          }
          else {
            uint64_t v163 = v135;
          }
          (*v222)(v216, v163, v20);
          uint64_t v98 = v237;
        }
        else
        {
          (*v222)(v144, v135, v20);
          sub_1C0086F0C((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
        }
        int v164 = (*v206)(v144, v20);
        if (v164 == v135)
        {
          uint64_t v155 = 2000;
        }
        else if (v164 == v218)
        {
          uint64_t v155 = 1000;
        }
        else
        {
          (*v202)(v144, v20);
LABEL_97:
          uint64_t v155 = 0;
        }
      }
      else
      {
        (*v222)(v144, v218, v20);
        uint64_t v155 = 1000;
      }
LABEL_98:
      sub_1C0086F0C(v230, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((v155 & 0x8000000000000000) == 0) {
        goto LABEL_99;
      }
      goto LABEL_62;
    }
  }
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  swift_once();
LABEL_143:
  sub_1C13185BC(&qword_1EA1AE308, v192, (void (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory);
  sub_1C1516FBC();
  sub_1C15177AC();
  uint64_t v193 = v20;
  if (qword_1EA1944E0 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  sub_1C15177BC();
  if (qword_1EA1944E8 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  if (v247)
  {
    uint64_t v194 = OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView;
    id v195 = objc_msgSend(*(id *)&v241[OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView], sel_layer);
    id v196 = objc_msgSend(self, sel_redColor);
    id v197 = objc_msgSend(v196, sel_CGColor);

    objc_msgSend(v195, sel_setBorderColor_, v197);
    char v198 = *(void **)&v241[v194];
    uint64_t v193 = (uint64_t)v241;
    id v199 = objc_msgSend(v198, sel_layer);
    objc_msgSend(v199, sel_setBorderWidth_, 1.0);
  }
  return v193;
}

void sub_1C130F0DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a5;
  uint64_t v46 = a2;
  uint64_t v11 = type metadata accessor for InternalErrorViewLayout.Context();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (double *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1318618(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v19 = objc_msgSend(objc_allocWithZone((Class)sub_1C151A45C()), sel_initWithFrame_, *v16, v16[1], v16[2], v16[3]);
      sub_1C1317380(v19, v46);

      break;
    case 2u:
      long long v20 = *((_OWORD *)v16 + 3);
      long long v50 = *((_OWORD *)v16 + 2);
      long long v51 = v20;
      long long v21 = *((_OWORD *)v16 + 1);
      long long v48 = *(_OWORD *)v16;
      long long v49 = v21;
      long long v22 = *((_OWORD *)v16 + 7);
      long long v54 = *((_OWORD *)v16 + 6);
      long long v55 = v22;
      long long v23 = *((_OWORD *)v16 + 5);
      long long v52 = *((_OWORD *)v16 + 4);
      long long v53 = v23;
      uint64_t v24 = *((void *)v16 + 16);
      uint64_t v25 = *(double **)(v24
                       + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
      id v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLayoutView()), sel_initWithFrame_, v25[2], v25[3], v25[4], v25[5]);
      id v27 = v6;
      swift_retain();
      id v28 = a3;
      swift_retain();
      swift_retain();
      sub_1C13184BC((uint64_t)&v48);
      sub_1C1317754(v26, v46, (uint64_t)v27, (uint64_t)v27, &v48, v24, (uint64_t)v26, (uint64_t)v28, a4, v45, a6);
      swift_release();

      swift_release();
      swift_release();
      sub_1C0955B08((uint64_t)&v48);

      uint64_t v29 = *(void *)(v24 + 32);
      if (v29) {
        uint64_t v30 = *(unsigned char *)(v29 + 48) & 1;
      }
      else {
        uint64_t v30 = 0;
      }
      objc_msgSend(v26, sel_setClipsToBounds_, v30);
      sub_1C1517EDC();
      id v43 = v47;
      if (v47)
      {
        objc_msgSend(v47, sel_setHidden_, 1);
        sub_1C0955B08((uint64_t)&v48);
      }
      else
      {
        sub_1C0955B08((uint64_t)&v48);
      }
      swift_release();

      break;
    case 3u:
      sub_1C0AEF7B8();
      uint64_t v32 = (long long *)((char *)v16 + *(int *)(v31 + 48));
      long long v33 = v32[13];
      long long v60 = v32[12];
      long long v61 = v33;
      long long v34 = v32[15];
      long long v62 = v32[14];
      long long v63 = v34;
      long long v35 = v32[9];
      long long v56 = v32[8];
      long long v57 = v35;
      long long v36 = v32[11];
      long long v58 = v32[10];
      long long v59 = v36;
      long long v37 = v32[5];
      long long v52 = v32[4];
      long long v53 = v37;
      long long v38 = v32[7];
      long long v54 = v32[6];
      long long v55 = v38;
      long long v39 = v32[1];
      long long v48 = *v32;
      long long v49 = v39;
      long long v40 = v32[3];
      long long v50 = v32[2];
      long long v51 = v40;
      sub_1C13183D4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
      uint64_t v41 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InternalErrorView()), sel_initWithFrame_, *(double *)&v48, *((double *)&v48 + 1), *(double *)&v49, *((double *)&v49 + 1));
      MEMORY[0x1F4188790](v41);
      sub_1C130FF48(v42, v46, (void (*)(void))sub_1C131843C);
      objc_msgSend(*(id *)&v41[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_debugButton], sel_setHidden_, 1);

      sub_1C0086F0C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
      break;
    default:
      id v17 = objc_msgSend(objc_allocWithZone((Class)sub_1C151A45C()), sel_initWithFrame_, *v16, v16[1], v16[2], v16[3]);
      id v18 = v6;
      sub_1C1316F74(v17, v46, (uint64_t)v18, (uint64_t)v17, (uint64_t)v18);

      break;
  }
}

void sub_1C130F598(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v102 = a6;
  uint64_t v104 = a2;
  uint64_t v10 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v101 = (unint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  switch((unint64_t)*a1 >> 60)
  {
    case 4uLL:
      sub_1BFE298EC();
      uint64_t v21 = v20;
      uint64_t v22 = swift_projectBox();
      memcpy(v105, (const void *)(v22 + *(int *)(v21 + 48)), 0x130uLL);
      sub_1C1318618(v22, (uint64_t)v18, type metadata accessor for HeadlineViewLayout.Context);
      unsigned __int8 v23 = objc_msgSend(*(id *)&v18[*(int *)(v16 + 20) + 40], sel_hasVideo);
      id v25 = v105[0];
      id v24 = v105[1];
      id v27 = v105[2];
      id v26 = v105[3];
      if (v23)
      {
        sub_1C1318EB0(0, &qword_1EB874320, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
        uint64_t v29 = (char *)objc_msgSend(objc_allocWithZone(v28), sel_initWithFrame_, *(double *)&v25, *(double *)&v24, *(double *)&v27, *(double *)&v26);
        MEMORY[0x1F4188790](v29);
        uint64_t v31 = v102;
        *(&v99 - 6) = v103;
        *(&v99 - 5) = (uint64_t)v18;
        *(&v99 - 4) = (uint64_t)v105;
        *(&v99 - 3) = (uint64_t)v30;
        *(&v99 - 2) = a5;
        *(&v99 - 1) = v31;
        uint64_t v32 = sub_1C131871C;
      }
      else
      {
        sub_1C1318EB0(0, &qword_1EB874310, MEMORY[0x1E4FAD8A0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
        uint64_t v29 = (char *)objc_msgSend(objc_allocWithZone(v87), sel_initWithFrame_, *(double *)&v25, *(double *)&v24, *(double *)&v27, *(double *)&v26);
        MEMORY[0x1F4188790](v29);
        *(&v99 - 4) = v103;
        *(&v99 - 3) = (uint64_t)v18;
        *(&v99 - 2) = (uint64_t)v105;
        *(&v99 - 1) = (uint64_t)v30;
        uint64_t v32 = sub_1C1318680;
      }
      sub_1C130FF48(v30, v104, (void (*)(void))v32);
      objc_msgSend(*(id *)&v29[qword_1EB874268], sel_setHidden_, 1);

      uint64_t v88 = type metadata accessor for HeadlineViewLayout.Context;
      uint64_t v89 = (uint64_t)v18;
      goto LABEL_28;
    case 5uLL:
      memcpy(v108, (const void *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 408), sizeof(v108));
      sub_1C01BC5C8((v19 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v105);
      id v33 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverIssueView()), sel_initWithFrame_, *(double *)v108, *((double *)v108 + 1), *(double *)&v108[1], *((double *)&v108[1] + 1));
      MEMORY[0x1F4188790](v33);
      uint64_t v34 = v104;
      *(&v99 - 4) = v103;
      *(&v99 - 3) = (uint64_t)v105;
      *(&v99 - 2) = (uint64_t)v108;
      *(&v99 - 1) = (uint64_t)v35;
      sub_1C130FF48(v35, v34, (void (*)(void))sub_1C131887C);
      sub_1C1517EDC();
      id v36 = v106;
      if (v106)
      {
        objc_msgSend(v106, sel_setHidden_, 1);

        id v33 = v36;
      }

      sub_1C01BC710((uint64_t)v105);
      break;
    case 6uLL:
      long long v37 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x198);
      long long v38 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x1A8);
      long long v39 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x178);
      v108[8] = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x188);
      v108[9] = v37;
      long long v40 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x1B8);
      v108[10] = v38;
      v108[11] = v40;
      long long v41 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x158);
      long long v42 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x168);
      long long v43 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x138);
      v108[4] = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x148);
      v108[5] = v41;
      long long v44 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x108);
      v108[6] = v42;
      v108[7] = v39;
      long long v45 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x118);
      long long v46 = *(_OWORD *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x128);
      v108[0] = v44;
      v108[1] = v45;
      v108[2] = v46;
      long long v108[3] = v43;
      sub_1C1192E14((v19 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v105);
      id v47 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoverChannelView()), sel_initWithFrame_, *(double *)v108, *((double *)v108 + 1), *(double *)&v108[1], *((double *)&v108[1] + 1));
      MEMORY[0x1F4188790](v47);
      uint64_t v48 = v104;
      *(&v99 - 4) = v103;
      *(&v99 - 3) = (uint64_t)v105;
      *(&v99 - 2) = (uint64_t)v108;
      *(&v99 - 1) = (uint64_t)v49;
      sub_1C130FF48(v49, v48, (void (*)(void))sub_1C13187CC);
      sub_1C1517EDC();
      id v50 = v106;
      if (v106)
      {
        objc_msgSend(v106, sel_setHidden_, 1);

        id v47 = v50;
      }

      sub_1C0FC6680((uint64_t)v105);
      break;
    case 7uLL:
      sub_1BFE29960();
      uint64_t v52 = v51;
      uint64_t v100 = v19 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v53 = swift_projectBox();
      uint64_t v54 = a4;
      uint64_t v55 = *(void *)(v53 + *(int *)(v52 + 48));
      unint64_t v56 = v101;
      sub_1C1318618(v53, v101, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      long long v57 = *(double **)(v55 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
      double v58 = v57[2];
      double v59 = v57[3];
      double v60 = v57[4];
      double v61 = v57[5];
      sub_1C1318524();
      id v63 = objc_allocWithZone(v62);
      swift_retain();
      uint64_t v64 = (char *)objc_msgSend(v63, sel_initWithFrame_, v58, v59, v60, v61);
      MEMORY[0x1F4188790](v64);
      uint64_t v66 = v103;
      uint64_t v65 = v104;
      *(&v99 - 8) = v103;
      *(&v99 - 7) = v56;
      *(&v99 - 6) = v55;
      *(&v99 - 5) = (uint64_t)v67;
      *(&v99 - 4) = a3;
      *(&v99 - 3) = v54;
      uint64_t v68 = v66;
      uint64_t v69 = v102;
      *(&v99 - 2) = a5;
      *(&v99 - 1) = v69;
      sub_1C130FF48(v67, v65, (void (*)(void))sub_1C1318604);
      id v70 = *(id *)&v64[qword_1EA1A1BF8];
      sub_1BFDB83D4(v70, v55);

      double v71 = (void *)sub_1C151AFCC();
      double v72 = v71;
      uint64_t v73 = *(void *)(v55 + 32);
      if (v73) {
        uint64_t v74 = *(unsigned char *)(v73 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) & 1;
      }
      else {
        uint64_t v74 = 0;
      }
      objc_msgSend(v71, sel_setClipsToBounds_, v74);

      uint64_t v90 = (void *)sub_1C151AFCC();
      unint64_t v91 = v90;
      uint64_t v92 = *(void *)(v55 + 32);
      if (v92) {
        uint64_t v93 = *(unsigned char *)(v92 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) & 1;
      }
      else {
        uint64_t v93 = 0;
      }
      objc_msgSend(v90, sel_setAccessibilityIgnoresInvertColors_, v93);

      uint64_t v94 = (void *)sub_1C151AFCC();
      swift_retain();

      sub_1C1517EDC();
      swift_release();
      id v95 = v105[0];
      if (v105[0])
      {
        objc_msgSend(v105[0], sel_setHidden_, 1);
      }
      uint64_t v96 = (objc_class *)type metadata accessor for DebugItemDragInteraction();
      uint64_t v97 = (char *)objc_allocWithZone(v96);
      *(void *)&v97[OBJC_IVAR____TtC8NewsFeedP33_ADE4A126F6FB4BE95458B6110D529A9F24DebugItemDragInteraction_feedItemLayoutAttributes] = v19;
      v107.receiver = v97;
      v107.super_class = v96;
      swift_retain();
      id v98 = objc_msgSendSuper2(&v107, sel_initWithDelegate_, v68);
      objc_msgSend(v64, sel_addInteraction_, v98);
      swift_release();

      uint64_t v88 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext;
      uint64_t v89 = v101;
LABEL_28:
      sub_1C0086F0C(v89, v88);
      break;
    case 0xBuLL:
      uint64_t v75 = *(void *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      v105[0] = *(id *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v101 = (unint64_t)v105[0] & 0xFFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v100 = a3;
      uint64_t v76 = a3;
      uint64_t v77 = a4;
      uint64_t v78 = a4;
      uint64_t v79 = a5;
      uint64_t v80 = a5;
      uint64_t v81 = v102;
      sub_1C130F598(v105, v104, v76, v78, v80, v102);
      uint64_t v82 = *(void *)(v75 + 16);
      if (v82)
      {
        uint64_t v83 = *(unsigned __int8 *)(v13 + 80);
        uint64_t v99 = v75;
        uint64_t v84 = v75 + ((v83 + 32) & ~v83);
        uint64_t v85 = *(void *)(v13 + 72);
        uint64_t v86 = (void *)v100;
        do
        {
          sub_1C1318618(v84, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          sub_1C130F0DC((uint64_t)v15, v104, v86, v77, v79, v81);
          sub_1C0086F0C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          v84 += v85;
          --v82;
        }
        while (v82);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      return;
  }
}

void sub_1C130FF48(void *a1, uint64_t a2, void (*a3)(void))
{
  swift_getObjectType();
  unint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v6, sel_addSubview_, a1);
  objc_msgSend(v6, sel_contentSize);
  double v8 = v7;
  objc_msgSend(a1, sel_frame);
  double MaxX = CGRectGetMaxX(v29);
  if (v8 <= MaxX) {
    double v8 = MaxX;
  }
  objc_msgSend(v6, sel_contentSize);
  double v11 = v10;
  objc_msgSend(a1, sel_frame);
  double MaxY = CGRectGetMaxY(v30);
  if (v11 > MaxY) {
    double v13 = v11;
  }
  else {
    double v13 = MaxY;
  }
  objc_msgSend(v6, sel_setContentSize_, v8, v13);
  if (qword_1EA1944F0 != -1) {
    swift_once();
  }
  sub_1C13185BC(&qword_1EA1AE308, v14, (void (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory);
  sub_1C1516FBC();
  if (v28 == 1)
  {
    id v15 = objc_msgSend(a1, sel_layer);
    id v16 = objc_msgSend(self, sel_labelColor);
    id v17 = objc_msgSend(a1, sel_traitCollection);
    id v18 = objc_msgSend(v16, sel_resolvedColorWithTraitCollection_, v17);

    id v19 = objc_msgSend(v18, sel_CGColor);
    objc_msgSend(v15, sel_setBorderColor_, v19);

    id v20 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v20, sel_setBorderWidth_, 1.0);
  }
  a3();
  if (qword_1EA1944F8 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  if (v27 == 1)
  {
    id v21 = objc_msgSend(a1, sel_subviews);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    unint64_t v22 = sub_1C151EBCC();

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v23)
      {
LABEL_15:
        if (v23 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v23; ++i)
        {
          if ((v22 & 0xC000000000000001) != 0) {
            id v25 = (id)MEMORY[0x1C18C7CB0](i, v22);
          }
          else {
            id v25 = *(id *)(v22 + 8 * i + 32);
          }
          id v26 = v25;
          sub_1C131050C(v25, a1);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C1310310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_formatLayoutViewRenderer + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  double v11 = (void *)sub_1C151AFCC();
  uint64_t v12 = v10 + *(void *)(*(void *)v10 + 144);
  uint64_t v32 = v12;
  uint64_t v13 = type metadata accessor for FormatItemNodeData();
  uint64_t v14 = (uint64_t *)(v12 + *(int *)(v13 + 32));
  uint64_t v16 = v14[1];
  uint64_t v17 = v14[2];
  uint64_t v35 = *v14;
  uint64_t v15 = v35;
  uint64_t v36 = v16;
  uint64_t v37 = v17;
  id v25 = *(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 88);
  sub_1C017C3D4(v35, v16);
  uint64_t v27 = type metadata accessor for FormatItemNodeLayoutContext();
  v25(a2, v10, v11, a5, &v35, a6, a7, a8, v13, v27, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v9);

  sub_1C017C418(v15, v16);
  uint64_t v18 = *(void *)(a3 + 64);
  id v19 = (void *)sub_1C151AFCC();
  uint64_t v20 = *v14;
  uint64_t v21 = v14[1];
  uint64_t v22 = v14[2];
  uint64_t v35 = v20;
  uint64_t v36 = v21;
  uint64_t v37 = v22;
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 96);
  sub_1C017C3D4(v20, v21);
  v23(a2, v32, v18, v19, &v35, a7, a8, v27, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v9);

  return sub_1C017C418(v20, v21);
}

void sub_1C131050C(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_layer);
  id v5 = objc_msgSend(self, sel_secondaryLabelColor);
  id v6 = objc_msgSend(a2, sel_traitCollection);
  id v7 = objc_msgSend(v5, sel_resolvedColorWithTraitCollection_, v6);

  id v8 = objc_msgSend(v7, sel_CGColor);
  objc_msgSend(v4, sel_setBorderColor_, v8);

  id v9 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v9, sel_setBorderWidth_, 1.0);

  id v10 = objc_msgSend(a1, sel_subviews);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v11 = sub_1C151EBCC();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v12) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      goto LABEL_10;
    }
  }
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x1C18C7CB0](i, v11);
    }
    else {
      id v14 = *(id *)(v11 + 8 * i + 32);
    }
    uint64_t v15 = v14;
    sub_1C131050C(v14, a2);
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DebugGroupLayoutViewFactory()
{
  return self;
}

uint64_t type metadata accessor for DebugItemDragInteraction()
{
  return self;
}

uint64_t sub_1C13109B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151C1FC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1C151C5DC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1318618(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2) {
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 2)
  {
    sub_1C0086F0C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_6:
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAD578], v12);
    goto LABEL_7;
  }
  uint64_t v39 = v3;
  uint64_t v40 = v2;
  long long v17 = *((_OWORD *)v11 + 5);
  long long v45 = *((_OWORD *)v11 + 4);
  long long v46 = v17;
  long long v18 = *((_OWORD *)v11 + 7);
  long long v47 = *((_OWORD *)v11 + 6);
  long long v48 = v18;
  long long v19 = *((_OWORD *)v11 + 1);
  long long v41 = *(_OWORD *)v11;
  long long v42 = v19;
  long long v20 = *((_OWORD *)v11 + 3);
  long long v43 = *((_OWORD *)v11 + 2);
  long long v44 = v20;
  uint64_t v21 = *((void *)v11 + 16);
  sub_1C0955B08((uint64_t)&v41);
  uint64_t v22 = *(void *)(v21 + 56);
  char v23 = *(unsigned char *)(v21 + 64);
  swift_release();
  if (v23)
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAD578], v12);
    int v24 = *MEMORY[0x1E4FAD570];
  }
  else
  {
    *(void *)uint64_t v15 = v22;
    int v24 = *MEMORY[0x1E4FAD570];
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAD570], v12);
  }
  uint64_t v3 = v39;
  uint64_t v2 = v40;
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v37 == v24)
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    return *(void *)v15;
  }
  if (v37 != *MEMORY[0x1E4FAD578])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
LABEL_7:
  sub_1C1318618(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
  unsigned int v25 = swift_getEnumCaseMultiPayload();
  if (v25 < 2)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD2A8], v2);
    return 1000;
  }
  if (v25 == 2)
  {
    long long v27 = *((_OWORD *)v8 + 5);
    long long v45 = *((_OWORD *)v8 + 4);
    long long v46 = v27;
    long long v28 = *((_OWORD *)v8 + 7);
    long long v47 = *((_OWORD *)v8 + 6);
    long long v48 = v28;
    long long v29 = *((_OWORD *)v8 + 1);
    long long v41 = *(_OWORD *)v8;
    long long v42 = v29;
    long long v30 = *((_OWORD *)v8 + 3);
    long long v43 = *((_OWORD *)v8 + 2);
    long long v44 = v30;
    uint64_t v31 = *((void *)v8 + 16);
    sub_1C0955B08((uint64_t)&v41);
    uint64_t v32 = v3;
    char v33 = *(unsigned char *)(*(void *)(v31
                               + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 208);
    swift_release();
    uint64_t v34 = v32;
    uint64_t v35 = *(void (**)(char *, void, uint64_t))(v32 + 104);
    if (v33)
    {
      v35(v5, *MEMORY[0x1E4FAD2A8], v2);
      int v36 = *MEMORY[0x1E4FAD2B0];
    }
    else
    {
      int v36 = *MEMORY[0x1E4FAD2B0];
      v35(v5, *MEMORY[0x1E4FAD2B0], v2);
    }
    uint64_t v3 = v34;
  }
  else
  {
    int v36 = *MEMORY[0x1E4FAD2B0];
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD2B0], v2);
    sub_1C0086F0C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
  }
  int v38 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v38 == v36) {
    return 2000;
  }
  if (v38 == *MEMORY[0x1E4FAD2A8]) {
    return 1000;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

void sub_1C1310EB8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151C1FC();
  uint64_t v385 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v318 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v318 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v318 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v342 = (char *)&v318 - v14;
  uint64_t v383 = sub_1C151C5DC();
  uint64_t v15 = *(void *)(v383 - 8);
  MEMORY[0x1F4188790](v383);
  v357 = (uint64_t *)((char *)&v318 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  v359 = (uint64_t *)((char *)&v318 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (uint64_t *)((char *)&v318 - v20);
  MEMORY[0x1F4188790](v22);
  int v358 = (uint64_t *)((char *)&v318 - v23);
  MEMORY[0x1F4188790](v24);
  v329 = (uint64_t *)((char *)&v318 - v25);
  MEMORY[0x1F4188790](v26);
  uint64_t v331 = (uint64_t *)((char *)&v318 - v27);
  MEMORY[0x1F4188790](v28);
  char v328 = (uint64_t *)((char *)&v318 - v29);
  MEMORY[0x1F4188790](v30);
  uint64_t v330 = (uint64_t *)((char *)&v318 - v31);
  MEMORY[0x1F4188790](v32);
  v348 = (uint64_t *)((char *)&v318 - v33);
  MEMORY[0x1F4188790](v34);
  v324 = (uint64_t *)((char *)&v318 - v35);
  uint64_t v380 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v380);
  uint64_t v361 = (long long *)((char *)&v318 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v37);
  uint64_t v366 = (long long *)((char *)&v318 - v38);
  MEMORY[0x1F4188790](v39);
  uint64_t v377 = (uint64_t)&v318 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v360 = (long long *)((char *)&v318 - v42);
  MEMORY[0x1F4188790](v43);
  uint64_t v365 = (long long *)((char *)&v318 - v44);
  MEMORY[0x1F4188790](v45);
  uint64_t v376 = (uint64_t)&v318 - v46;
  MEMORY[0x1F4188790](v47);
  char v333 = (long long *)((char *)&v318 - v48);
  MEMORY[0x1F4188790](v49);
  uint64_t v335 = (long long *)((char *)&v318 - v50);
  MEMORY[0x1F4188790](v51);
  uint64_t v344 = (uint64_t)&v318 - v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v332 = (long long *)((char *)&v318 - v54);
  MEMORY[0x1F4188790](v55);
  v334 = (long long *)((char *)&v318 - v56);
  MEMORY[0x1F4188790](v57);
  uint64_t v343 = (uint64_t)&v318 - v58;
  MEMORY[0x1F4188790](v59);
  uint64_t v323 = (uint64_t)&v318 - v60;
  uint64_t v387 = type metadata accessor for ZIndexable();
  uint64_t v350 = *(void *)(v387 - 8);
  MEMORY[0x1F4188790](v387);
  uint64_t v338 = (uint64_t)&v318 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v62);
  uint64_t v381 = (uint64_t)&v318 - v63;
  MEMORY[0x1F4188790](v64);
  v369 = (char *)&v318 - v65;
  MEMORY[0x1F4188790](v66);
  uint64_t v368 = (uint64_t *)((char *)&v318 - v67);
  MEMORY[0x1F4188790](v68);
  uint64_t v388 = (uint64_t)&v318 - v69;
  MEMORY[0x1F4188790](v70);
  uint64_t v384 = (uint64_t)&v318 - v71;
  MEMORY[0x1F4188790](v72);
  uint64_t v340 = (char *)&v318 - v73;
  MEMORY[0x1F4188790](v74);
  v339 = (uint64_t *)((char *)&v318 - v75);
  MEMORY[0x1F4188790](v76);
  uint64_t v351 = (uint64_t)&v318 - v77;
  MEMORY[0x1F4188790](v78);
  uint64_t v347 = (uint64_t)&v318 - v79;
  MEMORY[0x1F4188790](v80);
  int v322 = (char *)&v318 - v81;
  MEMORY[0x1F4188790](v82);
  uint64_t v321 = (uint64_t *)((char *)&v318 - v83);
  MEMORY[0x1F4188790](v84);
  uint64_t v326 = (uint64_t)&v318 - v85;
  MEMORY[0x1F4188790](v86);
  uint64_t v325 = (uint64_t)&v318 - v87;
  uint64_t v386 = a1;
  uint64_t v88 = a1[1];
  uint64_t v89 = sub_1C152086C();
  if (v89 < v88)
  {
    if (v88 >= 0) {
      uint64_t v90 = v88;
    }
    else {
      uint64_t v90 = v88 + 1;
    }
    if (v88 < -1) {
      goto LABEL_292;
    }
    v341 = v12;
    uint64_t v320 = v89;
    if (v88 < 2)
    {
      unint64_t v349 = MEMORY[0x1E4FBC860]
           + ((*(unsigned __int8 *)(v350 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v350 + 80));
      if (v88 != 1)
      {
        unint64_t v97 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        id v95 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v310 = MEMORY[0x1E4FBC860];
        if (v97 < 2) {
          goto LABEL_261;
        }
        goto LABEL_249;
      }
      uint64_t v319 = MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v91 = v90 >> 1;
      uint64_t v92 = sub_1C151ECCC();
      *(void *)(v92 + 16) = v91;
      uint64_t v93 = *(unsigned __int8 *)(v350 + 80);
      uint64_t v319 = v92;
      unint64_t v349 = v92 + ((v93 + 32) & ~v93);
    }
    uint64_t v94 = 0;
    uint64_t v375 = (uint64_t (**)(uint64_t *, uint64_t))(v15 + 88);
    unsigned int v378 = *MEMORY[0x1E4FAD570];
    unsigned int v379 = *MEMORY[0x1E4FAD578];
    int v352 = (void (**)(uint64_t *, uint64_t))(v15 + 8);
    uint64_t v363 = (void (**)(uint64_t *, uint64_t))(v15 + 96);
    uint64_t v372 = (void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 104);
    unsigned int v354 = *MEMORY[0x1E4FAD2B0];
    int v367 = (void (**)(char *, uint64_t, uint64_t))(v385 + 104);
    unsigned int v364 = *MEMORY[0x1E4FAD2A8];
    unsigned int v353 = (uint64_t (**)(char *, uint64_t))(v385 + 88);
    uint64_t v345 = (void (**)(char *, uint64_t))(v385 + 8);
    id v95 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v373 = v4;
    unsigned int v356 = v6;
    uint64_t v355 = v9;
    v362 = v21;
    uint64_t v96 = v348;
LABEL_16:
    uint64_t v98 = v94 + 1;
    uint64_t v337 = v95;
    uint64_t v346 = v94;
    if (v94 + 1 >= v88) {
      goto LABEL_115;
    }
    uint64_t v99 = v94;
    uint64_t v100 = *v386;
    uint64_t v101 = *(void *)(v350 + 72);
    uint64_t v374 = v94 + 1;
    uint64_t v102 = v325;
    sub_1C1318618(v100 + v101 * v98, v325, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    uint64_t v327 = v100;
    uint64_t v385 = v101;
    sub_1C1318618(v100 + v101 * v99, v326, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    uint64_t v103 = v321;
    sub_1C1318618(v102, (uint64_t)v321, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    int v105 = v324;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v397 = *v103;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter((uint64_t *)&v389);
      __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v390 + 1));
      sub_1C151C6AC();
      uint64_t v106 = v383;
      int v107 = (*v375)(v105, v383);
      long long v108 = v342;
      if (v107 == v378)
      {
        (*v363)(v105, v106);
        uint64_t v109 = *v105;
      }
      else
      {
        if (v107 != v379) {
          (*v352)(v105, v106);
        }
        uint64_t v109 = -100;
      }
      uint64_t v382 = v109;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
      swift_release_n();
      long long v112 = (uint64_t *)v322;
    }
    else
    {
      uint64_t v110 = (uint64_t)v103;
      uint64_t v111 = v323;
      sub_1C13183D4(v110, v323, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      uint64_t v382 = sub_1C13109B0();
      sub_1C0086F0C(v111, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      long long v112 = (uint64_t *)v322;
      long long v108 = v342;
    }
    sub_1C1318618(v326, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v397 = *v112;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter((uint64_t *)&v389);
      __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v390 + 1));
      sub_1C151C6AC();
      uint64_t v113 = v383;
      int v114 = (*v375)(v96, v383);
      if (v114 == v378)
      {
        (*v363)(v96, v113);
        uint64_t v115 = *v96;
      }
      else
      {
        if (v114 != v379) {
          (*v352)(v96, v113);
        }
        uint64_t v115 = -100;
      }
      uint64_t v371 = v115;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
      swift_release_n();
    }
    else
    {
      uint64_t v116 = (uint64_t)v112;
      uint64_t v117 = v323;
      sub_1C13183D4(v116, v323, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      uint64_t v371 = sub_1C13109B0();
      sub_1C0086F0C(v117, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    }
    sub_1C0086F0C(v326, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    sub_1C0086F0C(v325, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    uint64_t v94 = v346;
    uint64_t v98 = v346 + 2;
    uint64_t v370 = v88;
    if (v346 + 2 >= v88) {
      goto LABEL_101;
    }
    uint64_t v336 = v385 * v374;
    uint64_t v118 = v327;
    uint64_t v119 = v385 * v98;
    while (1)
    {
      uint64_t v374 = v98;
      uint64_t v120 = v347;
      sub_1C1318618(v118 + v119, v347, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      sub_1C1318618(v118 + v336, v351, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      uint64_t v121 = v120;
      long long v122 = v339;
      sub_1C1318618(v121, (uint64_t)v339, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      uint64_t v397 = *v122;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter((uint64_t *)&v389);
      __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v390 + 1));
      long long v123 = v328;
      sub_1C151C6AC();
      uint64_t v124 = v383;
      int v125 = (*v375)(v123, v383);
      if (v125 == v378)
      {
        (*v363)(v123, v124);
        uint64_t v126 = *v123;
        uint64_t v127 = v341;
        unsigned int v128 = (uint64_t *)v340;
      }
      else
      {
        uint64_t v127 = v341;
        unsigned int v128 = (uint64_t *)v340;
        if (v125 != v379) {
          (*v352)(v123, v124);
        }
        uint64_t v126 = -100;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
      swift_release_n();
LABEL_63:
      sub_1C1318618(v351, (uint64_t)v128, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v157 = (uint64_t)v128;
        uint64_t v158 = v344;
        sub_1C13183D4(v157, v344, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        sub_1C1318618(v158, (uint64_t)v335, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        unsigned int v159 = swift_getEnumCaseMultiPayload();
        if (v159 < 2) {
          goto LABEL_77;
        }
        if (v159 == 2)
        {
          long long v160 = v335[5];
          long long v393 = v335[4];
          long long v394 = v160;
          long long v161 = v335[7];
          long long v395 = v335[6];
          long long v396 = v161;
          long long v162 = v335[1];
          long long v389 = *v335;
          long long v390 = v162;
          long long v163 = v335[3];
          long long v391 = v335[2];
          long long v392 = v163;
          uint64_t v164 = *((void *)v335 + 16);
          sub_1C0955B08((uint64_t)&v389);
          uint64_t v165 = *(void *)(v164 + 56);
          char v166 = *(unsigned char *)(v164 + 64);
          swift_release();
          uint64_t v167 = v379;
          if ((v166 & 1) == 0)
          {
            *uint64_t v331 = v165;
            uint64_t v167 = v378;
          }
          uint64_t v168 = v331;
          uint64_t v169 = v383;
          (*v372)(v331, v167, v383);
          int v170 = (*v375)(v168, v169);
          if (v170 != v378)
          {
            uint64_t v127 = v341;
            if (v170 == v379) {
              goto LABEL_78;
            }
            (*v352)(v331, v169);
            goto LABEL_95;
          }
          (*v363)(v168, v169);
          uint64_t v156 = *v168;
        }
        else
        {
          sub_1C0086F0C((uint64_t)v335, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_77:
          (*v372)(v331, v379, v124);
LABEL_78:
          uint64_t v171 = v354;
          sub_1C1318618(v344, (uint64_t)v333, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          unsigned int v172 = swift_getEnumCaseMultiPayload();
          if (v172 < 2)
          {
            (*v367)(v127, v364, v373);
            goto LABEL_80;
          }
          if (v172 == 2)
          {
            long long v173 = v333[5];
            long long v393 = v333[4];
            long long v394 = v173;
            long long v174 = v333[7];
            long long v395 = v333[6];
            long long v396 = v174;
            long long v175 = v333[1];
            long long v389 = *v333;
            long long v390 = v175;
            long long v176 = v333[3];
            long long v391 = v333[2];
            long long v392 = v176;
            uint64_t v177 = *((void *)v333 + 16);
            sub_1C0955B08((uint64_t)&v389);
            char v178 = *(unsigned char *)(*(void *)(v177
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            unint64_t v179 = *v367;
            if (v178)
            {
              uint64_t v180 = v373;
              v179(v127, v364, v373);
              LODWORD(v171) = v354;
            }
            else
            {
              LODWORD(v171) = v354;
              uint64_t v180 = v373;
              v179(v127, v354, v373);
            }
          }
          else
          {
            uint64_t v180 = v373;
            (*v367)(v127, v171, v373);
            sub_1C0086F0C((uint64_t)v333, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          }
          int v181 = (*v353)(v127, v180);
          if (v181 == v171)
          {
            uint64_t v156 = 2000;
            goto LABEL_96;
          }
          if (v181 != v364)
          {
            (*v345)(v127, v373);
LABEL_95:
            uint64_t v156 = 0;
            goto LABEL_96;
          }
LABEL_80:
          uint64_t v156 = 1000;
        }
LABEL_96:
        sub_1C0086F0C(v344, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        goto LABEL_97;
      }
      uint64_t v397 = *v128;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter((uint64_t *)&v389);
      __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v390 + 1));
      uint64_t v153 = v329;
      sub_1C151C6AC();
      uint64_t v154 = v383;
      int v155 = (*v375)(v153, v383);
      if (v155 == v378)
      {
        (*v363)(v153, v154);
        uint64_t v156 = *v153;
      }
      else
      {
        if (v155 != v379) {
          (*v352)(v153, v154);
        }
        uint64_t v156 = -100;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
      swift_release_n();
LABEL_97:
      BOOL v182 = v382 < v371;
      sub_1C0086F0C(v351, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      sub_1C0086F0C(v347, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (((v182 ^ (v126 >= v156)) & 1) == 0)
      {
        uint64_t v21 = v362;
        uint64_t v96 = v348;
        uint64_t v98 = v374;
        uint64_t v94 = v346;
        uint64_t v88 = v370;
LABEL_101:
        if (v382 < v371)
        {
          if (v98 < v94) {
            goto LABEL_285;
          }
          if (v94 < v98)
          {
            uint64_t v183 = 0;
            uint64_t v184 = v385 * (v98 - 1);
            uint64_t v185 = v98 * v385;
            uint64_t v186 = v94;
            uint64_t v187 = v94 * v385;
            do
            {
              if (v186 != v98 + v183 - 1)
              {
                uint64_t v189 = v327;
                if (!v327) {
                  goto LABEL_290;
                }
                unint64_t v190 = v327 + v187;
                uint64_t v382 = v327 + v184;
                sub_1C13183D4(v327 + v187, v338, (uint64_t (*)(void))type metadata accessor for ZIndexable);
                if (v187 < v184 || v190 >= v189 + v185)
                {
                  uint64_t v188 = v382;
                  swift_arrayInitWithTakeFrontToBack();
                }
                else
                {
                  uint64_t v188 = v382;
                  if (v187 != v184) {
                    swift_arrayInitWithTakeBackToFront();
                  }
                }
                sub_1C13183D4(v338, v188, (uint64_t (*)(void))type metadata accessor for ZIndexable);
              }
              ++v186;
              --v183;
              v184 -= v385;
              v185 -= v385;
              v187 += v385;
            }
            while (v186 < v98 + v183);
            uint64_t v4 = v373;
            uint64_t v21 = v362;
            uint64_t v96 = v348;
            uint64_t v94 = v346;
            uint64_t v88 = v370;
            if (v98 < v370) {
              goto LABEL_116;
            }
LABEL_198:
            if (v98 < v94) {
              goto LABEL_278;
            }
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v374 = v98;
            if (isUniquelyReferenced_nonNull_native) {
              id v95 = v337;
            }
            else {
              id v95 = sub_1C0634CC8(0, *((void *)v337 + 2) + 1, 1, v337);
            }
            unint64_t v260 = *((void *)v95 + 2);
            unint64_t v259 = *((void *)v95 + 3);
            unint64_t v97 = v260 + 1;
            if (v260 >= v259 >> 1) {
              id v95 = sub_1C0634CC8((char *)(v259 > 1), v260 + 1, 1, v95);
            }
            *((void *)v95 + 2) = v97;
            uint64_t v261 = v95 + 32;
            uint64_t v262 = &v95[16 * v260 + 32];
            uint64_t v263 = v374;
            *(void *)uint64_t v262 = v346;
            *((void *)v262 + 1) = v263;
            if (v260)
            {
              while (1)
              {
                unint64_t v264 = v97 - 1;
                if (v97 >= 4)
                {
                  uint64_t v269 = &v261[16 * v97];
                  uint64_t v270 = *((void *)v269 - 8);
                  uint64_t v271 = *((void *)v269 - 7);
                  BOOL v275 = __OFSUB__(v271, v270);
                  uint64_t v272 = v271 - v270;
                  if (v275) {
                    goto LABEL_267;
                  }
                  uint64_t v274 = *((void *)v269 - 6);
                  uint64_t v273 = *((void *)v269 - 5);
                  BOOL v275 = __OFSUB__(v273, v274);
                  uint64_t v267 = v273 - v274;
                  char v268 = v275;
                  if (v275) {
                    goto LABEL_268;
                  }
                  unint64_t v276 = v97 - 2;
                  v277 = &v261[16 * v97 - 32];
                  uint64_t v279 = *(void *)v277;
                  uint64_t v278 = *((void *)v277 + 1);
                  BOOL v275 = __OFSUB__(v278, v279);
                  uint64_t v280 = v278 - v279;
                  if (v275) {
                    goto LABEL_270;
                  }
                  BOOL v275 = __OFADD__(v267, v280);
                  uint64_t v281 = v267 + v280;
                  if (v275) {
                    goto LABEL_273;
                  }
                  if (v281 >= v272)
                  {
                    id v299 = &v261[16 * v264];
                    uint64_t v301 = *(void *)v299;
                    uint64_t v300 = *((void *)v299 + 1);
                    BOOL v275 = __OFSUB__(v300, v301);
                    uint64_t v302 = v300 - v301;
                    if (v275) {
                      goto LABEL_277;
                    }
                    BOOL v292 = v267 < v302;
                    goto LABEL_235;
                  }
                }
                else
                {
                  if (v97 != 3)
                  {
                    uint64_t v293 = *((void *)v95 + 4);
                    uint64_t v294 = *((void *)v95 + 5);
                    BOOL v275 = __OFSUB__(v294, v293);
                    uint64_t v286 = v294 - v293;
                    char v287 = v275;
                    goto LABEL_229;
                  }
                  uint64_t v266 = *((void *)v95 + 4);
                  uint64_t v265 = *((void *)v95 + 5);
                  BOOL v275 = __OFSUB__(v265, v266);
                  uint64_t v267 = v265 - v266;
                  char v268 = v275;
                }
                if (v268) {
                  goto LABEL_269;
                }
                unint64_t v276 = v97 - 2;
                uint64_t v282 = &v261[16 * v97 - 32];
                uint64_t v284 = *(void *)v282;
                uint64_t v283 = *((void *)v282 + 1);
                BOOL v285 = __OFSUB__(v283, v284);
                uint64_t v286 = v283 - v284;
                char v287 = v285;
                if (v285) {
                  goto LABEL_272;
                }
                double v288 = &v261[16 * v264];
                uint64_t v290 = *(void *)v288;
                uint64_t v289 = *((void *)v288 + 1);
                BOOL v275 = __OFSUB__(v289, v290);
                uint64_t v291 = v289 - v290;
                if (v275) {
                  goto LABEL_275;
                }
                if (__OFADD__(v286, v291)) {
                  goto LABEL_276;
                }
                if (v286 + v291 >= v267)
                {
                  BOOL v292 = v267 < v291;
LABEL_235:
                  if (v292) {
                    unint64_t v264 = v276;
                  }
                  goto LABEL_237;
                }
LABEL_229:
                if (v287) {
                  goto LABEL_271;
                }
                char v295 = &v261[16 * v264];
                uint64_t v297 = *(void *)v295;
                uint64_t v296 = *((void *)v295 + 1);
                BOOL v275 = __OFSUB__(v296, v297);
                uint64_t v298 = v296 - v297;
                if (v275) {
                  goto LABEL_274;
                }
                if (v298 < v286) {
                  goto LABEL_15;
                }
LABEL_237:
                unint64_t v303 = v264 - 1;
                if (v264 - 1 >= v97)
                {
                  __break(1u);
LABEL_264:
                  __break(1u);
LABEL_265:
                  __break(1u);
LABEL_266:
                  __break(1u);
LABEL_267:
                  __break(1u);
LABEL_268:
                  __break(1u);
LABEL_269:
                  __break(1u);
LABEL_270:
                  __break(1u);
LABEL_271:
                  __break(1u);
LABEL_272:
                  __break(1u);
LABEL_273:
                  __break(1u);
LABEL_274:
                  __break(1u);
LABEL_275:
                  __break(1u);
LABEL_276:
                  __break(1u);
LABEL_277:
                  __break(1u);
LABEL_278:
                  __break(1u);
LABEL_279:
                  __break(1u);
LABEL_280:
                  __break(1u);
LABEL_281:
                  __break(1u);
LABEL_282:
                  __break(1u);
LABEL_283:
                  __break(1u);
LABEL_284:
                  __break(1u);
LABEL_285:
                  __break(1u);
LABEL_286:
                  __break(1u);
                  goto LABEL_287;
                }
                if (!*v386) {
                  goto LABEL_289;
                }
                uint64_t v304 = v95;
                unsigned int v305 = &v261[16 * v303];
                uint64_t v306 = *(void *)v305;
                char v307 = &v261[16 * v264];
                uint64_t v308 = *((void *)v307 + 1);
                sub_1C1314C18(*v386 + *(void *)(v350 + 72) * *(void *)v305, *v386 + *(void *)(v350 + 72) * *(void *)v307, (char *)(*v386 + *(void *)(v350 + 72) * v308), v349);
                if (v2)
                {
                  uint64_t v310 = v319;
                  goto LABEL_261;
                }
                if (v308 < v306) {
                  goto LABEL_264;
                }
                if (v264 > *((void *)v304 + 2)) {
                  goto LABEL_265;
                }
                *(void *)unsigned int v305 = v306;
                *(void *)&v261[16 * v303 + 8] = v308;
                unint64_t v309 = *((void *)v304 + 2);
                if (v264 >= v309) {
                  goto LABEL_266;
                }
                unint64_t v97 = v309 - 1;
                memmove(&v261[16 * v264], v307 + 16, 16 * (v309 - 1 - v264));
                id v95 = v304;
                *((void *)v304 + 2) = v309 - 1;
                BOOL v292 = v309 > 2;
                uint64_t v4 = v373;
                uint64_t v21 = v362;
                uint64_t v96 = v348;
                if (!v292) {
                  goto LABEL_15;
                }
              }
            }
            unint64_t v97 = 1;
LABEL_15:
            uint64_t v88 = v386[1];
            uint64_t v94 = v374;
            if (v374 >= v88)
            {
              uint64_t v310 = v319;
              if (v97 < 2)
              {
LABEL_261:
                swift_bridgeObjectRelease();
                *(void *)(v310 + 16) = 0;
                swift_bridgeObjectRelease();
                return;
              }
LABEL_249:
              uint64_t v311 = *v386;
              while (1)
              {
                unint64_t v312 = v97 - 2;
                if (v97 < 2) {
                  goto LABEL_279;
                }
                if (!v311) {
                  goto LABEL_291;
                }
                uint64_t v313 = v95;
                uint64_t v314 = *(void *)&v95[16 * v312 + 32];
                uint64_t v315 = *(void *)&v95[16 * v97 + 24];
                sub_1C1314C18(v311 + *(void *)(v350 + 72) * v314, v311 + *(void *)(v350 + 72) * *(void *)&v95[16 * v97 + 16], (char *)(v311 + *(void *)(v350 + 72) * v315), v349);
                if (v2) {
                  goto LABEL_261;
                }
                if (v315 < v314) {
                  goto LABEL_280;
                }
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v313 = sub_1C063604C((uint64_t)v313);
                }
                if (v312 >= *((void *)v313 + 2)) {
                  goto LABEL_281;
                }
                uint64_t v316 = &v313[16 * v312 + 32];
                *(void *)uint64_t v316 = v314;
                *((void *)v316 + 1) = v315;
                unint64_t v317 = *((void *)v313 + 2);
                if (v97 > v317) {
                  goto LABEL_282;
                }
                memmove(&v313[16 * v97 + 16], &v313[16 * v97 + 32], 16 * (v317 - v97));
                id v95 = v313;
                *((void *)v313 + 2) = v317 - 1;
                unint64_t v97 = v317 - 1;
                if (v317 <= 2) {
                  goto LABEL_261;
                }
              }
            }
            goto LABEL_16;
          }
        }
        uint64_t v4 = v373;
LABEL_115:
        if (v98 >= v88) {
          goto LABEL_198;
        }
LABEL_116:
        if (__OFSUB__(v98, v94)) {
          goto LABEL_283;
        }
        if (v98 - v94 >= v320)
        {
LABEL_197:
          uint64_t v94 = v346;
          goto LABEL_198;
        }
        uint64_t v94 = v346;
        if (__OFADD__(v346, v320)) {
          goto LABEL_286;
        }
        if (v346 + v320 >= v88) {
          uint64_t v191 = v88;
        }
        else {
          uint64_t v191 = v346 + v320;
        }
        if (v191 >= v346)
        {
          if (v98 == v191) {
            goto LABEL_198;
          }
          uint64_t v327 = v2;
          uint64_t v192 = *(void *)(v350 + 72);
          uint64_t v385 = v192 * (v98 - 1);
          uint64_t v370 = v192;
          uint64_t v193 = v98 * v192;
          uint64_t v336 = v191;
LABEL_127:
          uint64_t v195 = 0;
          uint64_t v196 = v346;
          uint64_t v374 = v98;
          uint64_t v371 = v193;
          while (1)
          {
            uint64_t v197 = *v386;
            uint64_t v382 = v193 + v195;
            uint64_t v198 = v384;
            sub_1C1318618(v193 + v195 + v197, v384, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            sub_1C1318618(v385 + v195 + v197, v388, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            id v199 = v368;
            sub_1C1318618(v198, (uint64_t)v368, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            if (swift_getEnumCaseMultiPayload() != 1) {
              break;
            }
            uint64_t v397 = *v199;
            swift_retain();
            FeedGroupDecoration.decorationItem.getter((uint64_t *)&v389);
            __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v390 + 1));
            sub_1C151C6AC();
            uint64_t v200 = v383;
            int v201 = (*v375)(v21, v383);
            if (v201 == v378)
            {
              (*v363)(v21, v200);
              uint64_t v202 = *v21;
              uint64_t v4 = v373;
              uint64_t v203 = (uint64_t *)v369;
            }
            else
            {
              uint64_t v4 = v373;
              uint64_t v203 = (uint64_t *)v369;
              if (v201 != v379) {
                (*v352)(v21, v200);
              }
              uint64_t v202 = -100;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
            swift_release_n();
LABEL_157:
            sub_1C1318618(v388, (uint64_t)v203, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              uint64_t v231 = (uint64_t)v203;
              uint64_t v232 = v377;
              sub_1C13183D4(v231, v377, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
              sub_1C1318618(v232, (uint64_t)v366, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
              unsigned int v233 = swift_getEnumCaseMultiPayload();
              if (v233 < 2) {
                goto LABEL_171;
              }
              if (v233 == 2)
              {
                long long v234 = v366[5];
                long long v393 = v366[4];
                long long v394 = v234;
                long long v235 = v366[7];
                long long v395 = v366[6];
                long long v396 = v235;
                long long v236 = v366[1];
                long long v389 = *v366;
                long long v390 = v236;
                long long v237 = v366[3];
                long long v391 = v366[2];
                long long v392 = v237;
                uint64_t v238 = *((void *)v366 + 16);
                sub_1C0955B08((uint64_t)&v389);
                uint64_t v239 = *(void *)(v238 + 56);
                char v240 = *(unsigned char *)(v238 + 64);
                swift_release();
                uint64_t v241 = v379;
                if ((v240 & 1) == 0)
                {
                  uint64_t *v359 = v239;
                  uint64_t v241 = v378;
                }
                CGRect v242 = v359;
                uint64_t v243 = v383;
                (*v372)(v359, v241, v383);
                int v244 = (*v375)(v242, v243);
                if (v244 != v378)
                {
                  if (v244 == v379) {
                    goto LABEL_172;
                  }
                  (*v352)(v242, v243);
                  goto LABEL_189;
                }
                (*v363)(v242, v243);
                uint64_t v230 = *v242;
              }
              else
              {
                sub_1C0086F0C((uint64_t)v366, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_171:
                (*v372)(v359, v379, v200);
LABEL_172:
                sub_1C1318618(v377, (uint64_t)v361, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
                unsigned int v245 = swift_getEnumCaseMultiPayload();
                if (v245 < 2)
                {
                  (*v367)(v356, v364, v4);
                  goto LABEL_174;
                }
                if (v245 == 2)
                {
                  long long v246 = v361[5];
                  long long v393 = v361[4];
                  long long v394 = v246;
                  long long v247 = v361[7];
                  long long v395 = v361[6];
                  long long v396 = v247;
                  long long v248 = v361[1];
                  long long v389 = *v361;
                  long long v390 = v248;
                  long long v249 = v361[3];
                  long long v391 = v361[2];
                  long long v392 = v249;
                  uint64_t v250 = *((void *)v361 + 16);
                  sub_1C0955B08((uint64_t)&v389);
                  char v251 = *(unsigned char *)(*(void *)(v250
                                              + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                                  + 208);
                  swift_release();
                  long long v252 = *v367;
                  long long v253 = v356;
                  if (v251)
                  {
                    v252(v356, v364, v4);
                    unsigned int v254 = v354;
                  }
                  else
                  {
                    unsigned int v254 = v354;
                    v252(v356, v354, v4);
                  }
                }
                else
                {
                  long long v253 = v356;
                  unsigned int v254 = v354;
                  (*v367)(v356, v354, v4);
                  sub_1C0086F0C((uint64_t)v361, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
                }
                int v255 = (*v353)(v253, v4);
                if (v255 == v254)
                {
                  uint64_t v230 = 2000;
                  goto LABEL_190;
                }
                if (v255 != v364)
                {
                  (*v345)(v356, v4);
LABEL_189:
                  uint64_t v230 = 0;
                  goto LABEL_190;
                }
LABEL_174:
                uint64_t v230 = 1000;
              }
LABEL_190:
              sub_1C0086F0C(v377, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
              goto LABEL_191;
            }
            uint64_t v397 = *v203;
            swift_retain();
            FeedGroupDecoration.decorationItem.getter((uint64_t *)&v389);
            __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v390 + 1));
            double v227 = v357;
            sub_1C151C6AC();
            uint64_t v228 = v383;
            int v229 = (*v375)(v227, v383);
            if (v229 == v378)
            {
              (*v363)(v227, v228);
              uint64_t v230 = *v227;
            }
            else
            {
              if (v229 != v379) {
                (*v352)(v227, v228);
              }
              uint64_t v230 = -100;
            }
            uint64_t v4 = v373;
            uint64_t v21 = v362;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
            swift_release_n();
LABEL_191:
            sub_1C0086F0C(v388, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            sub_1C0086F0C(v384, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            if (v202 >= v230)
            {
              uint64_t v194 = v374;
              uint64_t v193 = v371;
LABEL_126:
              uint64_t v98 = v194 + 1;
              v385 += v370;
              v193 += v370;
              if (v98 == v336)
              {
                uint64_t v98 = v336;
                uint64_t v2 = v327;
                uint64_t v96 = v348;
                goto LABEL_197;
              }
              goto LABEL_127;
            }
            uint64_t v256 = *v386;
            uint64_t v193 = v371;
            if (!*v386) {
              goto LABEL_288;
            }
            uint64_t v257 = v256 + v385 + v195;
            sub_1C13183D4(v256 + v371 + v195, v381, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            swift_arrayInitWithTakeFrontToBack();
            sub_1C13183D4(v381, v257, (uint64_t (*)(void))type metadata accessor for ZIndexable);
            v195 -= v370;
            ++v196;
            uint64_t v194 = v374;
            if (v374 == v196) {
              goto LABEL_126;
            }
          }
          uint64_t v204 = v376;
          sub_1C13183D4((uint64_t)v199, v376, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          sub_1C1318618(v204, (uint64_t)v365, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          unsigned int v205 = swift_getEnumCaseMultiPayload();
          uint64_t v200 = v383;
          if (v205 < 2)
          {
LABEL_143:
            (*v372)(v358, v379, v200);
          }
          else
          {
            if (v205 != 2)
            {
              sub_1C0086F0C((uint64_t)v365, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
              goto LABEL_143;
            }
            long long v206 = v365[5];
            long long v393 = v365[4];
            long long v394 = v206;
            long long v207 = v365[7];
            long long v395 = v365[6];
            long long v396 = v207;
            long long v208 = v365[1];
            long long v389 = *v365;
            long long v390 = v208;
            long long v209 = v365[3];
            long long v391 = v365[2];
            long long v392 = v209;
            uint64_t v210 = *((void *)v365 + 16);
            sub_1C0955B08((uint64_t)&v389);
            uint64_t v211 = *(void *)(v210 + 56);
            char v212 = *(unsigned char *)(v210 + 64);
            swift_release();
            uint64_t v213 = v379;
            double v214 = v358;
            if ((v212 & 1) == 0)
            {
              *int v358 = v211;
              uint64_t v213 = v378;
            }
            uint64_t v200 = v383;
            (*v372)(v214, v213, v383);
            int v215 = (*v375)(v214, v200);
            if (v215 == v378)
            {
              (*v363)(v214, v200);
              uint64_t v202 = *v214;
              goto LABEL_155;
            }
            if (v215 != v379)
            {
              (*v352)(v358, v200);
              uint64_t v202 = 0;
              goto LABEL_155;
            }
          }
          sub_1C1318618(v376, (uint64_t)v360, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          unsigned int v216 = swift_getEnumCaseMultiPayload();
          if (v216 < 2)
          {
            (*v367)(v355, v364, v4);
            uint64_t v202 = 1000;
            goto LABEL_155;
          }
          if (v216 == 2)
          {
            long long v217 = v360[5];
            long long v393 = v360[4];
            long long v394 = v217;
            long long v218 = v360[7];
            long long v395 = v360[6];
            long long v396 = v218;
            long long v219 = v360[1];
            long long v389 = *v360;
            long long v390 = v219;
            long long v220 = v360[3];
            long long v391 = v360[2];
            long long v392 = v220;
            uint64_t v221 = *((void *)v360 + 16);
            sub_1C0955B08((uint64_t)&v389);
            char v222 = *(unsigned char *)(*(void *)(v221
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            char v223 = *v367;
            double v224 = v355;
            if (v222)
            {
              v223(v355, v364, v4);
              uint64_t v200 = v383;
              unsigned int v225 = v354;
            }
            else
            {
              unsigned int v225 = v354;
              v223(v355, v354, v4);
              uint64_t v200 = v383;
            }
          }
          else
          {
            double v224 = v355;
            unsigned int v225 = v354;
            (*v367)(v355, v354, v4);
            sub_1C0086F0C((uint64_t)v360, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          }
          int v226 = (*v353)(v224, v4);
          if (v226 == v225)
          {
            uint64_t v202 = 2000;
LABEL_155:
            uint64_t v203 = (uint64_t *)v369;
          }
          else
          {
            uint64_t v203 = (uint64_t *)v369;
            if (v226 == v364)
            {
              uint64_t v202 = 1000;
            }
            else
            {
              (*v345)(v355, v4);
              uint64_t v202 = 0;
            }
          }
          sub_1C0086F0C(v376, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          goto LABEL_157;
        }
LABEL_287:
        __break(1u);
LABEL_288:
        __break(1u);
LABEL_289:
        __break(1u);
LABEL_290:
        __break(1u);
LABEL_291:
        __break(1u);
LABEL_292:
        sub_1C15203FC();
        __break(1u);
        return;
      }
      uint64_t v98 = v374 + 1;
      v118 += v385;
      uint64_t v88 = v370;
      long long v108 = v342;
      if (v370 == v374 + 1)
      {
        uint64_t v98 = v370;
        uint64_t v21 = v362;
        uint64_t v96 = v348;
        uint64_t v94 = v346;
        goto LABEL_101;
      }
    }
    uint64_t v129 = (uint64_t)v122;
    uint64_t v130 = v343;
    sub_1C13183D4(v129, v343, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    sub_1C1318618(v130, (uint64_t)v334, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    unsigned int v131 = swift_getEnumCaseMultiPayload();
    uint64_t v127 = v341;
    uint64_t v124 = v383;
    if (v131 >= 2)
    {
      if (v131 == 2)
      {
        long long v132 = v334[5];
        long long v393 = v334[4];
        long long v394 = v132;
        long long v133 = v334[7];
        long long v395 = v334[6];
        long long v396 = v133;
        long long v134 = v334[1];
        long long v389 = *v334;
        long long v390 = v134;
        long long v135 = v334[3];
        long long v391 = v334[2];
        long long v392 = v135;
        uint64_t v136 = *((void *)v334 + 16);
        sub_1C0955B08((uint64_t)&v389);
        uint64_t v137 = *(void *)(v136 + 56);
        char v138 = *(unsigned char *)(v136 + 64);
        swift_release();
        uint64_t v139 = v379;
        if ((v138 & 1) == 0)
        {
          *uint64_t v330 = v137;
          uint64_t v139 = v378;
        }
        uint64_t v140 = v330;
        uint64_t v124 = v383;
        (*v372)(v330, v139, v383);
        int v141 = (*v375)(v140, v124);
        if (v141 == v378)
        {
          (*v363)(v140, v124);
          uint64_t v126 = *v140;
          uint64_t v127 = v341;
          goto LABEL_61;
        }
        uint64_t v127 = v341;
        if (v141 != v379)
        {
          (*v352)(v330, v124);
          uint64_t v126 = 0;
          goto LABEL_61;
        }
LABEL_50:
        sub_1C1318618(v343, (uint64_t)v332, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        unsigned int v142 = swift_getEnumCaseMultiPayload();
        if (v142 >= 2)
        {
          if (v142 == 2)
          {
            long long v143 = v332[5];
            long long v393 = v332[4];
            long long v394 = v143;
            long long v144 = v332[7];
            long long v395 = v332[6];
            long long v396 = v144;
            long long v145 = v332[1];
            long long v389 = *v332;
            long long v390 = v145;
            long long v146 = v332[3];
            long long v391 = v332[2];
            long long v392 = v146;
            uint64_t v147 = *((void *)v332 + 16);
            sub_1C0955B08((uint64_t)&v389);
            char v148 = *(unsigned char *)(*(void *)(v147
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            uint64_t v149 = *v367;
            if (v148)
            {
              uint64_t v151 = v373;
              v149(v108, v364, v373);
              uint64_t v124 = v383;
              unsigned int v150 = v354;
            }
            else
            {
              unsigned int v150 = v354;
              uint64_t v151 = v373;
              v149(v108, v354, v373);
              uint64_t v124 = v383;
            }
          }
          else
          {
            unsigned int v150 = v354;
            uint64_t v151 = v373;
            (*v367)(v108, v354, v373);
            sub_1C0086F0C((uint64_t)v332, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          }
          int v152 = (*v353)(v108, v151);
          if (v152 != v150)
          {
            unsigned int v128 = (uint64_t *)v340;
            if (v152 == v364)
            {
              uint64_t v126 = 1000;
            }
            else
            {
              (*v345)(v108, v373);
              uint64_t v126 = 0;
            }
            goto LABEL_62;
          }
          uint64_t v126 = 2000;
        }
        else
        {
          (*v367)(v108, v364, v373);
          uint64_t v126 = 1000;
        }
LABEL_61:
        unsigned int v128 = (uint64_t *)v340;
LABEL_62:
        sub_1C0086F0C(v343, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        goto LABEL_63;
      }
      sub_1C0086F0C((uint64_t)v334, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
    }
    (*v372)(v330, v379, v124);
    goto LABEL_50;
  }
  if (v88 < 0) {
    goto LABEL_284;
  }
  if (v88) {
    sub_1C1313ABC(0, v88, 1, v386);
  }
}

void sub_1C1313ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  long long v144 = a4;
  uint64_t v110 = a1;
  uint64_t v6 = sub_1C151C1FC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v134 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v108 - v10;
  uint64_t v140 = sub_1C151C5DC();
  uint64_t v12 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  uint64_t v118 = (uint64_t *)((char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v120 = (uint64_t *)((char *)&v108 - v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v117 = (uint64_t *)((char *)&v108 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v119 = (uint64_t *)((char *)&v108 - v19);
  uint64_t v139 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v139);
  long long v122 = (long long *)((char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  int v125 = (long long *)((char *)&v108 - v22);
  MEMORY[0x1F4188790](v23);
  uint64_t v137 = (uint64_t)&v108 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v121 = (long long *)((char *)&v108 - v26);
  MEMORY[0x1F4188790](v27);
  uint64_t v124 = (long long *)((char *)&v108 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v136 = (uint64_t)&v108 - v30;
  uint64_t v148 = type metadata accessor for ZIndexable();
  MEMORY[0x1F4188790](v148);
  uint64_t v141 = (uint64_t)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  MEMORY[0x1F4188790](v33);
  uint64_t v130 = (uint64_t *)((char *)&v108 - v34);
  MEMORY[0x1F4188790](v35);
  uint64_t v149 = (uint64_t)&v108 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v145 = (uint64_t)&v108 - v40;
  uint64_t v132 = a3;
  uint64_t v109 = a2;
  if (a3 != a2)
  {
    uint64_t v41 = *(void *)(v38 + 72);
    unsigned int v135 = *MEMORY[0x1E4FAD570];
    unsigned int v128 = (void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 104);
    unsigned int v138 = *MEMORY[0x1E4FAD578];
    long long v133 = (uint64_t (**)(uint64_t *, uint64_t))(v12 + 88);
    int v114 = (void (**)(uint64_t *, uint64_t))(v12 + 8);
    long long v123 = (void (**)(uint64_t *, uint64_t))(v12 + 96);
    unsigned int v115 = *MEMORY[0x1E4FAD2B0];
    uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v7 + 104);
    uint64_t v43 = *MEMORY[0x1E4FAD2A8];
    uint64_t v116 = (uint64_t (**)(char *, uint64_t))(v7 + 88);
    uint64_t v111 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v147 = v41 * (v132 - 1);
    uint64_t v131 = v41;
    uint64_t v146 = v41 * v132;
    uint64_t v126 = v6;
    uint64_t v129 = v11;
    uint64_t v127 = v39;
    long long v112 = (void (**)(char *, uint64_t, uint64_t))(v7 + 104);
    unsigned int v113 = v43;
LABEL_5:
    uint64_t v44 = 0;
    uint64_t v45 = v110;
    while (1)
    {
      uint64_t v46 = *v144;
      uint64_t v143 = v146 + v44;
      uint64_t v47 = v145;
      sub_1C1318618(v146 + v44 + v46, v145, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      uint64_t v142 = v147 + v44;
      sub_1C1318618(v147 + v44 + v46, v149, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      uint64_t v48 = v130;
      sub_1C1318618(v47, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      uint64_t v158 = *v48;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter((uint64_t *)&v150);
      __swift_project_boxed_opaque_existential_1(&v150, *((uint64_t *)&v151 + 1));
      uint64_t v49 = v117;
      sub_1C151C6AC();
      uint64_t v50 = v140;
      int v51 = (*v133)(v49, v140);
      if (v51 == v135)
      {
        (*v123)(v49, v50);
        uint64_t v52 = *v49;
        uint64_t v6 = v126;
        uint64_t v53 = v134;
      }
      else
      {
        uint64_t v53 = v134;
        if (v51 != v138) {
          (*v114)(v49, v50);
        }
        uint64_t v52 = -100;
        uint64_t v6 = v126;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v150);
      swift_release_n();
      uint64_t v66 = v127;
LABEL_39:
      sub_1C1318618(v149, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v81 = (uint64_t)v66;
        uint64_t v82 = v137;
        sub_1C13183D4(v81, v137, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        sub_1C1318618(v82, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload < 2) {
          goto LABEL_53;
        }
        if (EnumCaseMultiPayload == 2)
        {
          long long v84 = v125[5];
          long long v154 = v125[4];
          long long v155 = v84;
          long long v85 = v125[7];
          long long v156 = v125[6];
          long long v157 = v85;
          long long v86 = v125[1];
          long long v150 = *v125;
          long long v151 = v86;
          long long v87 = v125[3];
          long long v152 = v125[2];
          long long v153 = v87;
          uint64_t v88 = *((void *)v125 + 16);
          sub_1C0955B08((uint64_t)&v150);
          uint64_t v89 = *(void *)(v88 + 56);
          char v90 = *(unsigned char *)(v88 + 64);
          swift_release();
          uint64_t v91 = v138;
          if ((v90 & 1) == 0)
          {
            *uint64_t v120 = v89;
            uint64_t v91 = v135;
          }
          uint64_t v92 = v120;
          uint64_t v93 = v140;
          (*v128)(v120, v91, v140);
          int v94 = (*v133)(v92, v93);
          if (v94 != v135)
          {
            if (v94 == v138)
            {
              uint64_t v53 = v134;
              goto LABEL_54;
            }
            (*v114)(v92, v93);
            goto LABEL_69;
          }
          (*v123)(v92, v93);
          uint64_t v80 = *v92;
        }
        else
        {
          sub_1C0086F0C((uint64_t)v125, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_53:
          (*v128)(v120, v138, v50);
LABEL_54:
          sub_1C1318618(v137, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          unsigned int v95 = swift_getEnumCaseMultiPayload();
          if (v95 < 2)
          {
            (*v42)(v53, v43, v6);
            goto LABEL_56;
          }
          if (v95 == 2)
          {
            long long v96 = v122[5];
            long long v154 = v122[4];
            long long v155 = v96;
            long long v97 = v122[7];
            long long v156 = v122[6];
            long long v157 = v97;
            long long v98 = v122[1];
            long long v150 = *v122;
            long long v151 = v98;
            long long v99 = v122[3];
            long long v152 = v122[2];
            long long v153 = v99;
            uint64_t v100 = *((void *)v122 + 16);
            sub_1C0955B08((uint64_t)&v150);
            char v101 = *(unsigned char *)(*(void *)(v100
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            uint64_t v102 = *v42;
            uint64_t v53 = v134;
            if (v101)
            {
              v102(v134, v43, v6);
              unsigned int v103 = v115;
            }
            else
            {
              unsigned int v103 = v115;
              v102(v134, v115, v6);
            }
          }
          else
          {
            unsigned int v103 = v115;
            (*v42)(v53, v115, v6);
            sub_1C0086F0C((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          }
          int v104 = (*v116)(v53, v6);
          if (v104 == v103)
          {
            uint64_t v80 = 2000;
            goto LABEL_70;
          }
          if (v104 != v43)
          {
            (*v111)(v53, v6);
LABEL_69:
            uint64_t v80 = 0;
            goto LABEL_70;
          }
LABEL_56:
          uint64_t v80 = 1000;
        }
LABEL_70:
        sub_1C0086F0C(v137, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        goto LABEL_71;
      }
      uint64_t v158 = *v66;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter((uint64_t *)&v150);
      __swift_project_boxed_opaque_existential_1(&v150, *((uint64_t *)&v151 + 1));
      uint64_t v77 = v140;
      uint64_t v78 = v118;
      sub_1C151C6AC();
      int v79 = (*v133)(v78, v77);
      if (v79 == v135)
      {
        (*v123)(v78, v77);
        uint64_t v80 = *v78;
      }
      else
      {
        if (v79 != v138) {
          (*v114)(v78, v77);
        }
        uint64_t v80 = -100;
      }
      uint64_t v6 = v126;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v150);
      swift_release_n();
LABEL_71:
      sub_1C0086F0C(v149, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      sub_1C0086F0C(v145, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      BOOL v105 = v52 < v80;
      uint64_t v11 = v129;
      if (!v105) {
        goto LABEL_4;
      }
      uint64_t v106 = *v144;
      if (!*v144)
      {
        __break(1u);
        return;
      }
      uint64_t v107 = v106 + v147 + v44;
      sub_1C13183D4(v106 + v146 + v44, v141, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C13183D4(v141, v107, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      v44 -= v131;
      if (v132 == ++v45)
      {
LABEL_4:
        v147 += v131;
        v146 += v131;
        if (++v132 == v109) {
          return;
        }
        goto LABEL_5;
      }
    }
    uint64_t v54 = v136;
    sub_1C13183D4((uint64_t)v48, v136, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    sub_1C1318618(v54, (uint64_t)v124, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    unsigned int v55 = swift_getEnumCaseMultiPayload();
    uint64_t v53 = v134;
    uint64_t v50 = v140;
    if (v55 >= 2)
    {
      if (v55 == 2)
      {
        long long v56 = v124[5];
        long long v154 = v124[4];
        long long v155 = v56;
        long long v57 = v124[7];
        long long v156 = v124[6];
        long long v157 = v57;
        long long v58 = v124[1];
        long long v150 = *v124;
        long long v151 = v58;
        long long v59 = v124[3];
        long long v152 = v124[2];
        long long v153 = v59;
        uint64_t v60 = *((void *)v124 + 16);
        sub_1C0955B08((uint64_t)&v150);
        uint64_t v61 = *(void *)(v60 + 56);
        char v62 = *(unsigned char *)(v60 + 64);
        swift_release();
        uint64_t v63 = v138;
        uint64_t v64 = v119;
        if ((v62 & 1) == 0)
        {
          *uint64_t v119 = v61;
          uint64_t v63 = v135;
        }
        uint64_t v50 = v140;
        (*v128)(v64, v63, v140);
        int v65 = (*v133)(v64, v50);
        if (v65 == v135)
        {
          (*v123)(v64, v50);
          uint64_t v52 = *v64;
          uint64_t v53 = v134;
          goto LABEL_24;
        }
        uint64_t v53 = v134;
        if (v65 != v138)
        {
          (*v114)(v119, v50);
          uint64_t v52 = 0;
          goto LABEL_24;
        }
LABEL_22:
        sub_1C1318618(v136, (uint64_t)v121, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        unsigned int v67 = swift_getEnumCaseMultiPayload();
        if (v67 >= 2)
        {
          uint64_t v66 = v127;
          if (v67 == 2)
          {
            long long v68 = v121[5];
            long long v154 = v121[4];
            long long v155 = v68;
            long long v69 = v121[7];
            long long v156 = v121[6];
            long long v157 = v69;
            long long v70 = v121[1];
            long long v150 = *v121;
            long long v151 = v70;
            long long v71 = v121[3];
            long long v152 = v121[2];
            long long v153 = v71;
            uint64_t v72 = *((void *)v121 + 16);
            sub_1C0955B08((uint64_t)&v150);
            char v73 = *(unsigned char *)(*(void *)(v72
                                       + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                           + 208);
            swift_release();
            uint64_t v74 = *v42;
            if (v73)
            {
              v74(v11, v43, v6);
              uint64_t v53 = v134;
              uint64_t v50 = v140;
              unsigned int v75 = v115;
            }
            else
            {
              unsigned int v75 = v115;
              v74(v11, v115, v6);
              uint64_t v53 = v134;
              uint64_t v50 = v140;
            }
          }
          else
          {
            unsigned int v75 = v115;
            (*v42)(v11, v115, v6);
            sub_1C0086F0C((uint64_t)v121, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          }
          int v76 = (*v116)(v11, v6);
          if (v76 == v75)
          {
            uint64_t v52 = 2000;
            uint64_t v42 = v112;
            uint64_t v43 = v113;
          }
          else
          {
            uint64_t v43 = v113;
            if (v76 == v113)
            {
              uint64_t v52 = 1000;
            }
            else
            {
              (*v111)(v11, v6);
              uint64_t v52 = 0;
            }
            uint64_t v42 = v112;
          }
          goto LABEL_38;
        }
        (*v42)(v11, v43, v6);
        uint64_t v52 = 1000;
LABEL_24:
        uint64_t v66 = v127;
LABEL_38:
        sub_1C0086F0C(v136, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        goto LABEL_39;
      }
      sub_1C0086F0C((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
    }
    (*v128)(v119, v138, v50);
    goto LABEL_22;
  }
}

uint64_t sub_1C1314C18(unint64_t a1, unint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v239 = sub_1C151C1FC();
  v211[0] = *(void *)(v239 - 8);
  MEMORY[0x1F4188790](v239);
  unsigned int v233 = (char *)v211 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v212 = (char *)v211 - v10;
  MEMORY[0x1F4188790](v11);
  long long v234 = (char *)v211 - v12;
  MEMORY[0x1F4188790](v13);
  unsigned int v216 = (uint64_t (**)(char *, uint64_t))((char *)v211 - v14);
  uint64_t v15 = sub_1C151C5DC();
  uint64_t v16 = *(char **)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  int v215 = (void *)((char *)v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  long long v220 = (void *)((char *)v211 - v19);
  MEMORY[0x1F4188790](v20);
  double v224 = (char *)v211 - v21;
  MEMORY[0x1F4188790](v22);
  long long v219 = (void *)((char *)v211 - v23);
  MEMORY[0x1F4188790](v24);
  double v214 = (void *)((char *)v211 - v25);
  MEMORY[0x1F4188790](v26);
  long long v218 = (char *)v211 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v213 = (void *)((char *)v211 - v29);
  MEMORY[0x1F4188790](v30);
  long long v217 = (void *)((char *)v211 - v31);
  uint64_t v244 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v244);
  char v222 = (long long *)((char *)v211 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v33);
  double v227 = (long long *)((char *)v211 - v34);
  MEMORY[0x1F4188790](v35);
  long long v237 = (uint64_t (**)(uint64_t *, uint64_t))((char *)v211 - v36);
  MEMORY[0x1F4188790](v37);
  uint64_t v221 = (char *)v211 - v38;
  MEMORY[0x1F4188790](v39);
  int v226 = (char *)v211 - v40;
  MEMORY[0x1F4188790](v41);
  unint64_t v236 = (unint64_t)v211 - v42;
  MEMORY[0x1F4188790](v43);
  unsigned int v225 = (long long *)((char *)v211 - v44);
  MEMORY[0x1F4188790](v45);
  unint64_t v229 = (unint64_t)v211 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v238 = (uint64_t)v211 - v48;
  MEMORY[0x1F4188790](v49);
  char v223 = (long long *)((char *)v211 - v50);
  MEMORY[0x1F4188790](v51);
  uint64_t v228 = (char *)v211 - v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v235 = (uint64_t)v211 - v54;
  uint64_t v245 = type metadata accessor for ZIndexable();
  MEMORY[0x1F4188790](v245);
  uint64_t v230 = (char *)v211 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v56);
  uint64_t v231 = (char *)v211 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v242 = (uint64_t)v211 - v59;
  MEMORY[0x1F4188790](v60);
  uint64_t v240 = (uint64_t)v211 - v61;
  MEMORY[0x1F4188790](v62);
  uint64_t v232 = (char *)v211 - v63;
  MEMORY[0x1F4188790](v64);
  uint64_t v66 = (void *)((char *)v211 - v65);
  MEMORY[0x1F4188790](v67);
  long long v69 = (char *)v211 - v68;
  MEMORY[0x1F4188790](v70);
  uint64_t v72 = (char *)v211 - v71;
  uint64_t v241 = *(void *)(v73 + 72);
  if (!v241)
  {
    __break(1u);
LABEL_189:
    __break(1u);
LABEL_190:
    __break(1u);
    goto LABEL_191;
  }
  unint64_t v74 = a1;
  if (a2 - a1 == 0x8000000000000000 && v241 == -1) {
    goto LABEL_189;
  }
  unsigned int v75 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v241 == -1) {
    goto LABEL_190;
  }
  uint64_t v76 = (uint64_t)(a2 - a1) / v241;
  unint64_t v257 = a1;
  unint64_t v256 = a4;
  uint64_t v77 = (uint64_t)v75 / v241;
  uint64_t v243 = v15;
  if (v76 >= (uint64_t)v75 / v241)
  {
    if (v77 < 0) {
      goto LABEL_191;
    }
    unint64_t v229 = a1;
    uint64_t v79 = v77 * v241;
    uint64_t v80 = v233;
    if (a4 < a2 || a2 + v79 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v141 = a4 + v79;
    unint64_t v255 = a4 + v79;
    unint64_t v257 = a2;
    BOOL v142 = v79 < 1;
    uint64_t v143 = (uint64_t *)v231;
    if (v142 || v229 >= a2)
    {
LABEL_187:
      sub_1C0635E80(&v257, &v256, (uint64_t *)&v255);
      return 1;
    }
    uint64_t v144 = -v241;
    LODWORD(v234) = *MEMORY[0x1E4FAD570];
    uint64_t v228 = v16 + 104;
    LODWORD(v238) = *MEMORY[0x1E4FAD578];
    uint64_t v232 = v16 + 88;
    double v214 = (uint64_t *)(v16 + 8);
    long long v218 = v16 + 96;
    LODWORD(v217) = *MEMORY[0x1E4FAD2B0];
    unsigned int v225 = (long long *)(v211[0] + 104);
    LODWORD(v223) = *MEMORY[0x1E4FAD2A8];
    unsigned int v216 = (uint64_t (**)(char *, uint64_t))(v211[0] + 88);
    uint64_t v213 = (uint64_t *)(v211[0] + 8);
    uint64_t v235 = -v241;
    while (1)
    {
      uint64_t v145 = v141 + v144;
      uint64_t v146 = v144;
      uint64_t v147 = v240;
      sub_1C1318618(v145, v240, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      unint64_t v148 = a2 + v146;
      sub_1C1318618(v148, v242, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      sub_1C1318618(v147, (uint64_t)v143, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      uint64_t v254 = *v143;
      swift_retain();
      FeedGroupDecoration.decorationItem.getter((uint64_t *)&v246);
      __swift_project_boxed_opaque_existential_1(&v246, *((uint64_t *)&v247 + 1));
      uint64_t v149 = (uint64_t *)v224;
      sub_1C151C6AC();
      int v150 = (*(uint64_t (**)(uint64_t *, uint64_t))v232)(v149, v15);
      if (v150 == v234)
      {
        (*(void (**)(uint64_t *, uint64_t))v218)(v149, v15);
        uint64_t v241 = *v149;
        uint64_t v151 = v239;
        long long v152 = (uint64_t *)v230;
      }
      else
      {
        uint64_t v151 = v239;
        long long v152 = (uint64_t *)v230;
        if (v150 != v238) {
          ((void (*)(char *, uint64_t))*v214)(v224, v15);
        }
        uint64_t v241 = -100;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v246);
      swift_release_n();
      uint64_t v80 = v233;
LABEL_140:
      sub_1C1318618(v242, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v254 = *v152;
        swift_retain();
        FeedGroupDecoration.decorationItem.getter((uint64_t *)&v246);
        __swift_project_boxed_opaque_existential_1(&v246, *((uint64_t *)&v247 + 1));
        unint64_t v179 = v215;
        sub_1C151C6AC();
        uint64_t v180 = v243;
        int v181 = (*(uint64_t (**)(uint64_t *, uint64_t))v232)(v179, v243);
        if (v181 == v234)
        {
          (*(void (**)(uint64_t *, uint64_t))v218)(v179, v180);
          uint64_t v182 = *v179;
        }
        else
        {
          if (v181 != v238) {
            ((void (*)(uint64_t *, uint64_t))*v214)(v179, v243);
          }
          uint64_t v182 = -100;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v246);
        swift_release_n();
        uint64_t v80 = v233;
        goto LABEL_172;
      }
      uint64_t v183 = (uint64_t)v152;
      uint64_t v184 = v237;
      sub_1C13183D4(v183, (uint64_t)v237, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C1318618((uint64_t)v184, (uint64_t)v227, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload < 2) {
        goto LABEL_154;
      }
      if (EnumCaseMultiPayload != 2)
      {
        sub_1C0086F0C((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_154:
        (*(void (**)(uint64_t *, void, uint64_t))v228)(v220, v238, v243);
        goto LABEL_155;
      }
      uint64_t v186 = a3;
      long long v187 = v227[5];
      long long v250 = v227[4];
      long long v251 = v187;
      long long v188 = v227[7];
      long long v252 = v227[6];
      long long v253 = v188;
      long long v189 = v227[1];
      long long v246 = *v227;
      long long v247 = v189;
      long long v190 = v227[3];
      long long v248 = v227[2];
      long long v249 = v190;
      uint64_t v191 = *((void *)v227 + 16);
      sub_1C0955B08((uint64_t)&v246);
      uint64_t v192 = *(void *)(v191 + 56);
      char v193 = *(unsigned char *)(v191 + 64);
      swift_release();
      uint64_t v194 = v238;
      if ((v193 & 1) == 0)
      {
        *long long v220 = v192;
        uint64_t v194 = v234;
      }
      uint64_t v195 = v220;
      uint64_t v196 = v243;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))v228)(v220, v194, v243);
      int v197 = (*(uint64_t (**)(uint64_t *, uint64_t))v232)(v195, v196);
      if (v197 == v234)
      {
        (*(void (**)(uint64_t *, uint64_t))v218)(v195, v196);
        uint64_t v182 = *v195;
        a3 = v186;
LABEL_170:
        uint64_t v80 = v233;
        goto LABEL_171;
      }
      a3 = v186;
      if (v197 != v238)
      {
        ((void (*)(uint64_t *, uint64_t))*v214)(v220, v243);
        uint64_t v182 = 0;
        goto LABEL_170;
      }
      uint64_t v80 = v233;
LABEL_155:
      sub_1C1318618((uint64_t)v237, (uint64_t)v222, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      unsigned int v198 = swift_getEnumCaseMultiPayload();
      if (v198 >= 2)
      {
        if (v198 == 2)
        {
          long long v199 = v222[5];
          long long v250 = v222[4];
          long long v251 = v199;
          long long v200 = v222[7];
          long long v252 = v222[6];
          long long v253 = v200;
          long long v201 = v222[1];
          long long v246 = *v222;
          long long v247 = v201;
          long long v202 = v222[3];
          long long v248 = v222[2];
          long long v249 = v202;
          uint64_t v203 = *((void *)v222 + 16);
          sub_1C0955B08((uint64_t)&v246);
          char v204 = *(unsigned char *)(*(void *)(v203
                                      + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                          + 208);
          swift_release();
          unsigned int v205 = *(void (**)(char *, void, uint64_t))v225;
          if (v204)
          {
            v205(v80, v223, v151);
            int v206 = (int)v217;
          }
          else
          {
            int v206 = (int)v217;
            v205(v80, v217, v151);
          }
        }
        else
        {
          int v206 = (int)v217;
          (*(void (**)(char *, void, uint64_t))v225)(v80, v217, v151);
          sub_1C0086F0C((uint64_t)v222, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
        }
        int v207 = (*v216)(v80, v151);
        if (v207 == v206)
        {
          uint64_t v182 = 2000;
          goto LABEL_171;
        }
        if (v207 != v223)
        {
          ((void (*)(char *, uint64_t))*v213)(v80, v151);
          uint64_t v182 = 0;
          goto LABEL_171;
        }
      }
      else
      {
        (*(void (**)(char *, void, uint64_t))v225)(v80, v223, v151);
      }
      uint64_t v182 = 1000;
LABEL_171:
      sub_1C0086F0C((uint64_t)v237, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
LABEL_172:
      uint64_t v144 = v235;
      unint64_t v208 = (unint64_t)&a3[v235];
      sub_1C0086F0C(v242, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      sub_1C0086F0C(v240, (uint64_t (*)(void))type metadata accessor for ZIndexable);
      if (v241 >= v182)
      {
        unint64_t v209 = v255;
        v255 += v144;
        uint64_t v15 = v243;
        uint64_t v143 = (uint64_t *)v231;
        if ((unint64_t)a3 < v209 || v208 >= v209)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a3 != (char *)v209)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v148 = a2;
      }
      else
      {
        uint64_t v15 = v243;
        uint64_t v143 = (uint64_t *)v231;
        if ((unint64_t)a3 < a2 || v208 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v144 = v235;
        }
        else
        {
          uint64_t v144 = v235;
          if (a3 != (char *)a2) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v257 += v144;
      }
      unint64_t v141 = v255;
      if (v255 > a4)
      {
        a2 = v148;
        a3 = (char *)v208;
        if (v148 > v229) {
          continue;
        }
      }
      goto LABEL_187;
    }
    uint64_t v153 = (uint64_t)v143;
    uint64_t v154 = v236;
    sub_1C13183D4(v153, v236, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    sub_1C1318618(v154, (uint64_t)v226, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
    unsigned int v155 = swift_getEnumCaseMultiPayload();
    uint64_t v151 = v239;
    if (v155 >= 2)
    {
      if (v155 == 2)
      {
        long long v156 = a3;
        long long v157 = *((_OWORD *)v226 + 5);
        long long v250 = *((_OWORD *)v226 + 4);
        long long v251 = v157;
        long long v158 = *((_OWORD *)v226 + 7);
        long long v252 = *((_OWORD *)v226 + 6);
        long long v253 = v158;
        long long v159 = *((_OWORD *)v226 + 1);
        long long v246 = *(_OWORD *)v226;
        long long v247 = v159;
        long long v160 = *((_OWORD *)v226 + 3);
        long long v248 = *((_OWORD *)v226 + 2);
        long long v249 = v160;
        uint64_t v161 = *((void *)v226 + 16);
        sub_1C0955B08((uint64_t)&v246);
        uint64_t v162 = *(void *)(v161 + 56);
        char v163 = *(unsigned char *)(v161 + 64);
        swift_release();
        uint64_t v164 = v238;
        if ((v163 & 1) == 0)
        {
          *long long v219 = v162;
          uint64_t v164 = v234;
        }
        uint64_t v165 = v219;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))v228)(v219, v164, v15);
        int v166 = (*(uint64_t (**)(uint64_t *, uint64_t))v232)(v165, v15);
        if (v166 == v234)
        {
          (*(void (**)(uint64_t *, uint64_t))v218)(v165, v15);
          uint64_t v241 = *v165;
          a3 = v156;
        }
        else
        {
          a3 = v156;
          if (v166 == v238)
          {
            uint64_t v80 = v233;
LABEL_120:
            sub_1C1318618(v236, (uint64_t)v221, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
            unsigned int v167 = swift_getEnumCaseMultiPayload();
            uint64_t v168 = v212;
            if (v167 < 2)
            {
              (*(void (**)(char *, void, uint64_t))v225)(v212, v223, v151);
              uint64_t v241 = 1000;
LABEL_138:
              long long v152 = (uint64_t *)v230;
              goto LABEL_139;
            }
            if (v167 == 2)
            {
              long long v169 = *((_OWORD *)v221 + 5);
              long long v250 = *((_OWORD *)v221 + 4);
              long long v251 = v169;
              long long v170 = *((_OWORD *)v221 + 7);
              long long v252 = *((_OWORD *)v221 + 6);
              long long v253 = v170;
              long long v171 = *((_OWORD *)v221 + 1);
              long long v246 = *(_OWORD *)v221;
              long long v247 = v171;
              long long v172 = *((_OWORD *)v221 + 3);
              long long v248 = *((_OWORD *)v221 + 2);
              long long v249 = v172;
              uint64_t v173 = *((void *)v221 + 16);
              sub_1C0955B08((uint64_t)&v246);
              char v174 = *(unsigned char *)(*(void *)(v173
                                          + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                              + 208);
              swift_release();
              long long v175 = *(void (**)(char *, void, uint64_t))v225;
              if (v174)
              {
                v175(v168, v223, v151);
                long long v152 = (uint64_t *)v230;
                int v176 = (int)v217;
                goto LABEL_130;
              }
              int v176 = (int)v217;
              v175(v168, v217, v151);
            }
            else
            {
              int v176 = (int)v217;
              (*(void (**)(char *, void, uint64_t))v225)(v212, v217, v151);
              sub_1C0086F0C((uint64_t)v221, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
            }
            long long v152 = (uint64_t *)v230;
LABEL_130:
            int v177 = (*v216)(v168, v151);
            if (v177 == v176)
            {
              uint64_t v178 = 2000;
            }
            else
            {
              if (v177 != v223)
              {
                ((void (*)(char *, uint64_t))*v213)(v168, v151);
                uint64_t v241 = 0;
                goto LABEL_139;
              }
              uint64_t v178 = 1000;
            }
            uint64_t v241 = v178;
LABEL_139:
            sub_1C0086F0C(v236, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
            goto LABEL_140;
          }
          ((void (*)(uint64_t *, uint64_t))*v214)(v219, v15);
          uint64_t v241 = 0;
        }
        uint64_t v80 = v233;
        goto LABEL_138;
      }
      sub_1C0086F0C((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
    }
    (*(void (**)(uint64_t *, void, uint64_t))v228)(v219, v238, v15);
    goto LABEL_120;
  }
  if ((v76 & 0x8000000000000000) == 0)
  {
    uint64_t v78 = v76 * v241;
    if (a4 < v74 || v74 + v78 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v74)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v236 = a4 + v78;
    unint64_t v255 = a4 + v78;
    if (v78 >= 1 && a2 < (unint64_t)a3)
    {
      LODWORD(v240) = *MEMORY[0x1E4FAD570];
      uint64_t v231 = v16 + 104;
      LODWORD(v242) = *MEMORY[0x1E4FAD578];
      long long v237 = (uint64_t (**)(uint64_t *, uint64_t))(v16 + 88);
      uint64_t v221 = v16 + 8;
      int v226 = v16 + 96;
      LODWORD(v224) = *MEMORY[0x1E4FAD2B0];
      uint64_t v230 = (char *)(v211[0] + 104);
      LODWORD(v227) = *MEMORY[0x1E4FAD2A8];
      char v222 = (long long *)(v211[0] + 88);
      long long v220 = (uint64_t *)(v211[0] + 8);
      unsigned int v233 = a3;
      while (1)
      {
        sub_1C1318618(a2, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        sub_1C1318618(a4, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        sub_1C1318618((uint64_t)v72, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        if (swift_getEnumCaseMultiPayload() != 1) {
          break;
        }
        uint64_t v254 = *v66;
        swift_retain();
        FeedGroupDecoration.decorationItem.getter((uint64_t *)&v246);
        __swift_project_boxed_opaque_existential_1(&v246, *((uint64_t *)&v247 + 1));
        uint64_t v81 = v213;
        uint64_t v15 = v243;
        sub_1C151C6AC();
        int v82 = (*v237)(v81, v15);
        if (v82 == v240)
        {
          (*(void (**)(uint64_t *, uint64_t))v226)(v81, v15);
          uint64_t v83 = *v81;
          long long v84 = v234;
          long long v85 = (uint64_t *)v232;
        }
        else
        {
          long long v84 = v234;
          long long v85 = (uint64_t *)v232;
          if (v82 != v242) {
            (*(void (**)(uint64_t *, uint64_t))v221)(v81, v15);
          }
          uint64_t v83 = -100;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v246);
        swift_release_n();
LABEL_53:
        sub_1C1318618((uint64_t)v69, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v254 = *v85;
          swift_retain();
          FeedGroupDecoration.decorationItem.getter((uint64_t *)&v246);
          __swift_project_boxed_opaque_existential_1(&v246, *((uint64_t *)&v247 + 1));
          uint64_t v110 = v214;
          uint64_t v15 = v243;
          sub_1C151C6AC();
          int v111 = (*v237)(v110, v15);
          if (v111 == v240)
          {
            (*(void (**)(uint64_t *, uint64_t))v226)(v110, v15);
            uint64_t v112 = *v110;
          }
          else
          {
            if (v111 != v242) {
              (*(void (**)(uint64_t *, uint64_t))v221)(v110, v15);
            }
            uint64_t v112 = -100;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v246);
          swift_release_n();
          goto LABEL_85;
        }
        uint64_t v113 = (uint64_t)v85;
        uint64_t v114 = v238;
        sub_1C13183D4(v113, v238, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        sub_1C1318618(v114, v229, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        unsigned int v115 = swift_getEnumCaseMultiPayload();
        if (v115 < 2) {
          goto LABEL_67;
        }
        if (v115 != 2)
        {
          sub_1C0086F0C(v229, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
LABEL_67:
          (*(void (**)(char *, void, uint64_t))v231)(v218, v242, v15);
          goto LABEL_68;
        }
        long long v116 = *(_OWORD *)(v229 + 80);
        long long v250 = *(_OWORD *)(v229 + 64);
        long long v251 = v116;
        long long v117 = *(_OWORD *)(v229 + 112);
        long long v252 = *(_OWORD *)(v229 + 96);
        long long v253 = v117;
        long long v118 = *(_OWORD *)(v229 + 16);
        long long v246 = *(_OWORD *)v229;
        long long v247 = v118;
        long long v119 = *(_OWORD *)(v229 + 48);
        long long v248 = *(_OWORD *)(v229 + 32);
        long long v249 = v119;
        uint64_t v120 = *(void *)(v229 + 128);
        sub_1C0955B08((uint64_t)&v246);
        uint64_t v121 = *(void *)(v120 + 56);
        char v122 = *(unsigned char *)(v120 + 64);
        swift_release();
        uint64_t v123 = v242;
        if ((v122 & 1) == 0)
        {
          *(void *)long long v218 = v121;
          uint64_t v123 = v240;
        }
        uint64_t v124 = (uint64_t *)v218;
        uint64_t v15 = v243;
        (*(void (**)(char *, uint64_t, uint64_t))v231)(v218, v123, v243);
        int v125 = (*v237)(v124, v15);
        if (v125 == v240)
        {
          (*(void (**)(uint64_t *, uint64_t))v226)(v124, v15);
          uint64_t v112 = *v124;
          goto LABEL_84;
        }
        if (v125 != v242)
        {
          (*(void (**)(uint64_t *, uint64_t))v221)(v124, v15);
          goto LABEL_83;
        }
        long long v84 = v234;
LABEL_68:
        sub_1C1318618(v238, (uint64_t)v225, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        unsigned int v126 = swift_getEnumCaseMultiPayload();
        if (v126 >= 2)
        {
          if (v126 == 2)
          {
            long long v127 = v225[5];
            long long v250 = v225[4];
            long long v251 = v127;
            long long v128 = v225[7];
            long long v252 = v225[6];
            long long v253 = v128;
            long long v129 = v225[1];
            long long v246 = *v225;
            long long v247 = v129;
            long long v130 = v225[3];
            long long v248 = v225[2];
            long long v249 = v130;
            uint64_t v131 = *((void *)v225 + 16);
            sub_1C0955B08((uint64_t)&v246);
            char v132 = *(unsigned char *)(*(void *)(v131
                                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                            + 208);
            swift_release();
            long long v133 = *(void (**)(char *, void, uint64_t))v230;
            if (v132)
            {
              long long v84 = v234;
              uint64_t v135 = v239;
              v133(v234, v227, v239);
              int v134 = (int)v224;
            }
            else
            {
              long long v84 = v234;
              int v134 = (int)v224;
              uint64_t v135 = v239;
              v133(v234, v224, v239);
            }
          }
          else
          {
            int v134 = (int)v224;
            uint64_t v135 = v239;
            (*(void (**)(char *, void, uint64_t))v230)(v84, v224, v239);
            sub_1C0086F0C((uint64_t)v225, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
          }
          int v136 = (*(uint64_t (**)(char *, uint64_t))v222)(v84, v135);
          if (v136 == v134)
          {
            uint64_t v112 = 2000;
            goto LABEL_84;
          }
          if (v136 != v227)
          {
            ((void (*)(char *, uint64_t))*v220)(v84, v239);
LABEL_83:
            uint64_t v112 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          (*(void (**)(char *, void, uint64_t))v230)(v84, v227, v239);
        }
        uint64_t v112 = 1000;
LABEL_84:
        sub_1C0086F0C(v238, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
LABEL_85:
        sub_1C0086F0C((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        sub_1C0086F0C((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for ZIndexable);
        unint64_t v137 = v257;
        if (v83 >= v112)
        {
          unint64_t v140 = v256 + v241;
          uint64_t v139 = v233;
          if (v257 < v256 || v257 >= v140)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v257 != v256)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v256 = v140;
          unint64_t v138 = a2;
        }
        else
        {
          unint64_t v138 = a2 + v241;
          uint64_t v139 = v233;
          if (v257 < a2 || v257 >= v138)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v257 == a2)
          {
            unint64_t v137 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v257 = v137 + v241;
        a4 = v256;
        if (v256 < v236)
        {
          a2 = v138;
          if (v138 < (unint64_t)v139) {
            continue;
          }
        }
        goto LABEL_187;
      }
      uint64_t v86 = v235;
      sub_1C13183D4((uint64_t)v66, v235, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C1318618(v86, (uint64_t)v228, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      unsigned int v87 = swift_getEnumCaseMultiPayload();
      long long v84 = v234;
      uint64_t v88 = (char *)v216;
      if (v87 >= 2)
      {
        if (v87 == 2)
        {
          long long v89 = *((_OWORD *)v228 + 5);
          long long v250 = *((_OWORD *)v228 + 4);
          long long v251 = v89;
          long long v90 = *((_OWORD *)v228 + 7);
          long long v252 = *((_OWORD *)v228 + 6);
          long long v253 = v90;
          long long v91 = *((_OWORD *)v228 + 1);
          long long v246 = *(_OWORD *)v228;
          long long v247 = v91;
          long long v92 = *((_OWORD *)v228 + 3);
          long long v248 = *((_OWORD *)v228 + 2);
          long long v249 = v92;
          uint64_t v93 = *((void *)v228 + 16);
          sub_1C0955B08((uint64_t)&v246);
          uint64_t v94 = *(void *)(v93 + 56);
          char v95 = *(unsigned char *)(v93 + 64);
          swift_release();
          uint64_t v96 = v242;
          if ((v95 & 1) == 0)
          {
            *long long v217 = v94;
            uint64_t v96 = v240;
          }
          long long v97 = v217;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))v231)(v217, v96, v15);
          int v98 = (*v237)(v97, v15);
          if (v98 == v240)
          {
            (*(void (**)(uint64_t *, uint64_t))v226)(v97, v15);
            uint64_t v83 = *v97;
            long long v84 = v234;
            goto LABEL_51;
          }
          long long v84 = v234;
          if (v98 != v242)
          {
            (*(void (**)(uint64_t *, uint64_t))v221)(v97, v15);
            uint64_t v83 = 0;
            goto LABEL_51;
          }
          uint64_t v88 = (char *)v216;
LABEL_36:
          sub_1C1318618(v235, (uint64_t)v223, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          unsigned int v99 = swift_getEnumCaseMultiPayload();
          if (v99 >= 2)
          {
            if (v99 == 2)
            {
              long long v100 = v223[5];
              long long v250 = v223[4];
              long long v251 = v100;
              long long v101 = v223[7];
              long long v252 = v223[6];
              long long v253 = v101;
              long long v102 = v223[1];
              long long v246 = *v223;
              long long v247 = v102;
              long long v103 = v223[3];
              long long v248 = v223[2];
              long long v249 = v103;
              uint64_t v104 = *((void *)v223 + 16);
              sub_1C0955B08((uint64_t)&v246);
              char v105 = *(unsigned char *)(*(void *)(v104
                                          + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                              + 208);
              swift_release();
              uint64_t v106 = *(void (**)(char *, void, uint64_t))v230;
              if (v105)
              {
                uint64_t v108 = v239;
                v106(v88, v227, v239);
                long long v84 = v234;
                int v107 = (int)v224;
              }
              else
              {
                int v107 = (int)v224;
                uint64_t v108 = v239;
                v106(v88, v224, v239);
                long long v84 = v234;
              }
            }
            else
            {
              int v107 = (int)v224;
              uint64_t v108 = v239;
              (*(void (**)(char *, void, uint64_t))v230)(v88, v224, v239);
              sub_1C0086F0C((uint64_t)v223, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
            }
            int v109 = (*(uint64_t (**)(char *, uint64_t))v222)(v88, v108);
            if (v109 != v107)
            {
              long long v85 = (uint64_t *)v232;
              if (v109 == v227)
              {
                uint64_t v83 = 1000;
              }
              else
              {
                ((void (*)(char *, uint64_t))*v220)(v88, v239);
                uint64_t v83 = 0;
              }
              goto LABEL_52;
            }
            uint64_t v83 = 2000;
          }
          else
          {
            (*(void (**)(char *, void, uint64_t))v230)(v88, v227, v239);
            uint64_t v83 = 1000;
          }
LABEL_51:
          long long v85 = (uint64_t *)v232;
LABEL_52:
          sub_1C0086F0C(v235, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          goto LABEL_53;
        }
        sub_1C0086F0C((uint64_t)v228, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
      }
      (*(void (**)(uint64_t *, void, uint64_t))v231)(v217, v242, v15);
      goto LABEL_36;
    }
    goto LABEL_187;
  }
LABEL_191:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C1316E0C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v5 = sub_1C151AE4C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a3 & 0x101) != 0) {
    double v9 = 0.5;
  }
  else {
    double v9 = *(double *)&a2;
  }
  sub_1BFDB81EC();
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocBox();
  uint64_t v14 = (uint64_t *)(v13 + *(int *)(v11 + 48));
  sub_1C151AE3C();
  uint64_t v15 = swift_allocObject();
  *(double *)(v15 + 16) = v9;
  *uint64_t v14 = v15;
  uint64_t v16 = *(void (**)(uint64_t *, void, uint64_t))(v6 + 104);
  v16(v14, *MEMORY[0x1E4FAC338], v5);
  *uint64_t v8 = v12;
  v16(v8, *MEMORY[0x1E4FAC350], v5);
  return sub_1C151AFAC();
}

void sub_1C1316F74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getObjectType();
  uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v8, sel_addSubview_, a1);
  objc_msgSend(v8, sel_contentSize);
  double v10 = v9;
  objc_msgSend(a1, sel_frame);
  double MaxX = CGRectGetMaxX(v33);
  if (v10 <= MaxX) {
    double v10 = MaxX;
  }
  objc_msgSend(v8, sel_contentSize);
  double v13 = v12;
  objc_msgSend(a1, sel_frame);
  double MaxY = CGRectGetMaxY(v34);
  if (v13 > MaxY) {
    double v15 = v13;
  }
  else {
    double v15 = MaxY;
  }
  objc_msgSend(v8, sel_setContentSize_, v10, v15);
  if (qword_1EA1944F0 != -1) {
    swift_once();
  }
  sub_1C13185BC(&qword_1EA1AE308, v16, (void (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory);
  sub_1C1516FBC();
  if (v32 == 1)
  {
    id v17 = objc_msgSend(a1, sel_layer);
    id v18 = objc_msgSend(self, sel_labelColor);
    id v19 = objc_msgSend(a1, sel_traitCollection);
    id v20 = objc_msgSend(v18, sel_resolvedColorWithTraitCollection_, v19);

    id v21 = objc_msgSend(v20, sel_CGColor);
    objc_msgSend(v17, sel_setBorderColor_, v21);

    id v22 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v22, sel_setBorderWidth_, 1.0);
  }
  uint64_t v23 = (void *)(a5 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_colorPaletteProvider);
  uint64_t v24 = *(void *)(a5 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_colorPaletteProvider + 24);
  uint64_t v25 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t))(v25 + 8))(&v32, v24, v25);

  sub_1C151A44C();
  if (qword_1EA1944F8 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  if (v32 == 1)
  {
    id v26 = objc_msgSend(a1, sel_subviews);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    unint64_t v27 = sub_1C151EBCC();

    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v28)
      {
LABEL_15:
        if (v28 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v28; ++i)
        {
          if ((v27 & 0xC000000000000001) != 0) {
            id v30 = (id)MEMORY[0x1C18C7CB0](i, v27);
          }
          else {
            id v30 = *(id *)(v27 + 8 * i + 32);
          }
          uint64_t v31 = v30;
          sub_1C131050C(v30, a1);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1C1317380(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v3, sel_addSubview_, a1);
  objc_msgSend(v3, sel_contentSize);
  double v5 = v4;
  objc_msgSend(a1, sel_frame);
  double MaxX = CGRectGetMaxX(v27);
  if (v5 <= MaxX) {
    double v5 = MaxX;
  }
  objc_msgSend(v3, sel_contentSize);
  double v8 = v7;
  objc_msgSend(a1, sel_frame);
  double MaxY = CGRectGetMaxY(v28);
  if (v8 > MaxY) {
    double v10 = v8;
  }
  else {
    double v10 = MaxY;
  }
  objc_msgSend(v3, sel_setContentSize_, v5, v10);
  if (qword_1EA1944F0 != -1) {
    swift_once();
  }
  type metadata accessor for DebugGroupLayoutViewFactory();
  sub_1C13185BC(&qword_1EA1AE308, v11, (void (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory);
  sub_1C1516FBC();
  if (v26 == 1)
  {
    id v12 = objc_msgSend(a1, sel_layer);
    id v13 = objc_msgSend(self, sel_labelColor);
    id v14 = objc_msgSend(a1, sel_traitCollection);
    id v15 = objc_msgSend(v13, sel_resolvedColorWithTraitCollection_, v14);

    id v16 = objc_msgSend(v15, sel_CGColor);
    objc_msgSend(v12, sel_setBorderColor_, v16);

    id v17 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v17, sel_setBorderWidth_, 1.0);
  }
  id v18 = objc_msgSend(self, sel_clearColor);
  sub_1C151A44C();
  if (qword_1EA1944F8 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  if (v25 == 1)
  {
    id v19 = objc_msgSend(a1, sel_subviews);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    unint64_t v20 = sub_1C151EBCC();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
LABEL_15:
        if (v21 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v21; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v23 = (id)MEMORY[0x1C18C7CB0](i, v20);
          }
          else {
            id v23 = *(id *)(v20 + 8 * i + 32);
          }
          uint64_t v24 = v23;
          sub_1C131050C(v23, a1);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1C1317754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = a11;
  id v17 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  objc_msgSend(v17, sel_addSubview_, a1);
  objc_msgSend(v17, sel_contentSize);
  double v19 = v18;
  objc_msgSend(a1, sel_frame);
  double MaxX = CGRectGetMaxX(v50);
  if (v19 <= MaxX) {
    double v19 = MaxX;
  }
  objc_msgSend(v17, sel_contentSize);
  double v22 = v21;
  objc_msgSend(a1, sel_frame);
  double MaxY = CGRectGetMaxY(v51);
  if (v22 > MaxY) {
    double v24 = v22;
  }
  else {
    double v24 = MaxY;
  }
  objc_msgSend(v17, sel_setContentSize_, v19, v24);
  if (qword_1EA1944F0 != -1) {
    swift_once();
  }
  type metadata accessor for DebugGroupLayoutViewFactory();
  sub_1C13185BC(&qword_1EA1AE308, v25, (void (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory);
  sub_1C1516FBC();
  if (LOBYTE(v49[0]) == 1)
  {
    id v45 = objc_msgSend(a1, sel_layer);
    uint64_t v46 = a8;
    id v26 = objc_msgSend(self, sel_labelColor);
    uint64_t v27 = a7;
    id v28 = objc_msgSend(a1, sel_traitCollection);
    id v29 = objc_msgSend(v26, sel_resolvedColorWithTraitCollection_, v28);

    a7 = v27;
    id v30 = objc_msgSend(v29, sel_CGColor);

    uint64_t v16 = a11;
    objc_msgSend(v45, sel_setBorderColor_, v30);

    a8 = v46;
    id v31 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v31, sel_setBorderWidth_, 1.0);
  }
  uint64_t v32 = *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_formatLayoutViewRenderer + 8);
  uint64_t ObjectType = swift_getObjectType();
  long long v34 = a5[5];
  v49[4] = a5[4];
  v49[5] = v34;
  long long v35 = a5[7];
  v49[6] = a5[6];
  v49[7] = v35;
  long long v36 = a5[1];
  v49[0] = *a5;
  v49[1] = v36;
  long long v37 = a5[3];
  v49[2] = a5[2];
  v49[3] = v37;
  uint64_t v38 = *(void *)(a6 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
  memset(v48, 0, sizeof(v48));
  (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v32 + 88))(v49, v38, a7, a8, v48, a9, a10, v16, &type metadata for FormatSupplementary, &type metadata for FormatLayoutContext, &protocol witness table for FormatLayoutContext, ObjectType, v32);
  if (qword_1EA1944F8 != -1) {
    swift_once();
  }
  sub_1C1516FBC();
  if (LOBYTE(v49[0]) == 1)
  {
    id v39 = objc_msgSend(a1, sel_subviews);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    unint64_t v40 = sub_1C151EBCC();

    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v41)
      {
LABEL_15:
        if (v41 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v41; ++i)
        {
          if ((v40 & 0xC000000000000001) != 0) {
            id v43 = (id)MEMORY[0x1C18C7CB0](i, v40);
          }
          else {
            id v43 = *(id *)(v40 + 8 * i + 32);
          }
          uint64_t v44 = v43;
          sub_1C131050C(v43, a1);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1C1317C00(uint64_t *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v34 = sub_1C151C5DC();
  uint64_t v12 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  id v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1C151677C();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x1F4188790](v15);
  double v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = *a1;
  uint64_t v20 = v37[0];
  v17.n128_f64[0] = a3;
  v21.n128_f64[0] = a4;
  v22.n128_f64[0] = a5;
  v23.n128_f64[0] = a6;
  id v24 = sub_1C0BFCF0C(v17, v21, v22, v23);
  uint64_t v25 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed20DebugGroupLayoutView_contentView);
  id v35 = v24;
  objc_msgSend(v25, sel_addSubview_);
  sub_1C1519E6C();
  uint64_t v36 = v20;
  FeedGroupDecoration.decorationItem.getter(v37);
  __swift_project_boxed_opaque_existential_1(v37, v38);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  sub_1C151C6BC();
  MEMORY[0x1C18BE280](0, 0);
  id v26 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)sub_1C151670C();
  id v28 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_layoutAttributesForDecorationViewOfKind_withIndexPath_, v26, v27);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  objc_msgSend(v28, sel_setFrame_, a3, a4, a5, a6);
  uint64_t v36 = v20;
  FeedGroupDecoration.decorationItem.getter(v37);
  sub_1C1519E4C();
  uint64_t v36 = v20;
  uint64_t v29 = v34;
  swift_retain();
  id v30 = v28;
  FeedGroupDecoration.decorationItem.getter(v37);
  __swift_project_boxed_opaque_existential_1(v37, v38);
  sub_1C151C6AC();
  int v31 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v14, v29);
  if (v31 == *MEMORY[0x1E4FAD570])
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v14, v29);
    uint64_t v32 = *v14;
  }
  else
  {
    if (v31 != *MEMORY[0x1E4FAD578]) {
      (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v29);
    }
    uint64_t v32 = -100;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  swift_release();
  objc_msgSend(v30, sel_setZIndex_, v32);

  id v33 = v35;
  objc_msgSend(v35, sel_applyLayoutAttributes_, v30);
}

uint64_t sub_1C1317FC8()
{
  swift_getObjectType();
  if (qword_1EA194540 != -1) {
    swift_once();
  }
  sub_1C13185BC(&qword_1EA1AE308, v0, (void (*)(uint64_t))type metadata accessor for DebugGroupLayoutViewFactory);
  sub_1C1516FBC();
  if (v8 != 1) {
    return MEMORY[0x1E4FBC860];
  }
  type metadata accessor for DebugItemDragInteraction();
  if (!swift_dynamicCastClass()) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1BFC39268(0, &qword_1EB880DE0);
  uint64_t v1 = (void *)sub_1C151FB9C();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D78]), sel_initWithObject_, v1);

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1710]), sel_initWithItemProvider_, v2);
  sub_1BFE4F908(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C15320E0;
  *(void *)(v4 + 32) = v3;
  uint64_t v7 = v4;
  sub_1C151EBEC();
  uint64_t v5 = v7;

  return v5;
}

char *sub_1C1318190(void *a1)
{
  uint64_t v2 = sub_1C151B1FC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugItemDragInteraction();
  uint64_t v6 = (char *)swift_dynamicCastClass();
  if (v6)
  {
    id v7 = a1;
    id v8 = objc_msgSend(v7, sel_view);
    if (v8)
    {
      double v9 = v8;
      id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1720]), sel_init);
      uint64_t v18 = *(void *)&v6[OBJC_IVAR____TtC8NewsFeedP33_ADE4A126F6FB4BE95458B6110D529A9F24DebugItemDragInteraction_feedItemLayoutAttributes];
      uint64_t v11 = v18;
      id v12 = v10;
      uint64_t v13 = (void *)FeedItemLayoutAttributes.dragBackgroundColor.getter();
      objc_msgSend(v12, sel_setBackgroundColor_, v13);

      uint64_t v18 = v11;
      id v14 = v12;
      FeedItemLayoutAttributes.dragPreviewClipping.getter((uint64_t)v5);
      objc_msgSend(v9, sel_bounds);
      uint64_t v15 = (void *)sub_1C151B1EC();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v14, sel_setVisiblePath_, v15);

      uint64_t v6 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D40]), sel_initWithView_parameters_, v9, v14);
    }
    else
    {

      return 0;
    }
  }
  return v6;
}

uint64_t type metadata accessor for ZIndexable()
{
  uint64_t result = qword_1EA1AE330;
  if (!qword_1EA1AE330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C13183D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C131843C()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = (_OWORD *)v0[4];
  uint64_t v2 = (char *)v0[5];
  long long v4 = v3[13];
  v13[12] = v3[12];
  v13[13] = v4;
  long long v5 = v3[15];
  v13[14] = v3[14];
  v13[15] = v5;
  long long v6 = v3[9];
  v13[8] = v3[8];
  v13[9] = v6;
  long long v7 = v3[11];
  v13[10] = v3[10];
  v13[11] = v7;
  long long v8 = v3[5];
  void v13[4] = v3[4];
  v13[5] = v8;
  long long v9 = v3[7];
  v13[6] = v3[6];
  v13[7] = v9;
  long long v10 = v3[1];
  v13[0] = *v3;
  v13[1] = v10;
  long long v11 = v3[3];
  _OWORD v13[2] = v3[2];
  v13[3] = v11;
  return sub_1C0C2EFA8(v1, (double *)v13, v2);
}

uint64_t sub_1C13184BC(uint64_t a1)
{
  return a1;
}

void sub_1C1318524()
{
  if (!qword_1EA1AE320)
  {
    type metadata accessor for FormatLayoutView();
    sub_1C13185BC(&qword_1EB875310, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutView);
    unint64_t v0 = type metadata accessor for DebugItemLayoutView();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE320);
    }
  }
}

uint64_t sub_1C13185BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1318604()
{
  return sub_1C1310310(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9]);
}

uint64_t sub_1C1318618(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1318680()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  long long v4 = (const void *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_imageHeadlineViewRenderer + 8);
  uint64_t ObjectType = swift_getObjectType();
  memcpy(v8, v4, sizeof(v8));
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v8, v3, ObjectType, v5);
}

uint64_t sub_1C131871C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (const void *)v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_imageHeadlineViewRenderer + 8);
  uint64_t ObjectType = swift_getObjectType();
  memcpy(v10, v3, sizeof(v10));
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40))(v2, v10, v4, v6, v5, ObjectType, v7);
}

uint64_t sub_1C13187CC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = (_OWORD *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverChannelViewRenderer + 8);
  uint64_t ObjectType = swift_getObjectType();
  long long v7 = v4[9];
  v14[8] = v4[8];
  v14[9] = v7;
  long long v8 = v4[11];
  v14[10] = v4[10];
  v14[11] = v8;
  long long v9 = v4[5];
  v14[4] = v4[4];
  v14[5] = v9;
  long long v10 = v4[7];
  void v14[6] = v4[6];
  v14[7] = v10;
  long long v11 = v4[1];
  v14[0] = *v4;
  v14[1] = v11;
  long long v12 = v4[3];
  v14[2] = v4[2];
  v14[3] = v12;
  return (*(uint64_t (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, v14, v3, ObjectType, v5);
}

uint64_t sub_1C131887C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = (const void *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugGroupLayoutViewFactory_coverIssueViewRenderer + 8);
  uint64_t ObjectType = swift_getObjectType();
  memcpy(v8, v4, sizeof(v8));
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, v8, v3, ObjectType, v5);
}

uint64_t sub_1C1318918()
{
  return swift_deallocObject();
}

uint64_t sub_1C1318928()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

id *sub_1C1318960(id *a1)
{
  return a1;
}

void *sub_1C131899C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v7 = type metadata accessor for FeedItemSupplementaryAttributes();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      uint64_t v16 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      uint64_t v18 = (void *)a2[4];
      uint64_t v17 = (void *)a2[5];
      a1[4] = v18;
      a1[5] = v17;
      uint64_t v67 = (void *)a2[6];
      uint64_t v68 = (void *)a2[7];
      a1[6] = v67;
      a1[7] = v68;
      long long v69 = (void *)a2[8];
      a1[8] = v69;
      uint64_t v19 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      uint64_t v70 = (void *)((char *)a1 + v19);
      uint64_t v20 = (char *)a2 + v19;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      id v21 = v16;
      id v22 = v18;
      id v23 = v17;
      id v24 = v67;
      id v25 = v68;
      id v26 = v69;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v27 = *((void *)v20 + 1);
        *uint64_t v70 = *(void *)v20;
        v70[1] = v27;
        unint64_t v28 = *((void *)v20 + 2);
        swift_bridgeObjectRetain();
        if (v28 >= 0xB)
        {
          uint64_t v33 = *((void *)v20 + 3);
          uint64_t v34 = *((void *)v20 + 4);
          v70[2] = v28;
          v70[3] = v33;
          uint64_t v35 = *((void *)v20 + 5);
          uint64_t v36 = *((void *)v20 + 6);
          v70[4] = v34;
          v70[5] = v35;
          v70[6] = v36;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v29 = *((_OWORD *)v20 + 2);
          *((_OWORD *)v70 + 1) = *((_OWORD *)v20 + 1);
          *((_OWORD *)v70 + 2) = v29;
          v70[6] = *((void *)v20 + 6);
        }
        uint64_t v37 = *((void *)v20 + 8);
        v70[7] = *((void *)v20 + 7);
        v70[8] = v37;
        v70[9] = *((void *)v20 + 9);
        sub_1C0AEFBB4();
        uint64_t v39 = *(int *)(v38 + 80);
        unint64_t v40 = (char *)v70 + v39;
        uint64_t v41 = &v20[v39];
        *unint64_t v40 = v20[v39];
        uint64_t v42 = (uint64_t)v70 + v39 + 8;
        long long v43 = *((_OWORD *)v41 + 2);
        *((_OWORD *)v40 + 2) = v43;
        uint64_t v44 = v43;
        id v45 = **(void (***)(uint64_t, char *, uint64_t))(v43 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45(v42, v41 + 8, v44);
        uint64_t v46 = *((void *)v41 + 7);
        *((void *)v40 + 6) = *((void *)v41 + 6);
        *((void *)v40 + 7) = v46;
        uint64_t v47 = *((void *)v41 + 9);
        *((void *)v40 + 8) = *((void *)v41 + 8);
        *((void *)v40 + 9) = v47;
        *((void *)v40 + 10) = *((void *)v41 + 10);
        v40[88] = v41[88];
        *((void *)v40 + 12) = *((void *)v41 + 12);
        uint64_t v48 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v49 = v48[13];
        uint64_t v65 = &v41[v49];
        uint64_t v66 = &v40[v49];
        uint64_t v50 = sub_1C151787C();
        CGRect v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51(v66, v65, v50);
        *(void *)&v40[v48[14]] = *(void *)&v41[v48[14]];
        *(void *)&v40[v48[15]] = *(void *)&v41[v48[15]];
        v40[v48[16]] = v41[v48[16]];
        *(void *)&v40[v48[17]] = *(void *)&v41[v48[17]];
        *(void *)&v40[v48[18]] = *(void *)&v41[v48[18]];
        *(void *)&v40[v48[19]] = *(void *)&v41[v48[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v30 = *(void *)v20;
        id v31 = *(id *)v20;
        uint64_t v32 = *((void *)v20 + 1);
        *uint64_t v70 = v30;
        v70[1] = v32;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C0AEF7B8();
      uint64_t v53 = *(int *)(v52 + 48);
      uint64_t v54 = (_OWORD *)((char *)a1 + v53);
      uint64_t v55 = (_OWORD *)((char *)a2 + v53);
      long long v56 = v55[13];
      v54[12] = v55[12];
      v54[13] = v56;
      long long v57 = v55[15];
      v54[14] = v55[14];
      v54[15] = v57;
      long long v58 = v55[9];
      v54[8] = v55[8];
      v54[9] = v58;
      long long v59 = v55[11];
      v54[10] = v55[10];
      v54[11] = v59;
      long long v60 = v55[5];
      v54[4] = v55[4];
      v54[5] = v60;
      long long v61 = v55[7];
      v54[6] = v55[6];
      v54[7] = v61;
      long long v62 = v55[1];
      *uint64_t v54 = *v55;
      v54[1] = v62;
      long long v63 = v55[3];
      v54[2] = v55[2];
      v54[3] = v63;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      long long v12 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v12;
      long long v13 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v13;
      uint64_t v14 = a2[15];
      a1[14] = a2[14];
      a1[15] = v14;
      a1[16] = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_17;
  }
  uint64_t v6 = *a2;
  *a1 = *a2;
  a1 = (void *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void sub_1C1318EB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1318F14(id *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_13:
    return swift_release();
  }
  type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 3)
  {
    if (result != 2) {
      return result;
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() != 1)
  {

    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  if (*((void *)v3 + 2) >= 0xBuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0AEFBB4();
  int v5 = &v3[*(int *)(v4 + 80)];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v5 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = &v5[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
  uint64_t v7 = sub_1C151787C();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C1319148(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      long long v13 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      uint64_t v15 = (void *)a2[4];
      uint64_t v14 = (void *)a2[5];
      a1[4] = v15;
      a1[5] = v14;
      uint64_t v16 = (void *)a2[6];
      uint64_t v66 = (void *)a2[7];
      a1[6] = v16;
      a1[7] = v66;
      uint64_t v67 = (void *)a2[8];
      a1[8] = v67;
      uint64_t v17 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      uint64_t v65 = (void *)((char *)a1 + v17);
      uint64_t v18 = (char *)a2 + v17;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      id v19 = v13;
      id v20 = v15;
      id v21 = v14;
      id v22 = v16;
      id v23 = v66;
      id v24 = v67;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v25 = *((void *)v18 + 1);
        *uint64_t v65 = *(void *)v18;
        v65[1] = v25;
        unint64_t v26 = *((void *)v18 + 2);
        swift_bridgeObjectRetain();
        if (v26 >= 0xB)
        {
          uint64_t v31 = *((void *)v18 + 3);
          uint64_t v32 = *((void *)v18 + 4);
          v65[2] = v26;
          v65[3] = v31;
          uint64_t v33 = *((void *)v18 + 5);
          uint64_t v34 = *((void *)v18 + 6);
          v65[4] = v32;
          v65[5] = v33;
          v65[6] = v34;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v27 = *((_OWORD *)v18 + 2);
          *((_OWORD *)v65 + 1) = *((_OWORD *)v18 + 1);
          *((_OWORD *)v65 + 2) = v27;
          v65[6] = *((void *)v18 + 6);
        }
        uint64_t v35 = *((void *)v18 + 8);
        v65[7] = *((void *)v18 + 7);
        v65[8] = v35;
        v65[9] = *((void *)v18 + 9);
        sub_1C0AEFBB4();
        uint64_t v37 = *(int *)(v36 + 80);
        uint64_t v38 = (char *)v65 + v37;
        uint64_t v39 = &v18[v37];
        *uint64_t v38 = v18[v37];
        uint64_t v40 = (uint64_t)v65 + v37 + 8;
        long long v41 = *((_OWORD *)v39 + 2);
        *((_OWORD *)v38 + 2) = v41;
        uint64_t v42 = v41;
        long long v43 = **(void (***)(uint64_t, char *, uint64_t))(v41 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43(v40, v39 + 8, v42);
        uint64_t v44 = *((void *)v39 + 7);
        *((void *)v38 + 6) = *((void *)v39 + 6);
        *((void *)v38 + 7) = v44;
        uint64_t v45 = *((void *)v39 + 9);
        *((void *)v38 + 8) = *((void *)v39 + 8);
        *((void *)v38 + 9) = v45;
        *((void *)v38 + 10) = *((void *)v39 + 10);
        v38[88] = v39[88];
        *((void *)v38 + 12) = *((void *)v39 + 12);
        uint64_t v46 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v47 = v46[13];
        long long v63 = &v39[v47];
        uint64_t v64 = &v38[v47];
        uint64_t v48 = sub_1C151787C();
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v49(v64, v63, v48);
        *(void *)&v38[v46[14]] = *(void *)&v39[v46[14]];
        *(void *)&v38[v46[15]] = *(void *)&v39[v46[15]];
        v38[v46[16]] = v39[v46[16]];
        *(void *)&v38[v46[17]] = *(void *)&v39[v46[17]];
        *(void *)&v38[v46[18]] = *(void *)&v39[v46[18]];
        *(void *)&v38[v46[19]] = *(void *)&v39[v46[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v28 = *(void *)v18;
        id v29 = *(id *)v18;
        uint64_t v30 = *((void *)v18 + 1);
        *uint64_t v65 = v28;
        v65[1] = v30;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C0AEF7B8();
      uint64_t v51 = *(int *)(v50 + 48);
      uint64_t v52 = (_OWORD *)((char *)a1 + v51);
      uint64_t v53 = (_OWORD *)((char *)a2 + v51);
      long long v54 = v53[13];
      v52[12] = v53[12];
      v52[13] = v54;
      long long v55 = v53[15];
      v52[14] = v53[14];
      v52[15] = v55;
      long long v56 = v53[9];
      v52[8] = v53[8];
      v52[9] = v56;
      long long v57 = v53[11];
      v52[10] = v53[10];
      v52[11] = v57;
      long long v58 = v53[5];
      v52[4] = v53[4];
      v52[5] = v58;
      long long v59 = v53[7];
      v52[6] = v53[6];
      v52[7] = v59;
      long long v60 = v53[1];
      *uint64_t v52 = *v53;
      v52[1] = v60;
      long long v61 = v53[3];
      v52[2] = v53[2];
      v52[3] = v61;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        goto LABEL_15;
      }
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      long long v9 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v9;
      long long v10 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v10;
      uint64_t v11 = a2[15];
      a1[14] = a2[14];
      a1[15] = v11;
      a1[16] = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  *a1 = *a2;
  swift_retain();
LABEL_15:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C1319604(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0086F0C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v8 = (void *)a2[3];
      a1[3] = v8;
      long long v9 = (void *)a2[4];
      a1[4] = v9;
      long long v10 = (void *)a2[5];
      a1[5] = v10;
      long long v54 = (void *)a2[6];
      a1[6] = v54;
      long long v55 = (void *)a2[7];
      a1[7] = v55;
      long long v56 = (void *)a2[8];
      a1[8] = v56;
      uint64_t v11 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      long long v57 = (void *)((char *)a1 + v11);
      uint64_t v12 = (char *)a2 + v11;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      id v13 = v8;
      id v14 = v9;
      id v15 = v10;
      id v16 = v54;
      id v17 = v55;
      id v18 = v56;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *long long v57 = *(void *)v12;
        v57[1] = *((void *)v12 + 1);
        unint64_t v19 = *((void *)v12 + 2);
        swift_bridgeObjectRetain();
        if (v19 >= 0xB)
        {
          _OWORD v57[2] = v19;
          v57[3] = *((void *)v12 + 3);
          v57[4] = *((void *)v12 + 4);
          v57[5] = *((void *)v12 + 5);
          v57[6] = *((void *)v12 + 6);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v20 = *((_OWORD *)v12 + 1);
          long long v21 = *((_OWORD *)v12 + 2);
          v57[6] = *((void *)v12 + 6);
          *((_OWORD *)v57 + 1) = v20;
          *((_OWORD *)v57 + 2) = v21;
        }
        v57[7] = *((void *)v12 + 7);
        v57[8] = *((void *)v12 + 8);
        v57[9] = *((void *)v12 + 9);
        sub_1C0AEFBB4();
        uint64_t v25 = *(int *)(v24 + 80);
        unint64_t v26 = (char *)v57 + v25;
        long long v27 = &v12[v25];
        *unint64_t v26 = v12[v25];
        uint64_t v28 = (uint64_t)v57 + v25 + 8;
        uint64_t v29 = *((void *)v27 + 4);
        *((void *)v26 + 4) = v29;
        *((void *)v26 + 5) = *((void *)v27 + 5);
        uint64_t v30 = **(void (***)(uint64_t, char *, uint64_t))(v29 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30(v28, v27 + 8, v29);
        *((void *)v26 + 6) = *((void *)v27 + 6);
        *((void *)v26 + 7) = *((void *)v27 + 7);
        *((void *)v26 + 8) = *((void *)v27 + 8);
        *((void *)v26 + 9) = *((void *)v27 + 9);
        *((void *)v26 + 10) = *((void *)v27 + 10);
        v26[88] = v27[88];
        *((void *)v26 + 12) = *((void *)v27 + 12);
        uint64_t v31 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v32 = v31[13];
        uint64_t v52 = &v27[v32];
        uint64_t v53 = &v26[v32];
        uint64_t v33 = sub_1C151787C();
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v53, v52, v33);
        *(void *)&v26[v31[14]] = *(void *)&v27[v31[14]];
        *(void *)&v26[v31[15]] = *(void *)&v27[v31[15]];
        v26[v31[16]] = v27[v31[16]];
        *(void *)&v26[v31[17]] = *(void *)&v27[v31[17]];
        *(void *)&v26[v31[18]] = *(void *)&v27[v31[18]];
        *(void *)&v26[v31[19]] = *(void *)&v27[v31[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v22 = *(void *)v12;
        id v23 = *(id *)v12;
        *long long v57 = v22;
        v57[1] = *((void *)v12 + 1);
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C0AEF7B8();
      uint64_t v36 = *(int *)(v35 + 48);
      uint64_t v37 = (_OWORD *)((char *)a1 + v36);
      uint64_t v38 = (long long *)((char *)a2 + v36);
      long long v39 = v38[12];
      long long v40 = v38[13];
      long long v41 = v38[15];
      v37[14] = v38[14];
      v37[15] = v41;
      v37[12] = v39;
      v37[13] = v40;
      long long v42 = v38[8];
      long long v43 = v38[9];
      long long v44 = v38[11];
      v37[10] = v38[10];
      v37[11] = v44;
      v37[8] = v42;
      v37[9] = v43;
      long long v45 = v38[4];
      long long v46 = v38[5];
      long long v47 = v38[7];
      v37[6] = v38[6];
      v37[7] = v47;
      v37[4] = v45;
      v37[5] = v46;
      long long v48 = *v38;
      long long v49 = v38[1];
      long long v50 = v38[3];
      void v37[2] = v38[2];
      uint64_t v37[3] = v50;
      *uint64_t v37 = v48;
      v37[1] = v49;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        goto LABEL_16;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      long long v6 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v6;
      long long v7 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v7;
      a1[14] = a2[14];
      a1[15] = a2[15];
      a1[16] = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  return a1;
}

_OWORD *sub_1C1319B60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for FeedItemSupplementaryAttributes();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      long long v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v9 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      long long v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for InternalErrorViewModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v13 = *((_OWORD *)v11 + 1);
        *(_OWORD *)long long v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v13;
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        uint64_t v14 = *((void *)v11 + 7);
        *((void *)v10 + 6) = *((void *)v11 + 6);
        *((void *)v10 + 7) = v14;
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        sub_1C0AEFBB4();
        uint64_t v16 = *(int *)(v15 + 80);
        id v17 = &v10[v16];
        id v18 = &v11[v16];
        char *v17 = v11[v16];
        *((void *)v17 + 5) = *(void *)&v11[v16 + 40];
        *(_OWORD *)(v17 + 24) = *(_OWORD *)&v11[v16 + 24];
        *(_OWORD *)(v17 + 8) = *(_OWORD *)&v11[v16 + 8];
        long long v19 = *(_OWORD *)&v11[v16 + 64];
        *((_OWORD *)v17 + 3) = *(_OWORD *)&v11[v16 + 48];
        *((_OWORD *)v17 + 4) = v19;
        *((void *)v17 + 10) = *(void *)&v11[v16 + 80];
        v17[88] = v11[v16 + 88];
        *((void *)v17 + 12) = *(void *)&v11[v16 + 96];
        long long v20 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v21 = v20[13];
        uint64_t v37 = &v17[v21];
        uint64_t v22 = &v18[v21];
        uint64_t v23 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v37, v22, v23);
        *(void *)&v17[v20[14]] = *(void *)&v18[v20[14]];
        *(void *)&v17[v20[15]] = *(void *)&v18[v20[15]];
        v17[v20[16]] = v18[v20[16]];
        *(void *)&v17[v20[17]] = *(void *)&v18[v20[17]];
        *(void *)&v17[v20[18]] = *(void *)&v18[v20[18]];
        *(void *)&v17[v20[19]] = *(void *)&v18[v20[19]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      sub_1C0AEF7B8();
      uint64_t v25 = *(int *)(v24 + 48);
      unint64_t v26 = (_OWORD *)((char *)a1 + v25);
      long long v27 = (_OWORD *)((char *)a2 + v25);
      long long v28 = v27[13];
      v26[12] = v27[12];
      v26[13] = v28;
      long long v29 = v27[15];
      v26[14] = v27[14];
      v26[15] = v29;
      long long v30 = v27[9];
      v26[8] = v27[8];
      v26[9] = v30;
      long long v31 = v27[11];
      v26[10] = v27[10];
      v26[11] = v31;
      long long v32 = v27[5];
      v26[4] = v27[4];
      v26[5] = v32;
      long long v33 = v27[7];
      v26[6] = v27[6];
      v26[7] = v33;
      long long v34 = v27[1];
      *unint64_t v26 = *v27;
      v26[1] = v34;
      long long v35 = v27[3];
      _OWORD v26[2] = v27[2];
      void v26[3] = v35;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1C1319E34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0086F0C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for FeedItemSupplementaryAttributes();
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        long long v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        long long v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        *((void *)a1 + 8) = *((void *)a2 + 8);
        uint64_t v9 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
        long long v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for InternalErrorViewModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          long long v13 = *((_OWORD *)v11 + 1);
          *(_OWORD *)long long v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v13;
          *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
          uint64_t v14 = *((void *)v11 + 7);
          *((void *)v10 + 6) = *((void *)v11 + 6);
          *((void *)v10 + 7) = v14;
          *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
          sub_1C0AEFBB4();
          uint64_t v16 = *(int *)(v15 + 80);
          id v17 = &v10[v16];
          id v18 = &v11[v16];
          char *v17 = v11[v16];
          *((void *)v17 + 5) = *(void *)&v11[v16 + 40];
          *(_OWORD *)(v17 + 24) = *(_OWORD *)&v11[v16 + 24];
          *(_OWORD *)(v17 + 8) = *(_OWORD *)&v11[v16 + 8];
          long long v19 = *(_OWORD *)&v11[v16 + 64];
          *((_OWORD *)v17 + 3) = *(_OWORD *)&v11[v16 + 48];
          *((_OWORD *)v17 + 4) = v19;
          *((void *)v17 + 10) = *(void *)&v11[v16 + 80];
          v17[88] = v11[v16 + 88];
          *((void *)v17 + 12) = *(void *)&v11[v16 + 96];
          long long v20 = (int *)type metadata accessor for GroupLayoutBindingContext();
          uint64_t v21 = v20[13];
          uint64_t v37 = &v17[v21];
          uint64_t v22 = &v18[v21];
          uint64_t v23 = sub_1C151787C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v37, v22, v23);
          *(void *)&v17[v20[14]] = *(void *)&v18[v20[14]];
          *(void *)&v17[v20[15]] = *(void *)&v18[v20[15]];
          v17[v20[16]] = v18[v20[16]];
          *(void *)&v17[v20[17]] = *(void *)&v18[v20[17]];
          *(void *)&v17[v20[18]] = *(void *)&v18[v20[18]];
          *(void *)&v17[v20[19]] = *(void *)&v18[v20[19]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        sub_1C0AEF7B8();
        uint64_t v25 = *(int *)(v24 + 48);
        unint64_t v26 = (_OWORD *)((char *)a1 + v25);
        long long v27 = (_OWORD *)((char *)a2 + v25);
        long long v28 = v27[13];
        v26[12] = v27[12];
        v26[13] = v28;
        long long v29 = v27[15];
        v26[14] = v27[14];
        v26[15] = v29;
        long long v30 = v27[9];
        v26[8] = v27[8];
        v26[9] = v30;
        long long v31 = v27[11];
        v26[10] = v27[10];
        v26[11] = v31;
        long long v32 = v27[5];
        v26[4] = v27[4];
        v26[5] = v32;
        long long v33 = v27[7];
        v26[6] = v27[6];
        v26[7] = v33;
        long long v34 = v27[1];
        *unint64_t v26 = *v27;
        v26[1] = v34;
        long long v35 = v27[3];
        _OWORD v26[2] = v27[2];
        void v26[3] = v35;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C131A12C()
{
  uint64_t result = type metadata accessor for FeedItemSupplementaryAttributes();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_1C131A1BC()
{
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v5 = v0[2];
  uint64_t v4 = v0[3];
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v6 = sub_1BFF493E4(v17, v3);
  swift_bridgeObjectRelease();
  id result = (id)swift_release();
  if (!v1)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    double v8 = sub_1BFF493E4(v17, v2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    double v9 = sub_1BFF493E4(v17, v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    double v10 = sub_1BFF493E4(v17, v4);
    swift_bridgeObjectRelease();
    swift_release();
    id v12 = objc_allocWithZone(MEMORY[0x1E4F39C10]);
    float v11 = v6;
    *(float *)&double v13 = v11;
    *(float *)&double v8 = v8;
    LODWORD(v14) = LODWORD(v8);
    *(float *)&double v9 = v9;
    LODWORD(v15) = LODWORD(v9);
    *(float *)&double v10 = v10;
    LODWORD(v16) = LODWORD(v10);
    return objc_msgSend(v12, sel_initWithControlPoints__::, v13, v14, v15, v16);
  }
  return result;
}

uint64_t FormatMediaTimingFunctionControlPoints.point1.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTimingFunctionControlPoints.point2.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTimingFunctionControlPoints.point3.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatMediaTimingFunctionControlPoints.point4.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C131A38C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatMediaTimingFunctionControlPoints.init(from:)(a1, a2);
}

uint64_t sub_1C131A3A4(void *a1)
{
  return FormatMediaTimingFunctionControlPoints.encode(to:)(a1);
}

unint64_t sub_1C131A3BC(uint64_t a1)
{
  unint64_t result = sub_1C131A3E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C131A3E4()
{
  unint64_t result = qword_1EA1AE340;
  if (!qword_1EA1AE340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE340);
  }
  return result;
}

unint64_t sub_1C131A438(void *a1)
{
  a1[1] = sub_1C086B440();
  a1[2] = sub_1C0903874();
  unint64_t result = sub_1C131A470();
  a1[3] = result;
  return result;
}

unint64_t sub_1C131A470()
{
  unint64_t result = qword_1EA1AE348;
  if (!qword_1EA1AE348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE348);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFunctionControlPoints()
{
  return &type metadata for FormatMediaTimingFunctionControlPoints;
}

uint64_t sub_1C131A4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6);
  double v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2)
  {
    uint64_t result = sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v17);
    if (!v3)
    {
      v15[4] = v18;
      v15[5] = v19;
      v15[6] = v20;
      v16[0] = v21[0];
      *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v21 + 9);
      v15[0] = v17[0];
      v15[1] = v17[1];
      _OWORD v15[2] = v17[2];
      v15[3] = v17[3];
      double v10 = *(void **)&v17[0];
      char v11 = v18 | 0x10;
      *(void *)a2 = *(void *)&v17[0];
      *(unsigned char *)(a2 + 8) = v11;
      id v12 = v10;
      return sub_1C01880A4((uint64_t)v15);
    }
  }
  else
  {
    uint64_t result = sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    if (!v3)
    {
      double v13 = &v8[*(int *)(v6 + 40)];
      BOOL v14 = v13[*(int *)(type metadata accessor for FeedHeadline.State(0) + 32)] == 0;
      *(void *)a2 = *((void *)v8 + 5);
      *(unsigned char *)(a2 + 8) = v14;
      swift_unknownObjectRetain();
      return sub_1BFF2F7F4((uint64_t)v8);
    }
  }
  return result;
}

uint64_t static FormatActivityItemsBinding.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if (*a1)
  {
    if ((*a2 & 1) == 0) {
      return 0;
    }
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1C131A674(uint64_t a1)
{
  unint64_t result = sub_1C131A69C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C131A69C()
{
  unint64_t result = qword_1EA1AE350;
  if (!qword_1EA1AE350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE350);
  }
  return result;
}

unint64_t sub_1C131A6F0(void *a1)
{
  a1[1] = sub_1C0870F78();
  a1[2] = sub_1C0901178();
  unint64_t result = sub_1C131A728();
  a1[3] = result;
  return result;
}

unint64_t sub_1C131A728()
{
  unint64_t result = qword_1EA1AE358;
  if (!qword_1EA1AE358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE358);
  }
  return result;
}

uint64_t sub_1C131A77C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatActivityItemsBinding.init(from:)(a1, a2);
}

uint64_t sub_1C131A794(void *a1)
{
  return FormatActivityItemsBinding.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatActivityItemsBinding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C131A878);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = -(char)a2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatActivityItemsBinding()
{
  return &type metadata for FormatActivityItemsBinding;
}

uint64_t initializeWithCopy for DebugInspectionCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionCohort(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithTake for DebugInspectionCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectionCohort()
{
  return &type metadata for DebugInspectionCohort;
}

uint64_t sub_1C131A9E8(void *a1)
{
  uint64_t v3 = v1;
  sub_1C131AF54(0, &qword_1EA1AE370, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C131AF00();
  sub_1C1520F0C();
  long long v10 = v3[1];
  long long v13 = *v3;
  long long v14 = v10;
  v12[15] = 0;
  sub_1C0BB2524();
  sub_1C152080C();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1C152076C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C131AB78()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 6775156;
  }
}

uint64_t sub_1C131ABA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C131B1C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C131ABD0(uint64_t a1)
{
  unint64_t v2 = sub_1C131AF00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C131AC0C(uint64_t a1)
{
  unint64_t v2 = sub_1C131AF00();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C131AC48@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C131ACA4(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1C131AC8C(void *a1)
{
  return sub_1C131A9E8(a1);
}

uint64_t sub_1C131ACA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C131AF54(0, &qword_1EA1AE360, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C131AF00();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v23 = 0;
  sub_1C0BB1EE0();
  sub_1C15206EC();
  uint64_t v10 = v20;
  uint64_t v11 = v22;
  uint64_t v17 = v21;
  uint64_t v18 = v19;
  LOBYTE(v19) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C152062C();
  long long v13 = v9;
  char v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = v15 & 1;
  return result;
}

unint64_t sub_1C131AF00()
{
  unint64_t result = qword_1EA1AE368;
  if (!qword_1EA1AE368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE368);
  }
  return result;
}

void sub_1C131AF54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C131AF00();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionCohort.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionCohort.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C131B084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionCohort.CodingKeys()
{
  return &type metadata for DebugInspectionCohort.CodingKeys;
}

unint64_t sub_1C131B0C0()
{
  unint64_t result = qword_1EA1AE378;
  if (!qword_1EA1AE378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE378);
  }
  return result;
}

unint64_t sub_1C131B118()
{
  unint64_t result = qword_1EA1AE380;
  if (!qword_1EA1AE380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE380);
  }
  return result;
}

unint64_t sub_1C131B170()
{
  unint64_t result = qword_1EA1AE388;
  if (!qword_1EA1AE388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE388);
  }
  return result;
}

uint64_t sub_1C131B1C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C131B2A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C0993E1C(*(void *)(v0 + 56));
  return v0;
}

uint64_t sub_1C131B2D8()
{
  sub_1C131B2A0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C131B30C()
{
  uint64_t v1 = *v0;
  sub_1C15200FC();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = swift_bridgeObjectRetain();
  MEMORY[0x1C18C6830](v3, v2);
  swift_bridgeObjectRelease();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0;
}

uint64_t sub_1C131B4B0()
{
  return sub_1C131B30C();
}

uint64_t sub_1C131B4D4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F6318(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v29;
    do
    {
      sub_1BFC66384(v4, (uint64_t)v26);
      uint64_t v5 = v27;
      uint64_t v6 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6318(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v29;
      }
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C05F6318(v8 > 1, v9 + 1, 1);
        uint64_t v2 = v29;
      }
      *(void *)(v2 + 16) = v9 + 1;
      *(void *)(v2 + 8 * v9 + 32) = v7;
      v4 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void *)(v2 + 16);
  if (!v10)
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
LABEL_33:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v13 = *(void *)(v2 + 8 * v11 + 32);
    uint64_t v14 = *(void *)(v13 + 16);
    int64_t v15 = v12[2];
    int64_t v16 = v15 + v14;
    if (__OFADD__(v15, v14)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v16 <= v12[3] >> 1)
    {
      if (*(void *)(v13 + 16)) {
        goto LABEL_22;
      }
    }
    else
    {
      if (v15 <= v16) {
        int64_t v18 = v15 + v14;
      }
      else {
        int64_t v18 = v15;
      }
      uint64_t v12 = sub_1C0EDFB20(isUniquelyReferenced_nonNull_native, v18, 1, v12);
      if (*(void *)(v13 + 16))
      {
LABEL_22:
        uint64_t v19 = v12[2];
        if ((v12[3] >> 1) - v19 < v14) {
          goto LABEL_36;
        }
        unint64_t v20 = (unint64_t)&v12[5 * v19 + 4];
        if (v13 + 32 < v20 + 40 * v14 && v20 < v13 + 32 + 40 * v14) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v22 = v12[2];
          BOOL v23 = __OFADD__(v22, v14);
          uint64_t v24 = v22 + v14;
          if (v23) {
            goto LABEL_37;
          }
          _OWORD v12[2] = v24;
        }
        goto LABEL_12;
      }
    }
    if (v14) {
      goto LABEL_35;
    }
LABEL_12:
    ++v11;
    swift_bridgeObjectRelease();
    if (v10 == v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C131B794()
{
  return sub_1C131B4D4(*v0);
}

void *sub_1C131B79C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v3 = a1 + 32;
  do
  {
    sub_1C131B8EC(v3, (uint64_t)v10);
    sub_1C0186BD0((uint64_t)v10, (uint64_t)&v7);
    if (v8)
    {
      sub_1BFC773DC(&v7, (uint64_t)v9);
      sub_1BFC773DC(v9, (uint64_t)&v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_1C0EDFB34(0, v2[2] + 1, 1, v2);
      }
      unint64_t v5 = v2[2];
      unint64_t v4 = v2[3];
      if (v5 >= v4 >> 1) {
        uint64_t v2 = sub_1C0EDFB34((void *)(v4 > 1), v5 + 1, 1, v2);
      }
      v2[2] = v5 + 1;
      sub_1BFC773DC(&v7, (uint64_t)&v2[5 * v5 + 4]);
    }
    else
    {
      sub_1BFE4D118((uint64_t)&v7, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
    }
    v3 += 40;
    --v1;
  }
  while (v1);
  return v2;
}

uint64_t sub_1C131B8EC(uint64_t a1, uint64_t a2)
{
  sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1C131B968(void *a1, uint64_t a2)
{
  uint64_t v2 = &unk_1C1529000;
  uint64_t v3 = &unk_1C157D000;
  if (a2)
  {
    sub_1BFF5D9E8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    sub_1C0181BEC(0);
    unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
    unint64_t v8 = v7 + v6;
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v12 = (void *)(v8 + *(int *)(v11 + 24));
    *uint64_t v12 = v9;
    v12[1] = v10;
    uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
    *(_OWORD *)unint64_t v8 = xmmword_1C157D0F0;
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = 0;
    unint64_t v14 = v8 + *(int *)(v11 + 28);
    *(void *)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    *(unsigned char *)(v14 + 16) = -1;
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C09BCFA4(0x6567616B636150, 0xE700000000000000, 0, 0, v7, v80);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    int64_t v15 = sub_1C0EDFB20(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      int64_t v15 = sub_1C0EDFB20((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    _OWORD v15[2] = v17 + 1;
    int64_t v18 = &v15[5 * v17];
    long long v19 = v80[1];
    *((_OWORD *)v18 + 2) = v80[0];
    *((_OWORD *)v18 + 3) = v19;
    v18[8] = v81;
    swift_release();
    unint64_t v20 = a1;
    uint64_t v2 = (_OWORD *)&unk_1C1529000;
  }
  else
  {
    unint64_t v20 = a1;
    int64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  *(void *)&v82[0] = v20;
  id v21 = v20;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A5FA0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v84, (uint64_t)&v87);
    sub_1BFF5D9E8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    sub_1C0181BEC(0);
    uint64_t v23 = *(unsigned __int8 *)(*(void *)(v22 - 8) + 80);
    uint64_t v24 = (v23 + 32) & ~v23;
    uint64_t v25 = swift_allocObject();
    long long v78 = v2[174];
    *(_OWORD *)(v25 + 16) = v78;
    uint64_t v26 = v25 + v24;
    uint64_t v27 = *((void *)&v88 + 1);
    uint64_t v28 = v89;
    __swift_project_boxed_opaque_existential_1(&v87, *((uint64_t *)&v88 + 1));
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
    uint64_t v31 = v30;
    uint64_t v32 = type metadata accessor for FormatInspectionItem(0);
    long long v33 = (uint64_t *)(v25 + v24 + *(int *)(v32 + 24));
    *long long v33 = v29;
    v33[1] = v31;
    uint64_t v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v77 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
    v77(v33, 0, 1, v34);
    *(_OWORD *)uint64_t v26 = xmmword_1C157D0F0;
    *(void *)(v26 + 16) = 0;
    *(void *)(v26 + 24) = 0;
    uint64_t v35 = v25 + v24 + *(int *)(v32 + 28);
    *(void *)uint64_t v35 = 0;
    *(void *)(v35 + 8) = 0;
    *(unsigned char *)(v35 + 16) = -1;
    uint64_t v36 = (void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    uint64_t v76 = *v36;
    (*v36)(v25 + v24, 0, 1, v32);
    sub_1C09BCFA4(0x7470697263736544, 0xEB000000006E6F69, 0, 0, v25, v82);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v15 = sub_1C0EDFB20(0, v15[2] + 1, 1, v15);
    }
    unint64_t v38 = v15[2];
    unint64_t v37 = v15[3];
    if (v38 >= v37 >> 1) {
      int64_t v15 = sub_1C0EDFB20((void *)(v37 > 1), v38 + 1, 1, v15);
    }
    _OWORD v15[2] = v38 + 1;
    long long v39 = &v15[5 * v38];
    long long v40 = v82[0];
    long long v41 = v82[1];
    v39[8] = v83;
    *((_OWORD *)v39 + 2) = v40;
    *((_OWORD *)v39 + 3) = v41;
    uint64_t v42 = *((void *)&v88 + 1);
    uint64_t v43 = v89;
    __swift_project_boxed_opaque_existential_1(&v87, *((uint64_t *)&v88 + 1));
    uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 24))(v42, v43);
    if (v45)
    {
      uint64_t v46 = v44;
      uint64_t v47 = v45;
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = v78;
      uint64_t v49 = v48 + v24;
      long long v50 = (uint64_t *)(v48 + v24 + *(int *)(v32 + 24));
      *long long v50 = v46;
      v50[1] = v47;
      swift_storeEnumTagMultiPayload();
      v77(v50, 0, 1, v34);
      *(_OWORD *)uint64_t v49 = xmmword_1C157D0F0;
      *(void *)(v49 + 16) = 0;
      *(void *)(v49 + 24) = 0;
      uint64_t v51 = v49 + *(int *)(v32 + 28);
      *(void *)uint64_t v51 = 0;
      *(void *)(v51 + 8) = 0;
      *(unsigned char *)(v51 + 16) = -1;
      v76(v49, 0, 1, v32);
      sub_1C09BCFA4(1953392968, 0xE400000000000000, 0, 0, v48, &v84);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      unint64_t v53 = v15[2];
      unint64_t v52 = v15[3];
      if (v53 >= v52 >> 1) {
        int64_t v15 = sub_1C0EDFB20((void *)(v52 > 1), v53 + 1, 1, v15);
      }
      uint64_t v3 = (_OWORD *)&unk_1C157D000;
      unint64_t v20 = a1;
      uint64_t v2 = (_OWORD *)&unk_1C1529000;
      _OWORD v15[2] = v53 + 1;
      long long v54 = &v15[5 * v53];
      long long v55 = v84;
      long long v56 = v85;
      v54[8] = v86;
      *((_OWORD *)v54 + 2) = v55;
      *((_OWORD *)v54 + 3) = v56;
    }
    else
    {
      uint64_t v3 = &unk_1C157D000;
      unint64_t v20 = a1;
      uint64_t v2 = &unk_1C1529000;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  }
  else
  {
    uint64_t v86 = 0;
    long long v84 = 0u;
    long long v85 = 0u;
    sub_1BFE4D118((uint64_t)&v84, (unint64_t *)&qword_1EA1B0940, (unint64_t *)&unk_1EA1A5FA0);
  }
  sub_1BFF5D9E8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  unint64_t v58 = (*(unsigned __int8 *)(*(void *)(v57 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v57 - 8) + 80);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v2[174];
  unint64_t v60 = v59 + v58;
  uint64_t v61 = sub_1C01A9804(v20);
  uint64_t v63 = v62;
  uint64_t v64 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v65 = (uint64_t *)(v60 + *(int *)(v64 + 24));
  *uint64_t v65 = v61;
  v65[1] = v63;
  uint64_t v66 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
  *(_OWORD *)unint64_t v60 = v3[15];
  *(void *)(v60 + 16) = 0;
  *(void *)(v60 + 24) = 0;
  unint64_t v67 = v60 + *(int *)(v64 + 28);
  *(void *)unint64_t v67 = 0;
  *(void *)(v67 + 8) = 0;
  *(unsigned char *)(v67 + 16) = -1;
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v60, 0, 1, v64);
  sub_1C09BCFA4(1886221636, 0xE400000000000000, 0, 0, v59, &v87);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v15 = sub_1C0EDFB20(0, v15[2] + 1, 1, v15);
  }
  unint64_t v69 = v15[2];
  unint64_t v68 = v15[3];
  if (v69 >= v68 >> 1) {
    int64_t v15 = sub_1C0EDFB20((void *)(v68 > 1), v69 + 1, 1, v15);
  }
  _OWORD v15[2] = v69 + 1;
  uint64_t v70 = &v15[5 * v69];
  long long v71 = v87;
  long long v72 = v88;
  v70[8] = v89;
  *((_OWORD *)v70 + 2) = v71;
  *((_OWORD *)v70 + 3) = v72;
  uint64_t v73 = sub_1C0234BB4((uint64_t)v15);
  swift_bridgeObjectRelease();
  unint64_t v74 = sub_1C131B79C(v73);
  swift_bridgeObjectRelease();
  return v74;
}

ValueMetadata *type metadata accessor for FormatInspection()
{
  return &type metadata for FormatInspection;
}

uint64_t sub_1C131C37C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C131C9D0(0, &qword_1EB86B810, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C131C734();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v25 = v14;
  uint64_t v22 = v13;
  uint64_t v23 = v10;
  char v28 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v21 = sub_1C152060C();
  uint64_t v16 = v15;
  sub_1C01CBAF4();
  char v27 = 3;
  sub_1C01CBC04((unint64_t *)&unk_1EB86B2F0, (void (*)(void))sub_1C01CBB4C);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = v26;
  swift_bridgeObjectRetain();
  uint64_t v19 = v16;
  uint64_t v20 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v18;
  *(unsigned char *)(a2 + 56) = 5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C131C734()
{
  unint64_t result = qword_1EB86AC30;
  if (!qword_1EB86AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AC30);
  }
  return result;
}

uint64_t sub_1C131C788(void *a1)
{
  sub_1C131C9D0(0, &qword_1EA1AE390, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v8;
  uint64_t v9 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v9;
  uint64_t v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C131C734();
  sub_1C1520F0C();
  char v24 = 0;
  uint64_t v10 = v19;
  sub_1C15207CC();
  if (!v10)
  {
    uint64_t v11 = v14;
    char v23 = 1;
    sub_1C15207CC();
    char v22 = 2;
    sub_1C152074C();
    uint64_t v20 = v11;
    char v21 = 3;
    sub_1C01CBAF4();
    sub_1C01CBC04(&qword_1EA197EC0, (void (*)(void))sub_1C01CBC70);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1C131C9D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C131C734();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseLineScoreItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C131CB00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseLineScoreItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseLineScoreItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseLineScoreItem()
{
  return &type metadata for SportsDataVisualizationResponseLineScoreItem;
}

uint64_t sub_1C131CB48()
{
  uint64_t result = 0x6E6F6E6143636D75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6449746E657665;
      break;
    case 2:
      uint64_t result = 0x615465756761656CLL;
      break;
    case 3:
      uint64_t result = 0x53617461446C7275;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C131CBF8(uint64_t a1)
{
  unint64_t v2 = sub_1C131C734();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C131CC34(uint64_t a1)
{
  unint64_t v2 = sub_1C131C734();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C131CC70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C131C37C(a1, a2);
}

uint64_t sub_1C131CC88(void *a1)
{
  return sub_1C131C788(a1);
}

unint64_t sub_1C131CCA4()
{
  unint64_t result = qword_1EA1AE398;
  if (!qword_1EA1AE398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE398);
  }
  return result;
}

unint64_t sub_1C131CCFC()
{
  unint64_t result = qword_1EB86AC40;
  if (!qword_1EB86AC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AC40);
  }
  return result;
}

unint64_t sub_1C131CD54()
{
  unint64_t result = qword_1EB86AC38;
  if (!qword_1EB86AC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AC38);
  }
  return result;
}

uint64_t sub_1C131CDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v129 = a2;
  uint64_t v127 = a1;
  sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v126 = (uint64_t)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v125 = (uint64_t)&v113 - v5;
  sub_1BFF014AC(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v114 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v115 = (uint64_t)&v113 - v7;
  uint64_t v8 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v113 = (uint64_t)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v128 = (uint64_t)&v113 - v11;
  sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v124 = (uint64_t)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v123 = (uint64_t)&v113 - v15;
  sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v122 = (uint64_t)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v121 = (uint64_t)&v113 - v19;
  sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v120 = (uint64_t)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v119 = (uint64_t)&v113 - v23;
  sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v118 = (uint64_t)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v117 = (uint64_t)&v113 - v27;
  sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v116 = (uint64_t)&v113 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v113 - v31;
  sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v113 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  unint64_t v38 = (char *)&v113 - v37;
  sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v39 - 8);
  long long v41 = (char *)&v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v113 - v43;
  sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v45 - 8);
  uint64_t v47 = (char *)&v113 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v48);
  long long v50 = (char *)&v113 - v49;
  uint64_t v51 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1F4188790](v51);
  unint64_t v53 = (char *)&v113 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE82BD0(v130, (uint64_t)v53, type metadata accessor for FormatCompilerProperty);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C131E69C((uint64_t)v53, (uint64_t)v44, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
      sub_1C132B9D0((uint64_t)v44, (uint64_t)v41);
      sub_1C131F31C(7, (uint64_t)v41, v129);
      sub_1C131E720((uint64_t)v44, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_16;
    case 2u:
      sub_1BFE30960((uint64_t)v53, (uint64_t)v38, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82C58);
      sub_1C132B7A4((uint64_t)v38, (uint64_t)v35, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82C58);
      sub_1C131F528(1, (uint64_t)v35, v129);
      sub_1C131E840((uint64_t)v38, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82C58);
      goto LABEL_16;
    case 3u:
      uint64_t v54 = v128;
      sub_1C131E77C((uint64_t)v53, v128);
      long long v55 = (uint64_t *)(v127 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
      swift_beginAccess();
      uint64_t v56 = v55[1];
      if (!*(void *)(v56 + 16)) {
        goto LABEL_19;
      }
      uint64_t v57 = *v55;
      uint64_t v58 = *(void *)(v54 + 16);
      uint64_t v59 = *(void *)(v54 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v60 = sub_1BFEF2D8C(v58, v59);
      if ((v61 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        type metadata accessor for FormatLayoutError();
        sub_1BFF87924((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v104 = v103;
        sub_1C0D52074();
        uint64_t v106 = (uint64_t)v104 + *(int *)(v105 + 48);
        uint64_t v107 = *(void *)(v54 + 24);
        *uint64_t v104 = *(void *)(v54 + 16);
        v104[1] = v107;
        sub_1BFE82BD0(v130, v106, type metadata accessor for FormatCompilerProperty);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        return sub_1C131E7E0(v54, type metadata accessor for FormatCompilerEnumProperty);
      }
      uint64_t v62 = v115;
      sub_1BFFD59B8(*(void *)(v56 + 56) + *(void *)(v114 + 72) * v60, v115);
      uint64_t v119 = *(void *)v62;
      uint64_t v121 = v57;
      uint64_t v63 = *(void *)(v62 + 8);
      uint64_t v64 = *(void *)(v62 + 24);
      uint64_t v65 = *(void *)(v62 + 32);
      uint64_t v66 = *(void *)(v62 + 40);
      uint64_t v127 = *(void *)(v62 + 48);
      uint64_t v67 = *(void *)(v62 + 56);
      uint64_t v68 = *(void *)(v62 + 64);
      uint64_t v69 = *(void *)(v62 + 72);
      LODWORD(v120) = *(unsigned __int8 *)(v62 + 80);
      uint64_t v122 = v64;
      swift_bridgeObjectRetain();
      uint64_t v123 = v63;
      swift_bridgeObjectRetain();
      uint64_t v70 = v65;
      uint64_t v71 = v65;
      uint64_t v72 = v66;
      uint64_t v73 = v66;
      uint64_t v74 = v127;
      uint64_t v125 = v68;
      uint64_t v126 = v67;
      uint64_t v75 = v68;
      uint64_t v124 = v69;
      unsigned int v76 = v120;
      sub_1BFF1DB64(v71, v72, v127, v67, v75, v69, v120);
      uint64_t v77 = v62;
      uint64_t v78 = v73;
      sub_1C131E720(v77, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned __int8 v79 = v76;
      if (v76 > 0x3F)
      {
        type metadata accessor for FormatLayoutError();
        sub_1BFF87924((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        int v109 = v108;
        sub_1C0D52074();
        uint64_t v111 = (uint64_t)v109 + *(int *)(v110 + 48);
        uint64_t v112 = *(void *)(v128 + 24);
        *int v109 = *(void *)(v128 + 16);
        v109[1] = v112;
        sub_1BFE82BD0(v130, v111, type metadata accessor for FormatCompilerProperty);
        swift_storeEnumTagMultiPayload();
        uint64_t v54 = v128;
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEC28BC(v70, v78, v74, v126, v125, v124, v76);
        return sub_1C131E7E0(v54, type metadata accessor for FormatCompilerEnumProperty);
      }
      uint64_t v80 = v113;
      sub_1BFE82BD0(v54, v113, type metadata accessor for FormatCompilerEnumProperty);
      uint64_t v118 = v78;
      uint64_t v81 = v78;
      uint64_t v82 = v74;
      uint64_t v83 = v125;
      uint64_t v84 = v126;
      uint64_t v85 = v124;
      unsigned __int8 v86 = v79;
      sub_1BFF1DB64(v70, v81, v82, v126, v125, v124, v79);
      uint64_t v87 = v123;
      swift_bridgeObjectRetain();
      sub_1C0BE7D04(v80, v119, v87, v70, v129);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(v70, v118, v127, v84, v83, v85, v86);
      sub_1C131E7E0(v54, type metadata accessor for FormatCompilerEnumProperty);
LABEL_16:
      type metadata accessor for FormatPropertyDefinition(0);
      return swift_storeEnumTagMultiPayload();
    case 4u:
      uint64_t v88 = MEMORY[0x1E4FBC958];
      sub_1C131E69C((uint64_t)v53, (uint64_t)v32, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v89 = v116;
      sub_1C132B934((uint64_t)v32, v116);
      sub_1C131F748(3, v89, v129);
      sub_1C131E720((uint64_t)v32, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, v88, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_16;
    case 5u:
      uint64_t v90 = v117;
      sub_1C087DA18((uint64_t)v53, v117);
      uint64_t v91 = v118;
      sub_1C132B8A4(v90, v118);
      sub_1C131F94C(4, v91, v129);
      sub_1C087DE28(v90);
      goto LABEL_16;
    case 6u:
      uint64_t v92 = v119;
      sub_1BFE83E80((uint64_t)v53, v119);
      uint64_t v93 = v120;
      sub_1C132B814(v92, v120);
      sub_1C131FB28(5, v93, v129);
      sub_1BFE86F20(v92);
      goto LABEL_16;
    case 7u:
      uint64_t v94 = v121;
      sub_1BFE30960((uint64_t)v53, v121, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82A10);
      uint64_t v95 = v122;
      sub_1C132B7A4(v94, v122, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82A10);
      sub_1C131FD04(6, v95, v129);
      sub_1C131E840(v94, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82A10);
      goto LABEL_16;
    case 8u:
      uint64_t v96 = &qword_1EB88DEC0;
      long long v97 = &type metadata for FormatFont;
      int v98 = sub_1C0084C58;
      uint64_t v99 = v123;
      sub_1C131E69C((uint64_t)v53, v123, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont);
      uint64_t v100 = v124;
      sub_1C132B708(v99, v124);
      sub_1C131FF24(10, v100, v129);
      goto LABEL_15;
    case 9u:
      uint64_t v96 = (unint64_t *)&unk_1EB88DEB0;
      long long v97 = &type metadata for FormatAsyncImageContent;
      int v98 = sub_1C0036630;
      uint64_t v99 = v125;
      sub_1C131E69C((uint64_t)v53, v125, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent);
      uint64_t v101 = v126;
      sub_1C132B66C(v99, v126);
      sub_1C1320130(8, v101, v129);
LABEL_15:
      sub_1C131E720(v99, v96, (uint64_t (*)(void))v98, (uint64_t)v97, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_16;
    default:
      sub_1BFE86E90((uint64_t)v53, (uint64_t)v50);
      sub_1C132BA6C((uint64_t)v50, (uint64_t)v47);
      sub_1C131F148(0, (uint64_t)v47, v129);
      sub_1BFE87264((uint64_t)v50);
      goto LABEL_16;
  }
}

uint64_t sub_1C131DD48()
{
  sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v59 = (char *)&v48 - v2;
  sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v58 = (char *)&v48 - v4;
  sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v57 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v56 = (uint64_t)&v48 - v6;
  sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v55 = (uint64_t)&v48 - v8;
  sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v54 = (uint64_t)&v48 - v10;
  sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v53 = (uint64_t)&v48 - v12;
  uint64_t v13 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v52 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v51 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v50 = (uint64_t)&v48 - v16;
  sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v49 = (uint64_t)&v48 - v18;
  sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v48 = (uint64_t)&v48 - v20;
  uint64_t v60 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1F4188790](v60);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v0;
  uint64_t v23 = sub_1C131E8A0();
  if (*(void *)(v23 + 16)
    && (sub_1C1520DBC(),
        sub_1C151E77C(),
        uint64_t v24 = sub_1C1520E0C(),
        uint64_t v25 = -1 << *(unsigned char *)(v23 + 32),
        unint64_t v26 = v24 & ~v25,
        ((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) != 0))
  {
    uint64_t v27 = ~v25;
    while (!*(unsigned char *)(*(void *)(v23 + 48) + v26) || *(unsigned char *)(*(void *)(v23 + 48) + v26) == 1)
    {
      char v28 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_12;
      }
      unint64_t v26 = (v26 + 1) & v27;
      if (((*(void *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BFE82BD0(v61, (uint64_t)v22, type metadata accessor for FormatCompilerProperty);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v31 = &type metadata for FormatColor;
        uint64_t v32 = v49;
        sub_1C131E69C((uint64_t)v22, v49, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
        uint64_t v30 = *(unsigned __int8 *)(v32 + 64);
        uint64_t v33 = v32;
        uint64_t v34 = &qword_1EB88DED0;
        uint64_t v35 = sub_1C003F2E8;
        goto LABEL_25;
      case 2u:
        uint64_t v36 = &qword_1EB88DE90;
        uint64_t v37 = v50;
        sub_1BFE30960((uint64_t)v22, v50, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82C58);
        uint64_t v30 = *(unsigned __int8 *)(v37 + *(int *)(v51 + 52));
        unint64_t v38 = sub_1BFE82C58;
        goto LABEL_20;
      case 3u:
        uint64_t v39 = v52;
        sub_1C131E77C((uint64_t)v22, v52);
        uint64_t v30 = *(unsigned __int8 *)(v39 + 88);
        sub_1C131E7E0(v39, type metadata accessor for FormatCompilerEnumProperty);
        return v30;
      case 4u:
        uint64_t v40 = &qword_1EB88DEA0;
        uint64_t v31 = (ValueMetadata *)MEMORY[0x1E4FBC958];
        long long v41 = sub_1C0092008;
        uint64_t v42 = v53;
        sub_1C131E69C((uint64_t)v22, v53, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
        uint64_t v30 = *(unsigned __int8 *)(v42 + 65);
        goto LABEL_24;
      case 5u:
        uint64_t v43 = v54;
        sub_1C087DA18((uint64_t)v22, v54);
        uint64_t v30 = *(unsigned __int8 *)(v43 + 65);
        sub_1C087DE28(v43);
        return v30;
      case 6u:
        uint64_t v44 = v55;
        sub_1BFE83E80((uint64_t)v22, v55);
        uint64_t v30 = *(unsigned __int8 *)(v44 + 72);
        sub_1BFE86F20(v44);
        return v30;
      case 7u:
        uint64_t v36 = &qword_1EB88DE80;
        uint64_t v37 = v56;
        sub_1BFE30960((uint64_t)v22, v56, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82A10);
        uint64_t v30 = *(unsigned __int8 *)(v37 + *(int *)(v57 + 52));
        unint64_t v38 = sub_1BFE82A10;
LABEL_20:
        sub_1C131E840(v37, (uint64_t)v36, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))v38);
        return v30;
      case 8u:
        uint64_t v40 = &qword_1EB88DEC0;
        uint64_t v31 = &type metadata for FormatFont;
        uint64_t v45 = sub_1C0084C58;
        long long v41 = sub_1C0084C58;
        uint64_t v46 = (uint64_t)v22;
        uint64_t v42 = (uint64_t)v58;
        goto LABEL_23;
      case 9u:
        uint64_t v40 = (unint64_t *)&unk_1EB88DEB0;
        uint64_t v31 = &type metadata for FormatAsyncImageContent;
        uint64_t v45 = sub_1C0036630;
        long long v41 = sub_1C0036630;
        uint64_t v46 = (uint64_t)v22;
        uint64_t v42 = (uint64_t)v59;
LABEL_23:
        sub_1C131E69C(v46, v42, v40, (uint64_t (*)(void))v45, (uint64_t)v31);
        uint64_t v30 = *(unsigned __int8 *)(v42 + 64);
LABEL_24:
        uint64_t v33 = v42;
        uint64_t v34 = v40;
        uint64_t v35 = v41;
LABEL_25:
        sub_1C131E720(v33, v34, (uint64_t (*)(void))v35, (uint64_t)v31, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        break;
      default:
        uint64_t v29 = v48;
        sub_1BFE86E90((uint64_t)v22, v48);
        uint64_t v30 = *(unsigned __int8 *)(v29 + 50);
        sub_1BFE87264(v29);
        break;
    }
  }
  return v30;
}

uint64_t sub_1C131E69C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  sub_1BFF014AC(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C131E720(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFF014AC(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C131E77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCompilerEnumProperty(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C131E7E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C131E840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C131E8A0()
{
  sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v46 = (char *)&v42 - v1;
  sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v45 = (char *)&v42 - v3;
  sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)&v42 - v5;
  sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v42 - v7;
  sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v42 - v10;
  sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v42 - v20;
  sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v42 - v23;
  sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v42 - v26;
  uint64_t v28 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE82BD0(v47, (uint64_t)v30, type metadata accessor for FormatCompilerProperty);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = &qword_1EB88DED0;
      uint64_t v33 = &type metadata for FormatColor;
      uint64_t v34 = sub_1C003F2E8;
      sub_1C131E69C((uint64_t)v30, (uint64_t)v24, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
      uint64_t v31 = *((void *)v24 + 9);
      swift_bridgeObjectRetain();
      uint64_t v35 = (uint64_t)v24;
      goto LABEL_14;
    case 2u:
      uint64_t v36 = &qword_1EB88DE90;
      sub_1BFE30960((uint64_t)v30, (uint64_t)v21, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82C58);
      uint64_t v31 = *(void *)&v21[*(int *)(v19 + 56)];
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1BFE82C58;
      goto LABEL_10;
    case 3u:
      sub_1C131E77C((uint64_t)v30, (uint64_t)v17);
      uint64_t v31 = *((void *)v17 + 12);
      swift_bridgeObjectRetain();
      sub_1C131E7E0((uint64_t)v17, type metadata accessor for FormatCompilerEnumProperty);
      return v31;
    case 4u:
      uint64_t v32 = &qword_1EB88DEA0;
      uint64_t v33 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v34 = sub_1C0092008;
      sub_1C131E69C((uint64_t)v30, (uint64_t)v14, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v31 = *((void *)v14 + 9);
      swift_bridgeObjectRetain();
      uint64_t v35 = (uint64_t)v14;
      goto LABEL_14;
    case 5u:
      sub_1C087DA18((uint64_t)v30, (uint64_t)v11);
      uint64_t v31 = *((void *)v11 + 9);
      swift_bridgeObjectRetain();
      sub_1C087DE28((uint64_t)v11);
      return v31;
    case 6u:
      sub_1BFE83E80((uint64_t)v30, (uint64_t)v8);
      uint64_t v31 = *((void *)v8 + 10);
      swift_bridgeObjectRetain();
      sub_1BFE86F20((uint64_t)v8);
      return v31;
    case 7u:
      uint64_t v36 = &qword_1EB88DE80;
      uint64_t v21 = v43;
      sub_1BFE30960((uint64_t)v30, (uint64_t)v43, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82A10);
      uint64_t v31 = *(void *)&v21[*(int *)(v44 + 56)];
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1BFE82A10;
LABEL_10:
      sub_1C131E840((uint64_t)v21, (uint64_t)v36, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))v37);
      return v31;
    case 8u:
      uint64_t v32 = &qword_1EB88DEC0;
      uint64_t v33 = &type metadata for FormatFont;
      unint64_t v38 = sub_1C0084C58;
      uint64_t v34 = sub_1C0084C58;
      uint64_t v39 = (uint64_t)v30;
      uint64_t v40 = (uint64_t)v45;
      goto LABEL_13;
    case 9u:
      uint64_t v32 = (unint64_t *)&unk_1EB88DEB0;
      uint64_t v33 = &type metadata for FormatAsyncImageContent;
      unint64_t v38 = sub_1C0036630;
      uint64_t v34 = sub_1C0036630;
      uint64_t v39 = (uint64_t)v30;
      uint64_t v40 = (uint64_t)v46;
LABEL_13:
      sub_1C131E69C(v39, v40, v32, (uint64_t (*)(void))v38, (uint64_t)v33);
      uint64_t v31 = *(void *)(v40 + 72);
      swift_bridgeObjectRetain();
      uint64_t v35 = v40;
LABEL_14:
      sub_1C131E720(v35, v32, (uint64_t (*)(void))v34, (uint64_t)v33, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      break;
    default:
      sub_1BFE86E90((uint64_t)v30, (uint64_t)v27);
      uint64_t v31 = *((void *)v27 + 7);
      swift_bridgeObjectRetain();
      sub_1BFE87264((uint64_t)v27);
      break;
  }
  return v31;
}

uint64_t FormatCompilerEnumProperty.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.required.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FormatCompilerEnumProperty.deprecated.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t FormatCompilerEnumProperty.compilerFlags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerPrimitiveProperty.description.getter()
{
  uint64_t v0 = sub_1BFE059FC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FormatCompilerPrimitiveProperty.compilerFlags.getter(uint64_t a1)
{
  sub_1BFE059F0(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C131F148@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v18[-v8];
  v18[15] = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v10;
  uint64_t v11 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v11;
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v12;
  uint64_t v13 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v13;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a3 + 65) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a3 + 66) = *(unsigned char *)(a2 + 50);
  *(void *)(a3 + 72) = *(void *)(a2 + 56);
  uint64_t v14 = MEMORY[0x1E4FBB390];
  sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFE0C0DC(a2 + *(int *)(v15 + 60), (uint64_t)v9, (unint64_t *)&qword_1EB884FE0, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFE87264(a2);
  sub_1BFE82970(0, &qword_1EB88E9C8, v14, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BFE30960((uint64_t)v9, a3 + *(int *)(v16 + 64), (uint64_t)&qword_1EB884FE0, (uint64_t)v6, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C131F31C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v20 = (uint64_t)&v19 - v7;
  char v22 = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v9;
  uint64_t v10 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v10;
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v11;
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v12;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  *(void *)(a3 + 72) = v13;
  *(unsigned char *)(a3 + 80) = *(unsigned char *)(a2 + 64);
  *(void *)(a3 + 88) = *(void *)(a2 + 72);
  sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v15 = (uint64_t)v8;
  uint64_t v16 = v21;
  sub_1BFE0C0DC(a2 + *(int *)(v14 + 60), v15, (unint64_t *)&qword_1EB884FE0, v21);
  swift_bridgeObjectRetain();
  sub_1BFDC11A4(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C131E720(a2, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFF014AC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BFE30960(v20, a3 + *(int *)(v17 + 64), (uint64_t)&qword_1EB884FE0, (uint64_t)v16, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C131F528@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  char v22 = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v9;
  uint64_t v10 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v10;
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v11;
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v12;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v14 = v13;
  uint64_t v15 = a2 + v13[12];
  sub_1BFE82C58(0, (unint64_t *)&qword_1EB879430, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v17 = v16;
  sub_1BFE0C0DC(v15, a3 + v16[13], (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  *(unsigned char *)(a3 + v17[14]) = *(unsigned char *)(a2 + v14[13]);
  *(void *)(a3 + v17[15]) = *(void *)(a2 + v14[14]);
  uint64_t v18 = a2 + v14[15];
  uint64_t v19 = v21;
  sub_1BFE0C0DC(v18, (uint64_t)v8, (unint64_t *)&qword_1EB884FE0, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C131E840(a2, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82C58);
  return sub_1BFE30960((uint64_t)v8, a3 + v17[16], (uint64_t)&qword_1EB884FE0, (uint64_t)v19, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C131F748@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v19[-v8];
  v19[15] = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v10;
  uint64_t v11 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v11;
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v12;
  uint64_t v13 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v13;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  char v14 = *(unsigned char *)(a2 + 64);
  *(void *)(a3 + 72) = *(void *)(a2 + 56);
  *(unsigned char *)(a3 + 80) = v14;
  *(unsigned char *)(a3 + 81) = *(unsigned char *)(a2 + 65);
  *(void *)(a3 + 88) = *(void *)(a2 + 72);
  sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFE0C0DC(a2 + *(int *)(v15 + 60), (uint64_t)v9, (unint64_t *)&qword_1EB884FE0, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = MEMORY[0x1E4FBC958];
  sub_1C131E720(a2, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFF014AC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BFE30960((uint64_t)v9, a3 + *(int *)(v17 + 64), (uint64_t)&qword_1EB884FE0, (uint64_t)v6, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C131F94C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v19[-v8];
  v19[15] = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v10;
  uint64_t v11 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v11;
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v12;
  uint64_t v13 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v13;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  char v14 = *(unsigned char *)(a2 + 64);
  *(void *)(a3 + 72) = *(void *)(a2 + 56);
  *(unsigned char *)(a3 + 80) = v14;
  *(unsigned char *)(a3 + 81) = *(unsigned char *)(a2 + 65);
  *(void *)(a3 + 88) = *(void *)(a2 + 72);
  uint64_t v15 = MEMORY[0x1E4FBB550];
  sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFE0C0DC(a2 + *(int *)(v16 + 60), (uint64_t)v9, (unint64_t *)&qword_1EB884FE0, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C087DE28(a2);
  sub_1BFE82970(0, &qword_1EB88E9D0, v15, (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BFE30960((uint64_t)v9, a3 + *(int *)(v17 + 64), (uint64_t)&qword_1EB884FE0, (uint64_t)v6, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C131FB28@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v19[-v8];
  v19[15] = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v10;
  uint64_t v11 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v11;
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v12;
  uint64_t v13 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v13;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 64);
  *(void *)(a3 + 72) = *(void *)(a2 + 56);
  *(void *)(a3 + 80) = v14;
  *(unsigned char *)(a3 + 88) = *(unsigned char *)(a2 + 72);
  *(void *)(a3 + 96) = *(void *)(a2 + 80);
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFE0C0DC(a2 + *(int *)(v16 + 60), (uint64_t)v9, (unint64_t *)&qword_1EB884FE0, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFE86F20(a2);
  sub_1BFE82970(0, &qword_1EB88E9C0, v15, (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BFE30960((uint64_t)v9, a3 + *(int *)(v17 + 64), (uint64_t)&qword_1EB884FE0, (uint64_t)v6, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C131FD04@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  char v22 = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v9;
  uint64_t v10 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v10;
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v11;
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v12;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v14 = v13;
  uint64_t v15 = a2 + v13[12];
  sub_1BFE82A10(0, (unint64_t *)&qword_1EB879428, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v17 = v16;
  sub_1BFE0C0DC(v15, a3 + v16[13], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  *(unsigned char *)(a3 + v17[14]) = *(unsigned char *)(a2 + v14[13]);
  *(void *)(a3 + v17[15]) = *(void *)(a2 + v14[14]);
  uint64_t v18 = a2 + v14[15];
  uint64_t v19 = v21;
  sub_1BFE0C0DC(v18, (uint64_t)v8, (unint64_t *)&qword_1EB884FE0, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C131E840(a2, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82A10);
  return sub_1BFE30960((uint64_t)v8, a3 + v17[16], (uint64_t)&qword_1EB884FE0, (uint64_t)v19, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C131FF24@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v20 = (uint64_t)&v19 - v7;
  char v22 = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v9;
  uint64_t v10 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v10;
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v11;
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v12;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  *(void *)(a3 + 72) = v13;
  *(unsigned char *)(a3 + 80) = *(unsigned char *)(a2 + 64);
  *(void *)(a3 + 88) = *(void *)(a2 + 72);
  sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v15 = (uint64_t)v8;
  uint64_t v16 = v21;
  sub_1BFE0C0DC(a2 + *(int *)(v14 + 60), v15, (unint64_t *)&qword_1EB884FE0, v21);
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C131E720(a2, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFF014AC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BFE30960(v20, a3 + *(int *)(v17 + 64), (uint64_t)&qword_1EB884FE0, (uint64_t)v16, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

uint64_t sub_1C1320130@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v20 = (uint64_t)&v19 - v7;
  char v22 = a1;
  *(void *)a3 = FormatOptionType.rawValue.getter();
  *(void *)(a3 + 8) = v9;
  uint64_t v10 = *(void *)(a2 + 8);
  *(void *)(a3 + 16) = *(void *)a2;
  *(void *)(a3 + 24) = v10;
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a3 + 32) = *(void *)(a2 + 16);
  *(void *)(a3 + 40) = v11;
  uint64_t v12 = *(void *)(a2 + 40);
  *(void *)(a3 + 48) = *(void *)(a2 + 32);
  *(void *)(a3 + 56) = v12;
  *(unsigned char *)(a3 + 64) = *(unsigned char *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  *(void *)(a3 + 72) = v13;
  *(unsigned char *)(a3 + 80) = *(unsigned char *)(a2 + 64);
  *(void *)(a3 + 88) = *(void *)(a2 + 72);
  sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v15 = (uint64_t)v8;
  uint64_t v16 = v21;
  sub_1BFE0C0DC(a2 + *(int *)(v14 + 60), v15, (unint64_t *)&qword_1EB884FE0, v21);
  swift_bridgeObjectRetain();
  sub_1BFDC11A4(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C131E720(a2, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  sub_1BFF014AC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  return sub_1BFE30960(v20, a3 + *(int *)(v17 + 64), (uint64_t)&qword_1EB884FE0, (uint64_t)v16, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE79E3C);
}

BOOL sub_1C1320340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - v11;
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v41 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v22 = sub_1C1520A9C(), BOOL result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v25 = sub_1C1520A9C(), BOOL result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        int v26 = *(unsigned __int8 *)(a1 + 49);
        int v27 = *(unsigned __int8 *)(a2 + 49);
        if (v26 == 2)
        {
          if (v27 != 2) {
            return 0;
          }
        }
        else if (v27 == 2 || ((v27 & 1) == 0) == (v26 & 1))
        {
          return 0;
        }
        if (*(unsigned __int8 *)(a1 + 50) != *(unsigned __int8 *)(a2 + 50)) {
          return 0;
        }
        uint64_t v42 = v5;
        uint64_t v44 = *(void *)(a1 + 56);
        uint64_t v28 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v43 = sub_1C00AC354(v44, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v43 & 1) == 0) {
          return 0;
        }
        sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v30 = v29;
        uint64_t v31 = a1 + *(int *)(v29 + 60);
        uint64_t v32 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
        sub_1BFE0C0DC(v31, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        sub_1BFE0C0DC(a2 + *(int *)(v30 + 60), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v32);
        uint64_t v33 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1BFE0C0DC((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v32);
        sub_1BFE0C0DC((uint64_t)v18, v33, (unint64_t *)&qword_1EB884FE0, v32);
        uint64_t v34 = v42;
        uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
        if (v35((uint64_t)v12, 1, v4) == 1)
        {
          uint64_t v36 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v36);
          if (v35(v33, 1, v4) == 1)
          {
            sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            return 1;
          }
        }
        else
        {
          sub_1BFE0C0DC((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          if (v35(v33, 1, v4) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v7, v33, v4);
            sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
            char v38 = sub_1C151E5CC();
            uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
            v39(v7, v4);
            uint64_t v40 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v40);
            v39(v15, v4);
            sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v40);
            return (v38 & 1) != 0;
          }
          uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
          (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v4);
        }
        sub_1C132BBC4((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1C132094C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v43[-v10];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v7);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v43[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v43[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        uint64_t v45 = v4;
        uint64_t v25 = *(void *)(a1 + 56);
        uint64_t v26 = *(void *)(a2 + 56);
        if ((~v25 & 0xF000000000000007) != 0)
        {
          uint64_t v48 = *(void *)(a1 + 56);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            uint64_t v47 = v26;
            swift_retain_n();
            char v27 = static FormatColor.== infix(_:_:)(&v48, (unint64_t *)&v47);
            swift_release();
            sub_1BFDC11BC(v25);
            if ((v27 & 1) == 0) {
              return 0;
            }
            goto LABEL_18;
          }
          sub_1BFDC11A4(v25);
        }
        else if ((~v26 & 0xF000000000000007) == 0)
        {
LABEL_18:
          if (*(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
          {
            uint64_t v28 = *(void *)(a1 + 72);
            uint64_t v29 = *(void *)(a2 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v44 = sub_1C00AC354(v28, v29);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v44)
            {
              sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              uint64_t v31 = v30;
              uint64_t v32 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE0C0DC(a1 + *(int *)(v30 + 60), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE0C0DC(a2 + *(int *)(v31 + 60), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v32);
              uint64_t v33 = (uint64_t)&v11[*(int *)(v9 + 48)];
              sub_1BFE0C0DC((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v32);
              sub_1BFE0C0DC((uint64_t)v17, v33, (unint64_t *)&qword_1EB884FE0, v32);
              uint64_t v35 = v45;
              uint64_t v34 = v46;
              uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
              if (v36((uint64_t)v11, 1, v45) == 1)
              {
                uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v37);
                if (v36(v33, 1, v35) == 1)
                {
                  sub_1BFF514E8((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  return 1;
                }
              }
              else
              {
                sub_1BFE0C0DC((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                if (v36(v33, 1, v35) != 1)
                {
                  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 32))(v6, v33, v35);
                  sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                  uint64_t v39 = v34;
                  char v40 = sub_1C151E5CC();
                  uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
                  v41(v6, v35);
                  uint64_t v42 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v42);
                  v41(v14, v35);
                  sub_1BFF514E8((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v42);
                  return (v40 & 1) != 0;
                }
                char v38 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v14, v35);
              }
              sub_1C132BBC4((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            }
          }
          return 0;
        }
        sub_1BFDC11A4(v26);
        sub_1BFDC11BC(v25);
        sub_1BFDC11BC(v26);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1C1320FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v85 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v81 = &v75[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v83 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v75[-v8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v6);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v82 = &v75[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  unsigned __int8 v86 = &v75[-v13];
  MEMORY[0x1F4188790](v14);
  uint64_t v84 = &v75[-v15];
  uint64_t v16 = sub_1C151631C();
  uint64_t v88 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v87 = &v75[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB85C768, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v19);
  char v22 = &v75[-v21];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB871180, v18);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = &v75[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = &v75[-v27];
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = &v75[-v30];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v32 = sub_1C1520A9C(), BOOL result = 0, (v32 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v34 = sub_1C1520A9C(), BOOL result = 0, (v34 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v35 = sub_1C1520A9C(), BOOL result = 0, (v35 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        uint64_t v80 = v25;
        uint64_t v77 = v9;
        uint64_t v78 = v4;
        sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v36 = v16;
        uint64_t v38 = v37;
        uint64_t v39 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
        sub_1BFE0C0DC(a1 + *(int *)(v37 + 48), (uint64_t)v31, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        uint64_t v79 = v38;
        uint64_t v40 = *(int *)(v38 + 48);
        uint64_t v41 = v36;
        sub_1BFE0C0DC(a2 + v40, (uint64_t)v28, (unint64_t *)&qword_1EB871180, v39);
        uint64_t v42 = (uint64_t)&v22[*(int *)(v20 + 48)];
        sub_1BFE0C0DC((uint64_t)v31, (uint64_t)v22, (unint64_t *)&qword_1EB871180, v39);
        sub_1BFE0C0DC((uint64_t)v28, v42, (unint64_t *)&qword_1EB871180, v39);
        int v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
        if (v43((uint64_t)v22, 1, v36) == 1)
        {
          int v44 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
          sub_1BFF514E8((uint64_t)v28, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1BFF514E8((uint64_t)v31, (unint64_t *)&qword_1EB871180, v44);
          if (v43(v42, 1, v41) == 1)
          {
            sub_1BFF514E8((uint64_t)v22, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
LABEL_19:
            uint64_t v55 = v79;
            if (*(unsigned __int8 *)(a1 + *(int *)(v79 + 52)) != *(unsigned __int8 *)(a2 + *(int *)(v79 + 52))) {
              return 0;
            }
            uint64_t v56 = *(int *)(v79 + 56);
            uint64_t v57 = *(void *)(a1 + v56);
            uint64_t v58 = *(void *)(a2 + v56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v59 = sub_1C00AC354(v57, v58);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v59 & 1) == 0) {
              return 0;
            }
            uint64_t v60 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            uint64_t v61 = v84;
            sub_1BFE0C0DC(a1 + *(int *)(v55 + 60), (uint64_t)v84, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            uint64_t v62 = v86;
            sub_1BFE0C0DC(a2 + *(int *)(v55 + 60), (uint64_t)v86, (unint64_t *)&qword_1EB884FE0, v60);
            uint64_t v63 = (uint64_t)v77;
            uint64_t v64 = (uint64_t)&v77[*(int *)(v83 + 48)];
            sub_1BFE0C0DC((uint64_t)v61, (uint64_t)v77, (unint64_t *)&qword_1EB884FE0, v60);
            sub_1BFE0C0DC((uint64_t)v62, v64, (unint64_t *)&qword_1EB884FE0, v60);
            uint64_t v65 = v85;
            uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
            uint64_t v67 = v78;
            if (v66(v63, 1, v78) == 1)
            {
              uint64_t v68 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFF514E8((uint64_t)v62, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFF514E8((uint64_t)v61, (unint64_t *)&qword_1EB884FE0, v68);
              if (v66(v64, 1, v67) == 1)
              {
                sub_1BFF514E8(v63, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                return 1;
              }
            }
            else
            {
              uint64_t v69 = v82;
              sub_1BFE0C0DC(v63, (uint64_t)v82, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              if (v66(v64, 1, v67) != 1)
              {
                uint64_t v71 = v81;
                (*(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 32))(v81, v64, v67);
                sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                char v72 = sub_1C151E5CC();
                uint64_t v73 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
                v73(v71, v67);
                uint64_t v74 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v86, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v61, (unint64_t *)&qword_1EB884FE0, v74);
                v73(v69, v67);
                sub_1BFF514E8(v63, (unint64_t *)&qword_1EB884FE0, v74);
                return (v72 & 1) != 0;
              }
              uint64_t v70 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFF514E8((uint64_t)v86, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFF514E8((uint64_t)v61, (unint64_t *)&qword_1EB884FE0, v70);
              (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v69, v67);
            }
            uint64_t v47 = &qword_1EB884FE8;
            uint64_t v48 = &qword_1EB884FE0;
            uint64_t v49 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            uint64_t v50 = v63;
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v45 = (uint64_t)v80;
          sub_1BFE0C0DC((uint64_t)v22, (uint64_t)v80, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          if (v43(v42, 1, v41) != 1)
          {
            uint64_t v52 = v87;
            uint64_t v51 = v88;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v88 + 32))(v87, v42, v41);
            sub_1BFF87924((unint64_t *)&qword_1EB871160, MEMORY[0x1E4F27928]);
            int v76 = sub_1C151E5CC();
            uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
            v53(v52, v41);
            uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
            sub_1BFF514E8((uint64_t)v28, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
            sub_1BFF514E8((uint64_t)v31, (unint64_t *)&qword_1EB871180, v54);
            v53((unsigned char *)v45, v41);
            sub_1BFF514E8((uint64_t)v22, (unint64_t *)&qword_1EB871180, v54);
            if ((v76 & 1) == 0) {
              return 0;
            }
            goto LABEL_19;
          }
          uint64_t v46 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
          sub_1BFF514E8((uint64_t)v28, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          sub_1BFF514E8((uint64_t)v31, (unint64_t *)&qword_1EB871180, v46);
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v45, v41);
        }
        uint64_t v47 = &qword_1EB85C768;
        uint64_t v48 = &qword_1EB871180;
        uint64_t v49 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
        uint64_t v50 = (uint64_t)v22;
LABEL_17:
        sub_1C132BBC4(v50, (unint64_t *)v47, (unint64_t *)v48, v49);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1C1321A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - v11;
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v22 = sub_1C1520A9C(), BOOL result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v25 = sub_1C1520A9C(), BOOL result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        char v26 = *(unsigned char *)(a2 + 64);
        if (*(unsigned char *)(a1 + 64))
        {
          if (!*(unsigned char *)(a2 + 64)) {
            return 0;
          }
        }
        else
        {
          if (*(double *)(a1 + 56) != *(double *)(a2 + 56)) {
            char v26 = 1;
          }
          if (v26) {
            return 0;
          }
        }
        if (*(unsigned __int8 *)(a1 + 65) != *(unsigned __int8 *)(a2 + 65)) {
          return 0;
        }
        uint64_t v43 = v4;
        uint64_t v44 = v5;
        uint64_t v27 = *(void *)(a1 + 72);
        uint64_t v28 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v45 = sub_1C00AC354(v27, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v45 & 1) == 0) {
          return 0;
        }
        sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v30 = v29;
        uint64_t v31 = a1 + *(int *)(v29 + 60);
        char v32 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
        sub_1BFE0C0DC(v31, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        sub_1BFE0C0DC(a2 + *(int *)(v30 + 60), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v32);
        uint64_t v33 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1BFE0C0DC((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v32);
        sub_1BFE0C0DC((uint64_t)v18, v33, (unint64_t *)&qword_1EB884FE0, v32);
        uint64_t v34 = v43;
        uint64_t v35 = v44;
        uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
        if (v36((uint64_t)v12, 1, v43) == 1)
        {
          uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
          if (v36(v33, 1, v34) == 1)
          {
            sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            return 1;
          }
        }
        else
        {
          sub_1BFE0C0DC((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          if (v36(v33, 1, v34) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v7, v33, v34);
            sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
            char v39 = sub_1C151E5CC();
            uint64_t v40 = *(void (**)(char *, uint64_t))(v35 + 8);
            v40(v7, v34);
            uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v41);
            v40(v15, v34);
            sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v41);
            return (v39 & 1) != 0;
          }
          uint64_t v38 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v38);
          (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v34);
        }
        sub_1C132BBC4((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1C1322024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - v11;
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v22 = sub_1C1520A9C(), BOOL result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v25 = sub_1C1520A9C(), BOOL result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        char v26 = *(unsigned char *)(a2 + 64);
        if (*(unsigned char *)(a1 + 64))
        {
          if (!*(unsigned char *)(a2 + 64)) {
            return 0;
          }
        }
        else
        {
          if (*(void *)(a1 + 56) != *(void *)(a2 + 56)) {
            char v26 = 1;
          }
          if (v26) {
            return 0;
          }
        }
        if (*(unsigned __int8 *)(a1 + 65) != *(unsigned __int8 *)(a2 + 65)) {
          return 0;
        }
        uint64_t v43 = v4;
        uint64_t v44 = v5;
        uint64_t v27 = *(void *)(a1 + 72);
        uint64_t v28 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v45 = sub_1C00AC354(v27, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v45 & 1) == 0) {
          return 0;
        }
        sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v30 = v29;
        uint64_t v31 = a1 + *(int *)(v29 + 60);
        char v32 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
        sub_1BFE0C0DC(v31, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        sub_1BFE0C0DC(a2 + *(int *)(v30 + 60), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v32);
        uint64_t v33 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1BFE0C0DC((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v32);
        sub_1BFE0C0DC((uint64_t)v18, v33, (unint64_t *)&qword_1EB884FE0, v32);
        uint64_t v34 = v43;
        uint64_t v35 = v44;
        uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
        if (v36((uint64_t)v12, 1, v43) == 1)
        {
          uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
          if (v36(v33, 1, v34) == 1)
          {
            sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            return 1;
          }
        }
        else
        {
          sub_1BFE0C0DC((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          if (v36(v33, 1, v34) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v7, v33, v34);
            sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
            char v39 = sub_1C151E5CC();
            uint64_t v40 = *(void (**)(char *, uint64_t))(v35 + 8);
            v40(v7, v34);
            uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v41);
            v40(v15, v34);
            sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v41);
            return (v39 & 1) != 0;
          }
          uint64_t v38 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v38);
          (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v34);
        }
        sub_1C132BBC4((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1C132261C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - v11;
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v22 = sub_1C1520A9C(), BOOL result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v25 = sub_1C1520A9C(), BOOL result = 0, (v25 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        uint64_t v26 = *(void *)(a1 + 64);
        uint64_t v27 = *(void *)(a2 + 64);
        if (!v26)
        {
          if (v27) {
            return 0;
          }
          goto LABEL_20;
        }
        if (!v27) {
          return 0;
        }
        if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && v26 == v27
          || (v28 = sub_1C1520A9C(), BOOL result = 0, (v28 & 1) != 0))
        {
LABEL_20:
          if (*(unsigned __int8 *)(a1 + 72) != *(unsigned __int8 *)(a2 + 72)) {
            return 0;
          }
          uint64_t v43 = v5;
          uint64_t v45 = *(void *)(a1 + 80);
          uint64_t v29 = *(void *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v44 = sub_1C00AC354(v45, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v44 & 1) == 0) {
            return 0;
          }
          sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
          uint64_t v31 = v30;
          uint64_t v32 = a1 + *(int *)(v30 + 60);
          uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFE0C0DC(v32, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFE0C0DC(a2 + *(int *)(v31 + 60), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v33);
          uint64_t v34 = (uint64_t)&v12[*(int *)(v10 + 48)];
          sub_1BFE0C0DC((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v33);
          sub_1BFE0C0DC((uint64_t)v18, v34, (unint64_t *)&qword_1EB884FE0, v33);
          uint64_t v35 = v43;
          uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
          if (v36((uint64_t)v12, 1, v4) == 1)
          {
            uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
            if (v36(v34, 1, v4) == 1)
            {
              sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              return 1;
            }
          }
          else
          {
            sub_1BFE0C0DC((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            if (v36(v34, 1, v4) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v7, v34, v4);
              sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
              char v39 = sub_1C151E5CC();
              uint64_t v40 = *(void (**)(char *, uint64_t))(v35 + 8);
              v40(v7, v4);
              uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v41);
              v40(v15, v4);
              sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v41);
              return (v39 & 1) != 0;
            }
            uint64_t v38 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v38);
            (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v4);
          }
          sub_1C132BBC4((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C1322C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v85 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v81 = &v75[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v83 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v75[-v8];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v6);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v82 = &v75[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  unsigned __int8 v86 = &v75[-v13];
  MEMORY[0x1F4188790](v14);
  uint64_t v84 = &v75[-v15];
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v88 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v87 = &v75[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB871130, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v19);
  char v22 = &v75[-v21];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB8948A0, v18);
  MEMORY[0x1F4188790](v23 - 8);
  char v25 = &v75[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v26);
  char v28 = &v75[-v27];
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = &v75[-v30];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v32 = sub_1C1520A9C(), BOOL result = 0, (v32 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v34 = sub_1C1520A9C(), BOOL result = 0, (v34 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v35 = sub_1C1520A9C(), BOOL result = 0, (v35 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        uint64_t v80 = v25;
        uint64_t v77 = v9;
        uint64_t v78 = v4;
        sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v36 = v16;
        uint64_t v38 = v37;
        char v39 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        sub_1BFE0C0DC(a1 + *(int *)(v37 + 48), (uint64_t)v31, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        uint64_t v79 = v38;
        uint64_t v40 = *(int *)(v38 + 48);
        uint64_t v41 = v36;
        sub_1BFE0C0DC(a2 + v40, (uint64_t)v28, (unint64_t *)&qword_1EB8948A0, v39);
        uint64_t v42 = (uint64_t)&v22[*(int *)(v20 + 48)];
        sub_1BFE0C0DC((uint64_t)v31, (uint64_t)v22, (unint64_t *)&qword_1EB8948A0, v39);
        sub_1BFE0C0DC((uint64_t)v28, v42, (unint64_t *)&qword_1EB8948A0, v39);
        uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
        if (v43((uint64_t)v22, 1, v36) == 1)
        {
          int v44 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          sub_1BFF514E8((uint64_t)v28, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          sub_1BFF514E8((uint64_t)v31, (unint64_t *)&qword_1EB8948A0, v44);
          if (v43(v42, 1, v41) == 1)
          {
            sub_1BFF514E8((uint64_t)v22, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
LABEL_19:
            uint64_t v55 = v79;
            if (*(unsigned __int8 *)(a1 + *(int *)(v79 + 52)) != *(unsigned __int8 *)(a2 + *(int *)(v79 + 52))) {
              return 0;
            }
            uint64_t v56 = *(int *)(v79 + 56);
            uint64_t v57 = *(void *)(a1 + v56);
            uint64_t v58 = *(void *)(a2 + v56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v59 = sub_1C00AC354(v57, v58);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v59 & 1) == 0) {
              return 0;
            }
            uint64_t v60 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            uint64_t v61 = v84;
            sub_1BFE0C0DC(a1 + *(int *)(v55 + 60), (uint64_t)v84, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            uint64_t v62 = v86;
            sub_1BFE0C0DC(a2 + *(int *)(v55 + 60), (uint64_t)v86, (unint64_t *)&qword_1EB884FE0, v60);
            uint64_t v63 = (uint64_t)v77;
            uint64_t v64 = (uint64_t)&v77[*(int *)(v83 + 48)];
            sub_1BFE0C0DC((uint64_t)v61, (uint64_t)v77, (unint64_t *)&qword_1EB884FE0, v60);
            sub_1BFE0C0DC((uint64_t)v62, v64, (unint64_t *)&qword_1EB884FE0, v60);
            uint64_t v65 = v85;
            uint64_t v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
            uint64_t v67 = v78;
            if (v66(v63, 1, v78) == 1)
            {
              uint64_t v68 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFF514E8((uint64_t)v62, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFF514E8((uint64_t)v61, (unint64_t *)&qword_1EB884FE0, v68);
              if (v66(v64, 1, v67) == 1)
              {
                sub_1BFF514E8(v63, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                return 1;
              }
            }
            else
            {
              uint64_t v69 = v82;
              sub_1BFE0C0DC(v63, (uint64_t)v82, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              if (v66(v64, 1, v67) != 1)
              {
                uint64_t v71 = v81;
                (*(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 32))(v81, v64, v67);
                sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                char v72 = sub_1C151E5CC();
                uint64_t v73 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
                v73(v71, v67);
                uint64_t v74 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v86, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v61, (unint64_t *)&qword_1EB884FE0, v74);
                v73(v69, v67);
                sub_1BFF514E8(v63, (unint64_t *)&qword_1EB884FE0, v74);
                return (v72 & 1) != 0;
              }
              uint64_t v70 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFF514E8((uint64_t)v86, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFF514E8((uint64_t)v61, (unint64_t *)&qword_1EB884FE0, v70);
              (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v69, v67);
            }
            uint64_t v47 = &qword_1EB884FE8;
            uint64_t v48 = &qword_1EB884FE0;
            uint64_t v49 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            uint64_t v50 = v63;
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v45 = (uint64_t)v80;
          sub_1BFE0C0DC((uint64_t)v22, (uint64_t)v80, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          if (v43(v42, 1, v41) != 1)
          {
            uint64_t v52 = v87;
            uint64_t v51 = v88;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v88 + 32))(v87, v42, v41);
            sub_1BFF87924((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
            int v76 = sub_1C151E5CC();
            uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
            v53(v52, v41);
            uint64_t v54 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
            sub_1BFF514E8((uint64_t)v28, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            sub_1BFF514E8((uint64_t)v31, (unint64_t *)&qword_1EB8948A0, v54);
            v53((unsigned char *)v45, v41);
            sub_1BFF514E8((uint64_t)v22, (unint64_t *)&qword_1EB8948A0, v54);
            if ((v76 & 1) == 0) {
              return 0;
            }
            goto LABEL_19;
          }
          uint64_t v46 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
          sub_1BFF514E8((uint64_t)v28, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          sub_1BFF514E8((uint64_t)v31, (unint64_t *)&qword_1EB8948A0, v46);
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v45, v41);
        }
        uint64_t v47 = &qword_1EB871130;
        uint64_t v48 = &qword_1EB8948A0;
        uint64_t v49 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        uint64_t v50 = (uint64_t)v22;
LABEL_17:
        sub_1C132BBC4(v50, (unint64_t *)v47, (unint64_t *)v48, v49);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1C132369C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v43[-v10];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v7);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v43[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v43[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        uint64_t v45 = v4;
        uint64_t v25 = *(void *)(a1 + 56);
        uint64_t v26 = *(void *)(a2 + 56);
        if ((~v25 & 0xF000000000000007) != 0)
        {
          uint64_t v48 = *(void *)(a1 + 56);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            uint64_t v47 = v26;
            swift_retain_n();
            char v27 = static FormatFont.== infix(_:_:)(&v48, (unint64_t *)&v47);
            swift_release();
            sub_1BFEF68C0(v25);
            if ((v27 & 1) == 0) {
              return 0;
            }
            goto LABEL_18;
          }
          sub_1BFEF683C(v25);
        }
        else if ((~v26 & 0xF000000000000007) == 0)
        {
LABEL_18:
          if (*(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
          {
            uint64_t v28 = *(void *)(a1 + 72);
            uint64_t v29 = *(void *)(a2 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v44 = sub_1C00AC354(v28, v29);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v44)
            {
              sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              uint64_t v31 = v30;
              char v32 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE0C0DC(a1 + *(int *)(v30 + 60), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE0C0DC(a2 + *(int *)(v31 + 60), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v32);
              uint64_t v33 = (uint64_t)&v11[*(int *)(v9 + 48)];
              sub_1BFE0C0DC((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v32);
              sub_1BFE0C0DC((uint64_t)v17, v33, (unint64_t *)&qword_1EB884FE0, v32);
              uint64_t v35 = v45;
              uint64_t v34 = v46;
              uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
              if (v36((uint64_t)v11, 1, v45) == 1)
              {
                uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v37);
                if (v36(v33, 1, v35) == 1)
                {
                  sub_1BFF514E8((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  return 1;
                }
              }
              else
              {
                sub_1BFE0C0DC((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                if (v36(v33, 1, v35) != 1)
                {
                  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 32))(v6, v33, v35);
                  sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                  uint64_t v39 = v34;
                  char v40 = sub_1C151E5CC();
                  uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
                  v41(v6, v35);
                  uint64_t v42 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v42);
                  v41(v14, v35);
                  sub_1BFF514E8((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v42);
                  return (v40 & 1) != 0;
                }
                uint64_t v38 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v14, v35);
              }
              sub_1C132BBC4((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            }
          }
          return 0;
        }
        sub_1BFEF683C(v26);
        sub_1BFEF68C0(v25);
        sub_1BFEF68C0(v26);
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_1C1323D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v43[-v10];
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v7);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v43[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v43[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        uint64_t v45 = v4;
        uint64_t v25 = *(void *)(a1 + 56);
        uint64_t v26 = *(void *)(a2 + 56);
        if ((~v25 & 0xF000000000000007) != 0)
        {
          unint64_t v48 = *(void *)(a1 + 56);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            uint64_t v47 = v26;
            swift_retain_n();
            char v27 = static FormatAsyncImageContent.== infix(_:_:)(&v48, (unint64_t *)&v47);
            swift_release();
            sub_1BFDC11BC(v25);
            if ((v27 & 1) == 0) {
              return 0;
            }
            goto LABEL_18;
          }
          sub_1BFDC11A4(v25);
        }
        else if ((~v26 & 0xF000000000000007) == 0)
        {
LABEL_18:
          if (*(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
          {
            uint64_t v28 = *(void *)(a1 + 72);
            uint64_t v29 = *(void *)(a2 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v44 = sub_1C00AC354(v28, v29);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v44)
            {
              sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
              uint64_t v31 = v30;
              char v32 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE0C0DC(a1 + *(int *)(v30 + 60), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE0C0DC(a2 + *(int *)(v31 + 60), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v32);
              uint64_t v33 = (uint64_t)&v11[*(int *)(v9 + 48)];
              sub_1BFE0C0DC((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v32);
              sub_1BFE0C0DC((uint64_t)v17, v33, (unint64_t *)&qword_1EB884FE0, v32);
              uint64_t v35 = v45;
              uint64_t v34 = v46;
              uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
              if (v36((uint64_t)v11, 1, v45) == 1)
              {
                uint64_t v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v37);
                if (v36(v33, 1, v35) == 1)
                {
                  sub_1BFF514E8((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  return 1;
                }
              }
              else
              {
                sub_1BFE0C0DC((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                if (v36(v33, 1, v35) != 1)
                {
                  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 32))(v6, v33, v35);
                  sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                  uint64_t v39 = v34;
                  char v40 = sub_1C151E5CC();
                  uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
                  v41(v6, v35);
                  uint64_t v42 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v42);
                  v41(v14, v35);
                  sub_1BFF514E8((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v42);
                  return (v40 & 1) != 0;
                }
                uint64_t v38 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v14, v35);
              }
              sub_1C132BBC4((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            }
          }
          return 0;
        }
        sub_1BFDC11A4(v26);
        sub_1BFDC11BC(v25);
        sub_1BFDC11BC(v26);
        return 0;
      }
    }
  }
  return result;
}

BOOL static FormatCompilerPrimitiveProperty.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v87 = a4;
  uint64_t v7 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v79 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v81 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v70 - v12;
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v10);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v80 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v82 = (uint64_t)&v70 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v83 = (uint64_t)&v70 - v19;
  uint64_t v88 = *(char **)(a3 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v84 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a3;
  uint64_t v23 = sub_1C151FD8C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v86 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v25 = (char *)&v70 - v24;
  uint64_t v90 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v85 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v70 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v70 - v32;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v34 = sub_1C1520A9C(), BOOL result = 0, (v34 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v36 = sub_1C1520A9C(), BOOL result = 0, (v36 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v37 = sub_1C1520A9C(), BOOL result = 0, (v37 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
          return 0;
        }
        uint64_t v73 = v8;
        uint64_t v74 = v13;
        uint64_t v72 = v7;
        uint64_t v38 = type metadata accessor for FormatCompilerPrimitiveProperty();
        uint64_t v39 = *(void (**)(void))(v90 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v39)(v33, a1 + *(int *)(v38 + 48), v23);
        uint64_t v75 = v38;
        ((void (*)(char *, uint64_t, uint64_t))v39)(v30, a2 + *(int *)(v38 + 48), v23);
        char v40 = &v25[*(int *)(TupleTypeMetadata2 + 48)];
        ((void (*)(char *, char *, uint64_t))v39)(v25, v33, v23);
        uint64_t v78 = v40;
        ((void (*)(char *, char *, uint64_t))v39)(v40, v30, v23);
        int v76 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v88 + 6);
        uint64_t v77 = v22;
        if (v76(v25, 1, v22) == 1)
        {
          uint64_t v41 = *(void (**)(char *, uint64_t))(v90 + 8);
          v41(v30, v23);
          v41(v33, v23);
          if (v76(v78, 1, v77) == 1)
          {
            v41(v25, v23);
LABEL_18:
            uint64_t v49 = v75;
            if (*(unsigned __int8 *)(a1 + *(int *)(v75 + 52)) == *(unsigned __int8 *)(a2 + *(int *)(v75 + 52)))
            {
              uint64_t v50 = *(int *)(v75 + 56);
              uint64_t v51 = *(void *)(a1 + v50);
              uint64_t v52 = *(void *)(a2 + v50);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v53 = sub_1C00AC354(v51, v52);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v53)
              {
                uint64_t v54 = a1 + *(int *)(v49 + 60);
                uint64_t v55 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                uint64_t v56 = v83;
                sub_1BFE0C0DC(v54, v83, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                uint64_t v57 = v82;
                sub_1BFE0C0DC(a2 + *(int *)(v49 + 60), v82, (unint64_t *)&qword_1EB884FE0, v55);
                uint64_t v58 = (uint64_t)v74;
                uint64_t v59 = (uint64_t)&v74[*(int *)(v81 + 48)];
                sub_1BFE0C0DC(v56, (uint64_t)v74, (unint64_t *)&qword_1EB884FE0, v55);
                sub_1BFE0C0DC(v57, v59, (unint64_t *)&qword_1EB884FE0, v55);
                uint64_t v60 = v72;
                uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
                if (v61(v58, 1, v72) == 1)
                {
                  uint64_t v62 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFF514E8(v57, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFF514E8(v56, (unint64_t *)&qword_1EB884FE0, v62);
                  if (v61(v59, 1, v60) == 1)
                  {
                    sub_1BFF514E8((uint64_t)v74, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    return 1;
                  }
                }
                else
                {
                  uint64_t v63 = v80;
                  sub_1BFE0C0DC(v58, v80, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  if (v61(v59, 1, v60) != 1)
                  {
                    uint64_t v65 = v73;
                    uint64_t v66 = v79;
                    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v79, v59, v60);
                    sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                    char v67 = sub_1C151E5CC();
                    uint64_t v68 = *(void (**)(char *, uint64_t))(v65 + 8);
                    v68(v66, v60);
                    uint64_t v69 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFF514E8(v57, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFF514E8(v56, (unint64_t *)&qword_1EB884FE0, v69);
                    v68((char *)v63, v60);
                    sub_1BFF514E8(v58, (unint64_t *)&qword_1EB884FE0, v69);
                    return (v67 & 1) != 0;
                  }
                  uint64_t v64 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFF514E8(v57, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFF514E8(v56, (unint64_t *)&qword_1EB884FE0, v64);
                  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v63, v60);
                }
                sub_1C132BBC4((uint64_t)v74, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              }
            }
            return 0;
          }
        }
        else
        {
          uint64_t v71 = v33;
          uint64_t v42 = v85;
          v39();
          uint64_t v43 = v77;
          if (v76(v78, 1, v77) != 1)
          {
            uint64_t v45 = v88;
            uint64_t v46 = v84;
            (*((void (**)(char *, char *, uint64_t))v88 + 4))(v84, v78, v43);
            LODWORD(TupleTypeMetadata2) = sub_1C151E5CC();
            uint64_t v47 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
            v47(v46, v43);
            uint64_t v88 = v25;
            unint64_t v48 = *(void (**)(char *, uint64_t))(v90 + 8);
            v48(v30, v23);
            v48(v71, v23);
            v47(v42, v43);
            v48(v88, v23);
            if ((TupleTypeMetadata2 & 1) == 0) {
              return 0;
            }
            goto LABEL_18;
          }
          int v44 = *(void (**)(char *, uint64_t))(v90 + 8);
          v44(v30, v23);
          v44(v71, v23);
          (*((void (**)(char *, uint64_t))v88 + 1))(v42, v43);
        }
        (*(void (**)(char *, uint64_t))(v86 + 8))(v25, TupleTypeMetadata2);
        return 0;
      }
    }
  }
  return result;
}

uint64_t FormatCompilerPrimitiveProperty.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerPrimitiveProperty.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerPrimitiveProperty.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.name.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C1324E68@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FormatCompilerPrimitiveProperty();
  *a1 = sub_1BFE059FC();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1324EB8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return FormatCompilerPrimitiveProperty.description.setter(v1, v2);
}

uint64_t FormatCompilerPrimitiveProperty.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerPrimitiveProperty.required.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.required.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerPrimitiveProperty.default.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t FormatCompilerPrimitiveProperty.deprecated.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 52)) = result;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.deprecated.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C132501C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatCompilerPrimitiveProperty();
  *a1 = sub_1BFE059F0(v2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1325068()
{
  uint64_t v0 = type metadata accessor for FormatCompilerPrimitiveProperty();
  uint64_t v1 = swift_bridgeObjectRetain();
  return FormatCompilerPrimitiveProperty.compilerFlags.setter(v1, v0);
}

uint64_t FormatCompilerPrimitiveProperty.compilerFlags.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 56);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FormatCompilerPrimitiveProperty.compilerFlags.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerPrimitiveProperty.editorProperties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0C0DC(v2 + *(int *)(a1 + 60), a2, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

BOOL sub_1C1325154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatCompilerPrimitiveProperty.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t FormatCompilerEnumProperty.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.name.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.required.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.required.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.default.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCompilerEnumProperty.deprecated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.deprecated.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.compilerFlags.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatCompilerEnumProperty.compilerFlags.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCompilerEnumProperty.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatCompilerEnumProperty(0);
  return sub_1BFE0C0DC(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

BOOL _s8NewsFeed26FormatCompilerEnumPropertyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C132BB60(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - v11;
  sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, v8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v22 = sub_1C1520A9C(), BOOL result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v24 = sub_1C1520A9C(), BOOL result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v25 = sub_1C1520A9C(), BOOL result = 0, (v25 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (v26 = sub_1C1520A9C(), BOOL result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v27 = *(void *)(a1 + 80);
          uint64_t v28 = *(void *)(a2 + 80);
          if (!v27)
          {
            if (v28) {
              return 0;
            }
            goto LABEL_23;
          }
          if (!v28) {
            return 0;
          }
          if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && v27 == v28
            || (v29 = sub_1C1520A9C(), BOOL result = 0, (v29 & 1) != 0))
          {
LABEL_23:
            if (*(unsigned __int8 *)(a1 + 88) != *(unsigned __int8 *)(a2 + 88)) {
              return 0;
            }
            uint64_t v43 = v5;
            uint64_t v45 = *(void *)(a1 + 96);
            uint64_t v30 = *(void *)(a2 + 96);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v44 = sub_1C00AC354(v45, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v44 & 1) == 0) {
              return 0;
            }
            uint64_t v31 = type metadata accessor for FormatCompilerEnumProperty(0);
            uint64_t v32 = a1 + *(int *)(v31 + 48);
            uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE0C0DC(v32, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE0C0DC(a2 + *(int *)(v31 + 48), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v33);
            uint64_t v34 = (uint64_t)&v12[*(int *)(v10 + 48)];
            sub_1BFE0C0DC((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v33);
            sub_1BFE0C0DC((uint64_t)v18, v34, (unint64_t *)&qword_1EB884FE0, v33);
            uint64_t v35 = v43;
            char v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
            if (v36((uint64_t)v12, 1, v4) == 1)
            {
              char v37 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
              if (v36(v34, 1, v4) == 1)
              {
                sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                return 1;
              }
            }
            else
            {
              sub_1BFE0C0DC((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              if (v36(v34, 1, v4) != 1)
              {
                (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v7, v34, v4);
                sub_1BFF87924(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                char v39 = sub_1C151E5CC();
                char v40 = *(void (**)(char *, uint64_t))(v35 + 8);
                v40(v7, v4);
                uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v41);
                v40(v15, v4);
                sub_1BFF514E8((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v41);
                return (v39 & 1) != 0;
              }
              uint64_t v38 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFF514E8((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFF514E8((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v38);
              (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v4);
            }
            sub_1C132BBC4((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            return 0;
          }
        }
      }
    }
  }
  return result;
}

BOOL _s8NewsFeed22FormatCompilerPropertyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v95 = a1;
  uint64_t v96 = a2;
  sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v89 = (uint64_t)&v79 - v3;
  sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v88 = (uint64_t)&v79 - v5;
  sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v87 = (uint64_t)&v79 - v7;
  sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v86 = (uint64_t)&v79 - v9;
  sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v85 = (uint64_t)&v79 - v11;
  sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v84 = (uint64_t)&v79 - v13;
  uint64_t v14 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v83 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v82 = (uint64_t)&v79 - v17;
  sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v81 = (uint64_t)&v79 - v19;
  sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v80 = (uint64_t)&v79 - v21;
  uint64_t v22 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1F4188790](v22);
  uint64_t v94 = (uint64_t)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v93 = (uint64_t)&v79 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v92 = (uint64_t)&v79 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v90 = (uint64_t)&v79 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v79 - v31;
  MEMORY[0x1F4188790](v33);
  uint64_t v91 = (uint64_t)&v79 - v34;
  MEMORY[0x1F4188790](v35);
  char v37 = (char *)&v79 - v36;
  MEMORY[0x1F4188790](v38);
  char v40 = (char *)&v79 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)&v79 - v42;
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)&v79 - v45;
  sub_1C132BAFC();
  MEMORY[0x1F4188790](v47 - 8);
  uint64_t v49 = (char *)&v79 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (uint64_t)&v49[*(int *)(v50 + 56)];
  sub_1BFE82BD0(v95, (uint64_t)v49, type metadata accessor for FormatCompilerProperty);
  sub_1BFE82BD0(v96, v51, type metadata accessor for FormatCompilerProperty);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1BFE82BD0((uint64_t)v49, (uint64_t)v43, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v52 = &qword_1EB88DED0;
        char v53 = &type metadata for FormatColor;
        uint64_t v54 = sub_1C003F2E8;
        uint64_t v55 = v81;
        sub_1C131E69C(v51, v81, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
        BOOL v56 = sub_1C132094C((uint64_t)v43, v55);
        sub_1C131E720(v55, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v57 = (uint64_t)v43;
        goto LABEL_24;
      }
      uint64_t v72 = &qword_1EB88DED0;
      uint64_t v73 = &type metadata for FormatColor;
      uint64_t v74 = sub_1C003F2E8;
      uint64_t v75 = (uint64_t)v43;
      goto LABEL_35;
    case 2u:
      sub_1BFE82BD0((uint64_t)v49, (uint64_t)v40, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v58 = v82;
        sub_1BFE30960(v51, v82, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82C58);
        BOOL v56 = sub_1C1320FB8((uint64_t)v40, v58);
        uint64_t v59 = sub_1BFE82C58;
        sub_1C131E840(v58, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82C58);
        uint64_t v60 = (uint64_t)v40;
        uint64_t v61 = &qword_1EB88DE90;
        goto LABEL_18;
      }
      sub_1C131E840((uint64_t)v40, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82C58);
      goto LABEL_36;
    case 3u:
      sub_1BFE82BD0((uint64_t)v49, (uint64_t)v37, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v62 = v83;
        sub_1C131E77C(v51, v83);
        BOOL v56 = _s8NewsFeed26FormatCompilerEnumPropertyV2eeoiySbAC_ACtFZ_0((uint64_t)v37, v62);
        sub_1C131E7E0(v62, type metadata accessor for FormatCompilerEnumProperty);
        sub_1C131E7E0((uint64_t)v37, type metadata accessor for FormatCompilerEnumProperty);
        uint64_t v63 = type metadata accessor for FormatCompilerProperty;
        goto LABEL_37;
      }
      sub_1C131E7E0((uint64_t)v37, type metadata accessor for FormatCompilerEnumProperty);
      goto LABEL_36;
    case 4u:
      uint64_t v64 = v91;
      sub_1BFE82BD0((uint64_t)v49, v91, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v52 = &qword_1EB88DEA0;
        char v53 = (ValueMetadata *)MEMORY[0x1E4FBC958];
        uint64_t v54 = sub_1C0092008;
        uint64_t v65 = v84;
        sub_1C131E69C(v51, v84, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
        BOOL v66 = sub_1C1321A20(v64, v65);
        goto LABEL_23;
      }
      uint64_t v72 = &qword_1EB88DEA0;
      uint64_t v73 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      int v76 = sub_1C0092008;
      goto LABEL_34;
    case 5u:
      sub_1BFE82BD0((uint64_t)v49, (uint64_t)v32, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v67 = v85;
        sub_1C087DA18(v51, v85);
        BOOL v56 = sub_1C1322024((uint64_t)v32, v67);
        sub_1C087DE28(v67);
        sub_1C087DE28((uint64_t)v32);
        uint64_t v63 = type metadata accessor for FormatCompilerProperty;
        goto LABEL_37;
      }
      sub_1C087DE28((uint64_t)v32);
      goto LABEL_36;
    case 6u:
      uint64_t v68 = v90;
      sub_1BFE82BD0((uint64_t)v49, v90, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v69 = v86;
        sub_1BFE83E80(v51, v86);
        BOOL v56 = sub_1C132261C(v68, v69);
        sub_1BFE86F20(v69);
        sub_1BFE86F20(v68);
        uint64_t v63 = type metadata accessor for FormatCompilerProperty;
        goto LABEL_37;
      }
      sub_1BFE86F20(v68);
      goto LABEL_36;
    case 7u:
      uint64_t v70 = v92;
      sub_1BFE82BD0((uint64_t)v49, v92, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        sub_1C131E840(v70, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82A10);
        goto LABEL_36;
      }
      uint64_t v71 = v87;
      sub_1BFE30960(v51, v87, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82A10);
      BOOL v56 = sub_1C1322C34(v70, v71);
      uint64_t v59 = sub_1BFE82A10;
      sub_1C131E840(v71, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82A10);
      uint64_t v60 = v70;
      uint64_t v61 = &qword_1EB88DE80;
LABEL_18:
      sub_1C131E840(v60, (uint64_t)v61, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))v59);
      uint64_t v63 = type metadata accessor for FormatCompilerProperty;
      goto LABEL_37;
    case 8u:
      uint64_t v64 = v93;
      sub_1BFE82BD0((uint64_t)v49, v93, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v52 = &qword_1EB88DEC0;
        char v53 = &type metadata for FormatFont;
        uint64_t v54 = sub_1C0084C58;
        uint64_t v65 = v88;
        sub_1C131E69C(v51, v88, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont);
        BOOL v66 = sub_1C132369C(v64, v65);
        goto LABEL_23;
      }
      uint64_t v72 = &qword_1EB88DEC0;
      uint64_t v73 = &type metadata for FormatFont;
      int v76 = sub_1C0084C58;
      goto LABEL_34;
    case 9u:
      uint64_t v64 = v94;
      sub_1BFE82BD0((uint64_t)v49, v94, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v52 = (unint64_t *)&unk_1EB88DEB0;
        char v53 = &type metadata for FormatAsyncImageContent;
        uint64_t v54 = sub_1C0036630;
        uint64_t v65 = v89;
        sub_1C131E69C(v51, v89, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent);
        BOOL v66 = sub_1C1323D08(v64, v65);
LABEL_23:
        BOOL v56 = v66;
        sub_1C131E720(v65, v52, (uint64_t (*)(void))v54, (uint64_t)v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v57 = v64;
LABEL_24:
        sub_1C131E720(v57, v52, (uint64_t (*)(void))v54, (uint64_t)v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v63 = type metadata accessor for FormatCompilerProperty;
        goto LABEL_37;
      }
      uint64_t v72 = (unint64_t *)&unk_1EB88DEB0;
      uint64_t v73 = &type metadata for FormatAsyncImageContent;
      int v76 = sub_1C0036630;
LABEL_34:
      uint64_t v74 = v76;
      uint64_t v75 = v64;
LABEL_35:
      sub_1C131E720(v75, v72, (uint64_t (*)(void))v74, (uint64_t)v73, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_36;
    default:
      sub_1BFE82BD0((uint64_t)v49, (uint64_t)v46, type metadata accessor for FormatCompilerProperty);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1BFE87264((uint64_t)v46);
LABEL_36:
        BOOL v56 = 0;
        uint64_t v63 = (uint64_t (*)(void))sub_1C132BAFC;
      }
      else
      {
        uint64_t v78 = v80;
        sub_1BFE86E90(v51, v80);
        BOOL v56 = sub_1C1320340((uint64_t)v46, v78);
        sub_1BFE87264(v78);
        sub_1BFE87264((uint64_t)v46);
        uint64_t v63 = type metadata accessor for FormatCompilerProperty;
      }
LABEL_37:
      sub_1C131E7E0((uint64_t)v49, v63);
      return v56;
  }
}

uint64_t sub_1C1326888(uint64_t a1)
{
  uint64_t result = sub_1BFF87924(&qword_1EA1AE3A0, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C13268E0(void *a1)
{
  a1[1] = sub_1BFF87924(&qword_1EB877430, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty);
  a1[2] = sub_1BFF87924(&qword_1EB870D70, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty);
  uint64_t result = sub_1BFF87924(&qword_1EA1AE3A8, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty);
  a1[3] = result;
  return result;
}

uint64_t sub_1C132698C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C13269C8(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1C1326A48(uint64_t a1)
{
  uint64_t result = sub_1BFF87924(&qword_1EA1AE3B0, (void (*)(uint64_t))type metadata accessor for FormatCompilerEnumProperty);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1326AA0(void *a1)
{
  a1[1] = sub_1BFF87924(&qword_1EB87FF00, (void (*)(uint64_t))type metadata accessor for FormatCompilerEnumProperty);
  a1[2] = sub_1BFF87924(&qword_1EB8608E8, (void (*)(uint64_t))type metadata accessor for FormatCompilerEnumProperty);
  uint64_t result = sub_1BFF87924(&qword_1EA1AE3B8, (void (*)(uint64_t))type metadata accessor for FormatCompilerEnumProperty);
  a1[3] = result;
  return result;
}

uint64_t sub_1C1326B54()
{
  return 16;
}

__n128 sub_1C1326B60(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1326B6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = FormatCompilerPrimitiveProperty.required.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C1326B9C(unsigned __int8 *a1)
{
  return FormatCompilerPrimitiveProperty.required.setter(*a1);
}

uint64_t sub_1C1326BC4()
{
  return 16;
}

__n128 sub_1C1326BD0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1326BDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatCompilerPrimitiveProperty();
  uint64_t result = FormatCompilerPrimitiveProperty.deprecated.getter(v2);
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C1326C1C(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = type metadata accessor for FormatCompilerPrimitiveProperty();
  return FormatCompilerPrimitiveProperty.deprecated.setter(v1, v2);
}

uint64_t sub_1C1326C5C()
{
  return 16;
}

__n128 sub_1C1326C68(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1326C7C()
{
  return 16;
}

__n128 sub_1C1326C88(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C1326C94@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1326CA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 48) = v4;
  *(void *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1C1326CE4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 64);
  return result;
}

unsigned char *sub_1C1326CF0(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 64) = *result;
  return result;
}

uint64_t sub_1C1326CFC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 88);
  return result;
}

unsigned char *sub_1C1326D08(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 88) = *result;
  return result;
}

uint64_t sub_1C1326D14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1326D20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 96) = v3;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatCompilerProperty(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v17;
        uint64_t v18 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v18;
        uint64_t v19 = a2[4];
        uint64_t v20 = a2[5];
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        uint64_t v21 = a2[7];
        *(void *)(a1 + 32) = v19;
        *(void *)(a1 + 40) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v21 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 56) = v21;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(void *)(a1 + 72) = a2[9];
        sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v23 = *(int *)(v22 + 60);
        uint64_t v24 = (void *)(a1 + v23);
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_1C1518CDC();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (!v28(v25, 1, v26)) {
          goto LABEL_41;
        }
        goto LABEL_34;
      case 2u:
        uint64_t v29 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v29;
        uint64_t v30 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v30;
        uint64_t v31 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v31;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v33 = v32[12];
        uint64_t v104 = v32;
        __dsta = (void *)(a1 + v33);
        uint64_t v34 = (char *)a2 + v33;
        uint64_t v35 = sub_1C151631C();
        uint64_t v36 = *(void *)(v35 - 8);
        char v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37(v34, 1, v35))
        {
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          memcpy(__dsta, v34, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v36 + 16))(__dsta, v34, v35);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(__dsta, 0, 1, v35);
        }
        *(unsigned char *)(a1 + v104[13]) = *((unsigned char *)a2 + v104[13]);
        *(void *)(a1 + v104[14]) = *(uint64_t *)((char *)a2 + v104[14]);
        uint64_t v97 = v104[15];
        uint64_t v24 = (void *)(a1 + v97);
        uint64_t v25 = (char *)a2 + v97;
        uint64_t v26 = sub_1C1518CDC();
        uint64_t v27 = *(void *)(v26 - 8);
        int v98 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (v98(v25, 1, v26)) {
          goto LABEL_34;
        }
        goto LABEL_41;
      case 3u:
        uint64_t v39 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v39;
        uint64_t v40 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v40;
        uint64_t v41 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v41;
        uint64_t v42 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v42;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v43 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v43;
        *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
        *(void *)(a1 + 96) = a2[12];
        uint64_t v44 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
        uint64_t v105 = (char *)a2 + v44;
        __dstb = (void *)(a1 + v44);
        uint64_t v45 = sub_1C1518CDC();
        uint64_t v46 = *(void *)(v45 - 8);
        long long v103 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v103(v105, 1, v45))
        {
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(__dstb, v105, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v46 + 16))(__dstb, v105, v45);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(__dstb, 0, 1, v45);
        }
        break;
      case 4u:
        uint64_t v48 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v48;
        uint64_t v49 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v49;
        uint64_t v50 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v50;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
        *(void *)(a1 + 72) = a2[9];
        sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v52 = *(int *)(v51 + 60);
        __dstc = (void *)(a1 + v52);
        char v53 = (char *)a2 + v52;
        uint64_t v54 = sub_1C1518CDC();
        uint64_t v55 = *(void *)(v54 - 8);
        BOOL v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56(v53, 1, v54)) {
          goto LABEL_15;
        }
        goto LABEL_36;
      case 5u:
        uint64_t v58 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v58;
        uint64_t v59 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v59;
        uint64_t v60 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v60;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
        *(void *)(a1 + 72) = a2[9];
        sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v62 = *(int *)(v61 + 60);
        __dstc = (void *)(a1 + v62);
        char v53 = (char *)a2 + v62;
        uint64_t v54 = sub_1C1518CDC();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v63(v53, 1, v54))
        {
LABEL_15:
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(__dstc, v53, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
LABEL_36:
          (*(void (**)(void *, char *, uint64_t))(v55 + 16))(__dstc, v53, v54);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(__dstc, 0, 1, v54);
        }
        break;
      case 6u:
        uint64_t v64 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v64;
        uint64_t v65 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v65;
        uint64_t v66 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v66;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        uint64_t v67 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v67;
        *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
        *(void *)(a1 + 80) = a2[10];
        sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v69 = *(int *)(v68 + 60);
        __dst = (void *)(a1 + v69);
        uint64_t v11 = (char *)a2 + v69;
        uint64_t v12 = sub_1C1518CDC();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70(v11, 1, v12)) {
          goto LABEL_4;
        }
        goto LABEL_30;
      case 7u:
        uint64_t v71 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v71;
        uint64_t v72 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v72;
        uint64_t v73 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v73;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v75 = v74[12];
        uint64_t v106 = v74;
        __dstd = (void *)(a1 + v75);
        int v76 = (char *)a2 + v75;
        uint64_t v77 = sub_1C1515FDC();
        uint64_t v78 = *(void *)(v77 - 8);
        uint64_t v79 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v78 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v79(v76, 1, v77))
        {
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(__dstd, v76, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v78 + 16))(__dstd, v76, v77);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(__dstd, 0, 1, v77);
        }
        *(unsigned char *)(a1 + v106[13]) = *((unsigned char *)a2 + v106[13]);
        *(void *)(a1 + v106[14]) = *(uint64_t *)((char *)a2 + v106[14]);
        uint64_t v100 = v106[15];
        uint64_t v24 = (void *)(a1 + v100);
        uint64_t v25 = (char *)a2 + v100;
        uint64_t v26 = sub_1C1518CDC();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v101 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (!v101(v25, 1, v26)) {
          goto LABEL_41;
        }
        goto LABEL_34;
      case 8u:
        uint64_t v81 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v81;
        uint64_t v82 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v82;
        uint64_t v83 = a2[4];
        uint64_t v84 = a2[5];
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        uint64_t v85 = a2[7];
        *(void *)(a1 + 32) = v83;
        *(void *)(a1 + 40) = v84;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v85 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 56) = v85;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(void *)(a1 + 72) = a2[9];
        sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v87 = *(int *)(v86 + 60);
        uint64_t v24 = (void *)(a1 + v87);
        uint64_t v25 = (char *)a2 + v87;
        uint64_t v26 = sub_1C1518CDC();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v88 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (v88(v25, 1, v26)) {
          goto LABEL_34;
        }
        goto LABEL_41;
      case 9u:
        uint64_t v89 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v89;
        uint64_t v90 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v90;
        uint64_t v91 = a2[4];
        uint64_t v92 = a2[5];
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        uint64_t v93 = a2[7];
        *(void *)(a1 + 32) = v91;
        *(void *)(a1 + 40) = v92;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v93 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 56) = v93;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(void *)(a1 + 72) = a2[9];
        sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v95 = *(int *)(v94 + 60);
        uint64_t v24 = (void *)(a1 + v95);
        uint64_t v25 = (char *)a2 + v95;
        uint64_t v26 = sub_1C1518CDC();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v96 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        if (v96(v25, 1, v26))
        {
LABEL_34:
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v24, v25, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
LABEL_41:
          (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        uint64_t v8 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v8;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(_WORD *)(a1 + 49) = *(_WORD *)((char *)a2 + 49);
        *(void *)(a1 + 56) = a2[7];
        sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v10 = *(int *)(v9 + 60);
        __dst = (void *)(a1 + v10);
        uint64_t v11 = (char *)a2 + v10;
        uint64_t v12 = sub_1C1518CDC();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v14(v11, 1, v12))
        {
LABEL_4:
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
LABEL_30:
          (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for FormatCompilerProperty(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C131E7E0(a1, type metadata accessor for FormatCompilerProperty);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        uint64_t v10 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v10 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 56) = v10;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v12 = *(int *)(v11 + 60);
        uint64_t v13 = (void *)(a1 + v12);
        uint64_t v14 = (const void *)(a2 + v12);
        uint64_t v15 = sub_1C1518CDC();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
        swift_bridgeObjectRetain();
        if (v17(v14, 1, v15)) {
          goto LABEL_36;
        }
        goto LABEL_29;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v19 = v18;
        uint64_t v20 = v18[12];
        uint64_t v64 = (const void *)(a2 + v20);
        __dsta = (void *)(a1 + v20);
        uint64_t v21 = sub_1C151631C();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23(v64, 1, v21))
        {
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          memcpy(__dsta, v64, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(__dsta, v64, v21);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dsta, 0, 1, v21);
        }
        *(unsigned char *)(a1 + v19[13]) = *(unsigned char *)(a2 + v19[13]);
        *(void *)(a1 + v19[14]) = *(void *)(a2 + v19[14]);
        uint64_t v59 = v19[15];
        goto LABEL_35;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        uint64_t v25 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
        __dstb = (void *)(a1 + v25);
        uint64_t v26 = (const void *)(a2 + v25);
        uint64_t v27 = sub_1C1518CDC();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v63(v26, 1, v27)) {
          goto LABEL_18;
        }
        (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(__dstb, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(__dstb, 0, 1, v27);
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        uint64_t v29 = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v29;
        *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        goto LABEL_15;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        uint64_t v31 = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v31;
        *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
LABEL_15:
        uint64_t v32 = *(int *)(v30 + 60);
        __dst = (void *)(a1 + v32);
        uint64_t v6 = (const void *)(a2 + v32);
        uint64_t v7 = sub_1C1518CDC();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33(v6, 1, v7)) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v39 = *(int *)(v38 + 60);
        __dstb = (void *)(a1 + v39);
        uint64_t v26 = (const void *)(a2 + v39);
        uint64_t v40 = sub_1C1518CDC();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v42 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v42(v26, 1, v40))
        {
LABEL_18:
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          size_t v35 = *(void *)(*(void *)(v43 - 8) + 64);
          uint64_t v36 = __dstb;
          char v37 = v26;
          goto LABEL_19;
        }
        (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(__dstb, v26, v40);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(__dstb, 0, 1, v40);
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v45 = v44[12];
        uint64_t v65 = v44;
        __dstc = (void *)(a1 + v45);
        uint64_t v46 = (const void *)(a2 + v45);
        uint64_t v47 = sub_1C1515FDC();
        uint64_t v48 = *(void *)(v47 - 8);
        uint64_t v49 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49(v46, 1, v47))
        {
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(__dstc, v46, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(__dstc, v46, v47);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(__dstc, 0, 1, v47);
        }
        *(unsigned char *)(a1 + v65[13]) = *(unsigned char *)(a2 + v65[13]);
        *(void *)(a1 + v65[14]) = *(void *)(a2 + v65[14]);
        uint64_t v59 = v65[15];
LABEL_35:
        uint64_t v13 = (void *)(a1 + v59);
        uint64_t v14 = (const void *)(a2 + v59);
        uint64_t v15 = sub_1C1518CDC();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
        swift_bridgeObjectRetain();
        if (v60(v14, 1, v15)) {
          goto LABEL_36;
        }
        goto LABEL_29;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        uint64_t v51 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v51 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 56) = v51;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v52 = &qword_1EB88DEC0;
        char v53 = &type metadata for FormatFont;
        uint64_t v54 = sub_1C0084C58;
        goto LABEL_28;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        uint64_t v55 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v55 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 56) = v55;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v52 = (unint64_t *)&unk_1EB88DEB0;
        char v53 = &type metadata for FormatAsyncImageContent;
        uint64_t v54 = sub_1C0036630;
LABEL_28:
        sub_1BFF014AC(0, v52, (uint64_t (*)(void))v54, (uint64_t)v53, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v57 = *(int *)(v56 + 60);
        uint64_t v13 = (void *)(a1 + v57);
        uint64_t v14 = (const void *)(a2 + v57);
        uint64_t v15 = sub_1C1518CDC();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
        swift_bridgeObjectRetain();
        if (v58(v14, 1, v15))
        {
LABEL_36:
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v13, v14, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
LABEL_29:
          (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
        *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v5 = *(int *)(v4 + 60);
        __dst = (void *)(a1 + v5);
        uint64_t v6 = (const void *)(a2 + v5);
        uint64_t v7 = sub_1C1518CDC();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9(v6, 1, v7))
        {
LABEL_16:
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          size_t v35 = *(void *)(*(void *)(v34 - 8) + 64);
          uint64_t v36 = __dst;
          char v37 = v6;
LABEL_19:
          memcpy(v36, v37, v35);
        }
        else
        {
LABEL_4:
          (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(__dst, v6, v7);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for FormatCompilerProperty(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v9 = &qword_1EB88DED0;
      uint64_t v10 = &type metadata for FormatColor;
      uint64_t v11 = sub_1C003F2E8;
      goto LABEL_16;
    case 2u:
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v14 = v13;
      uint64_t v15 = v13[12];
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = (const void *)(a2 + v15);
      uint64_t v18 = sub_1C151631C();
      uint64_t v19 = *(void *)(v18 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
        goto LABEL_18;
      }
      uint64_t v20 = &qword_1EB871180;
      uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
      goto LABEL_13;
    case 3u:
      long long v22 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v22;
      long long v23 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v23;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      uint64_t v24 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
      goto LABEL_20;
    case 4u:
      long long v25 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v25;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v9 = &qword_1EB88DEA0;
      uint64_t v10 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v11 = sub_1C0092008;
      goto LABEL_16;
    case 5u:
      long long v26 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v26;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v5 = &qword_1EB88DF00;
      uint64_t v6 = MEMORY[0x1E4FBB550];
      uint64_t v7 = &protocol witness table for Int;
      goto LABEL_10;
    case 6u:
      long long v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v27;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v5 = &qword_1EB88DEE0;
      uint64_t v6 = MEMORY[0x1E4FBB1A0];
      uint64_t v7 = &protocol witness table for String;
      goto LABEL_10;
    case 7u:
      long long v29 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v29;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v14 = v30;
      uint64_t v31 = v30[12];
      uint64_t v16 = (void *)(a1 + v31);
      uint64_t v17 = (const void *)(a2 + v31);
      uint64_t v18 = sub_1C1515FDC();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = &qword_1EB8948A0;
        uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_13:
        sub_1BFE79E3C(0, (unint64_t *)v20, v21);
        memcpy(v16, v17, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
LABEL_18:
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *(unsigned char *)(a1 + v14[13]) = *(unsigned char *)(a2 + v14[13]);
      *(void *)(a1 + v14[14]) = *(void *)(a2 + v14[14]);
      uint64_t v24 = v14[15];
      goto LABEL_20;
    case 8u:
      long long v33 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v33;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v9 = &qword_1EB88DEC0;
      uint64_t v10 = &type metadata for FormatFont;
      uint64_t v11 = sub_1C0084C58;
      goto LABEL_16;
    case 9u:
      long long v34 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v34;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v9 = (unint64_t *)&unk_1EB88DEB0;
      uint64_t v10 = &type metadata for FormatAsyncImageContent;
      uint64_t v11 = sub_1C0036630;
LABEL_16:
      sub_1BFF014AC(0, v9, (uint64_t (*)(void))v11, (uint64_t)v10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_17;
    default:
      long long v4 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v4;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v5 = (unint64_t *)&unk_1EB88DEF0;
      uint64_t v6 = MEMORY[0x1E4FBB390];
      uint64_t v7 = &protocol witness table for Bool;
LABEL_10:
      sub_1BFE82970(0, v5, v6, (uint64_t)v7, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
LABEL_17:
      uint64_t v24 = *(int *)(v28 + 60);
LABEL_20:
      size_t v35 = (void *)(a1 + v24);
      uint64_t v36 = (const void *)(a2 + v24);
      uint64_t v37 = sub_1C1518CDC();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v35, v36, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithTake for FormatCompilerProperty(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C131E7E0(a1, type metadata accessor for FormatCompilerProperty);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v9 = &qword_1EB88DED0;
        uint64_t v10 = &type metadata for FormatColor;
        uint64_t v11 = sub_1C003F2E8;
        goto LABEL_17;
      case 2u:
        long long v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v12;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v14 = v13;
        uint64_t v15 = v13[12];
        uint64_t v16 = (void *)(a1 + v15);
        uint64_t v17 = (const void *)(a2 + v15);
        uint64_t v18 = sub_1C151631C();
        uint64_t v19 = *(void *)(v18 - 8);
        if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
          goto LABEL_19;
        }
        uint64_t v20 = &qword_1EB871180;
        uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
        goto LABEL_14;
      case 3u:
        long long v22 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v22;
        long long v23 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v23;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        uint64_t v24 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
        goto LABEL_21;
      case 4u:
        long long v25 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v25;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v9 = &qword_1EB88DEA0;
        uint64_t v10 = (ValueMetadata *)MEMORY[0x1E4FBC958];
        uint64_t v11 = sub_1C0092008;
        goto LABEL_17;
      case 5u:
        long long v26 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v26;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v5 = &qword_1EB88DF00;
        uint64_t v6 = MEMORY[0x1E4FBB550];
        uint64_t v7 = &protocol witness table for Int;
        goto LABEL_11;
      case 6u:
        long long v27 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v27;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        uint64_t v5 = &qword_1EB88DEE0;
        uint64_t v6 = MEMORY[0x1E4FBB1A0];
        uint64_t v7 = &protocol witness table for String;
        goto LABEL_11;
      case 7u:
        long long v29 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v29;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        uint64_t v14 = v30;
        uint64_t v31 = v30[12];
        uint64_t v16 = (void *)(a1 + v31);
        uint64_t v17 = (const void *)(a2 + v31);
        uint64_t v18 = sub_1C1515FDC();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = &qword_1EB8948A0;
          uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_14:
          sub_1BFE79E3C(0, (unint64_t *)v20, v21);
          memcpy(v16, v17, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
LABEL_19:
          (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        *(unsigned char *)(a1 + v14[13]) = *(unsigned char *)(a2 + v14[13]);
        *(void *)(a1 + v14[14]) = *(void *)(a2 + v14[14]);
        uint64_t v24 = v14[15];
        goto LABEL_21;
      case 8u:
        long long v33 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v33;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v9 = &qword_1EB88DEC0;
        uint64_t v10 = &type metadata for FormatFont;
        uint64_t v11 = sub_1C0084C58;
        goto LABEL_17;
      case 9u:
        long long v34 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v34;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v9 = (unint64_t *)&unk_1EB88DEB0;
        uint64_t v10 = &type metadata for FormatAsyncImageContent;
        uint64_t v11 = sub_1C0036630;
LABEL_17:
        sub_1BFF014AC(0, v9, (uint64_t (*)(void))v11, (uint64_t)v10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
        goto LABEL_18;
      default:
        long long v4 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v4;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        uint64_t v5 = (unint64_t *)&unk_1EB88DEF0;
        uint64_t v6 = MEMORY[0x1E4FBB390];
        uint64_t v7 = &protocol witness table for Bool;
LABEL_11:
        sub_1BFE82970(0, v5, v6, (uint64_t)v7, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
LABEL_18:
        uint64_t v24 = *(int *)(v28 + 60);
LABEL_21:
        size_t v35 = (void *)(a1 + v24);
        uint64_t v36 = (const void *)(a2 + v24);
        uint64_t v37 = sub_1C1518CDC();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
        {
          sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v35, v36, v37);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        }
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t *sub_1C1329C30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v31 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v7 = *(void *)(v5 + 64);
  }
  else {
    size_t v7 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v32 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v32 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v10 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v10 = *(void *)(v8 + 64) + 1;
  }
  if ((v9 | (unint64_t)v6) > 7
    || ((*(_DWORD *)(v8 + 80) | v6) & 0x100000) != 0
    || v10
     + ((v9
       + ((((v6 + 49) & ~(unint64_t)v6) + v7) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v9) > 0x18)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v14 = (uint64_t *)(v13
                    + (((v9 | v6) & 0xF8 ^ 0x1F8) & ((v9 | v6) + 16)));
    swift_retain();
  }
  else
  {
    size_t __n = v10;
    uint64_t v30 = ~v9;
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    unint64_t v18 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v18 = *(void *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
    uint64_t v20 = (void *)((v18 + v6 + 17) & ~(unint64_t)v6);
    uint64_t v21 = (const void *)((v19 + v6 + 17) & ~(unint64_t)v6);
    long long v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v21, 1, v31))
    {
      memcpy(v20, v21, v7);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v20, v21, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v20, 0, 1, v31);
    }
    *((unsigned char *)v20 + v7) = *((unsigned char *)v21 + v7);
    unint64_t v23 = ((unint64_t)v20 + v7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = ((unint64_t)v21 + v7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    long long v25 = (void *)((v23 + v9 + 16) & v30);
    long long v26 = (const void *)((v24 + v9 + 16) & v30);
    long long v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    uint64_t v14 = a1;
    if (v27(v26, 1, v32))
    {
      memcpy(v25, v26, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v25, v26, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v32);
    }
  }
  return v14;
}

void *sub_1C1329F60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  unint64_t v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  long long v12 = (char *)((v11 + 17 + v7) & ~v11);
  uint64_t v13 = (char *)((v11 + 17 + v8) & ~v11);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v13, 1, v9))
  {
    int v15 = *(_DWORD *)(v10 + 84);
    uint64_t v16 = *(void *)(v10 + 64);
    if (v15) {
      size_t v17 = *(void *)(v10 + 64);
    }
    else {
      size_t v17 = v16 + 1;
    }
    memcpy(v12, v13, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v13, v9);
    unint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v18 = v10 + 56;
    v19(v12, 0, 1, v9);
    int v15 = *(_DWORD *)(v18 + 28);
    uint64_t v16 = *(void *)(v18 + 8);
  }
  if (v15) {
    uint64_t v20 = v16;
  }
  else {
    uint64_t v20 = v16 + 1;
  }
  unint64_t v21 = (unint64_t)&v12[v20];
  unint64_t v22 = (unint64_t)&v13[v20];
  *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v25 = sub_1C1518CDC();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (void *)((v27 + 16 + v23) & ~v27);
  long long v29 = (const void *)((v27 + 16 + v24) & ~v27);
  uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  if (v30(v29, 1, v25))
  {
    if (*(_DWORD *)(v26 + 84)) {
      size_t v31 = *(void *)(v26 + 64);
    }
    else {
      size_t v31 = *(void *)(v26 + 64) + 1;
    }
    memcpy(v28, v29, v31);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v28, v29, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
  }
  return a1;
}

void *sub_1C132A1F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (char *)((v12 + 17 + v8) & ~v12);
  uint64_t v14 = (char *)((v12 + 17 + v9) & ~v12);
  int v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v9) = v15(v13, 1, v10);
  int v16 = v15(v14, 1, v10);
  if (v9)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v14, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      goto LABEL_12;
    }
    int v17 = *(_DWORD *)(v11 + 84);
    size_t v18 = *(void *)(v11 + 64);
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v13, v14, v10);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    int v17 = *(_DWORD *)(v11 + 84);
    size_t v18 = *(void *)(v11 + 64);
  }
  if (v17) {
    size_t v19 = v18;
  }
  else {
    size_t v19 = v18 + 1;
  }
  memcpy(v13, v14, v19);
LABEL_12:
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v20 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v11 + 64) + 1;
  }
  unint64_t v21 = (unint64_t)&v13[v20];
  unint64_t v22 = (unint64_t)&v14[v20];
  *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1C1518CDC();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (void *)((v27 + 16 + v23) & ~v27);
  long long v29 = (void *)((v27 + 16 + v24) & ~v27);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v31 = v30(v28, 1, v25);
  int v32 = v30(v29, 1, v25);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v28, v29, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
      return a1;
    }
    int v33 = *(_DWORD *)(v26 + 84);
    size_t v34 = *(void *)(v26 + 64);
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v28, v29, v25);
      return a1;
    }
    uint64_t v36 = *(void (**)(void *, uint64_t))(v26 + 8);
    uint64_t v35 = v26 + 8;
    v36(v28, v25);
    int v33 = *(_DWORD *)(v35 + 76);
    size_t v34 = *(void *)(v35 + 56);
  }
  if (v33) {
    size_t v37 = v34;
  }
  else {
    size_t v37 = v34 + 1;
  }
  memcpy(v28, v29, v37);
  return a1;
}

_OWORD *sub_1C132A57C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  unint64_t v6 = ((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v6 = *(_OWORD *)v7;
  *(unsigned char *)(v6 + 16) = *(unsigned char *)(v7 + 16);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (char *)((v10 + 17 + v6) & ~v10);
  uint64_t v12 = (char *)((v10 + 17 + v7) & ~v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8))
  {
    int v13 = *(_DWORD *)(v9 + 84);
    size_t v14 = *(void *)(v9 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v12, v8);
    int v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v16 = v9 + 56;
    v17(v11, 0, 1, v8);
    int v13 = *(_DWORD *)(v16 + 28);
    size_t v14 = *(void *)(v16 + 8);
  }
  if (v13) {
    size_t v18 = v14;
  }
  else {
    size_t v18 = v14 + 1;
  }
  unint64_t v19 = (unint64_t)&v11[v18];
  unint64_t v20 = (unint64_t)&v12[v18];
  *(unsigned char *)unint64_t v19 = *(unsigned char *)v20;
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v20 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v23 = sub_1C1518CDC();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = (void *)((v25 + 16 + v21) & ~v25);
  uint64_t v27 = (const void *)((v25 + 16 + v22) & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23))
  {
    if (*(_DWORD *)(v24 + 84)) {
      size_t v28 = *(void *)(v24 + 64);
    }
    else {
      size_t v28 = *(void *)(v24 + 64) + 1;
    }
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v26, v27, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
  }
  return a1;
}

void *sub_1C132A7D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  unint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  size_t v14 = (char *)((v13 + 17 + v9) & ~v13);
  size_t v15 = (char *)((v13 + 17 + v10) & ~v13);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v10) = v16(v14, 1, v11);
  int v17 = v16(v15, 1, v11);
  if (v10)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_12;
    }
    int v18 = *(_DWORD *)(v12 + 84);
    size_t v19 = *(void *)(v12 + 64);
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v14, v15, v11);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    int v18 = *(_DWORD *)(v12 + 84);
    size_t v19 = *(void *)(v12 + 64);
  }
  if (v18) {
    size_t v20 = v19;
  }
  else {
    size_t v20 = v19 + 1;
  }
  memcpy(v14, v15, v20);
LABEL_12:
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v21 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v12 + 64) + 1;
  }
  unint64_t v22 = (unint64_t)&v14[v21];
  unint64_t v23 = (unint64_t)&v15[v21];
  *(unsigned char *)unint64_t v22 = *(unsigned char *)v23;
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C1518CDC();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  long long v29 = (void *)((v28 + 16 + v24) & ~v28);
  uint64_t v30 = (void *)((v28 + 16 + v25) & ~v28);
  int v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v32 = v31(v29, 1, v26);
  int v33 = v31(v30, 1, v26);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v29, v30, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
      return a1;
    }
    int v34 = *(_DWORD *)(v27 + 84);
    size_t v35 = *(void *)(v27 + 64);
  }
  else
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v29, v30, v26);
      return a1;
    }
    size_t v37 = *(void (**)(void *, uint64_t))(v27 + 8);
    uint64_t v36 = v27 + 8;
    v37(v29, v26);
    int v34 = *(_DWORD *)(v36 + 76);
    size_t v35 = *(void *)(v36 + 56);
  }
  if (v34) {
    size_t v38 = v35;
  }
  else {
    size_t v38 = v35 + 1;
  }
  memcpy(v29, v30, v38);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for FormatCompilerEnumProperty(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v10 = *(int *)(a3 + 48);
    __dst = (void *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 96) = a2[12];
    uint64_t v12 = sub_1C1518CDC();
    uint64_t v16 = *(void *)(v12 - 8);
    int v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v11, 1, v12))
    {
      sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(__dst, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t initializeWithCopy for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(int *)(a3 + 48);
  __dst = (void *)(a1 + v9);
  uint64_t v10 = (const void *)(a2 + v9);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v11 = sub_1C1518CDC();
  uint64_t v14 = *(void *)(v11 - 8);
  size_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v10, 1, v11))
  {
    sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(__dst, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (const void *)(a2 + v6);
  uint64_t v8 = (void *)(a1 + v6);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
  {
    sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v8, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v8, v7, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 48);
  int v12 = (void *)(a1 + v11);
  int v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1C1518CDC();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1C132B4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C132B5A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C132B66C(uint64_t a1, uint64_t a2)
{
  sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C132B708(uint64_t a1, uint64_t a2)
{
  sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C132B7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C132B814(uint64_t a1, uint64_t a2)
{
  sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C132B8A4(uint64_t a1, uint64_t a2)
{
  sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C132B934(uint64_t a1, uint64_t a2)
{
  sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C132B9D0(uint64_t a1, uint64_t a2)
{
  sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C132BA6C(uint64_t a1, uint64_t a2)
{
  sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C132BAFC()
{
  if (!qword_1EA1AE3C0)
  {
    type metadata accessor for FormatCompilerProperty(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AE3C0);
    }
  }
}

void sub_1C132BB60(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1BFE79E3C(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C132BBC4(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C132BB60(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t static FormatCodingEmptyStringStrategy.defaultValue.getter()
{
  return 0;
}

BOOL static FormatCodingEmptyStringStrategy.shouldEncode(wrappedValue:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  return v2 != 0;
}

BOOL sub_1C132BC48(void *a1)
{
  unint64_t v1 = a1[1];
  uint64_t v2 = *a1 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  return v2 != 0;
}

ValueMetadata *type metadata accessor for FormatCodingEmptyStringStrategy()
{
  return &type metadata for FormatCodingEmptyStringStrategy;
}

id sub_1C132BC78(uint64_t a1)
{
  if (a1 == 1)
  {
    id result = objc_msgSend(v1, sel_contentMode);
    if (result == (id)7) {
      return result;
    }
    id result = objc_msgSend(v1, sel_contentMode);
    if (result == (id)4) {
      return result;
    }
    uint64_t v3 = 8;
    goto LABEL_10;
  }
  if (a1)
  {
    id result = (id)sub_1C152040C();
    __break(1u);
    return result;
  }
  id result = objc_msgSend(v1, sel_contentMode);
  if (result != (id)7)
  {
    id result = objc_msgSend(v1, sel_contentMode);
    if (result != (id)4)
    {
      uint64_t v3 = 7;
LABEL_10:
      return objc_msgSend(v1, sel_setContentMode_, v3);
    }
  }
  return result;
}

id sub_1C132BD84(uint64_t a1)
{
  return sub_1C132BC78(a1);
}

uint64_t FormatWebEmbedNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatWebEmbedNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 104);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatWebEmbedNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 96);
}

uint64_t FormatWebEmbedNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t FormatWebEmbedNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbedNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatWebEmbedNode.contentFrameIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNode.config.getter()
{
  return swift_retain();
}

unint64_t FormatWebEmbedNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 64);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatWebEmbedNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatWebEmbedNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatWebEmbedNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatWebEmbedNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatWebEmbedNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 104);
  *(void *)(v1 + 104) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatWebEmbedNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatWebEmbedNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatWebEmbedNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 128);
  *(void *)a1 = *(void *)(v1 + 120);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatWebEmbedNode.location.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 152) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNode.__allocating_init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, char a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21 = swift_allocObject();
  FormatWebEmbedNode.init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  return v21;
}

uint64_t FormatWebEmbedNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF322A8(*(void *)(v0 + 64));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 104));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatWebEmbedNode.__deallocating_deinit()
{
  FormatWebEmbedNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C132C4DC(uint64_t a1)
{
  uint64_t result = sub_1C132C5FC(&qword_1EA1AE3C8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C132C520(void *a1)
{
  a1[1] = sub_1C132C5FC(&qword_1EB87EC40);
  a1[2] = sub_1C132C5FC((unint64_t *)&unk_1EB860280);
  uint64_t result = sub_1C132C5FC(&qword_1EA1AE3D0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C132C5AC(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed18FormatWebEmbedNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C132C5B8(uint64_t a1)
{
  uint64_t result = sub_1C132C5FC(&qword_1EA1AE3D8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C132C5FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatWebEmbedNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C132C63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v52 = a5;
  uint64_t v50 = a2;
  uint64_t v49 = a1;
  uint64_t v51 = a7;
  uint64_t v18 = sub_1C1515FDC();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  unint64_t v23 = *(void **)(a4 + 16);
  uint64_t v24 = *(void *)(a4 + 24);
  uint64_t v25 = *(void *)(v22 + 40);
  if (v25)
  {
    uint64_t v58 = *(void **)(v22 + 32);
    uint64_t v59 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v47 = v58;
    uint64_t v46 = v59;
    unint64_t v23 = *(void **)(a4 + 16);
    uint64_t v24 = *(void *)(a4 + 24);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = v23;
    uint64_t v46 = v24;
  }
  uint64_t v26 = *(void *)(a4 + 72);
  uint64_t v48 = v23;
  if (v26)
  {
    uint64_t v27 = *(void *)(v26 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v45 = swift_allocObject();
  uint64_t v60 = v27;
  swift_beginAccess();
  uint64_t v44 = *(void *)(a4 + 96);
  swift_beginAccess();
  unint64_t v56 = *(void *)(a4 + 104);
  unint64_t v28 = v56;
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v28);
  sub_1BFE6EF70(a3, &v57);
  sub_1BFF0056C(v28);
  swift_beginAccess();
  int v43 = *(unsigned __int8 *)(a4 + 112);
  sub_1C1517EFC();
  uint64_t v29 = v54;
  uint64_t v30 = *(void *)(a4 + 48);
  uint64_t v42 = *(void *)(a4 + 40);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a6 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url, v18);
  uint64_t v31 = *(void *)(a4 + 120);
  char v55 = *(unsigned char *)(a4 + 128);
  uint64_t v53 = *(void *)(a4 + 64);
  uint64_t v54 = v31;
  swift_bridgeObjectRetain();
  char v32 = sub_1C14BD474();
  uint64_t v34 = *(void *)(a4 + 136);
  uint64_t v33 = *(void *)(a4 + 144);
  type metadata accessor for FormatWebEmbedNodeLayoutAttributes();
  swift_allocObject();
  size_t v35 = v21;
  uint64_t v36 = v52;
  swift_retain();
  uint64_t v37 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C1468DD8(v49, v37, v47, v46, (uint64_t)v48, v24, v36, &v60, a8, a9, a10, a11, v44, &v57, v43, v29, v42, v30, v35,
          &v54,
          v32 & 1,
          v34,
          v33);
  swift_release();
  uint64_t result = swift_release();
  uint64_t v40 = v45;
  *(void *)(v45 + 16) = v38;
  *uint64_t v51 = v40 | 0x1000000000000004;
  return result;
}

uint64_t sub_1C132CA40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C132CA90@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C132CAE0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return result;
}

uint64_t sub_1C132CB28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 96) = v2;
  return result;
}

unint64_t sub_1C132CB6C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 104);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C132CBBC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 112);
  return result;
}

uint64_t sub_1C132CC04(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 112) = v2;
  return result;
}

uint64_t sub_1C132CC48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatWebEmbedNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatWebEmbedNode);
}

uint64_t dispatch thunk of FormatWebEmbedNode.__allocating_init(identifier:content:contentFrameIdentifier:config:size:resize:adjustments:style:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:location:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1C132CCFC()
{
  swift_release();
  return swift_deallocObject();
}

Swift::Void __swiftcall FormatBlueprintViewSupplementaryViewProvider.register(in:)(UICollectionView *in)
{
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v3);
  (*(void (**)(UICollectionView *, uint64_t, uint64_t))(v4 + 8))(in, v3, v4);
}

uint64_t FormatBlueprintViewSupplementaryViewProvider.supplementaryView(section:layoutSection:view:supplementaryData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C006AD18(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v11 - 8);
  int v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0EF25F8();
  sub_1C151B63C();
  sub_1C132D79C((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C006AD18);
  uint64_t v14 = sub_1C132CED4(*(void *)&v10[*(int *)(v8 + 36)], *(void *)&v10[*(int *)(v8 + 40)], a4, v4, a3);
  sub_1C132DA0C((uint64_t)v10, (uint64_t (*)(void))sub_1C006AD18);
  return v14;
}

uint64_t sub_1C132CED4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v48 = a2;
  uint64_t v49 = a5;
  uint64_t v50 = a1;
  uint64_t v7 = type metadata accessor for FormatLayoutSectionDescriptor.Footer(0);
  uint64_t v46 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v47 = (uint64_t)&v45 - v11;
  uint64_t v12 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormatLayoutSectionDescriptor.Header(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v22 = sub_1C151C1FC();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151C10C();
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v25, v22);
  if (v26 == *MEMORY[0x1E4FAD2B0])
  {
    unint64_t v27 = sub_1C151C11C();
    if ((v27 & 0x8000000000000000) == 0)
    {
      if (v27 < *(void *)(v50 + 16))
      {
        sub_1C132D9A4(v50+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v27, (uint64_t)v21, type metadata accessor for FormatLayoutSectionDescriptor.Header);
        sub_1C132D9A4((uint64_t)v21, (uint64_t)v18, type metadata accessor for FormatLayoutSectionDescriptor.Header);
        sub_1C132D79C((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        uint64_t v28 = a4[7];
        uint64_t v29 = a4[8];
        __swift_project_boxed_opaque_existential_1(a4 + 4, v28);
        uint64_t v30 = swift_allocObject();
        swift_weakInit();
        uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v29 + 32);
        swift_retain();
        uint64_t v32 = v31(v49, a3, v14, sub_1C132D988, v30, v28, v29);
        swift_release();
        sub_1C132DA0C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        swift_release();
        uint64_t v33 = type metadata accessor for FormatLayoutSectionDescriptor.Header;
        uint64_t v34 = (uint64_t)v21;
LABEL_10:
        sub_1C132DA0C(v34, v33);
        return v32;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v26 == *MEMORY[0x1E4FAD2A8])
  {
    uint64_t v35 = sub_1C151C11C();
    uint64_t v36 = *(void *)(v50 + 16);
    BOOL v37 = __OFSUB__(v35, v36);
    unint64_t v38 = v35 - v36;
    if (!v37)
    {
      if ((v38 & 0x8000000000000000) == 0)
      {
        if (v38 < *(void *)(v48 + 16))
        {
          uint64_t v39 = v47;
          sub_1C132D9A4(v48+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v38, v47, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
          sub_1C132D9A4(v39, (uint64_t)v9, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
          sub_1C132D79C((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          uint64_t v40 = a4[7];
          uint64_t v41 = a4[8];
          __swift_project_boxed_opaque_existential_1(a4 + 4, v40);
          uint64_t v42 = swift_allocObject();
          swift_weakInit();
          int v43 = *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v41 + 32);
          swift_retain();
          uint64_t v32 = v43(v49, a3, v14, sub_1C132D988, v42, v40, v41);
          swift_release();
          sub_1C132DA0C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          swift_release();
          uint64_t v33 = type metadata accessor for FormatLayoutSectionDescriptor.Footer;
          uint64_t v34 = v39;
          goto LABEL_10;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

uint64_t FormatBlueprintViewSupplementaryViewProvider.deinit()
{
  sub_1C019B9B4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t FormatBlueprintViewSupplementaryViewProvider.__deallocating_deinit()
{
  sub_1C019B9B4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1C132D4D8()
{
  return sub_1C006AC14((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
}

uint64_t sub_1C132D520()
{
  return sub_1C006AC14((unint64_t *)&qword_1EB896870, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1C132D568()
{
  return sub_1C006AC14((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
}

uint64_t sub_1C132D5B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 32), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
}

uint64_t sub_1C132D610(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_1C006AD18(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a3;
  uint64_t v15 = *v4;
  sub_1C0EF25F8();
  sub_1C151B63C();
  sub_1C132D79C((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C006AD18);
  uint64_t v16 = sub_1C132CED4(*(void *)&v10[*(int *)(v8 + 36)], *(void *)&v10[*(int *)(v8 + 40)], a4, v15, v14);
  sub_1C132DA0C((uint64_t)v10, (uint64_t (*)(void))sub_1C006AD18);
  return v16;
}

uint64_t type metadata accessor for FormatBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t method lookup function for FormatBlueprintViewSupplementaryViewProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBlueprintViewSupplementaryViewProvider);
}

uint64_t sub_1C132D79C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C132D804()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C132D83C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = MEMORY[0x1C18C9C60](result + 16);
    if (v3)
    {
      uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
      uint64_t v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
      uint64_t result = swift_beginAccess();
      uint64_t v6 = v5[1];
      if (v6)
      {
        uint64_t v7 = *v5;
        if (MEMORY[0x1C18C9C60](v4 + 32))
        {
          uint64_t v8 = *(void *)(v4 + 40);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24);
          swift_bridgeObjectRetain();
          v10(a1, v7, v6, ObjectType, v8);
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        return swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C132D988(uint64_t a1)
{
  return sub_1C132D83C(a1);
}

uint64_t sub_1C132D9A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C132DA0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void __swiftcall GroupLayoutAttributes.init(frame:feedItemLayoutAttributes:feedItemSupplementaryAttributes:)(NewsFeed::GroupLayoutAttributes *__return_ptr retstr, __C::CGRect frame, Swift::OpaquePointer feedItemLayoutAttributes, Swift::OpaquePointer feedItemSupplementaryAttributes)
{
  CGFloat height = frame.size.height;
  CGFloat width = frame.size.width;
  CGFloat y = frame.origin.y;
  CGFloat x = frame.origin.x;
  sub_1C0DDE310();
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  uint64_t v10 = (void *)sub_1C151E91C();
  swift_bridgeObjectRelease();
  retstr->kind = NewsFeed_GroupLayoutAttributes_Kind_layout;
  retstr->frame.origin.CGFloat x = x;
  retstr->frame.origin.CGFloat y = y;
  retstr->frame.size.CGFloat width = width;
  retstr->frame.size.CGFloat height = height;
  retstr->feedItemLayoutAttributes._rawValue = v10;
  retstr->feedItemSupplementaryAttributes = feedItemSupplementaryAttributes;
}

void GroupLayoutAttributes.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

double GroupLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t GroupLayoutAttributes.feedItemLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GroupLayoutAttributes.feedItemSupplementaryAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL static GroupLayoutAttributes.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GroupLayoutAttributes.Kind.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t GroupLayoutAttributes.Kind.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C132DBD0()
{
  unint64_t result = qword_1EA1AE3E0;
  if (!qword_1EA1AE3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE3E0);
  }
  return result;
}

uint64_t destroy for GroupLayoutAttributes()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutAttributes()
{
  return &type metadata for GroupLayoutAttributes;
}

unsigned char *storeEnumTagSinglePayload for GroupLayoutAttributes.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C132DF00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutAttributes.Kind()
{
  return &type metadata for GroupLayoutAttributes.Kind;
}

uint64_t sub_1C132DF38()
{
  if ((sub_1C1517D3C() & 1) == 0) {
    sub_1C151EF4C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  if ((sub_1C1517D3C() & 1) == 0) {
    sub_1C151EF4C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 40;
}

BOOL static CGRect.< infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  if (a2 == a6) {
    return a1 <= a5;
  }
  else {
    return a2 < a6;
  }
}

double CGRect.area.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width = CGRectGetWidth(*(CGRect *)&a1);
  v10.origin.CGFloat x = a1;
  v10.origin.CGFloat y = a2;
  v10.size.CGFloat width = a3;
  v10.size.CGFloat height = a4;
  return Width * CGRectGetHeight(v10);
}

unint64_t sub_1C132E120()
{
  unint64_t result = qword_1EA1AE3E8;
  if (!qword_1EA1AE3E8)
  {
    type metadata accessor for CGRect(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE3E8);
  }
  return result;
}

BOOL sub_1C132E178(double *a1, double *a2)
{
  double v2 = a1[1];
  double v3 = a2[1];
  if (v2 == v3) {
    return *a1 <= *a2;
  }
  else {
    return v2 < v3;
  }
}

BOOL sub_1C132E198(double *a1, double *a2)
{
  double v2 = a1[1];
  double v3 = a2[1];
  if (v3 == v2) {
    return *a2 > *a1;
  }
  else {
    return v3 >= v2;
  }
}

BOOL sub_1C132E1B8(double *a1, double *a2)
{
  double v2 = a1[1];
  double v3 = a2[1];
  if (v2 == v3) {
    return *a1 > *a2;
  }
  else {
    return v2 >= v3;
  }
}

BOOL sub_1C132E1D8(double *a1, double *a2)
{
  double v2 = a1[1];
  double v3 = a2[1];
  if (v3 == v2) {
    return *a2 <= *a1;
  }
  else {
    return v3 < v2;
  }
}

uint64_t static FormatContentSubgroupFilterSelector.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C132E228()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = sub_1C0ED41AC();
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  v14[0] = v2;
  v14[1] = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1BFEF53C0(v14);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_10:
    uint64_t v12 = 0;
    goto LABEL_11;
  }
  unsigned int v6 = (uint64_t *)(v4 + 64);
  while (1)
  {
    uint64_t v7 = *(v6 - 1);
    uint64_t v8 = *v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1BFF36784(v3, v7);
    char v10 = sub_1BFEFAE14(v9, v7);
    swift_release();
    if (v10) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    v6 += 5;
    if (!--v5) {
      goto LABEL_10;
    }
  }
  char v11 = sub_1BFEFB810(v3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v12 = 1;
LABEL_11:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t FormatContentSubgroupFilterSelector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C132E3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C132E444(uint64_t a1)
{
  unint64_t v2 = sub_1C005CA2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C132E480(uint64_t a1)
{
  unint64_t v2 = sub_1C005CA2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1C132E4BC(void *a1)
{
  a1[1] = sub_1C0067C30();
  a1[2] = sub_1C0067C84();
  unint64_t result = sub_1C132E4F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C132E4F4()
{
  unint64_t result = qword_1EA1AE3F0;
  if (!qword_1EA1AE3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE3F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterSelector()
{
  return &type metadata for FormatContentSubgroupFilterSelector;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupFilterSelector.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C132E5F4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterSelector.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterSelector.CodingKeys;
}

unint64_t sub_1C132E630()
{
  unint64_t result = qword_1EA1AE3F8;
  if (!qword_1EA1AE3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE3F8);
  }
  return result;
}

void *sub_1C132E684(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    char v7 = (int *)type metadata accessor for FormatContent.Resolved();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v122 = v12;
    uint64_t v123 = v11;
    v12(v9, v10, v11);
    *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
    *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
    *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
    *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
    uint64_t v13 = v7[12];
    uint64_t v129 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v129;
    *(void *)((char *)a1 + v7[13]) = *(void *)((char *)a2 + v7[13]);
    uint64_t v124 = v7;
    uint64_t v14 = v7[14];
    uint64_t v131 = (void *)((char *)a1 + v14);
    long long v133 = a2;
    uint64_t v15 = (void *)((char *)a2 + v14);
    uint64_t v16 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    uint64_t v121 = *((void *)v16 - 1);
    uint64_t v126 = *(unsigned int (**)(void *, uint64_t, int *))(v121 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v17 = v129;
    swift_unknownObjectRetain();
    if (v126(v15, 1, v16))
    {
      sub_1BFF2ED84(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
      memcpy(v131, v15, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v19 = a2;
      uint64_t v20 = v124;
    }
    else
    {
      uint64_t v23 = v15[1];
      *uint64_t v131 = *v15;
      v131[1] = v23;
      uint64_t v24 = v16[5];
      uint64_t v25 = (void *)((char *)v131 + v24);
      uint64_t v130 = v15;
      int v26 = (char *)v15 + v24;
      uint64_t v27 = *(void *)((char *)v15 + v24 + 8);
      void *v25 = *(void *)((char *)v15 + v24);
      v25[1] = v27;
      uint64_t v28 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v29 = v28[5];
      uint64_t v127 = (char *)v25 + v29;
      uint64_t v119 = &v26[v29];
      uint64_t v30 = sub_1C1515FDC();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v127, v119, v30);
      uint64_t v33 = v28[6];
      uint64_t v34 = (char *)v25 + v33;
      uint64_t v35 = &v26[v33];
      uint64_t v116 = v30;
      uint64_t v115 = v32;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v26[v33], 1, v30))
      {
        sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
      }
      *(void *)((char *)v25 + v28[7]) = *(void *)&v26[v28[7]];
      uint64_t v37 = v28[8];
      unint64_t v38 = (void *)((char *)v25 + v37);
      uint64_t v39 = &v26[v37];
      uint64_t v120 = *((void *)v39 + 1);
      *unint64_t v38 = *(void *)v39;
      v38[1] = v120;
      uint64_t v40 = v28[9];
      uint64_t v41 = (void *)((char *)v25 + v40);
      uint64_t v42 = &v26[v40];
      uint64_t v43 = *((void *)v42 + 1);
      void *v41 = *(void *)v42;
      v41[1] = v43;
      *(void *)((char *)v25 + v28[10]) = *(void *)&v26[v28[10]];
      *(void *)((char *)v25 + v28[11]) = *(void *)&v26[v28[11]];
      *(void *)((char *)v25 + v28[12]) = *(void *)&v26[v28[12]];
      *(void *)((char *)v131 + v16[6]) = *(void *)((char *)v130 + v16[6]);
      *(void *)((char *)v131 + v16[7]) = *(void *)((char *)v130 + v16[7]);
      uint64_t v44 = v16[8];
      __dst = (void *)((char *)v131 + v44);
      uint64_t v118 = v16;
      uint64_t v45 = (void *)((char *)v130 + v44);
      uint64_t v46 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v47 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v48(v45, 1, v46))
      {
        sub_1BFF2ED84(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(__dst, v45, *(void *)(*(void *)(v49 - 8) + 64));
        uint64_t v19 = v133;
        uint64_t v50 = v118;
        uint64_t v51 = v130;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v53 = *v45;
        uint64_t v19 = v133;
        uint64_t v50 = v118;
        uint64_t v51 = v130;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v128 = v46;
          uint64_t v54 = v45[1];
          void *__dst = v53;
          __dst[1] = v54;
          uint64_t v55 = type metadata accessor for GenericDataVisualization();
          uint64_t v56 = *(int *)(v55 + 20);
          uint64_t v57 = (char *)__dst + v56;
          uint64_t v58 = (char *)v45 + v56;
          uint64_t v46 = v128;
          swift_bridgeObjectRetain();
          v115(v57, v58, v116);
          *(void *)((char *)__dst + *(int *)(v55 + 24)) = *(uint64_t *)((char *)v45 + *(int *)(v55 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *__dst = v53;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      uint64_t v59 = v50[9];
      uint64_t v60 = (char *)v131 + v59;
      uint64_t v61 = (char *)v51 + v59;
      sub_1BFEC84E0();
      uint64_t v63 = v62;
      uint64_t v64 = *(void *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v61, 1, v62))
      {
        sub_1BFF2ED84(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v60, v61, v63);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v60, 0, 1, v63);
      }
      uint64_t v20 = v124;
      (*(void (**)(void *, void, uint64_t, int *))(v121 + 56))(v131, 0, 1, v50);
    }
    uint64_t v66 = v20[15];
    uint64_t v67 = *(void **)((char *)v19 + v66);
    *(void *)((char *)a1 + v66) = v67;
    *((unsigned char *)a1 + v20[16]) = *((unsigned char *)v19 + v20[16]);
    *(void *)((char *)a1 + v20[17]) = *(void *)((char *)v19 + v20[17]);
    uint64_t v68 = v20[18];
    uint64_t v69 = (char *)a1 + v68;
    uint64_t v70 = (char *)v19 + v68;
    uint64_t v71 = sub_1C151D6DC();
    uint64_t v72 = *(void *)(v71 - 8);
    uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
    id v74 = v67;
    swift_bridgeObjectRetain();
    if (v73(v70, 1, v71))
    {
      sub_1BFF2ED84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
      memcpy(v69, v70, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    char v132 = (int *)type metadata accessor for FormatPluginData();
    uint64_t v76 = v132[5];
    uint64_t v77 = (char *)a1 + v76;
    uint64_t v78 = (char *)v19 + v76;
    uint64_t v79 = *(void **)((char *)v19 + v76);
    *(void *)((char *)a1 + v76) = v79;
    uint64_t v80 = (int *)type metadata accessor for FeedContext();
    uint64_t v81 = v80[5];
    uint64_t v82 = &v77[v81];
    uint64_t v83 = &v78[v81];
    uint64_t v84 = (int *)type metadata accessor for BundleSession();
    uint64_t v85 = *((void *)v84 - 1);
    uint64_t v86 = *(unsigned int (**)(char *, uint64_t, int *))(v85 + 48);
    id v87 = v79;
    if (v86(v83, 1, v84))
    {
      sub_1BFF2ED84(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
      memcpy(v82, v83, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v82 = *(void *)v83;
      v122(&v82[v84[5]], &v83[v84[5]], v123);
      v82[v84[6]] = v83[v84[6]];
      v82[v84[7]] = v83[v84[7]];
      *(_OWORD *)&v82[v84[8]] = *(_OWORD *)&v83[v84[8]];
      *(void *)&v82[v84[9]] = *(void *)&v83[v84[9]];
      v82[v84[10]] = v83[v84[10]];
      v82[v84[11]] = v83[v84[11]];
      uint64_t v89 = *(void (**)(char *, void, uint64_t, int *))(v85 + 56);
      swift_bridgeObjectRetain();
      v89(v82, 0, 1, v84);
    }
    v77[v80[6]] = v78[v80[6]];
    v77[v80[7]] = v78[v80[7]];
    v77[v80[8]] = v78[v80[8]];
    v77[v80[9]] = v78[v80[9]];
    *(void *)&v77[v80[10]] = *(void *)&v78[v80[10]];
    *(void *)&v77[v80[11]] = *(void *)&v78[v80[11]];
    uint64_t v90 = v80[12];
    uint64_t v91 = &v77[v90];
    uint64_t v92 = &v78[v90];
    uint64_t v93 = *(void *)&v78[v90 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v93 - 1) >= 3)
    {
      *(void *)uint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = v93;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
    }
    uint64_t v22 = a1;
    v77[v80[13]] = v78[v80[13]];
    uint64_t v94 = v80[14];
    uint64_t v95 = *(void **)&v78[v94];
    *(void *)&v77[v94] = v95;
    uint64_t v96 = v80[15];
    uint64_t v97 = &v77[v96];
    int v98 = &v78[v96];
    uint64_t v99 = *((void *)v98 + 1);
    *(void *)uint64_t v97 = *(void *)v98;
    *((void *)v97 + 1) = v99;
    uint64_t v100 = v132[6];
    uint64_t v101 = (char *)a1 + v100;
    long long v102 = (char *)v133 + v100;
    uint64_t v103 = *(void *)((char *)v133 + v100 + 24);
    id v104 = v95;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v103)
    {
      uint64_t v105 = *((void *)v102 + 4);
      *((void *)v101 + 3) = v103;
      *((void *)v101 + 4) = v105;
      (**(void (***)(char *, char *, uint64_t))(v103 - 8))(v101, v102, v103);
    }
    else
    {
      long long v106 = *((_OWORD *)v102 + 1);
      *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
      *((_OWORD *)v101 + 1) = v106;
      *((void *)v101 + 4) = *((void *)v102 + 4);
    }
    *((unsigned char *)a1 + v132[7]) = *((unsigned char *)v133 + v132[7]);
    uint64_t v107 = v132[8];
    uint64_t v108 = *(void **)((char *)v133 + v107);
    *(void *)((char *)a1 + v107) = v108;
    *(void *)((char *)a1 + v132[9]) = *(void *)((char *)v133 + v132[9]);
    uint64_t v109 = v132[10];
    uint64_t v110 = (char *)a1 + v109;
    uint64_t v111 = (char *)v133 + v109;
    uint64_t v112 = *(void *)v111;
    LOBYTE(v111) = v111[8];
    *(void *)uint64_t v110 = v112;
    v110[8] = (char)v111;
    *((unsigned char *)a1 + v132[11]) = *((unsigned char *)v133 + v132[11]);
    *((unsigned char *)a1 + v132[12]) = *((unsigned char *)v133 + v132[12]);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)v133 + *(int *)(a3 + 20));
    id v113 = v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v22;
}

uint64_t sub_1C132F2D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = sub_1C151631C();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = a1 + v2[14];
  char v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    uint64_t v32 = v5;
    uint64_t v33 = v4;
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for FormatWebEmbed();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v31(v10, v11);
    uint64_t v13 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11)) {
      v31(v13, v11);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v14 = v6 + v7[8];
    uint64_t v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for GenericDataVisualization();
        v31(v14 + *(int *)(v16 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v17 = v6 + v7[9];
    sub_1BFEC84E0();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t v4 = v33;
    int v5 = v32;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + v2[18];
  uint64_t v22 = sub_1C151D6DC();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  uint64_t v24 = (int *)type metadata accessor for FormatPluginData();
  uint64_t v25 = (id *)(a1 + v24[5]);

  int v26 = (int *)type metadata accessor for FeedContext();
  uint64_t v27 = (char *)v25 + v26[5];
  uint64_t v28 = type metadata accessor for BundleSession();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28))
  {
    v5((uint64_t)&v27[*(int *)(v28 + 20)], v4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(char **)((char *)v25 + v26[12] + 8) - 1 >= (char *)3) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = a1 + v24[6];
  if (*(void *)(v29 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v29);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C132F86C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v122 = v11;
  uint64_t v123 = v10;
  v11(v8, v9, v10);
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  uint64_t v12 = v6[12];
  uint64_t v129 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v129;
  *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
  uint64_t v124 = v6;
  uint64_t v13 = v6[14];
  long long v133 = a2;
  int v134 = a1;
  uint64_t v131 = (void *)((char *)a1 + v13);
  uint64_t v14 = (void *)((char *)a2 + v13);
  uint64_t v15 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v121 = *(void *)(v15 - 8);
  uint64_t v126 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v121 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v16 = v129;
  swift_unknownObjectRetain();
  if (v126(v14, 1, v15))
  {
    sub_1BFF2ED84(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(v131, v14, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v19 = a2;
    uint64_t v18 = v134;
    uint64_t v20 = v124;
  }
  else
  {
    uint64_t v21 = v14[1];
    *uint64_t v131 = *v14;
    v131[1] = v21;
    uint64_t v120 = (int *)v15;
    uint64_t v22 = *(int *)(v15 + 20);
    uint64_t v23 = (void *)((char *)v131 + v22);
    uint64_t v130 = v14;
    uint64_t v24 = (char *)v14 + v22;
    uint64_t v25 = *(void *)((char *)v14 + v22 + 8);
    *uint64_t v23 = *(void *)((char *)v14 + v22);
    v23[1] = v25;
    int v26 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v27 = v26[5];
    uint64_t v127 = (char *)v23 + v27;
    uint64_t v118 = &v24[v27];
    uint64_t v28 = sub_1C1515FDC();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v30;
    v30(v127, v118, v28);
    uint64_t v32 = v26[6];
    uint64_t v33 = (char *)v23 + v32;
    uint64_t v34 = &v24[v32];
    uint64_t v116 = v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(&v24[v32], 1, v28))
    {
      sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v31(v33, v34, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
    }
    *(void *)((char *)v23 + v26[7]) = *(void *)&v24[v26[7]];
    uint64_t v36 = v26[8];
    uint64_t v37 = (void *)((char *)v23 + v36);
    unint64_t v38 = &v24[v36];
    uint64_t v119 = *((void *)v38 + 1);
    *uint64_t v37 = *(void *)v38;
    v37[1] = v119;
    uint64_t v39 = v26[9];
    uint64_t v40 = (void *)((char *)v23 + v39);
    uint64_t v41 = &v24[v39];
    uint64_t v42 = *((void *)v41 + 1);
    *uint64_t v40 = *(void *)v41;
    v40[1] = v42;
    *(void *)((char *)v23 + v26[10]) = *(void *)&v24[v26[10]];
    *(void *)((char *)v23 + v26[11]) = *(void *)&v24[v26[11]];
    *(void *)((char *)v23 + v26[12]) = *(void *)&v24[v26[12]];
    *(void *)((char *)v131 + v120[6]) = *(void *)((char *)v130 + v120[6]);
    *(void *)((char *)v131 + v120[7]) = *(void *)((char *)v130 + v120[7]);
    uint64_t v43 = v120[8];
    __dst = (void *)((char *)v131 + v43);
    uint64_t v44 = (void *)((char *)v130 + v43);
    uint64_t v45 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v46 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v47(v44, 1, v45))
    {
      sub_1BFF2ED84(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v44, *(void *)(*(void *)(v48 - 8) + 64));
      uint64_t v19 = v133;
      uint64_t v18 = v134;
      uint64_t v20 = v124;
      uint64_t v49 = v131;
      uint64_t v50 = v120;
    }
    else
    {
      uint64_t v128 = v46;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v52 = *v44;
      uint64_t v19 = v133;
      uint64_t v18 = v134;
      uint64_t v20 = v124;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v53 = v45;
        uint64_t v54 = v44[1];
        void *__dst = v52;
        __dst[1] = v54;
        uint64_t v55 = type metadata accessor for GenericDataVisualization();
        uint64_t v56 = *(int *)(v55 + 20);
        uint64_t v57 = (char *)__dst + v56;
        uint64_t v58 = (char *)v44 + v56;
        uint64_t v45 = v53;
        swift_bridgeObjectRetain();
        uint64_t v50 = v120;
        v116(v57, v58, v28);
        *(void *)((char *)__dst + *(int *)(v55 + 24)) = *(uint64_t *)((char *)v44 + *(int *)(v55 + 24));
        swift_bridgeObjectRetain();
        uint64_t v59 = v128;
      }
      else
      {
        void *__dst = v52;
        swift_retain();
        uint64_t v59 = v46;
        uint64_t v50 = v120;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v45);
      uint64_t v49 = v131;
    }
    uint64_t v60 = v50[9];
    uint64_t v61 = (char *)v49 + v60;
    uint64_t v62 = (char *)v130 + v60;
    sub_1BFEC84E0();
    uint64_t v64 = v63;
    uint64_t v65 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v62, 1, v63))
    {
      sub_1BFF2ED84(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
      memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v61, v62, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v61, 0, 1, v64);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v121 + 56))(v49, 0, 1, v50);
  }
  uint64_t v67 = v20[15];
  uint64_t v68 = *(void **)((char *)v19 + v67);
  *(void *)((char *)v18 + v67) = v68;
  *((unsigned char *)v18 + v20[16]) = *((unsigned char *)v19 + v20[16]);
  *(void *)((char *)v18 + v20[17]) = *(void *)((char *)v19 + v20[17]);
  uint64_t v69 = v20[18];
  uint64_t v70 = (char *)v18 + v69;
  uint64_t v71 = (char *)v19 + v69;
  uint64_t v72 = sub_1C151D6DC();
  uint64_t v73 = *(void *)(v72 - 8);
  id v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
  id v75 = v68;
  swift_bridgeObjectRetain();
  if (v74(v71, 1, v72))
  {
    sub_1BFF2ED84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
  }
  char v132 = (int *)type metadata accessor for FormatPluginData();
  uint64_t v77 = v132[5];
  uint64_t v78 = (void *)((char *)v18 + v77);
  uint64_t v79 = (char *)v19 + v77;
  uint64_t v80 = *(void **)((char *)v19 + v77);
  *uint64_t v78 = v80;
  uint64_t v81 = (int *)type metadata accessor for FeedContext();
  uint64_t v82 = v81[5];
  uint64_t v83 = (void *)((char *)v78 + v82);
  uint64_t v84 = &v79[v82];
  uint64_t v85 = (int *)type metadata accessor for BundleSession();
  uint64_t v86 = *((void *)v85 - 1);
  id v87 = *(unsigned int (**)(char *, uint64_t, int *))(v86 + 48);
  id v88 = v80;
  if (v87(v84, 1, v85))
  {
    sub_1BFF2ED84(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    *uint64_t v83 = *(void *)v84;
    v122((char *)v83 + v85[5], &v84[v85[5]], v123);
    *((unsigned char *)v83 + v85[6]) = v84[v85[6]];
    *((unsigned char *)v83 + v85[7]) = v84[v85[7]];
    *(_OWORD *)((char *)v83 + v85[8]) = *(_OWORD *)&v84[v85[8]];
    *(void *)((char *)v83 + v85[9]) = *(void *)&v84[v85[9]];
    *((unsigned char *)v83 + v85[10]) = v84[v85[10]];
    *((unsigned char *)v83 + v85[11]) = v84[v85[11]];
    uint64_t v90 = *(void (**)(void *, void, uint64_t, int *))(v86 + 56);
    swift_bridgeObjectRetain();
    v90(v83, 0, 1, v85);
  }
  *((unsigned char *)v78 + v81[6]) = v79[v81[6]];
  *((unsigned char *)v78 + v81[7]) = v79[v81[7]];
  *((unsigned char *)v78 + v81[8]) = v79[v81[8]];
  *((unsigned char *)v78 + v81[9]) = v79[v81[9]];
  *(void *)((char *)v78 + v81[10]) = *(void *)&v79[v81[10]];
  *(void *)((char *)v78 + v81[11]) = *(void *)&v79[v81[11]];
  uint64_t v91 = v81[12];
  uint64_t v92 = (void *)((char *)v78 + v91);
  uint64_t v93 = &v79[v91];
  uint64_t v94 = *(void *)&v79[v91 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v94 - 1) >= 3)
  {
    *uint64_t v92 = *(void *)v93;
    v92[1] = v94;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
  }
  *((unsigned char *)v78 + v81[13]) = v79[v81[13]];
  uint64_t v95 = v81[14];
  uint64_t v96 = *(void **)&v79[v95];
  *(void *)((char *)v78 + v95) = v96;
  uint64_t v97 = v81[15];
  int v98 = (void *)((char *)v78 + v97);
  uint64_t v99 = &v79[v97];
  uint64_t v100 = *((void *)v99 + 1);
  *int v98 = *(void *)v99;
  v98[1] = v100;
  uint64_t v101 = v132[6];
  long long v102 = (char *)v134 + v101;
  uint64_t v103 = (char *)v133 + v101;
  uint64_t v104 = *(void *)((char *)v133 + v101 + 24);
  id v105 = v96;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v104)
  {
    uint64_t v106 = *((void *)v103 + 4);
    *((void *)v102 + 3) = v104;
    *((void *)v102 + 4) = v106;
    (**(void (***)(char *, char *, uint64_t))(v104 - 8))(v102, v103, v104);
  }
  else
  {
    long long v107 = *((_OWORD *)v103 + 1);
    *(_OWORD *)long long v102 = *(_OWORD *)v103;
    *((_OWORD *)v102 + 1) = v107;
    *((void *)v102 + 4) = *((void *)v103 + 4);
  }
  *((unsigned char *)v134 + v132[7]) = *((unsigned char *)v133 + v132[7]);
  uint64_t v108 = v132[8];
  uint64_t v109 = *(void **)((char *)v133 + v108);
  *(void *)((char *)v134 + v108) = v109;
  *(void *)((char *)v134 + v132[9]) = *(void *)((char *)v133 + v132[9]);
  uint64_t v110 = v132[10];
  uint64_t v111 = (char *)v134 + v110;
  uint64_t v112 = (char *)v133 + v110;
  uint64_t v113 = *(void *)v112;
  LOBYTE(v112) = v112[8];
  *(void *)uint64_t v111 = v113;
  v111[8] = (char)v112;
  *((unsigned char *)v134 + v132[11]) = *((unsigned char *)v133 + v132[11]);
  *((unsigned char *)v134 + v132[12]) = *((unsigned char *)v133 + v132[12]);
  *(void *)((char *)v134 + *(int *)(a3 + 20)) = *(void *)((char *)v133 + *(int *)(a3 + 20));
  id v114 = v109;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v134;
}

void *sub_1C1330458(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)v4 + v6;
  uint64_t v8 = (char *)v3 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  int v181 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v181(v7, v8, v9);
  *(void *)((char *)v4 + v5[6]) = *(void *)((char *)v3 + v5[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + v5[7]) = *(void *)((char *)v3 + v5[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + v5[8]) = *(void *)((char *)v3 + v5[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + v5[9]) = *(void *)((char *)v3 + v5[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + v5[10]) = *(void *)((char *)v3 + v5[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v4 + v5[11]) = *(void *)((char *)v3 + v5[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v11 = v5[12];
  uint64_t v12 = *(void **)((char *)v4 + v11);
  uint64_t v13 = *(void **)((char *)v3 + v11);
  *(void *)((char *)v4 + v11) = v13;
  id v14 = v13;

  *(void *)((char *)v4 + v5[13]) = *(void *)((char *)v3 + v5[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  long long v187 = v5;
  uint64_t v15 = v5[14];
  id v16 = (void *)((char *)v4 + v15);
  uint64_t v17 = (void *)((char *)v3 + v15);
  uint64_t v18 = type metadata accessor for FormatWebEmbed.Resolved();
  __src = *(void **)(v18 - 8);
  uint64_t v19 = (uint64_t (*)(void *, uint64_t, uint64_t))__src[6];
  LODWORD(v7) = v19(v16, 1, v18);
  uint64_t v192 = v17;
  long long v189 = (int *)v18;
  int v20 = v19(v17, 1, v18);
  long long v190 = v3;
  uint64_t v191 = v4;
  uint64_t v185 = v10;
  uint64_t v186 = v9;
  if (!v7)
  {
    if (v20)
    {
      sub_1BFECFFD0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    *id v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(int *)(v18 + 20);
    uint64_t v180 = v16;
    uint64_t v37 = (void *)((char *)v16 + v36);
    unint64_t v38 = (char *)v17 + v36;
    *uint64_t v37 = *(void *)((char *)v17 + v36);
    v37[1] = *(void *)((char *)v17 + v36 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v40 = v39[5];
    uint64_t v41 = (char *)v37 + v40;
    uint64_t v42 = &v38[v40];
    uint64_t v43 = sub_1C1515FDC();
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v44 + 24);
    v45(v41, v42, v43);
    uint64_t v46 = v39[6];
    uint64_t v47 = &v38[v46];
    uint64_t v176 = v44;
    uint64_t v178 = (char *)v37 + v46;
    uint64_t v48 = *(uint64_t (**)(void))(v44 + 48);
    LODWORD(v44) = v48();
    int v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v48)(v47, 1, v43);
    __dst = (void *)v43;
    if (v44)
    {
      if (v49)
      {
        sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v51 = *(void *)(*(void *)(v50 - 8) + 64);
        uint64_t v52 = v178;
LABEL_18:
        memcpy(v52, v47, v51);
        goto LABEL_27;
      }
      (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v178, v47, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v178, 0, 1, v43);
    }
    else
    {
      if (v49)
      {
        (*(void (**)(char *, uint64_t))(v176 + 8))(v178, v43);
        sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v51 = *(void *)(*(void *)(v72 - 8) + 64);
        uint64_t v52 = v178;
        goto LABEL_18;
      }
      v45(v178, v47, v43);
    }
LABEL_27:
    *(void *)((char *)v37 + v39[7]) = *(void *)&v38[v39[7]];
    swift_retain();
    swift_release();
    uint64_t v80 = v39[8];
    uint64_t v81 = (void *)((char *)v37 + v80);
    uint64_t v82 = &v38[v80];
    *uint64_t v81 = *(void *)v82;
    v81[1] = *((void *)v82 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v83 = v39[9];
    uint64_t v84 = (void *)((char *)v37 + v83);
    uint64_t v85 = &v38[v83];
    *uint64_t v84 = *(void *)v85;
    v84[1] = *((void *)v85 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v37 + v39[10]) = *(void *)&v38[v39[10]];
    *(void *)((char *)v37 + v39[11]) = *(void *)&v38[v39[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v37 + v39[12]) = *(void *)&v38[v39[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v180 + v189[6]) = *(void *)((char *)v192 + v189[6]);
    swift_retain();
    swift_release();
    *(void *)((char *)v180 + v189[7]) = *(void *)((char *)v192 + v189[7]);
    swift_retain();
    swift_release();
    uint64_t v86 = v189[8];
    id v87 = (void *)((char *)v180 + v86);
    id v88 = (void *)((char *)v192 + v86);
    uint64_t v89 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v90 = *(void *)(v89 - 8);
    uint64_t v91 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v90 + 48);
    int v92 = v91(v87, 1, v89);
    int v93 = v91(v88, 1, v89);
    if (v92)
    {
      if (!v93)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v35 = v187;
        *id v87 = *v88;
        if (EnumCaseMultiPayload == 1)
        {
          v87[1] = v88[1];
          uint64_t v95 = type metadata accessor for GenericDataVisualization();
          uint64_t v96 = *(int *)(v95 + 20);
          uint64_t v97 = (char *)v87 + v96;
          __srca = (char *)v88 + v96;
          int v98 = *(void (**)(char *, char *, void *))(v176 + 16);
          swift_bridgeObjectRetain();
          v98(v97, __srca, __dst);
          *(void *)((char *)v87 + *(int *)(v95 + 24)) = *(void *)((char *)v88 + *(int *)(v95 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        uint64_t v100 = v180;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v93)
      {
        uint64_t v100 = v180;
        uint64_t v35 = v187;
        if (v191 != v190)
        {
          sub_1BFECFFD0((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          int v101 = swift_getEnumCaseMultiPayload();
          *id v87 = *v88;
          if (v101 == 1)
          {
            v87[1] = v88[1];
            uint64_t v102 = type metadata accessor for GenericDataVisualization();
            uint64_t v103 = *(int *)(v102 + 20);
            uint64_t v104 = (char *)v87 + v103;
            __srcb = (char *)v88 + v103;
            id v105 = *(void (**)(char *, char *, void *))(v176 + 16);
            uint64_t v100 = v180;
            swift_bridgeObjectRetain();
            v105(v104, __srcb, __dst);
            *(void *)((char *)v87 + *(int *)(v102 + 24)) = *(void *)((char *)v88 + *(int *)(v102 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_40:
        uint64_t v106 = v189[9];
        long long v107 = (char *)v100 + v106;
        uint64_t v108 = (char *)v192 + v106;
        sub_1BFEC84E0();
        uint64_t v110 = v109;
        uint64_t v111 = *(void *)(v109 - 8);
        uint64_t v112 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v111 + 48);
        int v113 = v112(v107, 1, v109);
        int v114 = v112(v108, 1, v110);
        if (v113)
        {
          if (!v114)
          {
            (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v107, v108, v110);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v107, 0, 1, v110);
LABEL_46:
            uint64_t v3 = v190;
            uint64_t v4 = v191;
            goto LABEL_47;
          }
        }
        else
        {
          if (!v114)
          {
            (*(void (**)(char *, char *, uint64_t))(v111 + 24))(v107, v108, v110);
            goto LABEL_46;
          }
          (*(void (**)(char *, uint64_t))(v111 + 8))(v107, v110);
        }
        sub_1BFF2ED84(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v107, v108, *(void *)(*(void *)(v115 - 8) + 64));
        goto LABEL_46;
      }
      sub_1BFECFFD0((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1BFF2ED84(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v87, v88, *(void *)(*(void *)(v99 - 8) + 64));
    uint64_t v100 = v180;
    uint64_t v35 = v187;
    goto LABEL_40;
  }
  if (v20)
  {
LABEL_7:
    sub_1BFF2ED84(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(v16, v17, *(void *)(*(void *)(v34 - 8) + 64));
    uint64_t v35 = v187;
    goto LABEL_47;
  }
  *id v16 = *v17;
  v16[1] = v17[1];
  uint64_t v21 = *(int *)(v18 + 20);
  unint64_t v179 = v16;
  uint64_t v22 = (void *)((char *)v16 + v21);
  uint64_t v23 = (char *)v17 + v21;
  *uint64_t v22 = *(void *)((char *)v17 + v21);
  v22[1] = *(void *)((char *)v17 + v21 + 8);
  uint64_t v24 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v25 = v24[5];
  int v177 = (char *)v22 + v25;
  int v26 = &v23[v25];
  uint64_t v27 = sub_1C1515FDC();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v177, v26, v27);
  uint64_t v30 = v24[6];
  uint64_t v31 = (char *)v22 + v30;
  uint64_t v32 = &v23[v30];
  uint64_t v173 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v23[v30], 1, v27))
  {
    sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v29(v31, v32, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
  }
  *(void *)((char *)v22 + v24[7]) = *(void *)&v23[v24[7]];
  uint64_t v53 = v24[8];
  uint64_t v54 = (void *)((char *)v22 + v53);
  uint64_t v55 = &v23[v53];
  *uint64_t v54 = *(void *)v55;
  v54[1] = *((void *)v55 + 1);
  uint64_t v56 = v24[9];
  uint64_t v57 = (void *)((char *)v22 + v56);
  uint64_t v58 = &v23[v56];
  *uint64_t v57 = *(void *)v58;
  v57[1] = *((void *)v58 + 1);
  *(void *)((char *)v22 + v24[10]) = *(void *)&v23[v24[10]];
  *(void *)((char *)v22 + v24[11]) = *(void *)&v23[v24[11]];
  *(void *)((char *)v22 + v24[12]) = *(void *)&v23[v24[12]];
  *(void *)((char *)v179 + v189[6]) = *(void *)((char *)v192 + v189[6]);
  *(void *)((char *)v179 + v189[7]) = *(void *)((char *)v192 + v189[7]);
  uint64_t v59 = v189[8];
  __dsta = (void *)((char *)v179 + v59);
  uint64_t v60 = (void *)((char *)v192 + v59);
  uint64_t v61 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v62 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v63(v60, 1, v61))
  {
    sub_1BFF2ED84(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(__dsta, v60, *(void *)(*(void *)(v64 - 8) + 64));
    uint64_t v3 = v190;
    uint64_t v4 = v191;
    uint64_t v65 = v179;
    uint64_t v35 = v187;
    uint64_t v66 = __src;
  }
  else
  {
    int v67 = swift_getEnumCaseMultiPayload();
    void *__dsta = *v60;
    if (v67 == 1)
    {
      __dsta[1] = v60[1];
      uint64_t v68 = type metadata accessor for GenericDataVisualization();
      uint64_t v69 = *(int *)(v68 + 20);
      uint64_t v70 = (char *)__dsta + v69;
      uint64_t v71 = (char *)v60 + v69;
      swift_bridgeObjectRetain();
      v173(v70, v71, v27);
      *(void *)((char *)__dsta + *(int *)(v68 + 24)) = *(void *)((char *)v60 + *(int *)(v68 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    uint64_t v3 = v190;
    uint64_t v4 = v191;
    uint64_t v65 = v179;
    uint64_t v35 = v187;
    uint64_t v66 = __src;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(__dsta, 0, 1, v61);
  }
  uint64_t v73 = v189[9];
  id v74 = (char *)v65 + v73;
  id v75 = (char *)v192 + v73;
  sub_1BFEC84E0();
  uint64_t v77 = v76;
  uint64_t v78 = *(void *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v75, 1, v76))
  {
    sub_1BFF2ED84(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
    memcpy(v74, v75, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v74, v75, v77);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v74, 0, 1, v77);
  }
  ((void (*)(void *, void, uint64_t, int *))v66[7])(v65, 0, 1, v189);
LABEL_47:
  uint64_t v116 = v35[15];
  uint64_t v117 = *(void **)((char *)v4 + v116);
  uint64_t v118 = *(void **)((char *)v3 + v116);
  *(void *)((char *)v4 + v116) = v118;
  id v119 = v118;

  *((unsigned char *)v4 + v35[16]) = *((unsigned char *)v3 + v35[16]);
  *(void *)((char *)v4 + v35[17]) = *(void *)((char *)v3 + v35[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v120 = v35[18];
  uint64_t v121 = (char *)v4 + v120;
  uint64_t v122 = (char *)v3 + v120;
  uint64_t v123 = sub_1C151D6DC();
  uint64_t v124 = *(void *)(v123 - 8);
  uint64_t v125 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
  int v126 = v125(v121, 1, v123);
  int v127 = v125(v122, 1, v123);
  if (v126)
  {
    if (!v127)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v122, v123);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v127)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v121, v123);
LABEL_52:
    sub_1BFF2ED84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v121, v122, *(void *)(*(void *)(v128 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v121, v122, v123);
LABEL_53:
  char v193 = (int *)type metadata accessor for FormatPluginData();
  uint64_t v129 = v193[5];
  uint64_t v130 = (void **)((char *)v4 + v129);
  uint64_t v131 = (void **)((char *)v3 + v129);
  char v132 = *v131;
  long long v133 = *v130;
  *uint64_t v130 = *v131;
  id v134 = v132;

  uint64_t v135 = (int *)type metadata accessor for FeedContext();
  uint64_t v136 = v135[5];
  unint64_t v137 = (char *)v130 + v136;
  unint64_t v138 = (char *)v131 + v136;
  uint64_t v139 = (int *)type metadata accessor for BundleSession();
  uint64_t v140 = *((void *)v139 - 1);
  unint64_t v141 = *(uint64_t (**)(char *, uint64_t, int *))(v140 + 48);
  int v142 = v141(v137, 1, v139);
  int v143 = v141(v138, 1, v139);
  if (v142)
  {
    if (!v143)
    {
      *(void *)unint64_t v137 = *(void *)v138;
      (*(void (**)(char *, char *, uint64_t))(v185 + 16))(&v137[v139[5]], &v138[v139[5]], v186);
      v137[v139[6]] = v138[v139[6]];
      v137[v139[7]] = v138[v139[7]];
      *(_OWORD *)&v137[v139[8]] = *(_OWORD *)&v138[v139[8]];
      *(void *)&v137[v139[9]] = *(void *)&v138[v139[9]];
      v137[v139[10]] = v138[v139[10]];
      v137[v139[11]] = v138[v139[11]];
      uint64_t v144 = *(void (**)(char *, void, uint64_t, int *))(v140 + 56);
      swift_bridgeObjectRetain();
      v144(v137, 0, 1, v139);
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  if (v143)
  {
    sub_1BFECFFD0((uint64_t)v137, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_58:
    sub_1BFF2ED84(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v137, v138, *(void *)(*(void *)(v145 - 8) + 64));
    goto LABEL_59;
  }
  *(void *)unint64_t v137 = *(void *)v138;
  v181(&v137[v139[5]], &v138[v139[5]], v186);
  v137[v139[6]] = v138[v139[6]];
  v137[v139[7]] = v138[v139[7]];
  *(_OWORD *)&v137[v139[8]] = *(_OWORD *)&v138[v139[8]];
  *(void *)&v137[v139[9]] = *(void *)&v138[v139[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v137[v139[10]] = v138[v139[10]];
  v137[v139[11]] = v138[v139[11]];
LABEL_59:
  *((unsigned char *)v130 + v135[6]) = *((unsigned char *)v131 + v135[6]);
  *((unsigned char *)v130 + v135[7]) = *((unsigned char *)v131 + v135[7]);
  *((unsigned char *)v130 + v135[8]) = *((unsigned char *)v131 + v135[8]);
  *((unsigned char *)v130 + v135[9]) = *((unsigned char *)v131 + v135[9]);
  *(void **)((char *)v130 + v135[10]) = *(void **)((char *)v131 + v135[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v130 + v135[11]) = *(void **)((char *)v131 + v135[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v146 = v135[12];
  uint64_t v147 = (void **)((char *)v130 + v146);
  unint64_t v148 = (void **)((char *)v131 + v146);
  uint64_t v149 = *(uint64_t *)((char *)v130 + v146 + 8);
  unint64_t v150 = *(unint64_t *)((char *)v131 + v146 + 8) - 1;
  if ((unint64_t)(v149 - 1) < 3)
  {
    if (v150 >= 3)
    {
      *uint64_t v147 = *v148;
      v147[1] = v148[1];
      swift_bridgeObjectRetain();
      goto LABEL_66;
    }
    goto LABEL_64;
  }
  if (v150 < 3)
  {
    sub_1BFECFFD0((uint64_t)v147, (uint64_t (*)(void))sub_1BFF97D54);
LABEL_64:
    *(_OWORD *)uint64_t v147 = *(_OWORD *)v148;
    goto LABEL_66;
  }
  *uint64_t v147 = *v148;
  v147[1] = v148[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_66:
  *((unsigned char *)v130 + v135[13]) = *((unsigned char *)v131 + v135[13]);
  uint64_t v151 = v135[14];
  long long v152 = *(void **)((char *)v130 + v151);
  uint64_t v153 = *(void **)((char *)v131 + v151);
  *(void **)((char *)v130 + v151) = v153;
  id v154 = v153;

  uint64_t v155 = v135[15];
  long long v156 = (char *)v130 + v155;
  long long v157 = (char *)v131 + v155;
  *(void **)((char *)v130 + v155) = *(void **)((char *)v131 + v155);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v156 + 1) = *((void *)v157 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v158 = v193[6];
  uint64_t v159 = (uint64_t)v191 + v158;
  long long v160 = (long long *)((char *)v190 + v158);
  uint64_t v161 = *(void *)((char *)v190 + v158 + 24);
  if (!*(void *)((char *)v191 + v158 + 24))
  {
    if (v161)
    {
      *(void *)(v159 + 24) = v161;
      *(void *)(v159 + 32) = *((void *)v160 + 4);
      (**(void (***)(uint64_t, long long *))(v161 - 8))(v159, v160);
      goto LABEL_73;
    }
LABEL_72:
    long long v162 = *v160;
    long long v163 = v160[1];
    *(void *)(v159 + 32) = *((void *)v160 + 4);
    *(_OWORD *)uint64_t v159 = v162;
    *(_OWORD *)(v159 + 16) = v163;
    goto LABEL_73;
  }
  if (!v161)
  {
    __swift_destroy_boxed_opaque_existential_1(v159);
    goto LABEL_72;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v159, (uint64_t *)v160);
LABEL_73:
  *((unsigned char *)v191 + v193[7]) = *((unsigned char *)v190 + v193[7]);
  uint64_t v164 = v193[8];
  uint64_t v165 = *(void **)((char *)v191 + v164);
  int v166 = *(void **)((char *)v190 + v164);
  *(void *)((char *)v191 + v164) = v166;
  id v167 = v166;

  *(void *)((char *)v191 + v193[9]) = *(void *)((char *)v190 + v193[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v168 = v193[10];
  uint64_t v169 = (uint64_t)v191 + v168;
  long long v170 = (void *)((char *)v190 + v168);
  uint64_t v171 = *v170;
  LOBYTE(v170) = *((unsigned char *)v170 + 8);
  *(void *)uint64_t v169 = v171;
  *(unsigned char *)(v169 + 8) = (_BYTE)v170;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v191 + v193[11]) = *((unsigned char *)v190 + v193[11]);
  *((unsigned char *)v191 + v193[12]) = *((unsigned char *)v190 + v193[12]);
  *(void *)((char *)v191 + *(int *)(a3 + 20)) = *(void *)((char *)v190 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v191;
}

_OWORD *sub_1C1331A7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  uint64_t v73 = *(void (**)(char *, char *))(*(void *)(v9 - 8) + 32);
  uint64_t v74 = v9;
  v73(v7, v8);
  *(void *)((char *)a1 + v5[6]) = *(void *)((char *)a2 + v5[6]);
  *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
  *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
  *(void *)((char *)a1 + v5[11]) = *(void *)((char *)a2 + v5[11]);
  *(void *)((char *)a1 + v5[12]) = *(void *)((char *)a2 + v5[12]);
  *(void *)((char *)a1 + v5[13]) = *(void *)((char *)a2 + v5[13]);
  uint64_t v10 = v5[14];
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1BFF2ED84(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v65 = v14;
    uint64_t v66 = v11;
    *uint64_t v11 = *v12;
    uint64_t v69 = (int *)v13;
    uint64_t v16 = *(int *)(v13 + 20);
    uint64_t v17 = (char *)v11 + v16;
    uint64_t v18 = (char *)v12 + v16;
    *(_OWORD *)((char *)v11 + v16) = *(_OWORD *)((char *)v12 + v16);
    uint64_t v19 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v20 = v19[5];
    __dsta = &v17[v20];
    __srca = &v18[v20];
    uint64_t v21 = sub_1C1515FDC();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v23(__dsta, __srca, v21);
    uint64_t v24 = v19[6];
    __dst = &v17[v24];
    __src = &v18[v24];
    uint64_t v64 = v23;
    if ((*(unsigned int (**)(void))(v22 + 48))())
    {
      sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(__dst, __src, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v23(__dst, __src, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
    *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
    *(_OWORD *)&v17[v19[9]] = *(_OWORD *)&v18[v19[9]];
    *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
    *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
    *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
    *(void *)((char *)v66 + v69[6]) = *(void *)((char *)v12 + v69[6]);
    *(void *)((char *)v66 + v69[7]) = *(void *)((char *)v12 + v69[7]);
    uint64_t v26 = v69[8];
    uint64_t v27 = (_OWORD *)((char *)v66 + v26);
    uint64_t v28 = (_OWORD *)((char *)v12 + v26);
    uint64_t v29 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      sub_1BFF2ED84(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v27 = *v28;
        __dstb = (int *)type metadata accessor for GenericDataVisualization();
        v64((char *)v27 + __dstb[5], (char *)v28 + __dstb[5], v21);
        *(void *)((char *)v27 + __dstb[6]) = *(void *)((char *)v28 + __dstb[6]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v27, v28, *(void *)(v30 + 64));
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    uint64_t v32 = v69[9];
    uint64_t v33 = (char *)v66 + v32;
    uint64_t v34 = (char *)v12 + v32;
    sub_1BFEC84E0();
    uint64_t v36 = v35;
    uint64_t v37 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v35))
    {
      sub_1BFF2ED84(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v33, v34, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v65 + 56))(v66, 0, 1, v69);
  }
  *(void *)((char *)a1 + v5[15]) = *(void *)((char *)a2 + v5[15]);
  *((unsigned char *)a1 + v5[16]) = *((unsigned char *)a2 + v5[16]);
  *(void *)((char *)a1 + v5[17]) = *(void *)((char *)a2 + v5[17]);
  uint64_t v39 = v5[18];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_1C151D6DC();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    sub_1BFF2ED84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v45 = (int *)type metadata accessor for FormatPluginData();
  uint64_t v46 = v45[5];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
  int v49 = (int *)type metadata accessor for FeedContext();
  uint64_t v50 = v49[5];
  size_t v51 = &v47[v50];
  uint64_t v52 = &v48[v50];
  uint64_t v53 = (int *)type metadata accessor for BundleSession();
  uint64_t v54 = *((void *)v53 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v54 + 48))(v52, 1, v53))
  {
    sub_1BFF2ED84(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    *(void *)size_t v51 = *(void *)v52;
    ((void (*)(char *, char *, uint64_t))v73)(&v51[v53[5]], &v52[v53[5]], v74);
    v51[v53[6]] = v52[v53[6]];
    v51[v53[7]] = v52[v53[7]];
    *(_OWORD *)&v51[v53[8]] = *(_OWORD *)&v52[v53[8]];
    *(void *)&v51[v53[9]] = *(void *)&v52[v53[9]];
    v51[v53[10]] = v52[v53[10]];
    v51[v53[11]] = v52[v53[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v51, 0, 1, v53);
  }
  v47[v49[6]] = v48[v49[6]];
  v47[v49[7]] = v48[v49[7]];
  v47[v49[8]] = v48[v49[8]];
  v47[v49[9]] = v48[v49[9]];
  *(void *)&v47[v49[10]] = *(void *)&v48[v49[10]];
  *(void *)&v47[v49[11]] = *(void *)&v48[v49[11]];
  *(_OWORD *)&v47[v49[12]] = *(_OWORD *)&v48[v49[12]];
  v47[v49[13]] = v48[v49[13]];
  *(void *)&v47[v49[14]] = *(void *)&v48[v49[14]];
  *(_OWORD *)&v47[v49[15]] = *(_OWORD *)&v48[v49[15]];
  uint64_t v56 = v45[6];
  uint64_t v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  long long v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  *((void *)v57 + 4) = *((void *)v58 + 4);
  *((unsigned char *)a1 + v45[7]) = *((unsigned char *)a2 + v45[7]);
  *(void *)((char *)a1 + v45[8]) = *(void *)((char *)a2 + v45[8]);
  *(void *)((char *)a1 + v45[9]) = *(void *)((char *)a2 + v45[9]);
  uint64_t v60 = v45[10];
  uint64_t v61 = (char *)a1 + v60;
  uint64_t v62 = (char *)a2 + v60;
  *(void *)uint64_t v61 = *(void *)v62;
  v61[8] = v62[8];
  *((unsigned char *)a1 + v45[11]) = *((unsigned char *)a2 + v45[11]);
  *((unsigned char *)a1 + v45[12]) = *((unsigned char *)a2 + v45[12]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1C1332474(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)v4 + v8;
  uint64_t v11 = sub_1C151631C();
  uint64_t v155 = *(void *)(v11 - 8);
  uint64_t v156 = v11;
  id v154 = *(void (**)(char *, char *))(v155 + 40);
  v154(v9, v10);
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)v4 + v7[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v7[7]) = *(void *)((char *)v4 + v7[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v7[8]) = *(void *)((char *)v4 + v7[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v7[9]) = *(void *)((char *)v4 + v7[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v7[10]) = *(void *)((char *)v4 + v7[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v7[11]) = *(void *)((char *)v4 + v7[11]);
  swift_unknownObjectRelease();
  uint64_t v12 = v7[12];
  uint64_t v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)v4 + v12);

  *(void *)((char *)a1 + v7[13]) = *(void *)((char *)v4 + v7[13]);
  swift_unknownObjectRelease();
  uint64_t v14 = v7[14];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)v4 + v14);
  uint64_t v17 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v157 = *((void *)v17 - 1);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, int *))(v157 + 48);
  LODWORD(v9) = v18(v15, 1, v17);
  long long v163 = v16;
  int v19 = v18(v16, 1, v17);
  long long v162 = v4;
  uint64_t v161 = a3;
  if (!v9)
  {
    if (v19)
    {
      sub_1BFECFFD0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    uint64_t v33 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v33;
    swift_bridgeObjectRelease();
    uint64_t v34 = v17[5];
    uint64_t v153 = v15;
    uint64_t v35 = (void *)((char *)v15 + v34);
    uint64_t v36 = (char *)v163 + v34;
    uint64_t v37 = *(void *)((char *)v163 + v34 + 8);
    *uint64_t v35 = *(void *)((char *)v163 + v34);
    v35[1] = v37;
    swift_bridgeObjectRelease();
    uint64_t v38 = type metadata accessor for FormatWebEmbed();
    uint64_t v39 = *(int *)(v38 + 20);
    uint64_t v158 = (char *)v35 + v39;
    uint64_t v40 = &v36[v39];
    uint64_t v41 = sub_1C1515FDC();
    uint64_t v42 = *(void *)(v41 - 8);
    int v143 = *(void (**)(char *, char *, uint64_t))(v42 + 40);
    v143(v158, v40, v41);
    __dsta = (int *)v38;
    uint64_t v43 = *(int *)(v38 + 24);
    uint64_t v159 = v36;
    uint64_t v44 = &v36[v43];
    uint64_t v144 = v42;
    uint64_t v45 = *(uint64_t (**)(void))(v42 + 48);
    unint64_t v148 = (char *)v35 + v43;
    LODWORD(v42) = v45();
    uint64_t v146 = v41;
    int v46 = ((uint64_t (*)(char *, uint64_t, uint64_t))v45)(v44, 1, v41);
    if (v42)
    {
      if (v46)
      {
        sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v48 = *(void *)(*(void *)(v47 - 8) + 64);
        int v49 = v148;
LABEL_18:
        memcpy(v49, v44, v48);
        goto LABEL_27;
      }
      (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v148, v44, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v148, 0, 1, v41);
    }
    else
    {
      if (v46)
      {
        (*(void (**)(char *, uint64_t))(v144 + 8))(v148, v41);
        sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v48 = *(void *)(*(void *)(v59 - 8) + 64);
        int v49 = v148;
        goto LABEL_18;
      }
      v143(v148, v44, v41);
    }
LABEL_27:
    *(void *)((char *)v35 + __dsta[7]) = *(void *)&v159[__dsta[7]];
    swift_release();
    uint64_t v67 = __dsta[8];
    uint64_t v68 = (void *)((char *)v35 + v67);
    uint64_t v69 = (uint64_t *)&v159[v67];
    uint64_t v71 = *v69;
    uint64_t v70 = v69[1];
    *uint64_t v68 = v71;
    v68[1] = v70;
    swift_bridgeObjectRelease();
    uint64_t v72 = __dsta[9];
    uint64_t v73 = (void *)((char *)v35 + v72);
    uint64_t v74 = (uint64_t *)&v159[v72];
    uint64_t v76 = *v74;
    uint64_t v75 = v74[1];
    *uint64_t v73 = v76;
    v73[1] = v75;
    swift_bridgeObjectRelease();
    *(void *)((char *)v35 + __dsta[10]) = *(void *)&v159[__dsta[10]];
    *(void *)((char *)v35 + __dsta[11]) = *(void *)&v159[__dsta[11]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v35 + __dsta[12]) = *(void *)&v159[__dsta[12]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v153 + v17[6]) = *(void *)((char *)v163 + v17[6]);
    swift_release();
    *(void *)((char *)v153 + v17[7]) = *(void *)((char *)v163 + v17[7]);
    swift_release();
    uint64_t v77 = v17[8];
    uint64_t v78 = (char *)v153 + v77;
    uint64_t v79 = (char *)v163 + v77;
    uint64_t v80 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v81 = *(void *)(v80 - 8);
    uint64_t v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
    int v83 = v82(v78, 1, v80);
    int v84 = v82(v79, 1, v80);
    if (v83)
    {
      if (!v84)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
          uint64_t v85 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v144 + 32))(&v78[*(int *)(v85 + 20)], &v79[*(int *)(v85 + 20)], v146);
          *(void *)&v78[*(int *)(v85 + 24)] = *(void *)&v79[*(int *)(v85 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v78, v79, *(void *)(v81 + 64));
        }
        id v87 = v153;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v84)
      {
        id v87 = v153;
        if (a1 != v162)
        {
          sub_1BFECFFD0((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
            uint64_t v88 = type metadata accessor for GenericDataVisualization();
            (*(void (**)(char *, char *, uint64_t))(v144 + 32))(&v78[*(int *)(v88 + 20)], &v79[*(int *)(v88 + 20)], v146);
            id v87 = v153;
            *(void *)&v78[*(int *)(v88 + 24)] = *(void *)&v79[*(int *)(v88 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v78, v79, *(void *)(v81 + 64));
          }
        }
LABEL_39:
        uint64_t v89 = v17[9];
        uint64_t v90 = (char *)v87 + v89;
        uint64_t v91 = (char *)v163 + v89;
        sub_1BFEC84E0();
        uint64_t v93 = v92;
        uint64_t v94 = *(void *)(v92 - 8);
        uint64_t v95 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
        int v96 = v95(v90, 1, v92);
        int v97 = v95(v91, 1, v93);
        if (v96)
        {
          if (!v97)
          {
            (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v90, v91, v93);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v90, 0, 1, v93);
LABEL_45:
            uint64_t v4 = v162;
            goto LABEL_46;
          }
        }
        else
        {
          if (!v97)
          {
            (*(void (**)(char *, char *, uint64_t))(v94 + 40))(v90, v91, v93);
            goto LABEL_45;
          }
          (*(void (**)(char *, uint64_t))(v94 + 8))(v90, v93);
        }
        sub_1BFF2ED84(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
        memcpy(v90, v91, *(void *)(*(void *)(v98 - 8) + 64));
        goto LABEL_45;
      }
      sub_1BFECFFD0((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1BFF2ED84(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v78, v79, *(void *)(*(void *)(v86 - 8) + 64));
    id v87 = v153;
    goto LABEL_39;
  }
  if (v19)
  {
LABEL_7:
    sub_1BFF2ED84(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718]);
    memcpy(v15, v16, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_46;
  }
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  uint64_t v147 = v17;
  uint64_t v20 = v17[5];
  long long v152 = v15;
  uint64_t v21 = (char *)v15 + v20;
  uint64_t v22 = (char *)v16 + v20;
  *(_OWORD *)((char *)v15 + v20) = *(_OWORD *)((char *)v16 + v20);
  uint64_t v23 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v24 = v23[5];
  __dstb = &v21[v24];
  uint64_t v25 = &v22[v24];
  uint64_t v26 = sub_1C1515FDC();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v28(__dstb, v25, v26);
  uint64_t v29 = v23[6];
  __dst = &v21[v29];
  uint64_t v30 = &v22[v29];
  uint64_t v145 = v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&v22[v29], 1, v26))
  {
    sub_1BFF2ED84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v28(__dst, v30, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  uint64_t v50 = v26;
  *(void *)&v21[v23[7]] = *(void *)&v22[v23[7]];
  *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
  *(_OWORD *)&v21[v23[9]] = *(_OWORD *)&v22[v23[9]];
  *(void *)&v21[v23[10]] = *(void *)&v22[v23[10]];
  *(void *)&v21[v23[11]] = *(void *)&v22[v23[11]];
  *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
  *(void *)((char *)v152 + v147[6]) = *(void *)((char *)v163 + v147[6]);
  *(void *)((char *)v152 + v147[7]) = *(void *)((char *)v163 + v147[7]);
  uint64_t v51 = v147[8];
  uint64_t v52 = (_OWORD *)((char *)v152 + v51);
  uint64_t v53 = (_OWORD *)((char *)v163 + v51);
  uint64_t v54 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    sub_1BFF2ED84(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    uint64_t v4 = v162;
    uint64_t v57 = v152;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v52 = *v53;
      uint64_t v58 = type metadata accessor for GenericDataVisualization();
      v145((char *)v52 + *(int *)(v58 + 20), (char *)v53 + *(int *)(v58 + 20), v50);
      *(void *)((char *)v52 + *(int *)(v58 + 24)) = *(void *)((char *)v53 + *(int *)(v58 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v52, v53, *(void *)(v55 + 64));
    }
    uint64_t v57 = v152;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    uint64_t v4 = v162;
  }
  uint64_t v60 = v147[9];
  uint64_t v61 = (char *)v57 + v60;
  uint64_t v62 = (char *)v163 + v60;
  sub_1BFEC84E0();
  uint64_t v64 = v63;
  uint64_t v65 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v62, 1, v63))
  {
    sub_1BFF2ED84(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
    memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v61, v62, v64);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v61, 0, 1, v64);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v157 + 56))(v57, 0, 1, v147);
LABEL_46:
  uint64_t v99 = v7[15];
  uint64_t v100 = *(void **)((char *)a1 + v99);
  *(void *)((char *)a1 + v99) = *(void *)((char *)v4 + v99);

  *((unsigned char *)a1 + v7[16]) = *((unsigned char *)v4 + v7[16]);
  *(void *)((char *)a1 + v7[17]) = *(void *)((char *)v4 + v7[17]);
  swift_bridgeObjectRelease();
  uint64_t v101 = v7[18];
  uint64_t v102 = (char *)a1 + v101;
  uint64_t v103 = (char *)v4 + v101;
  uint64_t v104 = sub_1C151D6DC();
  uint64_t v105 = *(void *)(v104 - 8);
  uint64_t v106 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48);
  int v107 = v106(v102, 1, v104);
  int v108 = v106(v103, 1, v104);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v102, v103, v104);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v108)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v104);
LABEL_51:
    sub_1BFF2ED84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(v102, v103, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_52;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 40))(v102, v103, v104);
LABEL_52:
  long long v160 = (int *)type metadata accessor for FormatPluginData();
  uint64_t v110 = v160[5];
  uint64_t v164 = a1;
  uint64_t v111 = (char *)a1 + v110;
  uint64_t v112 = (void *)((char *)v4 + v110);
  int v113 = *(void **)((char *)a1 + v110);
  *(void *)((char *)a1 + v110) = *v112;

  int v114 = (int *)type metadata accessor for FeedContext();
  uint64_t v115 = v114[5];
  uint64_t v116 = &v111[v115];
  uint64_t v117 = (char *)v112 + v115;
  uint64_t v118 = (int *)type metadata accessor for BundleSession();
  uint64_t v119 = *((void *)v118 - 1);
  uint64_t v120 = *(uint64_t (**)(char *, uint64_t, int *))(v119 + 48);
  int v121 = v120(v116, 1, v118);
  int v122 = v120(v117, 1, v118);
  if (v121)
  {
    if (!v122)
    {
      *(void *)uint64_t v116 = *(void *)v117;
      (*(void (**)(char *, char *, uint64_t))(v155 + 32))(&v116[v118[5]], &v117[v118[5]], v156);
      v116[v118[6]] = v117[v118[6]];
      v116[v118[7]] = v117[v118[7]];
      *(_OWORD *)&v116[v118[8]] = *(_OWORD *)&v117[v118[8]];
      *(void *)&v116[v118[9]] = *(void *)&v117[v118[9]];
      v116[v118[10]] = v117[v118[10]];
      v116[v118[11]] = v117[v118[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v119 + 56))(v116, 0, 1, v118);
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v122)
  {
    sub_1BFECFFD0((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_57:
    sub_1BFF2ED84(0, &qword_1EB8942F0, (uint64_t (*)(uint64_t))type metadata accessor for BundleSession, MEMORY[0x1E4FBB718]);
    memcpy(v116, v117, *(void *)(*(void *)(v123 - 8) + 64));
    goto LABEL_58;
  }
  *(void *)uint64_t v116 = *(void *)v117;
  ((void (*)(char *, char *, uint64_t))v154)(&v116[v118[5]], &v117[v118[5]], v156);
  v116[v118[6]] = v117[v118[6]];
  v116[v118[7]] = v117[v118[7]];
  *(_OWORD *)&v116[v118[8]] = *(_OWORD *)&v117[v118[8]];
  *(void *)&v116[v118[9]] = *(void *)&v117[v118[9]];
  swift_bridgeObjectRelease();
  v116[v118[10]] = v117[v118[10]];
  v116[v118[11]] = v117[v118[11]];
LABEL_58:
  v111[v114[6]] = *((unsigned char *)v112 + v114[6]);
  v111[v114[7]] = *((unsigned char *)v112 + v114[7]);
  v111[v114[8]] = *((unsigned char *)v112 + v114[8]);
  v111[v114[9]] = *((unsigned char *)v112 + v114[9]);
  *(void *)&v111[v114[10]] = *(void *)((char *)v112 + v114[10]);
  swift_bridgeObjectRelease();
  *(void *)&v111[v114[11]] = *(void *)((char *)v112 + v114[11]);
  swift_bridgeObjectRelease();
  uint64_t v124 = v114[12];
  uint64_t v125 = (uint64_t)&v111[v124];
  int v126 = (char *)v112 + v124;
  if ((unint64_t)(*(void *)&v111[v124 + 8] - 1) < 3)
  {
LABEL_61:
    *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
    goto LABEL_63;
  }
  uint64_t v127 = *((void *)v126 + 1);
  if ((unint64_t)(v127 - 1) < 3)
  {
    sub_1BFECFFD0(v125, (uint64_t (*)(void))sub_1BFF97D54);
    goto LABEL_61;
  }
  *(void *)uint64_t v125 = *(void *)v126;
  *(void *)(v125 + 8) = v127;
  swift_bridgeObjectRelease();
LABEL_63:
  v111[v114[13]] = *((unsigned char *)v112 + v114[13]);
  uint64_t v128 = v114[14];
  uint64_t v129 = *(void **)&v111[v128];
  *(void *)&v111[v128] = *(void *)((char *)v112 + v128);

  uint64_t v130 = v114[15];
  uint64_t v131 = &v111[v130];
  char v132 = (char *)v112 + v130;
  *(void *)&v111[v130] = *(void *)((char *)v112 + v130);
  swift_bridgeObjectRelease();
  *((void *)v131 + 1) = *((void *)v132 + 1);
  swift_bridgeObjectRelease();
  uint64_t v133 = v160[6];
  id v134 = (char *)v164 + v133;
  if (*(void *)((char *)v164 + v133 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v164 + v133);
  }
  long long v135 = *(_OWORD *)((char *)v162 + v133 + 16);
  *(_OWORD *)id v134 = *(_OWORD *)((char *)v162 + v133);
  *((_OWORD *)v134 + 1) = v135;
  *((void *)v134 + 4) = *(void *)((char *)v162 + v133 + 32);
  *((unsigned char *)v164 + v160[7]) = *((unsigned char *)v162 + v160[7]);
  uint64_t v136 = v160[8];
  unint64_t v137 = *(void **)((char *)v164 + v136);
  *(void *)((char *)v164 + v136) = *(void *)((char *)v162 + v136);

  *(void *)((char *)v164 + v160[9]) = *(void *)((char *)v162 + v160[9]);
  swift_bridgeObjectRelease();
  uint64_t v138 = v160[10];
  uint64_t v139 = (char *)v164 + v138;
  uint64_t v140 = (char *)v162 + v138;
  uint64_t v141 = *(void *)v140;
  LOBYTE(v140) = v140[8];
  *(void *)uint64_t v139 = v141;
  v139[8] = (char)v140;
  swift_bridgeObjectRelease();
  *((unsigned char *)v164 + v160[11]) = *((unsigned char *)v162 + v160[11]);
  *((unsigned char *)v164 + v160[12]) = *((unsigned char *)v162 + v160[12]);
  *(void *)((char *)v164 + *(int *)(v161 + 20)) = *(void *)((char *)v162 + *(int *)(v161 + 20));
  swift_bridgeObjectRelease();
  return v164;
}

uint64_t sub_1C13337DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C13337F0);
}

uint64_t sub_1C13337F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatPluginData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C13338B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C13338C4);
}

uint64_t sub_1C13338C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatPluginData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FormatSection()
{
  uint64_t result = qword_1EB865A80;
  if (!qword_1EB865A80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C13339CC()
{
  uint64_t result = type metadata accessor for FormatPluginData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FeedAdLayoutProviding.adFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedAdLayoutProviding.prerollPlacements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t SportsDataVisualizationResponseEventStatus.isFinalized.getter()
{
  uint64_t v1 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1336FF4(v0, (uint64_t)v3, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for StartTime;
  uint64_t v6 = 0;
  switch(EnumCaseMultiPayload)
  {
    case 6:
      uint64_t v6 = 1;
      uint64_t v7 = type metadata accessor for StartTime;
      goto LABEL_4;
    case 8:
    case 9:
      uint64_t v6 = 1;
      uint64_t v7 = type metadata accessor for StartTimeEndTime;
LABEL_4:
      uint64_t v5 = v7;
      goto LABEL_5;
    case 10:
      return v6;
    default:
LABEL_5:
      sub_1C1333C10((uint64_t)v3, v5);
      return v6;
  }
}

uint64_t type metadata accessor for SportsDataVisualizationResponseEventStatus(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB88FC00);
}

uint64_t type metadata accessor for StartTime(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB86ADC0);
}

uint64_t sub_1C1333C10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for StartTimeEndTime(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB8854C8);
}

uint64_t SportsDataVisualizationResponseEventStatus.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1F4188790](started - 8);
  uint64_t v56 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v55 = (uint64_t)&v50 - v6;
  sub_1C133705C(0, &qword_1EB86B7F0, (uint64_t (*)(void))sub_1C13344B8, (uint64_t)&type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v64 = v7;
  uint64_t v62 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v50 - v8;
  uint64_t v61 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1F4188790](v61);
  uint64_t v60 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v50 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v54 = (uint64_t)&v50 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v58 = (char *)&v50 - v16;
  MEMORY[0x1F4188790](v17);
  int v19 = (char *)&v50 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v50 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v50 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v50 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v50 - v30;
  uint64_t v32 = a1[3];
  uint64_t v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_1C13344B8();
  uint64_t v63 = v9;
  uint64_t v33 = (uint64_t)v67;
  sub_1C1520EBC();
  if (v33)
  {
    uint64_t v34 = (uint64_t)v65;
  }
  else
  {
    uint64_t v50 = v28;
    uint64_t v51 = v25;
    uint64_t v52 = v22;
    uint64_t v53 = v19;
    uint64_t v35 = (uint64_t)v58;
    uint64_t v36 = (uint64_t)v59;
    uint64_t v37 = (uint64_t)v60;
    uint64_t v38 = v62;
    uint64_t v67 = v31;
    sub_1C133450C();
    uint64_t v39 = v63;
    sub_1C15206EC();
    uint64_t v40 = v39;
    uint64_t v34 = (uint64_t)v65;
    uint64_t v41 = v40;
    switch(LOBYTE(v66[0]))
    {
      case 1:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        uint64_t v35 = (uint64_t)v51;
        StartTime.init(from:)(v66, (uint64_t)v51);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        goto LABEL_9;
      case 2:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        uint64_t v35 = (uint64_t)v52;
        StartTime.init(from:)(v66, (uint64_t)v52);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        goto LABEL_9;
      case 3:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        uint64_t v35 = (uint64_t)v53;
        StartTime.init(from:)(v66, (uint64_t)v53);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        goto LABEL_9;
      case 4:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        StartTime.init(from:)(v66, v35);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        goto LABEL_9;
      case 5:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        uint64_t v44 = v54;
        StartTime.init(from:)(v66, v54);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = v44;
        goto LABEL_10;
      case 6:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        StartTime.init(from:)(v66, v36);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = v36;
        goto LABEL_10;
      case 7:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        StartTime.init(from:)(v66, v37);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = v37;
        goto LABEL_10;
      case 8:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        uint64_t v45 = v55;
        StartTimeEndTime.init(from:)(v66, v55);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        uint64_t v46 = v45;
        uint64_t v43 = (uint64_t)v67;
        sub_1C1335044(v46, (uint64_t)v67, type metadata accessor for StartTimeEndTime);
        goto LABEL_17;
      case 9:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        uint64_t v47 = v56;
        StartTimeEndTime.init(from:)(v66, v56);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
        uint64_t v48 = v47;
        uint64_t v43 = (uint64_t)v67;
        sub_1C1335044(v48, (uint64_t)v67, type metadata accessor for StartTimeEndTime);
        goto LABEL_17;
      case 0xA:
        (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v64);
        uint64_t v43 = (uint64_t)v67;
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        sub_1BFC66384((uint64_t)v65, (uint64_t)v66);
        uint64_t v35 = (uint64_t)v50;
        StartTime.init(from:)(v66, (uint64_t)v50);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v64);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = v35;
LABEL_10:
        uint64_t v43 = (uint64_t)v67;
        sub_1C1335044(v42, (uint64_t)v67, type metadata accessor for SportsDataVisualizationResponseEventStatus);
        break;
    }
    sub_1C1335044(v43, v57, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  }
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

unint64_t sub_1C13344B8()
{
  unint64_t result = qword_1EB86ABA0;
  if (!qword_1EB86ABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABA0);
  }
  return result;
}

unint64_t sub_1C133450C()
{
  unint64_t result = qword_1EB86AB98;
  if (!qword_1EB86AB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AB98);
  }
  return result;
}

uint64_t StartTime.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_1C151631C();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)&v27 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v35 = (uint64_t)&v27 - v8;
  sub_1C133705C(0, &qword_1EB86B828, (uint64_t (*)(void))sub_1C13350AC, (uint64_t)&type metadata for StartTime.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v31 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t started = type metadata accessor for StartTime(0);
  MEMORY[0x1F4188790](started);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C13350AC();
  uint64_t v16 = v36;
  sub_1C1520EBC();
  if (v16)
  {
    uint64_t v26 = (uint64_t)a1;
  }
  else
  {
    uint64_t v27 = v15;
    uint64_t v28 = started;
    uint64_t v17 = v31;
    uint64_t v36 = a1;
    uint64_t v19 = v33;
    uint64_t v18 = v34;
    char v38 = 0;
    uint64_t v20 = v12;
    sub_1C15206DC();
    sub_1C151628C();
    char v37 = 1;
    char v21 = sub_1C152061C();
    uint64_t v22 = (uint64_t)v30;
    uint64_t v24 = (uint64_t)v27;
    v27[*(int *)(v28 + 20)] = v21 & 1;
    uint64_t v25 = v35;
    sub_1C1336808(v35, v21 & 1, v22);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v25, v18);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v24, v22, v18);
    sub_1C1335044(v24, v29, type metadata accessor for StartTime);
    uint64_t v26 = (uint64_t)v36;
  }
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t StartTimeEndTime.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_1C151661C();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA338(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v46 = (char *)&v39 - v6;
  uint64_t v7 = sub_1C151631C();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v45 = (char *)&v39 - v10;
  MEMORY[0x1F4188790](v11);
  int v49 = (char *)&v39 - v12;
  sub_1C133705C(0, &qword_1EB86B5F8, (uint64_t (*)(void))sub_1C1336F44, (uint64_t)&type metadata for StartTimeEndTime.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v14 = v13;
  uint64_t v48 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1F4188790](started);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1336F44();
  uint64_t v20 = v52;
  sub_1C1520EBC();
  if (v20) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v40 = started;
  uint64_t v22 = v50;
  uint64_t v52 = a1;
  uint64_t v23 = v51;
  char v55 = 0;
  uint64_t v24 = v16;
  sub_1C15206DC();
  uint64_t v25 = v14;
  sub_1C151628C();
  uint64_t v26 = v22;
  char v54 = 1;
  uint64_t v27 = v24;
  sub_1C152063C();
  uint64_t v28 = v40;
  uint64_t v29 = v47;
  uint64_t v30 = v48;
  if (v31)
  {
    uint64_t v32 = v25;
    uint64_t v33 = (uint64_t)v46;
    char v53 = 1;
    sub_1BFE0D898(&qword_1EB871168);
    sub_1C152065C();
    uint64_t v51 = v32;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v33, 1, v23) == 1)
    {
      uint64_t v34 = v41;
      sub_1C15165BC();
      sub_1C151613C();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v43);
      uint64_t v35 = v45;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v51);
      sub_1C1336F98(v33, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v19[*(int *)(v40 + 20)], v35, v23);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v51);
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
      char v37 = v45;
      v36(v45, v33, v23);
      v36(&v19[*(int *)(v40 + 20)], (uint64_t)v37, v23);
    }
  }
  else
  {
    sub_1C151628C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v25);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v19[*(int *)(v28 + 20)], v29, v23);
  }
  uint64_t v38 = (uint64_t)v52;
  sub_1C1336FF4((uint64_t)v19, v44, type metadata accessor for StartTimeEndTime);
  __swift_destroy_boxed_opaque_existential_1(v38);
  return sub_1C1333C10((uint64_t)v19, type metadata accessor for StartTimeEndTime);
}

uint64_t sub_1C1335044(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C13350AC()
{
  unint64_t result = qword_1EB86ADA8;
  if (!qword_1EB86ADA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ADA8);
  }
  return result;
}

uint64_t SportsDataVisualizationResponseEventStatus.encode(to:)(void *a1)
{
  uint64_t started = type metadata accessor for StartTimeEndTime(0);
  MEMORY[0x1F4188790](started - 8);
  uint64_t v83 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v82 = (uint64_t)&v67 - v5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C133705C(0, (unint64_t *)&unk_1EB86F488, (uint64_t (*)(void))sub_1C13350AC, (uint64_t)&type metadata for StartTime.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v85 = *(void *)(v7 - 8);
  uint64_t v86 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v67 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)&v67 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v71 = (char *)&v67 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v70 = (char *)&v67 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v69 = (char *)&v67 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v68 = (char *)&v67 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v67 = (char *)&v67 - v22;
  uint64_t v84 = type metadata accessor for StartTime(0);
  MEMORY[0x1F4188790](v84);
  uint64_t v81 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v80 = (char *)&v67 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v79 = (char *)&v67 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v78 = (char *)&v67 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v77 = (char *)&v67 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v76 = (char *)&v67 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v75 = (uint64_t)&v67 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v67 - v37;
  uint64_t v39 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v67 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C133705C(0, &qword_1EB86F480, (uint64_t (*)(void))sub_1C13344B8, (uint64_t)&type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys, v6);
  uint64_t v90 = v42;
  uint64_t v88 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v67 - v43;
  uint64_t v45 = a1[3];
  id v87 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v45);
  sub_1C13344B8();
  uint64_t v46 = v44;
  sub_1C1520F0C();
  sub_1C1336FF4(v91, (uint64_t)v41, type metadata accessor for SportsDataVisualizationResponseEventStatus);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v50 = v75;
      sub_1C1335044((uint64_t)v41, v75, type metadata accessor for StartTime);
      uint64_t v51 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (!v51)
      {
        __swift_project_boxed_opaque_existential_1(v87, v87[3]);
        sub_1C13350AC();
        uint64_t v52 = v68;
        sub_1C1520F0C();
        char v92 = 0;
        sub_1C151631C();
        sub_1BFE0D898((unint64_t *)&unk_1EB871150);
        uint64_t v53 = v86;
        sub_1C152080C();
        char v92 = 1;
        sub_1C15207DC();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v52, v53);
      }
      char v54 = type metadata accessor for StartTime;
      uint64_t v55 = v50;
      goto LABEL_31;
    case 2u:
      uint64_t v38 = v76;
      sub_1C1335044((uint64_t)v41, (uint64_t)v76, type metadata accessor for StartTime);
      uint64_t v56 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (v56) {
        goto LABEL_25;
      }
      __swift_project_boxed_opaque_existential_1(v87, v87[3]);
      sub_1C13350AC();
      int v49 = &v94;
      goto LABEL_13;
    case 3u:
      uint64_t v38 = v77;
      sub_1C1335044((uint64_t)v41, (uint64_t)v77, type metadata accessor for StartTime);
      uint64_t v57 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (v57) {
        goto LABEL_25;
      }
      __swift_project_boxed_opaque_existential_1(v87, v87[3]);
      sub_1C13350AC();
      int v49 = &v95;
      goto LABEL_13;
    case 4u:
      uint64_t v38 = v78;
      sub_1C1335044((uint64_t)v41, (uint64_t)v78, type metadata accessor for StartTime);
      uint64_t v59 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (v59) {
        goto LABEL_25;
      }
      __swift_project_boxed_opaque_existential_1(v87, v87[3]);
      sub_1C13350AC();
      uint64_t v58 = v71;
      goto LABEL_22;
    case 5u:
      uint64_t v38 = v79;
      sub_1C1335044((uint64_t)v41, (uint64_t)v79, type metadata accessor for StartTime);
      uint64_t v60 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (v60) {
        goto LABEL_25;
      }
      __swift_project_boxed_opaque_existential_1(v87, v87[3]);
      sub_1C13350AC();
      uint64_t v58 = v72;
      goto LABEL_22;
    case 6u:
      uint64_t v38 = v80;
      sub_1C1335044((uint64_t)v41, (uint64_t)v80, type metadata accessor for StartTime);
      uint64_t v61 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (v61) {
        goto LABEL_25;
      }
      __swift_project_boxed_opaque_existential_1(v87, v87[3]);
      sub_1C13350AC();
      uint64_t v58 = v73;
      goto LABEL_22;
    case 7u:
      uint64_t v38 = v81;
      sub_1C1335044((uint64_t)v41, (uint64_t)v81, type metadata accessor for StartTime);
      uint64_t v62 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (v62) {
        goto LABEL_25;
      }
      __swift_project_boxed_opaque_existential_1(v87, v87[3]);
      sub_1C13350AC();
      uint64_t v58 = v74;
      goto LABEL_22;
    case 8u:
      uint64_t v64 = v82;
      sub_1C1335044((uint64_t)v41, v82, type metadata accessor for StartTimeEndTime);
      goto LABEL_28;
    case 9u:
      uint64_t v64 = v83;
      sub_1C1335044((uint64_t)v41, v83, type metadata accessor for StartTimeEndTime);
LABEL_28:
      uint64_t v65 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (!v65) {
        StartTimeEndTime.encode(to:)(v87);
      }
      char v54 = type metadata accessor for StartTimeEndTime;
      uint64_t v55 = v64;
      goto LABEL_31;
    case 0xAu:
      uint64_t v48 = v90;
      sub_1C15207CC();
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v46, v48);
    default:
      sub_1C1335044((uint64_t)v41, (uint64_t)v38, type metadata accessor for StartTime);
      uint64_t v47 = v89;
      uint64_t v48 = v90;
      sub_1C15207CC();
      if (v47) {
        goto LABEL_25;
      }
      __swift_project_boxed_opaque_existential_1(v87, v87[3]);
      sub_1C13350AC();
      int v49 = &v93;
LABEL_13:
      uint64_t v58 = (char *)*(v49 - 32);
LABEL_22:
      sub_1C1520F0C();
      char v92 = 0;
      sub_1C151631C();
      sub_1BFE0D898((unint64_t *)&unk_1EB871150);
      uint64_t v63 = v86;
      sub_1C152080C();
      char v92 = 1;
      sub_1C15207DC();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v58, v63);
LABEL_25:
      char v54 = type metadata accessor for StartTime;
      uint64_t v55 = (uint64_t)v38;
LABEL_31:
      sub_1C1333C10(v55, v54);
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v46, v48);
  }
}

uint64_t sub_1C1335CFC(char a1)
{
  uint64_t result = 0x656D6147657250;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6576694C7261654ELL;
      break;
    case 2:
      uint64_t result = 0x6572676F72506E49;
      break;
    case 3:
      uint64_t result = 0x6B61657242;
      break;
    case 4:
      uint64_t result = 0x656E6F7074736F50;
      break;
    case 5:
      uint64_t result = 0x65646E6570737553;
      break;
    case 6:
      uint64_t result = 0x656C6C65636E6143;
      break;
    case 7:
      uint64_t result = 0x646579616C6544;
      break;
    case 8:
      uint64_t result = 0x6C616E6946;
      break;
    case 9:
      uint64_t result = 0x74696566726F46;
      break;
    case 10:
      uint64_t result = 0x6E776F6E6B6E55;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t StartTime.encode(to:)(void *a1)
{
  sub_1C133705C(0, (unint64_t *)&unk_1EB86F488, (uint64_t (*)(void))sub_1C13350AC, (uint64_t)&type metadata for StartTime.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C13350AC();
  sub_1C1520F0C();
  char v11 = 0;
  sub_1C151631C();
  sub_1BFE0D898((unint64_t *)&unk_1EB871150);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for StartTime(0);
    char v10 = 1;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StartTimeEndTime.encode(to:)(void *a1)
{
  sub_1C133705C(0, &qword_1EB86F478, (uint64_t (*)(void))sub_1C1336F44, (uint64_t)&type metadata for StartTimeEndTime.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1336F44();
  sub_1C1520F0C();
  char v11 = 0;
  sub_1C151631C();
  sub_1BFE0D898((unint64_t *)&unk_1EB871150);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for StartTimeEndTime(0);
    char v10 = 1;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C13361F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsDataVisualizationResponseEventStatus.init(from:)(a1, a2);
}

uint64_t sub_1C133620C(void *a1)
{
  return SportsDataVisualizationResponseEventStatus.encode(to:)(a1);
}

uint64_t sub_1C1336224()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1336274()
{
  return sub_1C151E77C();
}

uint64_t sub_1C1336288()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C13362D4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C1336328(void *a1@<X8>)
{
  *a1 = 0x737574617473;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1C1336340()
{
  return 0x737574617473;
}

uint64_t sub_1C1336354@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C13363AC(uint64_t a1)
{
  unint64_t v2 = sub_1C13344B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C13363E8(uint64_t a1)
{
  unint64_t v2 = sub_1C13344B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1336424(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C1335CFC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C1335CFC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C13364B0()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C1335CFC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C1336514()
{
  sub_1C1335CFC(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1336568()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C1335CFC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C13365C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1339F3C();
  *a1 = result;
  return result;
}

uint64_t sub_1C13365F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C1335CFC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C1336624()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C1336684()
{
  return sub_1C151EAEC();
}

uint64_t StartTime.isTbd.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StartTime(0) + 20));
}

uint64_t StartTime.init(startTime:isTbd:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1336808(a1, a2, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  uint64_t result = type metadata accessor for StartTime(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1C1336808@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v68) = a2;
  uint64_t v69 = a1;
  uint64_t v66 = a3;
  uint64_t v67 = sub_1C151631C();
  uint64_t v70 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA338(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v55 - v5;
  sub_1BFEEA338(0, &qword_1EB85C778, MEMORY[0x1E4F27CA0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v10 = sub_1C151661C();
  uint64_t v63 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151586C();
  uint64_t v64 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v55 - v17;
  sub_1BFEEA338(0, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v55 - v23;
  uint64_t v25 = sub_1C15166BC();
  uint64_t v26 = *(void *)(v25 - 8);
  __n128 v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)&v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v68)
  {
    uint64_t v58 = v21;
    uint64_t v59 = v10;
    uint64_t v61 = v13;
    uint64_t v62 = v30;
    uint64_t v60 = v15;
    uint64_t v68 = (uint64_t)v6;
    uint64_t v31 = v69;
    uint64_t v32 = v27;
    sub_1C151667C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v32) == 1)
    {
      sub_1C1336F98((uint64_t)v24, (unint64_t *)&qword_1EB871190, MEMORY[0x1E4F27D68]);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v66, v31, v67);
    }
    else
    {
      uint64_t v56 = v26;
      uint64_t v57 = v32;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v62, v24, v32);
      sub_1C15165BC();
      uint64_t v38 = v18;
      sub_1C151650C();
      uint64_t v39 = v63;
      uint64_t v40 = *(void (**)(char *, uint64_t))(v63 + 8);
      uint64_t v41 = v59;
      v40(v12, v59);
      sub_1C15165BC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v9, 0, 1, v41);
      sub_1C15165BC();
      uint64_t v42 = v58;
      sub_1C15165DC();
      v40(v12, v41);
      uint64_t v44 = v56;
      uint64_t v43 = v57;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v42, 0, 1, v57);
      sub_1C15157FC();
      LODWORD(v63) = v45 & 1;
      sub_1C151580C();
      sub_1C15157AC();
      uint64_t v46 = v60;
      sub_1C151585C();
      uint64_t v47 = v68;
      sub_1C15157CC();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v64 + 8);
      int v49 = v46;
      uint64_t v50 = v61;
      v48(v49, v61);
      v48(v38, v50);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v62, v43);
      uint64_t v51 = v65;
      uint64_t v52 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v65, v69, v67);
      int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v47, 1, v52);
      uint64_t v54 = v66;
      if (v53 == 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v66, v51, v52);
        return sub_1C1336F98(v47, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v52);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v54, v47, v52);
      }
    }
  }
  else
  {
    uint64_t v34 = v69;
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v70 + 16);
    uint64_t v36 = v66;
    uint64_t v37 = v67;
    return v35(v36, v34, v37, v28);
  }
}

unint64_t sub_1C1336F44()
{
  unint64_t result = qword_1EB8645F0;
  if (!qword_1EB8645F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8645F0);
  }
  return result;
}

uint64_t sub_1C1336F98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEEA338(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1336FF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C133705C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C13370C4()
{
  if (*v0) {
    return 0x6462547369;
  }
  else {
    return 0x6D69547472617473;
  }
}

uint64_t sub_1C1337100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1339F88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1337128(uint64_t a1)
{
  unint64_t v2 = sub_1C13350AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1337164(uint64_t a1)
{
  unint64_t v2 = sub_1C13350AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C13371A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StartTime.init(from:)(a1, a2);
}

uint64_t sub_1C13371B8(void *a1)
{
  return StartTime.encode(to:)(a1);
}

uint64_t _s8NewsFeed9StartTimeV05startD010Foundation4DateVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StartTimeEndTime.endTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StartTimeEndTime.init(startTime:endTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v9)((void *)(v6 - 8), a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
  return v9(v7, a2, v6);
}

uint64_t sub_1C1337368(uint64_t a1)
{
  unint64_t v2 = sub_1C1336F44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C13373A4(uint64_t a1)
{
  unint64_t v2 = sub_1C1336F44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C13373E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StartTimeEndTime.init(from:)(a1, a2);
}

uint64_t sub_1C13373F8(void *a1)
{
  return StartTimeEndTime.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for SportsDataVisualizationResponseEventStatus(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v7 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t started = type metadata accessor for StartTime(0);
        *((unsigned char *)a1 + *(int *)(started + 20)) = *((unsigned char *)a2 + *(int *)(started + 20));
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
        uint64_t v11 = sub_1C151631C();
        uint64_t v12 = *(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16);
        v12(a1, a2, v11);
        uint64_t v13 = type metadata accessor for StartTimeEndTime(0);
        v12((void *)((char *)a1 + *(int *)(v13 + 20)), (void *)((char *)a2 + *(int *)(v13 + 20)), v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SportsDataVisualizationResponseEventStatus(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t v3 = sub_1C151631C();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = a1;
      goto LABEL_4;
    case 8:
    case 9:
      uint64_t v7 = sub_1C151631C();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v7 - 8), a1, v7);
      uint64_t v6 = a1 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      uint64_t v5 = v7;
      uint64_t v4 = v8;
LABEL_4:
      uint64_t result = v4(v6, v5);
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *initializeWithCopy for SportsDataVisualizationResponseEventStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v6 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t started = type metadata accessor for StartTime(0);
      a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v8 = sub_1C151631C();
      uint64_t v9 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      uint64_t v10 = type metadata accessor for StartTimeEndTime(0);
      v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithCopy for SportsDataVisualizationResponseEventStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1333C10((uint64_t)a1, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v6 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t started = type metadata accessor for StartTime(0);
        a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v8 = sub_1C151631C();
        uint64_t v9 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16);
        v9(a1, a2, v8);
        uint64_t v10 = type metadata accessor for StartTimeEndTime(0);
        v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *initializeWithTake for SportsDataVisualizationResponseEventStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v6 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t started = type metadata accessor for StartTime(0);
      a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v8 = sub_1C151631C();
      uint64_t v9 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32);
      v9(a1, a2, v8);
      uint64_t v10 = type metadata accessor for StartTimeEndTime(0);
      v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithTake for SportsDataVisualizationResponseEventStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1333C10((uint64_t)a1, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v6 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t started = type metadata accessor for StartTime(0);
        a1[*(int *)(started + 20)] = a2[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v8 = sub_1C151631C();
        uint64_t v9 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32);
        v9(a1, a2, v8);
        uint64_t v10 = type metadata accessor for StartTimeEndTime(0);
        v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C1338D3C()
{
  uint64_t result = type metadata accessor for StartTime(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StartTimeEndTime(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StartTime(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for StartTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C13390DC);
}

uint64_t sub_1C13390DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for StartTime(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C13391C0);
}

uint64_t sub_1C13391C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C151631C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1C133927C()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StartTimeEndTime(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for StartTimeEndTime(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C133970C);
}

uint64_t sub_1C133970C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StartTimeEndTime(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C133978C);
}

uint64_t sub_1C133978C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C13397FC()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StartTimeEndTime.CodingKeys()
{
  return &type metadata for StartTimeEndTime.CodingKeys;
}

unsigned char *_s8NewsFeed16StartTimeEndTimeV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1339968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartTime.CodingKeys()
{
  return &type metadata for StartTime.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseEventStatus.EventStatusType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1339A6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseEventStatus.EventStatusType()
{
  return &type metadata for SportsDataVisualizationResponseEventStatus.EventStatusType;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseEventStatus.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C1339B40);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseEventStatus.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseEventStatus.CodingKeys;
}

unint64_t sub_1C1339B7C()
{
  unint64_t result = qword_1EA1AE400;
  if (!qword_1EA1AE400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE400);
  }
  return result;
}

unint64_t sub_1C1339BD4()
{
  unint64_t result = qword_1EA1AE408;
  if (!qword_1EA1AE408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE408);
  }
  return result;
}

unint64_t sub_1C1339C2C()
{
  unint64_t result = qword_1EA1AE410;
  if (!qword_1EA1AE410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE410);
  }
  return result;
}

unint64_t sub_1C1339C84()
{
  unint64_t result = qword_1EA1AE418;
  if (!qword_1EA1AE418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE418);
  }
  return result;
}

unint64_t sub_1C1339CDC()
{
  unint64_t result = qword_1EB864600;
  if (!qword_1EB864600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864600);
  }
  return result;
}

unint64_t sub_1C1339D34()
{
  unint64_t result = qword_1EB8645F8;
  if (!qword_1EB8645F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8645F8);
  }
  return result;
}

unint64_t sub_1C1339D8C()
{
  unint64_t result = qword_1EB86ADB8;
  if (!qword_1EB86ADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ADB8);
  }
  return result;
}

unint64_t sub_1C1339DE4()
{
  unint64_t result = qword_1EB86ADB0;
  if (!qword_1EB86ADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ADB0);
  }
  return result;
}

unint64_t sub_1C1339E3C()
{
  unint64_t result = qword_1EB86ABB0;
  if (!qword_1EB86ABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABB0);
  }
  return result;
}

unint64_t sub_1C1339E94()
{
  unint64_t result = qword_1EB86ABA8;
  if (!qword_1EB86ABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86ABA8);
  }
  return result;
}

unint64_t sub_1C1339EE8()
{
  unint64_t result = qword_1EB86AB90;
  if (!qword_1EB86AB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AB90);
  }
  return result;
}

uint64_t sub_1C1339F3C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C1339F88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6462547369 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t FormatSourceMap.description.getter()
{
  return 47;
}

uint64_t sub_1C133A128()
{
  return 47;
}

uint64_t FormatSourceMap.filePath.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSourceMap.line.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FormatSourceMap.column.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FormatSourceMap.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatSourceMap.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C133A2B4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C133A32C()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C133A374()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C133A3E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSourceMap.init(from:)(a1, a2);
}

uint64_t sub_1C133A400(void *a1)
{
  return FormatSourceMap.encode(to:)(a1);
}

uint64_t sub_1C133A418()
{
  return 47;
}

uint64_t sub_1C133A4C0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C133A508(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1C126866C);
}

uint64_t sub_1C133A4D8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C133A508(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1C1268F80);
}

uint64_t sub_1C133A4F0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C133A508(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1C1267D40);
}

uint64_t sub_1C133A508(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

BOOL _s8NewsFeed15FormatSourceMapV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    if (v2 != v5) {
      return 0;
    }
    return v3 == v4;
  }
  char v7 = sub_1C1520A9C();
  BOOL result = 0;
  if ((v7 & 1) != 0 && v2 == v5) {
    return v3 == v4;
  }
  return result;
}

uint64_t _s8NewsFeed15FormatSourceMapV1loiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_1C1520A9C() & 1) != 0)
  {
    if (v2 == v4) {
      return v3 < v5;
    }
    else {
      return v2 < v4;
    }
  }
  else
  {
    return sub_1C1520A9C();
  }
}

unint64_t sub_1C133A670(uint64_t a1)
{
  unint64_t result = sub_1C133A698();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C133A698()
{
  unint64_t result = qword_1EA1AE420;
  if (!qword_1EA1AE420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE420);
  }
  return result;
}

unint64_t sub_1C133A6F0()
{
  unint64_t result = qword_1EA1AE428;
  if (!qword_1EA1AE428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE428);
  }
  return result;
}

unint64_t sub_1C133A744(void *a1)
{
  a1[1] = sub_1BFEB3CF0();
  a1[2] = sub_1C0F4CAD0();
  unint64_t result = sub_1C133A6F0();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceMap()
{
  return &type metadata for FormatSourceMap;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:privacyMarkerFrameIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t *a14, char a15, long long a16, uint64_t a17)
{
  uint64_t v17 = *a7;
  uint64_t v18 = *a14;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(double *)(a9 + 48) = a10;
  *(double *)(a9 + 56) = a11;
  *(double *)(a9 + 64) = a12;
  *(double *)(a9 + 72) = a13;
  *(void *)(a9 + 80) = v17;
  *(void *)(a9 + 88) = a8;
  *(void *)(a9 + 96) = v18;
  *(unsigned char *)(a9 + 104) = a15;
  *(_OWORD *)(a9 + 112) = a16;
  *(void *)(a9 + 128) = a17;
  return result;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatAdMetricsNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 48);
}

uint64_t FormatAdMetricsNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 80);
  return swift_retain();
}

uint64_t FormatAdMetricsNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 88);
}

unint64_t FormatAdMetricsNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 96);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatAdMetricsNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t FormatAdMetricsNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatAdMetricsNodeLayoutAttributes.privacyMarkerFrameIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C133A8CC(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x676E697A69736572;
      break;
    case 5:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 6:
      unint64_t result = 0x696C696269736976;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C133AA1C()
{
  return sub_1C133A8CC(*v0);
}

uint64_t sub_1C133AA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C133BDA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C133AA4C(uint64_t a1)
{
  unint64_t v2 = sub_1C133AE94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C133AA88(uint64_t a1)
{
  unint64_t v2 = sub_1C133AE94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatAdMetricsNodeLayoutAttributes.encode(to:)(void *a1)
{
  sub_1C133B6D8(0, &qword_1EA1AE430, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v21 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v28 = *(void *)(v1 + 24);
  uint64_t v29 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v26 = *(void *)(v1 + 40);
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v11 = *(void *)(v1 + 56);
  uint64_t v12 = *(void *)(v1 + 64);
  uint64_t v13 = *(void *)(v1 + 72);
  uint64_t v14 = *(void *)(v1 + 80);
  uint64_t v24 = *(void *)(v1 + 88);
  uint64_t v25 = v14;
  uint64_t v15 = *(void *)(v1 + 96);
  int v35 = *(unsigned __int8 *)(v1 + 104);
  uint64_t v22 = *(void *)(v1 + 112);
  uint64_t v23 = v15;
  uint64_t v16 = *(void *)(v1 + 120);
  v21[0] = *(void *)(v1 + 128);
  v21[1] = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C133AE94();
  sub_1C1520F0C();
  LOBYTE(v31) = 0;
  uint64_t v17 = v30;
  sub_1C15207CC();
  if (!v17)
  {
    uint64_t v18 = v25;
    uint64_t v19 = v23;
    LOBYTE(v31) = 1;
    sub_1C15207CC();
    LOBYTE(v31) = 2;
    sub_1C15207CC();
    uint64_t v31 = v10;
    uint64_t v32 = v11;
    uint64_t v33 = v12;
    uint64_t v34 = v13;
    char v36 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C778(&qword_1EA197288, type metadata accessor for CGRect);
    sub_1C152080C();
    uint64_t v31 = v18;
    char v36 = 4;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v31) = 5;
    sub_1C15207FC();
    uint64_t v31 = v19;
    char v36 = 6;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v31) = 7;
    sub_1C15207DC();
    uint64_t v31 = v22;
    char v36 = 8;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C778(&qword_1EA198B58, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    LOBYTE(v31) = 9;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C133AE94()
{
  unint64_t result = qword_1EA1AE438;
  if (!qword_1EA1AE438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE438);
  }
  return result;
}

uint64_t FormatAdMetricsNodeLayoutAttributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C133B6D8(0, &qword_1EA1AE440, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = a1[3];
  uint64_t v80 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C133AE94();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  }
  uint64_t v11 = v7;
  uint64_t v48 = a2;
  LOBYTE(v60) = 0;
  uint64_t v12 = sub_1C152069C();
  uint64_t v14 = v13;
  LOBYTE(v60) = 1;
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1C152069C();
  LOBYTE(v60) = 2;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C152069C();
  uint64_t v50 = v16;
  uint64_t v46 = v17;
  uint64_t v19 = v18;
  type metadata accessor for CGRect(0);
  LOBYTE(v51) = 3;
  sub_1BFE4C778(&qword_1EB87A290, type metadata accessor for CGRect);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v49 = v19;
  unint64_t v20 = v60;
  uint64_t v21 = v61;
  uint64_t v22 = v62;
  uint64_t v23 = v63;
  LOBYTE(v51) = 4;
  sub_1C0260F28();
  sub_1C152065C();
  unint64_t v24 = v60;
  LOBYTE(v60) = 5;
  swift_retain();
  uint64_t v44 = sub_1C15206DC();
  LOBYTE(v51) = 6;
  sub_1BFE3D540();
  sub_1C15206EC();
  unint64_t v25 = v60;
  LOBYTE(v60) = 7;
  unint64_t v45 = v25;
  sub_1BFE6FA30(v25);
  uint64_t v43 = 0;
  int v42 = sub_1C15206AC();
  type metadata accessor for FormatContextLayoutOptions();
  LOBYTE(v51) = 8;
  sub_1BFE4C778(&qword_1EA198B88, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
  sub_1C15206EC();
  unint64_t v41 = v24;
  unint64_t v26 = v60;
  char v78 = 9;
  swift_retain();
  uint64_t v39 = sub_1C152060C();
  uint64_t v40 = v27;
  char v28 = v42 & 1;
  LODWORD(v43) = v42 & 1;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v6);
  *(void *)&long long v51 = v12;
  *((void *)&v51 + 1) = v14;
  uint64_t v30 = v49;
  uint64_t v29 = v50;
  *(void *)&long long v52 = v47;
  *((void *)&v52 + 1) = v50;
  unint64_t v31 = v45;
  *(void *)&long long v53 = v46;
  *((void *)&v53 + 1) = v49;
  *(void *)&long long v54 = v20;
  *((void *)&v54 + 1) = v21;
  *(void *)&long long v55 = v22;
  *((void *)&v55 + 1) = v23;
  *(void *)&long long v56 = v41;
  *((void *)&v56 + 1) = v44;
  *(void *)&long long v57 = v45;
  BYTE8(v57) = v28;
  *(void *)&long long v58 = v26;
  *((void *)&v58 + 1) = v39;
  uint64_t v59 = v40;
  sub_1C04987F0((uint64_t)&v51);
  swift_release();
  sub_1BFF0056C(v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v32 = v41;
  swift_release();
  long long v33 = v58;
  uint64_t v34 = v48;
  *(_OWORD *)(v48 + 96) = v57;
  *(_OWORD *)(v34 + 112) = v33;
  *(void *)(v34 + 128) = v59;
  long long v35 = v54;
  *(_OWORD *)(v34 + 32) = v53;
  *(_OWORD *)(v34 + 48) = v35;
  long long v36 = v56;
  *(_OWORD *)(v34 + 64) = v55;
  *(_OWORD *)(v34 + 80) = v36;
  long long v37 = v52;
  *(_OWORD *)uint64_t v34 = v51;
  *(_OWORD *)(v34 + 16) = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  unint64_t v60 = v12;
  uint64_t v61 = v14;
  uint64_t v62 = v47;
  uint64_t v63 = v29;
  uint64_t v64 = v46;
  uint64_t v65 = v30;
  unint64_t v66 = v20;
  uint64_t v67 = v21;
  uint64_t v68 = v22;
  uint64_t v69 = v23;
  unint64_t v70 = v32;
  uint64_t v71 = v44;
  unint64_t v72 = v31;
  char v73 = v43;
  *(_DWORD *)uint64_t v74 = v79[0];
  *(_DWORD *)&v74[3] = *(_DWORD *)((char *)v79 + 3);
  unint64_t v75 = v26;
  uint64_t v76 = v39;
  uint64_t v77 = v40;
  return sub_1C049887C((uint64_t)&v60);
}

void sub_1C133B6D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C133AE94();
    unint64_t v7 = a3(a1, &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C133B740()
{
  unint64_t result = qword_1EA1AE448;
  if (!qword_1EA1AE448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE448);
  }
  return result;
}

unint64_t sub_1C133B7A0()
{
  unint64_t result = qword_1EA1AE450;
  if (!qword_1EA1AE450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE450);
  }
  return result;
}

uint64_t sub_1C133B7F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatAdMetricsNodeLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1C133B80C(void *a1)
{
  return FormatAdMetricsNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C133B824()
{
  sub_1C0F5AFB4();
  return sub_1C151798C();
}

uint64_t destroy for FormatAdMetricsNodeLayoutAttributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(a1 + 96));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  unint64_t v9 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BFE6FA30(v9);
  *(void *)(a1 + 96) = v9;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  unint64_t v4 = *(void *)(a2 + 96);
  sub_1BFE6FA30(v4);
  unint64_t v5 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = v4;
  sub_1BFF0056C(v5);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatAdMetricsNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  unint64_t v8 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_1BFF0056C(v8);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAdMetricsNodeLayoutAttributes()
{
  return &type metadata for FormatAdMetricsNodeLayoutAttributes;
}

unsigned char *storeEnumTagSinglePayload for FormatAdMetricsNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C133BC60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAdMetricsNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatAdMetricsNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C133BC9C()
{
  unint64_t result = qword_1EA1AE458;
  if (!qword_1EA1AE458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE458);
  }
  return result;
}

unint64_t sub_1C133BCF4()
{
  unint64_t result = qword_1EA1AE460;
  if (!qword_1EA1AE460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE460);
  }
  return result;
}

unint64_t sub_1C133BD4C()
{
  unint64_t result = qword_1EA1AE468;
  if (!qword_1EA1AE468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE468);
  }
  return result;
}

uint64_t sub_1C133BDA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001C15FCEB0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1C133C1AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  sub_1C133C7E8(0, &qword_1EA1AE480, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C133C794();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v5)
  {
    char v14 = 1;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C133C334(uint64_t a1)
{
  unint64_t v2 = sub_1C133C794();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C133C370(uint64_t a1)
{
  unint64_t v2 = sub_1C133C794();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C133C3AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C133C578(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1C133C3DC(void *a1)
{
  return sub_1C133C1AC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C133C3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_1C0BAB8E4(0, &qword_1EA1A2778, (uint64_t (*)(uint64_t))sub_1C03A1444, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0A1B2E8();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
  *(void *)(v11 + 32) = 0x696669746E656449;
  *(void *)(v11 + 40) = 0xEA00000000007265;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  uint64_t v13 = MEMORY[0x1E4FBB208];
  *(void *)(v11 + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 80) = v13;
  *(void *)(v11 + 48) = a1;
  *(void *)(v11 + 56) = a2;
  *(unsigned char *)(v11 + 88) = 0;
  *(void *)(v11 + 96) = 1701667150;
  *(void *)(v11 + 104) = 0xE400000000000000;
  *(void *)(v11 + 136) = v12;
  *(void *)(v11 + 144) = v13;
  *(void *)(v11 + 112) = a3;
  *(void *)(v11 + 120) = a4;
  *(unsigned char *)(v11 + 152) = 0;
  *(void *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(void *)(inited + 64) = &off_1F1B9F170;
  *(void *)(inited + 32) = 0x7954656C7A7A7550;
  *(void *)(inited + 40) = 0xEA00000000006570;
  *(void *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C03A101C(inited);
  a5[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a5[4] = (uint64_t)&off_1F1B9F238;
  *a5 = result;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleType()
{
  return &type metadata for DebugInspectionPuzzleType;
}

uint64_t sub_1C133C578(void *a1)
{
  sub_1C133C7E8(0, &qword_1EA1AE470, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C133C794();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1C152069C();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1C152069C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1C133C794()
{
  unint64_t result = qword_1EA1AE478;
  if (!qword_1EA1AE478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE478);
  }
  return result;
}

void sub_1C133C7E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C133C794();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionPuzzleType.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionPuzzleType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C133C918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleType.CodingKeys()
{
  return &type metadata for DebugInspectionPuzzleType.CodingKeys;
}

unint64_t sub_1C133C954()
{
  unint64_t result = qword_1EA1AE488;
  if (!qword_1EA1AE488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE488);
  }
  return result;
}

unint64_t sub_1C133C9AC()
{
  unint64_t result = qword_1EA1AE490;
  if (!qword_1EA1AE490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE490);
  }
  return result;
}

unint64_t sub_1C133CA04()
{
  unint64_t result = qword_1EA1AE498;
  if (!qword_1EA1AE498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE498);
  }
  return result;
}

uint64_t *sub_1C133CA58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1C151DC7C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *unint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_1C133CB98(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1C151DC7C();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1C133CC68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1C151DC7C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C133CD54(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1C133CE58((uint64_t)a1 + v6);
    sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1C151DC7C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C133CE58(uint64_t a1)
{
  sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1C133CED0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1C151DC7C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_1C133CFBC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C133CE58((uint64_t)a1 + v6);
    sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
    uint64_t v10 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1C151DC7C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C133D0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C133D0DC);
}

uint64_t sub_1C133D0DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C133D1A8(0, &qword_1EA1AE4A0, MEMORY[0x1E4F3C658]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

void sub_1C133D1A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C151DC7C();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C133D208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C133D21C);
}

void *sub_1C133D21C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C133D1A8(0, &qword_1EA1AE4A0, MEMORY[0x1E4F3C658]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DebugTaxtAttachementList()
{
  uint64_t result = qword_1EA1AE4A8;
  if (!qword_1EA1AE4A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C133D32C()
{
  sub_1C133D1A8(319, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C133D3E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C133D400@<X0>(ValueMetadata **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for DebugTaxtAttachementList();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v43 = *(void *)(v44 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v42 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C133E82C();
  uint64_t v6 = v5;
  Description = (void (**)(char *, ValueMetadata *))v5[-1].Description;
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C133E6F0();
  uint64_t v11 = v10;
  unint64_t v41 = (void (**)(char *, ValueMetadata *))v10[-1].Description;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C133E584();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v40 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  uint64_t v39 = a1;
  uint64_t v18 = *a1;
  uint64_t v51 = 0;
  long long v52 = v18;
  uint64_t v49 = &v52;
  uint64_t v50 = sub_1C133D9BC;
  sub_1C133E8AC();
  sub_1C133EA44();
  swift_bridgeObjectRetain();
  sub_1C151DF8C();
  swift_bridgeObjectRelease();
  uint64_t v48 = v17;
  sub_1C133EAE4();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C133FB50(&qword_1EA1AE530, (void (*)(uint64_t))sub_1C133E82C);
  sub_1C133EB98();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
  long long v52 = v23;
  uint64_t v53 = v24;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = v20;
  sub_1C151E08C();
  Description[1](v9, v6);
  sub_1C151DDDC();
  long long v52 = v6;
  uint64_t v53 = v20;
  unint64_t v54 = v21;
  unint64_t v55 = OpaqueTypeConformance2;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = v40;
  sub_1C151E04C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v41[1](v13, v11);
  uint64_t v28 = v42;
  sub_1C133F62C((uint64_t)v39, v42);
  unint64_t v29 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v30 = swift_allocObject();
  sub_1C133F694(v28, v30 + v29);
  sub_1C133EC8C();
  long long v52 = v11;
  uint64_t v53 = v26;
  swift_getOpaqueTypeConformance2();
  sub_1C133EEC0();
  sub_1C133EDD8();
  unint64_t v32 = v31;
  unint64_t v33 = sub_1C133EE6C();
  unint64_t v34 = sub_1BFF27ECC();
  long long v52 = &type metadata for AttachmentTextView;
  uint64_t v53 = MEMORY[0x1E4FBB1A0];
  unint64_t v54 = v33;
  unint64_t v55 = v34;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  long long v52 = v32;
  uint64_t v53 = v38;
  unint64_t v54 = v35;
  unint64_t v55 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v45;
  sub_1C151E07C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v27, v36);
}

uint64_t sub_1C133D9BC(long long *a1)
{
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = *a1;
  long long v5 = v2;
  long long v6 = v3;
  sub_1BFF59A8C((uint64_t)&v4);
  sub_1BFF59A8C((uint64_t)&v5);
  sub_1BFF59A8C((uint64_t)&v6);
  sub_1C133EEC0();
  return sub_1C151DC8C();
}

uint64_t sub_1C133DA70@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF27ECC();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C151DFFC();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1C133DADC(void *a1, uint64_t a2)
{
  sub_1C133EDD8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[5];
  unint64_t v12 = *MEMORY[0x1E4FB28C8];
  uint64_t v22 = (ValueMetadata *)a1[4];
  uint64_t v23 = v11;
  unint64_t v24 = v12;
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  unint64_t v13 = sub_1C133EE6C();
  unint64_t v14 = sub_1BFF27ECC();
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  sub_1C151E05C();
  uint64_t v21 = a2;
  sub_1C133EAE4();
  uint64_t v22 = &type metadata for AttachmentTextView;
  uint64_t v23 = v15;
  unint64_t v24 = v13;
  unint64_t v25 = v14;
  swift_getOpaqueTypeConformance2();
  sub_1C133EB98();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
  uint64_t v22 = v17;
  uint64_t v23 = v18;
  swift_getOpaqueTypeConformance2();
  sub_1C151E08C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C133DCF0(uint64_t a1)
{
  uint64_t v2 = sub_1C151DEEC();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C133EB98();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C151DEDC();
  uint64_t v11 = a1;
  sub_1C133EC2C();
  sub_1C133FB50(&qword_1EA1AE520, (void (*)(uint64_t))sub_1C133EC2C);
  sub_1C151DD5C();
  uint64_t v8 = sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
  MEMORY[0x1C18C5A30](v7, v4, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C133DEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a3;
  uint64_t v4 = type metadata accessor for DebugTaxtAttachementList();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C151DDDC();
  sub_1C133F62C(a1, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1C133F694((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  return sub_1C151E0FC();
}

uint64_t sub_1C133DFF8()
{
  uint64_t v0 = sub_1C151DC7C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DebugTaxtAttachementList();
  sub_1C133F1D0((uint64_t)v3);
  sub_1C151DC6C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1C133E0E4()
{
  return sub_1C151DD3C();
}

uint64_t sub_1C133E338@<X0>(uint64_t a1@<X8>)
{
  return sub_1C133D400(*(ValueMetadata ***)(v1 + 16), a1);
}

void sub_1C133E340()
{
  if (!qword_1EA1AE4B8)
  {
    sub_1C133E584();
    sub_1C133EC8C();
    sub_1C133E6F0();
    sub_1C133E82C();
    sub_1C133EAE4();
    sub_1C133FB50(&qword_1EA1AE530, (void (*)(uint64_t))sub_1C133E82C);
    sub_1C133EB98();
    sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C133EEC0();
    sub_1C133EDD8();
    sub_1C133EE6C();
    sub_1BFF27ECC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1AE4B8);
    }
  }
}

void sub_1C133E584()
{
  if (!qword_1EA1AE4C0)
  {
    sub_1C133E6F0();
    sub_1C133E82C();
    sub_1C133EAE4();
    sub_1C133FB50(&qword_1EA1AE530, (void (*)(uint64_t))sub_1C133E82C);
    sub_1C133EB98();
    sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1AE4C0);
    }
  }
}

void sub_1C133E6F0()
{
  if (!qword_1EA1AE4C8)
  {
    sub_1C133E82C();
    sub_1C133EAE4();
    sub_1C133FB50(&qword_1EA1AE530, (void (*)(uint64_t))sub_1C133E82C);
    sub_1C133EB98();
    sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1AE4C8);
    }
  }
}

void sub_1C133E82C()
{
  if (!qword_1EA1AE4D0)
  {
    sub_1C133E8AC();
    sub_1C133EA44();
    unint64_t v0 = sub_1C151DF9C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE4D0);
    }
  }
}

void sub_1C133E8AC()
{
  if (!qword_1EA1AE4D8)
  {
    sub_1C133E974();
    sub_1C133E9CC();
    sub_1C133FB50(&qword_1EA1AE4F0, (void (*)(uint64_t))sub_1C133E974);
    unint64_t v0 = sub_1C151E14C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE4D8);
    }
  }
}

void sub_1C133E974()
{
  if (!qword_1EA1AE4E0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE4E0);
    }
  }
}

void sub_1C133E9CC()
{
  if (!qword_1EA1AE4E8)
  {
    unint64_t v0 = sub_1C151DC9C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE4E8);
    }
  }
}

unint64_t sub_1C133EA44()
{
  unint64_t result = qword_1EA1AE4F8;
  if (!qword_1EA1AE4F8)
  {
    sub_1C133E8AC();
    sub_1C133FB50(&qword_1EA1AE500, (void (*)(uint64_t))sub_1C133E9CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE4F8);
  }
  return result;
}

void sub_1C133EAE4()
{
  if (!qword_1EA1AE508)
  {
    sub_1C133EB98();
    sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1AE508);
    }
  }
}

void sub_1C133EB98()
{
  if (!qword_1EA1AE510)
  {
    sub_1C133EC2C();
    sub_1C133FB50(&qword_1EA1AE520, (void (*)(uint64_t))sub_1C133EC2C);
    unint64_t v0 = sub_1C151DD6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE510);
    }
  }
}

void sub_1C133EC2C()
{
  if (!qword_1EA1AE518)
  {
    unint64_t v0 = sub_1C151E10C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE518);
    }
  }
}

void sub_1C133EC8C()
{
  if (!qword_1EA1AE538)
  {
    sub_1C133EDD8();
    sub_1C133EAE4();
    sub_1C133EE6C();
    sub_1BFF27ECC();
    swift_getOpaqueTypeConformance2();
    sub_1C133EB98();
    sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1AE538);
    }
  }
}

void sub_1C133EDD8()
{
  if (!qword_1EA1AE540)
  {
    sub_1C133EE6C();
    sub_1BFF27ECC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA1AE540);
    }
  }
}

unint64_t sub_1C133EE6C()
{
  unint64_t result = qword_1EA1AE548;
  if (!qword_1EA1AE548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE548);
  }
  return result;
}

unint64_t sub_1C133EEC0()
{
  unint64_t result = qword_1EA1AE550;
  if (!qword_1EA1AE550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE550);
  }
  return result;
}

id sub_1C133EF14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1DD8]), sel_init);
  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, v1);
  objc_msgSend(v2, sel_setFont_, v3);

  objc_msgSend(v2, sel_setAutocapitalizationType_, 2);
  objc_msgSend(v2, sel_setSelectable_, 1);
  objc_msgSend(v2, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v2, sel_setEditable_, 0);
  return v2;
}

void sub_1C133EFE4(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = (void *)sub_1C151E5EC();
  objc_msgSend(a1, sel_setText_, v4);

  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, v3);
  objc_msgSend(a1, sel_setFont_, v5);
}

uint64_t sub_1C133F09C()
{
  return sub_1C151DE2C();
}

uint64_t sub_1C133F0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1C133FE10();
  return MEMORY[0x1F40F9EF0](a1, a2, a3, v6);
}

uint64_t sub_1C133F144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1C133FE10();
  return MEMORY[0x1F40F9E78](a1, a2, a3, v6);
}

void sub_1C133F1A8()
{
}

uint64_t sub_1C133F1D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151DDBC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v19 - v9;
  sub_1C133F7E8(v2, (uint64_t)v19 - v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1C151DC7C();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_1C151F37C();
    unint64_t v14 = sub_1C151DF4C();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v19[1] = a1;
      uint64_t v18 = v17;
      uint64_t v20 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v19[2] = sub_1BFDA76EC(0x417373696D736944, 0xED00006E6F697463, &v20);
      sub_1C151FE1C();
      _os_log_impl(&dword_1BFC31000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v18, -1, -1);
      MEMORY[0x1C18C9B00](v16, -1, -1);
    }

    sub_1C151DDAC();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1C133F49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_1C133E974();
  sub_1C133E9CC();
  sub_1C133FB50(&qword_1EA1AE4F0, (void (*)(uint64_t))sub_1C133E974);
  sub_1C133FB50(&qword_1EA1AE500, (void (*)(uint64_t))sub_1C133E9CC);
  sub_1C133F974();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1C151E13C();
}

uint64_t sub_1C133F5F0()
{
  return sub_1C133F49C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C133F5FC()
{
  return sub_1C133DCF0(*(void *)(v0 + 16));
}

uint64_t sub_1C133F62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugTaxtAttachementList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C133F694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugTaxtAttachementList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C133F6F8(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DebugTaxtAttachementList() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1C133DADC(a1, v4);
}

uint64_t sub_1C133F778()
{
  return sub_1C133DCF0(*(void *)(v0 + 16));
}

uint64_t sub_1C133F7A8()
{
  return sub_1C133DEBC(*(void *)(v0 + 16), (uint64_t)&unk_1F1C2A808, (uint64_t)sub_1C133F7E4);
}

uint64_t sub_1C133F7E8(uint64_t a1, uint64_t a2)
{
  sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C133F868()
{
  return sub_1C133DEBC(*(void *)(v0 + 16), (uint64_t)&unk_1F1C2A830, (uint64_t)sub_1C133F7E4);
}

uint64_t sub_1C133F8A4()
{
  return sub_1C133DFF8();
}

uint64_t sub_1C133F8F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C133F930(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = *(_OWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  uint64_t v8 = v4;
  uint64_t v9 = v5;
  return v2(v7);
}

unint64_t sub_1C133F974()
{
  unint64_t result = qword_1EA1AE558;
  if (!qword_1EA1AE558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE558);
  }
  return result;
}

uint64_t sub_1C133F9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C133DA70(a1);
}

void destroy for AttachmentTextView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s8NewsFeed18AttachmentTextViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for AttachmentTextView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for AttachmentTextView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for AttachmentTextView()
{
  return &type metadata for AttachmentTextView;
}

uint64_t sub_1C133FB08()
{
  return sub_1C133FB50(&qword_1EA1AE560, (void (*)(uint64_t))sub_1C133FB98);
}

uint64_t sub_1C133FB50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C133FB98()
{
  if (!qword_1EA1AE568)
  {
    sub_1C151DCAC();
    sub_1C133E340();
    sub_1C133E584();
    sub_1C133EC8C();
    sub_1C133E6F0();
    sub_1C133E82C();
    sub_1C133EAE4();
    sub_1C133FB50(&qword_1EA1AE530, (void (*)(uint64_t))sub_1C133E82C);
    sub_1C133EB98();
    sub_1C133FB50(&qword_1EA1AE528, (void (*)(uint64_t))sub_1C133EB98);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1C133EEC0();
    sub_1C133EDD8();
    sub_1C133EE6C();
    sub_1BFF27ECC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_1C151DD4C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE568);
    }
  }
}

uint64_t sub_1C133FE04()
{
  return MEMORY[0x1E4F3F158];
}

unint64_t sub_1C133FE10()
{
  unint64_t result = qword_1EA1AE570;
  if (!qword_1EA1AE570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE570);
  }
  return result;
}

void sub_1C133FE68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (id *)((char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v12 = *v2;
  switch((v12 >> 4) & 3)
  {
    case 1u:
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v3)
      {
        if (v12)
        {
          if (qword_1EB86F710 != -1) {
            swift_once();
          }
          uint64_t v17 = sub_1C151CE3C();
          uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB86F6F0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a2, v18, v17);
        }
        else if (objc_msgSend(v11[5], sel_sourceChannel))
        {
          v23[0] = 0x3A3A776F6C6C6F66;
          v23[1] = 0xE800000000000000;
          id v13 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          sub_1C151E62C();

          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151CE2C();
          swift_unknownObjectRelease_n();
        }
        else
        {
          type metadata accessor for FormatLayoutError();
          sub_1BFE7E51C();
          swift_allocError();
          *uint64_t v21 = 0xD000000000000012;
          v21[1] = 0x80000001C1616870;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
        }
        os_log_type_t v15 = type metadata accessor for FeedHeadline;
        uint64_t v16 = (uint64_t)v11;
        goto LABEL_21;
      }
      break;
    case 2u:
      sub_1C0E473E0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v23);
      if (!v3)
      {
        if (v12)
        {
          if (qword_1EB86F710 != -1) {
            swift_once();
          }
          uint64_t v19 = sub_1C151CE3C();
          uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB86F6F0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a2, v20, v19);
        }
        else
        {
          v22[1] = 0x3A3A776F6C6C6F66;
          long long v22[2] = 0xE800000000000000;
          id v14 = objc_msgSend((id)v23[2], sel_identifier);
          sub_1C151E62C();

          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151CE2C();
        }
        sub_1BFEA4290((uint64_t)v23);
      }
      break;
    case 3u:
      sub_1BFF7DD68(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v8);
      if (!v3)
      {
        FormatWebEmbedBinding.SourceItemTip.tipSource(from:)((uint64_t)v8, a2);
        os_log_type_t v15 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
        uint64_t v16 = (uint64_t)v8;
LABEL_21:
        sub_1BFFEED10(v16, v15);
      }
      break;
    default:
      LOBYTE(v23[0]) = v12;
      FormatGroupBinding.SourceItemTip.tipSource(from:)(a1, a2);
      break;
  }
}

uint64_t sub_1C13402C8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatSourceItemTipBinding.init(from:)(a1, a2);
}

uint64_t sub_1C13402E0(void *a1)
{
  return FormatSourceItemTipBinding.encode(to:)(a1);
}

uint64_t _s8NewsFeed26FormatSourceItemTipBindingO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch((v2 >> 4) & 3)
  {
    case 1u:
      int v5 = v3 & 0x30;
      BOOL v6 = ((v3 ^ v2) & 1) == 0;
      uint64_t result = v5 == 16 && v6;
      break;
    case 2u:
      int v7 = v3 & 0x30;
      BOOL v8 = ((v3 ^ v2) & 1) == 0;
      uint64_t result = v7 == 32 && v8;
      break;
    case 3u:
      uint64_t result = (~v3 & 0x30) == 0;
      break;
    default:
      if ((v3 & 0x30) != 0)
      {
LABEL_3:
        uint64_t result = 0;
      }
      else
      {
        switch(v2 >> 6)
        {
          case 1u:
            int v14 = v3 & 0xC0;
            int v15 = (v3 ^ v2) & 1;
            if (v14 != 64 || v15 != 0) {
              goto LABEL_3;
            }
            uint64_t result = 1;
            break;
          case 2u:
            int v11 = v3 & 0xC0;
            int v12 = (v3 ^ v2) & 1;
            if (v11 != 128 || v12 != 0) {
              goto LABEL_3;
            }
            uint64_t result = 1;
            break;
          case 3u:
            if (v3 <= 0xBF) {
              goto LABEL_3;
            }
            uint64_t result = 1;
            break;
          default:
            int v9 = (v3 ^ v2) & 1;
            if (v3 > 0x3F || v9 != 0) {
              goto LABEL_3;
            }
            uint64_t result = 1;
            break;
        }
      }
      break;
  }
  return result;
}

unint64_t sub_1C1340430(uint64_t a1)
{
  unint64_t result = sub_1C1340458();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1340458()
{
  unint64_t result = qword_1EA1AE578;
  if (!qword_1EA1AE578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE578);
  }
  return result;
}

unint64_t sub_1C13404AC(void *a1)
{
  a1[1] = sub_1C08B51DC();
  a1[2] = sub_1C08EF94C();
  unint64_t result = sub_1C13404E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C13404E4()
{
  unint64_t result = qword_1EA1AE580;
  if (!qword_1EA1AE580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE580);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatSourceItemTipBinding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 227 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 227) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1C)
  {
    unsigned int v6 = ((a2 - 29) >> 8) + 1;
    *unint64_t result = a2 - 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1340610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * ((((-a2 >> 2) & 7) - 8 * a2) & 0x1F);
        break;
    }
  }
  return result;
}

uint64_t sub_1C1340638(unsigned __int8 *a1)
{
  return (*a1 >> 4) & 3;
}

unsigned char *sub_1C1340644(unsigned char *result)
{
  *result &= 0xCFu;
  return result;
}

unsigned char *sub_1C1340654(unsigned char *result, char a2)
{
  *unint64_t result = *result & 0xC1 | (16 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceItemTipBinding()
{
  return &type metadata for FormatSourceItemTipBinding;
}

uint64_t dispatch thunk of FeedBackgroundProviding.background.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FeedItemRepresentable.feedContextIdentifier.getter()
{
  return 0;
}

uint64_t dispatch thunk of FeedItemRepresentable.feedItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemRepresentable.feedContextIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedConfigType.publishDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedConfigType.groups.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedConfigType.allowedGroups(context:isSubscribed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of FeedConfigType.replacing(groups:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

ValueMetadata *type metadata accessor for DebugFormatVersioningModeSection()
{
  return &type metadata for DebugFormatVersioningModeSection;
}

uint64_t *sub_1C1340724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      uint64_t v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for FormatVersioningModeSelection(0);
      unsigned int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 2)
      {
        uint64_t v19 = sub_1C151928C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
      }
      else if (v9 > 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
        int v12 = (char *)a1 + v11;
        id v13 = (char *)a2 + v11;
        uint64_t v14 = sub_1C151928C();
        int v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_12;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1C13409B8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    type metadata accessor for FormatVersioningModeSelection(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 2)
    {
      if (result > 1) {
        return result;
      }
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
    }
    uint64_t v3 = sub_1C151928C();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

void *sub_1C1340AA0(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = a2[3];
    a1[2] = a2[2];
    a1[3] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for FormatVersioningModeSelection(0);
    unsigned int v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 2)
    {
      uint64_t v17 = sub_1C151928C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      swift_storeEnumTagMultiPayload();
    }
    else if (v8 > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      uint64_t v11 = (char *)a1 + v10;
      int v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1C151928C();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_10;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1C1340CF0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1340F70((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for FormatVersioningModeSelection(0);
      unsigned int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 2)
      {
        uint64_t v14 = sub_1C151928C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
      }
      else if (v8 > 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v9 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1C151928C();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_11;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C1340F70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatVersioningModeItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatVersioningModeItem()
{
  uint64_t result = qword_1EA1AE588;
  if (!qword_1EA1AE588) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C1341018(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for FormatVersioningModeSelection(0);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1C134120C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1340F70((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for FormatVersioningModeSelection(0);
      unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v12 = sub_1C151928C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload > 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v8 = *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C1341410()
{
  uint64_t result = type metadata accessor for FormatVersioningModeSelection(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t static FormatShineAlphaProcessor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) != 1) {
    return (v4 & 1) == 0 && v2 == v3;
  }
  BOOL v5 = *(void *)&v3 == 0;
  if (v3 == 0.0) {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v5) {
    unsigned int v4 = 0;
  }
  if (v2 == 0.0) {
    return v6;
  }
  else {
    return v4;
  }
}

unint64_t sub_1C13414F4(uint64_t a1)
{
  unint64_t result = sub_1C134151C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C134151C()
{
  unint64_t result = qword_1EA1AE598;
  if (!qword_1EA1AE598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE598);
  }
  return result;
}

unint64_t sub_1C1341570(void *a1)
{
  a1[1] = sub_1C0868F40();
  a1[2] = sub_1C0904B54();
  unint64_t result = sub_1C13415A8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C13415A8()
{
  unint64_t result = qword_1EA1AE5A0;
  if (!qword_1EA1AE5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE5A0);
  }
  return result;
}

uint64_t sub_1C13415FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatShineAlphaProcessor.init(from:)(a1, a2);
}

uint64_t sub_1C1341614(void *a1)
{
  return FormatShineAlphaProcessor.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatShineAlphaProcessor()
{
  return &type metadata for FormatShineAlphaProcessor;
}

uint64_t sub_1C134163C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v11;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1BFF661B8(v7 > 1, v8 + 1, 1);
      }
      v4 += 6;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1341714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1C1341764(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1341B64);
}

uint64_t sub_1C1341764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1BFD20484(a1, (uint64_t)v63);
  sub_1BFD20484(a1, (uint64_t)&v64);
  if ((v68 & 0x8000000000000000) == 0)
  {
    uint64_t v75 = v64;
    uint64_t v58 = v65;
    uint64_t v52 = v68;
    uint64_t v25 = v66;
    uint64_t v24 = v67;
    uint64_t v26 = v69;
    uint64_t v27 = v70;
    uint64_t v28 = v72;
    uint64_t v54 = v71;
    uint64_t v29 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v30 = v26;
    swift_bridgeObjectRetain();
    uint64_t v31 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v25;
    uint64_t v33 = v52;
    uint64_t v34 = a7;
    uint64_t v35 = v58;
    uint64_t v36 = a3;
    uint64_t v37 = a4;
    uint64_t v38 = a5;
    uint64_t v39 = a6;
    char v40 = a8;
LABEL_9:
    v74[0] = v75;
    v74[1] = v35;
    uint64_t v74[2] = v32;
    v74[3] = v31;
    v74[4] = v33;
    v74[5] = v30;
    v74[6] = v27;
    unsigned char v74[7] = v54;
    v74[8] = v28;
    v74[9] = v29;
    uint64_t v45 = a22(v39, v74, v36, v37, v34, v40 & 1, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v45;
  }
  uint64_t v33 = v68 & 0x7FFFFFFFFFFFFFFFLL;
  v68 &= ~0x8000000000000000;
  uint64_t v75 = v64;
  uint64_t v59 = v65;
  uint64_t v50 = v69;
  uint64_t v51 = v67;
  uint64_t v49 = v70;
  uint64_t v53 = v72;
  uint64_t v54 = v71;
  uint64_t v47 = v66;
  uint64_t v48 = v73;
  v74[0] = a2;
  sub_1C1354BB0(0, &qword_1EB860C28, MEMORY[0x1E4FABC38], MEMORY[0x1E4FBB320]);
  sub_1C135817C();
  sub_1C134A8EC((unint64_t *)&qword_1EB85F338, MEMORY[0x1E4FABC38]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_1C151E91C();
  if (!*(void *)(v41 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = a3;
    uint64_t v37 = a4;
    uint64_t v38 = a5;
    uint64_t v39 = a6;
    uint64_t v34 = a7;
    uint64_t v35 = v59;
    uint64_t v30 = v50;
    uint64_t v31 = v51;
    char v40 = a8;
    uint64_t v28 = v53;
LABEL_8:
    uint64_t v29 = v48;
    uint64_t v27 = v49;
    uint64_t v32 = v47;
    goto LABEL_9;
  }
  uint64_t v28 = v53;
  uint64_t v35 = v59;
  swift_bridgeObjectRetain();
  unint64_t v42 = sub_1BFEF2D8C(v75, v59);
  if ((v43 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = a3;
    uint64_t v37 = a4;
    uint64_t v38 = a5;
    uint64_t v39 = a6;
    uint64_t v34 = a7;
    uint64_t v30 = v50;
    uint64_t v31 = v51;
    char v40 = a8;
    goto LABEL_8;
  }
  uint64_t v44 = *(void *)(*(void *)(v41 + 56) + 8 * v42);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1358098(a5, (uint64_t)v74, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v45 = FeedGroupRegion.init(groupIdentifier:pluginModel:feedGroupDebug:)(a3, a4, v44, (uint64_t)v74);
  sub_1C1358204(a1);
  return v45;
}

uint64_t sub_1C1341B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v91 = a8;
  int v90 = a6;
  uint64_t v95 = a4;
  uint64_t v94 = a3;
  uint64_t v93 = (_OWORD *)a2;
  int v96 = (uint64_t *)a1;
  uint64_t v92 = type metadata accessor for FormatContent.Resolved();
  uint64_t v86 = *(void *)(v92 - 8);
  uint64_t v21 = *(void *)(v86 + 64);
  MEMORY[0x1F4188790](v92);
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v23 = v22;
  int v97 = *(void (***)(char *, uint64_t))(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v83 - v24;
  sub_1C0FC020C();
  uint64_t v27 = v26;
  uint64_t v28 = sub_1C134A8EC(&qword_1EA1AE610, (void (*)(uint64_t))sub_1C0FC020C);
  uint64_t v29 = sub_1C151F0CC();
  uint64_t v100 = a5;
  uint64_t v89 = (uint64_t)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = a7;
  uint64_t v87 = v21;
  if (v29)
  {
    uint64_t v30 = v29;
    *(void *)&long long v101 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v29 & ~(v29 >> 63), 0);
    uint64_t v99 = v27;
    uint64_t result = sub_1C151F09C();
    if (v30 < 0)
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v32 = v28;
    uint64_t v98 = (void (**)(char *))(v97 + 2);
    ++v97;
    do
    {
      uint64_t v33 = v32;
      uint64_t v34 = (void (*)(long long *, void))sub_1C151F19C();
      (*v98)(v25);
      v34(&v105, 0);
      uint64_t v35 = sub_1C151A2EC();
      uint64_t v37 = v36;
      (*v97)(v25, v23);
      uint64_t v38 = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v38 = v101;
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1BFF661B8(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v101;
      }
      *(void *)(v38 + 16) = v40 + 1;
      uint64_t v41 = v38 + 16 * v40;
      *(void *)(v41 + 32) = v35;
      *(void *)(v41 + 40) = v37;
      uint64_t v32 = v33;
      sub_1C151F0FC();
      --v30;
    }
    while (v30);
  }
  else
  {
    uint64_t v38 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = sub_1BFEF4060(v38);
  swift_bridgeObjectRelease();
  uint64_t v43 = (uint64_t)v93;
  uint64_t v44 = v100;
  uint64_t v99 = sub_1C1342F98((uint64_t)v96, (uint64_t)v93, v91, a9, a10, a11, v100);
  uint64_t v45 = v94;
  uint64_t v46 = v95;
  uint64_t v47 = sub_1C13460D4(v94, v95, v43, v44, v42, a16, a17, a18, a19, (uint64_t (*)(void))sub_1C0FC020C, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C13561A4);
  swift_bridgeObjectRetain();
  sub_1BFECFD44(a16, a17);
  swift_bridgeObjectRetain();
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v100 = v47;
  uint64_t v98 = (void (**)(char *))sub_1C1355AB8(v48, v45, v46, v47, a16, a17, a18, a19, v42, (uint64_t)v104, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, long long *))sub_1C1346424);
  swift_bridgeObjectRelease();
  sub_1BFECFD88(a16, a17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v96;
  swift_bridgeObjectRelease();
  uint64_t v50 = v49[1];
  uint64_t v85 = *v49;
  *(void *)&long long v105 = v85;
  *((void *)&v105 + 1) = v50;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v91 = (void (*)(void))*((void *)&v105 + 1);
  uint64_t v51 = (void (**)(char *, uint64_t))v105;
  if (qword_1EB88CB60 != -1) {
    swift_once();
  }
  unint64_t v52 = *(uint64_t *)((char *)v49 + *(int *)(v92 + 28));
  uint64_t v53 = (uint64_t *)(*(void *)(v43 + 32) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  uint64_t v54 = *v53;
  *(void *)&long long v105 = MEMORY[0x1E4FBC860];
  int v97 = v51;
  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v55 = result;
    if (!result) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v55 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v55) {
      goto LABEL_22;
    }
  }
  if (v55 < 1)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  if ((v52 & 0xC000000000000001) != 0)
  {
    uint64_t v56 = 0;
    do
    {
      uint64_t v57 = MEMORY[0x1C18C7CB0](v56++, v52);
      uint64_t v58 = (uint64_t *)(v57 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      uint64_t v59 = *v58;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFEC4CAC(v59);
    }
    while (v55 != v56);
  }
  else
  {
    uint64_t v60 = 0;
    do
    {
      ++v60;
      swift_beginAccess();
      uint64_t v61 = swift_bridgeObjectRetain();
      sub_1BFEC4CAC(v61);
    }
    while (v55 != v60);
  }
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v62 = v105;
  *(void *)&long long v105 = v54;
  sub_1BFEC4CAC(v62);
  unint64_t v63 = sub_1BFEC4F8C(v105);
  uint64_t v64 = v93;
  if (v63)
  {
    unint64_t v65 = v63;
    *(void *)&long long v101 = v63;
    swift_bridgeObjectRetain();
    sub_1C1518DCC();
    swift_bridgeObjectRelease();
    uint64_t v66 = v105;
    if ((void)v105)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v66 = FormatPackageInventory.merging(with:)(v52);
      *(void *)&long long v105 = v66;
      *(void *)&long long v101 = v65;
      swift_retain();
      sub_1C1518DDC();
    }
  }
  else
  {
    uint64_t v66 = FormatPackageInventory.merging(with:)(v52);
  }
  uint64_t v84 = a12;
  sub_1C1358098(v88, (uint64_t)&v105, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  uint64_t v67 = v89;
  sub_1BFE9EFB8((uint64_t)v96, v89, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  unint64_t v68 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v69 = (v87 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = swift_allocObject();
  sub_1C1357E7C(v67, v70 + v68, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v71 = (_OWORD *)(v70 + v69);
  long long v72 = v64[3];
  v71[2] = v64[2];
  v71[3] = v72;
  v71[4] = v64[4];
  long long v73 = v64[1];
  *uint64_t v71 = *v64;
  v71[1] = v73;
  uint64_t v74 = type metadata accessor for FeedGroupDebug();
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v75;
  if (v107)
  {
    sub_1BFC773DC(&v105, v75 + 16);
    *(void *)(v76 + 56) = sub_1BFD09B80;
    *(void *)(v76 + 64) = v70;
    *((void *)&v102 + 1) = v74;
    uint64_t v103 = &protocol witness table for FeedGroupDebug;
    *(void *)&long long v101 = v76;
    swift_bridgeObjectRetain();
    sub_1BFEC4CD8((uint64_t)v64);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFEC4CD8((uint64_t)v64);
    swift_release();
    sub_1BFE9E520((uint64_t)&v105, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
    swift_deallocPartialClassInstance();
    long long v101 = 0u;
    long long v102 = 0u;
    uint64_t v103 = 0;
  }
  unsigned __int8 v77 = v90 & 1;
  *(void *)&long long v105 = v66;
  *((void *)&v105 + 1) = v85;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  uint64_t v106 = v50;
  uint64_t v78 = *(uint64_t *)((char *)v96 + *(int *)(v92 + 40));
  swift_bridgeObjectRetain();
  uint64_t v79 = swift_bridgeObjectRetain();
  uint64_t v80 = (char *)sub_1BFEF3988(v79, v78);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v81 = v95;
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_1C13567BC(v100, v94, v81, v99, (uint64_t)v97, (uint64_t)v91, (uint64_t)&v105, (uint64_t)v98, v77, (uint64_t)&v101, v84, v80, a13, a14, a15);
  swift_bridgeObjectRelease();
  return v82;
}

uint64_t sub_1C1342598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v91 = a8;
  int v90 = a6;
  uint64_t v95 = a4;
  uint64_t v94 = a3;
  uint64_t v93 = (_OWORD *)a2;
  int v96 = (uint64_t *)a1;
  uint64_t v92 = type metadata accessor for FormatContent.Resolved();
  uint64_t v86 = *(void *)(v92 - 8);
  uint64_t v21 = *(void *)(v86 + 64);
  MEMORY[0x1F4188790](v92);
  sub_1C00BE41C();
  uint64_t v23 = v22;
  int v97 = *(void (***)(char *, uint64_t))(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE4B0();
  uint64_t v27 = v26;
  uint64_t v28 = sub_1C134A8EC((unint64_t *)&unk_1EB863DB0, (void (*)(uint64_t))sub_1C00BE4B0);
  uint64_t v29 = sub_1C151F0CC();
  uint64_t v100 = a5;
  uint64_t v89 = (uint64_t)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = a7;
  uint64_t v87 = v21;
  if (v29)
  {
    uint64_t v30 = v29;
    *(void *)&long long v101 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v29 & ~(v29 >> 63), 0);
    uint64_t v99 = v27;
    uint64_t result = sub_1C151F09C();
    if (v30 < 0)
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v32 = v28;
    uint64_t v98 = (void (**)(char *))(v97 + 2);
    ++v97;
    do
    {
      uint64_t v33 = v32;
      uint64_t v34 = (void (*)(long long *, void))sub_1C151F19C();
      (*v98)(v25);
      v34(&v105, 0);
      uint64_t v35 = sub_1C151A2EC();
      uint64_t v37 = v36;
      (*v97)(v25, v23);
      uint64_t v38 = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v38 = v101;
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1BFF661B8(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v101;
      }
      *(void *)(v38 + 16) = v40 + 1;
      uint64_t v41 = v38 + 16 * v40;
      *(void *)(v41 + 32) = v35;
      *(void *)(v41 + 40) = v37;
      uint64_t v32 = v33;
      sub_1C151F0FC();
      --v30;
    }
    while (v30);
  }
  else
  {
    uint64_t v38 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = sub_1BFEF4060(v38);
  swift_bridgeObjectRelease();
  uint64_t v43 = (uint64_t)v93;
  uint64_t v44 = v100;
  uint64_t v99 = sub_1C1344854((uint64_t)v96, (uint64_t)v93, v91, a9, a10, a11, v100);
  uint64_t v45 = v94;
  uint64_t v46 = v95;
  uint64_t v47 = sub_1C13460D4(v94, v95, v43, v44, v42, a16, a17, a18, a19, (uint64_t (*)(void))sub_1C00BE4B0, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C1356E34);
  swift_bridgeObjectRetain();
  sub_1BFECFD44(a16, a17);
  swift_bridgeObjectRetain();
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v100 = v47;
  uint64_t v98 = (void (**)(char *))sub_1C1355AB8(v48, v45, v46, v47, a16, a17, a18, a19, v42, (uint64_t)v104, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, long long *))sub_1C1346460);
  swift_bridgeObjectRelease();
  sub_1BFECFD88(a16, a17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v96;
  swift_bridgeObjectRelease();
  uint64_t v50 = v49[1];
  uint64_t v85 = *v49;
  *(void *)&long long v105 = v85;
  *((void *)&v105 + 1) = v50;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v91 = (void (*)(void))*((void *)&v105 + 1);
  uint64_t v51 = (void (**)(char *, uint64_t))v105;
  if (qword_1EB88CB60 != -1) {
    swift_once();
  }
  unint64_t v52 = *(uint64_t *)((char *)v49 + *(int *)(v92 + 28));
  uint64_t v53 = (uint64_t *)(*(void *)(v43 + 32) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  uint64_t v54 = *v53;
  *(void *)&long long v105 = MEMORY[0x1E4FBC860];
  int v97 = v51;
  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v55 = result;
    if (!result) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v55 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v55) {
      goto LABEL_22;
    }
  }
  if (v55 < 1)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  if ((v52 & 0xC000000000000001) != 0)
  {
    uint64_t v56 = 0;
    do
    {
      uint64_t v57 = MEMORY[0x1C18C7CB0](v56++, v52);
      uint64_t v58 = (uint64_t *)(v57 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      uint64_t v59 = *v58;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFEC4CAC(v59);
    }
    while (v55 != v56);
  }
  else
  {
    uint64_t v60 = 0;
    do
    {
      ++v60;
      swift_beginAccess();
      uint64_t v61 = swift_bridgeObjectRetain();
      sub_1BFEC4CAC(v61);
    }
    while (v55 != v60);
  }
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v62 = v105;
  *(void *)&long long v105 = v54;
  sub_1BFEC4CAC(v62);
  unint64_t v63 = sub_1BFEC4F8C(v105);
  uint64_t v64 = v93;
  if (v63)
  {
    unint64_t v65 = v63;
    *(void *)&long long v101 = v63;
    swift_bridgeObjectRetain();
    sub_1C1518DCC();
    swift_bridgeObjectRelease();
    uint64_t v66 = v105;
    if ((void)v105)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v66 = FormatPackageInventory.merging(with:)(v52);
      *(void *)&long long v105 = v66;
      *(void *)&long long v101 = v65;
      swift_retain();
      sub_1C1518DDC();
    }
  }
  else
  {
    uint64_t v66 = FormatPackageInventory.merging(with:)(v52);
  }
  uint64_t v84 = a12;
  sub_1C1358098(v88, (uint64_t)&v105, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  uint64_t v67 = v89;
  sub_1BFE9EFB8((uint64_t)v96, v89, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  unint64_t v68 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  unint64_t v69 = (v87 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = swift_allocObject();
  sub_1C1357E7C(v67, v70 + v68, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v71 = (_OWORD *)(v70 + v69);
  long long v72 = v64[3];
  v71[2] = v64[2];
  v71[3] = v72;
  v71[4] = v64[4];
  long long v73 = v64[1];
  *uint64_t v71 = *v64;
  v71[1] = v73;
  uint64_t v74 = type metadata accessor for FeedGroupDebug();
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v75;
  if (v107)
  {
    sub_1BFC773DC(&v105, v75 + 16);
    *(void *)(v76 + 56) = sub_1BFD09B80;
    *(void *)(v76 + 64) = v70;
    *((void *)&v102 + 1) = v74;
    uint64_t v103 = &protocol witness table for FeedGroupDebug;
    *(void *)&long long v101 = v76;
    swift_bridgeObjectRetain();
    sub_1BFEC4CD8((uint64_t)v64);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFEC4CD8((uint64_t)v64);
    swift_release();
    sub_1BFE9E520((uint64_t)&v105, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
    swift_deallocPartialClassInstance();
    long long v101 = 0u;
    long long v102 = 0u;
    uint64_t v103 = 0;
  }
  unsigned __int8 v77 = v90 & 1;
  *(void *)&long long v105 = v66;
  *((void *)&v105 + 1) = v85;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  uint64_t v106 = v50;
  uint64_t v78 = *(uint64_t *)((char *)v96 + *(int *)(v92 + 40));
  swift_bridgeObjectRetain();
  uint64_t v79 = swift_bridgeObjectRetain();
  uint64_t v80 = (void (*)(char *, unint64_t, uint64_t))sub_1BFEF3988(v79, v78);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v81 = v95;
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_1C1357324(v100, v94, v81, v99, (uint64_t)v97, (uint64_t)v91, (uint64_t)&v105, (uint64_t)v98, v77, (uint64_t)&v101, v84, v80, a13, a14, a15);
  swift_bridgeObjectRelease();
  return v82;
}

uint64_t sub_1C1342F98(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v203 = a7;
  uint64_t v198 = a6;
  uint64_t v199 = a4;
  char v204 = a3;
  uint64_t v197 = a2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1354BB0(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v173 - v11;
  sub_1C1354BB0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v9);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v184 = (uint64_t)&v173 - v14;
  uint64_t v182 = sub_1C1515FDC();
  uint64_t v181 = *(void *)(v182 - 8);
  MEMORY[0x1F4188790](v182);
  uint64_t v183 = (char *)&v173 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v9);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v201 = (uint64_t)&v173 - v17;
  uint64_t v202 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v200 = *(void *)(v202 - 8);
  MEMORY[0x1F4188790](v202);
  uint64_t v180 = (uint64_t *)((char *)&v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], v9);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v194 = (char *)&v173 - v20;
  uint64_t v179 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v179);
  uint64_t v193 = (uint64_t)&v173 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v178 = (uint64_t)&v173 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v195 = (char *)&v173 - v25;
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v177 = v26;
  uint64_t v175 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  char v174 = (char *)&v173 - v27;
  uint64_t v191 = type metadata accessor for FeedHeadline(0);
  uint64_t v190 = *(void *)(v191 - 8);
  MEMORY[0x1F4188790](v191);
  uint64_t v176 = (char *)&v173 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1358B60();
  MEMORY[0x1F4188790](v29 - 8);
  long long v187 = (char *)&v173 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1358BF4(0);
  uint64_t v186 = v31;
  MEMORY[0x1F4188790](v31);
  long long v188 = (char *)&v173 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v9);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v189 = (uint64_t)&v173 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v173 = (char *)&v173 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v196 = (uint64_t)&v173 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v192 = (uint64_t)&v173 - v40;
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], v9);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)&v173 - v42;
  uint64_t v44 = sub_1C151D6DC();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v47 = (char *)&v173 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, &qword_1EB87A690, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, MEMORY[0x1E4FBBE00]);
  uint64_t v49 = v48;
  uint64_t v209 = type metadata accessor for FeedGroupItem();
  uint64_t v50 = *(void *)(*(void *)(v209 - 8) + 72);
  uint64_t v51 = *(unsigned __int8 *)(*(void *)(v209 - 8) + 80);
  uint64_t v52 = (v51 + 32) & ~v51;
  uint64_t v206 = v49;
  uint64_t v208 = v52 + v50;
  uint64_t v212 = v51 | 7;
  uint64_t v53 = swift_allocObject();
  long long v211 = xmmword_1C1529AE0;
  *(_OWORD *)(v53 + 16) = xmmword_1C1529AE0;
  uint64_t v205 = v52;
  uint64_t v54 = (void *)(v53 + v52);
  int v207 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v55 = v207[9];
  uint64_t v210 = a1;
  uint64_t v56 = *(void **)(a1 + v55);
  uint64_t v185 = v12;
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = a5;
  }
  else
  {
    uint64_t v57 = MEMORY[0x1E4FBC860];
  }
  uint64_t v58 = v198;
  double v214 = v56;
  swift_bridgeObjectRetain();
  sub_1BFEDB748(v57);
  uint64_t v59 = v214;
  if (a5) {
    swift_bridgeObjectRetain();
  }
  else {
    uint64_t v58 = MEMORY[0x1E4FBC860];
  }
  uint64_t v60 = v199;
  double v214 = *(void **)(v197 + 40);
  swift_bridgeObjectRetain();
  sub_1BFEDB748(v58);
  uint64_t v61 = v214;
  *uint64_t v54 = v59;
  v54[1] = v61;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1BFECFC54(v53, v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v217 = v62;
  sub_1C13589B8(v210 + v207[18], (uint64_t)v43, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
  {
    sub_1C1358734((uint64_t)v43, (uint64_t)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
    uint64_t v63 = v205;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v47, v43, v44);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v211;
    uint64_t v65 = v205;
    uint64_t v66 = (uint64_t *)(v64 + v205);
    uint64_t v67 = sub_1C151D63C();
    uint64_t v69 = v68;
    uint64_t v70 = type metadata accessor for FeedSponsorshipBannerAd();
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v66 + *(int *)(v70 + 20), v47, v44);
    *uint64_t v66 = v67;
    v66[1] = v69;
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v64);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
    uint64_t v63 = v65;
  }
  uint64_t v71 = v207;
  uint64_t v72 = v210;
  uint64_t v73 = *(void *)(v210 + v207[11]);
  if (v73)
  {
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = v211;
    uint64_t v75 = *(void **)(v72 + v71[15]);
    uint64_t v76 = v63;
    uint64_t v77 = v74 + v63;
    char v78 = *(unsigned char *)(v72 + v71[16]);
    *(void *)uint64_t v77 = v73;
    *(void *)(v77 + 8) = v75;
    *(unsigned char *)(v77 + 16) = v78;
    swift_storeEnumTagMultiPayload();
    id v79 = v75;
    swift_unknownObjectRetain();
    sub_1BFED84D8(v74);
    swift_setDeallocating();
    uint64_t v63 = v76;
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  if (v204)
  {
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v211;
    uint64_t v81 = v63;
    uint64_t v82 = v204;
    *(void *)(v80 + v63) = v204;
    swift_storeEnumTagMultiPayload();
    id v83 = v82;
    sub_1BFED84D8(v80);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    id v84 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
    swift_unknownObjectRelease();
    if (v84)
    {
      uint64_t v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = v211;
      uint64_t v86 = v85 + v81;
      id v87 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v88 = sub_1C151E62C();
      uint64_t v90 = v89;

      *(void *)uint64_t v86 = v88;
      *(void *)(v86 + 8) = v90;
      uint64_t v72 = v210;
      *(void *)(v86 + 16) = v84;
      *(void *)(v86 + 24) = 0;
      *(unsigned char *)(v86 + 32) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1BFED84D8(v85);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
    }

    uint64_t v63 = v81;
  }
  uint64_t v91 = v71;
  uint64_t v92 = *(void **)(v72 + v71[12]);
  if (v92)
  {
    uint64_t v93 = swift_allocObject();
    *(_OWORD *)(v93 + 16) = v211;
    uint64_t v94 = v93 + v63;
    id v95 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
    id v96 = v92;
    id v97 = objc_msgSend(v95, sel_init);
    sub_1C1346A58(v96, v203, &v214);
    char v98 = (char)v214;
    uint64_t v99 = qword_1F1B67BF8;
    id v100 = v96;
    id v101 = objc_msgSend(v100, sel_identifier);
    uint64_t v102 = sub_1C151E62C();
    uint64_t v104 = v103;

    LOBYTE(v216) = 0;
    *(void *)uint64_t v94 = v100;
    *(void *)(v94 + 8) = v102;
    *(void *)(v94 + 16) = v104;
    uint64_t v72 = v210;
    *(_WORD *)(v94 + 24) = 0;
    *(void *)(v94 + 32) = 0;
    *(unsigned char *)(v94 + 40) = 0;
    *(void *)(v94 + 48) = v99;
    *(void *)(v94 + 56) = v97;
    *(unsigned char *)(v94 + 64) = 0;
    *(_OWORD *)(v94 + 72) = xmmword_1C152C800;
    *(_OWORD *)(v94 + 88) = 0u;
    *(_OWORD *)(v94 + 104) = 0u;
    *(void *)(v94 + 120) = 0;
    *(void *)(v94 + 128) = 5;
    *(unsigned char *)(v94 + 136) = v98;
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v93);
    swift_setDeallocating();
LABEL_18:
    swift_arrayDestroy();
    swift_deallocClassInstance();

    goto LABEL_19;
  }
  uint64_t v123 = *(void **)(v72 + v91[13]);
  if (v123)
  {
    if (objc_msgSend(v123, sel_respondsToSelector_, sel_parentIssue))
    {
      id v124 = objc_msgSend(v123, sel_parentIssue);
      if (v124)
      {
        uint64_t v125 = v124;
        uint64_t v126 = swift_allocObject();
        *(_OWORD *)(v126 + 16) = v211;
        uint64_t v127 = v126 + v63;
        id v128 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
        id v129 = v125;
        id v130 = objc_msgSend(v128, sel_init);
        sub_1C1346A58(v129, v203, &v214);
        char v131 = (char)v214;
        uint64_t v132 = qword_1F1B67C20;
        id v100 = v129;
        id v133 = objc_msgSend(v100, sel_identifier);
        uint64_t v134 = sub_1C151E62C();
        uint64_t v136 = v135;

        LOBYTE(v216) = 0;
        *(void *)uint64_t v127 = v100;
        *(void *)(v127 + 8) = v134;
        *(void *)(v127 + 16) = v136;
        uint64_t v72 = v210;
        *(_WORD *)(v127 + 24) = 0;
        *(void *)(v127 + 32) = 0;
        *(unsigned char *)(v127 + 40) = 0;
        *(void *)(v127 + 48) = v132;
        *(void *)(v127 + 56) = v130;
        *(unsigned char *)(v127 + 64) = 0;
        *(_OWORD *)(v127 + 72) = xmmword_1C152C800;
        *(_OWORD *)(v127 + 88) = 0u;
        *(_OWORD *)(v127 + 104) = 0u;
        *(void *)(v127 + 120) = 0;
        *(void *)(v127 + 128) = 5;
        *(unsigned char *)(v127 + 136) = v131;
        uint64_t v91 = v207;
        swift_storeEnumTagMultiPayload();
        sub_1BFED84D8(v126);
        swift_setDeallocating();
        goto LABEL_18;
      }
    }
  }
LABEL_19:
  long long v105 = *(void **)(v72 + v91[13]);
  if (v105)
  {
    sub_1C0FC020C();
    uint64_t v107 = v106;
    uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16);
    uint64_t v109 = (uint64_t)v187;
    v108(v187, v203, v106);
    uint64_t v110 = swift_allocObject();
    *(void *)(v110 + 16) = v105;
    uint64_t v111 = v188;
    v108(v188, v109, v107);
    sub_1C1358D68(0);
    int v113 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v111[*(int *)(v112 + 44)];
    *int v113 = sub_1C1358E78;
    v113[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v110;
    sub_1C1358CD4();
    uint64_t v115 = &v111[*(int *)(v114 + 36)];
    *(void *)uint64_t v115 = sub_1C1353550;
    *((void *)v115 + 1) = 0;
    uint64_t v116 = &v111[*(int *)(v186 + 44)];
    *(void *)uint64_t v116 = sub_1C13535B8;
    *((void *)v116 + 1) = 0;
    swift_unknownObjectRetain_n();
    sub_1C1354C14(v109, (uint64_t (*)(void))sub_1C1358B60);
    uint64_t v117 = (void *)sub_1C13536E8();
    sub_1C134A8EC(&qword_1EA1AE610, (void (*)(uint64_t))sub_1C0FC020C);
    sub_1C151F0EC();
    if (v117 == v214)
    {
      uint64_t v118 = 1;
      uint64_t v119 = v195;
      uint64_t v120 = v192;
      uint64_t v121 = v191;
      uint64_t v122 = (uint64_t)v111;
    }
    else
    {
      char v204 = *(void (**)(void))v116;
      unsigned int v216 = v117;
      unint64_t v137 = *v113;
      uint64_t v138 = (void (*)(void **, void))sub_1C151F19C();
      uint64_t v139 = v175;
      uint64_t v140 = v174;
      uint64_t v122 = (uint64_t)v111;
      uint64_t v141 = v177;
      (*(void (**)(char *))(v175 + 16))(v174);
      v138(&v214, 0);
      int v142 = v173;
      ((void (*)(char *))v137)(v140);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v140, v141);
      uint64_t v143 = (uint64_t)v142;
      uint64_t v144 = v196;
      sub_1C13586B4(v143, v196, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
      uint64_t v145 = (uint64_t)v176;
      v204(v144);
      sub_1C1358734(v144, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
      uint64_t v120 = v192;
      sub_1C1357E7C(v145, v192, type metadata accessor for FeedHeadline);
      uint64_t v118 = 0;
      uint64_t v119 = v195;
      uint64_t v121 = v191;
    }
    uint64_t v146 = v190;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v190 + 56))(v120, v118, 1, v121);
    sub_1C1354C14(v122, (uint64_t (*)(void))sub_1C1358BF4);
    uint64_t v147 = v189;
    sub_1C13589B8(v120, v189, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v147, 1, v121) == 1)
    {
      sub_1C1358734(v147, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
      unint64_t v148 = (int *)v179;
      uint64_t v149 = (char *)v119 + *(int *)(v179 + 24);
      uint64_t v150 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56))(v149, 1, 1, v150);
      *uint64_t v119 = 258;
      *((unsigned char *)v119 + v148[7]) = 1;
      *((unsigned char *)v119 + v148[8]) = 0;
      *((unsigned char *)v119 + v148[9]) = 0;
      *((unsigned char *)v119 + v148[10]) = 0;
    }
    else
    {
      uint64_t v151 = v178;
      sub_1BFE9EFB8(v147 + *(int *)(v121 + 40), v178, type metadata accessor for FeedHeadline.State);
      sub_1C1354C14(v147, type metadata accessor for FeedHeadline);
      sub_1C1357E7C(v151, (uint64_t)v119, type metadata accessor for FeedHeadline.State);
    }
    uint64_t v152 = v205;
    uint64_t v153 = swift_allocObject();
    *(_OWORD *)(v153 + 16) = v211;
    uint64_t v154 = sub_1C151D2DC();
    uint64_t v155 = (uint64_t)v194;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56))(v194, 1, 1, v154);
    uint64_t v156 = v193;
    sub_1BFE9EFB8((uint64_t)v119, v193, type metadata accessor for FeedHeadline.State);
    unsigned int v216 = 0;
    double v214 = 0;
    char v215 = 1;
    char v213 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v105, 0, &v213, v155, v156, &v216, v153 + v152, (uint64_t)&v214);
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v153);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    sub_1C1354C14((uint64_t)v119, type metadata accessor for FeedHeadline.State);
    sub_1C1358734(v120, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
    uint64_t v91 = v207;
    uint64_t v72 = v210;
  }
  uint64_t v157 = v201;
  sub_1C13589B8(v72 + v91[14], v201, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
  uint64_t v158 = (int *)v202;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v200 + 48))(v157, 1, v202) == 1)
  {
    sub_1C1358734(v157, (uint64_t)&qword_1EB896EE0, (uint64_t)type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
  }
  else
  {
    uint64_t v159 = v180;
    sub_1C1357E7C(v157, (uint64_t)v180, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    uint64_t v160 = swift_allocObject();
    *(_OWORD *)(v160 + 16) = v211;
    *(void *)&long long v211 = v160 + v205;
    uint64_t v161 = v159[1];
    uint64_t v212 = *v159;
    uint64_t v210 = v161;
    long long v162 = (char *)v159 + v158[5];
    long long v163 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v164 = v158;
    uint64_t v165 = (uint64_t)v183;
    (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v183, &v162[v163[5]], v182);
    uint64_t v166 = v184;
    sub_1C13589B8((uint64_t)&v162[v163[6]], v184, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v167 = *(uint64_t *)((char *)v159 + v164[6]);
    uint64_t v168 = *(uint64_t *)((char *)v159 + v164[7]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v169 = v196;
    sub_1C01B3704((uint64_t)v159, v196);
    uint64_t v170 = (uint64_t)v159 + v164[8];
    uint64_t v171 = (uint64_t)v185;
    sub_1C13589B8(v170, (uint64_t)v185, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v212, v210, v165, v166, v167, v168, v169, v171, (uint64_t *)v211, v162[v163[10]] & 1);
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v160);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1C1354C14((uint64_t)v159, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
  }
  return v217;
}

uint64_t sub_1C1344854(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v204 = a7;
  uint64_t v199 = a6;
  uint64_t v200 = a4;
  uint64_t v205 = a3;
  uint64_t v198 = a2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1354BB0(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v174 - v11;
  sub_1C1354BB0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v9);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v185 = (uint64_t)&v174 - v14;
  uint64_t v183 = sub_1C1515FDC();
  uint64_t v182 = *(void *)(v183 - 8);
  MEMORY[0x1F4188790](v183);
  uint64_t v184 = (char *)&v174 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v9);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v202 = (uint64_t)&v174 - v17;
  uint64_t v203 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v201 = *(void *)(v203 - 8);
  MEMORY[0x1F4188790](v203);
  uint64_t v181 = (uint64_t *)((char *)&v174 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], v9);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v195 = (char *)&v174 - v20;
  uint64_t v180 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v180);
  uint64_t v194 = (uint64_t)&v174 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v179 = (uint64_t)&v174 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v196 = (char *)&v174 - v25;
  sub_1C00BE41C();
  uint64_t v178 = v26;
  uint64_t v176 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v175 = (char *)&v174 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = type metadata accessor for FeedHeadline(0);
  uint64_t v191 = *(void *)(v192 - 8);
  MEMORY[0x1F4188790](v192);
  uint64_t v177 = (char *)&v174 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C13584D4();
  MEMORY[0x1F4188790](v29 - 8);
  long long v188 = (char *)&v174 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1358568(0);
  uint64_t v187 = v31;
  MEMORY[0x1F4188790](v31);
  uint64_t v189 = (char *)&v174 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v9);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v190 = (uint64_t)&v174 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  char v174 = (char *)&v174 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v197 = (uint64_t)&v174 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v193 = (uint64_t)&v174 - v40;
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], v9);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)&v174 - v42;
  uint64_t v44 = sub_1C151D6DC();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v47 = (char *)&v174 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, &qword_1EB87A690, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, MEMORY[0x1E4FBBE00]);
  uint64_t v49 = v48;
  uint64_t v210 = type metadata accessor for FeedGroupItem();
  uint64_t v50 = *(void *)(*(void *)(v210 - 8) + 72);
  uint64_t v51 = *(unsigned __int8 *)(*(void *)(v210 - 8) + 80);
  uint64_t v52 = (v51 + 32) & ~v51;
  uint64_t v207 = v49;
  uint64_t v209 = v52 + v50;
  uint64_t v213 = v51 | 7;
  uint64_t v53 = swift_allocObject();
  long long v212 = xmmword_1C1529AE0;
  *(_OWORD *)(v53 + 16) = xmmword_1C1529AE0;
  uint64_t v206 = v52;
  uint64_t v54 = (void *)(v53 + v52);
  uint64_t v208 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v55 = v208[9];
  uint64_t v211 = a1;
  uint64_t v56 = *(void **)(a1 + v55);
  uint64_t v186 = v12;
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = a5;
  }
  else
  {
    uint64_t v57 = MEMORY[0x1E4FBC860];
  }
  uint64_t v58 = v199;
  char v215 = v56;
  swift_bridgeObjectRetain();
  sub_1BFEDB748(v57);
  uint64_t v59 = v215;
  if (a5) {
    swift_bridgeObjectRetain();
  }
  else {
    uint64_t v58 = MEMORY[0x1E4FBC860];
  }
  uint64_t v60 = v200;
  char v215 = *(void **)(v198 + 40);
  swift_bridgeObjectRetain();
  sub_1BFEDB748(v58);
  uint64_t v61 = v215;
  *uint64_t v54 = v59;
  v54[1] = v61;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1BFECFC54(v53, v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v218 = v62;
  sub_1C13589B8(v211 + v208[18], (uint64_t)v43, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44) == 1)
  {
    sub_1C1358734((uint64_t)v43, (uint64_t)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
    uint64_t v63 = v206;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v47, v43, v44);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v212;
    uint64_t v65 = v206;
    uint64_t v66 = (uint64_t *)(v64 + v206);
    uint64_t v67 = sub_1C151D63C();
    uint64_t v69 = v68;
    uint64_t v70 = type metadata accessor for FeedSponsorshipBannerAd();
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v66 + *(int *)(v70 + 20), v47, v44);
    *uint64_t v66 = v67;
    v66[1] = v69;
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v64);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
    uint64_t v63 = v65;
  }
  uint64_t v71 = v208;
  uint64_t v72 = v211;
  uint64_t v73 = *(void *)(v211 + v208[11]);
  if (v73)
  {
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = v212;
    uint64_t v75 = *(void **)(v72 + v71[15]);
    uint64_t v76 = v63;
    uint64_t v77 = v74 + v63;
    char v78 = *(unsigned char *)(v72 + v71[16]);
    *(void *)uint64_t v77 = v73;
    *(void *)(v77 + 8) = v75;
    *(unsigned char *)(v77 + 16) = v78;
    swift_storeEnumTagMultiPayload();
    id v79 = v75;
    swift_unknownObjectRetain();
    sub_1BFED84D8(v74);
    swift_setDeallocating();
    uint64_t v63 = v76;
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  if (v205)
  {
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v212;
    uint64_t v81 = v63;
    uint64_t v82 = v205;
    *(void *)(v80 + v63) = v205;
    swift_storeEnumTagMultiPayload();
    id v83 = v82;
    sub_1BFED84D8(v80);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    id v84 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
    swift_unknownObjectRelease();
    if (v84)
    {
      uint64_t v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = v212;
      uint64_t v86 = v85 + v81;
      id v87 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v88 = sub_1C151E62C();
      uint64_t v90 = v89;

      *(void *)uint64_t v86 = v88;
      *(void *)(v86 + 8) = v90;
      uint64_t v72 = v211;
      *(void *)(v86 + 16) = v84;
      *(void *)(v86 + 24) = 0;
      *(unsigned char *)(v86 + 32) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1BFED84D8(v85);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
    }

    uint64_t v63 = v81;
  }
  uint64_t v91 = v71;
  uint64_t v92 = *(void **)(v72 + v71[12]);
  if (v92)
  {
    uint64_t v93 = swift_allocObject();
    *(_OWORD *)(v93 + 16) = v212;
    uint64_t v94 = v93 + v63;
    id v95 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
    id v96 = v92;
    id v97 = objc_msgSend(v95, sel_init);
    sub_1C1346E9C(v96, v204, &v215);
    char v98 = (char)v215;
    uint64_t v99 = qword_1F1B67C48;
    id v100 = v96;
    id v101 = objc_msgSend(v100, sel_identifier);
    uint64_t v102 = sub_1C151E62C();
    uint64_t v104 = v103;

    LOBYTE(v217) = 0;
    *(void *)uint64_t v94 = v100;
    *(void *)(v94 + 8) = v102;
    *(void *)(v94 + 16) = v104;
    uint64_t v72 = v211;
    *(_WORD *)(v94 + 24) = 0;
    *(void *)(v94 + 32) = 0;
    *(unsigned char *)(v94 + 40) = 0;
    *(void *)(v94 + 48) = v99;
    *(void *)(v94 + 56) = v97;
    *(unsigned char *)(v94 + 64) = 0;
    *(_OWORD *)(v94 + 72) = xmmword_1C152C800;
    *(_OWORD *)(v94 + 88) = 0u;
    *(_OWORD *)(v94 + 104) = 0u;
    *(void *)(v94 + 120) = 0;
    *(void *)(v94 + 128) = 5;
    *(unsigned char *)(v94 + 136) = v98;
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v93);
    swift_setDeallocating();
LABEL_18:
    swift_arrayDestroy();
    swift_deallocClassInstance();

    goto LABEL_19;
  }
  uint64_t v122 = *(void **)(v72 + v91[13]);
  if (v122)
  {
    if (objc_msgSend(v122, sel_respondsToSelector_, sel_parentIssue))
    {
      id v123 = objc_msgSend(v122, sel_parentIssue);
      if (v123)
      {
        id v124 = v123;
        uint64_t v125 = swift_allocObject();
        *(_OWORD *)(v125 + 16) = v212;
        uint64_t v126 = v125 + v63;
        id v127 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
        id v128 = v124;
        id v129 = objc_msgSend(v127, sel_init);
        sub_1C1346E9C(v128, v204, &v215);
        char v130 = (char)v215;
        uint64_t v131 = qword_1F1B67C70;
        id v100 = v128;
        id v132 = objc_msgSend(v100, sel_identifier);
        uint64_t v133 = sub_1C151E62C();
        uint64_t v135 = v134;

        LOBYTE(v217) = 0;
        *(void *)uint64_t v126 = v100;
        *(void *)(v126 + 8) = v133;
        *(void *)(v126 + 16) = v135;
        uint64_t v72 = v211;
        *(_WORD *)(v126 + 24) = 0;
        *(void *)(v126 + 32) = 0;
        *(unsigned char *)(v126 + 40) = 0;
        *(void *)(v126 + 48) = v131;
        *(void *)(v126 + 56) = v129;
        *(unsigned char *)(v126 + 64) = 0;
        *(_OWORD *)(v126 + 72) = xmmword_1C152C800;
        *(_OWORD *)(v126 + 88) = 0u;
        *(_OWORD *)(v126 + 104) = 0u;
        *(void *)(v126 + 120) = 0;
        *(void *)(v126 + 128) = 5;
        *(unsigned char *)(v126 + 136) = v130;
        uint64_t v91 = v208;
        swift_storeEnumTagMultiPayload();
        sub_1BFED84D8(v125);
        swift_setDeallocating();
        goto LABEL_18;
      }
    }
  }
LABEL_19:
  long long v105 = *(void **)(v72 + v91[13]);
  if (v105)
  {
    sub_1C00BE4B0();
    uint64_t v107 = v106;
    uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16);
    uint64_t v109 = (uint64_t)v188;
    v108(v188, v204, v106);
    uint64_t v110 = swift_allocObject();
    *(void *)(v110 + 16) = v105;
    uint64_t v111 = v189;
    v108(v189, v109, v107);
    sub_1C1358638(0);
    int v113 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v111[*(int *)(v112 + 44)];
    *int v113 = sub_1C13586AC;
    v113[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v110;
    sub_1C13585A4();
    uint64_t v115 = &v111[*(int *)(v114 + 36)];
    *(void *)uint64_t v115 = sub_1C1353550;
    *((void *)v115 + 1) = 0;
    uint64_t v116 = &v111[*(int *)(v187 + 44)];
    *(void *)uint64_t v116 = sub_1C13535B8;
    *((void *)v116 + 1) = 0;
    swift_unknownObjectRetain_n();
    sub_1C1354C14(v109, (uint64_t (*)(void))sub_1C13584D4);
    uint64_t v117 = (void *)sub_1C1353F0C();
    sub_1C134A8EC((unint64_t *)&unk_1EB863DB0, (void (*)(uint64_t))sub_1C00BE4B0);
    sub_1C151F0EC();
    if (v117 == v215)
    {
      uint64_t v118 = 1;
      uint64_t v119 = v196;
      uint64_t v120 = v193;
      uint64_t v121 = (uint64_t)v111;
    }
    else
    {
      uint64_t v136 = *(void (**)(void))v116;
      uint64_t v204 = *((void *)v116 + 1);
      uint64_t v205 = v136;
      uint64_t v217 = v117;
      unint64_t v137 = *v113;
      uint64_t v138 = (void (*)(void **, void))sub_1C151F19C();
      uint64_t v139 = v176;
      uint64_t v140 = v175;
      uint64_t v121 = (uint64_t)v111;
      uint64_t v141 = v178;
      (*(void (**)(char *))(v176 + 16))(v175);
      v138(&v215, 0);
      uint64_t v142 = (uint64_t)v174;
      ((void (*)(char *))v137)(v140);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v140, v141);
      uint64_t v143 = v197;
      sub_1C13586B4(v142, v197, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
      uint64_t v144 = (uint64_t)v177;
      v205(v143);
      sub_1C1358734(v143, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
      uint64_t v120 = v193;
      sub_1C1357E7C(v144, v193, type metadata accessor for FeedHeadline);
      uint64_t v118 = 0;
      uint64_t v119 = v196;
    }
    uint64_t v145 = v191;
    uint64_t v146 = v192;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56))(v120, v118, 1, v192);
    sub_1C1354C14(v121, (uint64_t (*)(void))sub_1C1358568);
    uint64_t v147 = v190;
    sub_1C13589B8(v120, v190, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v147, 1, v146) == 1)
    {
      sub_1C1358734(v147, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
      unint64_t v148 = (int *)v180;
      uint64_t v149 = (char *)v119 + *(int *)(v180 + 24);
      uint64_t v150 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56))(v149, 1, 1, v150);
      *uint64_t v119 = 258;
      *((unsigned char *)v119 + v148[7]) = 1;
      *((unsigned char *)v119 + v148[8]) = 0;
      *((unsigned char *)v119 + v148[9]) = 0;
      *((unsigned char *)v119 + v148[10]) = 0;
    }
    else
    {
      uint64_t v151 = v147 + *(int *)(v146 + 40);
      uint64_t v152 = v179;
      sub_1BFE9EFB8(v151, v179, type metadata accessor for FeedHeadline.State);
      sub_1C1354C14(v147, type metadata accessor for FeedHeadline);
      sub_1C1357E7C(v152, (uint64_t)v119, type metadata accessor for FeedHeadline.State);
    }
    uint64_t v153 = v206;
    uint64_t v154 = swift_allocObject();
    *(_OWORD *)(v154 + 16) = v212;
    uint64_t v155 = sub_1C151D2DC();
    uint64_t v156 = (uint64_t)v195;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(v195, 1, 1, v155);
    uint64_t v157 = v194;
    sub_1BFE9EFB8((uint64_t)v119, v194, type metadata accessor for FeedHeadline.State);
    uint64_t v217 = 0;
    char v215 = 0;
    char v216 = 1;
    char v214 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v105, 0, &v214, v156, v157, &v217, v154 + v153, (uint64_t)&v215);
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v154);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    sub_1C1354C14((uint64_t)v119, type metadata accessor for FeedHeadline.State);
    sub_1C1358734(v120, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
    uint64_t v91 = v208;
    uint64_t v72 = v211;
  }
  uint64_t v158 = v202;
  sub_1C13589B8(v72 + v91[14], v202, &qword_1EB896EE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
  uint64_t v159 = (int *)v203;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v158, 1, v203) == 1)
  {
    sub_1C1358734(v158, (uint64_t)&qword_1EB896EE0, (uint64_t)type metadata accessor for FormatWebEmbed.Resolved, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
  }
  else
  {
    uint64_t v160 = v181;
    sub_1C1357E7C(v158, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    uint64_t v161 = swift_allocObject();
    *(_OWORD *)(v161 + 16) = v212;
    *(void *)&long long v212 = v161 + v206;
    uint64_t v162 = v160[1];
    uint64_t v213 = *v160;
    uint64_t v211 = v162;
    long long v163 = (char *)v160 + v159[5];
    uint64_t v164 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v165 = v159;
    uint64_t v166 = (uint64_t)v184;
    (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v184, &v163[v164[5]], v183);
    uint64_t v167 = v185;
    sub_1C13589B8((uint64_t)&v163[v164[6]], v185, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v168 = *(uint64_t *)((char *)v160 + v165[6]);
    uint64_t v169 = *(uint64_t *)((char *)v160 + v165[7]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v170 = v197;
    sub_1C01B3704((uint64_t)v160, v197);
    uint64_t v171 = (uint64_t)v160 + v165[8];
    uint64_t v172 = (uint64_t)v186;
    sub_1C13589B8(v171, (uint64_t)v186, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v213, v211, v166, v167, v168, v169, v170, v172, (uint64_t *)v212, v163[v164[10]] & 1);
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v161);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1C1354C14((uint64_t)v160, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
  }
  return v218;
}

uint64_t sub_1C13460D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), uint64_t (*a11)(char *, uint64_t, uint64_t))
{
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  uint64_t v46 = a5;
  uint64_t v52 = a4;
  uint64_t v45 = a2;
  uint64_t v53 = a1;
  uint64_t v13 = a10(0);
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v49 = (char *)&v43 - v14;
  uint64_t v15 = *(void *)(a3 + 56);
  sub_1BFEC4CD8(a3);
  sub_1BFEC4CD8(a3);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C10468B0(v16);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v54 = v15;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v17);
  sub_1C13583B4(a3);
  uint64_t v18 = *(void *)v54;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  uint64_t v19 = *(void *)(*(void *)v54 + 16);
  uint64_t v44 = a11;
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = (long long *)(v18 + 56);
    do
    {
      uint64_t v21 = *((void *)v20 + 4);
      *(void *)uint64_t v54 = *((void *)v20 - 3);
      *(_OWORD *)&v54[8] = *(v20 - 1);
      long long v22 = *v20;
      long long v23 = v20[1];
      v20 += 4;
      *(_OWORD *)&v54[24] = v22;
      *(_OWORD *)&v54[40] = v23;
      *(void *)&v54[56] = v21;
      uint64_t v24 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
      sub_1BFE72794(v24);
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease_n();
    uint64_t v25 = v56;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
  uint64_t v26 = sub_1BFEF4060(v25);
  swift_bridgeObjectRelease();
  sub_1C13583B4(a3);
  uint64_t v27 = a6;
  uint64_t v28 = a6;
  uint64_t v29 = v47;
  uint64_t v30 = v48;
  sub_1BFECFD44(v27, v47);
  uint64_t v31 = v46;
  swift_bridgeObjectRetain();
  uint64_t v32 = v45;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C1354C74(v26, v28, v29, v30, a9, v31, v53, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFECFD88(v28, v29);
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1BFEF4060(v33);
  swift_bridgeObjectRelease();
  long long v35 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)&v54[32] = *(_OWORD *)(a3 + 32);
  *(_OWORD *)&v54[48] = v35;
  long long v55 = *(_OWORD *)(a3 + 64);
  long long v36 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v54 = *(_OWORD *)a3;
  *(_OWORD *)&v54[16] = v36;
  uint64_t v37 = FormatContentSubgroup.Resolved.placeholderIdentifiers.getter();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C1354FA4(v37, v53, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_1BFEF4060(v38);
  swift_bridgeObjectRelease();
  uint64_t v40 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v52, v51);
  uint64_t v41 = v44(v40, v34, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C1346424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  return sub_1C134649C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C1355230);
}

uint64_t sub_1C1346460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  return sub_1C134649C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C13556E0);
}

uint64_t sub_1C134649C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v63 = a2;
  uint64_t v61 = a11;
  uint64_t v62 = a4;
  uint64_t v64 = a10;
  uint64_t v17 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE9EFB8(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (!a6) {
        goto LABEL_13;
      }
      goto LABEL_7;
    case 3u:
    case 6u:
    case 7u:
      sub_1C1354C14((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (!a6) {
        goto LABEL_13;
      }
      goto LABEL_7;
    case 8u:
      id v54 = *(id *)v19;
      uint64_t v53 = *((void *)v19 + 1);
      uint64_t v55 = MEMORY[0x1E4FBB1A0];
      sub_1BFF67464(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_1C1527210;
      *(void *)(v56 + 32) = v63;
      *(void *)(v56 + 40) = a3;
      *(void *)(v56 + 48) = v54;
      *(void *)(v56 + 56) = v53;
      uint64_t v65 = v56;
      sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, v55, MEMORY[0x1E4FBB320]);
      sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v55);
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1C151E55C();
      uint64_t v59 = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v23 = v61(v62, v57, v59);
      swift_bridgeObjectRelease_n();
      return v23;
    default:
      swift_unknownObjectRelease();
      if (!a6) {
        goto LABEL_13;
      }
LABEL_7:
      if (FormatContentSlotItemObject.Resolved.identifier.getter() == a5 && v20 == a6)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v21 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRetain();
      char v22 = sub_1BFF896B4(a7, a8, a9);
      swift_bridgeObjectRelease();
      if (v22)
      {
        sub_1BFF67464(0, &qword_1EB880EA0, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E4FBBE00]);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
        *(void *)(v23 + 32) = a7;
        *(void *)(v23 + 40) = a8;
        uint64_t v24 = MEMORY[0x1E4FBC860];
        *(void *)(v23 + 48) = MEMORY[0x1E4FBC870];
        *(void *)(v23 + 56) = v24;
        *(void *)(v23 + 64) = 0;
        *(void *)(v23 + 72) = 0;
        swift_bridgeObjectRetain();
        return v23;
      }
LABEL_13:
      uint64_t v25 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF67464(0, &qword_1EB880EA0, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E4FBBE00]);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      sub_1BFF67464(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], v25);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1527210;
      *(void *)(v27 + 32) = v63;
      *(void *)(v27 + 40) = a3;
      swift_bridgeObjectRetain();
      *(void *)(v27 + 48) = FormatContentSlotItemObject.Resolved.identifier.getter();
      *(void *)(v27 + 56) = v28;
      uint64_t v65 = v27;
      sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, v26, MEMORY[0x1E4FBB320]);
      sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v26);
      uint64_t v29 = sub_1C151E55C();
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v32 = v64[5];
      uint64_t v33 = FormatContentSlotItemObject.Resolved.identifier.getter();
      if (*(void *)(v32 + 16) && (unint64_t v35 = sub_1BFEF2D8C(v33, v34), (v36 & 1) != 0))
      {
        uint64_t v37 = *(void *)(*(void *)(v32 + 56) + 8 * v35);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v37 = MEMORY[0x1E4FBC870];
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = v64[6];
      uint64_t v39 = FormatContentSlotItemObject.Resolved.identifier.getter();
      if (*(void *)(v38 + 16) && (unint64_t v41 = sub_1BFEF2D8C(v39, v40), (v42 & 1) != 0))
      {
        uint64_t v43 = *(void *)(*(void *)(v38 + 56) + 8 * v41);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v43 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      uint64_t v44 = v64[7];
      uint64_t v45 = FormatContentSlotItemObject.Resolved.identifier.getter();
      if (*(void *)(v44 + 16) && (unint64_t v47 = sub_1BFEF2D8C(v45, v46), (v48 & 1) != 0))
      {
        uint64_t v49 = (uint64_t *)(*(void *)(v44 + 56) + 16 * v47);
        uint64_t v50 = *v49;
        uint64_t v51 = v49[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v50 = 0;
        uint64_t v51 = 0;
      }
      swift_bridgeObjectRelease();
      *(void *)(v23 + 32) = v29;
      *(void *)(v23 + 40) = v31;
      *(void *)(v23 + 48) = v37;
      *(void *)(v23 + 56) = v43;
      *(void *)(v23 + 64) = v50;
      *(void *)(v23 + 72) = v51;
      return v23;
  }
}

uint64_t sub_1C1346A58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  void (*v32)(_OWORD *__return_ptr, _OWORD *);
  uint64_t v33;
  uint64_t v34;
  unsigned char *v35;
  _OWORD v36[7];
  _OWORD v37[2];
  unsigned char v38[144];
  _OWORD v39[7];
  unsigned char v40[25];

  unint64_t v35 = a3;
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v32 - v6;
  sub_1C1358B60();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1358E80(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FC020C();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v17(v10, a2, v15);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  v17(v14, (uint64_t)v10, v16);
  sub_1C1358FEC(0);
  uint64_t v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v14[*(int *)(v19 + 44)];
  *uint64_t v20 = sub_1C1359028;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v18;
  sub_1C1358F58();
  char v22 = &v14[*(int *)(v21 + 36)];
  *(void *)char v22 = sub_1C13546C8;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = &v14[*(int *)(v12 + 52)];
  *(void *)uint64_t v23 = sub_1C13546CC;
  *((void *)v23 + 1) = 0;
  id v24 = a1;
  sub_1C1354C14((uint64_t)v10, (uint64_t (*)(void))sub_1C1358B60);
  uint64_t v25 = sub_1C1353B54();
  sub_1C134A8EC(&qword_1EA1AE610, (void (*)(uint64_t))sub_1C0FC020C);
  sub_1C151F0EC();
  if (v25 == *(void *)&v39[0])
  {
    uint64_t result = sub_1C1354C14((uint64_t)v14, (uint64_t (*)(void))sub_1C1358E80);
    char v27 = 0;
  }
  else
  {
    uint64_t v32 = *(void (**)(_OWORD *__return_ptr, _OWORD *))v23;
    *(void *)&v36[0] = v25;
    uint64_t v28 = *v20;
    uint64_t v29 = (void (*)(_OWORD *, void))sub_1C151F19C();
    uint64_t v31 = v33;
    uint64_t v30 = v34;
    (*(void (**)(char *))(v33 + 16))(v7);
    v29(v39, 0);
    ((void (*)(_OWORD *__return_ptr, char *))v28)(v39, v7);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
    sub_1C1358334((uint64_t)v39, (uint64_t)v38, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    sub_1C1358334((uint64_t)v38, (uint64_t)v39, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    v32(v36, v39);
    sub_1C01B3B54((uint64_t)v38);
    v39[6] = v36[6];
    *(_OWORD *)uint64_t v40 = v37[0];
    *(_OWORD *)&v40[9] = *(_OWORD *)((char *)v37 + 9);
    v39[2] = v36[2];
    v39[3] = v36[3];
    v39[4] = v36[4];
    v39[5] = v36[5];
    v39[0] = v36[0];
    v39[1] = v36[1];
    sub_1C1354C14((uint64_t)v14, (uint64_t (*)(void))sub_1C1358E80);
    uint64_t result = sub_1C01880A4((uint64_t)v39);
    char v27 = v40[24];
  }
  *unint64_t v35 = v27;
  return result;
}

uint64_t sub_1C1346E9C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  void (*v32)(_OWORD *__return_ptr, _OWORD *);
  uint64_t v33;
  uint64_t v34;
  unsigned char *v35;
  _OWORD v36[7];
  _OWORD v37[2];
  unsigned char v38[144];
  _OWORD v39[7];
  unsigned char v40[25];

  unint64_t v35 = a3;
  sub_1C00BE41C();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C13584D4();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1358794(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE4B0();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v17(v10, a2, v15);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  v17(v14, (uint64_t)v10, v16);
  sub_1C1358864(0);
  uint64_t v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v14[*(int *)(v19 + 44)];
  *uint64_t v20 = sub_1C13589A0;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v18;
  sub_1C13587D0();
  char v22 = &v14[*(int *)(v21 + 36)];
  *(void *)char v22 = sub_1C13546C8;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = &v14[*(int *)(v12 + 52)];
  *(void *)uint64_t v23 = sub_1C13546CC;
  *((void *)v23 + 1) = 0;
  id v24 = a1;
  sub_1C1354C14((uint64_t)v10, (uint64_t (*)(void))sub_1C13584D4);
  uint64_t v25 = sub_1C1354344();
  sub_1C134A8EC((unint64_t *)&unk_1EB863DB0, (void (*)(uint64_t))sub_1C00BE4B0);
  sub_1C151F0EC();
  if (v25 == *(void *)&v39[0])
  {
    uint64_t result = sub_1C1354C14((uint64_t)v14, (uint64_t (*)(void))sub_1C1358794);
    char v27 = 0;
  }
  else
  {
    uint64_t v32 = *(void (**)(_OWORD *__return_ptr, _OWORD *))v23;
    *(void *)&v36[0] = v25;
    uint64_t v28 = *v20;
    uint64_t v29 = (void (*)(_OWORD *, void))sub_1C151F19C();
    uint64_t v31 = v33;
    uint64_t v30 = v34;
    (*(void (**)(char *))(v33 + 16))(v7);
    v29(v39, 0);
    ((void (*)(_OWORD *__return_ptr, char *))v28)(v39, v7);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
    sub_1C1358334((uint64_t)v39, (uint64_t)v38, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    sub_1C1358334((uint64_t)v38, (uint64_t)v39, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    v32(v36, v39);
    sub_1C01B3B54((uint64_t)v38);
    v39[6] = v36[6];
    *(_OWORD *)uint64_t v40 = v37[0];
    *(_OWORD *)&v40[9] = *(_OWORD *)((char *)v37 + 9);
    v39[2] = v36[2];
    v39[3] = v36[3];
    v39[4] = v36[4];
    v39[5] = v36[5];
    v39[0] = v36[0];
    v39[1] = v36[1];
    sub_1C1354C14((uint64_t)v14, (uint64_t (*)(void))sub_1C1358794);
    uint64_t result = sub_1C01880A4((uint64_t)v39);
    char v27 = v40[24];
  }
  *unint64_t v35 = v27;
  return result;
}

uint64_t sub_1C13472AC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  sub_1C151A30C();
  swift_storeEnumTagMultiPayload();
  FeedItem.feedIssue.getter((uint64_t)v17);
  sub_1C1354C14((uint64_t)v6, type metadata accessor for FeedItem);
  sub_1C1358334((uint64_t)v17, (uint64_t)v19, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C1358334((uint64_t)v19, (uint64_t)v20, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1C00A0A24((uint64_t *)v20) == 1) {
    goto LABEL_8;
  }
  id v7 = objc_msgSend(*(id *)&v20[0], sel_identifier);
  uint64_t v8 = sub_1C151E62C();
  uint64_t v10 = v9;

  id v11 = objc_msgSend(a1, sel_identifier);
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  if (v8 != v12 || v10 != v14)
  {
    char v15 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_6;
    }
    sub_1C01B3B54((uint64_t)v19);
LABEL_8:
    sub_1C01B3C58(v17);
    return sub_1C1358334((uint64_t)v17, a2, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  void v17[6] = v20[6];
  v18[0] = v21[0];
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v21 + 9);
  void v17[2] = v20[2];
  v17[3] = v20[3];
  _OWORD v17[4] = v20[4];
  v17[5] = v20[5];
  v17[0] = v20[0];
  v17[1] = v20[1];
  nullsub_1();
  return sub_1C1358334((uint64_t)v17, a2, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
}

uint64_t sub_1C134750C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v25 - v8;
  uint64_t v10 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE41C();
  sub_1C151A30C();
  sub_1BFE9EFB8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatModel);
  sub_1C0C92B68();
  uint64_t v14 = (uint64_t)&v6[*(int *)(v13 + 48)];
  sub_1C1357E7C((uint64_t)v6, (uint64_t)v12, type metadata accessor for FeedItem);
  sub_1C0C92BD4(v14);
  sub_1C1354C14((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatModel);
  FeedItem.feedIssue.getter((uint64_t)v25);
  sub_1C1354C14((uint64_t)v12, type metadata accessor for FeedItem);
  sub_1C1358334((uint64_t)v25, (uint64_t)v27, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C1358334((uint64_t)v27, (uint64_t)v28, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1C00A0A24((uint64_t *)v28) == 1) {
    goto LABEL_8;
  }
  id v15 = objc_msgSend(*(id *)&v28[0], sel_identifier);
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  id v19 = objc_msgSend(a1, sel_identifier);
  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  if (v16 != v20 || v18 != v22)
  {
    char v23 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_6;
    }
    sub_1C01B3B54((uint64_t)v27);
LABEL_8:
    sub_1C01B3C58(v25);
    return sub_1C1358334((uint64_t)v25, a2, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  v25[6] = v28[6];
  v26[0] = v29[0];
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v29 + 9);
  void v25[2] = v28[2];
  v25[3] = v28[3];
  v25[4] = v28[4];
  v25[5] = v28[5];
  v25[0] = v28[0];
  v25[1] = v28[1];
  nullsub_1();
  return sub_1C1358334((uint64_t)v25, a2, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
}

uint64_t sub_1C13477F8@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedHeadline(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (id *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  sub_1C151A30C();
  swift_storeEnumTagMultiPayload();
  FeedItem.feedHeadline.getter((uint64_t)v6);
  sub_1C1354C14((uint64_t)v9, type metadata accessor for FeedItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
  {
    sub_1C1357E7C((uint64_t)v6, (uint64_t)v13, type metadata accessor for FeedHeadline);
    id v14 = objc_msgSend(v13[5], sel_identifier);
    uint64_t v15 = sub_1C151E62C();
    uint64_t v17 = v16;

    id v18 = objc_msgSend(a1, sel_identifier);
    uint64_t v19 = sub_1C151E62C();
    uint64_t v21 = v20;

    if (v15 == v19 && v17 == v21)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v23 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        sub_1C1354C14((uint64_t)v13, type metadata accessor for FeedHeadline);
        goto LABEL_9;
      }
    }
    sub_1C1357E7C((uint64_t)v13, a2, type metadata accessor for FeedHeadline);
    uint64_t v24 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v24, 1, v10);
  }
  sub_1C1358734((uint64_t)v6, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
LABEL_9:
  uint64_t v24 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v24, 1, v10);
}

uint64_t sub_1C1347B8C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v33 - v5;
  uint64_t v7 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FeedHeadline(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (id *)((char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00BE41C();
  sub_1C151A30C();
  sub_1BFE9EFB8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatModel);
  sub_1C0C92B68();
  uint64_t v21 = (uint64_t)&v9[*(int *)(v20 + 48)];
  sub_1C1357E7C((uint64_t)v9, (uint64_t)v15, type metadata accessor for FeedItem);
  sub_1C0C92BD4(v21);
  sub_1C1354C14((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatModel);
  FeedItem.feedHeadline.getter((uint64_t)v6);
  sub_1C1354C14((uint64_t)v15, type metadata accessor for FeedItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
  {
    sub_1C1358734((uint64_t)v6, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
LABEL_9:
    uint64_t v31 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, v31, 1, v16);
  }
  sub_1C1357E7C((uint64_t)v6, (uint64_t)v19, type metadata accessor for FeedHeadline);
  id v22 = objc_msgSend(v19[5], sel_identifier);
  uint64_t v23 = sub_1C151E62C();
  uint64_t v25 = v24;

  id v26 = objc_msgSend(a1, sel_identifier);
  uint64_t v27 = sub_1C151E62C();
  uint64_t v29 = v28;

  if (v23 == v27 && v25 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v30 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      sub_1C1354C14((uint64_t)v19, type metadata accessor for FeedHeadline);
      goto LABEL_9;
    }
  }
  sub_1C1357E7C((uint64_t)v19, a2, type metadata accessor for FeedHeadline);
  uint64_t v31 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a2, v31, 1, v16);
}

uint64_t sub_1C1347FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v28 = a1;
  sub_1C151A30C();
  uint64_t v27 = v7;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = FeedItem.identifier.getter();
  uint64_t v12 = v11;
  sub_1C1354C14((uint64_t)v9, type metadata accessor for FeedItem);
  LOBYTE(v10) = sub_1BFF896B4(v10, v12, a2);
  swift_bridgeObjectRelease();
  if (v10) {
    return 1;
  }
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v24 = v3;
  uint64_t v25 = a3 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  uint64_t v17 = v16 & v14;
  int64_t v26 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (v17)
  {
    v17 &= v17 - 1;
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1C151A30C();
    swift_storeEnumTagMultiPayload();
    FeedItem.identifier.getter();
    sub_1C1354C14((uint64_t)v9, type metadata accessor for FeedItem);
    char v20 = sub_1C151E89C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v20)
    {
      uint64_t v13 = 1;
LABEL_27:
      swift_release();
      return v13;
    }
  }
  int64_t v21 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v21 >= v26) {
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)(v25 + 8 * v21);
  ++v19;
  if (v22) {
    goto LABEL_24;
  }
  int64_t v19 = v21 + 1;
  if (v21 + 1 >= v26) {
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)(v25 + 8 * v19);
  if (v22) {
    goto LABEL_24;
  }
  int64_t v19 = v21 + 2;
  if (v21 + 2 >= v26) {
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)(v25 + 8 * v19);
  if (v22) {
    goto LABEL_24;
  }
  int64_t v19 = v21 + 3;
  if (v21 + 3 >= v26) {
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)(v25 + 8 * v19);
  if (v22)
  {
LABEL_24:
    uint64_t v17 = (v22 - 1) & v22;
    goto LABEL_7;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v26)
  {
LABEL_26:
    uint64_t v13 = 0;
    goto LABEL_27;
  }
  uint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v19 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v19 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v19 >= v26) {
      goto LABEL_26;
    }
    uint64_t v22 = *(void *)(v25 + 8 * v19);
    ++v23;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C13482F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE41C();
  uint64_t v38 = v16;
  uint64_t v39 = a1;
  sub_1C151A30C();
  sub_1BFE9EFB8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatModel);
  sub_1C0C92B68();
  uint64_t v37 = v17;
  uint64_t v18 = (uint64_t)&v9[*(int *)(v17 + 48)];
  sub_1C1357E7C((uint64_t)v9, (uint64_t)v15, type metadata accessor for FeedItem);
  sub_1C0C92BD4(v18);
  sub_1C1354C14((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatModel);
  uint64_t v19 = FeedItem.identifier.getter();
  uint64_t v21 = v20;
  sub_1C1354C14((uint64_t)v15, type metadata accessor for FeedItem);
  LOBYTE(v19) = sub_1BFF896B4(v19, v21, a2);
  swift_bridgeObjectRelease();
  if (v19) {
    return 1;
  }
  uint64_t v23 = *(void *)(a3 + 56);
  uint64_t v33 = v3;
  uint64_t v34 = a3 + 56;
  uint64_t v24 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  uint64_t v26 = v25 & v23;
  int64_t v35 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v36 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v28 = 0;
  while (v26)
  {
    v26 &= v26 - 1;
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1C151A30C();
    sub_1BFE9EFB8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatModel);
    uint64_t v29 = (uint64_t)&v9[*(int *)(v37 + 48)];
    sub_1C1357E7C((uint64_t)v9, (uint64_t)v15, type metadata accessor for FeedItem);
    sub_1C0C92BD4(v29);
    sub_1C1354C14((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatModel);
    FeedItem.identifier.getter();
    sub_1C1354C14((uint64_t)v15, type metadata accessor for FeedItem);
    LOBYTE(v29) = sub_1C151E89C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v29)
    {
      uint64_t v22 = 1;
LABEL_27:
      swift_release();
      return v22;
    }
  }
  int64_t v30 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v30 >= v35) {
    goto LABEL_26;
  }
  uint64_t v31 = *(void *)(v34 + 8 * v30);
  ++v28;
  if (v31) {
    goto LABEL_24;
  }
  int64_t v28 = v30 + 1;
  if (v30 + 1 >= v35) {
    goto LABEL_26;
  }
  uint64_t v31 = *(void *)(v34 + 8 * v28);
  if (v31) {
    goto LABEL_24;
  }
  int64_t v28 = v30 + 2;
  if (v30 + 2 >= v35) {
    goto LABEL_26;
  }
  uint64_t v31 = *(void *)(v34 + 8 * v28);
  if (v31) {
    goto LABEL_24;
  }
  int64_t v28 = v30 + 3;
  if (v30 + 3 >= v35) {
    goto LABEL_26;
  }
  uint64_t v31 = *(void *)(v34 + 8 * v28);
  if (v31)
  {
LABEL_24:
    uint64_t v26 = (v31 - 1) & v31;
    goto LABEL_7;
  }
  int64_t v32 = v30 + 4;
  if (v32 >= v35)
  {
LABEL_26:
    uint64_t v22 = 0;
    goto LABEL_27;
  }
  uint64_t v31 = *(void *)(v34 + 8 * v32);
  if (v31)
  {
    int64_t v28 = v32;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v28 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v28 >= v35) {
      goto LABEL_26;
    }
    uint64_t v31 = *(void *)(v34 + 8 * v28);
    ++v32;
    if (v31) {
      goto LABEL_24;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C1348724()
{
  uint64_t v1 = type metadata accessor for FeedItem(0) - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v8 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    char v10 = 1;
    do
    {
      char v11 = v10;
      uint64_t v12 = v9;
      sub_1BFE9EFB8(v7, (uint64_t)v4, type metadata accessor for FeedItem);
      FeedItem.layoutDirection.getter(&v14);
      if (!v15) {
        uint64_t v9 = v14;
      }
      v10 &= v15;
      if ((v15 & 1) == 0 && (v11 & 1) == 0)
      {
        if (v12 != v14)
        {
          swift_bridgeObjectRelease();
          sub_1C1354C14((uint64_t)v4, type metadata accessor for FeedItem);
          return 0;
        }
        char v10 = 0;
        uint64_t v9 = v12;
      }
      sub_1C1354C14((uint64_t)v4, type metadata accessor for FeedItem);
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return v9;
    }
  }
  return sub_1C151768C();
}

uint64_t sub_1C13488E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FormatLayoutSectionDescriptor.Header(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v64 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatLayoutSectionDescriptor.Footer(0);
  uint64_t v65 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151C1FC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a1;
  uint64_t v63 = a3;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  sub_1BFE9EFB8(v20, a3, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v22 = *MEMORY[0x1E4FAD2B0];
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
  uint64_t v57 = v17 + 104;
  v56(v19, v22, v16);
  uint64_t v23 = *(void *)(a2 + 40);
  uint64_t v68 = v19;
  swift_bridgeObjectRetain();
  uint64_t v59 = v23;
  sub_1BFEA4550((uint64_t (*)(char *))sub_1BFEA48B8, (uint64_t)v67, v23);
  uint64_t v25 = v24;
  uint64_t v55 = 0;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v27 = v19;
  uint64_t v60 = v16;
  uint64_t v61 = v17 + 8;
  uint64_t v58 = v26;
  v26(v19, v16);
  int64_t v28 = *(void *)(v25 + 16);
  uint64_t v66 = v15;
  if (v28)
  {
    uint64_t v54 = v21;
    uint64_t v69 = MEMORY[0x1E4FBC860];
    sub_1C05F81CC(0, v28, 0);
    unint64_t v29 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    uint64_t v53 = v25;
    uint64_t v30 = v25 + v29;
    uint64_t v31 = *(void *)(v64 + 72);
    uint64_t v32 = v69;
    do
    {
      sub_1BFE9EFB8(v30, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BFE9EFB8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C1354C14((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F81CC(0, *(void *)(v32 + 16) + 1, 1);
        uint64_t v32 = v69;
      }
      unint64_t v34 = *(void *)(v32 + 16);
      unint64_t v33 = *(void *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1C05F81CC(v33 > 1, v34 + 1, 1);
        uint64_t v32 = v69;
      }
      *(void *)(v32 + 16) = v34 + 1;
      sub_1C1357E7C((uint64_t)v9, v32+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v34, type metadata accessor for FormatLayoutSectionDescriptor.Header);
      v30 += v31;
      --v28;
      char v15 = v66;
    }
    while (v28);
    swift_bridgeObjectRelease();
    uint64_t v35 = v54;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = v21;
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  uint64_t v36 = v64;
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB896860, (uint64_t (*)(uint64_t))type metadata accessor for FormatContent.Resolved, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatLayoutSectionDescriptor.Data);
  uint64_t v64 = v37;
  uint64_t v38 = v63;
  *(void *)(v63 + *(int *)(v37 + 28)) = v32;
  uint64_t v39 = v27;
  uint64_t v40 = v60;
  uint64_t v41 = ((uint64_t (*)(char *, void, uint64_t))v56)(v27, *MEMORY[0x1E4FAD2A8], v60);
  MEMORY[0x1F4188790](v41);
  *(&v53 - 2) = (uint64_t)v27;
  uint64_t v42 = v59;
  swift_bridgeObjectRetain();
  sub_1BFEA4550((uint64_t (*)(char *))sub_1C0DA79F8, (uint64_t)(&v53 - 4), v42);
  uint64_t v44 = v43;
  v58(v39, v40);
  sub_1C1357F4C(v35);
  int64_t v45 = *(void *)(v44 + 16);
  uint64_t v46 = MEMORY[0x1E4FBC860];
  if (v45)
  {
    uint64_t v69 = MEMORY[0x1E4FBC860];
    sub_1C05F8184(0, v45, 0);
    uint64_t v47 = v44 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    uint64_t v48 = *(void *)(v36 + 72);
    uint64_t v46 = v69;
    do
    {
      sub_1BFE9EFB8(v47, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BFE9EFB8((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1C1354C14((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F8184(0, *(void *)(v46 + 16) + 1, 1);
        uint64_t v46 = v69;
      }
      unint64_t v50 = *(void *)(v46 + 16);
      unint64_t v49 = *(void *)(v46 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1C05F8184(v49 > 1, v50 + 1, 1);
        uint64_t v46 = v69;
      }
      *(void *)(v46 + 16) = v50 + 1;
      uint64_t v51 = v46
          + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))
          + *(void *)(v65 + 72) * v50;
      char v15 = v66;
      sub_1C1357E7C((uint64_t)v66, v51, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
      v47 += v48;
      --v45;
    }
    while (v45);
  }
  sub_1C1354C14(v62, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v38 + *(int *)(v64 + 32)) = v46;
  return result;
}

uint64_t sub_1C1348F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v12 = type metadata accessor for FeedItem(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  char v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 + 24);
  *(void *)a7 = *(void *)(a3 + 16);
  *(void *)(a7 + 8) = v16;
  uint64_t v17 = *(void *)(a3 + 40);
  *(void *)(a7 + 16) = *(void *)(a3 + 32);
  *(void *)(a7 + 24) = v17;
  uint64_t v18 = *(void *)(a3 + 112);
  long long v19 = *(_OWORD *)(a3 + 96);
  long long v57 = *(_OWORD *)(a3 + 80);
  long long v58 = v19;
  uint64_t v59 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(a7 + 32) = FeedGroupKind.identifier.getter();
  *(void *)(a7 + 40) = v20;
  uint64_t v21 = *(void *)(a3 + 128);
  *(void *)(a7 + 80) = *(void *)(a3 + 120);
  *(void *)(a7 + 88) = v21;
  uint64_t v22 = *(void *)(a3 + 64);
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v50 = a5;
    uint64_t v51 = a4;
    uint64_t v52 = a3;
    uint64_t v53 = a7;
    uint64_t v54 = a6;
    uint64_t v24 = v22;
    *(void *)&long long v57 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v23, 0);
    uint64_t v25 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v49 = v24;
    uint64_t v26 = v24 + ((v25 + 32) & ~v25);
    uint64_t v27 = *(void *)(v13 + 72);
    uint64_t v28 = v57;
    do
    {
      sub_1BFE9EFB8(v26, (uint64_t)v15, type metadata accessor for FeedItem);
      uint64_t v29 = FeedItem.identifier.getter();
      uint64_t v31 = v30;
      sub_1C1354C14((uint64_t)v15, type metadata accessor for FeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v28 = v57;
      }
      unint64_t v33 = *(void *)(v28 + 16);
      unint64_t v32 = *(void *)(v28 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1BFF661B8(v32 > 1, v33 + 1, 1);
        uint64_t v28 = v57;
      }
      *(void *)(v28 + 16) = v33 + 1;
      uint64_t v34 = v28 + 16 * v33;
      *(void *)(v34 + 32) = v29;
      *(void *)(v34 + 40) = v31;
      v26 += v27;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    a7 = v53;
    a6 = v54;
    a4 = v51;
    a3 = v52;
    a5 = v50;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
  *(void *)(a7 + 48) = v28;
  *(unsigned char *)(a7 + 56) = *(void *)(a3 + 80) > 0xAuLL;
  uint64_t v35 = v56;
  *(void *)(a7 + 64) = v55;
  *(void *)(a7 + 72) = v35;
  *(void *)(a7 + 96) = sub_1C151754C();
  sub_1C15176FC();
  *(void *)(a7 + 128) = v36;
  *(void *)(a7 + 136) = v37;
  sub_1C151764C();
  *(void *)(a7 + 144) = v38;
  *(void *)(a7 + 152) = v39;
  sub_1C151765C();
  *(void *)(a7 + 160) = v40;
  *(void *)(a7 + 168) = v41;
  uint64_t v42 = (void *)sub_1C151769C();
  id v43 = objc_msgSend(v42, sel_preferredContentSizeCategory);

  *(void *)(a7 + 104) = v43;
  type metadata accessor for FeedLayoutCacheKey();
  sub_1C15176BC();
  *(unsigned char *)(a7 + 112) = UIAccessibilityIsInvertColorsEnabled();
  uint64_t v44 = (void *)sub_1C151769C();
  id v45 = objc_msgSend(v44, sel_legibilityWeight);

  if ((unint64_t)v45 >= 2) {
    LOBYTE(v45) = UIAccessibilityIsBoldTextEnabled();
  }
  uint64_t v46 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(a5, v46);
  uint64_t v47 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(a4, v47);
  uint64_t result = swift_release();
  *(unsigned char *)(a7 + 113) = (_BYTE)v45;
  *(void *)(a7 + 120) = a6;
  return result;
}

uint64_t sub_1C134931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12)
{
  uint64_t v45 = a8;
  uint64_t v44 = a7;
  uint64_t v43 = a6;
  uint64_t v38 = a5;
  uint64_t v42 = a4;
  uint64_t v39 = a3;
  uint64_t v36 = a2;
  uint64_t v35 = a1;
  long long v41 = a10;
  long long v37 = a9;
  uint64_t v40 = a11;
  uint64_t v33 = a12;
  uint64_t v12 = type metadata accessor for FormatPluginData();
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v29 - v20;
  sub_1C00BE4B0();
  uint64_t v34 = v22;
  uint64_t v32 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354994(0, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
  uint64_t v31 = sub_1C151AA2C();
  uint64_t v30 = v25;
  sub_1C151AA3C();
  sub_1C151AA1C();
  sub_1BFE9EFB8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
  sub_1C1354C14((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  sub_1C1354C14((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
  sub_1C151AA1C();
  sub_1BFE9EFB8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
  sub_1C1357E7C((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  sub_1C1358098((uint64_t)&v15[*(int *)(v13 + 32)], (uint64_t)v64, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  sub_1C1354C14((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  sub_1C1354C14((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
  uint64_t v26 = *(void *)(v35 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  uint64_t v47 = v33;
  uint64_t v48 = v31;
  uint64_t v49 = v30;
  uint64_t v50 = v64;
  uint64_t v51 = v35;
  uint64_t v52 = v24;
  char v53 = 1;
  uint64_t v54 = v38;
  uint64_t v55 = v36;
  uint64_t v56 = v39;
  uint64_t v57 = v42;
  uint64_t v58 = v43;
  uint64_t v59 = v44;
  uint64_t v60 = v45;
  long long v61 = v37;
  long long v62 = v41;
  uint64_t v63 = v40;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C01830C4((void (*)(uint64_t *__return_ptr, void *))sub_1C135811C, (uint64_t)v46, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFE9E520((uint64_t)v64, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v34);
  return v27;
}

uint64_t sub_1C1349790(uint64_t a1, unint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v53 = a8;
  uint64_t v57 = a5;
  uint64_t v64 = a1;
  sub_1C1354BB0(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (uint64_t)&v49 - v14;
  uint64_t v55 = type metadata accessor for FeedContext();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1C151772C();
  uint64_t v20 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v60 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1C151757C();
  uint64_t v59 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v65 = (uint64_t)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v56 = a7;
  sub_1C151758C();
  int v62 = a4;
  uint64_t v26 = 0x746C7561666564;
  if (a2) {
    uint64_t v26 = v64;
  }
  uint64_t v64 = v26;
  unint64_t v27 = 0xE700000000000000;
  if (a2) {
    unint64_t v27 = a2;
  }
  unint64_t v63 = v27;
  long long v61 = v16;
  uint64_t v51 = v25;
  uint64_t v50 = v19;
  if (a3)
  {
    swift_bridgeObjectRetain();
    id v28 = a3;
  }
  else
  {
    uint64_t v29 = qword_1EB87B060;
    swift_bridgeObjectRetain();
    if (v29 != -1) {
      swift_once();
    }
    id v28 = (id)qword_1EB93C700;
  }
  uint64_t v30 = v8[12];
  uint64_t v31 = v8[13];
  __swift_project_boxed_opaque_existential_1(v8 + 9, v30);
  uint64_t v32 = *(void (**)(uint64_t, unint64_t, id, uint64_t, uint64_t))(v31 + 8);
  id v33 = a3;
  uint64_t v52 = (uint64_t)v28;
  v32(v64, v63, v28, v30, v31);
  sub_1C0668294((uint64_t)(v8 + 2), (uint64_t)v70);
  sub_1BFC66384((uint64_t)(v8 + 9), (uint64_t)v69);
  uint64_t v34 = v59;
  uint64_t v35 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v65, v51, v66);
  uint64_t v36 = (uint64_t)v60;
  uint64_t v37 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v60, v56, v49);
  uint64_t v38 = (uint64_t)v50;
  sub_1BFE9EFB8(v53, (uint64_t)v50, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v39 = v8[17];
  uint64_t v40 = v8[18];
  __swift_project_boxed_opaque_existential_1(v8 + 14, v39);
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 8))(v35, v37, v39, v40);
  sub_1BFC66384((uint64_t)(v8 + 19), (uint64_t)v68);
  uint64_t v42 = v58;
  sub_1C13589B8(v57, v58, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v42, 1, v55) == 1)
  {
    uint64_t v43 = v8[30];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v45 = (uint64_t)v61;
    FeedContextFactoryType.createFeedContext()(ObjectType, v43);
    sub_1C1358734(v42, (uint64_t)&qword_1EB886BB0, (uint64_t)type metadata accessor for FeedContext, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
  }
  else
  {
    uint64_t v45 = (uint64_t)v61;
    sub_1C1357E7C(v42, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for FeedContext);
  }
  sub_1BFC66384((uint64_t)(v8 + 24), (uint64_t)v67);
  unint64_t v46 = sub_1BFE5CE10(MEMORY[0x1E4FBC860]);
  sub_1BFE829C0(0, &qword_1EB864E50, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver.Cursor);
  swift_allocObject();
  uint64_t v47 = sub_1C134EAD8((uint64_t)v70, v69, v65, v36, v38, v41, v68, v52, v46, v62, v45, v67, v64, v63);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v66);
  return v47;
}

uint64_t sub_1C1349E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v28 - v10;
  sub_1C1358A3C();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v34 = 0x6E6F697369766572;
    unint64_t v35 = 0xE90000000000002DLL;
    uint64_t v33 = a3;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
  }
  else
  {
    uint64_t v34 = 0x6E6F697369766572;
    unint64_t v35 = 0xE90000000000002DLL;
    uint64_t v33 = a3;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v15 = *(void *)(a4 + 16);
    v28[2] = a4;
    if (v15)
    {
      uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v16 = v9 + 16;
      uint64_t v30 = v11;
      uint64_t v31 = v17;
      uint64_t v18 = a4 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
      uint64_t v29 = *(void *)(v16 + 56);
      uint64_t v19 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 40);
      uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
      uint64_t v21 = v16;
      uint64_t v22 = (void (**)(char *, char *, uint64_t))(v16 + 16);
      uint64_t v32 = v21;
      uint64_t v23 = (void (**)(char *, uint64_t))(v21 - 8);
      swift_bridgeObjectRetain();
      v28[1] = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v24 = v30;
      while (1)
      {
        v31(v14, v18, v8);
        uint64_t v25 = *v19;
        (*v19)(v14, 0, 1, v8);
        if ((*v20)(v14, 1, v8) == 1) {
          break;
        }
        (*v22)(v24, v14, v8);
        sub_1C151A30C();
        (*v23)(v24, v8);
        v18 += v29;
        if (!--v15) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain();
LABEL_9:
      v25(v14, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    uint64_t v26 = MEMORY[0x1E4FBB1A0];
    sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v26);
    sub_1C151E55C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  return v34;
}

uint64_t sub_1C134A250(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v39 - v14;
  sub_1C00BE41C();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v47 = 0x6E6F697369766572;
    unint64_t v48 = 0xE90000000000002DLL;
    unint64_t v46 = a3;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
  }
  else
  {
    uint64_t v21 = v18;
    uint64_t v44 = v12;
    uint64_t v45 = v9;
    uint64_t v47 = 0x6E6F697369766572;
    unint64_t v48 = 0xE90000000000002DLL;
    unint64_t v46 = a3;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v22 = *(void *)(a4 + 16);
    if (v22)
    {
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
      uint64_t v23 = v21 + 16;
      uint64_t v25 = a4 + ((*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64));
      uint64_t v41 = *(void *)(v23 + 56);
      uint64_t v42 = v24;
      uint64_t v43 = v23;
      uint64_t v39 = a4;
      uint64_t v40 = (void (**)(char *, uint64_t))(v23 - 8);
      swift_bridgeObjectRetain();
      uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        v42(v20, v25, v17);
        sub_1C151A30C();
        uint64_t v27 = (uint64_t)v44;
        sub_1BFE9EFB8((uint64_t)v15, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FormatModel);
        sub_1C0C92B68();
        uint64_t v29 = v27 + *(int *)(v28 + 48);
        uint64_t v30 = (uint64_t)v45;
        sub_1C1357E7C(v27, (uint64_t)v45, type metadata accessor for FeedItem);
        uint64_t v31 = FeedItem.externalContentCacheIdentifier.getter();
        uint64_t v33 = v32;
        sub_1C1354C14(v30, type metadata accessor for FeedItem);
        sub_1C0C92BD4(v29);
        sub_1C1354C14((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatModel);
        (*v40)(v20, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1BFEF9B68(0, v26[2] + 1, 1, v26);
        }
        unint64_t v35 = v26[2];
        unint64_t v34 = v26[3];
        if (v35 >= v34 >> 1) {
          uint64_t v26 = sub_1BFEF9B68((void *)(v34 > 1), v35 + 1, 1, v26);
        }
        _OWORD v26[2] = v35 + 1;
        uint64_t v36 = &v26[2 * v35];
        v36[4] = v31;
        v36[5] = v33;
        v25 += v41;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
    }
    unint64_t v46 = v26;
    uint64_t v37 = MEMORY[0x1E4FBB1A0];
    sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v37);
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  return v47;
}

uint64_t sub_1C134A6E8()
{
  swift_release();
  sub_1C1354C14(v0 + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
  return swift_deallocClassInstance();
}

uint64_t sub_1C134A768()
{
  return type metadata accessor for FormatBlueprintLayoutBuilder();
}

uint64_t type metadata accessor for FormatBlueprintLayoutBuilder()
{
  uint64_t result = qword_1EB868570;
  if (!qword_1EB868570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C134A7BC()
{
  uint64_t result = type metadata accessor for FormatPluginData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C134A85C()
{
  return sub_1C134A8EC((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
}

uint64_t sub_1C134A8A4()
{
  return sub_1C134A8EC((unint64_t *)&qword_1EB896870, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1C134A8EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C134A934()
{
  return sub_1C134A8EC((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
}

uint64_t sub_1C134A97C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v365 = a1;
  uint64_t v358 = a3;
  uint64_t v356 = sub_1C151BAEC();
  uint64_t v354 = *(void *)(v356 - 8);
  MEMORY[0x1F4188790](v356);
  v357 = (char *)&v329 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = sub_1C151B62C();
  uint64_t v352 = *(void *)(v353 - 8);
  MEMORY[0x1F4188790](v353);
  uint64_t v355 = (char *)&v329 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF01514(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v6 - 8);
  v429 = (char *)&v329 - v7;
  sub_1BFF01514(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v8 - 8);
  v448 = (uint64_t *)((char *)&v329 - v9);
  sub_1BFE83B60();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v447 = (uint64_t *)((char *)&v329 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE829C0(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v12 - 8);
  v446 = (uint64_t *)((char *)&v329 - v13);
  sub_1BFE829C0(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v14 - 8);
  int v445 = (uint64_t *)((char *)&v329 - v15);
  sub_1BFF01514(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v16 - 8);
  v444 = (uint64_t *)((char *)&v329 - v17);
  uint64_t v18 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v443 = (uint64_t *)((char *)&v329 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE83BF4();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v442 = (uint64_t *)((char *)&v329 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF01514(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v22 - 8);
  v441 = (uint64_t *)((char *)&v329 - v23);
  sub_1BFE829C0(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v440 = (uint64_t *)((char *)&v329 - v25);
  uint64_t v453 = type metadata accessor for FormatCompilerProperty(0);
  uint64_t v427 = *(void *)(v453 - 8);
  MEMORY[0x1F4188790](v453);
  uint64_t v452 = (uint64_t)&v329 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v454 = (uint64_t)&v329 - v28;
  uint64_t v387 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v387);
  uint64_t v381 = (uint64_t)&v329 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v389 = (uint64_t)&v329 - v31;
  uint64_t v401 = type metadata accessor for FormatPluginData();
  MEMORY[0x1F4188790](v401);
  int v413 = (unint64_t *)((char *)&v329 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v380 = (uint64_t)&v329 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v388 = (uint64_t)&v329 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v397 = (uint64_t)&v329 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v417 = (uint64_t)&v329 - v40;
  sub_1C0EF25F8();
  uint64_t v423 = v41;
  v412 = *(char **)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v369 = (uint64_t)&v329 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v379 = (uint64_t)&v329 - v44;
  MEMORY[0x1F4188790](v45);
  uint64_t v370 = (char *)&v329 - v46;
  MEMORY[0x1F4188790](v47);
  unint64_t v415 = (unint64_t)&v329 - v48;
  MEMORY[0x1F4188790](v49);
  int v420 = (char **)((char *)&v329 - v50);
  sub_1C13548EC();
  uint64_t v405 = v51;
  int v449 = (char *)*((void *)v51 - 1);
  MEMORY[0x1F4188790](v51);
  uint64_t v383 = (char *)&v329 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354994(0, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
  uint64_t v425 = v53;
  int v439 = (char *)*((void *)v53 - 1);
  MEMORY[0x1F4188790](v53);
  uint64_t v386 = (char *)&v329 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v55);
  v414 = (char *)&v329 - v56;
  MEMORY[0x1F4188790](v57);
  uint64_t v368 = (char *)&v329 - v58;
  MEMORY[0x1F4188790](v59);
  int v367 = (char *)&v329 - v60;
  MEMORY[0x1F4188790](v61);
  uint64_t v409 = (char *)&v329 - v62;
  MEMORY[0x1F4188790](v63);
  v419 = (char *)&v329 - v64;
  MEMORY[0x1F4188790](v65);
  uint64_t v377 = (char *)&v329 - v66;
  MEMORY[0x1F4188790](v67);
  uint64_t v376 = (char *)&v329 - v68;
  uint64_t v69 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1354BB0(0, &qword_1EB86B3D0, (uint64_t (*)(uint64_t))sub_1C13548EC, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v70 - 8);
  uint64_t v372 = (unint64_t *)((char *)&v329 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v72);
  uint64_t v371 = (unint64_t *)((char *)&v329 - v73);
  MEMORY[0x1F4188790](v74);
  long long v393 = (unint64_t *)((char *)&v329 - v75);
  MEMORY[0x1F4188790](v76);
  long long v392 = (uint64_t *)((char *)&v329 - v77);
  sub_1C1354974(0);
  uint64_t v408 = v78;
  uint64_t v366 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v450 = (char *)&v329 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354A88();
  MEMORY[0x1F4188790](v80 - 8);
  uint64_t v363 = (char *)&v329 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354B1C();
  uint64_t v364 = v82;
  MEMORY[0x1F4188790](v82);
  uint64_t v374 = (char *)&v329 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v84);
  long long v395 = (unint64_t *)((char *)&v329 - v85);
  uint64_t v362 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v362);
  id v87 = (char *)&v329 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1C151794C();
  MEMORY[0x1F4188790](v88 - 8);
  uint64_t v90 = (char *)&v329 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = sub_1C151772C();
  uint64_t v91 = *(char **)(v361 - 8);
  MEMORY[0x1F4188790](v361);
  uint64_t v93 = (uint64_t)&v329 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1C151759C();
  id v95 = *(void **)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  id v97 = (char *)&v329 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, v69);
  MEMORY[0x1F4188790](v98 - 8);
  id v100 = (char *)&v329 - v99;
  uint64_t v360 = *(void *)(v402 + 16);
  int v359 = *(unsigned __int8 *)(v402
                            + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData
                            + *(int *)(v401 + 28));
  uint64_t v101 = type metadata accessor for FeedContext();
  uint64_t v102 = *(void *)(v101 - 8);
  uint64_t v103 = *(void (**)(void, void, void))(v102 + 56);
  uint64_t v345 = v101;
  uint64_t v344 = (void (*)(void, void, void, void))v103;
  uint64_t v343 = v102 + 56;
  v103(v100, 1, 1);
  uint64_t v104 = (void (*)(void))v95[13];
  unsigned int v341 = *MEMORY[0x1E4FAB6D8];
  uint64_t v407 = v94;
  uint64_t v342 = (char *)(v95 + 13);
  uint64_t v340 = (void (*)(void, void, void))v104;
  v104(v97);
  sub_1C151B54C();
  sub_1C151F7CC();
  uint64_t v451 = v105;
  v438 = v106;
  sub_1C151B54C();
  uint64_t v437 = v107;
  uint64_t v436 = v108;
  sub_1C151B58C();
  v435 = v109;
  uint64_t v434 = v110;
  sub_1C151B51C();
  uint64_t v433 = v111;
  uint64_t v432 = v112;
  sub_1C151B59C();
  uint64_t v430 = v113;
  uint64_t v428 = v114;
  uint64_t v431 = sub_1C151B57C();
  sub_1C151B53C();
  sub_1C151B56C();
  sub_1C151B5BC();
  id v410 = a2;
  sub_1C151B55C();
  if (qword_1EB87CC48 != -1) {
LABEL_119:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  swift_release();
  v348 = v90;
  sub_1C151763C();
  uint64_t v115 = v362;
  uint64_t v116 = &v87[*(int *)(v362 + 36)];
  uint64_t v117 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v118 = *(void *)(v117 - 8);
  uint64_t v119 = *(void (**)(void, void, void))(v118 + 56);
  uint64_t v339 = v117;
  uint64_t v338 = (void (*)(void, void, void, void))v119;
  uint64_t v337 = v118 + 56;
  v119(v116, 1, 1);
  long long v335 = xmmword_1C153AB20;
  *(_OWORD *)id v87 = xmmword_1C153AB20;
  int v421 = 1;
  v87[16] = 1;
  *(void *)(v87 + 17) = 0;
  uint64_t v336 = v87 + 17;
  *((void *)v87 + 3) = 0;
  *(void *)&v87[*(int *)(v115 + 40)] = 0;
  uint64_t v391 = sub_1C1349790(0, 0, 0, v359, (uint64_t)v100, (uint64_t)v97, v93, (uint64_t)v87);
  uint64_t v351 = v87;
  sub_1C1354C14((uint64_t)v87, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v120 = (void (*)(void, void))*((void *)v91 + 1);
  uint64_t v350 = v91 + 8;
  v334 = v120;
  v120(v93, v361);
  uint64_t v121 = (void (*)(void, void))v95[1];
  uint64_t v347 = v97;
  uint64_t v122 = v407;
  unint64_t v349 = (char *)(v95 + 1);
  char v333 = v121;
  v121(v97, v407);
  uint64_t v346 = v100;
  sub_1C1358734((uint64_t)v100, (uint64_t)&qword_1EB886BB0, (uint64_t)type metadata accessor for FeedContext, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
  uint64_t v123 = v366;
  id v124 = *(void (**)(void, void, void))(v366 + 16);
  uint64_t v125 = v363;
  uint64_t v126 = v408;
  uint64_t v385 = v366 + 16;
  uint64_t v384 = v124;
  v124(v363, v365, v408);
  id v127 = *(void (**)(void, void, void))(v123 + 32);
  v123 += 32;
  uint64_t v332 = v127;
  v127(v450, v125, v126);
  uint64_t v128 = sub_1C134A8EC(&qword_1EB864558, sub_1C1354974);
  uint64_t v129 = (uint64_t)v395;
  uint64_t v331 = v128;
  sub_1C151E8FC();
  uint64_t v375 = *(int *)(v364 + 36);
  *(void *)(v129 + v375) = 0;
  sub_1C0C92AB4();
  uint64_t v330 = v130;
  long long v394 = (uint64_t *)(v129 + *(int *)(v130 + 36));
  uint64_t v131 = sub_1C134A8EC(&qword_1EB864560, sub_1C1354974);
  LODWORD(v451) = 0;
  LODWORD(v406) = 0;
  double v418 = 0.0;
  int v416 = (void (**)(char *))(v439 + 16);
  uint64_t v382 = (void (**)(char *, uint64_t))(v123 - 24);
  uint64_t v411 = v439 + 32;
  unsigned int v404 = (char **)(v449 + 56);
  uint64_t v403 = (unsigned int (**)(uint64_t *, uint64_t, char *))(v449 + 48);
  uint64_t v422 = (void (**)(char *, char *))(v439 + 8);
  v399 = (void (**)(unint64_t, char **, uint64_t))(v412 + 16);
  long long v390 = v412 + 32;
  uint64_t v398 = v412 + 8;
  unint64_t v329 = (unint64_t)"epare first, id=";
  uint64_t v373 = 0x80000001C1610D40;
  unint64_t v424 = MEMORY[0x1E4FBC860];
  uint64_t v400 = v131;
  long long v396 = (void (**)(void, void, void))v93;
  uint64_t v132 = v122;
  uint64_t v366 = v123;
  while (1)
  {
    uint64_t v133 = *v394;
    id v95 = v395;
    uint64_t v134 = v408;
    sub_1C151F0EC();
    if (v133 == v457)
    {
      id v97 = *v404;
      uint64_t v135 = v393;
      uint64_t v90 = v405;
      ((void (*)(void *, uint64_t, uint64_t, char *))*v404)(v393, 1, 1, v405);
      uint64_t v91 = v425;
      id v87 = v411;
    }
    else
    {
      uint64_t v136 = (void (*)(void, void))sub_1C151F19C();
      unint64_t v137 = v377;
      uint64_t v91 = v425;
      (*v416)(v377);
      v136(&v457, 0);
      uint64_t v138 = v450;
      v384(v450, v95, v134);
      sub_1C151F0FC();
      (*v382)(v138, v134);
      id v87 = v411;
      id v100 = *(char **)v411;
      uint64_t v93 = (uint64_t)v376;
      (*(void (**)(char *, char *, char *))v411)(v376, v137, v91);
      uint64_t v90 = v405;
      uint64_t v139 = &v383[*((int *)v405 + 12)];
      uint64_t v140 = v375;
      uint64_t v141 = *(void *)((char *)v95 + v375);
      ((void (*)(char *, uint64_t, char *))v100)(v139, v93, v91);
      if (__OFADD__(v141, 1))
      {
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
      *(void *)((char *)v95 + v140) = v141 + 1;
      uint64_t v142 = v393;
      uint64_t v143 = (char *)v393 + *((int *)v90 + 12);
      void *v393 = v141;
      uint64_t v144 = v139;
      uint64_t v135 = v142;
      ((void (*)(char *, char *, char *))v100)(v143, v144, v91);
      id v97 = *v404;
      ((void (*)(void *, void, uint64_t, char *))*v404)(v135, 0, 1, v90);
      uint64_t v93 = (uint64_t)v396;
      uint64_t v132 = v407;
    }
    uint64_t v145 = (uint64_t)v135;
    uint64_t v146 = v392;
    sub_1C13586B4(v145, (uint64_t)v392, &qword_1EB86B3D0, (uint64_t (*)(uint64_t))sub_1C13548EC);
    uint64_t v147 = *v403;
    if ((*v403)(v146, 1, v90) == 1) {
      break;
    }
    uint64_t v148 = *v146;
    uint64_t v149 = (uint64_t)v419;
    (*(void (**)(char *, char *, char *))v87)(v419, (char *)v146 + *((int *)v90 + 12), v91);
    uint64_t v150 = v417;
    sub_1C151AA1C();
    sub_1C151B53C();
    uint64_t v151 = sub_1C1357AC4(v148);
    uint64_t v152 = v397;
    sub_1BFE9EFB8(v150, v397, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
    uint64_t v153 = (uint64_t)v413;
    sub_1C1357E7C(v152, (uint64_t)v413, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
    uint64_t v154 = *(void *)(v153 + *(int *)(v401 + 36));
    swift_bridgeObjectRetain();
    sub_1C134E3C4(v153, v149, v391, v154, v151, 0, 1, (uint64_t)v420);
    swift_bridgeObjectRelease();
    sub_1C1354C14(v153, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
    swift_release();
    sub_1C1354C14(v150, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
    sub_1C151B64C();
    double v156 = v155;
    if (((v406 | v421) & 1) == 0) {
      LODWORD(v406) = v155 != v418;
    }
    uint64_t v157 = v409;
    uint64_t v158 = v425;
    ((void (*)(char *, char *, char *))*v416)(v409, v419, v425);
    uint64_t v159 = v422;
    if (v451)
    {
      LODWORD(v451) = 1;
    }
    else
    {
      uint64_t v160 = v388;
      sub_1C151AA1C();
      uint64_t v161 = v160;
      uint64_t v162 = v417;
      sub_1BFE9EFB8(v161, v417, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
      sub_1C1357E7C(v162, v153, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      uint64_t v163 = v389;
      sub_1BFE9EFB8(v153, v389, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
      sub_1C1354C14(v153, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      uint64_t v164 = *(void *)(v163 + *(int *)(v387 + 32));
      uint64_t v165 = MEMORY[0x1E4FBC860];
      uint64_t v456 = MEMORY[0x1E4FBC860];
      uint64_t v428 = *(void *)(v164 + 16);
      if (v428)
      {
        uint64_t v426 = v164 + 32;
        uint64_t v378 = v164;
        swift_bridgeObjectRetain_n();
        uint64_t v166 = 0;
        do
        {
          uint64_t v436 = v166;
          uint64_t v167 = (uint64_t *)(v426 + 80 * (void)v166);
          uint64_t v168 = (char *)*v167;
          uint64_t v169 = (char *)v167[1];
          uint64_t v170 = v167[2];
          uint64_t v171 = v167[3];
          uint64_t v172 = (char *)v167[4];
          uint64_t v173 = v167[5];
          char v174 = (char *)v167[6];
          uint64_t v175 = v167[7];
          uint64_t v176 = (char *)v167[8];
          uint64_t v177 = (char *)v167[9];
          uint64_t v431 = (unint64_t)v172 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v178 = *(void *)(((unint64_t)v172 & 0x7FFFFFFFFFFFFFFFLL)
                           + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
          uint64_t v179 = v176;
          uint64_t v180 = v168;
          uint64_t v181 = v169;
          uint64_t v182 = v170;
          uint64_t v183 = v171;
          int v439 = v172;
          uint64_t v437 = v174;
          sub_1BFEE0A78();
          uint64_t v184 = v178;
          int64_t v185 = *(void *)(v178 + 16);
          v435 = v180;
          uint64_t v434 = v181;
          uint64_t v433 = v182;
          uint64_t v432 = v183;
          v438 = v179;
          int v449 = v177;
          if (v185)
          {
            uint64_t v430 = v184;
            sub_1BFEE0A78();
            sub_1BFEE0A78();
            uint64_t v457 = MEMORY[0x1E4FBC860];
            uint64_t v186 = v430;
            swift_bridgeObjectRetain();
            sub_1BFF661B8(0, v185, 0);
            uint64_t v187 = v457;
            uint64_t v188 = v186
                 + ((*(unsigned __int8 *)(v427 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v427 + 80));
            uint64_t v451 = *(void *)(v427 + 72);
            uint64_t v189 = (uint64_t *)v429;
            do
            {
              sub_1BFE9EFB8(v188, v454, type metadata accessor for FormatCompilerProperty);
              uint64_t v190 = v175;
              uint64_t v191 = v173;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v195 = v441;
                  sub_1C087DC64(v454, (uint64_t)v441);
                  uint64_t v193 = *v195;
                  uint64_t v194 = v195[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DF44((uint64_t)v195);
                  break;
                case 2u:
                  uint64_t v196 = v442;
                  sub_1C1357E7C(v454, (uint64_t)v442, (uint64_t (*)(void))sub_1BFE83BF4);
                  uint64_t v193 = *v196;
                  uint64_t v194 = v196[1];
                  swift_bridgeObjectRetain();
                  uint64_t v197 = (uint64_t (*)(void))sub_1BFE83BF4;
                  goto LABEL_26;
                case 3u:
                  uint64_t v196 = v443;
                  sub_1C1357E7C(v454, (uint64_t)v443, type metadata accessor for FormatCompilerEnumProperty);
                  uint64_t v193 = *v196;
                  uint64_t v194 = v196[1];
                  swift_bridgeObjectRetain();
                  uint64_t v197 = type metadata accessor for FormatCompilerEnumProperty;
                  goto LABEL_26;
                case 4u:
                  uint64_t v198 = v444;
                  sub_1C087DB38(v454, (uint64_t)v444);
                  uint64_t v193 = *v198;
                  uint64_t v194 = v198[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DEB0((uint64_t)v198);
                  break;
                case 5u:
                  uint64_t v199 = v445;
                  sub_1C087DA18(v454, (uint64_t)v445);
                  uint64_t v193 = *v199;
                  uint64_t v194 = v199[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DE28((uint64_t)v199);
                  break;
                case 6u:
                  uint64_t v200 = v446;
                  sub_1BFE83E80(v454, (uint64_t)v446);
                  uint64_t v193 = *v200;
                  uint64_t v194 = v200[1];
                  swift_bridgeObjectRetain();
                  sub_1BFE86F20((uint64_t)v200);
                  break;
                case 7u:
                  uint64_t v196 = v447;
                  sub_1C1357E7C(v454, (uint64_t)v447, (uint64_t (*)(void))sub_1BFE83B60);
                  uint64_t v193 = *v196;
                  uint64_t v194 = v196[1];
                  swift_bridgeObjectRetain();
                  uint64_t v197 = (uint64_t (*)(void))sub_1BFE83B60;
LABEL_26:
                  sub_1C1354C14((uint64_t)v196, v197);
                  break;
                case 8u:
                  uint64_t v201 = v448;
                  sub_1C087D8F8(v454, (uint64_t)v448);
                  uint64_t v193 = *v201;
                  uint64_t v194 = v201[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DD94((uint64_t)v201);
                  break;
                case 9u:
                  sub_1C087D7CC(v454, (uint64_t)v189);
                  uint64_t v193 = *v189;
                  uint64_t v194 = v189[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DD00((uint64_t)v189);
                  break;
                default:
                  uint64_t v192 = v440;
                  sub_1BFE86E90(v454, (uint64_t)v440);
                  uint64_t v193 = *v192;
                  uint64_t v194 = v192[1];
                  swift_bridgeObjectRetain();
                  sub_1BFE87264((uint64_t)v192);
                  break;
              }
              uint64_t v457 = v187;
              unint64_t v203 = *(void *)(v187 + 16);
              unint64_t v202 = *(void *)(v187 + 24);
              if (v203 >= v202 >> 1)
              {
                sub_1BFF661B8(v202 > 1, v203 + 1, 1);
                uint64_t v189 = (uint64_t *)v429;
                uint64_t v187 = v457;
              }
              *(void *)(v187 + 16) = v203 + 1;
              uint64_t v204 = v187 + 16 * v203;
              *(void *)(v204 + 32) = v193;
              *(void *)(v204 + 40) = v194;
              v188 += v451;
              --v185;
              uint64_t v173 = v191;
              uint64_t v175 = v190;
            }
            while (v185);
            swift_bridgeObjectRelease();
            id v97 = v437;
          }
          else
          {
            sub_1BFEE0A78();
            id v97 = v437;
            sub_1BFEE0A78();
            uint64_t v187 = MEMORY[0x1E4FBC860];
          }
          uint64_t v455 = sub_1C151EFFC();
          uint64_t v205 = *(void *)(v187 + 16);
          if (v205)
          {
            uint64_t v206 = (uint64_t *)(v187 + 40);
            do
            {
              uint64_t v207 = *(v206 - 1);
              uint64_t v208 = *v206;
              swift_bridgeObjectRetain();
              sub_1BFEFFC1C(&v457, v207, v208);
              swift_bridgeObjectRelease();
              v206 += 2;
              --v205;
            }
            while (v205);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v166 = v436 + 1;
          sub_1C0033494();
          sub_1C0033494();
          sub_1BFE72794(v455);
        }
        while (v166 != (char *)v428);
        swift_bridgeObjectRelease_n();
        uint64_t v165 = v456;
        uint64_t v157 = v409;
        uint64_t v93 = (uint64_t)v396;
      }
      uint64_t v209 = *(void *)(v165 + 16);
      uint64_t v210 = sub_1C151EFFC();
      uint64_t v456 = v210;
      if (v209)
      {
        uint64_t v211 = (uint64_t *)(v165 + 40);
        do
        {
          uint64_t v212 = *(v211 - 1);
          uint64_t v213 = *v211;
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v457, v212, v213);
          swift_bridgeObjectRelease();
          v211 += 2;
          --v209;
        }
        while (v209);
        swift_bridgeObjectRelease();
        uint64_t v214 = v456;
        uint64_t v157 = v409;
        uint64_t v93 = (uint64_t)v396;
      }
      else
      {
        uint64_t v214 = v210;
        swift_bridgeObjectRelease();
      }
      sub_1C1354C14(v389, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
      LODWORD(v451) = sub_1BFF896B4(0xD000000000000018, v373, v214);
      swift_bridgeObjectRelease();
      sub_1C1354C14(v388, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
      uint64_t v158 = v425;
      uint64_t v159 = v422;
    }
    uint64_t v132 = v407;
    char v215 = *v159;
    (*v159)(v157, v158);
    double v216 = v418;
    if (v421) {
      double v216 = 0.0;
    }
    if (v216 > v156) {
      double v156 = v216;
    }
    (*v399)(v415, v420, v423);
    unint64_t v217 = v424;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v217 = sub_1C0EE8F5C(0, *(void *)(v217 + 16) + 1, 1, v217);
    }
    unint64_t v424 = v217;
    unint64_t v219 = *(void *)(v217 + 16);
    unint64_t v218 = *(void *)(v217 + 24);
    if (v219 >= v218 >> 1) {
      unint64_t v424 = sub_1C0EE8F5C(v218 > 1, v219 + 1, 1, v424);
    }
    double v418 = v156;
    unint64_t v220 = v424;
    *(void *)(v424 + 16) = v219 + 1;
    uint64_t v221 = v412;
    uint64_t v222 = v423;
    (*((void (**)(unint64_t, unint64_t, uint64_t))v412 + 4))(v220+ ((v221[80] + 32) & ~(unint64_t)v221[80])+ *((void *)v221 + 9) * v219, v415, v423);
    (*((void (**)(char **, uint64_t))v221 + 1))(v420, v222);
    v215(v419, v425);
    int v421 = 0;
  }
  sub_1C1354C14((uint64_t)v395, (uint64_t (*)(void))sub_1C1354B1C);
  if (v406 & v451)
  {
    int v420 = (char **)v97;
    uint64_t v409 = (char *)v147;
    uint64_t v223 = (uint64_t)v346;
    v344(v346, 1, 1, v345);
    uint64_t v224 = (uint64_t)v347;
    v340(v347, v341, v132);
    sub_1C151B54C();
    sub_1C151F7CC();
    uint64_t v454 = v225;
    uint64_t v451 = v226;
    sub_1C151B54C();
    int v449 = v227;
    int v439 = v228;
    sub_1C151B58C();
    v438 = v229;
    uint64_t v437 = v230;
    sub_1C151B51C();
    uint64_t v436 = v231;
    v435 = v232;
    sub_1C151B59C();
    uint64_t v434 = v233;
    uint64_t v433 = v234;
    sub_1C151B57C();
    uint64_t v235 = v132;
    sub_1C151B53C();
    sub_1C151B56C();
    sub_1C151B5BC();
    sub_1C151B55C();
    swift_retain();
    sub_1C151709C();
    swift_release();
    sub_1C151763C();
    uint64_t v236 = v362;
    uint64_t v237 = (uint64_t)v351;
    v338(&v351[*(int *)(v362 + 36)], 1, 1, v339);
    *(_OWORD *)uint64_t v237 = v335;
    *(unsigned char *)(v237 + 16) = 1;
    uint64_t v238 = v336;
    *uint64_t v336 = 0;
    *(void *)((char *)v238 + 7) = 0;
    *(void *)(v237 + *(int *)(v236 + 40)) = 0;
    uint64_t v407 = sub_1C1349790(0, 0, 0, v359, v223, v224, v93, v237);
    sub_1C1354C14(v237, type metadata accessor for FeedLayoutSolverOptions);
    v334(v93, v361);
    v333(v224, v235);
    sub_1C1358734(v223, (uint64_t)&qword_1EB886BB0, (uint64_t)type metadata accessor for FeedContext, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
    uint64_t v239 = v363;
    uint64_t v240 = v408;
    v384(v363, v365, v408);
    uint64_t v91 = v450;
    v332(v450, v239, v240);
    id v87 = v374;
    sub_1C151E8FC();
    uint64_t v93 = *(int *)(v364 + 36);
    *(void *)&v87[v93] = 0;
    uint64_t v241 = &v87[*(int *)(v330 + 36)];
    double v242 = v418;
    id v100 = v412;
    long long v396 = (void (**)(void, void, void))(v412 + 40);
    LODWORD(v392) = v421 & 1;
    long long v394 = (uint64_t *)(v329 | 0x8000000000000000);
    uint64_t v406 = v241;
    long long v393 = (void *)v93;
    while (1)
    {
      uint64_t v243 = *(void *)v241;
      sub_1C151F0EC();
      if (v243 == v457)
      {
        uint64_t v244 = v372;
        id v97 = v405;
        id v95 = v420;
        ((void (*)(void *, uint64_t, uint64_t, char *))v420)(v372, 1, 1, v405);
        uint64_t v90 = (char *)v422;
      }
      else
      {
        uint64_t v245 = (void (*)(void, void))sub_1C151F19C();
        long long v246 = v368;
        long long v247 = v425;
        (*v416)(v368);
        v245(&v457, 0);
        v384(v91, v87, v240);
        sub_1C151F0FC();
        (*v382)(v91, v240);
        id v95 = (void *)v93;
        uint64_t v93 = (uint64_t)v411;
        long long v248 = *(char **)v411;
        uint64_t v90 = v367;
        (*(void (**)(char *, char *, char *))v411)(v367, v246, v247);
        id v97 = v405;
        long long v249 = &v383[*((int *)v405 + 12)];
        id v100 = *(char **)((char *)v95 + (void)v87);
        ((void (*)(char *, char *, char *))v248)(v249, v90, v247);
        if (__OFADD__(v100, 1)) {
          goto LABEL_117;
        }
        *(void *)((char *)v95 + (void)v87) = v100 + 1;
        long long v250 = v372;
        long long v251 = (char *)v372 + *((int *)v97 + 12);
        *uint64_t v372 = v100;
        long long v252 = v249;
        uint64_t v244 = v250;
        ((void (*)(char *, char *, char *))v248)(v251, v252, v247);
        long long v253 = v420;
        ((void (*)(void *, void, uint64_t, char *))v420)(v244, 0, 1, v97);
        id v100 = v412;
        uint64_t v90 = (char *)v422;
        uint64_t v93 = (uint64_t)v95;
        id v95 = v253;
      }
      uint64_t v254 = (uint64_t)v244;
      unint64_t v255 = v371;
      sub_1C13586B4(v254, (uint64_t)v371, &qword_1EB86B3D0, (uint64_t (*)(uint64_t))sub_1C13548EC);
      int v256 = ((uint64_t (*)(unint64_t *, uint64_t, char *))v409)(v255, 1, v97);
      unint64_t v257 = v424;
      id v87 = v410;
      if (v256 == 1)
      {
        sub_1C1354C14((uint64_t)v374, (uint64_t (*)(void))sub_1C1354B1C);
        swift_release();
        goto LABEL_112;
      }
      unint64_t v258 = *v255;
      (*(void (**)(char *, char *, char *))v411)(v414, (char *)v255 + *((int *)v97 + 12), v425);
      if ((v258 & 0x8000000000000000) != 0) {
        goto LABEL_114;
      }
      if (v258 >= *(void *)(v257 + 16)) {
        goto LABEL_115;
      }
      int v420 = (char **)v95;
      v419 = (char *)((v100[80] + 32) & ~(unint64_t)v100[80]);
      uint64_t v259 = *((void *)v100 + 9);
      uint64_t v426 = v258;
      unint64_t v415 = v259 * v258;
      unint64_t v260 = &v419[v257 + v259 * v258];
      uint64_t v261 = v370;
      uint64_t v262 = v423;
      (*((void (**)(char *, char *, uint64_t))v100 + 2))(v370, v260, v423);
      sub_1C151B64C();
      double v264 = v263;
      (*((void (**)(char *, uint64_t))v100 + 1))(v261, v262);
      if (v421)
      {
        ((void (*)(char *, char *, char *))*v416)(v386, v414, v425);
        id v95 = v413;
      }
      else
      {
        uint64_t v265 = v386;
        uint64_t v266 = v425;
        ((void (*)(char *, char *, char *))*v416)(v386, v414, v425);
        id v95 = v413;
        if (v264 == v242)
        {
          id v97 = *(char **)v90;
          (*(void (**)(char *, char *))v90)(v265, v266);
          goto LABEL_106;
        }
      }
      uint64_t v267 = v380;
      sub_1C151AA1C();
      uint64_t v268 = v267;
      uint64_t v269 = v417;
      sub_1BFE9EFB8(v268, v417, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
      sub_1C1357E7C(v269, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      uint64_t v270 = v381;
      sub_1BFE9EFB8((uint64_t)v95, v381, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
      sub_1C1354C14((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      uint64_t v271 = *(void *)(v270 + *(int *)(v387 + 32));
      uint64_t v272 = MEMORY[0x1E4FBC860];
      uint64_t v456 = MEMORY[0x1E4FBC860];
      uint64_t v430 = *(void *)(v271 + 16);
      if (v430)
      {
        uint64_t v428 = v271 + 32;
        long long v395 = (void *)v271;
        swift_bridgeObjectRetain_n();
        uint64_t v273 = 0;
        do
        {
          BOOL v275 = (char **)(v428 + 80 * v273);
          unint64_t v276 = *v275;
          uint64_t v277 = (uint64_t)v275[1];
          uint64_t v278 = v275[2];
          uint64_t v279 = v275[3];
          uint64_t v280 = v275[4];
          uint64_t v281 = v275[5];
          uint64_t v282 = v275[7];
          uint64_t v284 = v275[8];
          uint64_t v283 = v275[9];
          uint64_t v432 = (unint64_t)v280 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v285 = *(void *)(((unint64_t)v280 & 0x7FFFFFFFFFFFFFFFLL)
                           + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
          uint64_t v437 = v276;
          uint64_t v454 = v277;
          uint64_t v451 = (uint64_t)v278;
          sub_1BFEE0A78();
          uint64_t v286 = v285;
          int64_t v287 = *(void *)(v285 + 16);
          int v449 = v282;
          uint64_t v436 = v279;
          v435 = v280;
          uint64_t v434 = v281;
          uint64_t v433 = v273;
          int v439 = v284;
          v438 = v283;
          if (v287)
          {
            uint64_t v431 = v286;
            sub_1BFEE0A78();
            sub_1BFEE0A78();
            uint64_t v457 = MEMORY[0x1E4FBC860];
            uint64_t v288 = v431;
            swift_bridgeObjectRetain();
            sub_1BFF661B8(0, v287, 0);
            uint64_t v289 = v457;
            uint64_t v290 = v288
                 + ((*(unsigned __int8 *)(v427 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v427 + 80));
            uint64_t v291 = *(void *)(v427 + 72);
            BOOL v292 = (uint64_t *)v429;
            do
            {
              sub_1BFE9EFB8(v290, v452, type metadata accessor for FormatCompilerProperty);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v296 = v441;
                  sub_1C087DC64(v452, (uint64_t)v441);
                  uint64_t v295 = *v296;
                  uint64_t v294 = v296[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DF44((uint64_t)v296);
                  break;
                case 2u:
                  uint64_t v297 = v442;
                  sub_1C1357E7C(v452, (uint64_t)v442, (uint64_t (*)(void))sub_1BFE83BF4);
                  uint64_t v295 = *v297;
                  uint64_t v294 = v297[1];
                  swift_bridgeObjectRetain();
                  uint64_t v298 = (uint64_t (*)(void))sub_1BFE83BF4;
                  goto LABEL_83;
                case 3u:
                  uint64_t v297 = v443;
                  sub_1C1357E7C(v452, (uint64_t)v443, type metadata accessor for FormatCompilerEnumProperty);
                  uint64_t v295 = *v297;
                  uint64_t v294 = v297[1];
                  swift_bridgeObjectRetain();
                  uint64_t v298 = type metadata accessor for FormatCompilerEnumProperty;
                  goto LABEL_83;
                case 4u:
                  id v299 = v444;
                  sub_1C087DB38(v452, (uint64_t)v444);
                  uint64_t v295 = *v299;
                  uint64_t v294 = v299[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DEB0((uint64_t)v299);
                  break;
                case 5u:
                  uint64_t v300 = v445;
                  sub_1C087DA18(v452, (uint64_t)v445);
                  uint64_t v295 = *v300;
                  uint64_t v294 = v300[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DE28((uint64_t)v300);
                  break;
                case 6u:
                  uint64_t v301 = v446;
                  sub_1BFE83E80(v452, (uint64_t)v446);
                  uint64_t v295 = *v301;
                  uint64_t v294 = v301[1];
                  swift_bridgeObjectRetain();
                  sub_1BFE86F20((uint64_t)v301);
                  break;
                case 7u:
                  uint64_t v297 = v447;
                  sub_1C1357E7C(v452, (uint64_t)v447, (uint64_t (*)(void))sub_1BFE83B60);
                  uint64_t v295 = *v297;
                  uint64_t v294 = v297[1];
                  swift_bridgeObjectRetain();
                  uint64_t v298 = (uint64_t (*)(void))sub_1BFE83B60;
LABEL_83:
                  sub_1C1354C14((uint64_t)v297, v298);
                  break;
                case 8u:
                  uint64_t v302 = v448;
                  sub_1C087D8F8(v452, (uint64_t)v448);
                  uint64_t v295 = *v302;
                  uint64_t v294 = v302[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DD94((uint64_t)v302);
                  break;
                case 9u:
                  sub_1C087D7CC(v452, (uint64_t)v292);
                  uint64_t v295 = *v292;
                  uint64_t v294 = v292[1];
                  swift_bridgeObjectRetain();
                  sub_1C087DD00((uint64_t)v292);
                  break;
                default:
                  uint64_t v293 = v440;
                  sub_1BFE86E90(v452, (uint64_t)v440);
                  uint64_t v295 = *v293;
                  uint64_t v294 = v293[1];
                  swift_bridgeObjectRetain();
                  sub_1BFE87264((uint64_t)v293);
                  break;
              }
              uint64_t v457 = v289;
              unint64_t v304 = *(void *)(v289 + 16);
              unint64_t v303 = *(void *)(v289 + 24);
              if (v304 >= v303 >> 1)
              {
                sub_1BFF661B8(v303 > 1, v304 + 1, 1);
                BOOL v292 = (uint64_t *)v429;
                uint64_t v289 = v457;
              }
              *(void *)(v289 + 16) = v304 + 1;
              uint64_t v305 = v289 + 16 * v304;
              *(void *)(v305 + 32) = v295;
              *(void *)(v305 + 40) = v294;
              v290 += v291;
              --v287;
              uint64_t v91 = v450;
            }
            while (v287);
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1BFEE0A78();
            sub_1BFEE0A78();
            uint64_t v289 = MEMORY[0x1E4FBC860];
          }
          uint64_t v455 = sub_1C151EFFC();
          uint64_t v306 = *(void *)(v289 + 16);
          if (v306)
          {
            char v307 = (uint64_t *)(v289 + 40);
            do
            {
              uint64_t v308 = *(v307 - 1);
              uint64_t v309 = *v307;
              swift_bridgeObjectRetain();
              sub_1BFEFFC1C(&v457, v308, v309);
              swift_bridgeObjectRelease();
              v307 += 2;
              --v306;
            }
            while (v306);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v274 = v433 + 1;
          sub_1C0033494();
          sub_1C0033494();
          sub_1BFE72794(v455);
          uint64_t v273 = v274;
        }
        while (v274 != v430);
        swift_bridgeObjectRelease_n();
        uint64_t v272 = v456;
        id v87 = v410;
        id v95 = v413;
        uint64_t v90 = (char *)v422;
        uint64_t v93 = (uint64_t)v393;
      }
      uint64_t v310 = *(void *)(v272 + 16);
      uint64_t v311 = sub_1C151EFFC();
      uint64_t v456 = v311;
      if (v310)
      {
        unint64_t v312 = (uint64_t *)(v272 + 40);
        do
        {
          uint64_t v313 = *(v312 - 1);
          uint64_t v314 = *v312;
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v457, v313, v314);
          swift_bridgeObjectRelease();
          v312 += 2;
          --v310;
        }
        while (v310);
        swift_bridgeObjectRelease();
        uint64_t v315 = v456;
        id v95 = v413;
      }
      else
      {
        uint64_t v315 = v311;
        swift_bridgeObjectRelease();
      }
      sub_1C1354C14(v381, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
      char v316 = sub_1BFF896B4(0xD000000000000018, (uint64_t)v394, v315);
      swift_bridgeObjectRelease();
      sub_1C1354C14(v380, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
      id v97 = *(char **)v90;
      (*(void (**)(char *, char *))v90)(v386, v425);
      if (v316)
      {
        uint64_t v317 = v417;
        uint64_t v90 = v414;
        sub_1C151AA1C();
        sub_1C151B53C();
        uint64_t v318 = sub_1C1357AC4(v426);
        uint64_t v319 = v397;
        sub_1BFE9EFB8(v317, v397, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
        sub_1C1357E7C(v319, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
        uint64_t v320 = *(void *)((char *)v95 + *(int *)(v401 + 36));
        swift_bridgeObjectRetain();
        sub_1C134E3C4((uint64_t)v95, (uint64_t)v90, v407, v320, v318, *(uint64_t *)&v418, (char)v392, v369);
        swift_bridgeObjectRelease();
        sub_1C1354C14((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
        swift_release();
        sub_1C1354C14(v317, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
        unint64_t v321 = v424;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v321 = sub_1C0378FC0(v321);
        }
        id v100 = v412;
        int v322 = v425;
        if (v426 >= *(void *)(v321 + 16)) {
          goto LABEL_118;
        }
        unint64_t v424 = v321;
        (*v396)(&v419[v321 + v415], v369, v423);
        goto LABEL_57;
      }
LABEL_106:
      uint64_t v323 = v417;
      uint64_t v90 = v414;
      sub_1C151AA1C();
      sub_1C151B53C();
      uint64_t v324 = sub_1C1357AC4(v426);
      uint64_t v325 = v397;
      sub_1BFE9EFB8(v323, v397, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
      sub_1C1357E7C(v325, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      uint64_t v326 = *(void *)((char *)v95 + *(int *)(v401 + 36));
      swift_bridgeObjectRetain();
      sub_1C134E3C4((uint64_t)v95, (uint64_t)v90, v407, v326, v324, 0, 1, v379);
      swift_bridgeObjectRelease();
      sub_1C1354C14((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for FormatPluginData);
      swift_release();
      sub_1C1354C14(v323, (uint64_t (*)(void))type metadata accessor for FormatSectionDescriptor);
      unint64_t v327 = v424;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v327 = sub_1C0378FC0(v327);
      }
      id v100 = v412;
      int v322 = v425;
      if (v426 >= *(void *)(v327 + 16)) {
        goto LABEL_116;
      }
      unint64_t v424 = v327;
      (*v396)(&v419[v327 + v415], v379, v423);
LABEL_57:
      ((void (*)(char *, char *))v97)(v414, v322);
      uint64_t v240 = v408;
      id v87 = v374;
      uint64_t v241 = v406;
    }
  }
  id v87 = v410;
LABEL_112:
  (*(void (**)(char *, char *, uint64_t))(v352 + 16))(v355, v87, v353);
  (*(void (**)(char *, void, uint64_t))(v354 + 104))(v357, *MEMORY[0x1E4FACAF8], v356);
  type metadata accessor for FormatLayoutSectionDescriptor(0);
  sub_1C134A8EC(&qword_1EB868B00, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
  sub_1C0ABE6B4();
  swift_bridgeObjectRetain();
  sub_1C151A78C();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C134E3A0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C134A97C(a1, a2, a3);
}

uint64_t sub_1C134E3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v46 = a4;
  uint64_t v49 = a3;
  uint64_t v47 = a2;
  uint64_t v55 = a1;
  uint64_t v56 = a8;
  uint64_t v51 = sub_1C151C48C();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v54 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if ((a7 & 1) == 0)
  {
    sub_1C1354BB0(0, &qword_1EB87A730, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBBE00]);
    uint64_t v21 = (int *)(type metadata accessor for FormatOption() - 8);
    unint64_t v22 = (*(unsigned __int8 *)(*(void *)v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v21 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
    uint64_t v23 = (void *)(v20 + v22);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a6;
    *(void *)(v24 + 24) = v19;
    *uint64_t v23 = 0xD000000000000018;
    v23[1] = 0x80000001C1610D40;
    id v23[2] = v24 | 0x3000000000000000;
    uint64_t v23[3] = 1;
    uint64_t v25 = (char *)v23 + v21[9];
    uint64_t v26 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  }
  uint64_t v27 = v8 + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData;
  uint64_t v28 = *(void *)(v27 + *(int *)(type metadata accessor for FormatPluginData() + 32));
  memset(v62, 0, sizeof(v62));
  char v63 = 1;
  *(void *)&long long v59 = a6;
  BYTE8(v59) = a7 & 1;
  sub_1BFF67464(0, &qword_1EB8713C0, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBB718]);
  uint64_t v29 = sub_1C151E6AC();
  uint64_t v30 = v55;
  uint64_t v32 = sub_1C134931C(v55, v46, v19, v20, v28, (uint64_t)v62, v29, v31, 0, 0, 0, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_bridgeObjectRelease();
  *(void *)&v61[0] = 0;
  long long v59 = 0u;
  long long v60 = 0u;
  MEMORY[0x1F4188790](v33);
  uint64_t v40 = v32;
  uint64_t v41 = v48;
  char v42 = 1;
  uint64_t v43 = &v59;
  uint64_t v44 = v49;
  sub_1C1351B48(0, 0, 1, (void (*)(long long *))sub_1C0FC04C0, (uint64_t)(&v45 - 8), (uint64_t)v57);
  swift_bridgeObjectRelease();
  sub_1BFE9E520((uint64_t)&v59, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  long long v59 = v57[0];
  long long v60 = v57[1];
  v61[0] = v58[0];
  *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)v58 + 9);
  sub_1BFE9EFB8(v30, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C1357EE4((uint64_t)&v59);
  sub_1C13488E4((uint64_t)v14, (uint64_t)&v59, (uint64_t)v18);
  sub_1BFE9EFB8((uint64_t)v18, v52, type metadata accessor for FormatLayoutSectionDescriptor);
  uint64_t v34 = *MEMORY[0x1E4FAD538];
  uint64_t v35 = sub_1C151C47C();
  uint64_t v36 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v54, v34, v35);
  uint64_t v37 = (*(uint64_t (**)(char *, void, uint64_t))(v50 + 104))(v36, *MEMORY[0x1E4FAD540], v51);
  uint64_t v38 = *(void *)&v61[0];
  MEMORY[0x1F4188790](v37);
  swift_bridgeObjectRetain();
  sub_1C0185924((void (*)(uint64_t *))sub_1C1357F2C, (uint64_t)&v42, v38);
  sub_1C1357F4C((uint64_t)&v59);
  swift_bridgeObjectRelease();
  sub_1C134A8EC(&qword_1EB868B00, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
  sub_1C0ABE6B4();
  sub_1C151B66C();
  return sub_1C1354C14((uint64_t)v18, type metadata accessor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1C134EA5C()
{
  return sub_1C151B1AC();
}

uint64_t sub_1C134EAD8(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, long long *a12, uint64_t a13, uint64_t a14)
{
  long long v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v21;
  long long v22 = *(_OWORD *)(a1 + 32);
  *(void *)(v14 + 64) = *(void *)(a1 + 48);
  *(_OWORD *)(v14 + 48) = v22;
  sub_1BFC773DC(a2, v14 + 72);
  uint64_t v23 = v14 + *(void *)(*(void *)v14 + 112);
  uint64_t v24 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a3, v24);
  uint64_t v25 = v14 + *(void *)(*(void *)v14 + 120);
  uint64_t v26 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a4, v26);
  *(void *)(v14 + *(void *)(*(void *)v14 + 136)) = a6;
  sub_1BFE9EFB8(a5, v14 + *(void *)(*(void *)v14 + 128), type metadata accessor for FeedLayoutSolverOptions);
  sub_1BFC773DC(a7, v14 + *(void *)(*(void *)v14 + 144));
  *(void *)(v14 + *(void *)(*(void *)v14 + 168)) = a8;
  *(void *)(v14 + *(void *)(*(void *)v14 + 160)) = a9;
  *(unsigned char *)(v14 + *(void *)(*(void *)v14 + 176)) = a10;
  sub_1C1357E7C(a11, v14 + *(void *)(*(void *)v14 + 184), (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFC773DC(a12, v14 + *(void *)(*(void *)v14 + 192));
  uint64_t v27 = (void *)(v14 + *(void *)(*(void *)v14 + 200));
  *uint64_t v27 = a13;
  v27[1] = a14;
  uint64_t v28 = *(void *)a5;
  uint64_t v29 = *(void *)(a5 + 8);
  LODWORD(a8) = *(unsigned __int8 *)(a5 + 16);
  sub_1C1354C14(a5, type metadata accessor for FeedLayoutSolverOptions);
  if (a8 == 1)
  {
    uint64_t v30 = v14 + *(void *)(*(void *)v14 + 152);
    *(void *)uint64_t v30 = 0;
    *(void *)(v30 + 8) = 0;
    if (v28 | v29)
    {
      *(unsigned char *)(v30 + 24) = 0;
      *(void *)(v30 + 16) = 0;
    }
    else
    {
      *(void *)(v30 + 16) = 0;
      *(unsigned char *)(v30 + 24) = 1;
    }
  }
  else
  {
    uint64_t v31 = v14 + *(void *)(*(void *)v14 + 152);
    *(void *)uint64_t v31 = v28;
    *(void *)(v31 + 8) = v29;
    *(void *)(v31 + 16) = 0;
    *(unsigned char *)(v31 + 24) = 0;
  }
  return v14;
}

uint64_t sub_1C134EDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, CGFloat *a3@<X8>)
{
  void (*v103)(long long *__return_ptr, long long *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  long long *v106;
  char v107;
  char v108;
  unint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t *v117;
  void *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  CGFloat v125;
  unsigned char *v126;
  uint64_t v127;
  unint64_t v128;
  char isUniquelyReferenced_nonNull_native;
  double *v130;
  double v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  CGFloat v135;
  CGFloat v136;
  CGFloat v137;
  double Height;
  uint64_t v139;
  uint64_t v140;
  double v141;
  long long v142;
  CGFloat *v143;
  uint64_t result;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  void *v158;
  unsigned char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  double v187;
  double v188;
  double v189;
  double v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t (*v197)(char *, char *, uint64_t *, uint64_t, uint64_t, uint64_t, double, double, double, double);
  uint64_t v198;
  uint64_t v199;
  void *v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  int64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int64_t v208;
  uint64_t v209;
  unsigned char *v210;
  unsigned char *v211;
  unsigned char *v212;
  unsigned char *v213;
  uint64_t v214;
  int64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unsigned char *v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  unint64_t v223;
  BOOL v224;
  uint64_t v225;
  uint64_t v226;
  double *v227;
  double v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  double v232;
  uint64_t v233;
  CGFloat *v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  double v247;
  uint64_t v248;
  char v249;
  uint64_t v250;
  double *v251;
  unsigned char *v252;
  unsigned char *v253;
  double v254;
  uint64_t v255;
  uint64_t v256;
  unsigned char *v257;
  void *v258;
  unsigned char v259[4];
  int v260;
  void *v261;
  uint64_t v262;
  uint64_t v263;
  unsigned char *v264;
  unsigned char *v265;
  unsigned char *v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  void *v272;
  unsigned char *v273;
  unsigned char *v274;
  uint64_t v275;
  void *v276;
  uint64_t v277;
  CGFloat *v278;
  uint64_t v279;
  unsigned char *v280;
  unsigned char *v281;
  uint64_t v282;
  uint64_t v283;
  double *v284;
  unsigned char *v285;
  void *v286;
  unsigned char *v287;
  uint64_t v288;
  unsigned char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  int64_t v295;
  char *v296;
  void *v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  void (*v303)(unsigned char *, unsigned char *, uint64_t);
  unint64_t v304;
  long long v305;
  double v306;
  long long v307;
  void v308[3];
  uint64_t v309;
  uint64_t v310;
  long long v311;
  _OWORD v312[2];
  void (*v313)(void, void, void);
  long long v314;
  long long v315;
  long long v316;
  void (*v317)(void, void, void);
  uint64_t v318;
  unsigned char *v319;
  unsigned __int8 v320;
  void v321[8];
  uint64_t v322;
  CGRect v323;
  CGRect v324;
  CGRect v325;

  uint64_t v6 = v3;
  uint64_t v271 = a2;
  uint64_t v278 = a3;
  uint64_t v8 = sub_1C151A95C();
  uint64_t v268 = *(void *)(v8 - 8);
  uint64_t v269 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v267 = (uint64_t *)&v259[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for FeedItem(0);
  uint64_t v262 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v285 = &v259[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v263 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1F4188790](v263);
  uint64_t v266 = &v259[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  unint64_t v276 = &v259[-v14];
  uint64_t v15 = sub_1C151787C();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v273 = &v259[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v277 = sub_1C1517ADC();
  BOOL v275 = *(void *)(v277 - 8);
  MEMORY[0x1F4188790](v277);
  uint64_t v274 = &v259[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v265 = &v259[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v20);
  uint64_t v280 = &v259[-v21];
  unint64_t v304 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v304);
  double v264 = &v259[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v23);
  uint64_t v281 = &v259[-v24];
  uint64_t v25 = sub_1C151757C();
  uint64_t v306 = *(double *)(v25 - 8);
  *(void *)&char v307 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = &v259[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v289 = &v259[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v288 = sub_1C151772C();
  uint64_t v30 = *(void *)(v288 - 8);
  MEMORY[0x1F4188790](v288);
  uint64_t v32 = &v259[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v33);
  int64_t v287 = &v259[-v34];
  uint64_t v35 = (char *)v6 + *(void *)(*v6 + 120);
  id v299 = a1;
  sub_1C1348724();
  uint64_t v284 = (double *)((char *)v6 + *(void *)(*v6 + 152));
  uint64_t v270 = v35;
  sub_1C151770C();
  uint64_t v286 = v6;
  uint64_t v36 = v6[2];
  swift_retain();
  sub_1C151765C();
  double v38 = v37;
  double v40 = v39;
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v41 = *(void *)(v36 + 24);
  uint64_t v42 = *(void *)(v41 + 16);
  uint64_t v272 = v6 + 2;
  *((void *)&v305 + 1) = v32;
  if (v42 && (unint64_t v43 = sub_1C1052424(v38, v40), (v44 & 1) != 0))
  {
    unint64_t v45 = *(void *)(*(void *)(v41 + 56) + 8 * v43);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    unint64_t v45 = sub_1BFE9C5F8(MEMORY[0x1E4FBC860]);
  }
  type metadata accessor for FormatLayoutSizeSnapshot();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v45;
  sub_1C1517E8C();
  swift_release();
  uint64_t v47 = v286;
  uint64_t v48 = *v286;
  uint64_t v49 = (void *)((char *)v47 + *(void *)(*v47 + 200));
  uint64_t v50 = v49[1];
  *(void *)&uint64_t v305 = *v49;
  uint64_t v51 = *(void (**)(unsigned char *))(*(void *)&v306 + 16);
  uint64_t v298 = (char *)v286 + *(void *)(v48 + 112);
  uint64_t v306 = *(double *)&v51;
  v51(v27);
  uint64_t v279 = v30;
  uint64_t v52 = *((void *)&v305 + 1);
  unint64_t v303 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 16);
  v303(*((unsigned char **)&v305 + 1), v287, v288);
  swift_bridgeObjectRetain();
  uint64_t v53 = v299;
  swift_retain();
  swift_retain();
  uint64_t v54 = v289;
  uint64_t v283 = v46;
  sub_1C1348F84(v305, v50, v53, (uint64_t)v27, v52, v46, (uint64_t)v289);
  uint64_t v55 = v47[12];
  uint64_t v56 = v47[13];
  __swift_project_boxed_opaque_existential_1(v47 + 9, v55);
  (*(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t))(v56 + 16))(&v314, v54, v55, v56);
  uint64_t v57 = *((void *)&v314 + 1);
  if (*((void *)&v314 + 1))
  {
    uint64_t v58 = v314;
    double v59 = *(double *)&v315;
    *((void *)&v305 + 1) = v316;
    uint64_t v306 = *((double *)&v315 + 1);
    unint64_t v304 = (unint64_t)v317;
    *(void *)&uint64_t v305 = *((void *)&v316 + 1);
    uint64_t v60 = v318;
    uint64_t v61 = v319;
    LODWORD(v303) = v320;
    uint64_t v62 = (char *)v47 + *(void *)(*v47 + 160);
    swift_beginAccess();
    uint64_t v63 = *(void *)v62;
    uint64_t v64 = *(void *)(*(void *)v62 + 16);
    *(void *)&char v307 = v58;
    if (v64)
    {
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_1BFEF2D8C(v58, v57);
      if (v66) {
        uint64_t v67 = *(void *)(*(void *)(v63 + 56) + 8 * v65);
      }
      else {
        uint64_t v67 = 0;
      }
      uint64_t v125 = v59;
      uint64_t v126 = v61;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v67 = 0;
      uint64_t v125 = v59;
      uint64_t v126 = v61;
    }
    id v127 = v60;
    swift_endAccess();
    uint64_t v128 = v304;
    if (v67 != -1)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&uint64_t v311 = *(void *)v62;
      *(void *)uint64_t v62 = 0x8000000000000000;
      sub_1BFE9D944(v67 + 1, v307, v57, isUniquelyReferenced_nonNull_native);
      *(void *)uint64_t v62 = v311;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v130 = v284;
      uint64_t v131 = v284[1];
      uint64_t v132 = *((void *)v284 + 2);
      uint64_t v133 = *((unsigned char *)v284 + 24);
      if (v133)
      {
        uint64_t v134 = *(void *)v284;
LABEL_57:
        *(void *)uint64_t v130 = v134;
        v130[1] = v131;
        *((void *)v130 + 2) = v132;
        *((unsigned char *)v130 + 24) = v133;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        LOBYTE(v258) = (_BYTE)v303;
        unint64_t v257 = v126;
        uint64_t v140 = v57;
        uint64_t v141 = v306;
        uint64_t v142 = v305;
        sub_1BFE9EB04(v307, v140);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v143 = v278;
        *uint64_t v278 = v125;
        v143[1] = v141;
        v143[2] = *((CGFloat *)&v142 + 1);
        *((void *)v143 + 3) = v142;
        *((void *)v143 + 4) = v128;
        *((void *)v143 + 5) = v127;
        *((void *)v143 + 6) = v126;
        *((unsigned char *)v143 + 56) = 2;
        sub_1C1354C14((uint64_t)v289, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v279 + 8))(v287, v288);
      }
      uint64_t v136 = *((double *)&v305 + 1);
      uint64_t v135 = v306;
      unint64_t v137 = *(double *)&v305;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v323.origin.CGFloat x = v125;
      v323.origin.CGFloat y = v135;
      v323.size.CGFloat width = v136;
      v323.size.CGFloat height = v137;
      double Height = CGRectGetHeight(v323);
      uint64_t v139 = *(void *)(v128 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v123 = __OFADD__(v132, v139);
      v132 += v139;
      if (!v123)
      {
        uint64_t v134 = 0;
        uint64_t v131 = Height + v131;
        uint64_t v130 = v284;
        goto LABEL_57;
      }
      goto LABEL_98;
    }
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  uint64_t v261 = v47 + 9;
  if (*((unsigned char *)v284 + 24)) {
    uint64_t v68 = 0;
  }
  else {
    uint64_t v68 = *((void *)v284 + 2);
  }
  uint64_t v69 = v281;
  v303(v281, v287, v288);
  uint64_t v70 = (int *)v304;
  (*(void (**)(unsigned char *, char *, void))&v306)(&v69[*(int *)(v304 + 20)], v298, v307);
  uint64_t v71 = *(void *)((char *)v47 + *(void *)(*v47 + 136));
  sub_1BFE9EFB8((uint64_t)v47 + *(void *)(*v47 + 128), (uint64_t)&v69[v70[6]], type metadata accessor for FeedLayoutSolverOptions);
  swift_retain();
  sub_1C15174BC();
  uint64_t v72 = (void *)v299;
  char v73 = *(unsigned char *)(v299 + 144);
  uint64_t v74 = *v47;
  int v75 = *((unsigned __int8 *)v47 + *(void *)(*v47 + 176));
  *(void *)&v69[v70[10]] = v71;
  *(void *)&v69[v70[7]] = v68;
  *(void *)&v69[v70[8]] = v76;
  v69[v70[9]] = v73;
  uint64_t v77 = v70[11];
  unint64_t v260 = v75;
  v69[v77] = v75;
  *(void *)&v69[v70[12]] = v283;
  uint64_t v78 = v72[17];
  uint64_t v291 = *(void *)(v78 + 16);
  if (!v291)
  {
    swift_retain();
    *(double *)&uint64_t v145 = MEMORY[0x1E4FBC868];
    goto LABEL_60;
  }
  uint64_t v79 = (void *)((char *)v47 + *(void *)(v74 + 192));
  uint64_t v296 = (char *)v47 + *(void *)(v74 + 184);
  uint64_t v297 = v79;
  uint64_t v290 = v78 + 32;
  swift_retain();
  BOOL v292 = v78;
  swift_bridgeObjectRetain();
  unint64_t v80 = 0;
  double v81 = MEMORY[0x1E4FBC868];
  while (2)
  {
    if (v80 >= *(void *)(v292 + 16))
    {
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    uint64_t v82 = *(void *)(v290 + (v80 << 6) + 40);
    uint64_t v83 = *(void *)(v82 + 64);
    uint64_t v293 = v80 + 1;
    uint64_t v294 = v82 + 64;
    uint64_t v84 = 1 << *(unsigned char *)(v82 + 32);
    if (v84 < 64) {
      uint64_t v85 = ~(-1 << v84);
    }
    else {
      uint64_t v85 = -1;
    }
    unint64_t v86 = v85 & v83;
    uint64_t v295 = (unint64_t)(v84 + 63) >> 6;
    uint64_t v300 = v82;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; ; uint64_t i = (uint64_t)v303)
    {
      uint64_t v306 = v81;
      if (v86)
      {
        uint64_t v302 = (v86 - 1) & v86;
        unint64_t v303 = (void (*)(unsigned char *, unsigned char *, uint64_t))i;
        unint64_t v92 = __clz(__rbit64(v86)) | (i << 6);
        goto LABEL_38;
      }
      int64_t v93 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      if (v93 >= v295) {
        goto LABEL_14;
      }
      unint64_t v94 = *(void *)(v294 + 8 * v93);
      int64_t v95 = i + 1;
      if (!v94)
      {
        int64_t v95 = i + 2;
        if (i + 2 >= v295) {
          goto LABEL_14;
        }
        unint64_t v94 = *(void *)(v294 + 8 * v95);
        if (!v94)
        {
          int64_t v95 = i + 3;
          if (i + 3 >= v295) {
            goto LABEL_14;
          }
          unint64_t v94 = *(void *)(v294 + 8 * v95);
          if (!v94) {
            break;
          }
        }
      }
LABEL_37:
      uint64_t v302 = (v94 - 1) & v94;
      unint64_t v303 = (void (*)(unsigned char *, unsigned char *, uint64_t))v95;
      unint64_t v92 = __clz(__rbit64(v94)) + (v95 << 6);
LABEL_38:
      uint64_t v97 = 16 * v92;
      uint64_t v98 = (uint64_t *)(*(void *)(v300 + 48) + v97);
      uint64_t v100 = *v98;
      uint64_t v99 = v98[1];
      uint64_t v101 = v297[3];
      uint64_t v102 = v297[4];
      char v307 = *(_OWORD *)(*(void *)(v300 + 56) + v97);
      __swift_project_boxed_opaque_existential_1(v297, v101);
      uint64_t v311 = v307;
      uint64_t v103 = *(void (**)(long long *__return_ptr, long long *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v103(&v314, &v311, v296, v100, v99, v101, v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v304 = *((void *)&v314 + 1);
      uint64_t v104 = v314;
      uint64_t v305 = v315;
      uint64_t v105 = *((void *)&v316 + 1);
      *(void *)&char v307 = v316;
      uint64_t v106 = *(long long **)&v306;
      uint64_t v107 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&uint64_t v311 = v106;
      uint64_t v109 = sub_1BFEF2D8C(v100, v99);
      uint64_t v110 = *((void *)v106 + 2);
      uint64_t v111 = (v108 & 1) == 0;
      uint64_t v112 = v110 + v111;
      if (__OFADD__(v110, v111))
      {
        __break(1u);
        goto LABEL_80;
      }
      uint64_t v113 = v108;
      uint64_t v114 = *((void *)v106 + 3);
      uint64_t v301 = v105;
      if (v114 >= v112)
      {
        if (v107)
        {
          double v81 = *(double *)&v311;
          if (v108) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v106 = &v311;
          sub_1C106F7E0();
          double v81 = *(double *)&v311;
          if (v113) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        sub_1C105BE2C(v112, v107);
        uint64_t v106 = (long long *)v311;
        uint64_t v115 = sub_1BFEF2D8C(v100, v99);
        if ((v113 & 1) != (v116 & 1)) {
          goto LABEL_102;
        }
        uint64_t v109 = v115;
        double v81 = *(double *)&v311;
        if (v113)
        {
LABEL_20:
          uint64_t v88 = (void *)(*(void *)(*(void *)&v81 + 56) + 48 * v109);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v89 = v304;
          *uint64_t v88 = v104;
          v88[1] = v89;
          uint64_t v90 = *((void *)&v305 + 1);
          v88[2] = v305;
          v88[3] = v90;
          uint64_t v91 = v301;
          v88[4] = v307;
          v88[5] = v91;
          goto LABEL_21;
        }
      }
      *(void *)(*(void *)&v81 + 8 * (v109 >> 6) + 64) |= 1 << v109;
      uint64_t v117 = (uint64_t *)(*(void *)(*(void *)&v81 + 48) + 16 * v109);
      *uint64_t v117 = v100;
      v117[1] = v99;
      uint64_t v118 = (void *)(*(void *)(*(void *)&v81 + 56) + 48 * v109);
      uint64_t v119 = v304;
      *uint64_t v118 = v104;
      v118[1] = v119;
      uint64_t v120 = *((void *)&v305 + 1);
      v118[2] = v305;
      v118[3] = v120;
      uint64_t v121 = v301;
      v118[4] = v307;
      v118[5] = v121;
      uint64_t v122 = *(void *)(*(void *)&v81 + 16);
      uint64_t v123 = __OFADD__(v122, 1);
      id v124 = v122 + 1;
      if (v123)
      {
        __break(1u);
        goto LABEL_88;
      }
      *(void *)(*(void *)&v81 + 16) = v124;
      swift_bridgeObjectRetain();
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v72 = (void *)v299;
      unint64_t v86 = v302;
    }
    uint64_t v96 = (char *)(i + 4);
    if (i + 4 < v295)
    {
      unint64_t v94 = *(void *)(v294 + 8 * (void)v96);
      if (!v94)
      {
        while (1)
        {
          int64_t v95 = (int64_t)(v96 + 1);
          if (__OFADD__(v96, 1)) {
            goto LABEL_95;
          }
          if (v95 >= v295) {
            goto LABEL_14;
          }
          unint64_t v94 = *(void *)(v294 + 8 * v95);
          ++v96;
          if (v94) {
            goto LABEL_37;
          }
        }
      }
      int64_t v95 = i + 4;
      goto LABEL_37;
    }
LABEL_14:
    swift_release();
    unint64_t v80 = v293;
    if (v293 != v291) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  *(double *)&uint64_t v145 = v81;
LABEL_60:
  *(void *)&uint64_t v305 = type metadata accessor for FeedGroupRegion();
  *((void *)&v315 + 1) = v305;
  unint64_t v304 = sub_1C134A8EC((unint64_t *)&qword_1EB885A20, (void (*)(uint64_t))type metadata accessor for FeedGroupRegion);
  *(void *)&char v316 = v304;
  *(void *)&uint64_t v314 = v72;
  uint64_t v146 = (void *)((char *)v286 + *(void *)(*v286 + 160));
  swift_beginAccess();
  *((void *)&v305 + 1) = v146;
  uint64_t v147 = *v146;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v148 = (uint64_t)v274;
  sub_1C151752C();
  uint64_t v149 = (uint64_t)v273;
  sub_1C1517AAC();
  *(void *)&char v307 = *(void *)(v275 + 8);
  ((void (*)(uint64_t, uint64_t))v307)(v148, v277);
  LOBYTE(v311) = 2;
  swift_bridgeObjectRetain();
  uint64_t v306 = *(double *)&v145;
  sub_1BFE9F050(&v314, v147, 0, v149, (unsigned __int8 *)&v311, v145, (uint64_t)v280);
  sub_1C151752C();
  uint64_t v150 = v72[10];
  uint64_t v151 = v72[11];
  uint64_t v152 = v72[12];
  uint64_t v153 = v72[13];
  uint64_t v154 = (void *)v72[14];
  *(void *)&uint64_t v314 = v150;
  *((void *)&v314 + 1) = v151;
  *(void *)&uint64_t v315 = v152;
  *((void *)&v315 + 1) = v153;
  *(void *)&char v316 = v154;
  sub_1BFE9EB68(v150);
  double v155 = GroupLayoutInventory.layouts(column:kind:)(v148, (uint64_t *)&v314);
  uint64_t v302 = v151;
  unint64_t v303 = (void (*)(unsigned char *, unsigned char *, uint64_t))v150;
  uint64_t v300 = v153;
  uint64_t v301 = v152;
  double v156 = v286;
  uint64_t v297 = v154;
  sub_1BFE9CBF4(v150);
  ((void (*)(uint64_t, uint64_t))v307)(v148, v277);
  uint64_t v157 = v155;
  uint64_t v158 = v280;
  uint64_t v159 = v281;
  sub_1C13521F8((uint64_t)v289, v155, (uint64_t)v280, (uint64_t)v281, (uint64_t)&v314);
  uint64_t v160 = (char *)v314;
  if ((void)v314)
  {
    uint64_t v311 = v314;
    v312[0] = v315;
    v312[1] = v316;
    uint64_t v313 = v317;
    LODWORD(v307) = 1;
  }
  else
  {
    uint64_t v161 = sub_1C1358734((uint64_t)&v314, (uint64_t)qword_1EB87D000, (uint64_t)&type metadata for FeedLayoutSolverResult, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFF67464);
    MEMORY[0x1F4188790](v161);
    unint64_t v257 = v159;
    unint64_t v258 = v156;
    uint64_t v162 = v282;
    uint64_t v163 = sub_1BFFFB3AC((void (*)(long long *__return_ptr, uint64_t))sub_1C1357FCC, (uint64_t)&v259[-32], v155);
    uint64_t v282 = v162;
    uint64_t v164 = sub_1C13526E4(v163, v158, (uint64_t)v159);
    uint64_t v166 = v165;
    swift_bridgeObjectRelease();
    sub_1C13530F8(v164, (uint64_t)v312);
    LODWORD(v307) = 0;
    *(void *)&uint64_t v311 = v164;
    *((void *)&v311 + 1) = v166;
  }
  sub_1C1358098((uint64_t)v312, (uint64_t)&v314, &qword_1EB878A18, &qword_1EB878A10, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
  if (!*((void *)&v315 + 1))
  {
    sub_1BFE9E520((uint64_t)&v314, &qword_1EB878A18, &qword_1EB878A10, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
    sub_1C0AEFBB4();
    uint64_t v200 = v297;
    uint64_t v201 = v276;
    unint64_t v202 = (uint64_t)v276 + *(int *)(v199 + 80);
    unint64_t v203 = v300;
    uint64_t v204 = *(void *)(v299 + 40);
    uint64_t v298 = *(char **)(v299 + 32);
    uint64_t v295 = v204;
    *unint64_t v276 = v298;
    v201[1] = v204;
    uint64_t v206 = v302;
    uint64_t v205 = (unint64_t)v303;
    v201[2] = v303;
    void v201[3] = v206;
    v201[4] = v301;
    v201[5] = v203;
    v201[6] = v200;
    v201[7] = v157;
    uint64_t v207 = *((void *)&v311 + 1);
    v201[8] = v311;
    v201[9] = v207;
    *((void *)&v305 + 1) = type metadata accessor for GroupLayoutBindingContext;
    sub_1BFE9EFB8((uint64_t)v280, v202, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    swift_storeEnumTagMultiPayload();
    uint64_t v296 = *(char **)((char *)v286 + *(void *)(*v286 + 168));
    sub_1BFE9EB68(v205);
    uint64_t v208 = v295;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151F36C();
    sub_1BFED9E90(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v209 = swift_allocObject();
    *(_OWORD *)(v209 + 16) = xmmword_1C1529AE0;
    *(void *)(v209 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v209 + 64) = sub_1BFE9C558();
    *(void *)(v209 + 32) = v298;
    *(void *)(v209 + 40) = v208;
    swift_bridgeObjectRetain();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v210 = v266;
    sub_1BFE9EFB8((uint64_t)v201, (uint64_t)v266, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
    uint64_t v211 = v265;
    sub_1BFE9EFB8((uint64_t)v280, (uint64_t)v265, *((uint64_t (**)(void))&v305 + 1));
    uint64_t v212 = v281;
    uint64_t v213 = v264;
    sub_1BFE9EFB8((uint64_t)v281, (uint64_t)v264, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    _s13InternalErrorCMa();
    swift_allocObject();
    *((void *)&v305 + 1) = sub_1C12BCF80((uint64_t)v210, (uint64_t)v211, (uint64_t)v213);
    sub_1C12BC734((uint64_t)v212, (uint64_t)&v314);
    uint64_t v106 = (long long *)v299;
    double v38 = *((double *)&v314 + 1);
    CGFloat v4 = *((double *)&v315 + 1);
    double v40 = *(double *)&v315;
    CGFloat v5 = *(double *)&v316;
    uint64_t v99 = (uint64_t)v317;
    uint64_t v214 = *(void *)(v299 + 64);
    char v215 = *(void *)(v214 + 16);
    double v81 = MEMORY[0x1E4FBC860];
    if (v215)
    {
      uint64_t v302 = *((void *)&v316 + 1);
      unint64_t v303 = (void (*)(unsigned char *, unsigned char *, uint64_t))v317;
      *(void *)&uint64_t v314 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1BFE9F020(0, v215, 0);
      double v216 = *(unsigned __int8 *)(v262 + 80);
      uint64_t v301 = v214;
      unint64_t v217 = v214 + ((v216 + 32) & ~v216);
      unint64_t v218 = *(void *)(v262 + 72);
      uint64_t v100 = v314;
      do
      {
        unint64_t v219 = v285;
        sub_1BFE9EFB8(v217, (uint64_t)v285, type metadata accessor for FeedItem);
        unint64_t v220 = swift_allocObject();
        *(void *)(v220 + 16) = FeedItem.identifier.getter();
        *(void *)(v220 + 24) = v221;
        sub_1C1354C14((uint64_t)v219, type metadata accessor for FeedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFE9F020(0, *(void *)(v100 + 16) + 1, 1);
          uint64_t v100 = v314;
        }
        uint64_t v223 = *(void *)(v100 + 16);
        uint64_t v222 = *(void *)(v100 + 24);
        if (v223 >= v222 >> 1)
        {
          sub_1BFE9F020(v222 > 1, v223 + 1, 1);
          uint64_t v100 = v314;
        }
        *(void *)(v100 + 16) = v223 + 1;
        *(void *)(v100 + 8 * v223 + 32) = v220;
        v217 += v218;
        --v215;
      }
      while (v215);
LABEL_80:
      swift_bridgeObjectRelease();
      uint64_t v106 = (long long *)v299;
      uint64_t v99 = (uint64_t)v303;
      double v81 = MEMORY[0x1E4FBC860];
    }
    else
    {
LABEL_88:
      uint64_t v100 = *(void *)&v81;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v235 = (void *)((char *)v286 + *(void *)(*v286 + 144));
    uint64_t v236 = v235[3];
    uint64_t v237 = v235[4];
    uint64_t v306 = COERCE_DOUBLE(__swift_project_boxed_opaque_existential_1(v235, v236));
    *(void *)&char v316 = v304;
    *((void *)&v315 + 1) = v305;
    *(void *)&uint64_t v314 = v106;
    sub_1BFE829C0(0, &qword_1EA1AE5B0, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver.Errors);
    uint64_t v239 = v238;
    unint64_t v304 = sub_1C1357FE8();
    *(void *)&uint64_t v305 = v239;
    uint64_t v240 = (void *)swift_allocError();
    *(double *)uint64_t v241 = v38;
    *(double *)(v241 + 8) = v40;
    *(CGFloat *)(v241 + 16) = v4;
    *(CGFloat *)(v241 + 24) = v5;
    *(void *)(v241 + 32) = v100;
    *(void *)(v241 + 40) = v99;
    *(double *)(v241 + 48) = v81;
    *(unsigned char *)(v241 + 56) = v307;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    double v242 = v267;
    sub_1C13ECB5C((uint64_t)v276, 0, v267);
    uint64_t v243 = v99;
    uint64_t v244 = sub_1C13EEDAC();
    long long v246 = v245;
    (*(void (**)(uint64_t *, uint64_t))(v268 + 8))(v242, v269);
    v308[0] = v240;
    v308[1] = v244;
    v308[2] = v246;
    (*(void (**)(long long *, void *, uint64_t, uint64_t))(v237 + 8))(&v314, v308, v236, v237);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v314);
    long long v247 = v284[1];
    long long v248 = *((void *)v284 + 2);
    long long v249 = *((unsigned char *)v284 + 24);
    if (v249)
    {
      long long v250 = *(void *)v284;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v251 = v284;
      long long v253 = v280;
      long long v252 = v281;
    }
    else
    {
      v325.origin.CGFloat x = v38;
      v325.origin.CGFloat y = v40;
      v325.size.CGFloat width = v4;
      v325.size.CGFloat height = v5;
      uint64_t v254 = CGRectGetHeight(v325);
      unint64_t v255 = *(void *)(v100 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v123 = __OFADD__(v248, v255);
      v248 += v255;
      long long v253 = v280;
      long long v252 = v281;
      if (v123) {
        goto LABEL_101;
      }
      long long v250 = 0;
      long long v247 = v254 + v247;
      long long v251 = v284;
    }
    *(void *)long long v251 = v250;
    v251[1] = v247;
    *((void *)v251 + 2) = v248;
    *((unsigned char *)v251 + 24) = v249;
    swift_allocError();
    *(double *)int v256 = v38;
    *(double *)(v256 + 8) = v40;
    *(CGFloat *)(v256 + 16) = v4;
    *(CGFloat *)(v256 + 24) = v5;
    *(void *)(v256 + 32) = v100;
    *(void *)(v256 + 40) = v243;
    *(void *)(v256 + 48) = MEMORY[0x1E4FBC860];
    *(unsigned char *)(v256 + 56) = v307;
    swift_willThrow();
    swift_release();
    swift_release();
    sub_1C1354C14((uint64_t)v276, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
    sub_1BFEA159C((uint64_t)&v311);
    sub_1C1354C14((uint64_t)v253, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    sub_1C1354C14((uint64_t)v252, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C1354C14((uint64_t)v289, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v279 + 8))(v287, v288);
  }
  swift_bridgeObjectRelease();
  sub_1BFC773DC(&v314, (uint64_t)v308);
  __swift_project_boxed_opaque_existential_1(v308, v309);
  uint64_t v167 = sub_1C151811C();
  uint64_t v169 = v168;
  uint64_t v170 = (uint64_t *)*((void *)&v305 + 1);
  swift_beginAccess();
  uint64_t v171 = *v170;
  uint64_t v172 = *(void *)(*v170 + 16);
  uint64_t v296 = v160;
  if (v172 && (uint64_t v173 = sub_1BFEF2D8C(v167, v169), (v174 & 1) != 0)) {
    uint64_t v175 = *(void *)(*(void *)(v171 + 56) + 8 * v173);
  }
  else {
    uint64_t v175 = 0;
  }
  swift_endAccess();
  if (v175 == -1) {
    goto LABEL_99;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v176 = swift_isUniquelyReferenced_nonNull_native();
  int v322 = *v170;
  *uint64_t v170 = 0x8000000000000000;
  sub_1BFE9D944(v175 + 1, v167, v169, v176);
  *uint64_t v170 = v322;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1BFED9E90(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v177 = swift_allocObject();
  *(_OWORD *)(v177 + 16) = xmmword_1C1527210;
  uint64_t v178 = v299;
  uint64_t v180 = *(void *)(v299 + 32);
  uint64_t v179 = *(void *)(v299 + 40);
  uint64_t v181 = MEMORY[0x1E4FBB1A0];
  *(void *)(v177 + 56) = MEMORY[0x1E4FBB1A0];
  uint64_t v182 = sub_1BFE9C558();
  *(void *)(v177 + 64) = v182;
  *(void *)(v177 + 32) = v180;
  *(void *)(v177 + 40) = v179;
  __swift_project_boxed_opaque_existential_1(v308, v309);
  swift_bridgeObjectRetain();
  uint64_t v183 = sub_1C151811C();
  *(void *)(v177 + 96) = v181;
  *(void *)(v177 + 104) = v182;
  *(void *)(v177 + 72) = v183;
  *(void *)(v177 + 80) = v184;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  int64_t v185 = v309;
  uint64_t v186 = v310;
  __swift_project_boxed_opaque_existential_1(v308, v309);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v186 + 32))(v321, v185, v186);
  uint64_t v187 = *(double *)&v321[1];
  uint64_t v188 = *(double *)&v321[2];
  uint64_t v189 = *(double *)&v321[3];
  uint64_t v190 = *(double *)&v321[4];
  sub_1BFEA0164((uint64_t)v321);
  uint64_t v191 = swift_bridgeObjectRetain();
  uint64_t v192 = sub_1C1355F24(v191, (uint64_t)v321);
  sub_1BFE9E600((uint64_t)v321);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v193 = v321[6];
  sub_1C1358098(v271, (uint64_t)&v314, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  uint64_t v194 = *((void *)&v315 + 1);
  if (*((void *)&v315 + 1))
  {
    uint64_t v195 = v316;
    __swift_project_boxed_opaque_existential_1(&v314, *((uint64_t *)&v315 + 1));
    LOBYTE(v322) = v260;
    uint64_t v196 = *(void *)(v178 + 256);
    uint64_t v197 = *(uint64_t (**)(char *, char *, uint64_t *, uint64_t, uint64_t, uint64_t, double, double, double, double))(v195 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v198 = v197(v270, v298, &v322, v196, v194, v195, v187, v188, v189, v190);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v314);
    sub_1BFE9E600((uint64_t)v321);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFE9E520((uint64_t)&v314, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
    sub_1BFE9E600((uint64_t)v321);
    uint64_t v198 = MEMORY[0x1E4FBC860];
  }
  uint64_t v224 = v296 == 0;
  uint64_t v225 = v286[12];
  uint64_t v226 = v286[13];
  __swift_project_boxed_opaque_existential_1(v261, v225);
  *(double *)&uint64_t v314 = v187;
  *((double *)&v314 + 1) = v188;
  *(double *)&uint64_t v315 = v189;
  *((double *)&v315 + 1) = v190;
  *(void *)&char v316 = v192;
  *((void *)&v316 + 1) = v193;
  uint64_t v317 = (void (*)(void, void, void))v198;
  LOBYTE(v318) = v307;
  (*(void (**)(unsigned char *, void *, long long *, BOOL, uint64_t, uint64_t))(v226 + 32))(v289, v308, &v314, v224, v225, v226);
  double v227 = v284;
  uint64_t v228 = v284[1];
  unint64_t v229 = *((void *)v284 + 2);
  uint64_t v230 = *((unsigned char *)v284 + 24);
  if (v230)
  {
    uint64_t v231 = *(void *)v284;
    swift_release();
    goto LABEL_86;
  }
  v324.origin.CGFloat x = v187;
  v324.origin.CGFloat y = v188;
  v324.size.CGFloat width = v189;
  v324.size.CGFloat height = v190;
  uint64_t v232 = CGRectGetHeight(v324);
  unsigned int v233 = *(void *)(v192 + 16);
  swift_release();
  uint64_t v123 = __OFADD__(v229, v233);
  v229 += v233;
  if (v123) {
    goto LABEL_100;
  }
  uint64_t v231 = 0;
  uint64_t v228 = v232 + v228;
  double v227 = v284;
LABEL_86:
  sub_1BFEA159C((uint64_t)&v311);
  sub_1C1354C14((uint64_t)v280, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1C1354C14((uint64_t)v281, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1C1354C14((uint64_t)v289, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
  (*(void (**)(unsigned char *, uint64_t))(v279 + 8))(v287, v288);
  *(void *)double v227 = v231;
  v227[1] = v228;
  *((void *)v227 + 2) = v229;
  *((unsigned char *)v227 + 24) = v230;
  uint64_t v234 = v278;
  *uint64_t v278 = v187;
  v234[1] = v188;
  v234[2] = v189;
  v234[3] = v190;
  *((void *)v234 + 4) = v192;
  *((void *)v234 + 5) = v193;
  *((void *)v234 + 6) = v198;
  *((unsigned char *)v234 + 56) = v307;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v308);
}

uint64_t sub_1C1350BC8@<X0>(unint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, double *a4@<X8>)
{
  uint64_t v8 = sub_1C151757C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1C151772C();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v58 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v55 = a1;
  uint64_t v12 = sub_1C13512AC(a1);
  uint64_t v13 = v12;
  uint64_t v14 = v12[2];
  uint64_t v53 = a4;
  uint64_t v56 = v9;
  uint64_t v57 = v8;
  uint64_t v54 = a2;
  if (v14)
  {
    uint64_t v15 = (double *)(v12 + 10);
    double width = 0.0;
    uint64_t v17 = v14;
    double height = 0.0;
    double x = 0.0;
    double y = 0.0;
    do
    {
      CGFloat v22 = *(v15 - 6);
      CGFloat v21 = *(v15 - 5);
      CGFloat v24 = *(v15 - 4);
      CGFloat v23 = *(v15 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70.origin.double x = 0.0;
      v70.origin.double y = 0.0;
      v70.size.double width = 0.0;
      v70.size.double height = 0.0;
      v68.origin.double x = x;
      v68.origin.double y = y;
      v68.size.double width = width;
      v68.size.double height = height;
      if (CGRectEqualToRect(v68, v70))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double x = v22;
        double y = v21;
        double width = v24;
        double height = v23;
      }
      else
      {
        v66.origin.double x = x;
        v66.origin.double y = y;
        v66.size.double width = width;
        v66.size.double height = height;
        v69.origin.double x = v22;
        v69.origin.double y = v21;
        v69.size.double width = v24;
        v69.size.double height = v23;
        CGRect v67 = CGRectUnion(v66, v69);
        double x = v67.origin.x;
        double y = v67.origin.y;
        double width = v67.size.width;
        double height = v67.size.height;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 += 8;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRetain();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    uint64_t v26 = 64;
    uint64_t v27 = v14;
    do
    {
      v63[0] = v25;
      swift_bridgeObjectRetain();
      uint64_t v28 = swift_bridgeObjectRetain();
      sub_1BFE5DBDC(v28);
      swift_bridgeObjectRelease();
      uint64_t v25 = v63[0];
      v26 += 64;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t v30 = 72;
    uint64_t v31 = v14;
    uint64_t v9 = v56;
    do
    {
      v63[0] = v29;
      swift_bridgeObjectRetain();
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_1BFE5DBB0(v32);
      swift_bridgeObjectRelease();
      uint64_t v29 = v63[0];
      v30 += 64;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v8 = v57;
  }
  else
  {
    double x = 0.0;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t v25 = MEMORY[0x1E4FBC860];
    double y = 0.0;
    double width = 0.0;
    double height = 0.0;
  }
  sub_1C1358098(v54, (uint64_t)v63, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
  uint64_t v33 = v64;
  unint64_t v34 = v55;
  if (!v64)
  {
    sub_1BFE9E520((uint64_t)v63, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
    uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
    if (v14) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  uint64_t v52 = v65;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(v63, v64);
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, a3 + *(void *)(*(void *)a3 + 120), v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v60, a3 + *(void *)(*(void *)a3 + 112), v8);
  char v62 = *(unsigned char *)(a3 + *(void *)(*(void *)a3 + 176));
  if (v34 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v36 = result;
  }
  else
  {
    uint64_t v36 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v54 = v33;
  if (!v36)
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC870];
    goto LABEL_28;
  }
  if (v36 >= 1)
  {
    uint64_t v51 = v35;
    if ((v34 & 0xC000000000000001) != 0)
    {
      uint64_t v38 = 0;
      uint64_t v33 = MEMORY[0x1E4FBC870];
      do
      {
        MEMORY[0x1C18C7CB0](v38++, v34);
        swift_bridgeObjectRetain();
        uint64_t v39 = swift_bridgeObjectRetain();
        uint64_t v33 = sub_1BFEF3988(v39, v33);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      while (v36 != v38);
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v33 = MEMORY[0x1E4FBC870];
      do
      {
        ++v40;
        swift_bridgeObjectRetain();
        uint64_t v41 = swift_bridgeObjectRetain();
        uint64_t v33 = sub_1BFEF3988(v41, v33);
        swift_bridgeObjectRelease();
      }
      while (v36 != v40);
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v56;
    uint64_t v8 = v57;
LABEL_28:
    unint64_t v34 = (unint64_t)v58;
    uint64_t v42 = v60;
    uint64_t v35 = (void *)(*(uint64_t (**)(char *, char *, char *, uint64_t, uint64_t, double, double, double, double))(v52 + 8))(v58, v60, &v62, v33, v54, x, y, width, height);
    swift_bridgeObjectRelease();
    unint64_t v43 = *(void (**)(char *, uint64_t))(v9 + 8);
    v9 += 8;
    v43(v42, v8);
    (*(void (**)(unint64_t, uint64_t))(v59 + 8))(v34, v61);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    if (v14)
    {
LABEL_29:
      char v44 = (unsigned __int8 *)(v13 + 11);
      sub_1BFE5E624();
      LOBYTE(v8) = 2;
      uint64_t v45 = 1;
      while (1)
      {
        int v47 = *v44;
        v44 += 64;
        int v46 = v47;
        BOOL v48 = v47 == 1 || v8 == 1;
        unsigned int v49 = v48 ? 1 : 2;
        uint64_t v8 = v46 ? v49 : 0;
        if (v14 == v45) {
          goto LABEL_47;
        }
        if (__OFADD__(v45, 1))
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        ++v45;
        if (!v46)
        {
          while (v14 != v45)
          {
            if (__OFADD__(v45, 1)) {
              goto LABEL_48;
            }
            ++v45;
          }
          LOBYTE(v8) = 0;
          goto LABEL_47;
        }
      }
    }
LABEL_23:
    LOBYTE(v8) = 2;
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v50 = v53;
    *uint64_t v53 = x;
    v50[1] = y;
    v50[2] = width;
    v50[3] = height;
    *((void *)v50 + 4) = v25;
    *((void *)v50 + 5) = v29;
    *((void *)v50 + 6) = v35;
    *((unsigned char *)v50 + 56) = v8;
    return result;
  }
  __break(1u);
  return result;
}

void *sub_1C13512AC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v2 - 8);
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v21 = a1 & 0xC000000000000001;
      unint64_t v20 = a1;
      CGFloat v4 = (void *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v6 = i - 4;
        if (v21)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](i - 4, v20);
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(v20 + 8 * i);
          swift_retain();
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_16:
            __break(1u);
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v24 = 0;
        memset(v23, 0, sizeof(v23));
        swift_retain();
        sub_1C134EDF0(v7, (uint64_t)v23, v25);
        swift_release();
        sub_1BFE9E520((uint64_t)v23, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
        CGFloat v9 = v25[0];
        CGFloat v10 = v25[1];
        CGFloat v11 = v25[2];
        CGFloat v12 = v25[3];
        long long v22 = v26;
        a1 = v27;
        char v13 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          CGFloat v4 = sub_1BFE5E610(0, v4[2] + 1, 1, v4);
        }
        uint64_t v14 = v4;
        unint64_t v15 = v4[2];
        uint64_t v16 = v14;
        unint64_t v17 = v14[3];
        if (v15 >= v17 >> 1) {
          uint64_t v16 = sub_1BFE5E610((void *)(v17 > 1), v15 + 1, 1, v16);
        }
        _OWORD v16[2] = v15 + 1;
        uint64_t v18 = (CGFloat *)&v16[8 * v15];
        CGFloat v4 = v16;
        v18[4] = v9;
        v18[5] = v10;
        v18[6] = v11;
        v18[7] = v12;
        *((_OWORD *)v18 + 4) = v22;
        *((void *)v18 + 10) = a1;
        *((unsigned char *)v18 + 88) = v13;
        swift_release();
        if (v8 == v3)
        {
          swift_bridgeObjectRelease();
          return v4;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1351B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void (*a4)(long long *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v54 = a5;
  unint64_t v55 = a4;
  int v44 = a3;
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v53 = a6;
  uint64_t v52 = *(void *)v6;
  uint64_t v8 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v51 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v49 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions;
  uint64_t v48 = MEMORY[0x1E4FBB718];
  sub_1C1354BB0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  CGFloat v12 = (char *)&v43 - v11;
  uint64_t v13 = type metadata accessor for FeedLayoutSolverOptions(0);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v43 = (uint64_t)&v43 - v17;
  uint64_t v19 = sub_1C151772C();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  long long v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v47 = v22;
  uint64_t v23 = sub_1C151757C();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  long long v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v26;
  sub_1C0668294((uint64_t)(v7 + 16), (uint64_t)v65);
  sub_1BFC66384((uint64_t)(v7 + 72), (uint64_t)v64);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v26, &v7[*(void *)(*(void *)v7 + 112)], v23);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, &v7[*(void *)(*(void *)v7 + 120)], v19);
  sub_1BFE9EFB8((uint64_t)&v7[*(void *)(*(void *)v7 + 128)], (uint64_t)v15, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v27 = v45;
  if (v44) {
    uint64_t v27 = 0;
  }
  uint64_t v28 = v46;
  if (v44) {
    uint64_t v28 = 0;
  }
  *(void *)&long long v58 = v28;
  *((void *)&v58 + 1) = v27;
  __int16 v59 = 0;
  char v63 = 0;
  unsigned __int16 v62 = 2;
  unsigned __int16 v61 = 2;
  unsigned __int16 v60 = 2;
  v57[0] = 2;
  uint64_t v29 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
  *(void *)&v56[0] = 0;
  BYTE8(v56[0]) = 1;
  FeedLayoutSolverOptions.with(cursorTracking:headlineOptions:categoryOptions:coverOptions:issueStripOptions:pluginOptions:traits:)((uint64_t *)&v58, &v62, &v61, &v60, v57, (uint64_t)v12, (uint64_t)v56, (uint64_t)v18);
  sub_1C1358734((uint64_t)v12, (uint64_t)&qword_1EB890DB0, (uint64_t)v49, v48, (uint64_t (*)(void))sub_1C1354BB0);
  sub_1C1354C14((uint64_t)v15, type metadata accessor for FeedLayoutSolverOptions);
  uint64_t v30 = *(void *)&v7[*(void *)(*(void *)v7 + 136)];
  sub_1BFC66384((uint64_t)&v7[*(void *)(*(void *)v7 + 144)], (uint64_t)&v58);
  uint64_t v31 = *(void **)&v7[*(void *)(*(void *)v7 + 168)];
  uint64_t v32 = (uint64_t *)&v7[*(void *)(*(void *)v7 + 160)];
  swift_beginAccess();
  uint64_t v33 = *v32;
  char v34 = v7[*(void *)(*(void *)v7 + 176)];
  uint64_t v35 = v51;
  sub_1BFE9EFB8((uint64_t)&v7[*(void *)(*(void *)v7 + 184)], v51, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFC66384((uint64_t)&v7[*(void *)(*(void *)v7 + 192)], (uint64_t)v56);
  uint64_t v36 = (uint64_t *)&v7[*(void *)(*(void *)v7 + 200)];
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  swift_allocObject();
  swift_retain();
  id v39 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v64[0] = sub_1C134EAD8((uint64_t)v65, v64, (uint64_t)v50, (uint64_t)v47, v43, v30, &v58, (uint64_t)v39, v33, v34, v35, v56, v38, v37);
  v55(v64);
  uint64_t v40 = (uint64_t *)(*(void *)&v64[0] + *(void *)(**(void **)&v64[0] + 160));
  swift_beginAccess();
  uint64_t v41 = *v40;
  swift_bridgeObjectRetain();
  swift_release();
  *uint64_t v32 = v41;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13521F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v6[12];
  uint64_t v16 = v6[13];
  __swift_project_boxed_opaque_existential_1(v6 + 9, v15);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(a1, v15, v16);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v38 = a4;
    *(void *)&long long v39 = v14;
    uint64_t v20 = a3;
    uint64_t v21 = *(void *)(a2 + 16);
    if (v21)
    {
      uint64_t v22 = result;
      uint64_t v23 = a2 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BFC66384(v23, (uint64_t)&v40);
        __swift_project_boxed_opaque_existential_1(&v40, v41);
        if (sub_1C151811C() == v22 && v19 == v24) {
          break;
        }
        char v26 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v26) {
          goto LABEL_13;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
        v23 += 40;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      sub_1BFC773DC(&v40, (uint64_t)&v42);
    }
    else
    {
LABEL_11:
      uint64_t v44 = 0;
      long long v42 = 0u;
      long long v43 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = v20;
    uint64_t v28 = v39;
    if (*((void *)&v43 + 1))
    {
      sub_1BFC773DC(&v42, (uint64_t)v45);
      sub_1BFED9E90(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_allocObject();
      long long v39 = xmmword_1C1529AE0;
      *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v30 = sub_1C151811C();
      uint64_t v32 = v31;
      *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v29 + 64) = sub_1BFE9C558();
      *(void *)(v29 + 32) = v30;
      *(void *)(v29 + 40) = v32;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      sub_1BFE9EFB8(v27, v28, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t v33 = v46;
      uint64_t v34 = v47;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 48))(&v42, v28, v38, v33, v34);
      sub_1BFED9E90(0, (unint64_t *)&qword_1EB87A850, &qword_1EB878A10, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v39;
      sub_1BFC66384((uint64_t)&v42, v35 + 32);
      sub_1C1354C14(v28, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      sub_1BFC773DC(&v42, a5 + 16);
      uint64_t v36 = MEMORY[0x1E4FBC860];
      *(void *)a5 = v35;
      *(void *)(a5 + 8) = v36;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    }
    uint64_t result = sub_1BFE9E520((uint64_t)&v42, &qword_1EB8779F8, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType);
  }
  *(void *)(a5 + 48) = 0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
  return result;
}

uint64_t sub_1C13526E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v80 = a3;
  uint64_t v90 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v6);
  uint64_t v81 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[2];
  uint64_t v82 = a2;
  if (v8)
  {
    *(void *)&long long v77 = v3;
    uint64_t v78 = v6;
    uint64_t v9 = (uint64_t)(a1 + 4);
    uint64_t v76 = a1;
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
    long long v79 = xmmword_1C1529AE0;
    while (1)
    {
      sub_1BFC66384(v9, (uint64_t)&v84);
      uint64_t v12 = v85;
      uint64_t v13 = v86;
      __swift_project_boxed_opaque_existential_1(&v84, v85);
      (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v13 + 32))(v87, v12, v13);
      if (v10[2])
      {
        uint64_t v14 = sub_1BFFFC6AC(v87[0]);
        uint64_t v15 = MEMORY[0x1E4FBC860];
        if (v16)
        {
          uint64_t v15 = *(void *)(v10[7] + 8 * v14);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v15 = MEMORY[0x1E4FBC860];
      }
      uint64_t v18 = v85;
      uint64_t v17 = v86;
      __swift_project_boxed_opaque_existential_1(&v84, v85);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v17 + 32))(v83, v18, v17);
      uint64_t v19 = LOBYTE(v83[0]);
      sub_1BFED9E90(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v79;
      sub_1BFC66384((uint64_t)&v84, inited + 32);
      *(void *)id v87 = v15;
      sub_1BFFFCC10(inited);
      uint64_t v21 = *(void *)v87;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)id v87 = v10;
      unint64_t v24 = sub_1BFFFC6AC(v19);
      uint64_t v25 = v10[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        goto LABEL_43;
      }
      char v28 = v23;
      if (v10[3] >= v27)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v10 = *(void **)v87;
          if ((v23 & 1) == 0) {
            goto LABEL_16;
          }
        }
        else
        {
          sub_1C1073ABC();
          uint64_t v10 = *(void **)v87;
          if ((v28 & 1) == 0) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        sub_1BFFFD34C(v27, isUniquelyReferenced_nonNull_native);
        uint64_t v29 = sub_1BFFFC6AC(v19);
        if ((v28 & 1) != (v30 & 1))
        {
          uint64_t result = sub_1C1520CFC();
          __break(1u);
          return result;
        }
        unint64_t v24 = v29;
        uint64_t v10 = *(void **)v87;
        if ((v28 & 1) == 0)
        {
LABEL_16:
          v10[(v24 >> 6) + 8] |= 1 << v24;
          *(unsigned char *)(v10[6] + v24) = v19;
          *(void *)(v10[7] + 8 * v24) = v21;
          uint64_t v31 = v10[2];
          BOOL v32 = __OFADD__(v31, 1);
          uint64_t v33 = v31 + 1;
          if (v32) {
            goto LABEL_44;
          }
          void v10[2] = v33;
          goto LABEL_4;
        }
      }
      uint64_t v11 = v10[7];
      swift_bridgeObjectRelease();
      *(void *)(v11 + 8 * v24) = v21;
LABEL_4:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
      v9 += 40;
      --v8;
      a2 = v82;
      if (!v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v78;
        uint64_t v3 = v77;
        goto LABEL_22;
      }
    }
  }
  uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
LABEL_22:
  uint64_t v34 = *(void *)(v3 + *(void *)(*(void *)v3 + 168));
  sub_1BFED9E90(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v78 = v35;
  uint64_t v36 = swift_allocObject();
  long long v77 = xmmword_1C152C7F0;
  *(_OWORD *)(v36 + 16) = xmmword_1C152C7F0;
  uint64_t v37 = a2[4];
  uint64_t v76 = a2 + 1;
  __swift_project_boxed_opaque_existential_1(a2 + 1, v37);
  uint64_t v38 = sub_1C151811C();
  uint64_t v40 = v39;
  *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v41 = sub_1BFE9C558();
  *(void *)(v36 + 64) = v41;
  *(void *)(v36 + 32) = v38;
  *(void *)(v36 + 40) = v40;
  uint64_t v42 = *(void *)(*(void *)((char *)a2 + *(int *)(v6 + 56)) + 16);
  uint64_t v43 = MEMORY[0x1E4FBB550];
  uint64_t v44 = MEMORY[0x1E4FBB5C8];
  *(void *)(v36 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v36 + 104) = v44;
  *(void *)(v36 + 72) = v42;
  uint64_t v45 = *(void *)(a2[8] + 16);
  *(void *)(v36 + 136) = v43;
  *(void *)(v36 + 144) = v44;
  *(void *)(v36 + 112) = v45;
  sub_1C151F38C();
  *(void *)&long long v79 = v34;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  unint64_t v46 = 0;
  uint64_t v47 = v81;
  uint64_t v72 = v10;
  while (1)
  {
    if (v46 >= qword_1F1B8A690)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
    }
    if (v10[2])
    {
      uint64_t v48 = sub_1BFFFC6AC(*((unsigned __int8 *)&unk_1F1B8A680 + v46 + 32));
      if (v49) {
        break;
      }
    }
LABEL_23:
    if (++v46 == 4)
    {
      CGRect v69 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_41;
    }
  }
  unint64_t v74 = v46;
  uint64_t v50 = *(void *)(v10[7] + 8 * v48);
  uint64_t v51 = *(void *)(v50 + 16);
  if (v51)
  {
    uint64_t v52 = v50 + 32;
    uint64_t v73 = v50;
    swift_bridgeObjectRetain();
    int v75 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1BFC66384(v52, (uint64_t)v87);
      sub_1BFE9EFB8((uint64_t)a2, v47, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t v54 = v88;
      uint64_t v53 = v89;
      __swift_project_boxed_opaque_existential_1(v87, v88);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 48))(&v84, v47, v80, v54, v53);
      sub_1BFC66384((uint64_t)&v84, (uint64_t)v83);
      unint64_t v55 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v55 = sub_1BFFFCC38(0, v55[2] + 1, 1, v55);
      }
      unint64_t v57 = v55[2];
      unint64_t v56 = v55[3];
      if (v57 >= v56 >> 1) {
        unint64_t v55 = sub_1BFFFCC38((void *)(v56 > 1), v57 + 1, 1, v55);
      }
      v55[2] = v57 + 1;
      int v75 = v55;
      sub_1BFC773DC(v83, (uint64_t)&v55[5 * v57 + 4]);
      uint64_t v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = v77;
      __swift_project_boxed_opaque_existential_1(v76, v82[4]);
      uint64_t v59 = sub_1C151811C();
      uint64_t v60 = MEMORY[0x1E4FBB1A0];
      *(void *)(v58 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v58 + 64) = v41;
      *(void *)(v58 + 32) = v59;
      *(void *)(v58 + 40) = v61;
      uint64_t v63 = v85;
      uint64_t v62 = v86;
      __swift_project_boxed_opaque_existential_1(&v84, v85);
      uint64_t v64 = v63;
      a2 = v82;
      uint64_t v65 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v64, v62) + 16);
      swift_bridgeObjectRelease();
      *(void *)(v58 + 96) = MEMORY[0x1E4FBB550];
      *(void *)(v58 + 104) = MEMORY[0x1E4FBB5C8];
      *(void *)(v58 + 72) = v65;
      __swift_project_boxed_opaque_existential_1(v87, v88);
      uint64_t v66 = sub_1C151811C();
      *(void *)(v58 + 136) = v60;
      *(void *)(v58 + 144) = v41;
      *(void *)(v58 + 112) = v66;
      *(void *)(v58 + 120) = v67;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      uint64_t v47 = v81;
      sub_1C1354C14(v81, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
      v52 += 40;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
    uint64_t v10 = v72;
    CGRect v68 = v75;
  }
  else
  {
    CGRect v68 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v46 = v74;
  if (!v68[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  CGRect v69 = v68;
LABEL_41:
  swift_bridgeObjectRelease();
  return (uint64_t)v69;
}

uint64_t sub_1C13530F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) == 1) {
    return sub_1BFC66384(a1 + 32, a2);
  }
  sub_1BFC845BC(0, &qword_1EB878A10);
  CGFloat v4 = (void *)sub_1C151EC0C();
  sub_1BFFFAA20((uint64_t)v4, v4);
  swift_bridgeObjectRelease();
  CGFloat v5 = (void *)sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1BFDF87FC(v6, v5);
  swift_bridgeObjectRelease_n();
  uint64_t v7 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 16))
  {
    sub_1BFC66384(v7 + 32, (uint64_t)v8);
  }
  else
  {
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  swift_bridgeObjectRelease();
  return sub_1C13582B0((uint64_t)v8, a2, &qword_1EB878A18, &qword_1EB878A10, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
}

uint64_t sub_1C13532B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1BFFFB724(a2, v7, v8);
  if (!v3) {
    return sub_1BFC66384((uint64_t)a1, a3);
  }
  sub_1BFED9E90(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C151811C();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1BFE9C558();
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v12;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v9 + 96) = v13;
  *(void *)(v9 + 104) = v14;
  *(void *)(v9 + 72) = 0;
  *(void *)(v9 + 80) = 0xE000000000000000;
  sub_1C151F38C();
  sub_1C15197BC();

  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + 32) = 0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_1C1353490(void *a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = sub_1C151811C();
  uint64_t v5 = v4;
  uint64_t v6 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 160));
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1BFEF2D8C(v3, v5), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v10;
}

BOOL sub_1C1353554(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedHeadline(0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_1C13535BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1C13589B8(a1, (uint64_t)&v9 - v5, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result != 1) {
    return sub_1C1357E7C((uint64_t)v6, a2, type metadata accessor for FeedHeadline);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C13536E8()
{
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v31 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v30 = (char *)&v23 - v3;
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v29 = (uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v28 = (char *)&v23 - v7;
  sub_1C1358CD4();
  uint64_t v27 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FC020C();
  sub_1C134A8EC(&qword_1EA1AE610, (void (*)(uint64_t))sub_1C0FC020C);
  sub_1C151F09C();
  uint64_t v11 = v33[0];
  uint64_t v34 = v33[0];
  sub_1C151F0EC();
  uint64_t v12 = v33[0];
  uint64_t v26 = v0;
  sub_1BFE9EFB8(v0, (uint64_t)v10, (uint64_t (*)(void))sub_1C1358CD4);
  if (v11 == v12)
  {
LABEL_5:
    sub_1C1354C14((uint64_t)v10, (uint64_t (*)(void))sub_1C1358CD4);
  }
  else
  {
    sub_1C1358D68(0);
    unint64_t v24 = (void (**)(char *))(v2 + 16);
    uint64_t v25 = v13;
    char v23 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v14 = v31;
    uint64_t v15 = (uint64_t)v28;
    while (1)
    {
      BOOL v32 = *(uint64_t (**)(uint64_t))&v10[*(int *)(v27 + 36)];
      v33[4] = v11;
      char v16 = *(void (**)(char *))&v10[*(int *)(v25 + 44)];
      swift_retain();
      uint64_t v17 = sub_1C151F19C();
      uint64_t v18 = v30;
      (*v24)(v30);
      ((void (*)(void *, void))v17)(v33, 0);
      v16(v18);
      (*v23)(v18, v14);
      uint64_t v19 = v29;
      sub_1C13586B4(v15, v29, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
      sub_1C1354C14((uint64_t)v10, (uint64_t (*)(void))sub_1C1358CD4);
      LOBYTE(v17) = v32(v19);
      swift_release();
      sub_1C1358734(v19, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
      if (v17) {
        break;
      }
      uint64_t v20 = v26;
      sub_1C151F0FC();
      uint64_t v11 = v34;
      sub_1C151F0EC();
      uint64_t v21 = v33[0];
      sub_1BFE9EFB8(v20, (uint64_t)v10, (uint64_t (*)(void))sub_1C1358CD4);
      if (v11 == v21) {
        goto LABEL_5;
      }
    }
  }
  return v34;
}

uint64_t sub_1C1353B54()
{
  void (*v11)(void *__return_ptr, char *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void (**v18)(char *, uint64_t);
  void (**v19)(char *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(unsigned char *);
  unsigned char v26[144];
  void v27[19];
  unsigned char v28[144];
  void v29[18];
  uint64_t v30;

  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  unint64_t v24 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v23 = (char *)&v17 - v3;
  sub_1C1358F58();
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0FC020C();
  sub_1C134A8EC(&qword_1EA1AE610, (void (*)(uint64_t))sub_1C0FC020C);
  sub_1C151F09C();
  uint64_t v7 = v29[0];
  char v30 = v29[0];
  sub_1C151F0EC();
  uint64_t v8 = v29[0];
  uint64_t v21 = v0;
  sub_1BFE9EFB8(v0, (uint64_t)v6, (uint64_t (*)(void))sub_1C1358F58);
  if (v7 == v8)
  {
LABEL_5:
    sub_1C1354C14((uint64_t)v6, (uint64_t (*)(void))sub_1C1358F58);
  }
  else
  {
    sub_1C1358FEC(0);
    uint64_t v19 = (void (**)(char *))(v2 + 16);
    uint64_t v20 = v9;
    uint64_t v18 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v10 = v23;
    while (1)
    {
      uint64_t v25 = *(uint64_t (**)(unsigned char *))&v6[*(int *)(v22 + 36)];
      v27[18] = v7;
      uint64_t v11 = *(void (**)(void *__return_ptr, char *))&v6[*(int *)(v20 + 44)];
      swift_retain();
      uint64_t v12 = sub_1C151F19C();
      uint64_t v13 = v24;
      (*v19)(v10);
      ((void (*)(void *, void))v12)(v27, 0);
      v11(v27, v10);
      (*v18)(v10, v13);
      sub_1C1358334((uint64_t)v27, (uint64_t)v28, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
      sub_1C1358334((uint64_t)v28, (uint64_t)v26, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
      sub_1C1354C14((uint64_t)v6, (uint64_t (*)(void))sub_1C1358F58);
      LOBYTE(v12) = v25(v26);
      swift_release();
      sub_1C1358334((uint64_t)v26, (uint64_t)v29, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
      sub_1C01B3B54((uint64_t)v29);
      if (v12) {
        break;
      }
      uint64_t v14 = v21;
      sub_1C151F0FC();
      uint64_t v7 = v30;
      sub_1C151F0EC();
      uint64_t v15 = v29[0];
      sub_1BFE9EFB8(v14, (uint64_t)v6, (uint64_t (*)(void))sub_1C1358F58);
      if (v7 == v15) {
        goto LABEL_5;
      }
    }
  }
  return v30;
}

uint64_t sub_1C1353F0C()
{
  sub_1C00BE41C();
  uint64_t v31 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v30 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1354BB0(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v29 = (uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v28 = (char *)&v23 - v7;
  sub_1C13585A4();
  uint64_t v27 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE4B0();
  sub_1C134A8EC((unint64_t *)&unk_1EB863DB0, (void (*)(uint64_t))sub_1C00BE4B0);
  sub_1C151F09C();
  uint64_t v11 = v33[0];
  uint64_t v34 = v33[0];
  sub_1C151F0EC();
  uint64_t v12 = v33[0];
  uint64_t v26 = v0;
  sub_1BFE9EFB8(v0, (uint64_t)v10, (uint64_t (*)(void))sub_1C13585A4);
  if (v11 == v12)
  {
LABEL_5:
    sub_1C1354C14((uint64_t)v10, (uint64_t (*)(void))sub_1C13585A4);
  }
  else
  {
    sub_1C1358638(0);
    unint64_t v24 = (void (**)(char *))(v2 + 16);
    uint64_t v25 = v13;
    char v23 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v14 = v31;
    uint64_t v15 = (uint64_t)v28;
    while (1)
    {
      BOOL v32 = *(uint64_t (**)(uint64_t))&v10[*(int *)(v27 + 36)];
      v33[4] = v11;
      char v16 = *(void (**)(char *))&v10[*(int *)(v25 + 44)];
      swift_retain();
      uint64_t v17 = sub_1C151F19C();
      uint64_t v18 = v30;
      (*v24)(v30);
      ((void (*)(void *, void))v17)(v33, 0);
      v16(v18);
      (*v23)(v18, v14);
      uint64_t v19 = v29;
      sub_1C13586B4(v15, v29, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
      sub_1C1354C14((uint64_t)v10, (uint64_t (*)(void))sub_1C13585A4);
      LOBYTE(v17) = v32(v19);
      swift_release();
      sub_1C1358734(v19, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1354BB0);
      if (v17) {
        break;
      }
      uint64_t v20 = v26;
      sub_1C151F0FC();
      uint64_t v11 = v34;
      sub_1C151F0EC();
      uint64_t v21 = v33[0];
      sub_1BFE9EFB8(v20, (uint64_t)v10, (uint64_t (*)(void))sub_1C13585A4);
      if (v11 == v21) {
        goto LABEL_5;
      }
    }
  }
  return v34;
}

uint64_t sub_1C1354344()
{
  void (*v11)(void *__return_ptr, char *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void (**v18)(char *, uint64_t);
  void (**v19)(char *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(unsigned char *);
  unsigned char v26[144];
  void v27[19];
  unsigned char v28[144];
  void v29[18];
  uint64_t v30;

  sub_1C00BE41C();
  unint64_t v24 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v23 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C13587D0();
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE4B0();
  sub_1C134A8EC((unint64_t *)&unk_1EB863DB0, (void (*)(uint64_t))sub_1C00BE4B0);
  sub_1C151F09C();
  uint64_t v7 = v29[0];
  char v30 = v29[0];
  sub_1C151F0EC();
  uint64_t v8 = v29[0];
  uint64_t v21 = v0;
  sub_1BFE9EFB8(v0, (uint64_t)v6, (uint64_t (*)(void))sub_1C13587D0);
  if (v7 == v8)
  {
LABEL_5:
    sub_1C1354C14((uint64_t)v6, (uint64_t (*)(void))sub_1C13587D0);
  }
  else
  {
    sub_1C1358864(0);
    uint64_t v19 = (void (**)(char *))(v2 + 16);
    uint64_t v20 = v9;
    uint64_t v18 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v10 = v23;
    while (1)
    {
      uint64_t v25 = *(uint64_t (**)(unsigned char *))&v6[*(int *)(v22 + 36)];
      v27[18] = v7;
      uint64_t v11 = *(void (**)(void *__return_ptr, char *))&v6[*(int *)(v20 + 44)];
      swift_retain();
      uint64_t v12 = sub_1C151F19C();
      uint64_t v13 = v24;
      (*v19)(v10);
      ((void (*)(void *, void))v12)(v27, 0);
      v11(v27, v10);
      (*v18)(v10, v13);
      sub_1C1358334((uint64_t)v27, (uint64_t)v28, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
      sub_1C1358334((uint64_t)v28, (uint64_t)v26, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
      sub_1C1354C14((uint64_t)v6, (uint64_t (*)(void))sub_1C13587D0);
      LOBYTE(v12) = v25(v26);
      swift_release();
      sub_1C1358334((uint64_t)v26, (uint64_t)v29, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
      sub_1C01B3B54((uint64_t)v29);
      if (v12) {
        break;
      }
      uint64_t v14 = v21;
      sub_1C151F0FC();
      uint64_t v7 = v30;
      sub_1C151F0EC();
      uint64_t v15 = v29[0];
      sub_1BFE9EFB8(v14, (uint64_t)v6, (uint64_t (*)(void))sub_1C13587D0);
      if (v7 == v15) {
        goto LABEL_5;
      }
    }
  }
  return v30;
}

uint64_t sub_1C13546D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char v27 = a8 & 1;
  sub_1BFD20484(a1, (uint64_t)v31);
  uint64_t result = sub_1C1341764((uint64_t)v31, a2, a3, a4, a5, a6, a7, v27, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             (uint64_t)v32,
             (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1342598);
  if (!v30) {
    *a9 = result;
  }
  return result;
}

BOOL sub_1C13547E4(uint64_t a1)
{
  sub_1C1358334(a1, (uint64_t)v2, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  return sub_1C00A0A24(v2) == 0;
}

uint64_t sub_1C1354828@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C1358334(a1, (uint64_t)v10, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C1358334((uint64_t)v10, (uint64_t)v11, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  uint64_t result = sub_1C00A0A24(v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C1358334((uint64_t)v10, (uint64_t)v8, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
    long long v4 = v9[0];
    a2[6] = v8[6];
    a2[7] = v4;
    *(_OWORD *)((char *)a2 + 121) = *(_OWORD *)((char *)v9 + 9);
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
    return sub_1C0187FB0((uint64_t)v8);
  }
  return result;
}

void sub_1C13548EC()
{
  if (!qword_1EB86B3C0)
  {
    sub_1C1354994(255, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86B3C0);
    }
  }
}

void sub_1C1354974(uint64_t a1)
{
}

void sub_1C1354994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatSectionDescriptor();
    v8[1] = type metadata accessor for FormatModel();
    _OWORD v8[2] = sub_1C134A8EC((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    v8[3] = sub_1C134A8EC((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C1354A88()
{
  if (!qword_1EB86B4E0)
  {
    sub_1C1354974(255);
    sub_1C134A8EC(&qword_1EB864558, sub_1C1354974);
    unint64_t v0 = sub_1C152048C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B4E0);
    }
  }
}

void sub_1C1354B1C()
{
  if (!qword_1EB86B4D0)
  {
    sub_1C1354974(255);
    sub_1C134A8EC(&qword_1EB864558, sub_1C1354974);
    unint64_t v0 = sub_1C152047C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B4D0);
    }
  }
}

void sub_1C1354BB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1354C14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1354C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return v9;
  }
  uint64_t v11 = a1;
  uint64_t v47 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, v8, 0);
  uint64_t v9 = v47;
  uint64_t result = sub_1BFD44A04(v11);
  int64_t v13 = result;
  int v15 = v14;
  char v17 = v16 & 1;
  uint64_t v44 = v11 + 56;
  uint64_t v42 = v11;
  uint64_t v43 = a3;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(v11 + 32))
  {
    if (((*(void *)(v44 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v11 + 36) != v15) {
      goto LABEL_24;
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v13);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    char v46 = v17;
    if (!a3 || (v19 == a2 ? (BOOL v21 = v20 == a3) : (BOOL v21 = 0), !v21 && (sub_1C1520A9C() & 1) == 0))
    {
      swift_bridgeObjectRetain();
LABEL_16:
      int64_t v45 = v8;
      int v25 = v15;
      uint64_t v26 = v9;
      uint64_t v27 = MEMORY[0x1E4FBB1A0];
      sub_1BFF67464(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C1527210;
      *(void *)(v28 + 32) = a7;
      *(void *)(v28 + 40) = a8;
      *(void *)(v28 + 48) = v19;
      *(void *)(v28 + 56) = v20;
      sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, v27, MEMORY[0x1E4FBB320]);
      uint64_t v29 = v27;
      uint64_t v9 = v26;
      int v15 = v25;
      int64_t v8 = v45;
      sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C151E55C();
      uint64_t v23 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v22 = sub_1BFF896B4(a4, a5, a6);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_16;
    }
    uint64_t v23 = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = a4;
LABEL_17:
    unint64_t v32 = *(void *)(v9 + 16);
    unint64_t v31 = *(void *)(v9 + 24);
    if (v32 >= v31 >> 1) {
      sub_1BFF661B8(v31 > 1, v32 + 1, 1);
    }
    *(void *)(v9 + 16) = v32 + 1;
    uint64_t v33 = v9 + 16 * v32;
    *(void *)(v33 + 32) = v24;
    *(void *)(v33 + 40) = v23;
    uint64_t v11 = v42;
    uint64_t result = sub_1BFD43BF8(v13, v15, v46 & 1, v42);
    int64_t v13 = result;
    int v15 = v34;
    char v17 = v35 & 1;
    --v8;
    a3 = v43;
    if (!v8)
    {
      sub_1C0153754(result, v34, v35 & 1);
      return v9;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1C1354FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return v4;
  }
  uint64_t v5 = a1;
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, v3, 0);
  uint64_t v4 = v31;
  uint64_t result = sub_1BFD44A04(v5);
  int64_t v7 = result;
  int v9 = v8;
  char v11 = v10 & 1;
  uint64_t v26 = v5 + 56;
  uint64_t v25 = v5;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(v5 + 32))
  {
    if (((*(void *)(v26 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(v5 + 36) != v9) {
      goto LABEL_14;
    }
    char v29 = v11;
    uint64_t v12 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v7);
    uint64_t v30 = v4;
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    uint64_t v15 = MEMORY[0x1E4FBB1A0];
    sub_1BFF67464(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1527210;
    *(void *)(v16 + 32) = a2;
    *(void *)(v16 + 40) = a3;
    *(void *)(v16 + 48) = v14;
    *(void *)(v16 + 56) = v13;
    sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, v15, MEMORY[0x1E4FBB320]);
    sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v15);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v4 = v30;
    uint64_t v17 = sub_1C151E55C();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = *(void *)(v30 + 16);
    unint64_t v20 = *(void *)(v30 + 24);
    if (v21 >= v20 >> 1)
    {
      sub_1BFF661B8(v20 > 1, v21 + 1, 1);
      uint64_t v4 = v30;
    }
    *(void *)(v4 + 16) = v21 + 1;
    uint64_t v22 = v4 + 16 * v21;
    *(void *)(v22 + 32) = v17;
    *(void *)(v22 + 40) = v19;
    uint64_t v5 = v25;
    uint64_t result = sub_1BFD43BF8(v7, v9, v29 & 1, v25);
    int64_t v7 = result;
    int v9 = v23;
    char v11 = v24 & 1;
    if (!--v3)
    {
      sub_1C0153754(result, v23, v11);
      return v4;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void *sub_1C1355230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a2;
  uint64_t v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v6);
  int v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v36 - v12;
  sub_1C1358A3C();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v47 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v17 = v11 + 16;
    uint64_t v19 = a1;
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v40 = *(void *)(v17 + 56);
    unint64_t v41 = v13;
    char v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 40);
    uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 32);
    uint64_t v44 = v18;
    uint64_t v38 = (void (**)(char *, uint64_t))(v17 - 8);
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v17 + 16);
    v36[0] = v19;
    v36[1] = v3;
    swift_bridgeObjectRetain();
    uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
    void v36[2] = v6;
    _OWORD v36[3] = a3;
    unint64_t v21 = v47;
    uint64_t v22 = (uint64_t)v8;
    uint64_t v23 = v10;
    uint64_t v42 = v17;
    while (1)
    {
      v44(v21, v20, v23);
      uint64_t v37 = *v46;
      v37(v21, 0, 1, v23);
      if ((*v43)(v21, 1, v23) == 1) {
        break;
      }
      uint64_t v49 = v16;
      uint64_t v25 = v41;
      (*v39)(v41, v21, v23);
      sub_1C151A30C();
      swift_storeEnumTagMultiPayload();
      FeedItem.identifier.getter();
      sub_1C1354C14(v22, type metadata accessor for FeedItem);
      char v26 = sub_1C151E89C();
      swift_bridgeObjectRelease();
      if (v26)
      {
        sub_1C151A30C();
        swift_storeEnumTagMultiPayload();
        uint64_t v27 = FeedItem.identifier.getter();
        uint64_t v29 = v28;
        sub_1C1354C14(v22, type metadata accessor for FeedItem);
        (*v38)(v25, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v48 = sub_1C0EE3128(0, v48[2] + 1, 1, v48);
        }
        uint64_t v24 = v49;
        unint64_t v31 = v48[2];
        unint64_t v30 = v48[3];
        if (v31 >= v30 >> 1) {
          uint64_t v48 = sub_1C0EE3128((void *)(v30 > 1), v31 + 1, 1, v48);
        }
        unint64_t v32 = v48;
        void v48[2] = v31 + 1;
        uint64_t v33 = &v32[6 * v31];
        v33[4] = v27;
        void v33[5] = v29;
        v33[6] = MEMORY[0x1E4FBC870];
        v33[7] = MEMORY[0x1E4FBC860];
        v33[8] = 0;
        v33[9] = 0;
      }
      else
      {
        (*v38)(v25, v23);
        uint64_t v24 = v49;
      }
      v20 += v40;
      uint64_t v16 = v24 - 1;
      unint64_t v21 = v47;
      if (!v16)
      {
        v37(v47, 1, 1, v23);
        break;
      }
    }
  }
  else
  {
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    swift_bridgeObjectRetain();
    uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
    v34(v47, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  return v48;
}

void *sub_1C13556E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v6 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v6 - 8);
  int v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v32 - v10;
  uint64_t v12 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  v32[1] = v3;
  uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  sub_1C00BE41C();
  uint64_t v18 = v17;
  uint64_t v19 = a1
      + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
  uint64_t v33 = *(void *)(*(void *)(v17 - 8) + 72);
  v32[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v36 = v16;
  uint64_t v34 = a3;
  void v32[2] = v18;
  do
  {
    sub_1C151A30C();
    sub_1BFE9EFB8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatModel);
    sub_1C0C92B68();
    uint64_t v21 = v20;
    uint64_t v22 = (uint64_t)&v8[*(int *)(v20 + 48)];
    sub_1C1357E7C((uint64_t)v8, (uint64_t)v14, type metadata accessor for FeedItem);
    sub_1C0C92BD4(v22);
    sub_1C1354C14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatModel);
    FeedItem.identifier.getter();
    sub_1C1354C14((uint64_t)v14, type metadata accessor for FeedItem);
    LOBYTE(v22) = sub_1C151E89C();
    swift_bridgeObjectRelease();
    if (v22)
    {
      sub_1C151A30C();
      sub_1BFE9EFB8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatModel);
      uint64_t v23 = (uint64_t)&v8[*(int *)(v21 + 48)];
      sub_1C1357E7C((uint64_t)v8, (uint64_t)v14, type metadata accessor for FeedItem);
      sub_1C0C92BD4(v23);
      sub_1C1354C14((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatModel);
      uint64_t v24 = FeedItem.identifier.getter();
      uint64_t v26 = v25;
      sub_1C1354C14((uint64_t)v14, type metadata accessor for FeedItem);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v27 = v36;
      }
      else {
        uint64_t v27 = sub_1C0EE3128(0, v36[2] + 1, 1, v36);
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1) {
        uint64_t v27 = sub_1C0EE3128((void *)(v28 > 1), v29 + 1, 1, v27);
      }
      _OWORD v27[2] = v29 + 1;
      uint64_t v36 = v27;
      unint64_t v30 = &v27[6 * v29];
      v30[4] = v24;
      v30[5] = v26;
      v30[6] = MEMORY[0x1E4FBC870];
      v30[7] = MEMORY[0x1E4FBC860];
      v30[8] = 0;
      v30[9] = 0;
    }
    v19 += v33;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1C1355AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, long long *))
{
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  if (!v11) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v61 = MEMORY[0x1E4FBC860];
  sub_1BFEC4DD0(0, v11, 0);
  uint64_t v14 = 0;
  int64_t v47 = v11;
  uint64_t v48 = a1 + 32;
  uint64_t result = v61;
  while (1)
  {
    uint64_t v52 = result;
    uint64_t v53 = v14;
    uint64_t v16 = (long long *)(v48 + (v14 << 6));
    long long v17 = v16[3];
    long long v64 = v16[2];
    long long v65 = v17;
    long long v18 = v16[1];
    long long v62 = *v16;
    long long v63 = v18;
    uint64_t v19 = v64;
    uint64_t v66 = v64;
    uint64_t v20 = *(void *)(v64 + 16);
    if (v20) {
      break;
    }
    sub_1BFFD14FC((uint64_t)&v62);
    uint64_t v24 = v12;
LABEL_27:
    sub_1BFF67464(0, &qword_1EB880CD8, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E4FBB320]);
    sub_1BFEC635C(&qword_1EB880CE0, &qword_1EB880CD8, (uint64_t)&type metadata for SlotReference);
    sub_1BFEC6BB4();
    uint64_t v38 = sub_1C151E91C();
    uint64_t v39 = *((void *)&v62 + 1);
    uint64_t v51 = v62;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1C134163C((uint64_t)v24);
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1BFEF4060(v40);
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_1BFEC63B4(v38);
    uint64_t v41 = sub_1BFEC65A4(v38);
    uint64_t v42 = sub_1BFEC6794(v38);
    swift_bridgeObjectRelease();
    long long v43 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFD147C((uint64_t)&v62);
    uint64_t result = v52;
    unint64_t v45 = *(void *)(v52 + 16);
    unint64_t v44 = *(void *)(v52 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_1BFEC4DD0(v44 > 1, v45 + 1, 1);
      uint64_t result = v52;
    }
    uint64_t v14 = v53 + 1;
    *(void *)(result + 16) = v45 + 1;
    uint64_t v46 = result + (v45 << 6);
    *(void *)(v46 + 32) = v51;
    *(void *)(v46 + 40) = v39;
    *(void *)(v46 + 48) = v50;
    *(void *)(v46 + 56) = v49;
    *(void *)(v46 + 64) = v41;
    *(void *)(v46 + 72) = v42;
    *(_OWORD *)(v46 + 80) = v43;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    if (v53 + 1 == v47) {
      return result;
    }
  }
  uint64_t v21 = *(void *)(type metadata accessor for FormatContentSlotItemObject.Resolved() - 8);
  uint64_t v22 = v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  sub_1BFFAF7A4((uint64_t)&v66);
  sub_1BFFD14FC((uint64_t)&v62);
  sub_1BFFAF7A4((uint64_t)&v66);
  uint64_t v23 = *(void *)(v21 + 72);
  uint64_t v24 = v12;
  while (1)
  {
    uint64_t v25 = a11(v22, a2, a3, a4, a5, a6, a7, a8, a9, &v62);
    uint64_t v26 = *(void *)(v25 + 16);
    int64_t v27 = v24[2];
    int64_t v28 = v27 + v26;
    if (__OFADD__(v27, v26)) {
      break;
    }
    uint64_t v29 = v25;
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v28 <= v24[3] >> 1)
    {
      if (*(void *)(v29 + 16)) {
        goto LABEL_16;
      }
    }
    else
    {
      if (v27 <= v28) {
        int64_t v31 = v27 + v26;
      }
      else {
        int64_t v31 = v27;
      }
      uint64_t v24 = sub_1C0EE3128(isUniquelyReferenced_nonNull_native, v31, 1, v24);
      if (*(void *)(v29 + 16))
      {
LABEL_16:
        uint64_t v32 = v24[2];
        if ((v24[3] >> 1) - v32 < v26) {
          goto LABEL_34;
        }
        unint64_t v33 = (unint64_t)&v24[6 * v32 + 4];
        if (v29 + 32 < v33 + 48 * v26 && v33 < v29 + 32 + 48 * v26) {
          goto LABEL_36;
        }
        swift_arrayInitWithCopy();
        if (v26)
        {
          uint64_t v35 = v24[2];
          BOOL v36 = __OFADD__(v35, v26);
          uint64_t v37 = v35 + v26;
          if (v36) {
            goto LABEL_35;
          }
          v24[2] = v37;
        }
        goto LABEL_6;
      }
    }
    if (v26) {
      goto LABEL_33;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v22 += v23;
    if (!--v20)
    {
      sub_1BFCA59C8((uint64_t)&v66);
      sub_1BFCA59C8((uint64_t)&v66);
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C1355F24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FeedItem(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  int v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v25[1] = v2;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1BFE9F020(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(v6 + 72);
    while (1)
    {
      uint64_t v14 = FeedItem.identifier.getter();
      if (!*(void *)(v12 + 16)) {
        break;
      }
      unint64_t v16 = sub_1BFEF2D8C(v14, v15);
      if ((v17 & 1) == 0) {
        break;
      }
      uint64_t v18 = *(void *)(*(void *)(v12 + 56) + 8 * v16);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1BFE9EFB8(v11, (uint64_t)v8, type metadata accessor for FeedItem);
      if ((~v18 & 0xF000000000000007) == 0) {
        goto LABEL_8;
      }
      sub_1C1354C14((uint64_t)v8, type metadata accessor for FeedItem);
LABEL_9:
      uint64_t v10 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFE9F020(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v26;
      }
      unint64_t v23 = *(void *)(v10 + 16);
      unint64_t v22 = *(void *)(v10 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BFE9F020(v22 > 1, v23 + 1, 1);
        uint64_t v10 = v26;
      }
      *(void *)(v10 + 16) = v23 + 1;
      *(void *)(v10 + 8 * v23 + 32) = v18;
      v11 += v13;
      if (!--v9) {
        return v10;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BFE9EFB8(v11, (uint64_t)v8, type metadata accessor for FeedItem);
LABEL_8:
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = FeedItem.identifier.getter();
    uint64_t v21 = v20;
    sub_1C1354C14((uint64_t)v8, type metadata accessor for FeedItem);
    *(void *)(v18 + 16) = v19;
    *(void *)(v18 + 24) = v21;
    goto LABEL_9;
  }
  return v10;
}

uint64_t sub_1C13561A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  sub_1C0FC020C();
  uint64_t v4 = v3;
  uint64_t v52 = *(void (***)(char *, uint64_t, uint64_t))(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v47 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1358A3C();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v49 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v43 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v44 = (char *)&v36 - v13;
  sub_1C1358ACC();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x1E4FBC860];
  sub_1C134A8EC(&qword_1EA1AE628, (void (*)(uint64_t))sub_1C0FC020C);
  sub_1C151E8FC();
  uint64_t v18 = &v17[*(int *)(v15 + 44)];
  uint64_t v19 = sub_1C134A8EC(&qword_1EA1AE610, (void (*)(uint64_t))sub_1C0FC020C);
  uint64_t v20 = *(void *)v18;
  uint64_t v51 = v17;
  uint64_t v48 = v19;
  sub_1C151F0EC();
  if (v20 == v53[0])
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v22 = (uint64_t)v51;
LABEL_15:
    uint64_t v26 = (uint64_t)v49;
    v21(v49, 1, 1, v9);
  }
  else
  {
    uint64_t v22 = (uint64_t)v51;
    uint64_t v40 = v52 + 2;
    uint64_t v41 = (void (**)(char *))(v10 + 16);
    uint64_t v42 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v39 = (void (**)(char *, uint64_t))(v52 + 1);
    uint64_t v52 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v36 = v10;
    uint64_t v37 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v23 = v50;
    while (1)
    {
      uint64_t v25 = (void (*)(uint64_t *, void))sub_1C151F19C();
      uint64_t v26 = (uint64_t)v49;
      (*v41)(v49);
      v25(v53, 0);
      int64_t v27 = v47;
      (*v40)(v47, v22, v4);
      sub_1C151F0FC();
      (*v39)(v27, v4);
      uint64_t v21 = *v42;
      (*v42)((char *)v26, 0, 1, v9);
      if ((*v38)(v26, 1, v9) == 1) {
        break;
      }
      int64_t v28 = *v52;
      uint64_t v29 = (uint64_t)v44;
      (*v52)(v44, v26, v9);
      char v30 = sub_1C1347FB4(v29, v45, v46);
      if (v23)
      {
        (*v37)(v29, v9);
        sub_1C1354C14((uint64_t)v51, (uint64_t (*)(void))sub_1C1358ACC);
        return swift_release();
      }
      if (v30)
      {
        v28(v43, v29, v9);
        uint64_t v31 = v54;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v50 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C05F84EC(0, *(void *)(v31 + 16) + 1, 1);
          uint64_t v31 = v54;
        }
        unint64_t v34 = *(void *)(v31 + 16);
        unint64_t v33 = *(void *)(v31 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_1C05F84EC(v33 > 1, v34 + 1, 1);
          uint64_t v31 = v54;
        }
        *(void *)(v31 + 16) = v34 + 1;
        v28((char *)(v31+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v34), (uint64_t)v43, v9);
        uint64_t v54 = v31;
        uint64_t v23 = v50;
      }
      else
      {
        (*v37)(v29, v9);
      }
      uint64_t v24 = *(void *)v18;
      uint64_t v22 = (uint64_t)v51;
      sub_1C151F0EC();
      if (v24 == v53[0]) {
        goto LABEL_15;
      }
    }
  }
  sub_1C1354C14(v22, (uint64_t (*)(void))sub_1C1358ACC);
  sub_1C1354C14(v26, (uint64_t (*)(void))sub_1C1358A3C);
  return v54;
}

uint64_t sub_1C13567BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = v15;
  uint64_t v79 = a7;
  uint64_t v80 = a8;
  uint64_t v75 = a4;
  uint64_t v73 = a15;
  uint64_t v22 = a14;
  uint64_t v72 = a13;
  uint64_t v81 = a11;
  uint64_t v77 = a10;
  uint64_t v91 = type metadata accessor for FeedItem(0);
  uint64_t v87 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  long long v86 = (char *)&v69 - v26;
  sub_1BFF01514(0, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
  uint64_t v90 = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v89 = (char *)&v69 - v29;
  *(_OWORD *)(v16 + 192) = 0u;
  *(_OWORD *)(v16 + 233) = 0u;
  *(_OWORD *)(v16 + 208) = 0u;
  *(_OWORD *)(v16 + 224) = 0u;
  *(unsigned char *)(v16 + 249) = 1;
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  uint64_t v74 = v16 + 192;
  uint64_t v76 = a5;
  uint64_t v92 = a5;
  uint64_t v93 = a6;
  uint64_t v78 = a6;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  int64_t v30 = *(void *)(a1 + 16);
  uint64_t v31 = MEMORY[0x1E4FBC860];
  uint64_t v88 = v24;
  uint64_t v82 = v16;
  if (v30)
  {
    uint64_t v69 = a14;
    uint64_t v94 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v30, 0);
    uint64_t v71 = v28;
    unint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
    uint64_t v32 = v28 + 16;
    long long v84 = v33;
    unint64_t v34 = (*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64);
    uint64_t v70 = a1;
    unint64_t v35 = a1 + v34;
    uint64_t v83 = *(void *)(v32 + 56);
    uint64_t v85 = v32;
    uint64_t v36 = (void (**)(char *, uint64_t))(v32 - 8);
    int64_t v37 = v30;
    do
    {
      uint64_t v39 = v89;
      uint64_t v38 = v90;
      v84(v89, v35, v90);
      sub_1C151A30C();
      uint64_t v40 = (uint64_t)v86;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = FeedItem.identifier.getter();
      uint64_t v43 = v42;
      sub_1C1354C14(v40, type metadata accessor for FeedItem);
      (*v36)(v39, v38);
      uint64_t v31 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v31 + 16) + 1, 1);
        uint64_t v31 = v94;
      }
      unint64_t v45 = *(void *)(v31 + 16);
      unint64_t v44 = *(void *)(v31 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_1BFF661B8(v44 > 1, v45 + 1, 1);
        uint64_t v31 = v94;
      }
      *(void *)(v31 + 16) = v45 + 1;
      uint64_t v46 = v31 + 16 * v45;
      *(void *)(v46 + 32) = v41;
      *(void *)(v46 + 40) = v43;
      v35 += v83;
      --v37;
    }
    while (v37);
    uint64_t v16 = v82;
    uint64_t v28 = v71;
    a1 = v70;
    uint64_t v22 = v69;
  }
  long long v86 = a12;
  LODWORD(v85) = a9;
  uint64_t v94 = v31;
  uint64_t v47 = MEMORY[0x1E4FBB1A0];
  sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v47);
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v48 = v93;
  *(void *)(v16 + 32) = v92;
  *(void *)(v16 + 40) = v48;
  uint64_t v49 = sub_1C1349E88(v72, v22, v73, a1);
  uint64_t v51 = v50;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = v49;
  *(void *)(v16 + 128) = v51;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  if (v30)
  {
    uint64_t v92 = MEMORY[0x1E4FBC860];
    sub_1C05F7878(0, v30, 0);
    unint64_t v55 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
    uint64_t v53 = v28 + 16;
    uint64_t v54 = v55;
    unint64_t v56 = a1 + ((*(unsigned __int8 *)(v53 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 64));
    uint64_t v57 = *(void *)(v53 + 56);
    uint64_t v58 = (void (**)(char *, uint64_t))(v53 - 8);
    do
    {
      uint64_t v60 = v89;
      uint64_t v59 = v90;
      v54(v89, v56, v90);
      sub_1C151A30C();
      swift_storeEnumTagMultiPayload();
      (*v58)(v60, v59);
      uint64_t v52 = v92;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7878(0, *(void *)(v52 + 16) + 1, 1);
        uint64_t v52 = v92;
      }
      unint64_t v62 = *(void *)(v52 + 16);
      unint64_t v61 = *(void *)(v52 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_1C05F7878(v61 > 1, v62 + 1, 1);
        uint64_t v52 = v92;
      }
      *(void *)(v52 + 16) = v62 + 1;
      sub_1C1357E7C((uint64_t)v88, v52+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v62, type metadata accessor for FeedItem);
      v56 += v57;
      --v30;
    }
    while (v30);
    uint64_t v16 = v82;
  }
  char v63 = v85 & 1;
  uint64_t v64 = v75;
  *(void *)(v16 + 64) = v52;
  *(void *)(v16 + 72) = v64;
  uint64_t v66 = v78;
  uint64_t v65 = v79;
  *(void *)(v16 + 48) = v76;
  *(void *)(v16 + 56) = v66;
  sub_1C1358254(v65, v16 + 80);
  *(void *)(v16 + 136) = v80;
  *(unsigned char *)(v16 + 144) = v63;
  sub_1C13582B0(v77, v16 + 152, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  uint64_t v67 = v74;
  swift_beginAccess();
  sub_1C1358334(v81, v67, &qword_1EB872DE0, (uint64_t)&type metadata for FeedGroupBindingOptions);
  *(void *)(v16 + 256) = v86;
  return v16;
}

uint64_t sub_1C1356E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  sub_1C00BE4B0();
  uint64_t v5 = v4;
  int64_t v37 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00BE41C();
  uint64_t v47 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v40 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (char *)&v34 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = (char *)&v34 - v13;
  sub_1C1358440();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x1E4FBC860];
  sub_1C134A8EC(&qword_1EB863DA8, (void (*)(uint64_t))sub_1C00BE4B0);
  sub_1C151E8FC();
  uint64_t v18 = &v17[*(int *)(v15 + 44)];
  sub_1C134A8EC((unint64_t *)&unk_1EB863DB0, (void (*)(uint64_t))sub_1C00BE4B0);
  uint64_t v19 = *(void *)v18;
  uint64_t v46 = v17;
  sub_1C151F0EC();
  if (v19 == v48[0])
  {
    uint64_t v20 = (uint64_t)v46;
LABEL_3:
    sub_1C1354C14(v20, (uint64_t (*)(void))sub_1C1358440);
    return v49;
  }
  else
  {
    uint64_t v38 = (void (**)(char *, uint64_t, uint64_t))(v37 + 2);
    uint64_t v39 = (void (**)(char *))(v8 + 16);
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v35 = v8;
    uint64_t v36 = (void (**)(uint64_t, uint64_t))(v8 + 8);
    ++v37;
    uint64_t v20 = (uint64_t)v46;
    while (1)
    {
      uint64_t v24 = (void (*)(uint64_t *, void))sub_1C151F19C();
      uint64_t v25 = v42;
      uint64_t v26 = v47;
      (*v39)(v42);
      v24(v48, 0);
      uint64_t v27 = v43;
      (*v38)(v43, v20, v5);
      sub_1C151F0FC();
      (*v37)(v27, v5);
      uint64_t v28 = *v22;
      uint64_t v29 = (uint64_t)v41;
      (*v22)(v41, v25, v26);
      char v30 = sub_1C13482F4(v29, v44, v45);
      if (v3) {
        break;
      }
      if (v30)
      {
        v28(v40, (char *)v29, v47);
        uint64_t v31 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F6400(0, *(void *)(v31 + 16) + 1, 1);
          uint64_t v31 = v49;
        }
        unint64_t v33 = *(void *)(v31 + 16);
        unint64_t v32 = *(void *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1C05F6400(v32 > 1, v33 + 1, 1);
          uint64_t v31 = v49;
        }
        *(void *)(v31 + 16) = v33 + 1;
        v28((char *)(v31+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v33), v40, v47);
        uint64_t v49 = v31;
      }
      else
      {
        (*v36)(v29, v47);
      }
      uint64_t v23 = *(void *)v18;
      uint64_t v20 = (uint64_t)v46;
      sub_1C151F0EC();
      if (v23 == v48[0]) {
        goto LABEL_3;
      }
    }
    (*v36)(v29, v47);
    sub_1C1354C14((uint64_t)v46, (uint64_t (*)(void))sub_1C1358440);
    return swift_release();
  }
}

uint64_t sub_1C1357324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, void (*a12)(char *, unint64_t, uint64_t), uint64_t a13, uint64_t a14, void *a15)
{
  uint64_t v16 = v15;
  uint64_t v92 = a7;
  uint64_t v93 = a8;
  uint64_t v88 = a4;
  long long v86 = a15;
  uint64_t v22 = a14;
  uint64_t v85 = a13;
  uint64_t v94 = a11;
  uint64_t v90 = a10;
  uint64_t v23 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v105 = (uint64_t)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v104 = (char *)&v81 - v26;
  uint64_t v27 = type metadata accessor for FeedItem(0);
  uint64_t v101 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v102 = (uint64_t)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v100 = (uint64_t *)((char *)&v81 - v30);
  sub_1C00BE41C();
  uint64_t v103 = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v16 + 192) = 0u;
  *(_OWORD *)(v16 + 233) = 0u;
  *(_OWORD *)(v16 + 208) = 0u;
  *(_OWORD *)(v16 + 224) = 0u;
  *(unsigned char *)(v16 + 249) = 1;
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  uint64_t v87 = v16 + 192;
  uint64_t v89 = a5;
  uint64_t v106 = a5;
  uint64_t v107 = a6;
  uint64_t v91 = a6;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  int64_t v35 = *(void *)(a1 + 16);
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v95 = v16;
  if (v35)
  {
    uint64_t v82 = a14;
    uint64_t v108 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v35, 0);
    uint64_t v84 = v32;
    uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
    uint64_t v37 = v32 + 16;
    uint64_t v98 = v38;
    unint64_t v39 = (*(unsigned __int8 *)(v37 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 64);
    uint64_t v83 = a1;
    unint64_t v40 = a1 + v39;
    uint64_t v41 = *(void *)(v37 + 56);
    uint64_t v99 = v37;
    uint64_t v96 = (void (**)(char *, uint64_t))(v37 - 8);
    uint64_t v97 = v41;
    int64_t v42 = v35;
    do
    {
      uint64_t v43 = v103;
      v98(v34, v40, v103);
      uint64_t v44 = (uint64_t)v104;
      sub_1C151A30C();
      uint64_t v45 = v105;
      sub_1BFE9EFB8(v44, v105, (uint64_t (*)(void))type metadata accessor for FormatModel);
      sub_1C0C92B68();
      uint64_t v47 = v45 + *(int *)(v46 + 48);
      uint64_t v48 = v45;
      uint64_t v49 = (void (*)(void, void, void))v100;
      sub_1C1357E7C(v48, (uint64_t)v100, type metadata accessor for FeedItem);
      sub_1C0C92BD4(v47);
      sub_1C1354C14(v44, (uint64_t (*)(void))type metadata accessor for FormatModel);
      uint64_t v50 = FeedItem.identifier.getter();
      uint64_t v52 = v51;
      sub_1C1354C14((uint64_t)v49, type metadata accessor for FeedItem);
      (*v96)(v34, v43);
      uint64_t v36 = v108;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v108;
      }
      unint64_t v54 = *(void *)(v36 + 16);
      unint64_t v53 = *(void *)(v36 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_1BFF661B8(v53 > 1, v54 + 1, 1);
        uint64_t v36 = v108;
      }
      *(void *)(v36 + 16) = v54 + 1;
      uint64_t v55 = v36 + 16 * v54;
      *(void *)(v55 + 32) = v50;
      *(void *)(v55 + 40) = v52;
      v40 += v97;
      --v42;
    }
    while (v42);
    uint64_t v16 = v95;
    uint64_t v32 = v84;
    a1 = v83;
    uint64_t v22 = v82;
  }
  uint64_t v98 = a12;
  LODWORD(v97) = a9;
  uint64_t v108 = v36;
  uint64_t v56 = MEMORY[0x1E4FBB1A0];
  sub_1BFF67464(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFEC635C((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v56);
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v57 = v107;
  *(void *)(v16 + 32) = v106;
  *(void *)(v16 + 40) = v57;
  uint64_t v58 = sub_1C134A250(v85, v22, v86, a1);
  uint64_t v60 = v59;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = v58;
  *(void *)(v16 + 128) = v60;
  uint64_t v61 = MEMORY[0x1E4FBC860];
  if (v35)
  {
    uint64_t v106 = MEMORY[0x1E4FBC860];
    sub_1C05F7878(0, v35, 0);
    char v63 = *(void **)(v32 + 16);
    uint64_t v62 = v32 + 16;
    unint64_t v64 = a1 + ((*(unsigned __int8 *)(v62 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 64));
    uint64_t v99 = *(void *)(v62 + 56);
    uint64_t v100 = v63;
    uint64_t v65 = (void (**)(char *, uint64_t))(v62 - 8);
    uint64_t v67 = v102;
    uint64_t v66 = v103;
    do
    {
      uint64_t v68 = v62;
      ((void (*)(char *, unint64_t, uint64_t))v100)(v34, v64, v66);
      uint64_t v69 = (uint64_t)v104;
      sub_1C151A30C();
      uint64_t v70 = v105;
      sub_1BFE9EFB8(v69, v105, (uint64_t (*)(void))type metadata accessor for FormatModel);
      sub_1C0C92B68();
      uint64_t v72 = v70 + *(int *)(v71 + 48);
      sub_1C1357E7C(v70, v67, type metadata accessor for FeedItem);
      sub_1C0C92BD4(v72);
      sub_1C1354C14(v69, (uint64_t (*)(void))type metadata accessor for FormatModel);
      (*v65)(v34, v66);
      uint64_t v61 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7878(0, *(void *)(v61 + 16) + 1, 1);
        uint64_t v61 = v106;
      }
      unint64_t v74 = *(void *)(v61 + 16);
      unint64_t v73 = *(void *)(v61 + 24);
      if (v74 >= v73 >> 1)
      {
        sub_1C05F7878(v73 > 1, v74 + 1, 1);
        uint64_t v61 = v106;
      }
      *(void *)(v61 + 16) = v74 + 1;
      uint64_t v67 = v102;
      sub_1C1357E7C(v102, v61+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(void *)(v101 + 72) * v74, type metadata accessor for FeedItem);
      v64 += v99;
      --v35;
      uint64_t v62 = v68;
    }
    while (v35);
    uint64_t v16 = v95;
  }
  char v75 = v97 & 1;
  uint64_t v76 = v88;
  *(void *)(v16 + 64) = v61;
  *(void *)(v16 + 72) = v76;
  uint64_t v78 = v91;
  uint64_t v77 = v92;
  *(void *)(v16 + 48) = v89;
  *(void *)(v16 + 56) = v78;
  sub_1C1358254(v77, v16 + 80);
  *(void *)(v16 + 136) = v93;
  *(unsigned char *)(v16 + 144) = v75;
  sub_1C13582B0(v90, v16 + 152, qword_1EB8724F0, (unint64_t *)&qword_1EB8724E0, (uint64_t)&protocol descriptor for FeedGroupDebuggable);
  uint64_t v79 = v87;
  swift_beginAccess();
  sub_1C1358334(v94, v79, &qword_1EB872DE0, (uint64_t)&type metadata for FeedGroupBindingOptions);
  *(void *)(v16 + 256) = v98;
  return v16;
}

uint64_t sub_1C1357AC4(uint64_t a1)
{
  uint64_t v2 = sub_1C15179FC();
  uint64_t v3 = *(void **)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v33 = (uint64_t *)&v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)&v29[-v6];
  sub_1C1354BB0(0, &qword_1EB882B38, MEMORY[0x1E4FAB878], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v29[-v12];
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v29[-v15];
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = &v29[-v19];
  uint64_t v21 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
  v21(&v29[-v19], 1, 1, v2, v18);
  if (a1 < 1)
  {
    uint64_t v27 = 1;
    ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v21)(v16, 1, 1, v2);
    ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v21)(v13, 1, 1, v2);
  }
  else
  {
    unsigned int v30 = *MEMORY[0x1E4FAB870];
    uint64_t v31 = v20;
    uint64_t v32 = v10;
    uint64_t v22 = (void (*)(unsigned char *))v3[13];
    v22(v16);
    ((void (*)(unsigned char *, void, uint64_t, uint64_t))v21)(v16, 0, 1, v2);
    ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v21)(v13, 1, 1, v2);
    uint64_t v23 = swift_allocObject();
    sub_1C151F2EC();
    *(void *)(v23 + 16) = v24;
    *uint64_t v7 = v23;
    ((void (*)(uint64_t *, void, uint64_t))v22)(v7, *MEMORY[0x1E4FAB868], v2);
    uint64_t v25 = v33;
    ((void (*)(uint64_t *, void, uint64_t))v22)(v33, v30, v2);
    uint64_t v10 = v32;
    sub_1C151796C();
    uint64_t v26 = (void (*)(uint64_t *, uint64_t))v3[1];
    v26(v25, v2);
    v26(v7, v2);
    uint64_t v27 = 0;
  }
  ((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v21)(v10, v27, 1, v2);
  sub_1C15179BC();
  swift_allocObject();
  return sub_1C15179AC();
}

uint64_t sub_1C1357E7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1357EE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1357F2C()
{
  return sub_1C134EA5C();
}

uint64_t sub_1C1357F4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1357F94()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1357FCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C13532B4(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1C1357FE8()
{
  unint64_t result = qword_1EA1AE5B8;
  if (!qword_1EA1AE5B8)
  {
    sub_1BFE829C0(255, &qword_1EA1AE5B0, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver.Errors);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE5B8);
  }
  return result;
}

uint64_t sub_1C135806C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1353490(a1, v2);
  *a2 = result;
  return result;
}

uint64_t sub_1C1358098(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1BFED9E90(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C135811C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C13546D0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64), a2, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void *)(v2 + 144),
           *(void *)(v2 + 152),
           *(void *)(v2 + 160));
}

unint64_t sub_1C135817C()
{
  unint64_t result = qword_1EB860C30;
  if (!qword_1EB860C30)
  {
    sub_1C1354BB0(255, &qword_1EB860C28, MEMORY[0x1E4FABC38], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860C30);
  }
  return result;
}

uint64_t sub_1C1358204(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1358254(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C13582B0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1BFED9E90(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C1358334(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFF67464(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C13583B4(uint64_t a1)
{
  return a1;
}

void sub_1C1358440()
{
  if (!qword_1EB86B4B0)
  {
    sub_1C00BE4B0();
    sub_1C134A8EC((unint64_t *)&unk_1EB863DB0, (void (*)(uint64_t))sub_1C00BE4B0);
    unint64_t v0 = sub_1C152037C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B4B0);
    }
  }
}

void sub_1C13584D4()
{
  if (!qword_1EB86B480)
  {
    sub_1C00BE4B0();
    sub_1C134A8EC(&qword_1EB863DA8, (void (*)(uint64_t))sub_1C00BE4B0);
    unint64_t v0 = sub_1C152012C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B480);
    }
  }
}

void sub_1C1358568(uint64_t a1)
{
}

void sub_1C13585A4()
{
  if (!qword_1EB86B500)
  {
    sub_1C1358638(255);
    sub_1C134A8EC((unint64_t *)&unk_1EB86B488, sub_1C1358638);
    unint64_t v0 = sub_1C152049C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B500);
    }
  }
}

void sub_1C1358638(uint64_t a1)
{
}

uint64_t sub_1C1358674()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13586AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1347B8C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C13586B4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1354BB0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1358734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1C1358794(uint64_t a1)
{
}

void sub_1C13587D0()
{
  if (!qword_1EA1AE5D0)
  {
    sub_1C1358864(255);
    sub_1C134A8EC(&qword_1EA1AE5E8, sub_1C1358864);
    unint64_t v0 = sub_1C152049C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE5D0);
    }
  }
}

void sub_1C1358864(uint64_t a1)
{
}

void sub_1C13588A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1BFF67464(255, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718]);
    sub_1C134A8EC(a4, a5);
    unint64_t v8 = sub_1C152034C();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1358968()
{
  return swift_deallocObject();
}

uint64_t sub_1C13589A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C134750C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C13589A8()
{
  return swift_deallocObject();
}

uint64_t sub_1C13589B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1354BB0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C1358A3C()
{
  if (!qword_1EA1AE618)
  {
    sub_1BFF01514(255, (unint64_t *)&qword_1EA19CA40, (uint64_t (*)(void))sub_1C06081C4, (uint64_t)&type metadata for FormatBackgroundLayoutSolver.HiddenModel, MEMORY[0x1E4FABD50]);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE618);
    }
  }
}

void sub_1C1358ACC()
{
  if (!qword_1EA1AE620)
  {
    sub_1C0FC020C();
    sub_1C134A8EC(&qword_1EA1AE610, (void (*)(uint64_t))sub_1C0FC020C);
    unint64_t v0 = sub_1C152037C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE620);
    }
  }
}

void sub_1C1358B60()
{
  if (!qword_1EA1AE630)
  {
    sub_1C0FC020C();
    sub_1C134A8EC(&qword_1EA1AE628, (void (*)(uint64_t))sub_1C0FC020C);
    unint64_t v0 = sub_1C152012C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE630);
    }
  }
}

void sub_1C1358BF4(uint64_t a1)
{
}

void sub_1C1358C30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    type metadata accessor for FeedHeadline(255);
    sub_1C134A8EC(a4, a5);
    unint64_t v8 = sub_1C152034C();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1358CD4()
{
  if (!qword_1EA1AE640)
  {
    sub_1C1358D68(255);
    sub_1C134A8EC(&qword_1EA1AE650, sub_1C1358D68);
    unint64_t v0 = sub_1C152049C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE640);
    }
  }
}

void sub_1C1358D68(uint64_t a1)
{
}

void sub_1C1358DA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1354BB0(255, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
    sub_1C134A8EC(a4, a5);
    unint64_t v8 = sub_1C152034C();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1358E78@<X0>(uint64_t a1@<X8>)
{
  return sub_1C13477F8(*(void **)(v1 + 16), a1);
}

void sub_1C1358E80(uint64_t a1)
{
}

void sub_1C1358EBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C134A8EC(a4, a5);
    unint64_t v8 = sub_1C152034C();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1358F58()
{
  if (!qword_1EA1AE668)
  {
    sub_1C1358FEC(255);
    sub_1C134A8EC(&qword_1EA1AE678, sub_1C1358FEC);
    unint64_t v0 = sub_1C152049C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE668);
    }
  }
}

void sub_1C1358FEC(uint64_t a1)
{
}

uint64_t sub_1C1359028@<X0>(uint64_t a1@<X8>)
{
  return sub_1C13472AC(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C135903C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v39 = sub_1C151829C();
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1359C54(0, &qword_1EB85AB98, (uint64_t (*)(uint64_t))sub_1C1359C08, MEMORY[0x1E4FAB160]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v37 = (char *)v33 - v7;
  uint64_t v36 = sub_1C151808C();
  uint64_t v40 = *(void *)(v36 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v36).n128_u64[0];
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(*(id *)(v2 + 16), sel_subscriptions, v8);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v13 = v11;
    sub_1C1359C08();
    uint64_t v14 = sub_1C151EBCC();
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = swift_bridgeObjectRetain();
  unint64_t v16 = (unint64_t)sub_1C1359D60(v15, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16 >> 62) {
    int64_t v17 = sub_1C15204BC();
  }
  else {
    int64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v17 == *(void *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    if (v17)
    {
      uint64_t v42 = v12;
      sub_1C0062EF4(0, v17, 0);
      uint64_t v18 = 0;
      uint64_t v34 = (uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
      unint64_t v35 = v16 & 0xC000000000000001;
      v33[1] = v40 + 32;
      uint64_t v19 = v38;
      do
      {
        if (v35) {
          id v20 = (id)MEMORY[0x1C18C7CB0](v18, v16);
        }
        else {
          id v20 = *(id *)(v16 + 8 * v18 + 32);
        }
        unint64_t v21 = v16;
        id v41 = v20;
        uint64_t v22 = qword_1EB85E818;
        id v23 = v20;
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v24 = v39;
        uint64_t v25 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB85AA98);
        uint64_t v26 = (*v34)(v19, v25, v24);
        MEMORY[0x1F4188790](v26);
        v33[-2] = sub_1C1359C08();
        swift_getKeyPath();
        sub_1C151947C();
        sub_1C151807C();

        uint64_t v27 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0062EF4(0, *(void *)(v27 + 16) + 1, 1);
          uint64_t v27 = v42;
        }
        unint64_t v29 = *(void *)(v27 + 16);
        unint64_t v28 = *(void *)(v27 + 24);
        unint64_t v16 = v21;
        if (v29 >= v28 >> 1)
        {
          sub_1C0062EF4(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v42;
        }
        ++v18;
        *(void *)(v27 + 16) = v29 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v27+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v29, v10, v36);
        uint64_t v42 = v27;
      }
      while (v17 != v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    uint64_t v42 = v27;
    sub_1C1359C54(0, &qword_1EB85AB60, (uint64_t (*)(uint64_t))sub_1C0064EB4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    uint64_t v30 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v30);
    v33[-4] = v2;
    v33[-3] = v14;
    v33[-2] = a1;
    sub_1C1359C54(0, &qword_1EB85AB60, (uint64_t (*)(uint64_t))sub_1C0064EB4, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v31 = sub_1C151911C();
    swift_bridgeObjectRelease();
  }
  return v31;
}

void sub_1C13595CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = *(void **)(a5 + 16);
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v14[2] = a6;
  v14[3] = a7;
  v14[4] = sub_1BFD35658;
  v14[5] = v12;
  v16[4] = sub_1C1359D54;
  void v16[5] = v14;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  _OWORD v16[2] = sub_1C1359B6C;
  v16[3] = &block_descriptor_109;
  unint64_t v15 = _Block_copy(v16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v13, sel_subscriptionsWithCompletion_, v15);
  _Block_release(v15);
}

uint64_t sub_1C1359704(unint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v41 = sub_1C151829C();
  uint64_t v10 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1359C54(0, &qword_1EB85AB98, (uint64_t (*)(uint64_t))sub_1C1359C08, MEMORY[0x1E4FAB160]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v39 = (char *)&v32 - v13;
  uint64_t v38 = sub_1C151808C();
  uint64_t v14 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v42 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = a1;
  if (!a1)
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = a2;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v17 = (unint64_t)sub_1C1359D60(v16, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v33 = a5;
    uint64_t v34 = a4;
    if (v18) {
      goto LABEL_5;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
LABEL_20:
    v34(v29);
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_1C15204BC();
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  if (!v18) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C0062EF4(0, v18 & ~(v18 >> 63), 0);
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = 0;
    unint64_t v21 = (uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v35 = v14 + 32;
    unint64_t v36 = v17 & 0xC000000000000001;
    unint64_t v37 = v17;
    uint64_t v22 = v40;
    do
    {
      if (v36) {
        id v23 = (id)MEMORY[0x1C18C7CB0](v20, v17);
      }
      else {
        id v23 = *(id *)(v17 + 8 * v20 + 32);
      }
      id v43 = v23;
      uint64_t v24 = qword_1EB85E818;
      id v25 = v23;
      if (v24 != -1) {
        swift_once();
      }
      uint64_t v26 = v41;
      uint64_t v27 = __swift_project_value_buffer(v41, (uint64_t)qword_1EB85AA98);
      uint64_t v28 = (*v21)(v22, v27, v26);
      MEMORY[0x1F4188790](v28);
      *(&v32 - 2) = sub_1C1359C08();
      swift_getKeyPath();
      sub_1C151947C();
      sub_1C151807C();

      uint64_t v29 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0062EF4(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v44;
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1C0062EF4(v30 > 1, v31 + 1, 1);
        uint64_t v29 = v44;
      }
      ++v20;
      *(void *)(v29 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v29+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v31, v42, v38);
      uint64_t v44 = v29;
      unint64_t v17 = v37;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1359B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1C1359C08();
    uint64_t v2 = sub_1C151EBCC();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1359BE4(uint64_t a1)
{
  return sub_1C135903C(a1);
}

unint64_t sub_1C1359C08()
{
  unint64_t result = qword_1EB85C530;
  if (!qword_1EB85C530)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB85C530);
  }
  return result;
}

void sub_1C1359C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C13595CC(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

void sub_1C1359C54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1359CBC()
{
  return 8;
}

void *sub_1C1359CC8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C1359CD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1359D0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1359D54(unint64_t a1)
{
  return sub_1C1359704(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

id sub_1C1359D60(unint64_t a1, uint64_t a2)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return (id)MEMORY[0x1E4FBC860];
  }
LABEL_17:
  uint64_t v3 = sub_1C15204BC();
  if (!v3) {
    return (id)MEMORY[0x1E4FBC860];
  }
LABEL_3:
  for (unint64_t i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v5 = (id)MEMORY[0x1C18C7CB0](i, a1);
    }
    else
    {
      if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      id v5 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    unint64_t v7 = i + 1;
    if (__OFADD__(i, 1)) {
      goto LABEL_16;
    }
    id result = objc_msgSend(v5, sel_tagID);
    if (!result) {
      break;
    }
    uint64_t v9 = result;
    uint64_t v10 = sub_1C151E62C();
    uint64_t v12 = v11;

    LOBYTE(v9) = sub_1BFF896B4(v10, v12, a2);
    swift_bridgeObjectRelease();
    if (v9)
    {
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    else
    {
    }
    if (v7 == v3) {
      return (id)v14;
    }
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of GapViewStylerType.style(activityIndicatorView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void static FormatCodingVerticalDirectionStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

BOOL static FormatCodingVerticalDirectionStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 4;
}

unint64_t sub_1C1359F20(uint64_t a1)
{
  unint64_t result = sub_1C1359F48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1359F48()
{
  unint64_t result = qword_1EA1AE690;
  if (!qword_1EA1AE690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE690);
  }
  return result;
}

BOOL sub_1C1359FA4(unsigned __int8 *a1)
{
  return *a1 != 4;
}

ValueMetadata *type metadata accessor for FormatCodingVerticalDirectionStrategy()
{
  return &type metadata for FormatCodingVerticalDirectionStrategy;
}

uint64_t sub_1C1359FC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11)
{
  sub_1BFF599E0(a8, (uint64_t)v30);
  *(void *)(v11 + 40) = a2;
  *(void *)(v11 + 48) = a3;
  uint64_t v22 = a5 & 1;
  if (v22) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = a4;
  }
  *(void *)(v11 + 96) = v23;
  *(double *)(v11 + 24) = a10;
  *(double *)(v11 + 32) = a11;
  *(double *)(v11 + 16) = a9;
  sub_1BFF5984C(a7, v11 + 56);
  *(void *)(v11 + 104) = a6;
  sub_1BFC66384((uint64_t)a1, v11 + 120);
  sub_1BFF5A210(0, (unint64_t *)&qword_1EB87A8A0, (uint64_t (*)(uint64_t))sub_1C0065520, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 7955819;
  *(void *)(inited + 40) = 0xE300000000000000;
  sub_1BFC66384((uint64_t)a1, inited + 48);
  swift_retain();
  swift_retain();
  id v25 = a6;
  *(void *)(v11 + 112) = sub_1BFF59AB8(inited);
  sub_1BFF599E0((uint64_t)v30, v11 + 176);
  sub_1BFF59A8C((uint64_t)v30);
  uint64_t v26 = sub_1BFF59D58(a2, v25, (uint64_t)v30, a1, a9, a10, a4, v22, a7);
  uint64_t v28 = v27;
  swift_release();
  swift_release();

  sub_1BFF5E6C8((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)(v11 + 160) = v26;
  *(void *)(v11 + 168) = v28;
  return v11;
}

uint64_t dispatch thunk of FormatImageRequestProviding.formatImageRequests(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1C135A198@<X0>(uint64_t a1@<X8>)
{
  sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v27 - v4;
  sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (int *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for FormatDerivedDataBindingRepeatResult();
  sub_1C135A5A4(v1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C034CF60((uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
  }
  uint64_t result = sub_1C034CFD8((uint64_t)v8, (uint64_t)v12);
  if (*(unsigned char *)(v1 + 45))
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    *uint64_t v15 = 0xD000000000000033;
    v15[1] = 0x80000001C163C6C0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_1C034D0EC((uint64_t)v12);
  }
  uint64_t v16 = *(unsigned __int8 *)(v1 + 44);
  uint64_t v17 = *(unsigned int *)(v1 + 40);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 32);
  uint64_t v20 = *(void *)(v1 + 16);
  if ((v20 & 0x100000000) == 0)
  {
    if ((v19 & 0x100000000) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    if (v19)
    {
      LODWORD(v19) = 0x7FFFFFFF;
      uint64_t v21 = v17 | (v16 << 32);
      if ((v18 & 0x100000000) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      LODWORD(v19) = *v12;
      uint64_t v21 = v17 | (v16 << 32);
      if ((v18 & 0x100000000) != 0) {
        goto LABEL_18;
      }
    }
LABEL_8:
    if ((v21 & 0x100000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  if (v20)
  {
    LODWORD(v20) = 0x7FFFFFFF;
    if ((v19 & 0x100000000) != 0) {
      goto LABEL_14;
    }
  }
  else
  {
    LODWORD(v20) = *v12;
    if ((v19 & 0x100000000) != 0) {
      goto LABEL_14;
    }
  }
LABEL_7:
  uint64_t v21 = v17 | (v16 << 32);
  if ((v18 & 0x100000000) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  if (v18)
  {
    LODWORD(v18) = 0x7FFFFFFF;
    if ((v21 & 0x100000000) == 0) {
      goto LABEL_25;
    }
  }
  else
  {
    LODWORD(v18) = *v12;
    if ((v21 & 0x100000000) == 0) {
      goto LABEL_25;
    }
  }
LABEL_22:
  if (v17) {
    LODWORD(v17) = 0x7FFFFFFF;
  }
  else {
    LODWORD(v17) = *v12;
  }
LABEL_25:
  if (v18 == 0x7FFFFFFF)
  {
    if ((int)v17 <= (int)v20) {
      int v22 = v20;
    }
    else {
      int v22 = v17;
    }
LABEL_36:
    uint64_t v25 = *((void *)v12 + 1);
    sub_1C135A5A4((uint64_t)v12 + *(int *)(v9 + 36), (uint64_t)v5, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    swift_bridgeObjectRetain();
    sub_1C034D0EC((uint64_t)v12);
    *(_DWORD *)a1 = v22;
    *(_DWORD *)(a1 + 4) = v19;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    *(void *)(a1 + 8) = v25;
    *(void *)(a1 + 16) = v26;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    sub_1BFEF6F58((uint64_t)v5, a1 + *(int *)(v9 + 36));
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  uint64_t v23 = *v12 * (uint64_t)(int)v18;
  if (v23 == (int)v23)
  {
    uint64_t v24 = v12[1] * (uint64_t)(int)v18;
    if (v24 == (int)v24)
    {
      if ((int)v23 <= (int)v20) {
        int v22 = v20;
      }
      else {
        int v22 = v23;
      }
      if ((int)v24 < (int)v19) {
        LODWORD(v19) = v24;
      }
      goto LABEL_36;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataBindingRepeatResult()
{
  uint64_t result = qword_1EA1AE698;
  if (!qword_1EA1AE698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C135A5A4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFE79E90(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void *sub_1C135A610(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 30) = *(_OWORD *)((char *)a2 + 30);
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    unint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for FormatSlotDefinitionItemSet();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v14 = v8[2];
      v7[1] = v8[1];
      _OWORD v7[2] = v14;
      uint64_t v15 = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
      {
        uint64_t v16 = v8[4];
        void v7[3] = v15;
        v7[4] = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
      }
      uint64_t v17 = *(int *)(v9 + 36);
      uint64_t v18 = (char *)v7 + v17;
      uint64_t v19 = (char *)v8 + v17;
      uint64_t v20 = sub_1C1518CDC();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1C135A8E0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v4 + *(int *)(v5 + 36);
    uint64_t v8 = sub_1C1518CDC();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v7, v8);
    }
  }
  return result;
}

uint64_t sub_1C135AA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v6 = *v7;
    uint64_t v12 = v7[2];
    v6[1] = v7[1];
    _OWORD v6[2] = v12;
    uint64_t v13 = v7[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13)
    {
      uint64_t v14 = v7[4];
      v6[3] = v13;
      v6[4] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v6 + 3) = *(_OWORD *)(v7 + 3);
    }
    uint64_t v15 = *(int *)(v8 + 36);
    uint64_t v16 = (char *)v6 + v15;
    uint64_t v17 = (char *)v7 + v15;
    uint64_t v18 = sub_1C1518CDC();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1C135ACB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1C034D0EC(v8);
      goto LABEL_7;
    }
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v9 + 24);
    if (*(void *)(v8 + 24))
    {
      if (v20)
      {
        *(void *)(v8 + 24) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v8 + 32) = *(void *)(v9 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        uint64_t v28 = *(int *)(v10 + 36);
        uint64_t v29 = (void *)(v8 + v28);
        unint64_t v30 = (void *)(v9 + v28);
        uint64_t v31 = sub_1C1518CDC();
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
        int v34 = v33(v29, 1, v31);
        int v35 = v33(v30, 1, v31);
        if (v34)
        {
          if (!v35)
          {
            (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v29, v30, v31);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
            return a1;
          }
        }
        else
        {
          if (!v35)
          {
            (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v29, v30, v31);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
        }
        sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v17 = *(void *)(*(void *)(v36 - 8) + 64);
        uint64_t v18 = v29;
        uint64_t v19 = v30;
        goto LABEL_8;
      }
      sub_1C034DE40(v8 + 24);
    }
    else if (v20)
    {
      *(void *)(v8 + 24) = v20;
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    goto LABEL_22;
  }
  if (v14)
  {
LABEL_7:
    sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = (void *)v8;
    uint64_t v19 = (const void *)v9;
LABEL_8:
    memcpy(v18, v19, v17);
    return a1;
  }
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  uint64_t v15 = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(void *)(v8 + 24) = v15;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  }
  uint64_t v21 = *(int *)(v10 + 36);
  uint64_t v22 = (void *)(v8 + v21);
  uint64_t v23 = (const void *)(v9 + v21);
  uint64_t v24 = sub_1C1518CDC();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

_OWORD *sub_1C135B1A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  *(_OWORD *)((char *)a1 + 30) = *(_OWORD *)((char *)a2 + 30);
  uint64_t v5 = *(int *)(a3 + 20);
  long long v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *long long v6 = *v7;
    *(_OWORD *)(v6 + 1) = *(_OWORD *)(v7 + 1);
    *(_OWORD *)(v6 + 3) = *(_OWORD *)(v7 + 3);
    uint64_t v11 = *(int *)(v8 + 36);
    uint64_t v12 = (char *)v6 + v11;
    int v13 = (char *)v7 + v11;
    uint64_t v14 = sub_1C1518CDC();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1C135B3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1C034D0EC((uint64_t)v8);
      goto LABEL_7;
    }
    *uint64_t v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    _OWORD v8[2] = v9[2];
    swift_bridgeObjectRelease();
    uint64_t v25 = v9[3];
    if (v8[3])
    {
      if (v25)
      {
        v8[3] = v25;
        swift_bridgeObjectRelease();
        void v8[4] = v9[4];
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v27 = *(int *)(v10 + 36);
        uint64_t v28 = (char *)v8 + v27;
        uint64_t v29 = (char *)v9 + v27;
        uint64_t v30 = sub_1C1518CDC();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
        int v33 = v32(v28, 1, v30);
        int v34 = v32(v29, 1, v30);
        if (v33)
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
            return a1;
          }
        }
        else
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
        }
        sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v22 = *(void *)(*(void *)(v35 - 8) + 64);
        uint64_t v23 = v28;
        uint64_t v24 = v29;
        goto LABEL_8;
      }
      sub_1C034DE40((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    goto LABEL_17;
  }
  if (v14)
  {
LABEL_7:
    sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
    uint64_t v23 = (char *)v8;
    uint64_t v24 = (char *)v9;
LABEL_8:
    memcpy(v23, v24, v22);
    return a1;
  }
  *uint64_t v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  uint64_t v15 = *(int *)(v10 + 36);
  uint64_t v16 = (char *)v8 + v15;
  size_t v17 = (char *)v9 + v15;
  uint64_t v18 = sub_1C1518CDC();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1BFE79E90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C135B7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C135B80C);
}

uint64_t sub_1C135B80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C135B8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C135B8EC);
}

uint64_t sub_1C135B8EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFE79E90(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C135B9B0()
{
  sub_1BFE79E90(319, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t dispatch thunk of FeedItemDebuggable.debugIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugSourceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugAssetHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedItemDebuggable.debugScoreProfile.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void sub_1C135BADC(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_1BFE4597C();
    uint64_t v10 = (void *)sub_1C151F56C();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v9;
    v11[3] = a1;
    v11[4] = a2;
    v11[5] = a3;
    v16[4] = sub_1C126CEB0;
    void v16[5] = v11;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    _OWORD v16[2] = sub_1BFC9FC68;
    v16[3] = &block_descriptor_110;
    uint64_t v12 = _Block_copy(v16);
    id v13 = v9;
    id v14 = a1;
    swift_retain();
    swift_release();
    id v15 = objc_msgSend(v13, sel_downloadIfNeededWithCompletionQueue_completion_, v10, v12);
    _Block_release(v12);

    swift_unknownObjectRelease();
  }
  else
  {
    a2();
  }
}

void sub_1C135BC40(void *a1, void *a2, void (*a3)(void *))
{
  uint64_t v6 = sub_1C151FB0C();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v6).n128_u64[0];
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_filePath, v8);
  if (v11)
  {
    uint64_t v12 = v11;
    sub_1C151E62C();

    id v13 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    id v14 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithContentsOfFile_, v14);

    if (v15)
    {
      objc_msgSend(a2, sel_size);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E4FAD940], v6);
      uint64_t v16 = (void *)sub_1C151FA7C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      id v17 = v16;
      a3(v16);
    }
  }
}

uint64_t sub_1C135BE1C()
{
  swift_release();
  return swift_deallocObject();
}

void IssueAutomation.init(issue:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v17 = sub_1C151E62C();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(a1, sel_type);
  unsigned __int8 v8 = objc_msgSend(a1, sel_isPaid);
  unsigned __int8 v9 = objc_msgSend(a1, sel_isBundlePaid);
  id v10 = objc_msgSend(a1, sel_sourceChannel);
  id v11 = objc_msgSend(v10, sel_identifier);
  uint64_t v12 = sub_1C151E62C();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(v10, sel_asChannel);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  if (v7 == (id)1) {
    char v16 = 1;
  }
  else {
    char v16 = 2;
  }
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v6;
  if (!v7) {
    char v16 = 0;
  }
  *(unsigned char *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 17) = v8;
  *(unsigned char *)(a2 + 18) = v9;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v14;
  *(unsigned char *)(a2 + 40) = v15 != 0;
}

uint64_t IssueAutomation.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void IssueAutomation.issueType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t IssueAutomation.isPaid.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t IssueAutomation.isBundlePaid.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t IssueAutomation.sourceChannel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t IssueAutomation.automationType.getter()
{
  return 0x6575737369;
}

NewsFeed::IssueAutomation::IssueType_optional __swiftcall IssueAutomation.IssueType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t IssueAutomation.IssueType.rawValue.getter()
{
  uint64_t v1 = 6710384;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E776F6E6B6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6712929;
  }
}

uint64_t sub_1C135C0D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148EE64(*a1, *a2);
}

uint64_t sub_1C135C0DC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C135C16C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C135C1E8()
{
  return sub_1C1520E0C();
}

NewsFeed::IssueAutomation::IssueType_optional sub_1C135C274(Swift::String *a1)
{
  return IssueAutomation.IssueType.init(rawValue:)(*a1);
}

void sub_1C135C280(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6710384;
  unint64_t v3 = 0xE300000000000000;
  if (*v1 != 1)
  {
    uint64_t v2 = 0x6E776F6E6B6E75;
    unint64_t v3 = 0xE700000000000000;
  }
  if (*v1)
  {
    unint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 6712929;
    unint64_t v4 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v4;
}

uint64_t sub_1C135C2CC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C135C32C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C135C37C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7079546575737369;
      break;
    case 2:
      uint64_t result = 0x646961507369;
      break;
    case 3:
      uint64_t result = 0x656C646E75427369;
      break;
    case 4:
      uint64_t result = 0x6843656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C135C440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C135D174(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C135C468(uint64_t a1)
{
  unint64_t v2 = sub_1C135C748();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C135C4A4(uint64_t a1)
{
  unint64_t v2 = sub_1C135C748();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IssueAutomation.encode(to:)(void *a1)
{
  sub_1C135CB00(0, &qword_1EA1AE6A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v12 - v6;
  int v21 = *(unsigned __int8 *)(v1 + 16);
  int v8 = *(unsigned __int8 *)(v1 + 17);
  int v15 = *(unsigned __int8 *)(v1 + 18);
  int v16 = v8;
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 32);
  int v13 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C135C748();
  sub_1C1520F0C();
  LOBYTE(v18) = 0;
  uint64_t v9 = v17;
  sub_1C15207CC();
  if (!v9)
  {
    uint64_t v10 = v14;
    LOBYTE(v18) = v21;
    char v22 = 1;
    sub_1C135C79C();
    sub_1C152080C();
    LOBYTE(v18) = 2;
    sub_1C15207DC();
    LOBYTE(v18) = 3;
    sub_1C15207DC();
    uint64_t v18 = v10;
    uint64_t v19 = v12;
    char v20 = v13;
    char v22 = 4;
    sub_1C0EB7B2C();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C135C748()
{
  unint64_t result = qword_1EA1AE6B0;
  if (!qword_1EA1AE6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6B0);
  }
  return result;
}

unint64_t sub_1C135C79C()
{
  unint64_t result = qword_1EA1AE6B8;
  if (!qword_1EA1AE6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6B8);
  }
  return result;
}

uint64_t IssueAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C135CB00(0, &qword_1EA1AE6C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C135C748();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v21) = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v25 = 1;
  sub_1C135CB64();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  int v24 = v21;
  LOBYTE(v21) = 2;
  int v20 = sub_1C15206AC();
  LOBYTE(v21) = 3;
  int v19 = sub_1C15206AC();
  char v25 = 4;
  sub_1C0EB7AD4();
  sub_1C15206EC();
  uint64_t v14 = (void (**)(char *, uint64_t))(v7 + 8);
  v20 &= 1u;
  char v15 = v19 & 1;
  (*v14)(v9, v6);
  uint64_t v16 = v21;
  uint64_t v17 = v22;
  char v18 = v23;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v24;
  *(unsigned char *)(a2 + 17) = v20;
  *(unsigned char *)(a2 + 18) = v15;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v18;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C135CB00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C135C748();
    unint64_t v7 = a3(a1, &type metadata for IssueAutomation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C135CB64()
{
  unint64_t result = qword_1EA1AE6C8;
  if (!qword_1EA1AE6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6C8);
  }
  return result;
}

unint64_t sub_1C135CBBC()
{
  unint64_t result = qword_1EA1AE6D0;
  if (!qword_1EA1AE6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6D0);
  }
  return result;
}

unint64_t sub_1C135CC14()
{
  unint64_t result = qword_1EB85D148;
  if (!qword_1EB85D148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D148);
  }
  return result;
}

unint64_t sub_1C135CC6C()
{
  unint64_t result = qword_1EB85D140;
  if (!qword_1EB85D140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D140);
  }
  return result;
}

uint64_t sub_1C135CCC0()
{
  return 0x6575737369;
}

uint64_t sub_1C135CCD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IssueAutomation.init(from:)(a1, a2);
}

uint64_t sub_1C135CCEC(void *a1)
{
  return IssueAutomation.encode(to:)(a1);
}

uint64_t initializeWithCopy for IssueAutomation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueAutomation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for IssueAutomation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for IssueAutomation()
{
  return &type metadata for IssueAutomation;
}

unsigned char *storeEnumTagSinglePayload for IssueAutomation.IssueType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C135CF30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueAutomation.IssueType()
{
  return &type metadata for IssueAutomation.IssueType;
}

unsigned char *storeEnumTagSinglePayload for IssueAutomation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C135D034);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueAutomation.CodingKeys()
{
  return &type metadata for IssueAutomation.CodingKeys;
}

unint64_t sub_1C135D070()
{
  unint64_t result = qword_1EA1AE6D8;
  if (!qword_1EA1AE6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6D8);
  }
  return result;
}

unint64_t sub_1C135D0C8()
{
  unint64_t result = qword_1EA1AE6E0;
  if (!qword_1EA1AE6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6E0);
  }
  return result;
}

unint64_t sub_1C135D120()
{
  unint64_t result = qword_1EA1AE6E8;
  if (!qword_1EA1AE6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6E8);
  }
  return result;
}

uint64_t sub_1C135D174(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079546575737369 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C646E75427369 && a2 == 0xEC00000064696150 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6843656372756F73 && a2 == 0xED00006C656E6E61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1C135D3E0()
{
  unint64_t result = qword_1EA1AE6F0;
  if (!qword_1EA1AE6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE6F0);
  }
  return result;
}

uint64_t *sub_1C135D434(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unsigned int v12 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v17, v18, v16);
    *(void *)((v11 + (((unint64_t)a1 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C135D648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, v4);
  uint64_t v6 = *(void *)(v5 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, AssociatedTypeWitness);
  *(void *)((*(void *)(v9 + 40) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 40) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C135D7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, v4);
  uint64_t v6 = *(void *)(v5 + 32);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, AssociatedTypeWitness);
  *(void *)((*(void *)(v9 + 32) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C135D908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, v4);
  uint64_t v6 = *(void *)(v5 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, AssociatedTypeWitness);
  *(void *)((*(void *)(v9 + 24) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C135DA68(int *a1, unsigned int a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(v5 + 64) + v10;
  uint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7;
  if (v11 < a2)
  {
    unint64_t v14 = ((v13 + (v12 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v15 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v11 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v14);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C135DD5CLL);
      case 4:
        int v19 = *(int *)((char *)a1 + v14);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v11 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v11)
  {
    char v23 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48);
    return v23(a1, v6, v4);
  }
  else
  {
    unint64_t v24 = ((unint64_t)a1 + v12) & ~v10;
    if (v9 == v11)
    {
      char v25 = *(uint64_t (**)(unint64_t))(v8 + 48);
      return v25(v24);
    }
    else
    {
      unint64_t v26 = *(void *)((v13 + v24) & 0xFFFFFFFFFFFFFFF8);
      if (v26 >= 0xFFFFFFFF) {
        LODWORD(v26) = -1;
      }
      return (v26 + 1);
    }
  }
}

void sub_1C135DD70(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = v8;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(v7 + 64) + v11;
  uint64_t v14 = *(void *)(v9 + 64) + 7;
  unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v12 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      uint64_t v20 = ~v11;
      switch(v18)
      {
        case 1:
          *((unsigned char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v15) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v15) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v8 == v12)
            {
              char v23 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v7 + 56);
              v23(a1, a2, v8, v28);
            }
            else
            {
              unint64_t v24 = ((unint64_t)a1 + v13) & v20;
              if (v10 == v12)
              {
                char v25 = *(void (**)(unint64_t, uint64_t))(v9 + 56);
                v25(v24, a2);
              }
              else
              {
                unint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0) {
                  uint64_t v27 = a2 ^ 0x80000000;
                }
                else {
                  uint64_t v27 = (a2 - 1);
                }
                *unint64_t v26 = v27;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = a3 - v12 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v21 = v19;
  }
  else {
    int v21 = 1;
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v22;
  }
  switch(v18)
  {
    case 1:
      *((unsigned char *)a1 + v15) = v21;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v15) = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1C135E0ACLL);
    case 4:
      *(_DWORD *)((char *)a1 + v15) = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1C135E0D4()
{
  return sub_1C151811C();
}

uint64_t sub_1C135E1A8()
{
  if ((sub_1C15162AC() & 1) == 0) {
    return 0;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for FeedDeferredCursorGroup();
  swift_getAssociatedConformanceWitness();
  if ((sub_1C151E5CC() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FeedDatabaseGroup();
  return static FeedDatabaseGroup.== infix(_:_:)() & 1;
}

uint64_t sub_1C135E2F8()
{
  return sub_1C135E1A8();
}

void *FeedAdPipelineProcessor.__allocating_init(bannerAdRequester:prerollAdRequester:nativeAdManager:layoutEnvironmentProvider:rendererEnvironment:journal:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6)
{
  unsigned int v12 = (void *)swift_allocObject();
  v12[3] = 0;
  swift_unknownObjectWeakInit();
  v12[4] = a1;
  v12[5] = a2;
  sub_1BFC773DC(a3, (uint64_t)(v12 + 6));
  v12[11] = a4;
  sub_1BFC773DC(a5, (uint64_t)(v12 + 12));
  v12[17] = a6;
  return v12;
}

void *FeedAdPipelineProcessor.init(bannerAdRequester:prerollAdRequester:nativeAdManager:layoutEnvironmentProvider:rendererEnvironment:journal:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6)
{
  v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[4] = a1;
  v6[5] = a2;
  sub_1BFC773DC(a3, (uint64_t)(v6 + 6));
  v6[11] = a4;
  sub_1BFC773DC(a5, (uint64_t)(v6 + 12));
  v6[17] = a6;
  return v6;
}

void *sub_1C135E424(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1C1360378(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t (*sub_1C135E4C8())()
{
  uint64_t v1 = v0;
  BOOL v2 = (void *)*v0;
  sub_1BFEDE21C();
  uint64_t v148 = v3;
  uint64_t v159 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v147 = (char *)&v144 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v146 = (uint64_t)&v144 - v6;
  uint64_t v7 = v2[15];
  uint64_t v8 = v2[11];
  uint64_t v170 = sub_1C151A31C();
  uint64_t v150 = sub_1C151FD8C();
  *(void *)&long long v158 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v161 = (char *)&v144 - v9;
  uint64_t v183 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v149 = (char *)&v144 - v11;
  sub_1C13616CC(0, (unint64_t *)&unk_1EB87CB18, MEMORY[0x1E4F7B098], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v160 = (char *)&v144 - v13;
  uint64_t v162 = sub_1C151DBAC();
  uint64_t v157 = *(void (***)(char *, uint64_t, uint64_t))(v162 - 8);
  MEMORY[0x1F4188790](v162);
  uint64_t v151 = (uint64_t)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_1C151D46C();
  uint64_t v156 = *(void *)(v175 - 8);
  MEMORY[0x1F4188790](v175);
  uint64_t v145 = (char *)&v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v174 = (char *)&v144 - v17;
  uint64_t v197 = sub_1C151677C();
  uint64_t v155 = *(void *)(v197 - 8);
  MEMORY[0x1F4188790](v197);
  uint64_t v173 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v19 = (void (**)(char *, uint64_t))v2[10];
  uint64_t v188 = (Swift::Int *)v2[14];
  *(void *)&long long v219 = v19;
  *((void *)&v219 + 1) = v8;
  unint64_t v220 = v188;
  uint64_t v221 = (void (**)(void, void, void))v7;
  uint64_t v20 = sub_1C151AA8C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_1C151E4DC();
  uint64_t v154 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v195 = (char *)&v144 - v22;
  uint64_t v207 = v20;
  uint64_t v153 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v171 = (char *)&v144 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v187 = (char *)&v144 - v26;
  MEMORY[0x1F4188790](v27);
  unint64_t v203 = (char *)&v144 - v28;
  swift_getWitnessTable();
  uint64_t v164 = v21;
  uint64_t v209 = sub_1C152037C();
  uint64_t v152 = *(void *)(v209 - 8);
  MEMORY[0x1F4188790](v209);
  uint64_t v194 = (char *)&v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v193 = (char *)&v144 - v31;
  uint64_t v32 = (void (**)(char *, char *, uint64_t))v2[13];
  int v33 = (void (**)(char *, uint64_t))v2[16];
  uint64_t v34 = v2[17];
  uint64_t v192 = (Swift::Int *)v2[12];
  *(void *)&long long v219 = v192;
  *((void *)&v219 + 1) = v32;
  uint64_t v191 = v32;
  uint64_t v190 = v33;
  unint64_t v220 = (Swift::Int *)v33;
  uint64_t v221 = (void (**)(void, void, void))v34;
  uint64_t v180 = (uint64_t (**)(void, void))v34;
  uint64_t v35 = sub_1C151A79C();
  uint64_t v168 = (void (**)(char *, uint64_t, uint64_t, uint64_t))swift_getWitnessTable();
  uint64_t v36 = sub_1C151E4DC();
  uint64_t v169 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v167 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v144 - v37);
  swift_getWitnessTable();
  uint64_t v204 = v36;
  uint64_t v205 = sub_1C152037C();
  uint64_t v206 = *(void *)(v205 - 8);
  MEMORY[0x1F4188790](v205);
  uint64_t v166 = (char *)&v144 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v144 - v40;
  uint64_t v201 = sub_1C151BCEC();
  uint64_t v213 = *(void *)(v201 - 8);
  MEMORY[0x1F4188790](v201);
  uint64_t v189 = (void (**)(char *, char *, uint64_t))((char *)&v144 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v198 = (void (*)(void, void))v35;
  uint64_t v186 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v165 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)&v144 - v44);
  uint64_t v45 = v19;
  uint64_t v46 = v183;
  *(void *)&long long v219 = v19;
  *((void *)&v219 + 1) = v183;
  uint64_t v47 = v188;
  unint64_t v220 = v188;
  uint64_t v221 = (void (**)(void, void, void))v7;
  uint64_t v199 = (void (**)(void, void))v7;
  uint64_t v211 = sub_1C151CC9C();
  uint64_t v200 = *(void *)(v211 - 8);
  MEMORY[0x1F4188790](v211);
  uint64_t v49 = (char *)&v144 - v48;
  if (qword_1EB87B058 != -1) {
    swift_once();
  }
  id v50 = (id)qword_1EB93C6F8;
  sub_1C151F38C();
  sub_1C15197BC();

  uint64_t v184 = v45;
  *(void *)&long long v219 = v45;
  *((void *)&v219 + 1) = v46;
  uint64_t v51 = v192;
  unint64_t v220 = v192;
  uint64_t v221 = (void (**)(void, void, void))v191;
  uint64_t v52 = v199;
  uint64_t v222 = v47;
  uint64_t v223 = v199;
  uint64_t v224 = v190;
  uint64_t v225 = v180;
  type metadata accessor for FeedAdLayoutEnvironmentBuilder();
  uint64_t v210 = (char *)v1 + *(void *)(*v1 + 192);
  unint64_t v53 = *(void (**)(char *))(v200 + 16);
  v200 += 16;
  uint64_t v177 = (uint64_t)v53;
  v53(v49);
  uint64_t v185 = (uint64_t)v1 + *(void *)(*v1 + 200);
  unint64_t v54 = *(void (**)(char *, uint64_t))(v186 + 16);
  v186 += 16;
  uint64_t v176 = v54;
  uint64_t v55 = (uint64_t)v165;
  ((void (*)(void (**)(uint64_t, uint64_t, uint64_t)))v54)(v165);
  uint64_t v182 = v1;
  uint64_t v179 = (char *)v1 + *(void *)(*v1 + 216);
  uint64_t v56 = *(void (***)(uint64_t, uint64_t))(v213 + 16);
  v213 += 16;
  uint64_t v178 = v56;
  uint64_t v57 = (uint64_t)v189;
  ((void (*)(void (**)(char *, char *, uint64_t)))v56)(v189);
  uint64_t v212 = sub_1BFFB1964((uint64_t)v49, v55, v57);
  *(void *)&long long v219 = v184;
  *((void *)&v219 + 1) = v46;
  uint64_t v58 = (uint64_t)v191;
  unint64_t v220 = v51;
  uint64_t v221 = (void (**)(void, void, void))v191;
  uint64_t v59 = (uint64_t)v49;
  uint64_t v60 = v188;
  uint64_t v222 = v188;
  uint64_t v223 = v52;
  uint64_t v61 = v180;
  uint64_t v224 = v190;
  uint64_t v225 = v180;
  uint64_t v202 = type metadata accessor for FeedAdGroupDataProvider();
  uint64_t v62 = v210;
  uint64_t v63 = v211;
  ((void (*)(uint64_t, char *, uint64_t))v177)(v59, v210, v211);
  ((void (*)(uint64_t, uint64_t, void (*)(void, void)))v176)(v55, v185, v198);
  uint64_t v64 = (uint64_t)v189;
  ((void (*)(void, char *, uint64_t))v178)(v189, v179, v201);
  uint64_t v181 = FeedAdGroupDataProvider.__allocating_init(blueprint:layoutBlueprint:layoutCollection:adjacentDistance:)(v59, v55, v64, 100.0);
  *(void *)&long long v219 = v184;
  *((void *)&v219 + 1) = v183;
  unint64_t v220 = v192;
  uint64_t v221 = (void (**)(void, void, void))v58;
  uint64_t v222 = v60;
  uint64_t v223 = v199;
  uint64_t v65 = v190;
  uint64_t v224 = v190;
  uint64_t v225 = v61;
  uint64_t v202 = type metadata accessor for FeedBannerAdRequestScheduler();
  uint64_t v66 = v59;
  uint64_t v67 = (void (*)(uint64_t, char *, uint64_t))v177;
  ((void (*)(uint64_t, char *, uint64_t))v177)(v59, v62, v63);
  uint64_t v68 = v55;
  uint64_t v69 = v55;
  uint64_t v70 = v198;
  ((void (*)(uint64_t, uint64_t, void (*)(void, void)))v176)(v69, v185, v198);
  uint64_t v71 = (uint64_t)v189;
  ((void (*)(void, char *, uint64_t))v178)(v189, v179, v201);
  uint64_t v163 = (void (**)(uint64_t, uint64_t))v182[12];
  uint64_t v72 = (uint64_t)v163;
  uint64_t v172 = v182[4];
  uint64_t v73 = v172;
  uint64_t v221 = (void (**)(void, void, void))type metadata accessor for FeedBannerAdRequester();
  uint64_t v222 = (Swift::Int *)&protocol witness table for FeedBannerAdRequester;
  *(void *)&long long v219 = v73;
  uint64_t v74 = v68;
  uint64_t v202 = sub_1BFFB1DD0(v66, v68, v71, v181, v72, &v219);
  uint64_t v75 = v183;
  *(void *)&long long v219 = v184;
  *((void *)&v219 + 1) = v183;
  unint64_t v220 = v192;
  uint64_t v221 = (void (**)(void, void, void))v191;
  uint64_t v222 = v188;
  uint64_t v223 = v199;
  uint64_t v76 = v180;
  uint64_t v224 = v65;
  uint64_t v225 = v180;
  type metadata accessor for FeedPrerollAdRequestScheduler();
  uint64_t v77 = v211;
  v67(v66, v210, v211);
  ((void (*)(uint64_t, uint64_t, void (*)(void, void)))v176)(v74, v185, v70);
  uint64_t v78 = (uint64_t)v189;
  ((void (*)(void, char *, uint64_t))v178)(v189, v179, v201);
  uint64_t v79 = v182;
  uint64_t v80 = v74;
  uint64_t v81 = v181;
  uint64_t v201 = sub_1BFFB1B7C(v66, v80, v78, v181, v182[5]);
  *(void *)&long long v219 = v184;
  *((void *)&v219 + 1) = v75;
  unint64_t v220 = v192;
  uint64_t v221 = (void (**)(void, void, void))v191;
  uint64_t v222 = v188;
  uint64_t v223 = v199;
  uint64_t v224 = v190;
  uint64_t v225 = v76;
  type metadata accessor for FeedNativeAdRequester();
  ((void (*)(uint64_t, char *, uint64_t))v177)(v66, v210, v77);
  sub_1BFC66384((uint64_t)(v79 + 6), (uint64_t)&v219);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v200 = FeedNativeAdRequester.__allocating_init(blueprint:groupDataProvider:adManager:)(v66, v81, &v219);
  sub_1C12BF278();
  uint64_t v177 = swift_allocObject();
  *(void *)(v177 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v82 = (char *)v167;
  sub_1C151F17C();
  uint64_t v83 = v169;
  uint64_t v84 = v166;
  uint64_t v85 = v204;
  (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v166, v82, v204);
  MEMORY[0x1C18C5FE0](&v219, v85);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v85);
  uint64_t v86 = v205;
  *(void *)&v84[*(int *)(v205 + 36)] = v219;
  uint64_t v87 = v206;
  (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v41, v84, v86);
  uint64_t v88 = (Swift::Int *)&v41[*(int *)(v86 + 36)];
  Swift::Int v89 = *v88;
  sub_1C151E4BC();
  uint64_t v90 = (uint64_t)v173;
  uint64_t v91 = v164;
  if (v89 != (void)v219)
  {
    uint64_t v199 = (void (**)(void, void))(v153 + 8);
    uint64_t v191 = (void (**)(char *, char *, uint64_t))(v154 + 16);
    uint64_t v190 = (void (**)(char *, uint64_t))(v154 + 8);
    uint64_t v189 = (void (**)(char *, char *, uint64_t))(v152 + 32);
    uint64_t v97 = (void (**)(uint64_t, uint64_t))(v155 + 8);
    uint64_t v188 = (Swift::Int *)(v152 + 8);
    uint64_t v180 = (uint64_t (**)(void, void))(v156 + 88);
    LODWORD(v179) = *MEMORY[0x1E4F7AB60];
    uint64_t v184 = (void (**)(char *, uint64_t))(v156 + 8);
    uint64_t v169 = v170 - 8;
    uint64_t v168 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v157 + 7);
    uint64_t v167 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v157 + 6);
    uint64_t v165 = (void (**)(uint64_t, uint64_t, uint64_t))(v157 + 4);
    uint64_t v163 = (void (**)(uint64_t, uint64_t))(v157 + 1);
    uint64_t v157 = (void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    uint64_t v156 = v159 + 32;
    uint64_t v155 = v159 + 8;
    uint64_t v166 = (char *)(v158 + 8);
    long long v158 = xmmword_1C1529AE0;
    uint64_t v208 = v41;
    uint64_t v192 = v88;
    uint64_t v178 = v97;
    while (1)
    {
      sub_1C151E4CC();
      swift_getWitnessTable();
      if (v89 >= sub_1C151F11C()) {
        goto LABEL_8;
      }
      FeedNativeAdRequester.processSection(at:)(v89);
      Swift::Int v98 = v89;
      uint64_t v99 = v203;
      uint64_t v213 = v98;
      sub_1C151CCCC();
      uint64_t v100 = v195;
      uint64_t v101 = v207;
      sub_1C151F17C();
      uint64_t v198 = *v199;
      v198(v99, v101);
      uint64_t v102 = v194;
      (*v191)(v194, v100, v91);
      MEMORY[0x1C18C5FE0](&v219, v91);
      (*v190)(v100, v91);
      uint64_t v103 = v209;
      *(void *)&v102[*(int *)(v209 + 36)] = v219;
      uint64_t v104 = v193;
      (*v189)(v193, v102, v103);
      uint64_t v105 = &v104[*(int *)(v103 + 36)];
      uint64_t v106 = *(void *)v105;
      sub_1C151E4BC();
      uint64_t v107 = v197;
      while (v106 != (void)v219)
      {
        sub_1C151E4CC();
        MEMORY[0x1C18BE280](v106, v213);
        sub_1BFEE1198(v90);
        sub_1BFEE19B4(v90);
        sub_1BFEE1E48(v90);
        (*v97)(v90, v107);
        uint64_t v106 = *(void *)v105;
        sub_1C151E4BC();
      }
      ((void (*)(char *, uint64_t))*v188)(v104, v209);
      uint64_t v108 = v213;
      uint64_t v86 = v205;
      uint64_t v87 = v206;
      uint64_t v88 = v192;
      if (v213 < 1) {
        goto LABEL_8;
      }
      sub_1C151CCCC();
      uint64_t v109 = sub_1BFC845BC(0, &qword_1EB872EA8);
      if (swift_dynamicCast()) {
        break;
      }
      uint64_t v218 = 0;
      long long v216 = 0u;
      long long v217 = 0u;
      sub_1BFEE7BD4((uint64_t)&v216);
LABEL_7:
      uint64_t v87 = v206;
LABEL_8:
      Swift::Int v89 = *v88;
      uint64_t v41 = v208;
      sub_1C151E4BC();
      if (v89 == (void)v219) {
        goto LABEL_5;
      }
    }
    uint64_t v185 = v109;
    uint64_t v186 = v108 - 1;
    sub_1BFC773DC(&v216, (uint64_t)&v219);
    uint64_t v110 = (uint64_t)v221;
    uint64_t v111 = v222;
    __swift_project_boxed_opaque_existential_1(&v219, (uint64_t)v221);
    uint64_t v112 = v174;
    ((void (*)(uint64_t, Swift::Int *))v111[2])(v110, v111);
    uint64_t v113 = (uint64_t (*)(char *, uint64_t))*v180;
    uint64_t v114 = v175;
    int v115 = (*v180)(v112, v175);
    uint64_t v116 = *v184;
    (*v184)(v112, v114);
    if (v115 != v179)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      uint64_t v86 = v205;
      uint64_t v87 = v206;
      uint64_t v97 = v178;
      goto LABEL_8;
    }
    uint64_t v176 = v116;
    uint64_t v117 = v203;
    sub_1C151CCCC();
    uint64_t v118 = v207;
    uint64_t v119 = sub_1C151AA2C();
    uint64_t v121 = v120;
    v198(v117, v118);
    sub_1C151CCCC();
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v215 = 0;
      memset(v214, 0, sizeof(v214));
      swift_bridgeObjectRelease();
      sub_1BFEE7BD4((uint64_t)v214);
      uint64_t v86 = v205;
      uint64_t v97 = v178;
      uint64_t v90 = (uint64_t)v173;
LABEL_23:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v219);
      goto LABEL_7;
    }
    sub_1BFC773DC(v214, (uint64_t)&v216);
    uint64_t v122 = v161;
    uint64_t v213 = v121;
    sub_1C151CC0C();
    uint64_t v123 = v170;
    uint64_t v124 = *(void *)(v170 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v170) == 1)
    {
      (*(void (**)(char *, uint64_t))v166)(v122, v150);
      uint64_t v125 = (uint64_t)v160;
      (*v168)(v160, 1, 1, v162);
      uint64_t v97 = v178;
      uint64_t v90 = (uint64_t)v173;
    }
    else
    {
      sub_1C151A30C();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v122, v123);
      uint64_t v125 = (uint64_t)v160;
      uint64_t v126 = v162;
      int v127 = swift_dynamicCast();
      (*v168)((char *)v125, v127 ^ 1u, 1, v126);
      int v128 = (*v167)(v125, 1, v126);
      uint64_t v97 = v178;
      uint64_t v90 = (uint64_t)v173;
      if (v128 != 1)
      {
        (*v165)(v151, v125, v126);
        uint64_t v130 = *((void *)&v217 + 1);
        uint64_t v129 = v218;
        __swift_project_boxed_opaque_existential_1(&v216, *((uint64_t *)&v217 + 1));
        uint64_t v131 = v145;
        (*(void (**)(uint64_t, uint64_t))(v129 + 16))(v130, v129);
        uint64_t v132 = v175;
        int v133 = v113(v131, v175);
        uint64_t v134 = v213;
        if (v133 == v179)
        {
          v176(v131, v132);
          uint64_t v135 = (void *)qword_1EB93C6F8;
          sub_1BFEE7C5C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
          uint64_t v136 = swift_allocObject();
          *(_OWORD *)(v136 + 16) = v158;
          *(void *)(v136 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v136 + 64) = sub_1BFE9C558();
          *(void *)(v136 + 32) = v119;
          *(void *)(v136 + 40) = v134;
          id v137 = v135;
          sub_1C151F38C();
          sub_1C15197BC();

          swift_bridgeObjectRelease();
          uint64_t v138 = v146;
          sub_1C1360574(v151, v146);
          (*v157)(v147, v138, v148);
          unint64_t v139 = *(void *)(v177 + 16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v139 = sub_1BFEDE1D4(0, *(void *)(v139 + 16) + 1, 1, v139);
          }
          unint64_t v141 = *(void *)(v139 + 16);
          unint64_t v140 = *(void *)(v139 + 24);
          if (v141 >= v140 >> 1) {
            unint64_t v139 = sub_1BFEDE1D4(v140 > 1, v141 + 1, 1, v139);
          }
          *(void *)(v139 + 16) = v141 + 1;
          uint64_t v142 = v159;
          uint64_t v143 = v148;
          (*(void (**)(unint64_t, char *, uint64_t))(v159 + 32))(v139+ ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))+ *(void *)(v142 + 72) * v141, v147, v148);
          *(void *)(v177 + 16) = v139;
          (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v146, v143);
          (*v163)(v151, v162);
        }
        else
        {
          (*v163)(v151, v126);
          swift_bridgeObjectRelease();
          v176(v131, v132);
        }
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C13615D0(v125);
LABEL_22:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v216);
    uint64_t v86 = v205;
    goto LABEL_23;
  }
LABEL_5:
  (*(void (**)(char *, uint64_t))(v87 + 8))(v41, v86);
  uint64_t v92 = (uint64_t)v182;
  swift_retain();
  FeedBannerAdRequester.unscheduleRequests(where:)((uint64_t)sub_1C136165C, v92);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v93 = (void *)swift_allocObject();
  uint64_t v94 = v212;
  v93[2] = v92;
  v93[3] = v94;
  uint64_t v95 = v177;
  v93[4] = v202;
  v93[5] = v95;
  v93[6] = v200;
  swift_retain();
  return sub_1C13616BC;
}

uint64_t FeedAdPipelineProcessor.deinit()
{
  sub_1C019B9B4(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return v0;
}

uint64_t FeedAdPipelineProcessor.__deallocating_deinit()
{
  sub_1C019B9B4(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_1C1360378(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void v9[3] = 0;
  swift_unknownObjectWeakInit();
  v9[4] = a1;
  v9[5] = a2;
  sub_1BFC773DC(a3, (uint64_t)(v9 + 6));
  v9[11] = a4;
  sub_1BFC773DC(a5, (uint64_t)v9 + *(void *)(*v9 + 208));
  v9[12] = a6;
  uint64_t v18 = (char *)v9 + *(void *)(*v9 + 192);
  uint64_t v19 = sub_1C151CC9C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a7, v19);
  uint64_t v20 = (char *)v9 + *(void *)(*v9 + 200);
  uint64_t v21 = sub_1C151A79C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a8, v21);
  uint64_t v22 = (char *)v9 + *(void *)(*v9 + 216);
  uint64_t v23 = sub_1C151BCEC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a9, v23);
  return v9;
}

uint64_t sub_1C1360574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  sub_1C13616CC(0, (unint64_t *)&qword_1EB8717D8, (uint64_t (*)(uint64_t))sub_1C002D084, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v59 = (char *)&v46 - v4;
  uint64_t v50 = sub_1C151DBAC();
  uint64_t v5 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEDE21C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  uint64_t v57 = v8;
  MEMORY[0x1F4188790](v7);
  unint64_t v53 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)&v46 - v14;
  uint64_t v15 = sub_1C151D77C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C151D5FC();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v20 = sub_1C151D43C();
  uint64_t v49 = *(void *)(v20 - 8);
  uint64_t v51 = v49;
  uint64_t v52 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v47 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151DB4C();
  sub_1C151D5EC();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4F7ADD8], v15);
  sub_1C151D42C();
  uint64_t v22 = sub_1C151DB4C();
  uint64_t v24 = v23;
  uint64_t v25 = v48;
  uint64_t v26 = a1;
  uint64_t v27 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v48, v26, v50);
  *(uint64_t *)((char *)v13 + v10[6]) = qword_1F1B8A550;
  uint64_t v28 = (char *)v13 + v10[7];
  *(void *)uint64_t v28 = 0;
  v28[8] = 1;
  *(_OWORD *)((char *)v13 + v10[8]) = xmmword_1C1533700;
  *uint64_t v13 = v22;
  v13[1] = v24;
  uint64_t v29 = v10[5];
  uint64_t v46 = v10;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))((char *)v13 + v29, v25, v27);
  sub_1C002D084();
  uint64_t v31 = v30;
  uint64_t v32 = *(void *)(v30 - 8);
  uint64_t v48 = *(char **)(v32 + 56);
  uint64_t v50 = v32 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v59, 1, 1, v30);
  uint64_t v54 = sub_1C1361738(&qword_1EB895030, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  swift_retain();
  int v33 = v53;
  sub_1C151D39C();
  uint64_t v34 = sub_1C151D36C();
  sub_1C1361738(qword_1EA1A80D8, MEMORY[0x1E4F7A930]);
  uint64_t v35 = (void *)swift_allocError();
  uint64_t v37 = v36;
  sub_1C13616CC(0, &qword_1EA1AE6F8, MEMORY[0x1E4F7A9E0], MEMORY[0x1E4FBBE00]);
  uint64_t v38 = v51;
  unint64_t v39 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
  unint64_t v41 = v40 + v39;
  uint64_t v42 = v47;
  uint64_t v43 = v52;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 16))(v41, v47, v52);
  *uint64_t v37 = v40;
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v37, *MEMORY[0x1E4F7A920], v34);
  uint64_t v44 = v56;
  sub_1C151D3BC();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v44);

  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v59, 1, 1, v31);
  swift_retain();
  sub_1C151D39C();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v42, v43);
}

BOOL sub_1C1360C6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = *(void *)(*a2 + 88);
  uint64_t v4 = *(void *)(*a2 + 120);
  uint64_t v5 = sub_1C151A31C();
  uint64_t v13 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v8 = (char *)&v12 - v7;
  sub_1C151D86C();
  uint64_t v9 = *(void *)(v2 + 112);
  uint64_t v14 = *(void *)(v2 + 80);
  uint64_t v15 = v3;
  uint64_t v16 = v9;
  uint64_t v17 = v4;
  sub_1C151CC9C();
  sub_1C151CC0C();
  swift_bridgeObjectRelease();
  BOOL v10 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v8, 1, v5) == 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
  return v10;
}

uint64_t sub_1C1360E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v20[1] = a5;
  uint64_t v7 = sub_1C151A9BC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  BOOL v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C13616CC(0, &qword_1EB871788, MEMORY[0x1E4F7AF80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v20 - v12;
  sub_1BFD18C74((uint64_t)v20 - v12);
  uint64_t v14 = sub_1C151D99C();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  sub_1C151DA6C();
  v20[4] = a1;
  v20[5] = a4 + 16;
  sub_1BFD18D04((void (*)(uint64_t))sub_1C1361730);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + *(void *)(*(void *)a1 + 208)), *(void *)(a1 + *(void *)(*(void *)a1 + 208) + 24));
  sub_1C151B9EC();
  sub_1C151A98C();
  sub_1BFDE7BF8(v15, v16, v17, v18);
  sub_1C12BF290();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C1361078(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result = MEMORY[0x1C18C9C60](a2 + 16);
  if (result)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    swift_beginAccess();
    uint64_t v9 = *a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFD18D84(v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, ObjectType, v7);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C1361144()
{
  sub_1C019B9B4(v0 + 16);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 192);
  uint64_t v2 = sub_1C151CC9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 200);
  uint64_t v4 = sub_1C151A79C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 208));
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 216);
  uint64_t v6 = sub_1C151BCEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t sub_1C13612F8()
{
  sub_1C1361144();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedAdPipelineProcessorTask()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C1361364()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C13613A4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13613E4()
{
  return sub_1C00880D0(*(void *)(v0 + 16));
}

uint64_t method lookup function for FeedAdPipelineProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedAdPipelineProcessor);
}

uint64_t dispatch thunk of FeedAdPipelineProcessor.__allocating_init(bannerAdRequester:prerollAdRequester:nativeAdManager:layoutEnvironmentProvider:rendererEnvironment:journal:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeedAdPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1C136144C()
{
  uint64_t result = sub_1C151CC9C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151A79C();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C151BCEC();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1C1361598()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13615D0(uint64_t a1)
{
  sub_1C13616CC(0, (unint64_t *)&unk_1EB87CB18, MEMORY[0x1E4F7B098], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1C136165C(uint64_t a1)
{
  return sub_1C1360C6C(a1, v1);
}

uint64_t sub_1C1361664()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13616BC()
{
  return sub_1C1360E48(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

void sub_1C13616CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1361730(uint64_t a1)
{
  return sub_1C1361078(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1C1361738(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeedItemFilterIssueMatcher.createApplicator()@<X0>(id (**a1)(id *a1)@<X8>)
{
  uint64_t v3 = type metadata accessor for DateComparison();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = type metadata accessor for FeedItemFilterIssueMatcher();
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C13634E4(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedItemFilterIssueMatcher);
  uint64_t result = swift_getEnumCaseMultiPayload();
  BOOL v10 = sub_1C1361AFC;
  uint64_t v11 = 0;
  switch((int)result)
  {
    case 1:
      uint64_t v14 = *(void *)v8;
      uint64_t result = swift_allocObject();
      uint64_t v11 = result;
      *(void *)(result + 16) = v14;
      uint64_t v13 = sub_1C1362914;
      goto LABEL_11;
    case 2:
      char v15 = v8[16];
      uint64_t result = swift_allocObject();
      uint64_t v11 = result;
      *(_OWORD *)(result + 16) = *(_OWORD *)v8;
      *(unsigned char *)(result + 32) = v15;
      uint64_t v13 = (id (*)(id *))sub_1C0D0AFEC;
      goto LABEL_11;
    case 3:
      sub_1C0D0AF60();
      char v17 = v8[*(int *)(v16 + 48)];
      sub_1C13626EC((uint64_t)v8, (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v11 = swift_allocObject();
      *(unsigned char *)(v11 + 16) = v17;
      uint64_t result = sub_1C13626EC((uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v18);
      uint64_t v13 = (id (*)(id *))sub_1C1362828;
      goto LABEL_11;
    case 4:
      uint64_t v19 = *(void *)v8;
      uint64_t v20 = *((void *)v8 + 1);
      uint64_t result = swift_allocObject();
      uint64_t v11 = result;
      *(void *)(result + 16) = v20;
      *(void *)(result + 24) = v19;
      uint64_t v13 = (id (*)(id *))sub_1C0D0AF58;
      goto LABEL_11;
    case 5:
      uint64_t v11 = *(void *)v8;
      uint64_t v13 = (id (*)(id *))sub_1C0F69D80;
      goto LABEL_11;
    case 6:
      goto LABEL_12;
    case 7:
      uint64_t v11 = 0;
      uint64_t v13 = (id (*)(id *))sub_1C1361B20;
      goto LABEL_11;
    case 8:
      uint64_t v11 = 0;
      uint64_t v13 = (id (*)(id *))sub_1BFE31C54;
      goto LABEL_11;
    case 9:
      uint64_t v11 = 0;
      uint64_t v13 = (id (*)(id *))sub_1BFE31C5C;
      goto LABEL_11;
    default:
      uint64_t v12 = *(void *)v8;
      swift_bridgeObjectRelease();
      uint64_t result = swift_allocObject();
      uint64_t v11 = result;
      *(void *)(result + 16) = v12;
      uint64_t v13 = (id (*)(id *))sub_1C0D0ABDC;
LABEL_11:
      BOOL v10 = v13;
LABEL_12:
      *a1 = v10;
      a1[1] = (id (*)(id *))v11;
      return result;
  }
}

uint64_t type metadata accessor for FeedItemFilterIssueMatcher()
{
  uint64_t result = qword_1EA1AE708;
  if (!qword_1EA1AE708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1C1361AFC(id *a1)
{
  return objc_msgSend(*a1, sel_isANF);
}

BOOL sub_1C1361B20(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_coverImageAssetHandle);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

id sub_1C1361B68(id *a1, void *a2)
{
  id v2 = objc_msgSend(a2, sel_hasSubscriptionToTag_, objc_msgSend(*a1, sel_sourceChannel));
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1C1361BC8(void **a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = *a1;
  if (*(void *)(a2 + 16) || *(void *)(a3 + 16))
  {
    id v8 = objc_msgSend(v7, sel_publisherID);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      if (sub_1BFF896B4(v10, v12, a3))
      {
        a4 = 0;
      }
      else if (*(void *)(a2 + 16))
      {
        a4 = sub_1BFF896B4(v10, v12, a2);
      }
      else
      {
        a4 = 1;
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    a4 = 1;
  }
  return a4 & 1;
}

uint64_t sub_1C1361C94(id *a1, int a2, uint64_t a3)
{
  int v29 = a2;
  uint64_t v5 = type metadata accessor for DateComparison();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&double v16 = MEMORY[0x1F4188790](v15).n128_u64[0];
  unint64_t v18 = &v28[-v17];
  id v19 = objc_msgSend(*a1, sel_publishDate, v16);
  if (!v19)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_6;
  }
  uint64_t v20 = v19;
  sub_1C15162BC();

  uint64_t v21 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32);
  v21(v10, v14, v11);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_6:
    sub_1C1363484((uint64_t)v10, (uint64_t (*)(void))sub_1BFF97C40);
    char v25 = v29;
    return v25 & 1;
  }
  v21(v18, v10, v11);
  sub_1C13634E4(a3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DateComparison);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v21(v14, v7, v11);
  uint64_t v23 = (void (**)(unsigned char *, uint64_t))(v12 + 8);
  if (EnumCaseMultiPayload == 1) {
    char v24 = sub_1C151622C();
  }
  else {
    char v24 = sub_1C151623C();
  }
  char v25 = v24;
  uint64_t v26 = *v23;
  (*v23)(v14, v11);
  v26(v18, v11);
  return v25 & 1;
}

BOOL sub_1C1361F9C(id *a1, void *a2, id a3)
{
  id v5 = objc_msgSend(*a1, sel_identifier);
  if (!v5)
  {
    sub_1C151E62C();
    id v5 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v6 = objc_msgSend(a2, sel_sourceForIssueID_, v5);

  return v6 == a3;
}

uint64_t FeedItemFilterIssueMatcher.debugName(for:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_title);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedItemFilterIssueMatcher.description.getter()
{
  uint64_t v1 = type metadata accessor for DateComparison();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedItemFilterIssueMatcher();
  MEMORY[0x1F4188790](v4);
  id v6 = (id *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C13634E4(v0, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedItemFilterIssueMatcher);
  unint64_t v7 = 0x464E41207349;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v7 = 0xD000000000000014;

      return v7;
    case 2u:
      uint64_t v11 = *v6;
      uint64_t v10 = v6[1];
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      uint64_t v12 = (void *)v11[2];
      swift_bridgeObjectRelease();
      id v17 = v12;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v13 = (void *)v10[2];
      swift_bridgeObjectRelease();
      id v17 = v13;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 3u:
      sub_1C13626EC((uint64_t)v6, (uint64_t)v3);
      unint64_t v18 = 0x656873696C627550;
      unint64_t v19 = 0xEA00000000002064;
      DateComparison.description.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      unint64_t v7 = v18;
      sub_1C1363484((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for DateComparison);
      return v7;
    case 4u:
      id v14 = *v6;

      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      id v17 = v14;
      type metadata accessor for FCOfflineIssueSource(0);
      sub_1C152036C();
      return v18;
    case 5u:
      uint64_t v15 = *v6;
      swift_beginAccess();
      unint64_t v7 = v15[2];
      swift_bridgeObjectRetain();
      swift_release();
      return v7;
    case 6u:
      return v7;
    case 7u:
      return 0x65766F4320736148;
    case 8u:
      return 0x737961776C41;
    case 9u:
      return 0x726576654ELL;
    default:
      uint64_t v8 = *v6;
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000018;
      unint64_t v19 = 0x80000001C162FBE0;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v9 = (void *)v8[2];
      swift_bridgeObjectRelease();
      id v17 = v9;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_5:
      sub_1C151E80C();
      return v18;
  }
}

uint64_t sub_1C13624E8(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_title);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t static FeedItemFilterIssueMatcher.olderThan(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - v7;
  sub_1C0D0AF60();
  uint64_t v10 = *(int *)(v9 + 48);
  sub_1C151630C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_1C15161CC();
  type metadata accessor for DateComparison();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *(unsigned char *)(a1 + v10) = 0;
  type metadata accessor for FeedItemFilterIssueMatcher();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C13626B4()
{
  return swift_deallocObject();
}

uint64_t sub_1C13626EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateComparison();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1362750()
{
  uint64_t v1 = *(void *)(type metadata accessor for DateComparison() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_1C151631C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1C1362828(id *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DateComparison() - 8);
  int v4 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1C1361C94(a1, v4, v5);
}

uint64_t sub_1C136289C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13628DC()
{
  return swift_deallocObject();
}

id sub_1C1362914(id *a1)
{
  return sub_1C1361B68(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C136291C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C1362954(uint64_t a1)
{
  unint64_t result = sub_1C136297C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C136297C()
{
  unint64_t result = qword_1EA1AE700;
  if (!qword_1EA1AE700)
  {
    type metadata accessor for FeedItemFilterIssueMatcher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE700);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for FeedItemFilterIssueMatcher(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v7;
        *((void *)a1 + 2) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = *a2;
        *(void *)a1 = *a2;
        uint64_t v11 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v12 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v12;
        a1[16] = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        type metadata accessor for DateComparison();
        swift_getEnumCaseMultiPayload();
        uint64_t v13 = sub_1C151631C();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        sub_1C0D0AF60();
        a1[*(int *)(v14 + 48)] = *((unsigned char *)a2 + *(int *)(v14 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v15 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v15;
        double v16 = v15;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(void *)a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FeedItemFilterIssueMatcher(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 1u:
      unint64_t v2 = *(void **)a1;
      goto LABEL_10;
    case 3u:
      type metadata accessor for DateComparison();
      uint64_t v3 = sub_1C151631C();
      int v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    case 4u:
      unint64_t v2 = *(void **)(a1 + 8);
LABEL_10:

      break;
    case 5u:
      swift_release();
      break;
    default:
      return;
  }
}

void *initializeWithCopy for FeedItemFilterIssueMatcher(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 1u:
      uint64_t v7 = (void *)*a2;
      *a1 = *a2;
      id v8 = v7;
      goto LABEL_9;
    case 2u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 3u:
      type metadata accessor for DateComparison();
      swift_getEnumCaseMultiPayload();
      uint64_t v10 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
      sub_1C0D0AF60();
      *((unsigned char *)a1 + *(int *)(v11 + 48)) = *((unsigned char *)a2 + *(int *)(v11 + 48));
      goto LABEL_9;
    case 4u:
      uint64_t v12 = (void *)a2[1];
      *a1 = *a2;
      a1[1] = v12;
      id v13 = v12;
      goto LABEL_9;
    case 5u:
      *a1 = *a2;
      swift_retain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for FeedItemFilterIssueMatcher(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1363484((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedItemFilterIssueMatcher);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v6 = (void *)*a2;
        *a1 = *a2;
        id v7 = v6;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        type metadata accessor for DateComparison();
        swift_getEnumCaseMultiPayload();
        uint64_t v8 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        sub_1C0D0AF60();
        *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v10 = (void *)a2[1];
        a1[1] = v10;
        id v11 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *initializeWithTake for FeedItemFilterIssueMatcher(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    type metadata accessor for DateComparison();
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_1C151631C();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
    sub_1C0D0AF60();
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for FeedItemFilterIssueMatcher(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1363484((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedItemFilterIssueMatcher);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      type metadata accessor for DateComparison();
      swift_getEnumCaseMultiPayload();
      uint64_t v6 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      sub_1C0D0AF60();
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C13633AC()
{
  v2[4] = &unk_1C15E6490;
  v2[5] = MEMORY[0x1E4FBAD78] + 64;
  v2[6] = &unk_1C15E64A8;
  uint64_t result = type metadata accessor for DateComparison();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[7] = v2;
    v2[8] = &unk_1C15E64D8;
    v2[9] = MEMORY[0x1E4FBADB0] + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C1363484(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C13634E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t Array<A>.formatCompatible.getter()
{
  if (qword_1EB87BD00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C151928C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB8799C8);
  return Array<A>.formatCompatible(with:)();
}

uint64_t dispatch thunk of FormatVersionable.formatVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_1C1363660()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PuzzleProcessTerminationPolicyDecider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PuzzleProcessTerminationPolicyDecider()
{
  return self;
}

uint64_t FormatAccessibilityLayoutValue.__allocating_init(identifier:value:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t result = swift_allocObject();
  char v7 = *a3;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = v7;
  return result;
}

uint64_t FormatAccessibilityLayoutValue.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatAccessibilityLayoutValue.value.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t FormatAccessibilityLayoutValue.init(identifier:value:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v4 = *a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = v4;
  return v3;
}

uint64_t FormatAccessibilityLayoutValue.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C1363774(uint64_t a1)
{
  uint64_t result = sub_1BFC4D4E8(&qword_1EA1AE790);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C13637B8(void *a1)
{
  a1[1] = sub_1BFC4D4E8(&qword_1EB88D710);
  a1[2] = sub_1BFC4D4E8(&qword_1EB88D708);
  uint64_t result = sub_1BFC4D4E8(&qword_1EA1AE798);
  a1[3] = result;
  return result;
}

uint64_t sub_1C1363844@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C08707AC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C1363870(void *a1)
{
  return FormatAccessibilityLayoutValue.encode(to:)(a1);
}

uint64_t sub_1C1363894(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed30FormatAccessibilityLayoutValueC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t method lookup function for FormatAccessibilityLayoutValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAccessibilityLayoutValue);
}

uint64_t dispatch thunk of FormatAccessibilityLayoutValue.__allocating_init(identifier:value:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for DebugFormatUploadHiddenSection()
{
  return &type metadata for DebugFormatUploadHiddenSection;
}

uint64_t sub_1C13638DC(unint64_t a1, unsigned __int8 *a2, int a3)
{
  int v55 = a3;
  uint64_t v5 = 0x74756F79616CLL;
  uint64_t v54 = type metadata accessor for DebugFormatUploadHiddenReason();
  MEMORY[0x1F4188790](v54);
  char v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for DebugFormatUploadHiddenEntry();
  uint64_t v8 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v49 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (unint64_t *)((char *)&v49 - v14);
  uint64_t v16 = *a2;
  unint64_t v17 = 0xE600000000000000;
  uint64_t v56 = v16;
  switch(v16)
  {
    case 1:
      uint64_t v5 = 0x726564616568;
      break;
    case 2:
      uint64_t v5 = 0x7265746F6F66;
      break;
    case 3:
      unint64_t v17 = 0xE700000000000000;
      uint64_t v5 = 0x6C6C6177796170;
      break;
    case 4:
      unint64_t v17 = 0xE500000000000000;
      uint64_t v5 = 0x656D656874;
      break;
    case 5:
      unint64_t v17 = 0xE700000000000000;
      uint64_t v5 = 0x7972617262696CLL;
      break;
    case 6:
      uint64_t v5 = 0x756F72676B636162;
      unint64_t v17 = 0xEA0000000000646ELL;
      break;
    default:
      break;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1BFE7E4D4(v5, v17);
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    uint64_t v57 = v18;
    unint64_t v58 = v20;
    sub_1BFF27ECC();
    uint64_t v50 = sub_1C151FE5C();
    unint64_t v51 = a1;
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1C029748C(1uLL, v5, v17);
    uint64_t v25 = v24;
    uint64_t v26 = v8;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v31 = v28;
    uint64_t v8 = v26;
    MEMORY[0x1C18C6220](v23, v25, v31, v30);
    swift_bridgeObjectRelease();
    uint64_t v57 = v50;
    unint64_t v58 = v22;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    a1 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v57;
    unint64_t v17 = v58;
  }
  uint64_t v57 = MEMORY[0x1E4FBC860];
  uint64_t v32 = *(void *)(a1 + 16);
  if (v32)
  {
    unint64_t v49 = v17;
    uint64_t v50 = v5;
    uint64_t v33 = *(void *)(v8 + 72);
    unint64_t v51 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v34 = a1 + v51;
    uint64_t v56 = v56;
    while (2)
    {
      sub_1C13640D0(v34, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
      unint64_t v35 = 0xE600000000000000;
      uint64_t v36 = 0x74756F79616CLL;
      switch(*(unsigned char *)(*v15 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role))
      {
        case 1:
          uint64_t v36 = 0x726564616568;
          break;
        case 2:
          uint64_t v36 = 0x7265746F6F66;
          break;
        case 3:
          unint64_t v35 = 0xE700000000000000;
          uint64_t v36 = 0x6C6C6177796170;
          break;
        case 4:
          unint64_t v35 = 0xE500000000000000;
          uint64_t v36 = 0x656D656874;
          break;
        case 5:
          unint64_t v35 = 0xE700000000000000;
          uint64_t v36 = 0x7972617262696CLL;
          break;
        case 6:
          uint64_t v36 = 0x756F72676B636162;
          unint64_t v35 = 0xEA0000000000646ELL;
          break;
        default:
          break;
      }
      unint64_t v37 = 0xE600000000000000;
      uint64_t v38 = 0x74756F79616CLL;
      switch(v56)
      {
        case 1:
          uint64_t v39 = 1684104552;
          goto LABEL_25;
        case 2:
          uint64_t v39 = 1953460070;
LABEL_25:
          if (v36 != (v39 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
            goto LABEL_36;
          }
          goto LABEL_33;
        case 3:
          unint64_t v37 = 0xE700000000000000;
          if (v36 != 0x6C6C6177796170) {
            goto LABEL_36;
          }
          goto LABEL_33;
        case 4:
          unint64_t v37 = 0xE500000000000000;
          if (v36 != 0x656D656874) {
            goto LABEL_36;
          }
          goto LABEL_33;
        case 5:
          unint64_t v37 = 0xE700000000000000;
          uint64_t v38 = 0x7972617262696CLL;
          goto LABEL_32;
        case 6:
          unint64_t v37 = 0xEA0000000000646ELL;
          if (v36 != 0x756F72676B636162) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
LABEL_32:
          if (v36 != v38) {
            goto LABEL_36;
          }
LABEL_33:
          if (v35 == v37)
          {
            swift_bridgeObjectRelease_n();
            sub_1C13640D0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
          }
          else
          {
LABEL_36:
            char v40 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C13640D0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenEntry);
            if ((v40 & 1) == 0)
            {
              sub_1C1364074((uint64_t)v12);
LABEL_13:
              sub_1C1364074((uint64_t)v15);
              goto LABEL_14;
            }
          }
          sub_1C13640D0((uint64_t)&v12[*(int *)(v53 + 20)], (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadHiddenReason);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              swift_bridgeObjectRelease();
              goto LABEL_43;
            case 2u:
            case 4u:

              goto LABEL_39;
            case 3u:
              int v46 = v55;
              uint64_t v47 = sub_1C151928C();
              (*(void (**)(char *, uint64_t))(*(void *)(v47 - 8) + 8))(v7, v47);
              sub_1C1364074((uint64_t)v12);
              if (v46) {
                goto LABEL_13;
              }
              goto LABEL_44;
            case 5u:
LABEL_39:
              int v41 = v55;
              sub_1C1364074((uint64_t)v12);
              if (v41 == 2) {
                goto LABEL_44;
              }
              goto LABEL_13;
            case 6u:
            case 7u:
              goto LABEL_43;
            default:
              sub_1BFD5A4F8(*(void *)v7, *((void *)v7 + 1));
LABEL_43:
              int v42 = v55;
              sub_1C1364074((uint64_t)v12);
              if (v42 != 1) {
                goto LABEL_13;
              }
LABEL_44:
              sub_1C1364138((uint64_t)v15, v52);
              uint64_t v43 = v57;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C05F885C(0, *(void *)(v43 + 16) + 1, 1);
                uint64_t v43 = v57;
              }
              unint64_t v45 = *(void *)(v43 + 16);
              unint64_t v44 = *(void *)(v43 + 24);
              if (v45 >= v44 >> 1)
              {
                sub_1C05F885C(v44 > 1, v45 + 1, 1);
                uint64_t v43 = v57;
              }
              *(void *)(v43 + 16) = v45 + 1;
              sub_1C1364138(v52, v43 + v51 + v45 * v33);
              break;
          }
LABEL_14:
          v34 += v33;
          if (--v32) {
            continue;
          }
          uint64_t v5 = v50;
          break;
      }
      break;
    }
  }
  return v5;
}

uint64_t sub_1C1364074(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatUploadHiddenEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C13640D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1364138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatUploadHiddenEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NewsFeed::AlertShortcutsLimitReached __swiftcall AlertShortcutsLimitReached.init(shortcutLimit:)(NewsFeed::AlertShortcutsLimitReached shortcutLimit)
{
  *(void *)uint64_t v1 = shortcutLimit.shortcutLimit.value;
  *(unsigned char *)(v1 + 8) = shortcutLimit.shortcutLimit.is_nil;
  return shortcutLimit;
}

uint64_t AlertShortcutsLimitReached.title.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t AlertShortcutsLimitReached.message.getter()
{
  if (*(unsigned char *)(v0 + 8))
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v3 = sub_1C1515B8C();
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t v4 = swift_getObjCClassFromMetadata();
    id v5 = objc_msgSend(self, sel_bundleForClass_, v4);
    sub_1C1515B8C();

    sub_1BFFDEB20();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
    uint64_t v7 = sub_1C152088C();
    uint64_t v9 = v8;
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 64) = sub_1BFE9C558();
    *(void *)(v6 + 32) = v7;
    *(void *)(v6 + 40) = v9;
    uint64_t v3 = sub_1C151E66C();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t AlertShortcutsLimitReached.acceptButton.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

uint64_t sub_1C1364520()
{
  return AlertShortcutsLimitReached.title.getter();
}

uint64_t sub_1C136455C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_1C1515B8C();

  return v2;
}

ValueMetadata *type metadata accessor for AlertShortcutsLimitReached()
{
  return &type metadata for AlertShortcutsLimitReached;
}

uint64_t destroy for DebugFormatTestSection(uint64_t a1)
{
  return sub_1C1282B38(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for DebugFormatTestSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C1282C38(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for DebugFormatTestSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C1282C38(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C1282B38(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for DebugFormatTestSection(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C1282B38(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatTestSection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 32) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DebugFormatTestSection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1C1364820(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C1364840(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x3Fu;
  return result;
}

uint64_t sub_1C1364850(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestSection()
{
  return &type metadata for DebugFormatTestSection;
}

void sub_1C1364890(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
}

uint64_t sub_1C1364898(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1C1364B60(*a4) & 1;
}

void sub_1C13648C4(void *a1)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v6 = MEMORY[0x1F4188790](v5).n128_u64[0];
  long long v8 = (char *)&v15 - v7;
  id v9 = objc_msgSend(a1, sel_identifier, v6);
  if (!v9)
  {
    sub_1C151E62C();
    id v9 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v10 = objc_msgSend(self, sel_nss_NewsURLForIssueID_, v9);

  if (v10)
  {
    sub_1C1515F1C();

    uint64_t v11 = sub_1C1515FDC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
  }
  else
  {
    uint64_t v11 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  }
  sub_1C13651BC((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))sub_1BFF00BEC);
  sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
  {
    sub_1BFF51544((uint64_t)v8, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  else
  {
    sub_1C1515E2C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    id v13 = objc_msgSend(self, sel_generalPasteboard);
    uint64_t v14 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setString_, v14);
  }
}

uint64_t sub_1C1364B60(void *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  *(void *)&double v8 = MEMORY[0x1F4188790](v7 - 8).n128_u64[0];
  id v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_identifier, v8);
  if (!v11)
  {
    sub_1C151E62C();
    id v11 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v12 = objc_msgSend(self, sel_nss_NewsURLForIssueID_, v11);

  if (v12)
  {
    sub_1C1515F1C();

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v10, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v10, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) != 1)
    {
      sub_1BFF51544((uint64_t)v10, (uint64_t (*)(void))sub_1BFF00BEC);
      id v13 = *(void **)(v1 + 16);
      id v14 = objc_msgSend(a1, sel_sourceChannel);
      id v15 = objc_msgSend(v13, sel_purchaseProvider);
      if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
      {
        id v16 = objc_msgSend(v14, sel_asSection);
        if (!v16
          || (id v17 = objc_msgSend(v16, sel_parentID),
              swift_unknownObjectRelease(),
              !v17))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
      }
      else
      {
        id v17 = objc_msgSend(v14, sel_identifier);
      }
      uint64_t v19 = sub_1C151E62C();
      uint64_t v21 = v20;

      id v22 = objc_msgSend(v15, sel_purchasedTagIDs);
      uint64_t v23 = sub_1C151EFBC();

      LOBYTE(v22) = sub_1BFF896B4(v19, v21, v23);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22)
      {
        swift_unknownObjectRelease();
        return 1;
      }
LABEL_15:
      uint64_t v24 = (char *)objc_msgSend(objc_msgSend(v13, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      if (objc_getAssociatedObject(v24, v24 + 1))
      {
        sub_1C151FF3C();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v35 = 0u;
        long long v36 = 0u;
      }
      sub_1C13651BC((uint64_t)&v35, (uint64_t)v37, (uint64_t (*)(void))sub_1BFEFE510);
      if (v38)
      {
        sub_1BFFBE2BC();
        if (swift_dynamicCast())
        {
          id v25 = v34;
          id v26 = objc_msgSend(v34, sel_integerValue);
          if (v26 == (id)-1)
          {

            goto LABEL_35;
          }
          unint64_t v27 = (unint64_t)v26;
LABEL_24:
          if (objc_getAssociatedObject(v24, (const void *)~v27))
          {
            sub_1C151FF3C();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v35 = 0u;
            long long v36 = 0u;
          }
          sub_1C13651BC((uint64_t)&v35, (uint64_t)v37, (uint64_t (*)(void))sub_1BFEFE510);
          if (v38)
          {
            sub_1BFFBE2BC();
            if (swift_dynamicCast())
            {
              id v28 = v34;
              unsigned int v29 = objc_msgSend(v28, sel_integerValue);

              if ((v29 ^ v27))
              {
LABEL_35:
                id v30 = objc_msgSend(objc_msgSend(v13, sel_bundleSubscriptionProvider), sel_bundleSubscription);
                swift_unknownObjectRelease();
                id v31 = objc_msgSend(v14, sel_identifier);
                if (!v31)
                {
                  sub_1C151E62C();
                  id v31 = (id)sub_1C151E5EC();
                  swift_bridgeObjectRelease();
                }
                unsigned __int8 v32 = objc_msgSend(v30, sel_containsTagID_, v31);
                swift_unknownObjectRelease();

                if (v32) {
                  return 1;
                }
                return objc_msgSend(a1, sel_isPaid) ^ 1;
              }
LABEL_33:
              swift_unknownObjectRelease();
              return objc_msgSend(a1, sel_isPaid) ^ 1;
            }
          }
          else
          {
            sub_1BFF51544((uint64_t)v37, (uint64_t (*)(void))sub_1BFEFE510);
          }

          if (v27) {
            goto LABEL_35;
          }
          goto LABEL_33;
        }
      }
      else
      {
        sub_1BFF51544((uint64_t)v37, (uint64_t (*)(void))sub_1BFEFE510);
      }
      id v25 = 0;
      unint64_t v27 = 0;
      goto LABEL_24;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
  }
  sub_1BFF51544((uint64_t)v10, (uint64_t (*)(void))sub_1BFF00BEC);
  return 0;
}

uint64_t sub_1C13651BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FeedGroupEmitterCursor.allGroups.getter()
{
  type metadata accessor for FeedCursorGroup();
  return sub_1C151ECAC();
}

uint64_t FeedGroupEmitterCursor.feedMode.getter@<X0>(unsigned char *a1@<X8>)
{
  return FeedServiceConfigType.feedMode.getter(*(void *)(*(void *)v1 + 80), *(void *)(*(void *)v1 + 88), a1);
}

uint64_t sub_1C1365330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151EE9C();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C151EE8C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1C016C760(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C151EDBC();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1C13654AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, char *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v25 = swift_allocObject();
  sub_1C1365B88(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
  return v25;
}

uint64_t FeedGroupEmitterCursor.serviceConfig.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 96));
}

uint64_t FeedGroupEmitterCursor.priorServiceConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.nextServiceConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.cursorGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.databaseGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.priorGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.priorDatabaseGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.nextGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.nextDatabaseGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.pool.getter()
{
  uint64_t v1 = *(void *)v0;
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1C151FD8C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1C151917C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v0[*(void *)(v1 + 240)], v2);
  return sub_1C151907C();
}

uint64_t FeedGroupEmitterCursor.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C13661EC(v1 + *(void *)(*(void *)v1 + 176), a1, (uint64_t (*)(void))type metadata accessor for FeedContext);
}

void FeedGroupEmitterCursor.cachePolicy.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 184));
  uint64_t v3 = *v2;
  LOBYTE(v2) = *((unsigned char *)v2 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = (_BYTE)v2;
}

void FeedGroupEmitterCursor.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 192));
}

uint64_t FeedGroupEmitterCursor.currentDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 200);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedGroupEmitterCursor.isLast.getter()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 208));
}

uint64_t FeedGroupEmitterCursor.slots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.tracker.getter()
{
  return swift_retain();
}

uint64_t FeedGroupEmitterCursor.sidecars.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupEmitterCursor.feedPool.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))((char *)&v13 - v8, &v1[*(void *)(v3 + 240)], v5, v7);
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v9, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_1C0C93B9C();
  swift_allocError();
  *(void *)uint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 5;
  return swift_willThrow();
}

uint64_t sub_1C1365B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, char *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v35 = *a13;
  char v34 = *((unsigned char *)a13 + 8);
  char v36 = *a14;
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(*(void *)v20 + 80) - 8) + 32))(v20 + *(void *)(*(void *)v20 + 96), a1, *(void *)(*(void *)v20 + 80));
  *(void *)(v20 + *(void *)(*(void *)v20 + 104)) = a2;
  *(void *)(v20 + *(void *)(*(void *)v20 + 112)) = a3;
  *(void *)(v20 + *(void *)(*(void *)v20 + 120)) = a4;
  *(void *)(v20 + *(void *)(*(void *)v20 + 136)) = a5;
  *(void *)(v20 + *(void *)(*(void *)v20 + 152)) = a6;
  *(void *)(v20 + *(void *)(*(void *)v20 + 128)) = a7;
  *(void *)(v20 + *(void *)(*(void *)v20 + 144)) = a8;
  *(void *)(v20 + *(void *)(*(void *)v20 + 160)) = a9;
  uint64_t v27 = v20 + *(void *)(*(void *)v20 + 240);
  swift_getAssociatedTypeWitness();
  uint64_t v28 = sub_1C151FD8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a10, v28);
  sub_1C1367998(a11, v20 + *(void *)(*(void *)v20 + 168), (uint64_t (*)(void))sub_1BFEFE510);
  sub_1C1367998(a12, v20 + *(void *)(*(void *)v20 + 176), (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v29 = v20 + *(void *)(*(void *)v20 + 184);
  *(void *)uint64_t v29 = v35;
  *(unsigned char *)(v29 + 8) = v34;
  *(unsigned char *)(v20 + *(void *)(*(void *)v20 + 192)) = v36;
  *(void *)(v20 + *(void *)(*(void *)v20 + 224)) = a15;
  uint64_t v30 = v20 + *(void *)(*(void *)v20 + 200);
  uint64_t v31 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v30, a16, v31);
  *(unsigned char *)(v20 + *(void *)(*(void *)v20 + 208)) = a17;
  *(void *)(v20 + *(void *)(*(void *)v20 + 216)) = a18;
  *(void *)(v20 + *(void *)(*(void *)v20 + 248)) = a19;
  *(void *)(v20 + *(void *)(*(void *)v20 + 232)) = a20;
  return v20;
}

uint64_t FeedGroupEmitterCursor.allDatabaseGroups.getter()
{
  type metadata accessor for FeedDatabaseGroup();
  return sub_1C151ECAC();
}

uint64_t FeedGroupEmitterCursor.waitForGapOnScreen()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C1366050, 0, 0);
}

uint64_t sub_1C1366050()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C13660F8;
  return sub_1C02B25E0();
}

uint64_t sub_1C13660F8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C13661EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1366254()
{
  return swift_deallocObject();
}

uint64_t FeedGroupEmitterCursor.unboxCursor<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - v7;
  sub_1C13661EC(v2 + *(void *)(*(void *)v2 + 168), (uint64_t)&v15, (uint64_t (*)(void))sub_1BFEFE510);
  if (v16)
  {
    sub_1BFF993A8(&v15, v17);
    sub_1BFF6A008((uint64_t)v17, (uint64_t)&v15);
    char v9 = swift_dynamicCast();
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
    if (v9)
    {
      uint64_t v11 = *(void *)(a1 - 8);
      v10(v8, 0, 1, a1);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, a1);
    }
    else
    {
      v10(v8, 1, 1, a1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1C0C93B9C();
      swift_allocError();
      *(_OWORD *)uint64_t v14 = xmmword_1C1557FA0;
      *(unsigned char *)(v14 + 16) = 5;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
  }
  else
  {
    sub_1BFEFDCB0((uint64_t)&v15, (uint64_t (*)(void))sub_1BFEFE510);
    sub_1C0C93B9C();
    swift_allocError();
    *(_OWORD *)uint64_t v13 = xmmword_1C153AB20;
    *(unsigned char *)(v13 + 16) = 5;
    return swift_willThrow();
  }
}

uint64_t FeedGroupEmitterCursor.unboxCursor<A>(_:createInitialCursor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[17] = a5;
  v6[18] = v5;
  v6[15] = a3;
  v6[16] = a4;
  v6[14] = a1;
  uint64_t v8 = sub_1C151FD8C();
  v6[19] = v8;
  v6[20] = *(void *)(v8 - 8);
  v6[21] = swift_task_alloc();
  v6[22] = *(void *)(a5 - 8);
  v6[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C1366608, 0, 0);
}

uint64_t sub_1C1366608()
{
  sub_1C13661EC(*(void *)(v0 + 144) + *(void *)(**(void **)(v0 + 144) + 168), v0 + 48, (uint64_t (*)(void))sub_1BFEFE510);
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 176);
    sub_1BFF993A8((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    sub_1BFF6A008(v0 + 16, v0 + 80);
    int v2 = swift_dynamicCast();
    uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    if (v2)
    {
      uint64_t v5 = *(void *)(v0 + 176);
      uint64_t v4 = *(void *)(v0 + 184);
      uint64_t v6 = *(void *)(v0 + 168);
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v8 = *(void *)(v0 + 112);
      v3(v6, 0, 1, v7);
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      char v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
      v9(v4, v6, v7);
      v9(v8, v4, v7);
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 160);
      uint64_t v15 = *(void *)(v0 + 168);
      uint64_t v17 = *(void *)(v0 + 152);
      v3(v15, 1, 1, *(void *)(v0 + 136));
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      sub_1C0C93B9C();
      swift_allocError();
      *(_OWORD *)uint64_t v18 = xmmword_1C1557FA0;
      *(unsigned char *)(v18 + 16) = 5;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v11 = *(int **)(v0 + 120);
    sub_1BFEFDCB0(v0 + 48, (uint64_t (*)(void))sub_1BFEFE510);
    uint64_t v19 = (uint64_t (*)(uint64_t))((char *)v11 + *v11);
    id v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v12;
    *id v12 = v0;
    v12[1] = sub_1C1366908;
    uint64_t v13 = *(void *)(v0 + 112);
    return v19(v13);
  }
}

uint64_t sub_1C1366908()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t FeedGroupEmitterCursor.unwrappedPool.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v2 = (char *)&v4 - v1;
  sub_1C151917C();
  FeedGroupEmitterCursor.feedPool.getter((uint64_t)v2);
  return sub_1C151907C();
}

uint64_t LazyFeedGroupEmitterCursor.value.getter()
{
  sub_1C1518CEC();
  return v1;
}

uint64_t LazyFeedGroupEmitterCursor.__allocating_init(promise:)(uint64_t a1, uint64_t a2)
{
  return sub_1C1366F30(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1BFCA9C54);
}

uint64_t LazyFeedGroupEmitterCursor.__allocating_init(value:)(uint64_t a1)
{
  return sub_1C1366FE0(a1, (uint64_t (*)(uint64_t))sub_1C13673C0);
}

uint64_t LazyFeedGroupEmitterCursor.init(value:)(uint64_t a1)
{
  return sub_1C1367080(a1, (uint64_t (*)(void))sub_1C13673C0);
}

uint64_t sub_1C1366BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151917C();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  uint64_t result = sub_1C151907C();
  *a3 = result;
  return result;
}

uint64_t ModernLazyFeedGroupEmitterCursor.value.getter(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return MEMORY[0x1F4188298](sub_1C1366CC8, 0, 0);
}

uint64_t sub_1C1366CC8()
{
  uint64_t v1 = v0[5];
  sub_1C1518CEC();
  uint64_t v2 = v0[2];
  v0[6] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  uint64_t v4 = *(void *)(v1 + 80);
  unint64_t v5 = sub_1C017F734();
  *uint64_t v3 = v0;
  v3[1] = sub_1C1366DA0;
  uint64_t v6 = v0[3];
  uint64_t v7 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v6, v2, v4, v5, v7);
}

uint64_t sub_1C1366DA0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0243210;
  }
  else {
    uint64_t v2 = sub_1C1366EB4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C1366EB4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ModernLazyFeedGroupEmitterCursor.__allocating_init(task:)(uint64_t a1, uint64_t a2)
{
  return sub_1C1366F30(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C136758C);
}

uint64_t sub_1C1366F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  swift_allocObject();
  uint64_t v6 = a3(a1, a2);
  swift_release();
  return v6;
}

uint64_t *ModernLazyFeedGroupEmitterCursor.init(task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C136758C(a1, a2);
  swift_release();
  return v2;
}

uint64_t ModernLazyFeedGroupEmitterCursor.__allocating_init(value:)(uint64_t a1)
{
  return sub_1C1366FE0(a1, (uint64_t (*)(uint64_t))sub_1C13676C0);
}

uint64_t sub_1C1366FE0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  swift_allocObject();
  uint64_t v5 = a2(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t ModernLazyFeedGroupEmitterCursor.init(value:)(uint64_t a1)
{
  return sub_1C1367080(a1, (uint64_t (*)(void))sub_1C13676C0);
}

uint64_t sub_1C1367080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *v2;
  uint64_t v5 = a2();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_1C13670FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  sub_1C1367A44(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v12], (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t result = sub_1C1365330((uint64_t)v10, (uint64_t)&unk_1EA1AE7C0, (uint64_t)v13);
  *a3 = result;
  return result;
}

uint64_t sub_1C13672EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C1367310, 0, 0);
}

uint64_t sub_1C1367310()
{
  (*(void (**)(void, void))(*(void *)(v0[4] - 8) + 16))(v0[2], v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t ModernLazyFeedGroupEmitterCursor.deinit()
{
  swift_release();
  return v0;
}

uint64_t *sub_1C13673C0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C151804C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1C151917C();
  sub_1C1518D2C();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, v9, v5);
  sub_1BFDA5AB8();
  v1[2] = sub_1C1518D0C();
  return v1;
}

uint64_t *sub_1C136758C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C151804C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = *(void *)(v6 + 80);
  sub_1C017F734();
  sub_1C151EEBC();
  sub_1C1518D2C();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v8;
  void v9[3] = a1;
  v9[4] = a2;
  swift_retain();
  sub_1BFDA5AB8();
  v3[2] = sub_1C1518D0C();
  return v3;
}

uint64_t *sub_1C13676C0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C151804C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1C017F734();
  sub_1C151EEBC();
  sub_1C1518D2C();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, v9, v5);
  sub_1BFDA5AB8();
  v1[2] = sub_1C1518D0C();
  return v1;
}

uint64_t method lookup function for FeedGroupEmitterCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupEmitterCursor);
}

uint64_t method lookup function for LazyFeedGroupEmitterCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LazyFeedGroupEmitterCursor);
}

uint64_t dispatch thunk of LazyFeedGroupEmitterCursor.__allocating_init(promise:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LazyFeedGroupEmitterCursor.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C13678F8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ModernLazyFeedGroupEmitterCursor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ModernLazyFeedGroupEmitterCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ModernLazyFeedGroupEmitterCursor);
}

uint64_t dispatch thunk of ModernLazyFeedGroupEmitterCursor.__allocating_init(task:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ModernLazyFeedGroupEmitterCursor.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C1367998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1367A04@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C13670FC(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), a1);
}

void sub_1C1367A44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1367AA8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C1367B6C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[3] = v5;
  v6[4] = v4;
  v6[1] = sub_1BFC542F4;
  _OWORD v6[2] = a1;
  return MEMORY[0x1F4188298](sub_1C1367310, 0, 0);
}

uint64_t sub_1C1367C5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1367C94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))();
  *a1 = result;
  return result;
}

uint64_t sub_1C1367CC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1366BA0(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), a1);
}

uint64_t sub_1C1367D08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))();
  *a1 = result;
  return result;
}

uint64_t FormatWebEmbed.selectors.getter()
{
  type metadata accessor for FormatWebEmbed();
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbed.properties.getter()
{
  type metadata accessor for FormatWebEmbed();
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbed.init(url:identifier:actionUrl:article:webArchiveResourceID:dataResourceID:traits:selectors:properties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  uint64_t v43 = a4;
  uint64_t v41 = a8;
  uint64_t v42 = a13;
  uint64_t v40 = a12;
  uint64_t v36 = a10;
  uint64_t v37 = a5;
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *a11;
  HIDWORD(v34) = *((unsigned __int8 *)a11 + 8);
  uint64_t v21 = (int *)type metadata accessor for FormatWebEmbed();
  id v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v22((char *)a9 + v21[5], a1, v17);
  v22(v20, a1, v17);
  if (!a3)
  {
    a2 = sub_1C1515E2C();
    a3 = v23;
  }
  uint64_t v24 = *(void (**)(char *, uint64_t))(v18 + 8);
  v24(v20, v17);
  *a9 = a2;
  a9[1] = a3;
  uint64_t v25 = v43;
  sub_1C0025B10(v43, (uint64_t)a9 + v21[6]);
  *(uint64_t *)((char *)a9 + v21[7]) = v37;
  id v26 = (uint64_t *)((char *)a9 + v21[8]);
  uint64_t v27 = v39;
  *id v26 = v38;
  v26[1] = v27;
  uint64_t v28 = (uint64_t *)((char *)a9 + v21[9]);
  uint64_t v29 = v36;
  *uint64_t v28 = v41;
  v28[1] = v29;
  uint64_t v30 = v35;
  if (HIDWORD(v34)) {
    uint64_t v30 = 0;
  }
  *(uint64_t *)((char *)a9 + v21[10]) = v30;
  uint64_t v31 = MEMORY[0x1E4FBC870];
  if (v40) {
    uint64_t v31 = v40;
  }
  *(uint64_t *)((char *)a9 + v21[11]) = v31;
  if (v42) {
    uint64_t v32 = v42;
  }
  else {
    uint64_t v32 = MEMORY[0x1E4FBC860];
  }
  sub_1C002F608(v25);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v24)(a1, v17);
  *(uint64_t *)((char *)a9 + v21[12]) = v32;
  return result;
}

uint64_t FormatWebEmbed.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatWebEmbed() + 20);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FormatWebEmbed.actionUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatWebEmbed() + 24);
  return sub_1C0025B10(v3, a1);
}

uint64_t FormatWebEmbed.article.getter()
{
  type metadata accessor for FormatWebEmbed();
  return swift_retain();
}

uint64_t FormatWebEmbed.webArchiveResourceID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatWebEmbed() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.dataResourceID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatWebEmbed() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.traits.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatWebEmbed();
  *a1 = *(void *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t sub_1C13681A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatWebEmbed() + 44);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatWebEmbed.selectors.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatWebEmbed() + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatWebEmbed.selectors.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C136827C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for FormatWebEmbed() + 48);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatWebEmbed.properties.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for FormatWebEmbed() + 48);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatWebEmbed.properties.modify())()
{
  return nullsub_1;
}

NewsFeed::FormatWebEmbed::Traits __swiftcall FormatWebEmbed.Traits.init(rawValue:)(NewsFeed::FormatWebEmbed::Traits rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FormatWebEmbed.Traits.liveUpdating.getter(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FormatWebEmbed.Traits.TraitName.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t FormatWebEmbed.Traits.TraitName.rawValue.getter()
{
  return 0x616470556576696CLL;
}

uint64_t sub_1C13683E0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C136843C()
{
  return sub_1C151E77C();
}

uint64_t sub_1C136845C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C13684B4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C1368508(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1C136852C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C136858C()
{
  return sub_1C151EAEC();
}

uint64_t FormatWebEmbed.Traits.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t FormatWebEmbed.Traits.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E8C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v15, v16);
    char v5 = sub_1C15208CC();
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    if ((v5 & 1) == 0)
    {
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
        sub_1C1369ED4();
        sub_1C15208BC();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1C0EE6580(0, v6[2] + 1, 1, v6);
        }
        unint64_t v8 = v6[2];
        unint64_t v7 = v6[3];
        if (v8 >= v7 >> 1) {
          uint64_t v6 = sub_1C0EE6580((void *)(v7 > 1), v8 + 1, 1, v6);
        }
        _OWORD v6[2] = v8 + 1;
        v6[v8 + 4] = 1;
        __swift_project_boxed_opaque_existential_1(v15, v16);
      }
      while ((sub_1C15208CC() & 1) == 0);
    }
    uint64_t v9 = v6[2];
    if (v9)
    {
      uint64_t v10 = 0;
      uint64_t v11 = v6 + 4;
      do
      {
        uint64_t v13 = *v11++;
        uint64_t v12 = v13;
        if ((v13 & ~v10) == 0) {
          uint64_t v12 = 0;
        }
        v10 |= v12;
        --v9;
      }
      while (v9);
    }
    else
    {
      uint64_t v10 = 0;
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatWebEmbed.Traits.encode(to:)(void *a1)
{
  unint64_t v3 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EDC();
  while (v3)
  {
    unint64_t v4 = __clz(__rbit64(v3));
    if (v4 < 0x40)
    {
      v3 ^= 1 << v4;
      if (!v4)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
        sub_1C1369F28();
        sub_1C15208DC();
        if (v2) {
          break;
        }
      }
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1C13688CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatWebEmbed.Traits.init(from:)(a1, a2);
}

uint64_t sub_1C13688E4(void *a1)
{
  return FormatWebEmbed.Traits.encode(to:)(a1);
}

uint64_t FormatWebEmbed.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v66 = type metadata accessor for FormatWebEmbed();
  MEMORY[0x1F4188790](v66);
  uint64_t v65 = (uint64_t *)((char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v67 = (uint64_t)&v50 - v5;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v50 - v10;
  sub_1C136A088(0, &qword_1EB86B668, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v69 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = a1[3];
  uint64_t v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1C1369F7C();
  uint64_t v20 = v71;
  sub_1C1520EBC();
  if (!v20)
  {
    uint64_t v71 = v15;
    uint64_t v63 = v8;
    LOBYTE(v75) = 0;
    sub_1BFEBF4BC((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    sub_1C15206EC();
    uint64_t v21 = v13;
    LOBYTE(v75) = 1;
    uint64_t v22 = sub_1C152060C();
    uint64_t v23 = v69;
    uint64_t v61 = v22;
    uint64_t v62 = v24;
    LOBYTE(v75) = 2;
    sub_1C152065C();
    uint64_t v25 = v68;
    type metadata accessor for FormatArticle();
    LOBYTE(v75) = 3;
    sub_1BFEBF4BC(&qword_1EB874340, (void (*)(uint64_t))type metadata accessor for FormatArticle);
    sub_1C152065C();
    uint64_t v26 = v77;
    LOBYTE(v75) = 4;
    uint64_t v58 = sub_1C152060C();
    uint64_t v60 = v26;
    uint64_t v28 = v71;
    uint64_t v30 = v29;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v71, v18, v21);
    if (v30)
    {
      uint64_t v59 = v30;
    }
    else
    {
      LOBYTE(v75) = 9;
      uint64_t v58 = sub_1C152060C();
      uint64_t v59 = v35;
    }
    uint64_t v31 = v28;
    uint64_t v32 = v21;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v23 + 8);
    v33(v31, v32);
    LOBYTE(v75) = 5;
    uint64_t v57 = sub_1C152060C();
    uint64_t v71 = v34;
    LOBYTE(v74) = 6;
    sub_1C1369FD0();
    sub_1C152065C();
    uint64_t v56 = v75;
    int v55 = v76;
    sub_1BFEBC4B4();
    LOBYTE(v73) = 7;
    sub_1BFE38978((unint64_t *)&qword_1EB87A020);
    sub_1C152065C();
    uint64_t v53 = v74;
    sub_1BFE9E040(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
    char v72 = 8;
    sub_1BFDB2558((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
    uint64_t v54 = v32;
    sub_1C152065C();
    uint64_t v52 = v18;
    uint64_t v50 = v73;
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v36((char *)v65 + *(int *)(v66 + 20), v11, v6);
    unint64_t v51 = v11;
    v36(v63, v11, v6);
    if (!v62)
    {
      uint64_t v61 = sub_1C1515E2C();
      uint64_t v62 = v37;
    }
    uint64_t v38 = *(void (**)(char *, uint64_t))(v68 + 8);
    v38(v63, v6);
    uint64_t v39 = (uint64_t)v65;
    uint64_t v40 = (int *)v66;
    uint64_t v41 = v62;
    *uint64_t v65 = v61;
    *(void *)(v39 + 8) = v41;
    uint64_t v42 = v67;
    sub_1C0025B10(v67, v39 + v40[6]);
    *(void *)(v39 + v40[7]) = v60;
    uint64_t v43 = (uint64_t *)(v39 + v40[8]);
    uint64_t v44 = v59;
    *uint64_t v43 = v58;
    v43[1] = v44;
    unint64_t v45 = (uint64_t *)(v39 + v40[9]);
    int v46 = v71;
    *unint64_t v45 = v57;
    v45[1] = (uint64_t)v46;
    uint64_t v47 = v56;
    if (v55) {
      uint64_t v47 = 0;
    }
    *(void *)(v39 + v40[10]) = v47;
    uint64_t v48 = MEMORY[0x1E4FBC870];
    if (v53) {
      uint64_t v48 = v53;
    }
    *(void *)(v39 + v40[11]) = v48;
    if (v50) {
      uint64_t v49 = v50;
    }
    else {
      uint64_t v49 = MEMORY[0x1E4FBC860];
    }
    sub_1C002F608(v42);
    v38(v51, v6);
    *(void *)(v39 + v40[12]) = v49;
    sub_1C136A024(v39, v64);
    v33(v52, v54);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
}

uint64_t FormatWebEmbed.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C136A088(0, &qword_1EB86B8A0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1369F7C();
  sub_1C1520F0C();
  uint64_t v10 = (int *)type metadata accessor for FormatWebEmbed();
  LOBYTE(v12) = 0;
  sub_1C1515FDC();
  sub_1BFEBF4BC((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
  sub_1C152080C();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1C15207CC();
    LOBYTE(v12) = 2;
    sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C136A0EC();
    sub_1C152080C();
    *(void *)&long long v12 = *(void *)(v3 + v10[7]);
    char v13 = 3;
    sub_1BFF2EDE8(0, &qword_1EB85D0F8, (void (*)(uint64_t))type metadata accessor for FormatArticle);
    sub_1C136A1A8();
    sub_1C152080C();
    long long v12 = *(_OWORD *)(v3 + v10[8]);
    char v13 = 4;
    sub_1BFE9E040(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1BFE5034C();
    sub_1C152080C();
    long long v12 = *(_OWORD *)(v3 + v10[9]);
    char v13 = 5;
    sub_1C152080C();
    *(void *)&long long v12 = *(void *)(v3 + v10[10]);
    char v13 = 6;
    sub_1C136A264();
    sub_1C152080C();
    if (*(void *)(*(void *)(v3 + v10[11]) + 16))
    {
      *(void *)&long long v12 = *(void *)(v3 + v10[11]);
      char v13 = 7;
      sub_1BFEBC4B4();
      sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
      sub_1C152080C();
    }
    if (*(void *)(*(void *)(v3 + v10[12]) + 16))
    {
      *(void *)&long long v12 = *(void *)(v3 + v10[12]);
      char v13 = 8;
      sub_1BFE9E040(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
      sub_1BFDB2558((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
      sub_1C152080C();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C1369748(char a1)
{
  unint64_t result = 7107189;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0x72556E6F69746361;
      break;
    case 3:
      unint64_t result = 0x656C6369747261;
      break;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x6F73655261746164;
      break;
    case 6:
      unint64_t result = 0x737469617274;
      break;
    case 7:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 8:
      unint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C1369894()
{
  return sub_1C1369748(*v0);
}

uint64_t sub_1C136989C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C136B894(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C13698C4(uint64_t a1)
{
  unint64_t v2 = sub_1C1369F7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1369900(uint64_t a1)
{
  unint64_t v2 = sub_1C1369F7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C136993C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWebEmbed.init(from:)(a1, a2);
}

uint64_t sub_1C1369954(void *a1)
{
  return FormatWebEmbed.encode(to:)(a1);
}

void FormatWebEmbed.feedItemTraits.getter(void *a1@<X8>)
{
  *a1 = qword_1F1B8A5B0;
}

uint64_t _s8NewsFeed14FormatWebEmbedV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v53 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0092B34();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v50 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v50 - v18;
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    LOBYTE(v20) = 0;
    if ((sub_1C1520A9C() & 1) == 0) {
      return v20 & 1;
    }
  }
  uint64_t v21 = type metadata accessor for FormatWebEmbed();
  if ((MEMORY[0x1C18BDA40]((char *)a1 + *(int *)(v21 + 20), (char *)a2 + *(int *)(v21 + 20)) & 1) == 0)
  {
LABEL_11:
    LOBYTE(v20) = 0;
    return v20 & 1;
  }
  sub_1C0025B10((uint64_t)a1 + *(int *)(v21 + 24), (uint64_t)v19);
  unint64_t v51 = a2;
  uint64_t v52 = (int *)v21;
  sub_1C0025B10((uint64_t)a2 + *(int *)(v21 + 24), (uint64_t)v16);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1C0025B10((uint64_t)v19, (uint64_t)v10);
  sub_1C0025B10((uint64_t)v16, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_1C002F608((uint64_t)v16);
    sub_1C002F608((uint64_t)v19);
    if (v23(v22, 1, v4) == 1)
    {
      sub_1C002F608((uint64_t)v10);
      goto LABEL_14;
    }
LABEL_10:
    sub_1C01D6DB8((uint64_t)v10);
    goto LABEL_11;
  }
  sub_1C0025B10((uint64_t)v10, (uint64_t)v13);
  if (v23(v22, 1, v4) == 1)
  {
    sub_1C002F608((uint64_t)v16);
    sub_1C002F608((uint64_t)v19);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v4);
    goto LABEL_10;
  }
  uint64_t v25 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v6, v22, v4);
  sub_1BFEBF4BC((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
  char v26 = sub_1C151E5CC();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v25 + 8);
  v27(v6, v4);
  sub_1C002F608((uint64_t)v16);
  sub_1C002F608((uint64_t)v19);
  v27(v13, v4);
  sub_1C002F608((uint64_t)v10);
  if ((v26 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_14:
  uint64_t v28 = v51;
  uint64_t v29 = v52[7];
  uint64_t v20 = *(void *)((char *)v51 + v29);
  if (*(void *)((char *)a1 + v29))
  {
    if (!v20) {
      return v20 & 1;
    }
    type metadata accessor for FormatArticle();
    swift_retain();
    uint64_t v30 = swift_retain();
    char v31 = static FormatArticle.== infix(_:_:)(v30, v20);
    swift_release();
    swift_release();
    if ((v31 & 1) == 0) {
      goto LABEL_11;
    }
  }
  else if (v20)
  {
    goto LABEL_11;
  }
  uint64_t v32 = v52[8];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = *(void *)((char *)a1 + v32 + 8);
  uint64_t v35 = (void *)((char *)v28 + v32);
  uint64_t v36 = v35[1];
  if (v34)
  {
    if (!v36) {
      goto LABEL_11;
    }
    if (*v33 != *v35 || v34 != v36)
    {
      LOBYTE(v20) = 0;
      if ((sub_1C1520A9C() & 1) == 0) {
        return v20 & 1;
      }
    }
  }
  else if (v36)
  {
    goto LABEL_11;
  }
  uint64_t v37 = v52[9];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = *(void *)((char *)a1 + v37 + 8);
  uint64_t v40 = (void *)((char *)v28 + v37);
  uint64_t v41 = v40[1];
  if (!v39)
  {
    if (!v41) {
      goto LABEL_33;
    }
    goto LABEL_11;
  }
  if (!v41) {
    goto LABEL_11;
  }
  if (*v38 == *v40 && v39 == v41 || (LOBYTE(v20) = 0, (sub_1C1520A9C() & 1) != 0))
  {
LABEL_33:
    uint64_t v42 = v52;
    if (*(void *)((char *)a1 + v52[10]) == *(void *)((char *)v28 + v52[10]))
    {
      uint64_t v43 = v52[11];
      uint64_t v44 = *(void *)((char *)a1 + v43);
      uint64_t v45 = *(void *)((char *)v28 + v43);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v46 = sub_1BFEFAE14(v44, v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v46)
      {
        uint64_t v47 = v42[12];
        uint64_t v48 = *(void *)((char *)a1 + v47);
        uint64_t v49 = *(void *)((char *)v28 + v47);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v20) = sub_1C00E57C0(v48, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v20 & 1;
      }
    }
    goto LABEL_11;
  }
  return v20 & 1;
}

unint64_t sub_1C1369ED4()
{
  unint64_t result = qword_1EB865B88;
  if (!qword_1EB865B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B88);
  }
  return result;
}

unint64_t sub_1C1369F28()
{
  unint64_t result = qword_1EB862D88;
  if (!qword_1EB862D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862D88);
  }
  return result;
}

unint64_t sub_1C1369F7C()
{
  unint64_t result = qword_1EB865B68;
  if (!qword_1EB865B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B68);
  }
  return result;
}

unint64_t sub_1C1369FD0()
{
  unint64_t result = qword_1EB85B768;
  if (!qword_1EB85B768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B768);
  }
  return result;
}

uint64_t sub_1C136A024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatWebEmbed();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C136A088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1369F7C();
    unint64_t v7 = a3(a1, &type metadata for FormatWebEmbed.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C136A0EC()
{
  unint64_t result = qword_1EB85AA30;
  if (!qword_1EB85AA30)
  {
    sub_1BFF2EDE8(255, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1BFEBF4BC((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AA30);
  }
  return result;
}

unint64_t sub_1C136A1A8()
{
  unint64_t result = qword_1EB85D100;
  if (!qword_1EB85D100)
  {
    sub_1BFF2EDE8(255, &qword_1EB85D0F8, (void (*)(uint64_t))type metadata accessor for FormatArticle);
    sub_1BFEBF4BC(&qword_1EB85D0F0, (void (*)(uint64_t))type metadata accessor for FormatArticle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D100);
  }
  return result;
}

unint64_t sub_1C136A264()
{
  unint64_t result = qword_1EB85B758;
  if (!qword_1EB85B758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B758);
  }
  return result;
}

unint64_t sub_1C136A2BC()
{
  unint64_t result = qword_1EA1AE7C8;
  if (!qword_1EA1AE7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE7C8);
  }
  return result;
}

uint64_t sub_1C136A310(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C136A440(a1, a2, a3, (uint64_t (*)(void))sub_1C1369ED4, (uint64_t (*)(void))sub_1C1369F28, (uint64_t (*)(void))sub_1C136A2BC);
}

unint64_t sub_1C136A354()
{
  unint64_t result = qword_1EA1AE7D0;
  if (!qword_1EA1AE7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE7D0);
  }
  return result;
}

unint64_t sub_1C136A3AC()
{
  unint64_t result = qword_1EA1AE7D8;
  if (!qword_1EA1AE7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE7D8);
  }
  return result;
}

uint64_t sub_1C136A400(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C136A440(a1, a2, a3, (uint64_t (*)(void))sub_1C1369FD0, (uint64_t (*)(void))sub_1C136A264, (uint64_t (*)(void))sub_1C136A494);
}

uint64_t sub_1C136A440(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C136A494()
{
  unint64_t result = qword_1EB85B760;
  if (!qword_1EB85B760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B760);
  }
  return result;
}

unint64_t sub_1C136A4F0()
{
  unint64_t result = qword_1EB85B770;
  if (!qword_1EB85B770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B770);
  }
  return result;
}

uint64_t sub_1C136A544(void *a1)
{
  a1[1] = sub_1BFEBF4BC(&qword_1EB85B7D8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed);
  a1[2] = sub_1BFEBF4BC((unint64_t *)&unk_1EB85B7C8, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed);
  uint64_t result = sub_1BFEBF4BC(&qword_1EA1AE7E0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed);
  a1[3] = result;
  return result;
}

uint64_t sub_1C136A5F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C136A63C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for FormatWebEmbed() + 48));
  return swift_bridgeObjectRetain();
}

void *initializeBufferWithCopyOfBuffer for FormatWebEmbed(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)&a2[a3[7]];
    uint64_t v20 = (void *)((char *)v4 + v19);
    uint64_t v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *uint64_t v20 = *(void *)v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    uint64_t v25 = (void *)((char *)v4 + v23);
    char v26 = &a2[v23];
    uint64_t v27 = *((void *)v26 + 1);
    void *v25 = *(void *)v26;
    v25[1] = v27;
    *(void *)((char *)v4 + v24) = *(void *)&a2[v24];
    uint64_t v28 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)&a2[a3[11]];
    *(void *)((char *)v4 + v28) = *(void *)&a2[v28];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FormatWebEmbed(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatWebEmbed(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)&a2[a3[7]];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *uint64_t v18 = *(void *)v19;
  v18[1] = v20;
  uint64_t v21 = a3[9];
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = &a2[v21];
  uint64_t v25 = *((void *)v24 + 1);
  *uint64_t v23 = *(void *)v24;
  v23[1] = v25;
  *(void *)((char *)a1 + v22) = *(void *)&a2[v22];
  uint64_t v26 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)&a2[a3[11]];
  *(void *)((char *)a1 + v26) = *(void *)&a2[v26];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatWebEmbed(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a2 + v12;
  uint64_t v14 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v27 = a3;
  uint64_t v28 = (char *)a1 + v12;
  LODWORD(a3) = v14();
  int v15 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v13, 1, v9);
  if (a3)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v13, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
      goto LABEL_9;
    }
    sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    size_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    uint64_t v18 = v28;
  }
  else
  {
    if (!v15)
    {
      v11(v28, v13, v9);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
    sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    size_t v17 = *(void *)(*(void *)(v19 - 8) + 64);
    uint64_t v18 = v28;
  }
  memcpy(v18, v13, v17);
LABEL_9:
  *(void *)((char *)a1 + v27[7]) = *(void *)((char *)a2 + v27[7]);
  swift_retain();
  swift_release();
  uint64_t v20 = v27[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v27[9];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v27[10]) = *(void *)((char *)a2 + v27[10]);
  *(void *)((char *)a1 + v27[11]) = *(void *)((char *)a2 + v27[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v27[12]) = *(void *)((char *)a2 + v27[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatWebEmbed(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)&a2[a3[7]];
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)&a2[v16];
  uint64_t v17 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)&a2[a3[9]];
  *(void *)((char *)a1 + v17) = *(void *)&a2[v17];
  uint64_t v18 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)&a2[a3[11]];
  *(void *)((char *)a1 + v18) = *(void *)&a2[v18];
  return a1;
}

void *assignWithTake for FormatWebEmbed(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a2 + v13;
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v33 = a3;
  uint64_t v34 = (char *)a1 + v13;
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (a3)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v34, v14, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v34, 0, 1, v10);
      goto LABEL_9;
    }
    sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    size_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
    uint64_t v19 = v34;
  }
  else
  {
    if (!v16)
    {
      v12(v34, v14, v10);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v34, v10);
    sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    size_t v18 = *(void *)(*(void *)(v20 - 8) + 64);
    uint64_t v19 = v34;
  }
  memcpy(v19, v14, v18);
LABEL_9:
  *(void *)((char *)a1 + v33[7]) = *(void *)((char *)a2 + v33[7]);
  swift_release();
  uint64_t v21 = v33[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v33[9];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v33[11];
  *(void *)((char *)a1 + v33[10]) = *(void *)((char *)a2 + v33[10]);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v33[12]) = *(void *)((char *)a2 + v33[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatWebEmbed(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C136B300);
}

uint64_t sub_1C136B300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FormatWebEmbed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C136B45C);
}

uint64_t sub_1C136B45C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1BFF2EDE8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbed.Traits()
{
  return &type metadata for FormatWebEmbed.Traits;
}

unsigned char *storeEnumTagSinglePayload for FormatWebEmbed.Traits.TraitName(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C136B650);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbed.Traits.TraitName()
{
  return &type metadata for FormatWebEmbed.Traits.TraitName;
}

unsigned char *storeEnumTagSinglePayload for FormatWebEmbed.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C136B754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbed.CodingKeys()
{
  return &type metadata for FormatWebEmbed.CodingKeys;
}

unint64_t sub_1C136B790()
{
  unint64_t result = qword_1EA1AE7E8;
  if (!qword_1EA1AE7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE7E8);
  }
  return result;
}

unint64_t sub_1C136B7E8()
{
  unint64_t result = qword_1EB865B78;
  if (!qword_1EB865B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B78);
  }
  return result;
}

unint64_t sub_1C136B840()
{
  unint64_t result = qword_1EB865B70;
  if (!qword_1EB865B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B70);
  }
  return result;
}

uint64_t sub_1C136B894(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72556E6F69746361 && a2 == 0xE90000000000006CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C6369747261 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C163CD80 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F73655261746164 && a2 == 0xEE00444965637275 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C163CDA0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_1C136BCC0()
{
  unint64_t result = qword_1EB865B80;
  if (!qword_1EB865B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865B80);
  }
  return result;
}

uint64_t static Commands.URL.openURL.getter()
{
  if (qword_1EB87B130 != -1) {
    swift_once();
  }
  return swift_retain();
}

ValueMetadata *type metadata accessor for Commands.URL()
{
  return &type metadata for Commands.URL;
}

uint64_t destroy for DebugPersonalizationSection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugPersonalizationSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugPersonalizationSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugPersonalizationSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugPersonalizationSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugPersonalizationSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationSection()
{
  return &type metadata for DebugPersonalizationSection;
}

uint64_t sub_1C136C004(char *a1, char *a2)
{
  return sub_1C147E498(*a1, *a2);
}

uint64_t sub_1C136C010()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C136C094()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C136C104()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C136C184@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C136C1E4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000014;
  if (*v1) {
    unint64_t v2 = 0x736D657469;
  }
  unint64_t v3 = 0x80000001C1600C40;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unsigned char *storeEnumTagSinglePayload for DebugPersonalizationSection.Descriptor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C136C2F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugPersonalizationSection.Descriptor()
{
  return &type metadata for DebugPersonalizationSection.Descriptor;
}

unint64_t sub_1C136C32C()
{
  unint64_t result = qword_1EA1AE7F0;
  if (!qword_1EA1AE7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE7F0);
  }
  return result;
}

uint64_t static FormatSportsEventBinding.DateTime.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1C136C388()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C136C3E0()
{
  return sub_1C151E77C();
}

uint64_t sub_1C136C3FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C136C450@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C136C4A4(void *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001C1601090;
}

uint64_t sub_1C136C4C4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C136C524()
{
  return sub_1C151EAEC();
}

void sub_1C136C574(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B8E8;
}

uint64_t FormatSportsEventBinding.DateTime.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatSportsEventBinding.DateTime.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C136C5F4()
{
  unint64_t result = qword_1EA1AE7F8;
  if (!qword_1EA1AE7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE7F8);
  }
  return result;
}

unint64_t sub_1C136C648(uint64_t a1)
{
  unint64_t result = sub_1C136C670();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C136C670()
{
  unint64_t result = qword_1EA1AE800;
  if (!qword_1EA1AE800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE800);
  }
  return result;
}

unint64_t sub_1C136C6C4(void *a1)
{
  a1[1] = sub_1C0882CDC();
  a1[2] = sub_1C08FC87C();
  unint64_t result = sub_1C136C5F4();
  a1[3] = result;
  return result;
}

uint64_t sub_1C136C6FC(void *a1)
{
  return FormatSportsEventBinding.DateTime.init(from:)(a1);
}

uint64_t sub_1C136C714(void *a1)
{
  return FormatSportsEventBinding.DateTime.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.DateTime()
{
  return &type metadata for FormatSportsEventBinding.DateTime;
}

unsigned char *_s8DateTimeOwst_4_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C136C7DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s8DateTimeO10CodingTypeOMa_2()
{
  return &_s8DateTimeO10CodingTypeON_2;
}

unint64_t sub_1C136C818()
{
  unint64_t result = qword_1EA1AE808;
  if (!qword_1EA1AE808)
  {
    sub_1C136C870();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE808);
  }
  return result;
}

void sub_1C136C870()
{
  if (!qword_1EA1AE810)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AE810);
    }
  }
}

unint64_t sub_1C136C8CC()
{
  unint64_t result = qword_1EA1AE818;
  if (!qword_1EA1AE818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AE818);
  }
  return result;
}

unint64_t sub_1C136C920()
{
  unint64_t result = qword_1EA1AE820[0];
  if (!qword_1EA1AE820[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1AE820);
  }
  return result;
}

uint64_t sub_1C136C974()
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1BFD7EBD0(v0 + 128, (uint64_t)v9);
  switch(v10)
  {
    case 3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      goto LABEL_11;
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v3 = MEMORY[0x1E4FBC860];
      break;
    default:
      sub_1BFC773DC(v9, (uint64_t)v11);
      uint64_t v1 = v12;
      uint64_t v2 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v2 + 88))(v9, v1, v2);
      if ((v9[0] & 0xFE) == 2)
      {
        uint64_t v3 = MEMORY[0x1E4FBC860];
      }
      else
      {
        id v4 = objc_msgSend(self, sel_configurationWithPointSize_, 15.0);
        uint64_t v5 = (void *)sub_1C151E5EC();
        id v6 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v5, v4);

        if (!v6)
        {
          __break(1u);
          JUMPOUT(0x1C136CB6CLL);
        }
        id v7 = objc_msgSend(self, sel_textAttachmentWithImage_, v6);

        MEMORY[0x1C18C66D0]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
        uint64_t v3 = v14;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      break;
  }
  return v3;
}

uint64_t sub_1C136CB88(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 257);
  if (v2 >= 7) {
    unsigned int v2 = *(_DWORD *)result + 7;
  }
  switch(v2)
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v1 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(v1 + 32);
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = v1 + 128;
      switch(*(unsigned char *)(v1 + 192))
      {
        case 0:
        case 1:
        case 2:
          __swift_destroy_boxed_opaque_existential_1(v3);
          break;
        case 3:
          __swift_destroy_boxed_opaque_existential_1(v3);
          goto LABEL_15;
        case 4:
        case 5:
        case 6:
LABEL_15:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      if (*(void *)(v1 + 200))
      {
        swift_bridgeObjectRelease();
        if (*(void *)(v1 + 208) >= 2uLL) {
          swift_bridgeObjectRelease();
        }
      }
      swift_release();
      goto LABEL_20;
    case 1u:
    case 2u:
LABEL_20:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    case 3u:
      swift_bridgeObjectRelease();
      unint64_t result = __swift_destroy_boxed_opaque_existential_1(v1 + 16);
      break;
    case 4u:
    case 5u:
    case 6u:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1C136CD30(char *__dst, unsigned __int8 *__src)
{
  unsigned int v4 = __src[257];
  if (v4 >= 7) {
    unsigned int v4 = *(_DWORD *)__src + 7;
  }
  switch(v4)
  {
    case 0u:
      uint64_t v5 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v5;
      uint64_t v6 = *((void *)__src + 3);
      *((void *)__dst + 2) = *((void *)__src + 2);
      *((void *)__dst + 3) = v6;
      id v7 = __src + 32;
      uint64_t v8 = *((void *)__src + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8)
      {
        uint64_t v9 = *((void *)__src + 8);
        *((void *)__dst + 7) = v8;
        *((void *)__dst + 8) = v9;
        (**(void (***)(char *, char *, uint64_t))(v8 - 8))(__dst + 32, (char *)__src + 32, v8);
      }
      else
      {
        long long v18 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *v7;
        *((_OWORD *)__dst + 3) = v18;
        *((void *)__dst + 8) = *((void *)__src + 8);
      }
      *((void *)__dst + 9) = *((void *)__src + 9);
      long long v19 = *((_OWORD *)__src + 6);
      *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 6) = v19;
      *(_OWORD *)(__dst + 106) = *(_OWORD *)(__src + 106);
      uint64_t v20 = __src[192];
      swift_bridgeObjectRetain();
      switch(v20)
      {
        case 1:
          long long v22 = *(_OWORD *)(__src + 152);
          *(_OWORD *)(__dst + 152) = v22;
          (**(void (***)(char *, char *))(v22 - 8))(__dst + 128, (char *)__src + 128);
          *((void *)__dst + 21) = *((void *)__src + 21);
          __dst[192] = 1;
          break;
        case 2:
          long long v23 = *(_OWORD *)(__src + 152);
          *(_OWORD *)(__dst + 152) = v23;
          (**(void (***)(char *, char *))(v23 - 8))(__dst + 128, (char *)__src + 128);
          *((void *)__dst + 21) = *((void *)__src + 21);
          __dst[192] = 2;
          break;
        case 3:
          long long v24 = *(_OWORD *)(__src + 152);
          *(_OWORD *)(__dst + 152) = v24;
          (**(void (***)(char *, char *))(v24 - 8))(__dst + 128, (char *)__src + 128);
          *(_OWORD *)(__dst + 168) = *(_OWORD *)(__src + 168);
          *((void *)__dst + 23) = *((void *)__src + 23);
          char v25 = 3;
          goto LABEL_24;
        case 4:
          uint64_t v26 = *((void *)__src + 17);
          *((void *)__dst + 16) = *((void *)__src + 16);
          *((void *)__dst + 17) = v26;
          char v25 = 4;
          goto LABEL_24;
        case 5:
          uint64_t v27 = *((void *)__src + 17);
          *((void *)__dst + 16) = *((void *)__src + 16);
          *((void *)__dst + 17) = v27;
          char v25 = 5;
          goto LABEL_24;
        case 6:
          uint64_t v28 = *((void *)__src + 17);
          *((void *)__dst + 16) = *((void *)__src + 16);
          *((void *)__dst + 17) = v28;
          char v25 = 6;
LABEL_24:
          __dst[192] = v25;
          swift_bridgeObjectRetain();
          break;
        default:
          long long v21 = *(_OWORD *)(__src + 152);
          *(_OWORD *)(__dst + 152) = v21;
          (**(void (***)(char *, char *))(v21 - 8))(__dst + 128, (char *)__src + 128);
          *((void *)__dst + 21) = *((void *)__src + 21);
          __dst[192] = 0;
          break;
      }
      uint64_t v29 = *((void *)__src + 25);
      if (v29)
      {
        *((void *)__dst + 25) = v29;
        unint64_t v30 = *((void *)__src + 26);
        swift_bridgeObjectRetain();
        if (v30 >= 2) {
          swift_bridgeObjectRetain();
        }
        uint64_t v31 = *((void *)__src + 27);
        *((void *)__dst + 26) = v30;
        *((void *)__dst + 27) = v31;
      }
      else
      {
        *(_OWORD *)(__dst + 200) = *(_OWORD *)(__src + 200);
        *((void *)__dst + 27) = *((void *)__src + 27);
      }
      uint64_t v32 = *((void *)__src + 29);
      *((void *)__dst + 28) = *((void *)__src + 28);
      *((void *)__dst + 29) = v32;
      uint64_t v33 = *((void *)__src + 31);
      *((void *)__dst + 30) = *((void *)__src + 30);
      *((void *)__dst + 31) = v33;
      *((_WORD *)__dst + 128) = __src[256];
      swift_retain();
      goto LABEL_31;
    case 1u:
      uint64_t v10 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v10;
      char v11 = 1;
      goto LABEL_9;
    case 2u:
      *(void *)__dst = *(void *)__src;
      char v11 = 2;
LABEL_9:
      __dst[257] = v11;
LABEL_31:
      swift_bridgeObjectRetain();
      return __dst;
    case 3u:
      uint64_t v12 = *((void *)__src + 1);
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = v12;
      uint64_t v13 = (char *)(__src + 16);
      long long v14 = *(_OWORD *)(__src + 40);
      *(_OWORD *)(__dst + 40) = v14;
      uint64_t v15 = v14;
      uint64_t v16 = **(void (***)(char *, char *, uint64_t))(v14 - 8);
      swift_bridgeObjectRetain();
      v16(__dst + 16, v13, v15);
      __dst[257] = 3;
      return __dst;
    case 4u:
      *(void *)__dst = *(void *)__src;
      char v17 = 4;
      goto LABEL_14;
    case 5u:
      *(void *)__dst = *(void *)__src;
      *(_OWORD *)(__dst + 8) = *(_OWORD *)(__src + 8);
      char v17 = 5;
      goto LABEL_14;
    case 6u:
      *(void *)__dst = *(void *)__src;
      char v17 = 6;
LABEL_14:
      __dst[257] = v17;
      swift_retain();
      break;
    default:
      memcpy(__dst, __src, 0x102uLL);
      break;
  }
  return __dst;
}

unsigned __int8 *sub_1C136D164(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  if (__dst != __src)
  {
    unsigned int v4 = __dst[257];
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)__dst + 7;
    }
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)__dst + 7)) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 32));
        }
        swift_bridgeObjectRelease();
        uint64_t v5 = (char *)(__dst + 128);
        switch(__dst[192])
        {
          case 0u:
          case 1u:
          case 2u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            break;
          case 3u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            goto LABEL_12;
          case 4u:
          case 5u:
          case 6u:
LABEL_12:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        if (*((void *)__dst + 25))
        {
          swift_bridgeObjectRelease();
          if (*((void *)__dst + 26) >= 2uLL) {
            swift_bridgeObjectRelease();
          }
        }
        swift_release();
        goto LABEL_17;
      case 1u:
      case 2u:
LABEL_17:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
        break;
      case 4u:
      case 5u:
      case 6u:
        swift_release();
        break;
      default:
        break;
    }
    unsigned int v6 = __src[257];
    if (v6 >= 7) {
      unsigned int v6 = *(_DWORD *)__src + 7;
    }
    switch(v6)
    {
      case 0u:
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        *((void *)__dst + 2) = *((void *)__src + 2);
        *((void *)__dst + 3) = *((void *)__src + 3);
        uint64_t v7 = *((void *)__src + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          *((void *)__dst + 7) = v7;
          *((void *)__dst + 8) = *((void *)__src + 8);
          (**(void (***)(char *, char *, uint64_t))(v7 - 8))((char *)__dst + 32, (char *)__src + 32, v7);
        }
        else
        {
          long long v13 = *((_OWORD *)__src + 2);
          long long v14 = *((_OWORD *)__src + 3);
          *((void *)__dst + 8) = *((void *)__src + 8);
          *((_OWORD *)__dst + 2) = v13;
          *((_OWORD *)__dst + 3) = v14;
        }
        *((void *)__dst + 9) = *((void *)__src + 9);
        long long v15 = *((_OWORD *)__src + 5);
        long long v16 = *((_OWORD *)__src + 6);
        *(_OWORD *)(__dst + 106) = *(_OWORD *)(__src + 106);
        *((_OWORD *)__dst + 5) = v15;
        *((_OWORD *)__dst + 6) = v16;
        uint64_t v17 = __src[192];
        swift_bridgeObjectRetain();
        switch(v17)
        {
          case 1:
            uint64_t v19 = *((void *)__src + 19);
            *((void *)__dst + 19) = v19;
            *((void *)__dst + 20) = *((void *)__src + 20);
            (**(void (***)(char *, char *))(v19 - 8))((char *)__dst + 128, (char *)__src + 128);
            *((void *)__dst + 21) = *((void *)__src + 21);
            __dst[192] = 1;
            break;
          case 2:
            uint64_t v20 = *((void *)__src + 19);
            *((void *)__dst + 19) = v20;
            *((void *)__dst + 20) = *((void *)__src + 20);
            (**(void (***)(char *, char *))(v20 - 8))((char *)__dst + 128, (char *)__src + 128);
            *((void *)__dst + 21) = *((void *)__src + 21);
            __dst[192] = 2;
            break;
          case 3:
            uint64_t v21 = *((void *)__src + 19);
            *((void *)__dst + 19) = v21;
            *((void *)__dst + 20) = *((void *)__src + 20);
            (**(void (***)(char *, char *))(v21 - 8))((char *)__dst + 128, (char *)__src + 128);
            *((void *)__dst + 21) = *((void *)__src + 21);
            *((void *)__dst + 22) = *((void *)__src + 22);
            *((void *)__dst + 23) = *((void *)__src + 23);
            char v22 = 3;
            goto LABEL_41;
          case 4:
            *((void *)__dst + 16) = *((void *)__src + 16);
            *((void *)__dst + 17) = *((void *)__src + 17);
            char v22 = 4;
            goto LABEL_41;
          case 5:
            *((void *)__dst + 16) = *((void *)__src + 16);
            *((void *)__dst + 17) = *((void *)__src + 17);
            char v22 = 5;
            goto LABEL_41;
          case 6:
            *((void *)__dst + 16) = *((void *)__src + 16);
            *((void *)__dst + 17) = *((void *)__src + 17);
            char v22 = 6;
LABEL_41:
            __dst[192] = v22;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v18 = *((void *)__src + 19);
            *((void *)__dst + 19) = v18;
            *((void *)__dst + 20) = *((void *)__src + 20);
            (**(void (***)(char *, char *))(v18 - 8))((char *)__dst + 128, (char *)__src + 128);
            *((void *)__dst + 21) = *((void *)__src + 21);
            __dst[192] = 0;
            break;
        }
        uint64_t v23 = *((void *)__src + 25);
        if (v23)
        {
          *((void *)__dst + 25) = v23;
          unint64_t v24 = *((void *)__src + 26);
          swift_bridgeObjectRetain();
          if (v24 >= 2) {
            swift_bridgeObjectRetain();
          }
          *((void *)__dst + 26) = v24;
          *((void *)__dst + 27) = *((void *)__src + 27);
        }
        else
        {
          long long v25 = *(_OWORD *)(__src + 200);
          *((void *)__dst + 27) = *((void *)__src + 27);
          *(_OWORD *)(__dst + 200) = v25;
        }
        *((void *)__dst + 28) = *((void *)__src + 28);
        uint64_t v26 = *((void *)__src + 30);
        *((void *)__dst + 29) = *((void *)__src + 29);
        *((void *)__dst + 30) = v26;
        *((void *)__dst + 31) = *((void *)__src + 31);
        *((_WORD *)__dst + 128) = __src[256];
        swift_retain();
        goto LABEL_48;
      case 1u:
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        char v8 = 1;
        goto LABEL_26;
      case 2u:
        *(void *)__dst = *(void *)__src;
        char v8 = 2;
LABEL_26:
        __dst[257] = v8;
LABEL_48:
        swift_bridgeObjectRetain();
        return __dst;
      case 3u:
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        uint64_t v9 = (char *)(__src + 16);
        uint64_t v10 = *((void *)__src + 5);
        *((void *)__dst + 5) = v10;
        *((void *)__dst + 6) = *((void *)__src + 6);
        char v11 = **(void (***)(unsigned __int8 *, char *, uint64_t))(v10 - 8);
        swift_bridgeObjectRetain();
        v11(__dst + 16, v9, v10);
        __dst[257] = 3;
        return __dst;
      case 4u:
        *(void *)__dst = *(void *)__src;
        char v12 = 4;
        goto LABEL_31;
      case 5u:
        *(void *)__dst = *(void *)__src;
        *((void *)__dst + 1) = *((void *)__src + 1);
        *((void *)__dst + 2) = *((void *)__src + 2);
        char v12 = 5;
        goto LABEL_31;
      case 6u:
        *(void *)__dst = *(void *)__src;
        char v12 = 6;
LABEL_31:
        __dst[257] = v12;
        swift_retain();
        break;
      default:
        memcpy(__dst, __src, 0x102uLL);
        break;
    }
  }
  return __dst;
}

void *__swift_memcpy258_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x102uLL);
}

unsigned __int8 *sub_1C136D75C(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  if (__dst != __src)
  {
    unsigned int v4 = __dst[257];
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)__dst + 7;
    }
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)__dst + 7)) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 32));
        }
        swift_bridgeObjectRelease();
        uint64_t v5 = (char *)(__dst + 128);
        switch(__dst[192])
        {
          case 0u:
          case 1u:
          case 2u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            break;
          case 3u:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
            goto LABEL_12;
          case 4u:
          case 5u:
          case 6u:
LABEL_12:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        if (*((void *)__dst + 25))
        {
          swift_bridgeObjectRelease();
          if (*((void *)__dst + 26) >= 2uLL) {
            swift_bridgeObjectRelease();
          }
        }
        swift_release();
        goto LABEL_17;
      case 1u:
      case 2u:
LABEL_17:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
        break;
      case 4u:
      case 5u:
      case 6u:
        swift_release();
        break;
      default:
        break;
    }
    unsigned int v6 = __src[257];
    if (v6 >= 7) {
      unsigned int v6 = *(_DWORD *)__src + 7;
    }
    switch(v6)
    {
      case 0u:
        memcpy(__dst, __src, 0x101uLL);
        __dst[257] = 0;
        return __dst;
      case 1u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        char v7 = 1;
        goto LABEL_29;
      case 2u:
        *(void *)__dst = *(void *)__src;
        char v7 = 2;
        goto LABEL_29;
      case 3u:
        long long v8 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v8;
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((void *)__dst + 6) = *((void *)__src + 6);
        char v7 = 3;
        goto LABEL_29;
      case 4u:
        *(void *)__dst = *(void *)__src;
        char v7 = 4;
        goto LABEL_29;
      case 5u:
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((void *)__dst + 2) = *((void *)__src + 2);
        char v7 = 5;
        goto LABEL_29;
      case 6u:
        *(void *)__dst = *(void *)__src;
        char v7 = 6;
LABEL_29:
        __dst[257] = v7;
        break;
      default:
        memcpy(__dst, __src, 0x102uLL);
        break;
    }
  }
  return __dst;
}

uint64_t sub_1C136D9D4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 258)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 257);
  if (v3 >= 8) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C136DA10(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_WORD *)(result + 256) = 0;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 258) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 258) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 257) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C136DA78(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 257);
  if (result >= 7) {
    return (*(_DWORD *)a1 + 7);
  }
  return result;
}

uint64_t sub_1C136DA94(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    *(unsigned char *)(result + 256) = 0;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 7;
    LOBYTE(a2) = 7;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
  }
  *(unsigned char *)(result + 257) = a2;
  return result;
}

uint64_t type metadata accessor for DebugJournalItem()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for FormatIssueCoverData()
{
  return &type metadata for FormatIssueCoverData;
}

void *sub_1C136DB00(uint64_t a1)
{
  unsigned int v2 = *(void **)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v41 = *(void **)(a1 + 16);
  uint64_t v39 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v43 = *(void **)(a1 + 32);
  unsigned int v4 = *(void **)(a1 + 48);
  int v5 = *(unsigned __int8 *)(a1 + 56);
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v6);
  sub_1C0181BEC(0);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v42 = *(void *)(*(void *)(v8 - 8) + 72);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C152C7F0;
  char v11 = (void *)(v10 + v9);
  uint64_t v40 = v1;
  switch(v5)
  {
    case 255:
      uint64_t v13 = 0;
      uint64_t v17 = 0;
      goto LABEL_9;
    case 0:
      uint64_t v37 = v4;
      uint64_t v38 = v3;
      sub_1C00FA170(v2, v1, v41, v39, v43, v3, v4, 0);
      id v19 = v2;
      id v20 = v41;
      id v21 = objc_msgSend(v19, sel_identifier);
      uint64_t v13 = sub_1C151E62C();
      uint64_t v14 = v39;
      uint64_t v36 = v10;
      char v22 = v2;
      uint64_t v17 = v23;

      uint64_t v18 = v43;
      unint64_t v24 = v22;
      long long v15 = v22;
      uint64_t v10 = v36;
      sub_1C136E048(v24, v1, v41, v39, v43, v38, v37, 0);
      goto LABEL_7;
    case 1:
      uint64_t v37 = v4;
      uint64_t v38 = v3;
      sub_1C136E05C(v2, v1, v41, v39, v43, v3, v4, 1);
      id v35 = v2;
      swift_bridgeObjectRetain();
      id v12 = objc_msgSend(v35, sel_identifier);
      uint64_t v13 = sub_1C151E62C();
      uint64_t v14 = v39;
      long long v15 = v2;
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();

      uint64_t v18 = v43;
LABEL_7:
      sub_1C136E048(v15, v1, v41, v14, v18, v38, v37, v5);
      goto LABEL_9;
  }
  uint64_t v17 = 0xE400000000000000;
  uint64_t v13 = 1701736302;
LABEL_9:
  sub_1C0433600(0x696669746E656449, 0xEA00000000007265, v13, v17, v11);
  uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v26 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v11, 0, 1, v25);
  uint64_t v27 = (void *)((char *)v11 + v42);
  if (v5 == 255)
  {
    sub_1C043E268(1684957515, 0xE400000000000000, 3u, v27);
    uint64_t v29 = 0;
  }
  else
  {
    if (v5)
    {
      if (v5 != 1)
      {
        sub_1C043E268(1684957515, 0xE400000000000000, 2u, v27);
        uint64_t v29 = 0x3FE8000000000000;
        goto LABEL_17;
      }
      unsigned __int8 v28 = 1;
    }
    else
    {
      unsigned __int8 v28 = 0;
    }
    sub_1C043E268(1684957515, 0xE400000000000000, v28, v27);
    uint64_t v29 = v40;
  }
LABEL_17:
  v26((void *)((char *)v11 + v42), 0, 1, v25);
  unint64_t v30 = (void *)((char *)v11 + 2 * v42);
  sub_1C042F1BC(0x5220746365707341, 0xEC0000006F697461, v29, v5 == 255, v30);
  v26(v30, 0, 1, v25);
  sub_1C09BCFA4(0xD000000000000010, 0x80000001C163CDE0, 0, 0, v10, v44);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v31 = swift_allocObject();
  *(void *)(inited + 32) = v31;
  *(void *)(v31 + 48) = v45;
  long long v32 = v44[1];
  *(_OWORD *)(v31 + 16) = v44[0];
  *(_OWORD *)(v31 + 32) = v32;
  uint64_t v33 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v33;
}

uint64_t sub_1C136E000()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C136E048(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a8 != -1) {
    sub_1C00FA1F0(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

id sub_1C136E05C(id result, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a8 != -1) {
    return sub_1C00FA170(result, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t LayeredMediaViewModelRenderer.render(viewModel:options:)(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  long long v5 = a2[1];
  long long v12 = *a2;
  long long v13 = v5;
  uint64_t v14 = *((void *)a2 + 4);
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1C136E668(v6, v3, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for LayeredMediaRenderedViewModel();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  long long v8 = v13;
  *(_OWORD *)(v7 + 24) = v12;
  *(_OWORD *)(v7 + 40) = v8;
  *(void *)(v7 + 56) = v14;
  sub_1C009144C();
  swift_retain();
  unint64_t v9 = (void *)sub_1C1518E7C();
  sub_1C0064DB8();
  sub_1C0064D60();
  uint64_t v10 = sub_1C1518FAC();
  swift_bridgeObjectRelease();

  *(void *)(v7 + 64) = v10;
  return v7;
}

void sub_1C136E184(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_1C01995F4(a1, (uint64_t)v83);
  sub_1C01995F4((uint64_t)v83, (uint64_t)v84);
  if (sub_1C0BA14F4((uint64_t)v84) == 1)
  {
    long long v5 = (_OWORD *)sub_1C0BA1500((uint64_t)v84);
    long long v6 = v5[1];
    long long v7 = v5[2];
    long long v8 = v5[4];
    long long v77 = v5[3];
    long long v78 = v8;
    long long v9 = v5[5];
    long long v10 = v5[7];
    long long v80 = v5[6];
    *(_OWORD *)uint64_t v81 = v10;
    *(_OWORD *)&v81[9] = *(_OWORD *)((char *)v5 + 121);
    uint64_t v11 = (uint64_t)(v5 + 1);
    long long v79 = v9;
    long long v75 = v6;
    long long v76 = v7;
    sub_1C136E7F8((uint64_t)&v75);
    sub_1C01994A8(v11);
  }
  else
  {
    uint64_t v12 = sub_1C0BA1500((uint64_t)v84);
    uint64_t v13 = *(void *)(v12 + 24);
    char v14 = *(unsigned char *)(v12 + 32);
    uint64_t v15 = *(void *)(v12 + 40);
    char v16 = *(unsigned char *)(v12 + 48);
    uint64_t v17 = *(void *)(v12 + 56);
    char v18 = *(unsigned char *)(v12 + 112);
    uint64_t v19 = *(void *)(v12 + 120);
    char v20 = *(unsigned char *)(v12 + 128);
    *(void *)&long long v75 = *(void *)(v12 + 16);
    *((void *)&v75 + 1) = v13;
    LOBYTE(v76) = v14;
    *((void *)&v76 + 1) = v15;
    LOBYTE(v77) = v16;
    *((void *)&v77 + 1) = v17;
    long long v59 = *(_OWORD *)(v12 + 80);
    long long v78 = *(_OWORD *)(v12 + 64);
    long long v79 = v59;
    long long v80 = *(_OWORD *)(v12 + 96);
    v81[0] = v18;
    *(void *)&v81[8] = v19;
    v81[16] = v20;
    sub_1C136E80C((uint64_t)&v75);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1C0199430((uint64_t)&v75, (uint64_t)v82);
  sub_1C0199430((uint64_t)v82, (uint64_t)&v75);
  long long v21 = *(_OWORD *)(a2 + 16);
  v73[0] = *(_OWORD *)a2;
  v73[1] = v21;
  uint64_t v74 = *(void *)(a2 + 32);
  char v22 = LayeredMediaLayerRenderer.shouldShow(_:for:)((uint64_t)&v75, (uint64_t)v73);
  sub_1C01994FC((uint64_t)v82);
  if (v22)
  {
    sub_1C01995F4((uint64_t)v83, (uint64_t)&v75);
    int v23 = sub_1C0BA14F4((uint64_t)&v75);
    unint64_t v24 = (id *)sub_1C0BA1500((uint64_t)&v75);
    if (v23 == 1)
    {
      uint64_t v25 = (unint64_t *)&unk_1EB86F000;
      uint64_t v26 = &qword_1EB85C8E8;
      uint64_t v27 = (unint64_t *)&qword_1EB85DFA8;
    }
    else
    {
      uint64_t v25 = (unint64_t *)&unk_1EA1A4428;
      uint64_t v26 = &qword_1EB85C8E0;
      uint64_t v27 = (unint64_t *)&unk_1EB85DF90;
    }
    sub_1C0BA1570(v25, v26, v27);
    id v33 = *v24;
    objc_msgSend(v33, sel_setHidden_, 0);

    sub_1C01995F4((uint64_t)v83, (uint64_t)v73);
    int v34 = sub_1C0BA14F4((uint64_t)v73);
    id v35 = (id *)sub_1C0BA1500((uint64_t)v73);
    if (v34 == 1)
    {
      uint64_t v36 = (unint64_t *)&unk_1EB86F000;
      uint64_t v37 = &qword_1EB85C8E8;
      uint64_t v38 = (unint64_t *)&qword_1EB85DFA8;
    }
    else
    {
      uint64_t v36 = (unint64_t *)&unk_1EA1A4428;
      uint64_t v37 = &qword_1EB85C8E0;
      uint64_t v38 = (unint64_t *)&unk_1EB85DF90;
    }
    sub_1C0BA1570(v36, v37, v38);
    id v40 = *v35;
    objc_msgSend(v40, sel_setFrame_, 0.0, 0.0, *(double *)(a2 + 16), *(double *)(a2 + 24));

    sub_1C01995F4((uint64_t)v83, (uint64_t)v72);
    if (sub_1C0BA14F4((uint64_t)v72) == 1)
    {
      uint64_t v41 = (_OWORD *)sub_1C0BA1500((uint64_t)v72);
      long long v42 = v41[1];
      long long v43 = v41[2];
      long long v44 = v41[4];
      long long v65 = v41[3];
      long long v66 = v44;
      long long v45 = v41[5];
      long long v46 = v41[7];
      long long v68 = v41[6];
      *(_OWORD *)uint64_t v69 = v46;
      *(_OWORD *)&v69[9] = *(_OWORD *)((char *)v41 + 121);
      uint64_t v47 = (uint64_t)(v41 + 1);
      long long v67 = v45;
      long long v63 = v42;
      long long v64 = v43;
      sub_1C136E7F8((uint64_t)&v63);
      sub_1C01994A8(v47);
    }
    else
    {
      uint64_t v48 = sub_1C0BA1500((uint64_t)v72);
      uint64_t v49 = *(void *)(v48 + 24);
      char v50 = *(unsigned char *)(v48 + 32);
      uint64_t v51 = *(void *)(v48 + 40);
      char v52 = *(unsigned char *)(v48 + 48);
      uint64_t v53 = *(void *)(v48 + 56);
      char v54 = *(unsigned char *)(v48 + 112);
      uint64_t v55 = *(void *)(v48 + 120);
      char v56 = *(unsigned char *)(v48 + 128);
      *(void *)&long long v63 = *(void *)(v48 + 16);
      *((void *)&v63 + 1) = v49;
      LOBYTE(v64) = v50;
      *((void *)&v64 + 1) = v51;
      LOBYTE(v65) = v52;
      *((void *)&v65 + 1) = v53;
      long long v60 = *(_OWORD *)(v48 + 80);
      long long v66 = *(_OWORD *)(v48 + 64);
      long long v67 = v60;
      long long v68 = *(_OWORD *)(v48 + 96);
      v69[0] = v54;
      *(void *)&v69[8] = v55;
      v69[16] = v56;
      sub_1C136E80C((uint64_t)&v63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C0199430((uint64_t)&v63, (uint64_t)v71);
    sub_1C01995F4((uint64_t)v83, (uint64_t)&v63);
    long long v57 = *(_OWORD *)(a2 + 16);
    v61[0] = *(_OWORD *)a2;
    v61[1] = v57;
    uint64_t v62 = *(void *)(a2 + 32);
    uint64_t v58 = LayeredMediaLayerRenderer.offscreenRender(_:on:options:)((uint64_t)v70, (uint64_t)&v63, (uint64_t)v61);
    sub_1C01994FC((uint64_t)v71);
    *a3 = v58;
  }
  else
  {
    sub_1C01995F4((uint64_t)v83, (uint64_t)&v75);
    int v28 = sub_1C0BA14F4((uint64_t)&v75);
    uint64_t v29 = (id *)sub_1C0BA1500((uint64_t)&v75);
    if (v28 == 1)
    {
      unint64_t v30 = (unint64_t *)&unk_1EB86F000;
      uint64_t v31 = &qword_1EB85C8E8;
      long long v32 = (unint64_t *)&qword_1EB85DFA8;
    }
    else
    {
      unint64_t v30 = (unint64_t *)&unk_1EA1A4428;
      uint64_t v31 = &qword_1EB85C8E0;
      long long v32 = (unint64_t *)&unk_1EB85DF90;
    }
    sub_1C0BA1570(v30, v31, v32);
    id v39 = *v29;
    objc_msgSend(v39, sel_setHidden_, 1);

    *a3 = 0;
  }
}

uint64_t LayeredMediaViewModelRenderer.deinit()
{
  swift_release();
  return v0;
}

uint64_t LayeredMediaViewModelRenderer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C136E668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1C01995F4(a1 + 32, (uint64_t)v13);
    uint64_t v8 = a1 + 176;
    for (uint64_t i = v6 - 1; ; --i)
    {
      sub_1C01995F4((uint64_t)v13, (uint64_t)v12);
      sub_1C124B220((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C124B188);
      sub_1C136E184((uint64_t)v12, a3, &v11);
      uint64_t v10 = sub_1C124B220((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C124B28C);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v11)
      {
        MEMORY[0x1C18C66D0](v10);
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      if (!i) {
        break;
      }
      sub_1C01995F4(v8, (uint64_t)v13);
      v8 += 144;
    }
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t method lookup function for LayeredMediaViewModelRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaViewModelRenderer);
}

uint64_t sub_1C136E7F8(uint64_t result)
{
  *(unsigned char *)(result + 120) = *(unsigned char *)(result + 120) & 1 | 0x80;
  return result;
}

uint64_t sub_1C136E80C(uint64_t result)
{
  *(unsigned char *)(result + 120) &= 1u;
  return result;
}

unint64_t FormatBlurEffectStyle.rawValue.getter()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x614D6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000016;
      break;
    case 0xE:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatBlurEffectStyle_optional __swiftcall FormatBlurEffectStyle.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 15;
  if (v3 < 0xF) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C136E9E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1486950(*a1, *a2);
}

uint64_t sub_1C136E9F0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C136EA58()
{
  FormatBlurEffectStyle.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C136EABC()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatBlurEffectStyle_optional sub_1C136EB20(Swift::String *a1)
{
  return FormatBlurEffectStyle.init(rawValue:)(*a1);
}

unint64_t sub_1C136EB2C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatBlurEffectStyle.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C136EB54()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C136EBB4(void *a1)
{
  return FormatBlurEffectStyle.encode(to:)(a1);
}

unint64_t FormatBlurEffectStyle.description.getter()
{
  unint64_t result = 0xD000000000000017;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x614D6D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000016;
      break;
    case 0xE:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}