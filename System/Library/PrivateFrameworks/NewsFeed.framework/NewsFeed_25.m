double sub_1C0C17750(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x1FFFFFFFELL;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_1C0C17770()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0C177A8(uint64_t a1)
{
  return sub_1C0C16C24(a1);
}

uint64_t sub_1C0C177B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0C177EC()
{
  sub_1C0C16A24(v0[2], v0[3], v0[4]);
}

void sub_1C0C177FC()
{
  sub_1C0C16718(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C0C17808(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFE6A80C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0C17868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v9 = (char *)v16 - v8;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource)
    || (sub_1C1518CEC(),
        id v10 = objc_msgSend(v16[1], sel_linkMetadata),
        swift_unknownObjectRelease(),
        !v10))
  {
    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
LABEL_8:
    sub_1C0C17B08(*(void **)(v2 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model), *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model + 8), a1);
    return sub_1C002F608((uint64_t)v9);
  }
  id v11 = objc_msgSend(v10, sel_URL);

  if (v11)
  {
    sub_1C1515F1C();

    uint64_t v12 = sub_1C1515FDC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v12 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  sub_1C002F694((uint64_t)v6, (uint64_t)v9);
  sub_1C1515FDC();
  uint64_t v14 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12) == 1) {
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v9, v12);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v12);
}

void sub_1C0C17B08(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    id v6 = a1;
    FCFeedDescriptor.feedURL.getter();
    uint64_t v7 = a1;
    char v8 = 1;
  }
  else
  {
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isPublic))
    {
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(a1, sel_identifier, 0xD000000000000013, 0x80000001C1615F80);
      sub_1C151E62C();

      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      sub_1C0C19104(a1, 0);
      return;
    }
    id v9 = objc_msgSend(a1, sel_identifier);
    if (!v9)
    {
      sub_1C151E62C();
      id v9 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    id v10 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v9);

    sub_1C1515F1C();
    uint64_t v7 = a1;
    char v8 = 0;
  }
  sub_1C0C19104(v7, v8);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(a3, 0, 1, v11);
}

uint64_t sub_1C0C17D0C()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource)
    && (sub_1C1518CEC(),
        id v2 = objc_msgSend(v12, sel_linkMetadata),
        swift_unknownObjectRelease(),
        v2)
    && (id v3 = objc_msgSend(v2, sel_title), v2, v3))
  {
    uint64_t v4 = sub_1C151E62C();
  }
  else
  {
    uint64_t v5 = v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model;
    id v6 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model);
    if (*(unsigned char *)(v5 + 8))
    {
      id v7 = v6;
      uint64_t v4 = FCFeedDescriptor.feedExternalTitle.getter();
      char v8 = v6;
      char v9 = 1;
    }
    else
    {
      id v10 = objc_msgSend((id)swift_unknownObjectRetain(), sel_name);
      uint64_t v4 = sub_1C151E62C();

      char v8 = v6;
      char v9 = 0;
    }
    sub_1C0C19104(v8, v9);
  }
  return v4;
}

id SharingTagURLActivityItemSource.__allocating_init(tag:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1C0C188F0(a1, a2, v2);
}

id SharingTagURLActivityItemSource.init(tag:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  return sub_1C0C18968(a1, a2, v2);
}

id SharingTagURLActivityItemSource.__allocating_init(feedDescriptor:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  id v6 = &v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(void *)id v6 = a1;
  v6[8] = 1;
  *(void *)&v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SharingTagURLActivityItemSource.init(feedDescriptor:linkPresentationSource:)(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v6 = &v2[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(void *)id v6 = a1;
  v6[8] = 1;
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SharingTagURLActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingTagURLActivityItemSource.init()()
{
}

id SharingTagURLActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingTagURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C17868((uint64_t)v4);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    result = (_OWORD *)sub_1C002F608((uint64_t)v4);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    uint64_t v10 = v5;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 32))(boxed_opaque_existential_0, v4, v5);
    return sub_1BFF993A8(v9, (_OWORD *)a1);
  }
  return result;
}

void SharingTagURLActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v40 - v8;
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v40 - v11;
  if (a1)
  {
    uint64_t v13 = sub_1C151E62C();
    uint64_t v15 = v14;
    if (v13 == sub_1C151E62C() && v15 == v16)
    {
      id v25 = a1;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v18 = sub_1C1520A9C();
      id v19 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        sub_1C0C17868((uint64_t)v9);
        uint64_t v20 = sub_1C1515FDC();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20) != 1)
        {
          *(void *)(a2 + 24) = v20;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
          (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 32))(boxed_opaque_existential_0, v9, v20);

          return;
        }

        uint64_t v22 = (uint64_t)v9;
        goto LABEL_11;
      }
    }
    type metadata accessor for SharingHTMLBuilder();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = 0;
    *(void *)(inited + 24) = 0xE000000000000000;
    swift_beginAccess();
    *(void *)(inited + 16) = 0;
    *(void *)(inited + 24) = 0xE000000000000000;
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_1C0C17D0C();
    uint64_t v29 = v28;
    sub_1C0C17868((uint64_t)v12);
    uint64_t v30 = sub_1C1515FDC();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v30) == 1)
    {
      sub_1C002F608((uint64_t)v12);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v32 = sub_1C1515E2C();
      uint64_t v33 = v34;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
    }
    uint64_t v35 = sub_1C0C189DC(inited, v27, v29, v32, v33);
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    if (v37)
    {
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];

      *(void *)a2 = v35;
      *(void *)(a2 + 8) = v37;
      return;
    }

    goto LABEL_20;
  }
  sub_1C0C17868((uint64_t)v6);
  uint64_t v23 = sub_1C1515FDC();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v6, 1, v23) != 1)
  {
    *(void *)(a2 + 24) = v23;
    v38 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
    (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 32))(v38, v6, v23);
    return;
  }
  uint64_t v22 = (uint64_t)v6;
LABEL_11:
  sub_1C002F608(v22);
LABEL_20:
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

LPLinkMetadata_optional __swiftcall SharingTagURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource))
  {
    sub_1C1518CEC();
    uint64_t v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

id sub_1C0C188F0(uint64_t a1, uint64_t a2, Class a3)
{
  id v5 = (char *)objc_allocWithZone(a3);
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = &v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(void *)uint64_t v7 = a1;
  v7[8] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v9.receiver = v5;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1C0C18968(uint64_t a1, uint64_t a2, char *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = &a3[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_model];
  *(void *)uint64_t v7 = a1;
  v7[8] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8NewsFeed31SharingTagURLActivityItemSource_linkPresentationSource] = a2;
  v9.receiver = a3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1C0C189DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v9 - 8);
  v51 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v52 = (uint64_t)&v51 - v12;
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  uint64_t v55 = type metadata accessor for SharingHTMLBuilder();
  v56 = &off_1F1C01D50;
  v54[0] = a1;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  uint64_t v13 = (void (*)(uint64_t@<X0>, uint64_t **@<X8>))off_1F1C01D68[0];
  swift_retain();
  v13(a2, (uint64_t **)v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BFC773DC(v53, (uint64_t)v54);
  uint64_t v14 = v55;
  uint64_t v15 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(long long *__return_ptr, uint64_t, char **))v15[2])(v53, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BFC773DC(v53, (uint64_t)v54);
  if (a5)
  {
    uint64_t v16 = v55;
    v17 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char **))v17[6])(v53, a4, a5, a4, a5, v16, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    sub_1BFC773DC(v53, (uint64_t)v54);
  }
  uint64_t v18 = v55;
  id v19 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(long long *__return_ptr, uint64_t, char **))v19[2])(v53, v18, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BFC773DC(v53, (uint64_t)v54);
  uint64_t v20 = v55;
  uint64_t v21 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(long long *__return_ptr, uint64_t, char **))v21[2])(v53, v20, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BFC773DC(v53, (uint64_t)v54);
  uint64_t v22 = v55;
  uint64_t v23 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v25 = self;
  id v26 = objc_msgSend(v25, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v27 = sub_1C1515B8C();
  uint64_t v29 = v28;

  ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, char **))v23[7])(v53, v27, v29, v22, v23);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BFC773DC(v53, (uint64_t)v54);
  uint64_t v30 = v55;
  uint64_t v31 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  ((void (*)(long long *__return_ptr, uint64_t, unint64_t, uint64_t, char **))v31[7])(v53, 32, 0xE100000000000000, v30, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  sub_1BFC773DC(v53, (uint64_t)v54);
  id v32 = objc_msgSend(self, sel_nss_MarketingPageURL);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = (uint64_t)v51;
    sub_1C1515F1C();

    uint64_t v35 = sub_1C1515FDC();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
  else
  {
    uint64_t v35 = sub_1C1515FDC();
    uint64_t v34 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v51, 1, 1, v35);
  }
  uint64_t v36 = v52;
  sub_1C002F694(v34, v52);
  sub_1C1515FDC();
  uint64_t v37 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v36, 1, v35) == 1)
  {
    sub_1C002F608(v36);
  }
  else
  {
    uint64_t v38 = sub_1C1515E2C();
    uint64_t v40 = v39;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v35);
    uint64_t v41 = v55;
    v42 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    id v43 = objc_msgSend(v25, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v44 = sub_1C1515B8C();
    uint64_t v46 = v45;

    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char **))v42[6])(v53, v44, v46, v38, v40, v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    sub_1BFC773DC(v53, (uint64_t)v54);
  }
  uint64_t v47 = v55;
  v48 = v56;
  __swift_project_boxed_opaque_existential_1(v54, v55);
  uint64_t v49 = ((uint64_t (*)(uint64_t, char **))v48[8])(v47, v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v49;
}

uint64_t type metadata accessor for SharingTagURLActivityItemSource()
{
  return self;
}

uint64_t method lookup function for SharingTagURLActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingTagURLActivityItemSource);
}

uint64_t dispatch thunk of SharingTagURLActivityItemSource.__allocating_init(tag:linkPresentationSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SharingTagURLActivityItemSource.__allocating_init(feedDescriptor:linkPresentationSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t initializeBufferWithCopyOfBuffer for SharingTagURLActivityItemSource.Model(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0C190E8(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1C0C190E8(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_unknownObjectRetain();
  }
}

void destroy for SharingTagURLActivityItemSource.Model(uint64_t a1)
{
}

void sub_1C0C19104(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_unknownObjectRelease();
  }
}

uint64_t assignWithCopy for SharingTagURLActivityItemSource.Model(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0C190E8(*(id *)a2, v4);
  id v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C0C19104(v5, v6);
  return a1;
}

uint64_t assignWithTake for SharingTagURLActivityItemSource.Model(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  id v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C0C19104(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SharingTagURLActivityItemSource.Model()
{
  return &type metadata for SharingTagURLActivityItemSource.Model;
}

uint64_t destroy for FormatDerivedDataOptionScope(uint64_t a1)
{
  return sub_1C00BB39C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed28FormatDerivedDataOptionScopeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C02CDD4C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataOptionScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C02CDD4C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C00BB39C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataOptionScope(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C00BB39C(v4, v5, v6);
  return a1;
}

uint64_t sub_1C0C192B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionScope()
{
  return &type metadata for FormatDerivedDataOptionScope;
}

unint64_t sub_1C0C192E4()
{
  unint64_t result = qword_1EA1A4AA0;
  if (!qword_1EA1A4AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AA0);
  }
  return result;
}

uint64_t sub_1C0C19338(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 5:
      sub_1C1520DCC();
      break;
    default:
      sub_1C1520DCC();
      sub_1C151E77C();
      break;
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C0C1941C(uint64_t a1, uint64_t a2)
{
  return sub_1C0C1985C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1C0C19438()
{
  return sub_1C0C19338(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1C0C19444()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 5:
      uint64_t result = sub_1C1520DCC();
      break;
    default:
      sub_1C1520DCC();
      uint64_t result = sub_1C151E77C();
      break;
  }
  return result;
}

uint64_t sub_1C0C19510()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C1520DBC();
  switch(v1)
  {
    case 5:
      sub_1C1520DCC();
      break;
    default:
      sub_1C1520DCC();
      sub_1C151E77C();
      break;
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C0C195EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 1953460082;
  switch(a3)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_4;
    case 5:
      return result;
    default:
      sub_1C151E80C();
LABEL_4:
      sub_1C151E80C();
      uint64_t result = 0x6F6C732F746F6F72;
      break;
  }
  return result;
}

uint64_t sub_1C0C19850()
{
  return sub_1C0C195EC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1C0C1985C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_26;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2) {
        goto LABEL_26;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a6 != 3) {
        goto LABEL_26;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a6 != 4) {
        goto LABEL_26;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a6 != 5 || a5 | a4) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    default:
      if (a6)
      {
LABEL_26:
        uint64_t result = 0;
      }
      else if (a1 == a4 && a2 == a5)
      {
        uint64_t result = 1;
      }
      else
      {
LABEL_22:
        uint64_t result = sub_1C1520A9C();
      }
      break;
  }
  return result;
}

uint64_t sub_1C0C1997C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    uint64_t v2 = 0;
LABEL_38:
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  uint64_t v4 = (unsigned __int8 *)(a1 + 48);
  unsigned __int8 v5 = 5;
  while (1)
  {
    uint64_t v7 = *((void *)v4 - 2);
    unint64_t v6 = *((void *)v4 - 1);
    unsigned int v8 = *v4;
    if (!(v8 >> 6))
    {
      if (v5 != 5 || v3 | v2) {
        goto LABEL_42;
      }
      swift_bridgeObjectRetain();
      unsigned __int8 v5 = 0;
      uint64_t v2 = v7;
      uint64_t v3 = v6;
      goto LABEL_5;
    }
    if (v8 >> 6 == 1)
    {
      if (v5 >= 2u)
      {
        if (v5 != 3) {
          goto LABEL_42;
        }
        unsigned __int8 v5 = 4;
      }
      else
      {
        unsigned __int8 v5 = 2;
      }
      goto LABEL_5;
    }
    if (!(v6 | v7) && v8 == 128) {
      goto LABEL_5;
    }
    BOOL v9 = v7 == 1 && v6 == 0;
    if (v9 && v8 == 128 || v7 == 2 && !v6 && v8 == 128 || v7 == 3 && !v6 && v8 == 128) {
      goto LABEL_5;
    }
    if (v7 != 4 || v6 || v8 != 128) {
      break;
    }
    if (v5 != 2)
    {
      unint64_t v6 = 0;
      uint64_t v7 = 4;
      goto LABEL_42;
    }
    unsigned __int8 v5 = 3;
LABEL_5:
    v4 += 24;
    if (!--v1) {
      goto LABEL_38;
    }
  }
  if (v7 == 5 && !v6 && v8 == 128) {
    goto LABEL_5;
  }
  if (v5 < 2u)
  {
    unsigned __int8 v5 = 1;
    goto LABEL_5;
  }
  unint64_t v6 = 0;
  uint64_t v7 = 6;
LABEL_42:
  type metadata accessor for FormatDerivedDataError();
  sub_1C00DAB28();
  swift_allocError();
  *(void *)uint64_t v11 = v2;
  *(void *)(v11 + 8) = v3;
  *(unsigned char *)(v11 + 16) = v5;
  *(void *)(v11 + 24) = v7;
  *(void *)(v11 + 32) = v6;
  *(unsigned char *)(v11 + 40) = v8;
  swift_storeEnumTagMultiPayload();
  sub_1C00F5ACC(v7, v6, v8);
  sub_1C00F5ACC(v7, v6, v8);
  sub_1C02CDD4C(v2, v3, v5);
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1C00BB39C(v2, v3, v5);
  sub_1C00F5AEC(v7, v6, v8);
  return v2;
}

uint64_t FormatMediaTimingFunctionName.rawValue.getter()
{
  uint64_t result = 0x7261656E696CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E4965736165;
      break;
    case 2:
      uint64_t result = 0x74754F65736165;
      break;
    case 3:
      uint64_t result = 0x61456E4965736165;
      break;
    case 4:
      uint64_t result = 0x746C7561666564;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatMediaTimingFunctionName_optional __swiftcall FormatMediaTimingFunctionName.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0C19CD4(unsigned __int8 *a1, char *a2)
{
  return sub_1C147C13C(*a1, *a2);
}

unint64_t sub_1C0C19CE4()
{
  unint64_t result = qword_1EA1A4AA8;
  if (!qword_1EA1A4AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AA8);
  }
  return result;
}

uint64_t sub_1C0C19D38()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C19E2C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C19F08()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatMediaTimingFunctionName_optional sub_1C0C19FF8(Swift::String *a1)
{
  return FormatMediaTimingFunctionName.init(rawValue:)(*a1);
}

void sub_1C0C1A004(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x7261656E696CLL;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x6E4965736165;
      goto LABEL_3;
    case 2:
      uint64_t v3 = 0x754F65736165;
      goto LABEL_7;
    case 3:
      strcpy((char *)a1, "easeInEaseOut");
      *(_WORD *)(a1 + 14) = -4864;
      return;
    case 4:
      uint64_t v3 = 0x6C7561666564;
LABEL_7:
      *(void *)a1 = v3 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
  }
}

unint64_t sub_1C0C1A0B8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0C1A0E8();
  unint64_t result = sub_1C0C1A13C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0C1A0E8()
{
  unint64_t result = qword_1EA1A4AB0;
  if (!qword_1EA1A4AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AB0);
  }
  return result;
}

unint64_t sub_1C0C1A13C()
{
  unint64_t result = qword_1EA1A4AB8;
  if (!qword_1EA1A4AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AB8);
  }
  return result;
}

unint64_t sub_1C0C1A190(uint64_t a1)
{
  unint64_t result = sub_1C086B494();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C1A1B8(void *a1)
{
  a1[1] = sub_1C0C1A1F0();
  a1[2] = sub_1C0C1A244();
  unint64_t result = sub_1C0C19CE4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C1A1F0()
{
  unint64_t result = qword_1EA1A4AC0;
  if (!qword_1EA1A4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AC0);
  }
  return result;
}

unint64_t sub_1C0C1A244()
{
  unint64_t result = qword_1EA1A4AC8;
  if (!qword_1EA1A4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AC8);
  }
  return result;
}

uint64_t sub_1C0C1A298()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0C1A2F8(void *a1)
{
  return FormatMediaTimingFunctionName.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatMediaTimingFunctionName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    _OWORD *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C1A3DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFunctionName()
{
  return &type metadata for FormatMediaTimingFunctionName;
}

id sub_1C0C1A414()
{
  return objc_msgSend(self, sel_functionWithName_, **((void **)&unk_1E6417020 + *v0));
}

void FormatWebEmbedNodeBinding.bind(binder:context:)()
{
}

uint64_t sub_1C0C1A48C(uint64_t result)
{
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t v5 = *(void *)v1;
    v8[0] = v5;
    v8[1] = v4;
    v8[2] = v3;
    char v7 = 6;
    sub_1C05DD1B4(v5, v4, v3, 1);
    unint64_t result = sub_1C12ECBDC(v8, &v7);
    if (!v2)
    {
      uint64_t v6 = result;
      swift_bridgeObjectRetain();
      sub_1C0F49260(v5, v4, v6, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_1C0C1A554(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a1;
  uint64_t v46 = a2;
  uint64_t v47 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0C1B25C(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v42 - v5;
  uint64_t v48 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  BOOL v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = (int *)type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - v20;
  if (*(unsigned char *)(v2 + 24))
  {
    v42 = v12;
    id v43 = v15;
    uint64_t v22 = v49;
    uint64_t v15 = v50;
    uint64_t v23 = *(void *)(v2 + 8);
    uint64_t v24 = *(void *)(v2 + 16);
    uint64_t v25 = *(void *)v2;
    FormatOptionCollection.subscript.getter(*(void *)v2, v23, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v48) == 1)
    {
      sub_1C0257E00((uint64_t)v6);
      *uint64_t v22 = v25;
      v22[1] = v23;
      swift_storeEnumTagMultiPayload();
      sub_1BFE7E51C();
      swift_allocError();
      sub_1C04A8F1C((uint64_t)v22, v26);
      swift_bridgeObjectRetain();
      swift_willThrow();
      uint64_t v27 = type metadata accessor for FormatLayoutError;
      uint64_t v28 = (uint64_t)v22;
LABEL_8:
      sub_1C0C1B194(v28, (uint64_t (*)(void))v27);
      return v15;
    }
    sub_1C0C1B1F4((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
    swift_retain();
    sub_1BFF28A20(v51, &v52);
    swift_release();
    if (v15)
    {
      uint64_t v27 = type metadata accessor for FormatOption;
      uint64_t v28 = (uint64_t)v9;
      goto LABEL_8;
    }
    uint64_t v35 = (uint64_t)v43;
    sub_1C001CFA0(v52, v25, v23, v24, v51, (uint64_t)v43);
    swift_release();
    sub_1C0C1B194((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
    uint64_t v36 = *(void *)(v51 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    uint64_t v37 = *(void *)(v51 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    uint64_t v39 = v44;
    uint64_t v38 = v45;
    uint64_t v40 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v42, v35, v45);
    type metadata accessor for FormatWebEmbedData();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v41 = v46;
    swift_retain();
    uint64_t v15 = (char *)sub_1C0C08454(v36, v37, v40, v41);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v38);
  }
  else
  {
    uint64_t v29 = v50;
    sub_1BFF7DD68(*(void *)(v51 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v42 - v20);
    if (!v29)
    {
      uint64_t v31 = *(void *)(v51 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
      uint64_t v30 = *(void *)(v51 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
      sub_1C0C1B1F4((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      type metadata accessor for FormatWebEmbedData();
      uint64_t v15 = (char *)swift_allocObject();
      *((void *)v15 + 2) = v31;
      *((void *)v15 + 3) = v30;
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(&v15[OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url], &v18[v16[8]], v45);
      *(void *)&v15[OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_indexFileURLPromise] = *(void *)&v18[v16[10]];
      *(void *)&v15[OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataURLPromise] = *(void *)&v18[v16[11]];
      sub_1C0AB2C18((uint64_t)&v18[v16[13]], (uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization]);
      id v32 = &v15[OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem];
      sub_1C0C1B1F4((uint64_t)v18, (uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem], (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v33 = type metadata accessor for FeedItem(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
      *(void *)&v15[OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_config] = v46;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
  }
  return v15;
}

uint64_t sub_1C0C1ABB0(uint64_t a1)
{
  return sub_1C0C1A48C(a1);
}

void sub_1C0C1ABC8()
{
}

BOOL _s8NewsFeed25FormatWebEmbedNodeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  if (v5)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      BOOL v10 = v2 == v6 && v3 == v7;
      if (v10 || (sub_1C1520A9C() & 1) != 0)
      {
        uint64_t v11 = 1;
        sub_1C05DD1B4(v6, v7, v8, 1);
        sub_1C05DD1B4(v2, v3, v4, 1);
        sub_1C05DD1B4(v6, v7, v8, 1);
        sub_1C05DD1B4(v2, v3, v4, 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v12 = sub_1C00E3FD8(v4, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C08CCC24(v2, v3, v4, 1);
        sub_1C08CCC24(v6, v7, v8, 1);
        sub_1C08CCC24(v6, v7, v8, 1);
        sub_1C08CCC24(v2, v3, v4, 1);
        if (v12) {
          return v11;
        }
        return 0;
      }
      sub_1C05DD1B4(v6, v7, v8, 1);
      sub_1C05DD1B4(v2, v3, v4, 1);
      sub_1C08CCC24(v2, v3, v4, 1);
      uint64_t v13 = v6;
      uint64_t v14 = v7;
      uint64_t v15 = v8;
      char v16 = 1;
LABEL_14:
      sub_1C08CCC24(v13, v14, v15, v16);
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    sub_1C05DD1B4(v6, v7, v8, v9);
    sub_1C08CCC24(v2, v3, v4, v5);
    uint64_t v13 = v6;
    uint64_t v14 = v7;
    uint64_t v15 = v8;
    char v16 = v9;
    goto LABEL_14;
  }
  if (*(unsigned char *)(a2 + 24)) {
    goto LABEL_13;
  }
  sub_1C08CCC24(*(void *)a1, v3, v4, 0);
  sub_1C08CCC24(v6, v7, v8, 0);
  return ((v6 ^ v2) & 1) == 0;
}

void sub_1C0C1AE1C()
{
  uint64_t v2 = v1;
  sub_1C0C1B25C(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v11[-1] - v4;
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v7 = *(void *)(v0 + 8);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v8 = *(void *)v0;
    v11[0] = *(void *)v0;
    v11[1] = v7;
    v11[2] = v6;
    char v12 = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C12ECBDC(v11, &v12);
    if (!v2)
    {
      sub_1C0EC63F8(v8, v7, v9, 1, (uint64_t)v5);
      sub_1C0257E00((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1C0C1AF48(uint64_t a1)
{
  unint64_t result = sub_1C0C1AF70();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C1AF70()
{
  unint64_t result = qword_1EA1A4AD0;
  if (!qword_1EA1A4AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AD0);
  }
  return result;
}

unint64_t sub_1C0C1AFC4(void *a1)
{
  a1[1] = sub_1BFD19798();
  a1[2] = sub_1BFCFBF58();
  unint64_t result = sub_1C0C1AFFC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C1AFFC()
{
  unint64_t result = qword_1EA1A4AD8;
  if (!qword_1EA1A4AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4AD8);
  }
  return result;
}

uint64_t destroy for FormatWebEmbedNodeBinding(uint64_t a1)
{
  return sub_1C08CCC24(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatWebEmbedNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C05DD1B4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatWebEmbedNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C05DD1B4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C08CCC24(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatWebEmbedNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C08CCC24(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatWebEmbedNodeBinding()
{
  return &type metadata for FormatWebEmbedNodeBinding;
}

uint64_t sub_1C0C1B194(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0C1B1F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0C1B25C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_1C0C1B2B0(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC3EE8();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC05B4(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_tableView;
  id v19 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v48 = v4;
  *(void *)&v4[v18] = objc_msgSend(v19, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v54 = a1;
  swift_bridgeObjectRetain();
  sub_1C0C1CDD8(&v54);
  uint64_t v46 = 0;
  swift_bridgeObjectRelease();
  uint64_t v47 = v54;
  sub_1BFEC05B4(0, &qword_1EA1A4B28, (uint64_t (*)(uint64_t))sub_1C0C1CE80, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21(v17, v52, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  uint64_t v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1BFEC03F4(v51, (uint64_t)v12);
  sub_1BFEC03F4((uint64_t)v17, v22);
  uint64_t v50 = v7;
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v23((uint64_t)v12, 1, v6) == 1)
  {
    sub_1BFEC001C((uint64_t)v17);
    if (v23(v22, 1, v6) == 1)
    {
      sub_1BFEC001C((uint64_t)v12);
LABEL_9:
      sub_1BFEC05B4(0, (unint64_t *)&unk_1EB8903B0, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBBE00]);
      uint64_t v29 = v50;
      unint64_t v35 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C1529AE0;
      uint64_t v27 = v52;
      uint64_t v25 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v21)(v26 + v35, v52, v6);
      uint64_t v28 = v51;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  id v43 = v21;
  uint64_t v24 = v45;
  sub_1BFEC03F4((uint64_t)v12, v45);
  if (v23(v22, 1, v6) == 1)
  {
    sub_1BFEC001C((uint64_t)v17);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v24, v6);
LABEL_6:
    uint64_t v25 = sub_1C0C1CF18((uint64_t)v12);
    goto LABEL_7;
  }
  uint64_t v30 = v50;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
  uint64_t v42 = inited + 32;
  id v32 = v44;
  v31(v44, v22, v6);
  sub_1BFE51A38(&qword_1EB85C8B8);
  char v33 = sub_1C151E5CC();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34(v32, v6);
  sub_1BFEC001C((uint64_t)v17);
  v34((char *)v24, v6);
  uint64_t v25 = sub_1BFEC001C((uint64_t)v12);
  uint64_t v21 = v43;
  if (v33) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v28 = v51;
  uint64_t v27 = v52;
  uint64_t v29 = v50;
LABEL_10:
  *(void *)(inited + 40) = v26;
  *(unsigned char *)(inited + 48) = 1;
  MEMORY[0x1F4188790](v25);
  *(&v42 - 2) = v27;
  uint64_t v36 = (uint64_t)v47;
  swift_retain();
  uint64_t v37 = sub_1C06221B8((uint64_t (*)(void))sub_1C0C1CF74, (uint64_t)(&v42 - 4), v36);
  *(void *)(inited + 56) = v37;
  *(unsigned char *)(inited + 64) = 2;
  MEMORY[0x1F4188790](v37);
  *(&v42 - 2) = v27;
  *(void *)(inited + 72) = sub_1C0C1B930((uint64_t (*)(char *))sub_1C0C1CFA4, (uint64_t)(&v42 - 4), v36);
  unint64_t v38 = sub_1C01910DC(inited);
  swift_setDeallocating();
  sub_1C0C1CE80();
  swift_arrayDestroy();
  uint64_t v39 = v48;
  *(void *)&v48[OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections] = v38;
  sub_1BFEC03F4(v28, (uint64_t)&v39[OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_selectedRemoteVersion]);

  v53.receiver = v39;
  v53.super_class = ObjectType;
  id v40 = objc_msgSendSuper2(&v53, sel_initWithNibName_bundle_, 0, 0);
  sub_1BFEC001C(v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v6);
  return v40;
}

uint64_t sub_1C0C1B930(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  id v32 = a1;
  uint64_t v33 = a2;
  uint64_t v5 = sub_1C151928C();
  MEMORY[0x1F4188790](v5);
  uint64_t v34 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v23 - v8;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v24 = v9;
    uint64_t v25 = a3;
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v31 = v9 + 16;
    unint64_t v27 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = a3 + v27;
    uint64_t v26 = *(void *)(v9 + 72);
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v28 = (char *)&v23 - v8;
    uint64_t v29 = v5;
    while (1)
    {
      v30(v11, v13, v5, v10);
      char v16 = v32(v11);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v5);
        swift_bridgeObjectRelease();
        swift_release();
        return v15;
      }
      if ((v16 & 1) == 0) {
        break;
      }
      uint64_t v17 = *v14;
      (*v14)(v34, v11, v5);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BFFC1230(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v35;
      }
      unint64_t v20 = *(void *)(v15 + 16);
      unint64_t v19 = *(void *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BFFC1230(v19 > 1, v20 + 1, 1);
        uint64_t v15 = v35;
      }
      *(void *)(v15 + 16) = v20 + 1;
      uint64_t v21 = v26;
      uint64_t v5 = v29;
      v17((char *)(v15 + v27 + v20 * v26), v34, v29);
      uint64_t v35 = v15;
      v13 += v21;
      --v12;
      uint64_t v11 = v28;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v5);
    swift_bridgeObjectRelease();
    return v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

void sub_1C0C1BC90()
{
  uint64_t v1 = v0;
  v21.receiver = v0;
  v21.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  unint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_tableView];
  objc_msgSend(v6, sel_setDataSource_, v1);
  objc_msgSend(v6, sel_setAlwaysBounceVertical_, 1);
  id v7 = objc_msgSend(v4, sel_secondaryLabelColor);
  objc_msgSend(v6, sel_setTintColor_, v7);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setTableFooterView_, v8);

  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
  sub_1C151F26C();
  id v9 = objc_msgSend(v1, sel_navigationItem);
  __n128 v10 = (void *)sub_1C151E5EC();
  objc_msgSend(v9, sel_setTitle_, v10);

  id v11 = objc_msgSend(v1, sel_navigationItem);
  sub_1BFE4DBE0();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C15320E0;
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v14 = objc_msgSend(self, sel_systemImageNamed_, v13);

  if (!v14)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v15 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  char v16 = v1;
  id v17 = objc_msgSend(v15, sel_initWithImage_style_target_action_, v14, 0, v16, sel_doDismiss);

  *(void *)(v12 + 32) = v17;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v18 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setRightBarButtonItems_, v18);

  id v19 = objc_msgSend(v16, sel_view);
  if (v19)
  {
    unint64_t v20 = v19;
    objc_msgSend(v19, sel_addSubview_, v6);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t *sub_1C0C1C138@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1C0C1C1E0()
{
  return type metadata accessor for DebugFormatUploadDiffVersionsViewController();
}

uint64_t type metadata accessor for DebugFormatUploadDiffVersionsViewController()
{
  uint64_t result = qword_1EA1A4B00;
  if (!qword_1EA1A4B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0C1C234()
{
  sub_1BFEC05B4(319, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C0C1C378(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v3 = sub_1C151677C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC3EE8();
  uint64_t v54 = v7;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC05B4(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v55 = (char *)&v49 - v14;
  uint64_t v15 = sub_1C151928C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v50 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v49 - v19;
  MEMORY[0x1F4188790](v21);
  v57 = (char *)&v49 - v22;
  unint64_t v23 = sub_1C151676C();
  if (v23 <= 2)
  {
    uint64_t v24 = *(void *)(v56 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections);
    if (*(void *)(v24 + 16))
    {
      uint64_t v25 = sub_1BFFFC6AC(v23);
      if (v26)
      {
        uint64_t v6 = *(char **)(*(void *)(v24 + 56) + 8 * v25);
        swift_bridgeObjectRetain();
        unint64_t v27 = sub_1C151673C();
        if ((v27 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v27 < *((void *)v6 + 2))
        {
          uint64_t v51 = v12;
          uint64_t v52 = v9;
          uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
          v28(v20, &v6[((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v27], v15);
          swift_bridgeObjectRelease();
          uint64_t v29 = v57;
          uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
          v49(v57, v20, v15);
          sub_1BFC39268(0, (unint64_t *)&qword_1EA1A17E0);
          uint64_t v30 = (void *)sub_1C151F24C();
          id v31 = objc_msgSend(v30, sel_textLabel);
          if (v31)
          {
            id v32 = v31;
            sub_1C151920C();
            uint64_t v33 = (void *)sub_1C151E5EC();
            swift_bridgeObjectRelease();
            objc_msgSend(v32, sel_setText_, v33);

            uint64_t v29 = v57;
          }
          id v34 = objc_msgSend(v30, sel_textLabel);
          if (v34)
          {
            uint64_t v35 = v34;
            id v36 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
            objc_msgSend(v35, sel_setFont_, v36);
          }
          uint64_t v37 = (uint64_t)v55;
          uint64_t v38 = v56 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_selectedRemoteVersion;
          v28(v55, v29, v15);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
          uint64_t v39 = (uint64_t)v52;
          uint64_t v40 = (uint64_t)&v52[*(int *)(v54 + 48)];
          sub_1BFEC03F4(v38, (uint64_t)v52);
          sub_1BFEC03F4(v37, v40);
          uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
          if (v41(v39, 1, v15) == 1)
          {
            sub_1BFEC001C(v37);
            if (v41(v40, 1, v15) == 1)
            {
              sub_1BFEC001C(v39);
              uint64_t v42 = 3;
LABEL_17:
              uint64_t v44 = v57;
              objc_msgSend(v30, sel_setAccessoryType_, v42);
              objc_msgSend(v30, sel_setSelectionStyle_, 0);
              (*(void (**)(char *, uint64_t))(v16 + 8))(v44, v15);
              return (uint64_t)v30;
            }
          }
          else
          {
            uint64_t v43 = (uint64_t)v51;
            sub_1BFEC03F4(v39, (uint64_t)v51);
            if (v41(v40, 1, v15) != 1)
            {
              uint64_t v46 = v50;
              v49(v50, (char *)v40, v15);
              sub_1BFE51A38(&qword_1EB85C8B8);
              char v47 = sub_1C151E5CC();
              uint64_t v48 = *(void (**)(char *, uint64_t))(v16 + 8);
              v48(v46, v15);
              sub_1BFEC001C((uint64_t)v55);
              v48((char *)v43, v15);
              sub_1BFEC001C(v39);
              if (v47)
              {
                uint64_t v42 = 3;
                goto LABEL_17;
              }
              goto LABEL_16;
            }
            sub_1BFEC001C((uint64_t)v55);
            (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v43, v15);
          }
          sub_1C0C1CF18(v39);
LABEL_16:
          uint64_t v42 = 0;
          goto LABEL_17;
        }
        __break(1u);
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  unint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  unint64_t v59 = 0xD000000000000013;
  unint64_t v60 = 0x80000001C161FC40;
  uint64_t v58 = sub_1C151676C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatUploadDiffVersionsViewController.Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    _OWORD *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C1CD48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadDiffVersionsViewController.Section()
{
  return &type metadata for DebugFormatUploadDiffVersionsViewController.Section;
}

unint64_t sub_1C0C1CD84()
{
  unint64_t result = qword_1EA1A4B18;
  if (!qword_1EA1A4B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B18);
  }
  return result;
}

void sub_1C0C1CDD8(void **a1)
{
  uint64_t v2 = *(void *)(sub_1C151928C() - 8);
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = (void *)sub_1BFFC3DD4(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C0C1D020(v5);
  *a1 = v3;
}

void sub_1C0C1CE80()
{
  if (!qword_1EA1A4B30)
  {
    sub_1BFEC05B4(255, &qword_1EA1977D0, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A4B30);
    }
  }
}

uint64_t sub_1C0C1CF18(uint64_t a1)
{
  sub_1BFEC3EE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0C1CF74()
{
  return sub_1C151921C() & 1;
}

uint64_t sub_1C0C1CFA4()
{
  return sub_1C151E57C() & 1;
}

void sub_1C0C1D020(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v136 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v151 = (char *)&v131 - v8;
  MEMORY[0x1F4188790](v9);
  v146 = (char *)&v131 - v10;
  MEMORY[0x1F4188790](v11);
  v147 = (char *)&v131 - v12;
  uint64_t v13 = a1[1];
  uint64_t v14 = sub_1C152086C();
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      sub_1C0C1DBB8(0, v13, 1, a1);
    }
    return;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  v150 = a1;
  uint64_t v133 = v14;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v138 = MEMORY[0x1E4FBC860]
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = MEMORY[0x1E4FBC860];
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_1C0C1DEC4(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1C063604C((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          v129 = &v19[16 * v126 + 32];
          *(void *)v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v132 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_1C151ECCC();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = v17;
    unint64_t v138 = v17 + v18;
  }
  uint64_t v20 = 0;
  v144 = (void (**)(char *, uint64_t))(v5 + 1);
  v145 = v5 + 2;
  v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
  v139 = v5;
  while (1)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v20 + 1;
    uint64_t v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    uint64_t v142 = v20 + 1;
    uint64_t v153 = v139[9];
    uint64_t v26 = v153;
    unint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_1BFE51A38((unint64_t *)&qword_1EB8714E0);
    id v31 = v147;
    uint64_t v148 = v30;
    LODWORD(v152) = sub_1C151E56C();
    uint64_t v32 = v13;
    uint64_t v33 = (void (*)(char *, uint64_t))v139[1];
    id v34 = v29;
    uint64_t v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    uint64_t v35 = v153;
    uint64_t v23 = v22 + 2;
    uint64_t v143 = v32;
    if (v22 + 2 >= v32)
    {
      uint64_t v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      uint64_t v37 = v153 * v23;
      while (1)
      {
        uint64_t v38 = v23;
        uint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        uint64_t v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = sub_1C151E56C();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        uint64_t v23 = v38 + 1;
        uint64_t v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          uint64_t v13 = v143;
          uint64_t v23 = v143;
          uint64_t v2 = v131;
          uint64_t v19 = v134;
          uint64_t v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      uint64_t v19 = v134;
      uint64_t v23 = v38;
      uint64_t v22 = v137;
      uint64_t v13 = v143;
      uint64_t v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      char v47 = v150;
      goto LABEL_38;
    }
    v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    uint64_t v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    char v47 = v150;
    uint64_t v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        char v47 = v150;
        uint64_t v23 = v148;
        uint64_t v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    uint64_t v19 = v134;
    uint64_t v22 = v137;
    uint64_t v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    uint64_t v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      uint64_t v57 = v23 * v55;
      uint64_t v135 = v54;
      do
      {
        uint64_t v59 = 0;
        uint64_t v148 = v23;
        uint64_t v142 = v57;
        uint64_t v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          uint64_t v153 = v22;
          uint64_t v61 = v57 + v59 + v60;
          v62 = v147;
          v63 = v47;
          v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          v66 = v146;
          v64(v146, v65, v53);
          sub_1BFE51A38((unint64_t *)&qword_1EB8714E0);
          LOBYTE(v60) = sub_1C151E56C();
          v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          uint64_t v57 = v142;
          uint64_t v56 = v143;
          v69 = (char *)(v68 + v143 + v59);
          v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          uint64_t v22 = v153 + 1;
          uint64_t v58 = v148;
          char v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v58 = v148;
        uint64_t v53 = v149;
        char v47 = v63;
        uint64_t v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        uint64_t v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        uint64_t v22 = v137;
      }
      while (v23 != v135);
      uint64_t v23 = v135;
      uint64_t v2 = v131;
      uint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_1C0634CC8(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      uint64_t v19 = sub_1C0634CC8((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    v75 = v19 + 32;
    v76 = &v19[16 * v74 + 32];
    uint64_t v77 = v148;
    *(void *)v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        v118 = v19;
        v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_1C0C1DEC4(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        v123 = v118;
        *(void *)v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        uint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    uint64_t v13 = v150[1];
    uint64_t v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1C15203FC();
  __break(1u);
}

void sub_1C0C1DBB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_1C151928C();
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (char *)&v29 - v10;
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v16;
    id v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      uint64_t v22 = v33;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v36, v20, v7, v13);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1BFE51A38((unint64_t *)&qword_1EB8714E0);
      LOBYTE(v22) = sub_1C151E56C();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      unint64_t v27 = (char *)(v26 + v44 + v18);
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C0C1DEC4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C151928C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v57 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v56 = (char *)v50 - v12;
  uint64_t v58 = *(void *)(v13 + 72);
  if (!v58)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v58 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v58 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v58;
  unint64_t v61 = a1;
  unint64_t v60 = a4;
  uint64_t v16 = v14 / v58;
  if (v15 >= v14 / v58)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v58;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v59 = a4 + v18;
      unint64_t v61 = a2;
      unint64_t v53 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v58;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v50[1] = v37 - 8;
        unint64_t v51 = v38;
        unint64_t v54 = -v58;
        uint64_t v55 = v37;
        unint64_t v52 = a4;
        uint64_t v39 = v56;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v58 = a3 + v36;
          uint64_t v41 = v51;
          v51(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v57;
          v41(v57, v42, v8);
          sub_1BFE51A38((unint64_t *)&qword_1EB8714E0);
          LOBYTE(v41) = sub_1C151E56C();
          uint64_t v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v58;
            if (v43 < a2 || v58 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
            }
            else
            {
              unint64_t v46 = v52;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v54;
            v61 += v54;
          }
          else
          {
            a3 = v58;
            unint64_t v47 = v59;
            v59 += v54;
            if (v43 < v47 || v58 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v54;
              unint64_t v46 = v52;
            }
            else
            {
              unint64_t v46 = v52;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v54;
            }
          }
          unint64_t v34 = v59;
          if (v59 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v53);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v58;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v54 = a4 + v17;
    unint64_t v59 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v55 = v9 + 16;
      uint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v56;
        v21(v56, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v57;
        v21(v57, v25, v8);
        sub_1BFE51A38((unint64_t *)&qword_1EB8714E0);
        char v27 = sub_1C151E56C();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v61;
        if (v27)
        {
          unint64_t v30 = a2 + v58;
          if (v61 < a2 || v61 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v61 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v60 + v58;
          if (v61 < v60 || v61 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v61 != v60) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v60 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v61 = v29 + v58;
        a4 = v60;
        if (v60 >= v54) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_69:
    sub_1C063562C(&v61, &v60, (uint64_t *)&v59);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0C1E4CC(unint64_t a1)
{
  if (a1 > 2)
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C152040C();
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections);
    if (*(void *)(v2 + 16) && (uint64_t v3 = sub_1BFFFC6AC(a1), (v4 & 1) != 0)) {
      return *(void *)(*(void *)(*(void *)(v2 + 56) + 8 * v3) + 16);
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C0C1E5CC(uint64_t a1)
{
  unint64_t result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 2)
    {
      unsigned int v3 = 1702323534;
      return v3 | 0x6556207200000000;
    }
    if (a1 == 1)
    {
      unsigned int v3 = 1701080143;
      return v3 | 0x6556207200000000;
    }
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1C152040C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0C1E6F0(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000063;
  if (a1 == 2 || a1 == 1) {
    return v2;
  }
  if (!a1)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed43DebugFormatUploadDiffVersionsViewController_sections);
    if (!*(void *)(v3 + 16)) {
      return 0;
    }
    uint64_t v4 = sub_1BFFFC6AC(0);
    if ((v5 & 1) == 0) {
      return 0;
    }
    if (*(void *)(*(void *)(*(void *)(v3 + 56) + 8 * v4) + 16)) {
      return 0;
    }
    return 0xD00000000000006ELL;
  }
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

void *sub_1C0C1E854(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = *(int *)(a3 + 36);
    __dst = (char *)a1 + v11;
    uint64_t v12 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v13 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v14 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v12, v14);
        uint64_t started = type metadata accessor for StartTime(0);
        __dst[*(int *)(started + 20)] = v12[*(int *)(started + 20)];
        goto LABEL_7;
      case 8u:
      case 9u:
        uint64_t v17 = sub_1C151631C();
        uint64_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16);
        v18(__dst, v12, v17);
        uint64_t v19 = type metadata accessor for StartTimeEndTime(0);
        v18(&__dst[*(int *)(v19 + 20)], &v12[*(int *)(v19 + 20)], v17);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(__dst, v12, *(void *)(*(void *)(v13 - 8) + 64));
        break;
    }
    *((unsigned char *)v4 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t sub_1C0C1EE00(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t v6 = sub_1C151631C();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t v8 = v6;
      uint64_t v9 = v4;
      goto LABEL_4;
    case 8:
    case 9:
      uint64_t v10 = sub_1C151631C();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v10 - 8), v4, v10);
      uint64_t v9 = v4 + *(int *)(type metadata accessor for StartTimeEndTime(0) + 20);
      uint64_t v8 = v10;
      uint64_t v7 = v11;
LABEL_4:
      uint64_t result = v7(v9, v8);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C0C1EF78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v13 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
      uint64_t started = type metadata accessor for StartTime(0);
      v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v15 = sub_1C151631C();
      uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v16(v10, v11, v15);
      uint64_t v17 = type metadata accessor for StartTimeEndTime(0);
      v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      break;
  }
  *((unsigned char *)a1 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  return a1;
}

void *sub_1C0C1F4A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C0C215A8((uint64_t)a1 + v6, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    uint64_t v9 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v10 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
        uint64_t started = type metadata accessor for StartTime(0);
        v7[*(int *)(started + 20)] = v8[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v12 = sub_1C151631C();
        uint64_t v13 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16);
        v13(v7, v8, v12);
        uint64_t v14 = type metadata accessor for StartTimeEndTime(0);
        v13(&v7[*(int *)(v14 + 20)], &v8[*(int *)(v14 + 20)], v12);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  return a1;
}

_OWORD *sub_1C0C1FA38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      uint64_t v12 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      uint64_t started = type metadata accessor for StartTime(0);
      v9[*(int *)(started + 20)] = v10[*(int *)(started + 20)];
      goto LABEL_5;
    case 8u:
    case 9u:
      uint64_t v14 = sub_1C151631C();
      uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(v9, v10, v14);
      uint64_t v16 = type metadata accessor for StartTimeEndTime(0);
      v15(&v9[*(int *)(v16 + 20)], &v10[*(int *)(v16 + 20)], v14);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  *((unsigned char *)a1 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  return a1;
}

void *sub_1C0C1FF24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_1C0C215A8((uint64_t)a1 + v9, type metadata accessor for SportsDataVisualizationResponseEventStatus);
    uint64_t v12 = type metadata accessor for SportsDataVisualizationResponseEventStatus(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
        uint64_t v13 = sub_1C151631C();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
        uint64_t started = type metadata accessor for StartTime(0);
        v10[*(int *)(started + 20)] = v11[*(int *)(started + 20)];
        goto LABEL_6;
      case 8u:
      case 9u:
        uint64_t v15 = sub_1C151631C();
        uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16(v10, v11, v15);
        uint64_t v17 = type metadata accessor for StartTimeEndTime(0);
        v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1C0C20474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C20488);
}

uint64_t sub_1C0C20488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SportsDataVisualizationResponseMetadata();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0C20538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C2054C);
}

uint64_t sub_1C0C2054C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SportsDataVisualizationResponseMetadata();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataVisualizationResponseScoreItem()
{
  uint64_t result = qword_1EB86AAC8;
  if (!qword_1EB86AAC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C20640()
{
  uint64_t result = type metadata accessor for SportsDataVisualizationResponseEventStatus(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0C206FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v35 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  MEMORY[0x1F4188790](v35);
  unint64_t v34 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFDFB688();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C21608(0, &qword_1EB86B7E0, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v29 - v9;
  uint64_t v11 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (void *)((char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *((unsigned char *)v13 + *(int *)(v14 + 40)) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C2148C();
  uint64_t v15 = (uint64_t)v37;
  sub_1C1520EBC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = v11;
  uint64_t v17 = v36;
  uint64_t v37 = a1;
  LOBYTE(v38) = 0;
  *uint64_t v13 = sub_1C152069C();
  v13[1] = v18;
  LOBYTE(v38) = 1;
  v13[2] = sub_1C152060C();
  v13[3] = v19;
  LOBYTE(v38) = 2;
  uint64_t v20 = sub_1C152060C();
  v29[1] = 0;
  v13[4] = v20;
  v13[5] = v21;
  LOBYTE(v38) = 3;
  if (sub_1C152071C())
  {
    char v39 = 3;
    sub_1C0C2166C((unint64_t *)&qword_1EB87C778, (void (*)(uint64_t))sub_1BFDFB688);
    v29[0] = v6;
    uint64_t v22 = v33;
    sub_1C15206EC();
    unint64_t v23 = v10;
    uint64_t v24 = v29[0];
    uint64_t v25 = sub_1C1517E5C();
    uint64_t v26 = v22;
    uint64_t v27 = v25;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v24, v26);
  }
  else
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    unint64_t v23 = v10;
  }
  v13[6] = v27;
  LOBYTE(v38) = 5;
  sub_1C0C2166C(&qword_1EB86AA40, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseMetadata);
  uint64_t v28 = (uint64_t)v34;
  sub_1C15206EC();
  sub_1C0C214E0(v28, (uint64_t)v13 + *(int *)(v30 + 36));
  sub_1C0A90988(0, (unint64_t *)&qword_1EB86B2E8, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBB320]);
  char v39 = 4;
  sub_1C0A90A3C((unint64_t *)&unk_1EB86B2F0, (void (*)(void))sub_1C01CBB4C);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v8);
  v13[7] = v38;
  sub_1C0C21544((uint64_t)v13, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_1C0C215A8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
}

uint64_t sub_1C0C20ED8(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0C21608(0, &qword_1EA1A4B38, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C2148C();
  sub_1C1520F0C();
  LOBYTE(v15) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    long long v15 = *(_OWORD *)(v3 + 16);
    char v14 = 1;
    uint64_t v10 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
    sub_1C0A90988(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1C0A909D4((unint64_t *)&qword_1EB85C2F0, (unint64_t *)&qword_1EB879C00, v10);
    sub_1C152080C();
    long long v15 = *(_OWORD *)(v3 + 32);
    char v14 = 2;
    sub_1C152080C();
    *(void *)&long long v15 = *(void *)(v3 + 48);
    char v14 = 3;
    uint64_t v11 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C0A90988(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C0A909D4((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v11);
    sub_1C152080C();
    *(void *)&long long v15 = *(void *)(v3 + 56);
    char v14 = 4;
    sub_1C0A90988(0, (unint64_t *)&qword_1EB86B2E8, (uint64_t)&type metadata for SportsDataVisualizationResponseURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C0A90A3C(&qword_1EA197EC0, (void (*)(void))sub_1C01CBC70);
    sub_1C152080C();
    type metadata accessor for SportsDataVisualizationResponseScoreItem();
    LOBYTE(v15) = 5;
    type metadata accessor for SportsDataVisualizationResponseMetadata();
    sub_1C0C2166C(&qword_1EA1A4B40, (void (*)(uint64_t))type metadata accessor for SportsDataVisualizationResponseMetadata);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0C212AC()
{
  uint64_t result = 0x6E6F6E6143636D75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6449746E657665;
      break;
    case 2:
      uint64_t result = 0x615465756761656CLL;
      break;
    case 3:
      uint64_t result = 0x736449676174;
      break;
    case 4:
      uint64_t result = 0x53617461446C7275;
      break;
    case 5:
      uint64_t result = 0x74654D746E657665;
      break;
    case 6:
      uint64_t result = 0x72756F5361746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0C213BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C218C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C213E4(uint64_t a1)
{
  unint64_t v2 = sub_1C0C2148C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C21420(uint64_t a1)
{
  unint64_t v2 = sub_1C0C2148C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C2145C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0C206FC(a1, a2);
}

uint64_t sub_1C0C21474(void *a1)
{
  return sub_1C0C20ED8(a1);
}

unint64_t sub_1C0C2148C()
{
  unint64_t result = qword_1EB86AAB0;
  if (!qword_1EB86AAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AAB0);
  }
  return result;
}

uint64_t sub_1C0C214E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponseMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C21544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataVisualizationResponseScoreItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C215A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0C21608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C2148C();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0C2166C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseScoreItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    _OWORD *result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C21780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseScoreItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseScoreItem.CodingKeys;
}

unint64_t sub_1C0C217BC()
{
  unint64_t result = qword_1EA1A4B48;
  if (!qword_1EA1A4B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B48);
  }
  return result;
}

unint64_t sub_1C0C21814()
{
  unint64_t result = qword_1EB86AAC0;
  if (!qword_1EB86AAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AAC0);
  }
  return result;
}

unint64_t sub_1C0C2186C()
{
  unint64_t result = qword_1EB86AAB8;
  if (!qword_1EB86AAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AAB8);
  }
  return result;
}

uint64_t sub_1C0C218C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0064496C616369;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEB00000000644967 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736449676174 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74654D746E657665 && a2 == 0xED00006174616461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72756F5361746164 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t static FamilyStatus.== infix(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    if (v2 < 0) {
      return (((*a1 & 1) == 0) ^ v2) & (a1[1] == a2[1]);
    }
    else {
      return 0;
    }
  }
  else
  {
    if (v2 < 0) {
      char v3 = 0;
    }
    else {
      char v3 = ((*a1 & 1) == 0) ^ v2;
    }
    return v3 & 1;
  }
}

uint64_t sub_1C0C21C8C(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    if (v2 < 0) {
      return (((*a1 & 1) == 0) ^ v2) & (a1[1] == a2[1]);
    }
    else {
      return 0;
    }
  }
  else
  {
    if (v2 < 0) {
      char v3 = 0;
    }
    else {
      char v3 = ((*a1 & 1) == 0) ^ v2;
    }
    return v3 & 1;
  }
}

uint64_t sub_1C0C21CE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14915EC(*a1, *a2);
}

uint64_t sub_1C0C21CF4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C21D9C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C21E30()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C21ED4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0C22F08();
  *a1 = result;
  return result;
}

void sub_1C0C21F04(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xEC0000007265626DLL;
  unint64_t v5 = 0x654D796C696D6166;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000011;
    unint64_t v4 = 0x80000001C15FE2E0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1702060386;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0C21F68()
{
  unint64_t v1 = 0x654D796C696D6166;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1702060386;
  }
}

uint64_t sub_1C0C21FC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0C22F08();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C21FF0(uint64_t a1)
{
  unint64_t v2 = sub_1C0C22518();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C2202C(uint64_t a1)
{
  unint64_t v2 = sub_1C0C22518();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C22068(char *a1, char *a2)
{
  return sub_1C1491550(*a1, *a2);
}

uint64_t sub_1C0C22074()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C220EC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C22150()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C221C4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0C22224(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701736302;
  if (*v1) {
    uint64_t v2 = 0x7265626D656DLL;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0C22258()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0C222B8()
{
  return sub_1C151EAEC();
}

uint64_t FamilyStatus.encode(to:)(void *a1)
{
  sub_1C0C22850(0, &qword_1EB86FDF0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C22518();
  sub_1C1520F0C();
  if (v9 < 0)
  {
    char v15 = 1;
    char v17 = 0;
    sub_1C0C2256C();
    uint64_t v11 = v14;
    sub_1C152080C();
    if (!v11)
    {
      char v15 = v9 & 1;
      uint64_t v16 = v8;
      char v17 = 1;
      sub_1C0C225C0();
      sub_1C152080C();
    }
  }
  else
  {
    char v15 = 0;
    char v17 = 0;
    sub_1C0C2256C();
    uint64_t v10 = v14;
    sub_1C152080C();
    if (!v10)
    {
      char v15 = 2;
      sub_1C15207DC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0C22518()
{
  unint64_t result = qword_1EB894298;
  if (!qword_1EB894298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894298);
  }
  return result;
}

unint64_t sub_1C0C2256C()
{
  unint64_t result = qword_1EB86FB38;
  if (!qword_1EB86FB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FB38);
  }
  return result;
}

unint64_t sub_1C0C225C0()
{
  unint64_t result = qword_1EA1A4B50;
  if (!qword_1EA1A4B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B50);
  }
  return result;
}

uint64_t FamilyStatus.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_1C0C22850(0, &qword_1EB894588, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v14[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C22518();
  sub_1C1520EBC();
  if (!v2)
  {
    char v16 = 0;
    sub_1C0C228B4();
    sub_1C15206EC();
    if (v14[0])
    {
      char v16 = 1;
      sub_1C0C22908();
      sub_1C15206EC();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      unint64_t v11 = v15;
      unint64_t v12 = v14[0] | 0x8000000000000000;
    }
    else
    {
      v14[0] = 2;
      char v13 = sub_1C15206AC();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      unint64_t v11 = 0;
      unint64_t v12 = v13 & 1;
    }
    *a2 = v12;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0C22850(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C22518();
    unint64_t v7 = a3(a1, &type metadata for FamilyStatus.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0C228B4()
{
  unint64_t result = qword_1EB8942B0;
  if (!qword_1EB8942B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8942B0);
  }
  return result;
}

unint64_t sub_1C0C22908()
{
  unint64_t result = qword_1EA1A4B58;
  if (!qword_1EA1A4B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B58);
  }
  return result;
}

uint64_t sub_1C0C2295C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FamilyStatus.init(from:)(a1, a2);
}

uint64_t sub_1C0C22974(void *a1)
{
  return FamilyStatus.encode(to:)(a1);
}

unint64_t FamilyStatus.description.getter()
{
  if ((*v0 & 0x8000000000000000) != 0)
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000015;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C152088C();
  }
  else
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000013;
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t getEnumTagSinglePayload for FamilyStatus(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)a1 >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FamilyStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 2 * -a2;
      *(void *)(result + 8) = 0;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t *sub_1C0C22B7C(uint64_t *result, uint64_t a2)
{
  _OWORD *result = *result & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FamilyStatus()
{
  return &type metadata for FamilyStatus;
}

unsigned char *storeEnumTagSinglePayload for FamilyStatus.Base(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C22C6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FamilyStatus.Base()
{
  return &type metadata for FamilyStatus.Base;
}

unsigned char *storeEnumTagSinglePayload for FamilyStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    _OWORD *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C22D70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FamilyStatus.CodingKeys()
{
  return &type metadata for FamilyStatus.CodingKeys;
}

unint64_t sub_1C0C22DAC()
{
  unint64_t result = qword_1EA1A4B60;
  if (!qword_1EA1A4B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B60);
  }
  return result;
}

unint64_t sub_1C0C22E04()
{
  unint64_t result = qword_1EA1A4B68;
  if (!qword_1EA1A4B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B68);
  }
  return result;
}

unint64_t sub_1C0C22E5C()
{
  unint64_t result = qword_1EB893AF8;
  if (!qword_1EB893AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB893AF8);
  }
  return result;
}

unint64_t sub_1C0C22EB4()
{
  unint64_t result = qword_1EB8942A0;
  if (!qword_1EB8942A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8942A0);
  }
  return result;
}

uint64_t sub_1C0C22F08()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C0C22F54()
{
  unint64_t result = qword_1EB8942A8;
  if (!qword_1EB8942A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8942A8);
  }
  return result;
}

NewsFeed::PuzzleTeaserInteractionType_optional __swiftcall PuzzleTeaserInteractionType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PuzzleTeaserInteractionType.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 1752461154;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E4572657474656CLL;
  }
}

uint64_t sub_1C0C23064(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147D7C0(*a1, *a2);
}

unint64_t sub_1C0C23074()
{
  unint64_t result = qword_1EA1A4B70;
  if (!qword_1EA1A4B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B70);
  }
  return result;
}

uint64_t sub_1C0C230C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C23170()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C23204()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleTeaserInteractionType_optional sub_1C0C232A8(Swift::String *a1)
{
  return PuzzleTeaserInteractionType.init(rawValue:)(*a1);
}

void sub_1C0C232B4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB00000000797274;
  unint64_t v4 = 0x80000001C1601770;
  unint64_t v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    unint64_t v5 = 1752461154;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E4572657474656CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0C23318()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0C23378()
{
  return sub_1C151EAEC();
}

unsigned char *storeEnumTagSinglePayload for PuzzleTeaserInteractionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    _OWORD *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C23494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleTeaserInteractionType()
{
  return &type metadata for PuzzleTeaserInteractionType;
}

unint64_t sub_1C0C234CC()
{
  unint64_t result = qword_1EA1A4B78;
  if (!qword_1EA1A4B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B78);
  }
  return result;
}

uint64_t static CoverIssueViewLayout.makeLayoutForMyMagazines(context:factories:options:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C1517A9C();
  __n128 v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = *a3;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = v10;
  (*(void (**)(unsigned char *, void, __n128))(v11 + 104))(v9, *MEMORY[0x1E4FAB8F8], v7);
  sub_1C0350724(0, (unint64_t *)&qword_1EB85C830, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  return sub_1C1517BEC();
}

uint64_t sub_1C0C23658(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v45 = a4;
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = a2[40];
  uint64_t v13 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v12);
  double v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  if (qword_1EB85E720 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB93C2A0, sel_size);
  double v17 = v14 * (v15 / v16);
  uint64_t v18 = a2[40];
  uint64_t v19 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
  uint64_t v20 = a2[40];
  uint64_t v21 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
  uint64_t v46 = a1;
  uint64_t v22 = a1;
  uint64_t v42 = a1;
  uint64_t v23 = *MEMORY[0x1E4FABA28];
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 104);
  uint64_t v24 = v44(v11, v23, v8);
  unint64_t v43 = &v41;
  MEMORY[0x1F4188790](v24);
  *(&v41 - 8) = a3;
  *(&v41 - 7) = (uint64_t)a2;
  *((_OWORD *)&v41 - 3) = xmmword_1C1598000;
  double v37 = v17;
  uint64_t v38 = *(double **)&v14;
  uint64_t v25 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0350724(0, &qword_1EB85C7F8, MEMORY[0x1E4FAB6F0]);
  uint64_t v27 = v26;
  uint64_t v28 = sub_1C03507A8(&qword_1EB85C7F0, &qword_1EB85C7F8, v25);
  uint64_t v39 = v28;
  sub_1C151734C();
  unint64_t v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v11, v8);
  uint64_t v46 = v22;
  uint64_t v30 = *MEMORY[0x1E4FAB9E0];
  uint64_t v31 = v8;
  uint64_t v32 = v8;
  uint64_t v33 = (void (*)(char *, uint64_t, uint64_t, __n128))v44;
  v44(v11, v30, v31);
  uint64_t v39 = v27;
  uint64_t v40 = v28;
  double v37 = COERCE_DOUBLE(sub_1C0C269A8);
  uint64_t v38 = 0;
  sub_1C15173FC();
  uint64_t v34 = ((uint64_t (*)(char *, uint64_t))v29)(v11, v32);
  uint64_t v45 = &v41;
  uint64_t v46 = v42;
  __n128 v35 = MEMORY[0x1F4188790](v34);
  v33(v11, v30, v32, v35);
  uint64_t v39 = v27;
  uint64_t v40 = v28;
  double v37 = COERCE_DOUBLE(sub_1C0C274B8);
  uint64_t v38 = &v37;
  sub_1C15173FC();
  return ((uint64_t (*)(char *, uint64_t))v29)(v11, v32);
}

uint64_t sub_1C0C23AEC(void *a1, void *a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v100 = a4;
  uint64_t v93 = a2;
  uint64_t v111 = a1;
  sub_1C0C27518();
  uint64_t v96 = *(void *)(v10 - 8);
  uint64_t v97 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v95 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  BOOL v99 = (uint64_t *)((char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v98 = (uint64_t *)((char *)&v91 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v92 = (char *)&v91 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (uint64_t *)((char *)&v91 - v21);
  *(void *)&v129[0] = a1;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0x4024000000000000;
  *uint64_t v22 = v23;
  uint64_t v24 = *(void (**)(uint64_t *))(v14 + 104);
  unsigned int v105 = *MEMORY[0x1E4FABA08];
  v24(v22);
  uint64_t v25 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v27 = v26;
  uint64_t v28 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v25);
  uint64_t v107 = v27;
  sub_1C151738C();
  unint64_t v29 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  uint64_t v103 = v22;
  uint64_t v110 = v14 + 8;
  BOOL v106 = v29;
  v29(v22, v13);
  uint64_t v128 = v111;
  KeyPath = (void (*)(uint64_t, void, uint64_t))swift_getKeyPath();
  uint64_t v30 = v92;
  uint64_t v104 = v13;
  uint64_t v108 = v24;
  uint64_t v109 = v14 + 104;
  ((void (*)(void))v24)();
  uint64_t v127 = v93[3];
  long long v31 = *(_OWORD *)(a3 + 88);
  long long v32 = *(_OWORD *)(a3 + 120);
  long long v130 = *(_OWORD *)(a3 + 104);
  v131[0] = v32;
  *(_OWORD *)((char *)v131 + 9) = *(_OWORD *)(a3 + 129);
  long long v33 = *(_OWORD *)(a3 + 24);
  long long v34 = *(_OWORD *)(a3 + 56);
  v129[2] = *(_OWORD *)(a3 + 40);
  v129[3] = v34;
  v129[4] = *(_OWORD *)(a3 + 72);
  v129[5] = v31;
  v129[0] = *(_OWORD *)(a3 + 8);
  v129[1] = v33;
  __n128 v35 = *(void **)&v129[0];
  if ((void)v31 == 1 || (uint64_t v36 = (void *)*((void *)&v130 + 1)) == 0)
  {
    uint64_t v37 = v28;
    swift_retain();
    sub_1C0187FB0((uint64_t)v129);
    FCIssue.issueCoverModel.getter((uint64_t)&v123);
    sub_1C01880A4((uint64_t)v129);
    __n128 v35 = v123;
    uint64_t v38 = v124;
    long long v44 = *(_OWORD *)v125;
    long long v41 = *(_OWORD *)&v125[16];
    uint64_t v43 = *(void *)&v125[32];
    char v42 = v126;
  }
  else
  {
    uint64_t v37 = v28;
    uint64_t v38 = *(void *)&v131[0];
    v123 = *(void **)&v129[0];
    uint64_t v124 = *(void *)&v131[0];
    *(void *)uint64_t v125 = *((void *)&v130 + 1);
    memset(&v125[8], 0, 32);
    char v126 = 0;
    swift_retain();
    id v39 = v36;
    id v40 = v35;
    long long v41 = 0uLL;
    char v42 = 0;
    uint64_t v43 = 0;
    long long v44 = (unint64_t)v36;
  }
  unint64_t v117 = v35;
  uint64_t v118 = v38;
  long long v119 = v44;
  long long v120 = v41;
  uint64_t v121 = v43;
  char v122 = v42;
  uint64_t v102 = a3;
  uint64_t v93 = (void *)(a3 + 296);
  uint64_t v46 = *(void *)(a3 + 320);
  uint64_t v45 = *(void *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 296), v46);
  double v47 = (*(double (**)(uint64_t, uint64_t))(v45 + 64))(v46, v45);
  LOBYTE(v112) = 0;
  uint64_t v113 = 0x4010000000000000;
  double v114 = v47;
  uint64_t v115 = -1;
  uint64_t v116 = 0x3FE0000000000000;
  sub_1C0C2762C(0, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1C01BC7F0();
  sub_1C0C27694();
  sub_1C0C274D0(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  uint64_t v48 = v95;
  sub_1C15175AC();
  uint64_t v101 = v37;
  sub_1C151736C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v48, v97);
  uint64_t v49 = v104;
  uint64_t v50 = v106;
  v106((uint64_t *)v30, v104);
  unint64_t v51 = v111;
  v123 = v111;
  uint64_t v52 = swift_allocObject();
  *(double *)(v52 + 16) = a5;
  unint64_t v53 = v103;
  *uint64_t v103 = v52;
  ((void (*)(uint64_t *, void, uint64_t))v108)(v53, v105, v49);
  sub_1C151738C();
  v50(v53, v49);
  v123 = v51;
  sub_1BFF35C38();
  uint64_t v55 = v54;
  uint64_t v97 = v54;
  uint64_t v95 = (char *)swift_allocBox();
  uint64_t v57 = v56;
  uint64_t v58 = (uint64_t *)(v56 + *(int *)(v55 + 48));
  LODWORD(v96) = *MEMORY[0x1E4FAB790];
  uint64_t v59 = v96;
  uint64_t v60 = sub_1C151786C();
  uint64_t v61 = *(void *)(v60 - 8);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 104);
  v63 = (char *)(v61 + 104);
  uint64_t v91 = v60;
  v62(v57, v59, v60);
  uint64_t v92 = v63;
  KeyPath = v62;
  uint64_t v64 = swift_allocObject();
  uint64_t v66 = *(void *)(v102 + 320);
  uint64_t v65 = *(void *)(v102 + 328);
  __swift_project_boxed_opaque_existential_1(v93, v66);
  *(double *)(v64 + 16) = (*(double (**)(uint64_t, uint64_t))(v65 + 24))(v66, v65);
  *uint64_t v58 = v64;
  v62((uint64_t)v58, *MEMORY[0x1E4FAB798], v60);
  v67 = v98;
  *uint64_t v98 = (uint64_t)v95;
  LODWORD(v95) = *MEMORY[0x1E4FAB9E8];
  uint64_t v68 = v104;
  v69 = v108;
  uint64_t v70 = ((uint64_t (*)(uint64_t *))v108)(v67);
  MEMORY[0x1F4188790](v70);
  sub_1C151731C();
  uint64_t v71 = v68;
  v72 = v106;
  v106(v67, v68);
  unint64_t v73 = v111;
  unint64_t v117 = v111;
  uint64_t v74 = swift_allocObject();
  *(double *)(v74 + 16) = a6;
  v75 = v103;
  *uint64_t v103 = v74;
  v76 = v75;
  ((void (*)(uint64_t *, void, uint64_t))v69)(v75, v105, v71);
  uint64_t v77 = v76;
  sub_1C151738C();
  v72(v76, v71);
  unint64_t v117 = v73;
  uint64_t v78 = v97;
  uint64_t v79 = swift_allocBox();
  uint64_t v81 = v80 + *(int *)(v78 + 48);
  uint64_t v82 = v91;
  v83 = KeyPath;
  KeyPath(v80, v96, v91);
  v83(v81, *MEMORY[0x1E4FAB7B0], v82);
  uint64_t v84 = v99;
  *BOOL v99 = v79;
  uint64_t v85 = v108;
  uint64_t v86 = ((uint64_t (*)(uint64_t *, void, uint64_t))v108)(v84, v95, v71);
  MEMORY[0x1F4188790](v86);
  sub_1C151731C();
  uint64_t v87 = v84;
  uint64_t v88 = (uint64_t (*)(uint64_t *, uint64_t))v106;
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v106)(v87, v71);
  if ((v100 & 2) != 0)
  {
    uint64_t v112 = v111;
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = 0x4038000000000000;
    *uint64_t v77 = v90;
    ((void (*)(uint64_t *, void, uint64_t))v85)(v77, v105, v71);
    sub_1C151738C();
    return v88(v77, v71);
  }
  return result;
}

uint64_t sub_1C0C24550(uint64_t a1, void *a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v22 - v5);
  uint64_t v27 = a1;
  sub_1BFF35C38();
  uint64_t v8 = v7;
  uint64_t v23 = swift_allocBox();
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)(v9 + *(int *)(v8 + 48));
  uint64_t v12 = *MEMORY[0x1E4FAB790];
  uint64_t v13 = sub_1C151786C();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  v14(v10, v12, v13);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = a2[40];
  uint64_t v17 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v16);
  *(double *)(v15 + 16) = (*(double (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  *uint64_t v11 = v15;
  v14((uint64_t)v11, *MEMORY[0x1E4FAB798], v13);
  uint64_t v18 = v24;
  uint64_t *v6 = v23;
  uint64_t v19 = v25;
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v6, *MEMORY[0x1E4FAB9E8], v25);
  uint64_t v26 = a2;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v20);
  sub_1C151731C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v6, v19);
}

uint64_t sub_1C0C24820(uint64_t a1, uint64_t a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v20 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 336);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v18);
    sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v19 = v17;
    sub_1C151737C();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0C24B68(uint64_t a1, void *a2, double a3)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v148 = v6;
  uint64_t v149 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v132 - v11);
  int v13 = *((unsigned __int8 *)a2 + 32);
  v147 = a2;
  if (v13)
  {
    if (v13 == 1)
    {
      uint64_t v153 = a1;
      sub_1BFF35C38();
      uint64_t v15 = v14;
      uint64_t v16 = swift_allocBox();
      uint64_t v18 = v17;
      uint64_t v135 = (uint64_t *)v15;
      uint64_t v19 = v17 + *(int *)(v15 + 48);
      v145 = v12;
      uint64_t v20 = *MEMORY[0x1E4FAB7B0];
      uint64_t v21 = sub_1C151786C();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v146 = a1;
      uint64_t v23 = *(void (**)(void))(v22 + 104);
      uint64_t v24 = v22 + 104;
      ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v18, v20, v21);
      uint64_t v142 = (void (*)(void))v21;
      v140 = v23;
      uint64_t v138 = v24;
      ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v19, v20, v21);
      uint64_t *v9 = v16;
      uint64_t v25 = v149;
      uint64_t v27 = v149 + 104;
      uint64_t v26 = *(uint64_t (**)(uint64_t *))(v149 + 104);
      unsigned int v136 = *MEMORY[0x1E4FAB9E8];
      uint64_t v28 = v26(v9);
      uint64_t v143 = &v132;
      MEMORY[0x1F4188790](v28);
      unint64_t v29 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
      v144 = v30;
      uint64_t v31 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v29);
      uint64_t v131 = v31;
      long long v32 = v145;
      sub_1C151731C();
      uint64_t v33 = v148;
      long long v34 = *(void (**)(uint64_t *, uint64_t))(v25 + 8);
      v34(v9, v148);
      uint64_t v35 = v146;
      v151[0] = v146;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = 0x4010000000000000;
      *long long v32 = v36;
      unsigned int v134 = *MEMORY[0x1E4FABA00];
      uint64_t v141 = v26;
      uint64_t v139 = v27;
      v26(v32);
      uint64_t v143 = (uint64_t *)v31;
      sub_1C151738C();
      uint64_t v149 = v25 + 8;
      uint64_t v137 = v34;
      v34(v32, v33);
      uint64_t v37 = v147;
      uint64_t v38 = v147[7];
      sub_1C01BC5C8((uint64_t)v147, (uint64_t)v151);
      if (v38)
      {
        char v42 = v152;
        uint64_t result = sub_1C01BC710((uint64_t)v151);
        if ((v42 & 8) == 0)
        {
          uint64_t v150 = v35;
          uint64_t v43 = v135;
          uint64_t v133 = swift_allocBox();
          uint64_t v45 = v44;
          uint64_t v135 = (uint64_t *)((char *)v44 + *((int *)v43 + 12));
          uint64_t v46 = swift_allocObject();
          *(double *)(v46 + 16) = a3;
          *uint64_t v45 = v46;
          double v47 = v140;
          ((void (*)(uint64_t *, void, void (*)(void)))v140)(v45, *MEMORY[0x1E4FAB798], v142);
          uint64_t v48 = swift_allocObject();
          uint64_t v50 = v37[40];
          uint64_t v49 = v37[41];
          __swift_project_boxed_opaque_existential_1(v37 + 37, v50);
          *(double *)(v48 + 16) = (*(double (**)(uint64_t, uint64_t))(v49 + 8))(v50, v49);
          *uint64_t v135 = v48;
          v47();
          *long long v32 = v133;
          uint64_t v51 = v148;
          uint64_t v52 = v141;
          uint64_t v53 = ((uint64_t (*)(uint64_t *, void, uint64_t))v141)(v32, v136, v148);
          MEMORY[0x1F4188790](v53);
          *(&v132 - 4) = (uint64_t)v37;
          *((double *)&v132 - 3) = a3;
          uint64_t v131 = (uint64_t)v143;
          sub_1C151734C();
          uint64_t v54 = (uint64_t (*)(uint64_t *, uint64_t))v137;
          v137(v32, v51);
          uint64_t v150 = v146;
          uint64_t v55 = swift_allocObject();
          *(void *)(v55 + 16) = 0x4010000000000000;
          *long long v32 = v55;
          ((void (*)(uint64_t *, void, uint64_t))v52)(v32, v134, v51);
          sub_1C151738C();
          return v54(v32, v51);
        }
      }
      else
      {
        return sub_1C01BC710((uint64_t)v151);
      }
    }
    else
    {
      uint64_t v41 = a2[7];
      sub_1C01BC5C8((uint64_t)a2, (uint64_t)v151);
      if (v41)
      {
        char v98 = v152;
        sub_1C01BC710((uint64_t)v151);
        if ((v98 & 8) == 0)
        {
          uint64_t v153 = a1;
          sub_1BFF35C38();
          uint64_t v100 = v99;
          uint64_t v101 = swift_allocBox();
          uint64_t v103 = v102;
          v144 = (uint64_t *)((char *)v102 + *(int *)(v100 + 48));
          v145 = (uint64_t *)v101;
          uint64_t v104 = swift_allocObject();
          *(double *)(v104 + 16) = a3;
          *uint64_t v103 = v104;
          LODWORD(v143) = *MEMORY[0x1E4FAB798];
          uint64_t v105 = v143;
          uint64_t v106 = sub_1C151786C();
          uint64_t v142 = *(void (**)(void))(*(void *)(v106 - 8) + 104);
          ((void (*)(uint64_t *, uint64_t, uint64_t))v142)(v103, v105, v106);
          uint64_t v107 = swift_allocObject();
          uint64_t v108 = v147;
          uint64_t v109 = v147[40];
          uint64_t v110 = v147[41];
          __swift_project_boxed_opaque_existential_1(v147 + 37, v109);
          *(double *)(v107 + 16) = (*(double (**)(uint64_t, uint64_t))(v110 + 8))(v109, v110);
          uint64_t *v144 = v107;
          v142();
          *uint64_t v12 = (uint64_t)v145;
          uint64_t v111 = *MEMORY[0x1E4FAB9E8];
          v145 = *(uint64_t **)(v149 + 104);
          uint64_t v146 = a1;
          uint64_t v112 = v148;
          uint64_t v113 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v145)(v12, v111, v148);
          MEMORY[0x1F4188790](v113);
          *(&v132 - 4) = (uint64_t)v108;
          *((double *)&v132 - 3) = a3;
          double v114 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
          sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
          uint64_t v131 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v114);
          sub_1C151734C();
          uint64_t v115 = *(void (**)(uint64_t *, uint64_t))(v149 + 8);
          v115(v12, v112);
          uint64_t v153 = v146;
          uint64_t v116 = swift_allocObject();
          *(void *)(v116 + 16) = 0x4010000000000000;
          *uint64_t v12 = v116;
          ((void (*)(uint64_t *, void, uint64_t))v145)(v12, *MEMORY[0x1E4FABA00], v112);
          sub_1C151738C();
          uint64_t v117 = v112;
          a1 = v146;
          v115(v12, v117);
        }
      }
      else
      {
        sub_1C01BC710((uint64_t)v151);
      }
      v151[0] = a1;
      sub_1BFF35C38();
      uint64_t v119 = v118;
      uint64_t v120 = swift_allocBox();
      char v122 = v121;
      v123 = (char *)v121 + *(int *)(v119 + 48);
      uint64_t v124 = sub_1C151786C();
      uint64_t v125 = swift_allocBox();
      sub_1C151785C();
      *char v122 = v125;
      char v126 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v124 - 8) + 104);
      v126(v122, *MEMORY[0x1E4FAB7A0], v124);
      v126((uint64_t *)v123, *MEMORY[0x1E4FAB7B0], v124);
      *uint64_t v12 = v120;
      uint64_t v127 = v148;
      uint64_t v128 = v149;
      uint64_t v129 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v149 + 104))(v12, *MEMORY[0x1E4FAB9E8], v148);
      MEMORY[0x1F4188790](v129);
      long long v130 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
      uint64_t v131 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v130);
      sub_1C151731C();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v128 + 8))(v12, v127);
    }
  }
  else
  {
    v145 = (uint64_t *)((char *)&v132 - v11);
    uint64_t v40 = a2[7];
    sub_1C01BC5C8((uint64_t)a2, (uint64_t)v151);
    uint64_t v146 = a1;
    if (v40)
    {
      char v56 = v152;
      sub_1C01BC710((uint64_t)v151);
      if ((v56 & 8) == 0)
      {
        uint64_t v153 = a1;
        sub_1BFF35C38();
        uint64_t v58 = v57;
        uint64_t v59 = swift_allocBox();
        uint64_t v61 = v60;
        uint64_t v143 = (uint64_t *)((char *)v60 + *(int *)(v58 + 48));
        v144 = (uint64_t *)v59;
        uint64_t v62 = swift_allocObject();
        *(double *)(v62 + 16) = a3;
        *uint64_t v61 = v62;
        uint64_t v63 = *MEMORY[0x1E4FAB798];
        uint64_t v64 = sub_1C151786C();
        uint64_t v142 = *(void (**)(void))(*(void *)(v64 - 8) + 104);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v142)(v61, v63, v64);
        uint64_t v65 = swift_allocObject();
        uint64_t v66 = v147;
        uint64_t v67 = v147[40];
        uint64_t v68 = v147[41];
        __swift_project_boxed_opaque_existential_1(v147 + 37, v67);
        *(double *)(v65 + 16) = (*(double (**)(uint64_t, uint64_t))(v68 + 8))(v67, v68);
        v69 = v142;
        *uint64_t v143 = v65;
        v69();
        uint64_t v70 = v145;
        uint64_t *v145 = (uint64_t)v144;
        uint64_t v71 = *MEMORY[0x1E4FAB9E8];
        uint64_t v73 = v148;
        uint64_t v72 = v149;
        v144 = *(uint64_t **)(v149 + 104);
        uint64_t v74 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v144)(v70, v71, v148);
        MEMORY[0x1F4188790](v74);
        *(&v132 - 4) = (uint64_t)v66;
        *((double *)&v132 - 3) = a3;
        v75 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
        uint64_t v131 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v75);
        sub_1C151734C();
        uint64_t v76 = v72;
        a1 = v146;
        uint64_t v77 = *(void (**)(uint64_t *, uint64_t))(v76 + 8);
        v77(v70, v73);
        uint64_t v153 = a1;
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = 0x4010000000000000;
        *uint64_t v70 = v78;
        ((void (*)(uint64_t *, void, uint64_t))v144)(v70, *MEMORY[0x1E4FABA00], v73);
        sub_1C151738C();
        v77(v70, v73);
      }
    }
    else
    {
      sub_1C01BC710((uint64_t)v151);
    }
    v151[0] = a1;
    sub_1BFF35C38();
    uint64_t v80 = v79;
    v144 = (uint64_t *)swift_allocBox();
    uint64_t v82 = v81;
    v83 = (char *)v81 + *(int *)(v80 + 48);
    uint64_t v84 = sub_1C151786C();
    uint64_t v85 = swift_allocBox();
    uint64_t v87 = v86;
    uint64_t v88 = swift_allocObject();
    *(double *)(v88 + 16) = a3;
    *uint64_t v87 = v88;
    BOOL v89 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v84 - 8) + 104);
    uint64_t v91 = v148;
    uint64_t v90 = v149;
    v89(v87, *MEMORY[0x1E4FAB798], v84);
    *uint64_t v82 = v85;
    v89(v82, *MEMORY[0x1E4FAB7A0], v84);
    v89((uint64_t *)v83, *MEMORY[0x1E4FAB7B0], v84);
    uint64_t v92 = v145;
    uint64_t *v145 = (uint64_t)v144;
    uint64_t v93 = *(uint64_t (**)(uint64_t *, void, uint64_t))(v90 + 104);
    uint64_t v94 = v93(v92, *MEMORY[0x1E4FAB9E8], v91);
    v144 = &v132;
    MEMORY[0x1F4188790](v94);
    uint64_t v95 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    uint64_t v131 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v95);
    sub_1C151731C();
    uint64_t v96 = *(void (**)(uint64_t *, uint64_t))(v90 + 8);
    v96(v92, v91);
    v151[0] = v146;
    uint64_t v97 = swift_allocObject();
    *(void *)(v97 + 16) = 0x4010000000000000;
    *uint64_t v92 = v97;
    v93(v92, *MEMORY[0x1E4FABA00], v91);
    sub_1C151738C();
    return ((uint64_t (*)(uint64_t *, uint64_t))v96)(v92, v91);
  }
  return result;
}

uint64_t sub_1C0C25B18(uint64_t a1, void *a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v23 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v22 - v6);
  uint64_t v25 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v9 = v8;
  uint64_t v22 = swift_allocBox();
  uint64_t v11 = v10;
  uint64_t v12 = (uint64_t *)(v10 + *(int *)(v9 + 48));
  uint64_t v13 = *MEMORY[0x1E4FAB790];
  uint64_t v14 = sub_1C151786C();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);
  v15(v11, v13, v14);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = a2[40];
  uint64_t v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v17);
  *(double *)(v16 + 16) = (*(double (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  *uint64_t v12 = v16;
  v15((uint64_t)v12, *MEMORY[0x1E4FAB798], v14);
  uint64_t v19 = v23;
  *uint64_t v7 = v22;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB9E8], v19);
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v20);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t sub_1C0C25E10(uint64_t a1, uint64_t a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v20 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 360);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v18);
    sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v19 = v17;
    sub_1C151737C();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0C26150(uint64_t a1, uint64_t a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v28 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 360);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    sub_1C0350804();
    sub_1C0C2762C(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t v21 = *(void *)(v20 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
    unint64_t v24 = v23 + v22;
    id v25 = v17;
    sub_1C15179DC();
    uint64_t v26 = *(void (**)(unint64_t, void, uint64_t))(v20 + 104);
    v26(v24, *MEMORY[0x1E4FAB550], v19);
    sub_1C15179DC();
    v26(v24 + v21, *MEMORY[0x1E4FAB560], v19);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v27);
    sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0C265B4(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t KeyPath = a1;
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v37 - v11);
  uint64_t v44 = a1;
  uint64_t v13 = swift_allocObject();
  char v14 = a2 + 37;
  uint64_t v15 = a2[40];
  uint64_t v16 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v15);
  double v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  uint64_t v19 = a2[40];
  uint64_t v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(v14, v19);
  *(double *)(v13 + 16) = (v17 - (*(double (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18)) * 0.5;
  *uint64_t v12 = v13;
  uint64_t v20 = *MEMORY[0x1E4FABA08];
  uint64_t v43 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  uint64_t v37 = v9;
  v43(v12, v20, v9);
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v40 = v22;
  uint64_t v39 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v21);
  sub_1C151738C();
  uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  uint64_t v41 = v10 + 8;
  char v42 = v23;
  v23(v12, v9);
  uint64_t v44 = KeyPath;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v25 = v24;
  uint64_t v26 = swift_allocBox();
  uint64_t v28 = v27;
  unint64_t v29 = (uint64_t *)((char *)v27 + *(int *)(v25 + 48));
  uint64_t v30 = swift_allocObject();
  *(double *)(v30 + 16) = a3;
  *uint64_t v28 = v30;
  uint64_t v31 = *MEMORY[0x1E4FAB798];
  uint64_t v32 = sub_1C151786C();
  uint64_t v33 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v28, v31, v32);
  uint64_t v34 = swift_allocObject();
  *(double *)(v34 + 16) = a4;
  *unint64_t v29 = v34;
  v33(v29, v31, v32);
  *uint64_t v12 = v26;
  uint64_t v35 = v37;
  v43(v12, *MEMORY[0x1E4FAB9E8], v37);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return v42(v12, v35);
}

uint64_t sub_1C0C269A8(void *a1)
{
  uint64_t v1 = *a1;
  uint64_t v88 = (uint64_t)a1;
  uint64_t v89 = v1;
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v62 - v6);
  uint64_t v90 = a1;
  uint64_t KeyPath = (uint64_t (*)(uint64_t *, uint64_t))swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v9 = v8;
  uint64_t v87 = v8;
  uint64_t v10 = swift_allocBox();
  uint64_t v12 = v11;
  uint64_t v13 = (uint64_t *)(v11 + *(int *)(v9 + 48));
  uint64_t v14 = *MEMORY[0x1E4FAB790];
  uint64_t v15 = sub_1C151786C();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = *(void (**)(uint64_t, uint64_t))(v16 + 104);
  uint64_t v18 = v16 + 104;
  uint64_t v80 = v15;
  v17(v12, v14);
  uint64_t v81 = v17;
  uint64_t v82 = v18;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0x4000000000000000;
  *uint64_t v13 = v19;
  unsigned int v79 = *MEMORY[0x1E4FAB798];
  ((void (*)(uint64_t *))v17)(v13);
  *uint64_t v7 = v10;
  unsigned int v84 = *MEMORY[0x1E4FAB9E8];
  uint64_t v20 = *(void (**)(void))(v5 + 104);
  uint64_t v85 = v5 + 104;
  uint64_t v86 = (void (*)(uint64_t *, void, uint64_t))v20;
  uint64_t v21 = v4;
  v20(v7);
  sub_1C0350804();
  uint64_t v78 = v22;
  sub_1C0C2762C(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v66 = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = (v26 + 32) & ~v26;
  uint64_t v75 = v27;
  uint64_t v76 = v25;
  uint64_t v77 = v26 | 7;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C1529AE0;
  uint64_t v29 = v28 + v27;
  unsigned int v74 = *MEMORY[0x1E4FAB5E8];
  uint64_t v30 = v74;
  sub_1C0C2762C(0, &qword_1EB85C7C8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  uint64_t v71 = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 104);
  uint64_t v73 = v32 + 104;
  v72(v29, v30, v31);
  unsigned int v65 = *MEMORY[0x1E4FAB620];
  uint64_t v67 = *(void (**)(void))(v24 + 104);
  uint64_t v68 = v24 + 104;
  ((void (*)(uint64_t))v67)(v29);
  uint64_t v70 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v69 = sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8);
  uint64_t v64 = v5 + 8;
  uint64_t KeyPath = v33;
  uint64_t v34 = v7;
  uint64_t v63 = v21;
  v33(v7, v21);
  uint64_t v90 = (void *)v88;
  uint64_t v88 = swift_getKeyPath();
  uint64_t v35 = v87;
  uint64_t v36 = swift_allocBox();
  uint64_t v38 = v37;
  uint64_t v39 = (uint64_t *)((char *)v37 + *(int *)(v35 + 48));
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = 0x403C000000000000;
  uint64_t *v38 = v40;
  uint64_t v41 = v79;
  uint64_t v42 = v80;
  uint64_t v43 = (void (*)(uint64_t *, uint64_t, uint64_t))v81;
  ((void (*)(uint64_t *, void, uint64_t))v81)(v38, v79, v80);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = 0x403C000000000000;
  *uint64_t v39 = v44;
  v43(v39, v41, v42);
  uint64_t v62 = v34;
  *uint64_t v34 = v36;
  v86(v34, v84, v21);
  uint64_t v45 = v75;
  uint64_t v87 = 2 * v76;
  uint64_t v46 = v76;
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C152C7F0;
  uint64_t v48 = v47 + v45;
  uint64_t v49 = v71;
  uint64_t v50 = v72;
  v72(v48, v74, v71);
  uint64_t v51 = v65;
  uint64_t v52 = v66;
  uint64_t v53 = v67;
  ((void (*)(uint64_t, void, uint64_t))v67)(v48, v65, v66);
  uint64_t v54 = v48 + v46;
  v50(v54, *MEMORY[0x1E4FAB610], v49);
  ((void (*)(uint64_t, uint64_t, uint64_t))v53)(v54, v51, v52);
  __asm { FMOV            V0.2D, #-10.0 }
  *(_OWORD *)(v48 + v87) = _Q0;
  v53();
  uint64_t v60 = v62;
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return KeyPath(v60, v63);
}

uint64_t sub_1C0C27070(uint64_t a1, double a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  v29[0] = v4;
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v29 - v5);
  uint64_t v31 = a1;
  v29[1] = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v8 = v7;
  uint64_t v9 = swift_allocBox();
  uint64_t v11 = v10;
  uint64_t v12 = (uint64_t *)((char *)v10 + *(int *)(v8 + 48));
  uint64_t v13 = swift_allocObject();
  *(double *)(v13 + 16) = a2;
  *uint64_t v11 = v13;
  uint64_t v14 = *MEMORY[0x1E4FAB798];
  uint64_t v15 = sub_1C151786C();
  uint64_t v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);
  v16(v11, v14, v15);
  uint64_t v17 = swift_allocObject();
  *(double *)(v17 + 16) = a2;
  *uint64_t v12 = v17;
  v16(v12, v14, v15);
  uint64_t *v6 = v9;
  uint64_t v18 = v29[0];
  (*(void (**)(uint64_t *, void, void))(v30 + 104))(v6, *MEMORY[0x1E4FAB9E8], v29[0]);
  sub_1C0350804();
  sub_1C0C2762C(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
  unint64_t v24 = v23 + v22;
  uint64_t v25 = *MEMORY[0x1E4FAB610];
  sub_1C0C2762C(0, &qword_1EB85C7C8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v24, *MEMORY[0x1E4FAB620], v20);
  uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v27);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 8))(v6, v18);
}

uint64_t sub_1C0C274A4(void *a1)
{
  return sub_1C0C23AEC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 64), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_1C0C274B8(uint64_t a1)
{
  return sub_1C0C27070(a1, *(double *)(v1 + 16));
}

uint64_t sub_1C0C274C0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C274D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0C27518()
{
  if (!qword_1EB85C7E8)
  {
    sub_1C0C2762C(255, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
    type metadata accessor for IssueCoverViewLayoutAttributesFactory();
    sub_1C01BC7F0();
    sub_1C0C27694();
    sub_1C0C274D0(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
    unint64_t v0 = sub_1C15175BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C7E8);
    }
  }
}

void sub_1C0C2762C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0C27694()
{
  unint64_t result = qword_1EB85C7B8;
  if (!qword_1EB85C7B8)
  {
    sub_1C0C2762C(255, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C7B8);
  }
  return result;
}

uint64_t sub_1C0C27724(uint64_t a1)
{
  return sub_1C0C24550(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C0C2772C(uint64_t a1)
{
  return sub_1C0C24B68(a1, *(void **)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_1C0C27738(uint64_t a1)
{
  return sub_1C0C26150(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0C27740(uint64_t a1)
{
  return sub_1C0C25E10(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0C27748(uint64_t a1)
{
  return sub_1C0C265B4(a1, *(void **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1C0C27768(uint64_t a1)
{
  return sub_1C0C25B18(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C0C27770()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C277A8(uint64_t a1)
{
  return sub_1C0C24820(a1, *(void *)(v1 + 16));
}

uint64_t FormatGroupNodeMaskDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 88));
}

id FormatGroupNodeMaskDataLayoutAttributes.maskData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void **)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  uint64_t v10 = *(void *)(v2 + 56);
  LOBYTE(v2) = *(unsigned char *)(v2 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v2;
  return sub_1C00364B0(v3, v4, v5, v6, v7, v8, v9, v10, v2);
}

uint64_t FormatGroupNodeMaskDataLayoutAttributes.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  sub_1C0036570(*(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
  return v0;
}

uint64_t FormatGroupNodeMaskDataLayoutAttributes.__deallocating_deinit()
{
  FormatGroupNodeMaskDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatGroupNodeMaskDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeMaskDataLayoutAttributes);
}

uint64_t sub_1C0C27998@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Font.init(from:)(a1, a2);
}

uint64_t sub_1C0C279B0(void *a1)
{
  return FormatGroupBinding.Font.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatGroupBindingV4FontO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)a1;
  double v2 = *(double *)(a1 + 8);
  unsigned int v4 = *(unsigned __int16 *)(a1 + 16) | (*(unsigned __int8 *)(a1 + 18) << 16);
  double v6 = *(double *)a2;
  double v5 = *(double *)(a2 + 8);
  unsigned int v7 = *(unsigned __int16 *)(a2 + 16) | (*(unsigned __int8 *)(a2 + 18) << 16);
  switch(*(unsigned __int8 *)(a1 + 18) >> 6)
  {
    case 1:
      if ((v7 & 0xC00000) == 0x400000) {
        goto LABEL_19;
      }
      goto LABEL_45;
    case 2:
      if ((v7 & 0xC00000) != 0x800000 || v3 != v6) {
        goto LABEL_45;
      }
      if ((*(_WORD *)(a1 + 16) & 0xFF00) == 0xC00)
      {
        if ((*(_WORD *)(a2 + 16) & 0xFF00) == 0xC00) {
          goto LABEL_32;
        }
      }
      else if ((*(_WORD *)(a2 + 16) & 0xFF00) != 0xC00)
      {
        goto LABEL_36;
      }
      goto LABEL_45;
    case 3:
      if (((v7 >> 22) & 3) != 3) {
        goto LABEL_45;
      }
LABEL_19:
      v21[0] = *(void *)a1;
      *(double *)&v21[1] = v2;
      __int16 v22 = v4;
      char v23 = BYTE2(v4) & 0x3F;
      *(double *)uint64_t v18 = v6;
      *(double *)&v18[1] = v5;
      __int16 v19 = v7;
      char v20 = BYTE2(v7) & 0x3F;
      char v9 = _s8NewsFeed16FormatTagBindingV4FontO2eeoiySbAE_AEtFZ_0((uint64_t)v21, (uint64_t)v18);
      return v9 & 1;
    default:
      if ((v7 & 0xFFFFFF) >= 0x400000) {
        goto LABEL_45;
      }
      if (HIWORD(v4))
      {
        if (HIWORD(v4) == 1)
        {
          if (BYTE2(v7) != 1 || v3 != v6) {
            goto LABEL_45;
          }
        }
        else if (BYTE2(v7) != 2 || v3 != v6)
        {
          goto LABEL_45;
        }
      }
      else
      {
        if (BYTE2(v7)) {
          BOOL v10 = 0;
        }
        else {
          BOOL v10 = v3 == v6;
        }
        if (!v10) {
          goto LABEL_45;
        }
      }
      if ((*(_WORD *)(a1 + 16) & 0xFF00) == 0xC00)
      {
        if ((*(_WORD *)(a2 + 16) & 0xFF00) == 0xC00)
        {
LABEL_32:
          char v9 = 1;
          return v9 & 1;
        }
LABEL_45:
        char v9 = 0;
        return v9 & 1;
      }
      if ((*(_WORD *)(a2 + 16) & 0xFF00) == 0xC00) {
        goto LABEL_45;
      }
LABEL_36:
      if (*(_WORD *)(a1 + 16))
      {
        if ((*(_WORD *)(a2 + 16) & 1) == 0) {
          goto LABEL_45;
        }
      }
      else if ((*(_WORD *)(a2 + 16) & 1) != 0 || v2 != v5)
      {
        goto LABEL_45;
      }
      LOBYTE(v21[0]) = HIBYTE(*(_WORD *)(a1 + 16));
      LOBYTE(v18[0]) = BYTE1(v7);
      uint64_t v12 = FormatFontScalingStyle.rawValue.getter();
      uint64_t v14 = v13;
      if (v12 != FormatFontScalingStyle.rawValue.getter() || v14 != v15)
      {
        char v16 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_32;
        }
        goto LABEL_45;
      }
      swift_bridgeObjectRelease_n();
      char v9 = 1;
      return v9 & 1;
  }
}

unint64_t sub_1C0C27C0C(uint64_t a1)
{
  unint64_t result = sub_1C0C27C34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C27C34()
{
  unint64_t result = qword_1EA1A4B80;
  if (!qword_1EA1A4B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B80);
  }
  return result;
}

unint64_t sub_1C0C27C88(void *a1)
{
  a1[1] = sub_1C0867F18();
  a1[2] = sub_1C0905554();
  unint64_t result = sub_1C0C27CC0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C27CC0()
{
  unint64_t result = qword_1EA1A4B88;
  if (!qword_1EA1A4B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4B88);
  }
  return result;
}

uint64_t _s4FontOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3D && *(unsigned char *)(a1 + 19)) {
    return (*(_DWORD *)a1 + 61);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 18) & 0x3C | (*(unsigned __int8 *)(a1 + 18) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s4FontOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 61;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(_WORD *)(result + 16) = 0;
      *(unsigned char *)(result + 18) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1C0C27DC4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 18) >> 6;
}

uint64_t sub_1C0C27DD0(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 16);
  uint64_t result = a1 + 16;
  *(unsigned char *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x3F;
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t sub_1C0C27DEC(uint64_t a1, int a2)
{
  int v3 = *(unsigned __int16 *)(a1 + 16);
  uint64_t result = a1 + 16;
  *(unsigned char *)(result + 2) = ((v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0x3FFFF | (a2 << 22)) >> 16;
  *(_WORD *)uint64_t result = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Font()
{
  return &type metadata for FormatGroupBinding.Font;
}

uint64_t Dictionary<>.formatVersion.setter(uint64_t a1)
{
  return sub_1C0C283C0(a1);
}

uint64_t Dictionary<>.ignoreMetadata.setter(char a1)
{
  return sub_1C0C27E8C(a1);
}

uint64_t Dictionary<>.bindingContent.setter(char a1)
{
  return sub_1C0C27E8C(a1);
}

uint64_t sub_1C0C27E8C(char a1)
{
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = &v10[-v3];
  uint64_t v5 = sub_1C152039C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v11 = MEMORY[0x1E4FBB390];
    v10[0] = a1 & 1;
    return sub_1C02E79E0((uint64_t)v10, (uint64_t)v8);
  }
  return result;
}

uint64_t Dictionary<>.allowSourceMaps.setter(char a1)
{
  return sub_1C0C27E8C(a1);
}

uint64_t Dictionary<>.errorOnUnknownKeys.setter(char a1)
{
  return sub_1C0C27E8C(a1);
}

uint64_t Dictionary<>.ignoreMetadata.getter(uint64_t a1)
{
  return sub_1BFEFE0A0(a1);
}

uint64_t static CodingUserInfoKey.appVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C280C0(a1);
}

uint64_t static CodingUserInfoKey.formatVersion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C280C0(a1);
}

uint64_t sub_1C0C280C0@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v8 - v3;
  sub_1C152038C();
  uint64_t v5 = sub_1C152039C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t static CodingUserInfoKey.ignoreMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C280C0(a1);
}

uint64_t static CodingUserInfoKey.bindingContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C280C0(a1);
}

uint64_t static CodingUserInfoKey.allowSourceMaps.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C280C0(a1);
}

uint64_t static CodingUserInfoKey.errorOnUnknownKeys.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C280C0(a1);
}

void (*Dictionary<>.ignoreMetadata.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[1] = malloc(v5);
  v3[2] = malloc(v5);
  uint64_t v6 = sub_1C152039C();
  v3[3] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[4] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  v3[6] = malloc(v8);
  *((unsigned char *)v3 + 56) = Dictionary<>.ignoreMetadata.getter(*v1) & 1;
  return sub_1C0C2837C;
}

void sub_1C0C2837C(uint64_t a1, char a2)
{
}

uint64_t Dictionary<>.appVersion.setter(uint64_t a1)
{
  return sub_1C0C283C0(a1);
}

uint64_t sub_1C0C283C0(uint64_t a1)
{
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v13 - v3;
  uint64_t v5 = sub_1C152039C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  size_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v10 = sub_1C151928C();
    v13[3] = v10;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
    uint64_t v12 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_0, a1, v10);
    sub_1C02E79E0((uint64_t)v13, (uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(a1, v10);
  }
  return result;
}

void (*Dictionary<>.appVersion.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[8] = v1;
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[9] = malloc(v5);
  v3[10] = malloc(v5);
  uint64_t v6 = sub_1C152039C();
  v3[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[12] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[13] = malloc(v8);
  v3[14] = malloc(v8);
  uint64_t v9 = sub_1C151928C();
  v3[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[16] = v10;
  size_t v11 = *(void *)(v10 + 64);
  v3[17] = malloc(v11);
  uint64_t v12 = malloc(v11);
  v3[18] = v12;
  Dictionary<>.appVersion.getter(*v1, (uint64_t)v12);
  return sub_1C0C28738;
}

void sub_1C0C28738(uint64_t **a1, char a2)
{
}

uint64_t sub_1C0C28758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[2] = a5;
  v22[3] = a6;
  v22[1] = a2;
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = sub_1C152039C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151928C();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v19(v18, a1, v14, v16);
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v23[3] = v14;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
    ((void (*)(uint64_t *, char *, uint64_t))v19)(boxed_opaque_existential_0, v18, v14);
    sub_1C02E79E0((uint64_t)v23, (uint64_t)v13);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

void (*Dictionary<>.formatVersion.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  v3[8] = v1;
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[9] = malloc(v5);
  v3[10] = malloc(v5);
  uint64_t v6 = sub_1C152039C();
  v3[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[12] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[13] = malloc(v8);
  v3[14] = malloc(v8);
  uint64_t v9 = sub_1C151928C();
  v3[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[16] = v10;
  size_t v11 = *(void *)(v10 + 64);
  v3[17] = malloc(v11);
  uint64_t v12 = malloc(v11);
  v3[18] = v12;
  Dictionary<>.formatVersion.getter(*v1, (uint64_t)v12);
  return sub_1C0C28B30;
}

void sub_1C0C28B30(uint64_t **a1, char a2)
{
}

void sub_1C0C28B54(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  if ((a2 & 1) == 0)
  {
    uint64_t v15 = v2[11];
    uint64_t v16 = v2[12];
    uint64_t v17 = v2[10];
    sub_1C152038C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15) != 1)
    {
      uint64_t v7 = (void *)v2[17];
      uint64_t v6 = (void *)v2[18];
      uint64_t v19 = v2[15];
      uint64_t v18 = v2[16];
      size_t v11 = (void *)v2[13];
      uint64_t v10 = (void *)v2[14];
      uint64_t v12 = (void *)v2[9];
      __int16 v22 = (void *)v2[10];
      (*(void (**)(void *))(v2[12] + 32))(v10);
      v2[7] = v19;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v2 + 4);
      (*(void (**)(uint64_t *, void *, uint64_t))(v18 + 16))(boxed_opaque_existential_0, v6, v19);
      sub_1C02E79E0((uint64_t)(v2 + 4), (uint64_t)v10);
      (*(void (**)(void *, uint64_t))(v18 + 8))(v6, v19);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[12];
  uint64_t v5 = v2[9];
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2[16] + 16);
  v21(v2[17], v2[18], v2[15]);
  sub_1C152038C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = (void *)v2[17];
  uint64_t v6 = (void *)v2[18];
  uint64_t v9 = v2[15];
  uint64_t v8 = v2[16];
  size_t v11 = (void *)v2[13];
  uint64_t v10 = (void *)v2[14];
  uint64_t v12 = (void *)v2[9];
  __int16 v22 = (void *)v2[10];
  (*(void (**)(void *, void *, uint64_t))(v2[12] + 32))(v11, v12, v2[11]);
  v2[3] = v9;
  uint64_t v13 = __swift_allocate_boxed_opaque_existential_0(v2);
  v21((uint64_t)v13, (uint64_t)v7, v9);
  sub_1C02E79E0((uint64_t)v2, (uint64_t)v11);
  uint64_t v14 = *(void (**)(void *, uint64_t))(v8 + 8);
  v14(v7, v9);
  v14(v6, v9);
LABEL_6:
  free(v6);
  free(v7);
  free(v10);
  free(v11);
  free(v22);
  free(v12);
  free(v2);
}

uint64_t sub_1C0C28D9C(char *a1)
{
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v11[-v3];
  uint64_t v5 = sub_1C152039C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v9 = *a1;
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v12 = MEMORY[0x1E4FBB390];
    v11[0] = v9;
    return sub_1C02E79E0((uint64_t)v11, (uint64_t)v8);
  }
  return result;
}

void (*Dictionary<>.bindingContent.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[1] = malloc(v5);
  v3[2] = malloc(v5);
  uint64_t v6 = sub_1C152039C();
  v3[3] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[4] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  v3[6] = malloc(v8);
  *((unsigned char *)v3 + 56) = Dictionary<>.bindingContent.getter(*v1) & 1;
  return sub_1C0C29050;
}

void sub_1C0C29050(uint64_t a1, char a2)
{
}

void sub_1C0C29074(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(*(void *)a1 + 56);
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  size_t v5 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)a1 + 32) + 48);
  if ((a2 & 1) == 0)
  {
    uint64_t v12 = v2[2];
    sub_1C152038C();
    if ((*v5)(v12, 1, v4) != 1)
    {
      size_t v8 = (void *)v2[5];
      uint64_t v7 = (void *)v2[6];
      uint64_t v10 = (void *)v2[1];
      char v9 = (void *)v2[2];
      (*(void (**)(void *, void *, void))(v2[4] + 32))(v7, v9, v2[3]);
      uint64_t v14 = MEMORY[0x1E4FBB390];
      v13[0] = v3;
      uint64_t v11 = (uint64_t)v7;
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v6 = v2[1];
  sub_1C152038C();
  if ((*v5)(v6, 1, v4) == 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  size_t v8 = (void *)v2[5];
  uint64_t v7 = (void *)v2[6];
  uint64_t v10 = (void *)v2[1];
  char v9 = (void *)v2[2];
  (*(void (**)(void *, void *, void))(v2[4] + 32))(v8, v10, v2[3]);
  uint64_t v14 = MEMORY[0x1E4FBB390];
  v13[0] = v3;
  uint64_t v11 = (uint64_t)v8;
LABEL_6:
  sub_1C02E79E0((uint64_t)v13, v11);
  free(v7);
  free(v8);
  free(v9);
  free(v10);
  free(v2);
}

uint64_t (*Dictionary<>.allowSourceMaps.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = Dictionary<>.allowSourceMaps.getter(*v1) & 1;
  return sub_1C0C29248;
}

uint64_t sub_1C0C29248(uint64_t a1)
{
  return Dictionary<>.allowSourceMaps.setter(*(unsigned char *)(a1 + 8));
}

uint64_t (*Dictionary<>.errorOnUnknownKeys.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = Dictionary<>.errorOnUnknownKeys.getter(*v1) & 1;
  return sub_1C0C292C0;
}

uint64_t sub_1C0C292C0(uint64_t a1)
{
  return Dictionary<>.errorOnUnknownKeys.setter(*(unsigned char *)(a1 + 8));
}

uint64_t sub_1C0C292E8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = Dictionary<>.ignoreMetadata.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C0C29318(char *a1)
{
  return sub_1C0C28D9C(a1);
}

uint64_t sub_1C0C29350()
{
  return 0;
}

uint64_t sub_1C0C29360@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Dictionary<>.appVersion.getter(*a1, a2);
}

uint64_t sub_1C0C29368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0C28758(a1, a2, a3, a4, 0x737265567070612ELL, 0xEB000000006E6F69);
}

uint64_t sub_1C0C2939C()
{
  return 0;
}

uint64_t sub_1C0C293AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Dictionary<>.formatVersion.getter(*a1, a2);
}

uint64_t sub_1C0C293B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0C28758(a1, a2, a3, a4, 0x5674616D726F662ELL, 0xEE006E6F69737265);
}

uint64_t sub_1C0C293EC()
{
  return 0;
}

uint64_t sub_1C0C293FC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = Dictionary<>.bindingContent.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C0C2942C(char *a1)
{
  return sub_1C0C28D9C(a1);
}

uint64_t sub_1C0C29464()
{
  return 0;
}

uint64_t sub_1C0C29474@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = Dictionary<>.allowSourceMaps.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C0C294A4(char *a1)
{
  return sub_1C0C28D9C(a1);
}

uint64_t sub_1C0C294D4()
{
  return 0;
}

uint64_t sub_1C0C294E4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = Dictionary<>.errorOnUnknownKeys.getter(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C0C29514(char *a1)
{
  return sub_1C0C28D9C(a1);
}

uint64_t sub_1C0C29544()
{
  return 0;
}

uint64_t ImageRequestOptions.init(scale:traitCollection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = a2 + *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  uint64_t v7 = sub_1C151A01C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(double *)a2 = a3;
  *(void *)(a2 + 8) = a1;
  return result;
}

uint64_t ImageRequestOptions.init(scale:traitCollection:border:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = a1;
  uint64_t v5 = a3 + *(int *)(type metadata accessor for ImageRequestOptions() + 24);
  return sub_1C0C29634(a2, v5);
}

uint64_t sub_1C0C29634(uint64_t a1, uint64_t a2)
{
  sub_1BFE45DC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageRequestOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    size_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C151A01C();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    id v12 = v5;
    if (v11(v8, 1, v9))
    {
      sub_1BFE45DC0();
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

void *assignWithCopy for ImageRequestOptions(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a2[1];
  uint64_t v7 = (void *)a1[1];
  a1[1] = v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C151A01C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BFE45DC0();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

void *initializeWithTake for ImageRequestOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C151A01C();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BFE45DC0();
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for ImageRequestOptions(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151A01C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BFE45DC0();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageRequestOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C29C44);
}

uint64_t sub_1C0C29C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFE45DC0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ImageRequestOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C29D08);
}

uint64_t sub_1C0C29D08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFE45DC0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t FormatBackgroundLayoutManager.create(background:options:gutterView:)(uint64_t a1, long long *a2, void *a3)
{
  unint64_t v4 = v3;
  uint64_t v23 = a1;
  uint64_t v26 = *v4;
  uint64_t v7 = sub_1C151B62C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  int v13 = (char *)&v23 - v12;
  long long v14 = a2[1];
  long long v31 = *a2;
  long long v32 = v14;
  uint64_t v33 = *((void *)a2 + 4);
  swift_getObjectType();
  sub_1C0C2A0CC((uint64_t)&v31);
  sub_1C151C3FC();
  sub_1C0C2A114((uint64_t)&v31);
  sub_1C0C2A158((uint64_t)v10, a3, (uint64_t)v13);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v10, v7);
  uint64_t v27 = v4;
  uint64_t v28 = v23;
  uint64_t v29 = &v31;
  uint64_t v30 = v13;
  unint64_t v24 = v13;
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  sub_1C151932C();
  sub_1BFE4597C();
  uint64_t v15 = (void *)sub_1C151F56C();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, v10, v7);
  sub_1C0C2A7B8(0);
  sub_1C151901C();
  swift_release();

  swift_release();
  uint64_t v18 = swift_allocObject();
  long long v19 = v32;
  *(_OWORD *)(v18 + 16) = v31;
  *(_OWORD *)(v18 + 32) = v19;
  *(void *)(v18 + 48) = v33;
  sub_1C0C2A0CC((uint64_t)&v31);
  char v20 = (void *)sub_1C1518E7C();
  uint64_t v21 = sub_1C15190DC();
  swift_release();
  swift_release();

  v25(v24, v7);
  return v21;
}

uint64_t sub_1C0C2A0CC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  char v3 = *(void **)(a1 + 16);
  id v4 = *(id *)a1;
  id v5 = v2;
  id v6 = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1C0C2A114(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(void **)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  swift_unknownObjectRelease();

  return a1;
}

uint64_t sub_1C0C2A158@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  sub_1C0C2B944(0, (unint64_t *)&unk_1EA1A4BA8, MEMORY[0x1E4FAD4D8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v29 - v6;
  uint64_t v8 = sub_1C151A9BC();
  MEMORY[0x1F4188790](v8 - 8);
  long long v32 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151B5DC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v31 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151BDDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v30 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151B62C();
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)&double v18 = MEMORY[0x1F4188790](v16).n128_u64[0];
  char v20 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    objc_msgSend(a2, sel_frame, v18);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  if (!a2) {
    sub_1C151B61C();
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v30, *MEMORY[0x1E4FACE20], v13);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v31, *MEMORY[0x1E4FAC850], v10);
  sub_1C151B51C();
  v29[7] = v22;
  v29[8] = v21;
  sub_1C151B52C();
  v29[6] = v23;
  sub_1C151B59C();
  v29[3] = v25;
  v29[4] = v24;
  v29[5] = sub_1C151B57C();
  sub_1C151B5AC();
  sub_1C151B60C();
  sub_1C151B5BC();
  uint64_t v26 = *MEMORY[0x1E4FB2848];
  v29[1] = *(void *)(MEMORY[0x1E4FB2848] + 8);
  void v29[2] = v26;
  sub_1C151B56C();
  sub_1C151B55C();
  sub_1C151B50C();
  sub_1C151B4FC();
  uint64_t v27 = sub_1C151C44C();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 0, 1, v27);
  return sub_1C151B5EC();
}

uint64_t sub_1C0C2A608()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  long long v4 = *(_OWORD *)(v3 + 16);
  v6[0] = *(_OWORD *)v3;
  v6[1] = v4;
  uint64_t v7 = *(void *)(v3 + 32);
  return FormatBackgroundLayoutSolver.resolve(background:options:layoutOptions:)(v1, v6, v2);
}

uint64_t sub_1C0C2A650@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)&v11[0] = *a1;
  uint64_t v3 = *(void *)&v11[0];
  swift_retain();
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 32);
  uint64_t v5 = *(void *)(*(void *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 40);
  uint64_t v6 = *(void *)(*(void *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 48);
  char v7 = *(unsigned char *)(*(void *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 56);
  v11[0] = *(_OWORD *)(*(void *)&v11[0] + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult);
  v11[1] = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 16);
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  char v15 = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1C151B57C();
  id v9 = FormatLayoutViewFactory.create(layoutResult:traitCollection:)(v11, (uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for FormatBackgroundLayout();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v9;
  *a2 = result;
  return result;
}

uint64_t sub_1C0C2A78C(uint64_t a1, uint64_t a2)
{
  return sub_1C0C2AFBC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C0C2A650);
}

void sub_1C0C2A7B8(uint64_t a1)
{
}

uint64_t sub_1C0C2A7F0@<X0>(void *a1@<X8>)
{
  return sub_1C0C2B050(a1);
}

uint64_t FormatBackgroundLayoutManager.relayout(options:gutterView:)(long long *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C151B62C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - v12;
  long long v14 = a1[1];
  long long v38 = *a1;
  long long v39 = v14;
  uint64_t v40 = *((void *)a1 + 4);
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if (v37)
  {
    uint64_t v31 = v7;
    char v15 = a2;
    uint64_t v16 = v37;
    uint64_t v34 = v37;
    swift_getObjectType();
    uint64_t v33 = v6;
    sub_1C0C2A0CC((uint64_t)&v38);
    sub_1C151C3FC();
    sub_1C0C2A114((uint64_t)&v38);
    uint64_t v17 = v13;
    sub_1C0C2A158((uint64_t)v10, v15, (uint64_t)v13);
    double v18 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v35 = v8 + 8;
    uint64_t v36 = v18;
    uint64_t v19 = v31;
    uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v18)(v10, v31);
    MEMORY[0x1F4188790](v20);
    *(&v30 - 4) = (uint64_t)v3;
    *(&v30 - 3) = v16;
    *(&v30 - 2) = (uint64_t)&v38;
    *(&v30 - 1) = (uint64_t)v17;
    uint64_t v21 = v17;
    long long v32 = v17;
    type metadata accessor for FormatBackgroundLayoutSolverResult();
    sub_1C151932C();
    sub_1BFE4597C();
    uint64_t v22 = (void *)sub_1C151F56C();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v21, v19);
    unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, v10, v19);
    sub_1C0C2A7B8(0);
    sub_1C151901C();
    swift_release();

    swift_release();
    uint64_t v25 = swift_allocObject();
    long long v26 = v39;
    *(_OWORD *)(v25 + 16) = v38;
    *(_OWORD *)(v25 + 32) = v26;
    *(void *)(v25 + 48) = v40;
    sub_1C0C2A0CC((uint64_t)&v38);
    uint64_t v27 = (void *)sub_1C1518E7C();
    uint64_t v28 = sub_1C15190DC();
    swift_release();
    swift_release();

    swift_release();
    v36(v32, v19);
  }
  else
  {
    uint64_t v37 = 0;
    sub_1C0C2B944(0, &qword_1EA1A4BA0, (uint64_t (*)(uint64_t))sub_1C0C2A7B8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  return v28;
}

uint64_t sub_1C0C2ABFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a4;
  uint64_t v25 = a2;
  uint64_t v6 = sub_1C151B62C();
  uint64_t v23 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = type metadata accessor for FormatContent.Resolved();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v13 = v25 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content;
  uint64_t v25 = sub_1C1518CBC();
  sub_1BFDBB6C4(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + v15 + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1BFD21554((uint64_t)v12, v17 + v14);
  unint64_t v18 = v17 + v15;
  long long v19 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)unint64_t v18 = *(_OWORD *)a3;
  *(_OWORD *)(v18 + 16) = v19;
  *(void *)(v18 + 32) = *(void *)(a3 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v16, (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23);
  sub_1C0C2A0CC(a3);
  type metadata accessor for FormatBackgroundLayoutSolverResult();
  type metadata accessor for FormatBackgroundLayoutSolver();
  uint64_t v20 = (void *)v25;
  uint64_t v21 = sub_1C151931C();

  swift_release();
  return v21;
}

uint64_t sub_1C0C2AE6C()
{
  return sub_1C0C2ABFC(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1C0C2AE8C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult;
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *(void *)(v4 + 40);
  uint64_t v7 = *(void *)(v4 + 48);
  char v8 = *(unsigned char *)(v4 + 56);
  long long v9 = *(_OWORD *)(v4 + 16);
  v13[0] = *(_OWORD *)v4;
  v13[1] = v9;
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = v7;
  char v17 = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_1C151B57C();
  id v11 = FormatLayoutViewFactory.create(layoutResult:traitCollection:)(v13, (uint64_t)v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for FormatBackgroundLayout();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v11;
  *a2 = result;
  return result;
}

uint64_t sub_1C0C2AF90(uint64_t a1, uint64_t a2)
{
  return sub_1C0C2AFBC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C0C2AE8C);
}

uint64_t sub_1C0C2AFBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v7 = *(void *)(sub_1C151B62C() - 8);
  return a3(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t sub_1C0C2B050@<X0>(void *a1@<X8>)
{
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 64) = sub_1BFE9C558();
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0xE000000000000000;
  sub_1C15197BC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0;
  return result;
}

uint64_t sub_1C0C2B170@<X0>(void *a1@<X8>)
{
  return sub_1C0C2B050(a1);
}

uint64_t FormatBackgroundLayoutManager.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatBackgroundLayoutManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C2B210(uint64_t a1, long long *a2, void *a3)
{
  return FormatBackgroundLayoutManager.create(background:options:gutterView:)(a1, a2, a3);
}

uint64_t sub_1C0C2B234(long long *a1, void *a2)
{
  return FormatBackgroundLayoutManager.relayout(options:gutterView:)(a1, a2);
}

uint64_t dispatch thunk of FormatBackgroundLayoutManagerType.create(background:options:gutterView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FormatBackgroundLayoutManagerType.relayout(options:gutterView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for FormatBackgroundLayoutManager()
{
  return self;
}

uint64_t method lookup function for FormatBackgroundLayoutManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBackgroundLayoutManager);
}

uint64_t sub_1C0C2B2BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v37 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v5 = sub_1C151B62C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v36 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = v1 + v4;
  swift_bridgeObjectRelease();
  uint64_t v8 = v1 + v4 + v2[5];
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v10 = v1 + v4 + v2[14];
  id v11 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
  {
    uint64_t v33 = (v3 + 16) & ~v3;
    uint64_t v34 = v5;
    uint64_t v35 = v1;
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + v11[5];
    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for FormatWebEmbed();
    uint64_t v14 = v12 + *(int *)(v13 + 20);
    uint64_t v15 = sub_1C1515FDC();
    uint64_t v16 = *(void *)(v15 - 8);
    long long v32 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v32(v14, v15);
    uint64_t v17 = v12 + *(int *)(v13 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v17, 1, v15)) {
      v32(v17, v15);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v18 = v10 + v11[8];
    uint64_t v19 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = type metadata accessor for GenericDataVisualization();
        v32(v18 + *(int *)(v20 + 20), v15);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v21 = v10 + v11[9];
    sub_1C0C2B944(0, (unint64_t *)&qword_1EB894670, (uint64_t (*)(uint64_t))sub_1BFF91B1C, MEMORY[0x1E4FAB160]);
    uint64_t v23 = v22;
    uint64_t v24 = *(void *)(v22 - 8);
    uint64_t v5 = v34;
    uint64_t v1 = v35;
    uint64_t v4 = v33;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v25 = v7 + v2[18];
  uint64_t v26 = sub_1C151D6DC();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  unint64_t v28 = (v37 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (v28 + v36 + 40) & ~v36;
  uint64_t v30 = v1 + v28;

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v29, v5);
  return swift_deallocObject();
}

uint64_t sub_1C0C2B864(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FormatContent.Resolved() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_1C151B62C() - 8);
  return sub_1C0FBF24C(a1, (void *)(v1 + v4), v1 + v5, v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

void sub_1C0C2B944(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0C2B9A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151C8BC();
  MEMORY[0x1F4188790](v3 - 8);
  MEMORY[0x1F4188790](v4);
  sub_1BFC4B3F4();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v19[-v9];
  uint64_t v11 = v1 + qword_1EB88FE98;
  swift_beginAccess();
  sub_1C0C2CAF8(v11, (uint64_t)v10);
  uint64_t v12 = sub_1C151BC8C();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a1, v10, v12);
  }
  sub_1C0C2CA9C((uint64_t)v10);
  sub_1C151C8AC();
  sub_1C151C8AC();
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_blackColor);
  id v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.2);

  id v17 = objc_msgSend(v14, sel_clearColor);
  sub_1C151BC3C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v7, a1, v12);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  swift_beginAccess();
  sub_1C0C2CB5C((uint64_t)v7, v11);
  return swift_endAccess();
}

id VideoView.videoButton.getter()
{
  return *(id *)(v0 + qword_1EB93C718);
}

id VideoView.liveIcon.getter()
{
  return *(id *)(v0 + qword_1EB93C9D0);
}

id VideoView.durationView.getter()
{
  return *(id *)(v0 + qword_1EB93C9C0);
}

id VideoView.logoView.getter()
{
  return *(id *)(v0 + qword_1EB93C9B8);
}

id VideoView.gradientView.getter()
{
  return *(id *)(v0 + qword_1EB93C9C8);
}

id VideoView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *VideoView.init(frame:)(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFC4B3F4();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[qword_1EB88FEA0] = 0x4024000000000000;
  *(void *)&v4[qword_1EB88FE90] = 0x4076800000000000;
  *(void *)&v4[qword_1EB88FE88] = 0x4054000000000000;
  uint64_t v12 = &v4[qword_1EB88FE98];
  uint64_t v13 = sub_1C151BC8C();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  uint64_t v15 = qword_1EB93C718;
  id v16 = objc_allocWithZone(MEMORY[0x1E4F9F8D0]);
  id v17 = v4;
  *(void *)&v4[v15] = objc_msgSend(v16, sel_init);
  uint64_t v18 = qword_1EB93C9D0;
  type metadata accessor for VideoLiveIcon();
  *(void *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v19 = qword_1EB93C9C0;
  type metadata accessor for VideoDurationView();
  *(void *)&v17[v19] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v20 = qword_1EB93C9B8;
  sub_1C151CD7C();
  *(void *)&v17[v20] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v21 = qword_1EB93C9C8;
  sub_1C151B16C();
  *(void *)&v17[v21] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  v32.receiver = v17;
  v32.super_class = ObjectType;
  uint64_t v22 = (char *)objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v23 = *(void *)&v22[qword_1EB93C718];
  uint64_t v24 = v22;
  objc_msgSend(v24, sel_addSubview_, v23);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[qword_1EB93C9D0]);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[qword_1EB93C9C0]);
  uint64_t v25 = *(void **)&v24[qword_1EB93C9C8];
  objc_msgSend(v24, sel_addSubview_, v25);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[qword_1EB93C9B8]);
  uint64_t v26 = self;
  id v27 = v25;
  id v28 = objc_msgSend(v26, sel_clearColor);
  objc_msgSend(v27, sel_setBackgroundColor_, v28);

  sub_1C0C2B9A8((uint64_t)v11);
  v14(v11, 0, 1, v13);
  sub_1C151B15C();

  return v24;
}

char *sub_1C0C2C06C(double a1, double a2, double a3, double a4)
{
  return VideoView.init(frame:)(a1, a2, a3, a4);
}

void sub_1C0C2C090(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C0C2C900();
}

Swift::Void __swiftcall VideoView.layoutSubviews()()
{
  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v23, sel_layoutSubviews);
  sub_1C151F8FC();
  objc_msgSend(v0, sel_center);
  sub_1C151F90C();
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1C0C2C868;
  *(void *)(v3 + 24) = v2;
  uint64_t v21 = sub_1BFC81770;
  uint64_t v22 = v3;
  uint64_t v17 = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1BFC81740;
  uint64_t v20 = &block_descriptor_46;
  uint64_t v4 = _Block_copy(&v17);
  id v5 = v0;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C0C2C8A4;
  *(void *)(v8 + 24) = v7;
  uint64_t v21 = sub_1C035B780;
  uint64_t v22 = v8;
  uint64_t v17 = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1BFC81740;
  uint64_t v20 = &block_descriptor_13_0;
  uint64_t v9 = _Block_copy(&v17);
  id v10 = v5;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1C151F8FC();
  objc_msgSend(v10, sel_bounds);
  CGRectGetWidth(v24);
  objc_msgSend(v10, sel_bounds);
  CGRectGetHeight(v25);
  sub_1C151F90C();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1C0C2C8E0;
  *(void *)(v13 + 24) = v12;
  uint64_t v21 = sub_1C035B780;
  uint64_t v22 = v13;
  uint64_t v17 = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1BFC81740;
  uint64_t v20 = &block_descriptor_23_0;
  uint64_t v14 = _Block_copy(&v17);
  id v15 = v10;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v14);
  _Block_release(v14);
  char v16 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v16) {
LABEL_7:
  }
    __break(1u);
}

id sub_1C0C2C504(char *a1, void *a2, void *a3)
{
  uint64_t v4 = *(void **)(*(void *)&a1[*a2] + *a3);
  id result = objc_msgSend(v4, sel_font);
  if (result)
  {
    uint64_t v6 = result;
    objc_msgSend(result, sel_capHeight);

    objc_msgSend(v4, sel_intrinsicContentSize);
    sub_1C151F8FC();
    objc_msgSend(a1, sel_bounds);
    CGRectGetHeight(v7);
    return (id)sub_1C151F90C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0C2C5F0(char *a1)
{
  uint64_t v2 = *(void **)&a1[qword_1EB93C9B8];
  objc_msgSend(a1, sel_bounds);
  CGRectGetWidth(v4);
  objc_msgSend(v2, sel_bounds);
  CGRectGetWidth(v5);
  objc_msgSend(a1, sel_bounds);
  CGRectGetHeight(v6);
  objc_msgSend(v2, sel_bounds);
  CGRectGetHeight(v7);
  return sub_1C151F90C();
}

void sub_1C0C2C6A4(void *a1)
{
  id v1 = a1;
  VideoView.layoutSubviews()();
}

void sub_1C0C2C6EC()
{
  sub_1C0C2CA9C(v0 + qword_1EB88FE98);

  id v1 = *(void **)(v0 + qword_1EB93C9C8);
}

id VideoView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C0C2C7A4(uint64_t a1)
{
  sub_1C0C2CA9C(a1 + qword_1EB88FE98);

  objc_super v2 = *(void **)(a1 + qword_1EB93C9C8);
}

uint64_t sub_1C0C2C830()
{
  return swift_deallocObject();
}

id sub_1C0C2C868()
{
  return sub_1C0C2C504(*(char **)(v0 + 16), &qword_1EB93C9D0, &OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label);
}

uint64_t sub_1C0C2C894()
{
  return swift_deallocObject();
}

id sub_1C0C2C8A4()
{
  return sub_1C0C2C504(*(char **)(v0 + 16), &qword_1EB93C9C0, &OBJC_IVAR____TtC8NewsFeed17VideoDurationView_label);
}

uint64_t sub_1C0C2C8D0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C2C8E0()
{
  return sub_1C0C2C5F0(*(char **)(v0 + 16));
}

uint64_t sub_1C0C2C8E8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C2C8F8()
{
  return type metadata accessor for VideoView();
}

void sub_1C0C2C900()
{
  *(void *)&v0[qword_1EB88FEA0] = 0x4024000000000000;
  *(void *)&v0[qword_1EB88FE90] = 0x4076800000000000;
  *(void *)&v0[qword_1EB88FE88] = 0x4054000000000000;
  id v1 = &v0[qword_1EB88FE98];
  uint64_t v2 = sub_1C151BC8C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = qword_1EB93C718;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F8D0]), sel_init);
  uint64_t v4 = qword_1EB93C9D0;
  type metadata accessor for VideoLiveIcon();
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v5 = qword_1EB93C9C0;
  type metadata accessor for VideoDurationView();
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v6 = qword_1EB93C9B8;
  sub_1C151CD7C();
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v7 = qword_1EB93C9C8;
  sub_1C151B16C();
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0C2CA9C(uint64_t a1)
{
  sub_1BFC4B3F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0C2CAF8(uint64_t a1, uint64_t a2)
{
  sub_1BFC4B3F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C2CB5C(uint64_t a1, uint64_t a2)
{
  sub_1BFC4B3F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FeedPuzzleType.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedPuzzleType.debugTitle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_name);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

id FeedPuzzleType.debugAssetHandle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_coverImageAssetHandle);
  return v1;
}

uint64_t FeedPuzzleType.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedPuzzleType.additionalFormatFeedItems.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1BFEB183C(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  *(void *)(v2 + 56) = &type metadata for FeedTag;
  *(void *)(v2 + 64) = sub_1BFEA44FC();
  uint64_t v3 = swift_allocObject();
  *(void *)(v2 + 32) = v3;
  id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  *(_OWORD *)(v3 + 96) = xmmword_1C152C800;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(unsigned char *)(v3 + 160) = 0;
  *(void *)(v3 + 16) = v5;
  *(void *)(v3 + 24) = v7;
  *(void *)(v3 + 32) = v1;
  *(unsigned char *)(v3 + 40) = 0;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = 0xE000000000000000;
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = 0;
  uint64_t v8 = MEMORY[0x1E4FBC870];
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = v8;
  return v2;
}

uint64_t sub_1C0C2CDAC()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

void FeedPuzzleType.traits.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

void FeedPuzzleType.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedPuzzleType.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t FeedPuzzleType.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedPuzzleType.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedPuzzleType.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedPuzzleType.puzzleType.getter()
{
  return swift_unknownObjectRetain();
}

double FeedPuzzleType.init(identifier:puzzleType:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  double result = 0.0;
  *(_OWORD *)(a4 + 24) = xmmword_1C1538940;
  *(void *)(a4 + 40) = a1;
  *(void *)(a4 + 48) = a2;
  *(void *)(a4 + 56) = a3;
  return result;
}

uint64_t sub_1C0C2CF00()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_name);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

id sub_1C0C2CF68()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_coverImageAssetHandle);
  return v1;
}

uint64_t FeedPuzzleType.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  long long v8 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  sub_1BFF7FF04(v4, v8);
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1C0C2D048@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  long long v8 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  sub_1BFF7FF04(v4, v8);
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t static FeedPuzzleType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t FeedPuzzleType.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C2D19C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C2D220(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0C2DA1C();
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1C0C2D26C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C2D2EC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t FeedPuzzleType.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEB183C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - v4;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = *(void **)(v1 + 56);
  id v15 = objc_msgSend(v14, sel_identifier, v11);
  if (!v15)
  {
    sub_1C151E62C();
    id v15 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v16 = objc_msgSend(self, sel_nss_NewsURLForPuzzleTypeID_, v15);

  if (v16)
  {
    sub_1C1515F1C();

    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v17(v5, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v17(v13, v5, v6);
      sub_1C1515E9C();
      id v18 = objc_msgSend(v14, sel_name);
      sub_1C151E62C();

      sub_1C151CA2C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v19 = sub_1C151CA3C();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 0, 1, v19);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_1C002F608((uint64_t)v5);
  uint64_t v21 = sub_1C151CA3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 1, 1, v21);
}

uint64_t sub_1C0C2D66C()
{
  return FCPuzzleTypeProviding.contentSelectors.getter();
}

unint64_t sub_1C0C2D698()
{
  unint64_t result = qword_1EA1A4BB8;
  if (!qword_1EA1A4BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BB8);
  }
  return result;
}

unint64_t sub_1C0C2D6EC(uint64_t a1)
{
  unint64_t result = sub_1C028A354();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for FeedPuzzleType(uint64_t a1)
{
  if (*(void *)(a1 + 32) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FeedPuzzleType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  if (v6 >= 0x11)
  {
    *(void *)(a1 + 24) = *v5;
    *(void *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  }
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedPuzzleType(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (_OWORD *)(a1 + 24);
  unint64_t v6 = (_OWORD *)(a2 + 24);
  unint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >= 0x11uLL)
  {
    if (v7 >= 0x11)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C01A7564(a1 + 24);
    goto LABEL_6;
  }
  if (v7 < 0x11)
  {
LABEL_6:
    *uint64_t v5 = *v6;
    goto LABEL_8;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedPuzzleType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a1 + 24);
  unint64_t v6 = (void *)(a2 + 24);
  if (*(void *)(a1 + 32) >= 0x11uLL)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >= 0x11)
    {
      *(void *)(a1 + 24) = *v6;
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C01A7564((uint64_t)v5);
  }
  *uint64_t v5 = *(_OWORD *)v6;
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedPuzzleType(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedPuzzleType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_1C0C2DA1C()
{
  unint64_t result = qword_1EA1A4BC8;
  if (!qword_1EA1A4BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding()
{
  return &type metadata for FormatPuzzleBinding;
}

void *sub_1C0C2DA88(uint64_t a1)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  uint64_t v42 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFEE9F2C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  v47[2] = a1;
  uint64_t v10 = sub_1C0182060((void (*)(char *))sub_1C0C2E11C, (uint64_t)v47, (uint64_t)&unk_1F1B68738);
  sub_1C09BCFA4(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v10, v54);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v11 = swift_allocObject();
  *(void *)(inited + 32) = v11;
  uint64_t v45 = inited + 32;
  *(void *)(v11 + 48) = v55;
  long long v12 = v54[1];
  *(_OWORD *)(v11 + 16) = v54[0];
  *(_OWORD *)(v11 + 32) = v12;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1BFEE9F2C(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
  uint64_t v43 = v15 + v14;
  sub_1C01F09C0(a1, (uint64_t)v51);
  uint64_t v50 = v42;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v49);
  id v17 = objc_msgSend(v53, sel_publishDate);
  if (v17)
  {
    id v18 = v17;
    sub_1C15162BC();

    uint64_t v19 = sub_1C151631C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_1C151631C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  }
  sub_1BFEE9ADC((uint64_t)v7, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1BFF993A8(&v49, v56);
  sub_1C0223628((uint64_t)v56, (uint64_t)&v49);
  if (v50)
  {
    sub_1C0223798((uint64_t)&v49, (uint64_t)v48);
    sub_1C02236B0((uint64_t)v56);
    uint64_t v21 = v44;
    uint64_t v22 = &v4[*(int *)(v44 + 24)];
    long long v23 = v48[1];
    *(_OWORD *)uint64_t v22 = v48[0];
    *((_OWORD *)v22 + 1) = v23;
    uint64_t v24 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 0, 1, v24);
    *(_OWORD *)uint64_t v4 = xmmword_1C1598450;
    *((void *)v4 + 2) = 0;
    *((void *)v4 + 3) = 0;
    CGRect v25 = &v4[*(int *)(v21 + 28)];
    *(void *)CGRect v25 = 0;
    *((void *)v25 + 1) = 0;
    v25[16] = -1;
    sub_1C02237F4((uint64_t)&v49);
  }
  else
  {
    sub_1C02236B0((uint64_t)v56);
    uint64_t v26 = v44;
    id v27 = &v4[*(int *)(v44 + 24)];
    uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
    *(_OWORD *)uint64_t v4 = xmmword_1C1598450;
    *((void *)v4 + 2) = 0;
    *((void *)v4 + 3) = 0;
    uint64_t v29 = &v4[*(int *)(v26 + 28)];
    *(void *)uint64_t v29 = 0;
    *((void *)v29 + 1) = 0;
    v29[16] = -1;
  }
  sub_1BFEE9ADC((uint64_t)v4, v43, type metadata accessor for FormatInspectionItem);
  sub_1C01F0A74((uint64_t)v51);
  sub_1C1047634(v15);
  uint64_t v30 = sub_1C0233D40(v46);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x6D69542065746144, 0xE900000000000065, 0, 0, v30, v56);
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v31 = swift_allocObject();
  *(void *)(inited + 72) = v31;
  *(void *)(v31 + 48) = v57;
  long long v32 = v56[1];
  *(_OWORD *)(v31 + 16) = v56[0];
  *(_OWORD *)(v31 + 32) = v32;
  *(void *)&v51[0] = v13;
  uint64_t v33 = qword_1F1B68718;
  if (qword_1F1B68718)
  {
    uint64_t v34 = &byte_1F1B68728;
    do
    {
      char v35 = *v34++;
      LOBYTE(v48[0]) = v35;
      sub_1C0B829E8(v48, a1, (uint64_t *)&v49);
      sub_1C1047634(v49);
      --v33;
    }
    while (v33);
    uint64_t v13 = *(void *)&v51[0];
  }
  uint64_t v36 = sub_1C0233D40(v13);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x656C7A7A7550, 0xE600000000000000, 0, 0, v36, v51);
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 144) = &off_1F1BDEC90;
  uint64_t v37 = swift_allocObject();
  *(void *)(inited + 112) = v37;
  *(void *)(v37 + 48) = v52;
  long long v38 = v51[1];
  *(_OWORD *)(v37 + 16) = v51[0];
  *(_OWORD *)(v37 + 32) = v38;
  long long v39 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v39;
}

uint64_t sub_1C0C2E11C@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1C10D6C68(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C0C2E13C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatTextNodeAttachmentAlignment.rawValue.getter()
{
  if (*v0) {
    return 0x61437265746E6563;
  }
  else {
    return 0x656E696C65736162;
  }
}

uint64_t sub_1C0C2E1CC(char *a1, char *a2)
{
  return sub_1C1478BCC(*a1, *a2);
}

unint64_t sub_1C0C2E1DC()
{
  unint64_t result = qword_1EA1A4BD0;
  if (!qword_1EA1A4BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BD0);
  }
  return result;
}

uint64_t sub_1C0C2E230()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C2E2C0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C2E33C()
{
  return sub_1C1520E0C();
}

void sub_1C0C2E3C8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656E696C65736162;
  if (*v1) {
    uint64_t v2 = 0x61437265746E6563;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xEF74686769654870;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1C0C2E414(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0C2E444();
  unint64_t result = sub_1BFC7D874();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0C2E444()
{
  unint64_t result = qword_1EA1A4BD8;
  if (!qword_1EA1A4BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BD8);
  }
  return result;
}

unint64_t sub_1C0C2E498(uint64_t a1)
{
  unint64_t result = sub_1C0C2E4C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C2E4C0()
{
  unint64_t result = qword_1EA1A4BE0;
  if (!qword_1EA1A4BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BE0);
  }
  return result;
}

unint64_t sub_1C0C2E514(void *a1)
{
  a1[1] = sub_1BFD36238();
  a1[2] = sub_1BFD56F88();
  unint64_t result = sub_1C0C2E1DC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeAttachmentAlignment()
{
  return &type metadata for FormatTextNodeAttachmentAlignment;
}

uint64_t sub_1C0C2E584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  if (a16 < 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for LayeredMediaLayer(uint64_t a1)
{
  return sub_1C0199560(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
}

uint64_t initializeWithCopy for LayeredMediaLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  char v19 = *(unsigned char *)(a2 + 120);
  sub_1C0C2E584(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(unsigned char *)(a1 + 120) = v19;
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 80);
  uint64_t v28 = *(void *)(a2 + 88);
  uint64_t v29 = *(void *)(a2 + 96);
  uint64_t v30 = *(void *)(a2 + 104);
  uint64_t v31 = *(void *)(a2 + 112);
  char v32 = *(unsigned char *)(a2 + 120);
  sub_1C0C2E584(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 112);
  char v24 = *(unsigned char *)(a1 + 120);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v27;
  *(void *)(a1 + 88) = v28;
  *(void *)(a1 + 96) = v29;
  *(void *)(a1 + 104) = v30;
  *(void *)(a1 + 112) = v31;
  *(unsigned char *)(a1 + 120) = v32;
  sub_1C0199560(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24);
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 112);
  char v4 = *(unsigned char *)(a2 + 120);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 112);
  char v17 = *(unsigned char *)(a1 + 120);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v3;
  *(unsigned char *)(a1 + 120) = v4;
  sub_1C0199560(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMediaLayer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 120) & 0x7E | (*(unsigned __int8 *)(a1 + 120) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaLayer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2)
    {
      *(void *)(result + 112) = 0;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 96) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)unint64_t result = 0u;
      *(unsigned char *)(result + 120) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1C0C2E9FC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 120) = *(unsigned char *)(result + 120) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayer()
{
  return &type metadata for LayeredMediaLayer;
}

uint64_t destroy for LayeredMediaLayer.Image()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMediaLayer.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayer.Image(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v7;
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayer.Image(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMediaLayer.Image(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LayeredMediaLayer.Image(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayer.Image()
{
  return &type metadata for LayeredMediaLayer.Image;
}

uint64_t destroy for LayeredMediaLayer.Video()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMediaLayer.Video(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayer.Video(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v7;
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayer.Video(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMediaLayer.Video()
{
  return &type metadata for LayeredMediaLayer.Video;
}

uint64_t sub_1C0C2EFA8(uint64_t a1, double *a2, char *a3)
{
  uint64_t v75 = (void *)a1;
  uint64_t v5 = type metadata accessor for InternalErrorViewLayout.Context();
  uint64_t v68 = *(char **)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v69 = v6;
  uint64_t v70 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *a2;
  CGFloat v73 = a2[1];
  CGFloat v74 = v7;
  double v8 = a2[2];
  double v9 = a2[4];
  CGFloat v71 = a2[3];
  CGFloat v72 = v8;
  double v10 = a2[5];
  double v11 = a2[6];
  double v12 = a2[7];
  double v50 = a2[8];
  double v49 = a2[9];
  double v48 = a2[10];
  double v13 = a2[12];
  double v47 = a2[11];
  double v14 = a2[13];
  double v15 = a2[14];
  double v16 = a2[15];
  double v54 = a2[16];
  double v53 = a2[17];
  double v52 = a2[18];
  double v51 = a2[19];
  double v58 = a2[20];
  double v57 = a2[21];
  double v56 = a2[22];
  double v55 = a2[23];
  double v62 = a2[24];
  double v61 = a2[25];
  double v60 = a2[26];
  double v59 = a2[27];
  double v17 = a2[28];
  double v65 = a2[29];
  double v66 = v17;
  double v63 = a2[30];
  double v64 = a2[31];
  long long v18 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_titleLabel];
  objc_msgSend(v18, sel_setNumberOfLines_, 0);
  long long v19 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_subtitleLabel];
  objc_msgSend(v19, sel_setNumberOfLines_, 0);
  long long v20 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_footerLabel];
  objc_msgSend(v20, sel_setNumberOfLines_, 0);
  long long v21 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_iconImageView];
  objc_msgSend(v21, sel_setFrame_, v9, v10, v11, v12);
  objc_msgSend(v18, sel_setFrame_, v13, v14, v15, v16);
  id v67 = *(id *)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_errorLabel];
  objc_msgSend(v67, sel_setFrame_, v50, v49, v48, v47);
  objc_msgSend(v19, sel_setFrame_, v54, v53, v52, v51);
  objc_msgSend(v20, sel_setFrame_, v58, v57, v56, v55);
  long long v22 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_button];
  objc_msgSend(v22, sel_setFrame_, v62, v61, v60, v59);
  uint64_t v23 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_attachmentLabel];
  objc_msgSend(v23, sel_setFrame_, v66, v65, v63, v64);
  char v24 = (void *)sub_1C151E5EC();
  id v25 = objc_msgSend(self, sel_systemImageNamed_, v24);

  objc_msgSend(v21, sel_setImage_, v25);
  uint64_t v26 = self;
  id v27 = objc_msgSend(v26, sel_whiteColor);
  objc_msgSend(v21, sel_setTintColor_, v27);

  uint64_t v28 = v18;
  uint64_t v29 = v75;
  objc_msgSend(v28, sel_setAttributedText_, v75[3]);
  objc_msgSend(v67, sel_setAttributedText_, v29[4]);
  objc_msgSend(v19, sel_setAttributedText_, v29[5]);
  objc_msgSend(v20, sel_setAttributedText_, v29[6]);
  uint64_t v30 = v29[8];
  id v67 = v23;
  objc_msgSend(v23, sel_setAttributedText_, v30);
  objc_msgSend(v22, sel_setAttributedTitle_forState_, v29[7], 0);
  id v31 = objc_msgSend(v26, sel_whiteColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v31);

  id v32 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v32, sel_setCornerRadius_, 14.0);

  id v33 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v33, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  if (qword_1EB893368 != -1) {
    swift_once();
  }
  objc_msgSend(a3, sel_setBackgroundColor_, qword_1EB93CB70);
  uint64_t v34 = swift_allocObject();
  swift_weakInit();
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v36 = v70;
  sub_1C0C30718((uint64_t)v29, v70);
  unint64_t v37 = (v68[80] + 24) & ~(unint64_t)v68[80];
  uint64_t v68 = a3;
  unint64_t v38 = (v37 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v34;
  sub_1C0C30D40(v36, v39 + v37, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
  *(void *)(v39 + v38) = v35;

  swift_release();
  uint64_t v40 = (void *)sub_1C151A49C();
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = v76;
  swift_weakInit();
  uint64_t v43 = (uint64_t)v75;
  sub_1C0C30718((uint64_t)v75, v36);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v41;
  sub_1C0C30D40(v36, v44 + v37, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);

  swift_release();
  return sub_1C146164C(*(void **)&v68[OBJC_IVAR____TtC8NewsFeed17InternalErrorView_debugButton], *(void *)(v43 + 16), *(void *)(v42 + 16), v74, v73, v72, v71);
}

uint64_t sub_1C0C2F6F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v88 = sub_1C151AC0C();
  uint64_t v5 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  double v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0C30CDC(0, (unint64_t *)&unk_1EB893810, MEMORY[0x1E4FABF68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v89 = (char *)&v76 - v10;
  sub_1C0C30CDC(0, &qword_1EA1AF1D0, MEMORY[0x1E4FAD738], v8);
  MEMORY[0x1F4188790](v11 - 8);
  double v13 = (char *)&v76 - v12;
  sub_1C0C30CDC(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, v8);
  MEMORY[0x1F4188790](v14 - 8);
  double v16 = (uint64_t *)((char *)&v76 - v15);
  uint64_t v17 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  long long v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v90 = result;
  if (result)
  {
    uint64_t v93 = a2;
    sub_1C0D88764(v16);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      swift_release();
      return sub_1C0C30E7C((uint64_t)v16, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    }
    else
    {
      unsigned int v84 = (char *)(a3 + 16);
      sub_1C0C30D40((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
      long long v22 = &v20[*(int *)(v17 + 24)];
      uint64_t v23 = *((void *)v22 + 4);
      uint64_t v24 = *((void *)v22 + 5);
      uint64_t v91 = v22;
      uint64_t v92 = v22 + 8;
      __swift_project_boxed_opaque_existential_1((void *)v22 + 1, v23);
      (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v24 + 64))(&v95, v23, v24);
      uint64_t v25 = v97;
      uint64_t v85 = v5;
      if (v97)
      {
        uint64_t v26 = v98;
        __swift_project_boxed_opaque_existential_1(&v95, v97);
        uint64_t v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v95);
      }
      else
      {
        sub_1BFD10564((uint64_t)&v95);
        uint64_t v80 = 0;
      }
      uint64_t v86 = v7;
      uint64_t v27 = (uint64_t)&v20[*(int *)(v17 + 28)];
      uint64_t v28 = *(int *)(type metadata accessor for GroupLayoutContext() + 44);
      uint64_t v78 = v27;
      LOBYTE(v95) = *(unsigned char *)(v27 + v28);
      FeedKind.rawValue.getter();
      sub_1C151E6DC();
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(v90 + 16);
      uint64_t v30 = *(void *)(v29 + 16);
      uint64_t v81 = *(void *)(v29 + 24);
      sub_1C151CA1C();
      uint64_t v83 = v30;
      swift_unknownObjectRetain();
      uint64_t v82 = sub_1C151C9CC();
      if (qword_1EA194850 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C151A5FC();
      uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EA1A4F38);
      uint64_t v33 = *(void *)(v31 - 8);
      uint64_t v34 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v89, v32, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v31);
      unint64_t v95 = 0;
      unint64_t v96 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v95 = 0xD000000000000010;
      unint64_t v96 = 0x80000001C161FFD0;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v80 = v95;
      unint64_t v79 = v96;
      sub_1C0C30CDC(0, (unint64_t *)&unk_1EB8945A0, MEMORY[0x1E4FAC148], MEMORY[0x1E4FBBE00]);
      uint64_t v35 = sub_1C151A95C();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1C15445C0;
      unint64_t v77 = v39;
      uint64_t v40 = (uint64_t *)(v39 + v38);
      uint64_t v41 = swift_allocObject();
      uint64_t v42 = v84;
      swift_beginAccess();
      uint64_t v43 = (void *)MEMORY[0x1C18C9C60](v42);
      uint64_t v87 = v13;
      if (v43)
      {
        uint64_t v44 = v43;
        id v45 = objc_msgSend(v43, sel_window);
      }
      else
      {
        id v45 = 0;
      }
      *(void *)(v41 + 16) = v45;
      *uint64_t v40 = v41;
      uint64_t v46 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 104);
      v46(v40, *MEMORY[0x1E4FAC118], v35);
      double v47 = (void *)swift_allocObject();
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      unsigned int v84 = v20;
      uint64_t v48 = sub_1C151928C();
      __swift_project_value_buffer(v48, (uint64_t)qword_1EB8799C8);
      v47[2] = sub_1C151920C();
      v47[3] = v49;
      void v47[4] = 0xD000000000000013;
      v47[5] = 0x80000001C161FFF0;
      *(uint64_t *)((char *)v40 + v37) = (uint64_t)v47;
      uint64_t v50 = *MEMORY[0x1E4FAC120];
      v46((uint64_t *)((char *)v40 + v37), v50, v35);
      uint64_t v51 = v35;
      double v52 = (void *)swift_allocObject();
      if (qword_1EB8943F8 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v48, (uint64_t)qword_1EB893CD8);
      v52[2] = sub_1C151920C();
      v52[3] = v53;
      v52[4] = 0xD000000000000017;
      v52[5] = 0x80000001C1620010;
      *(uint64_t *)((char *)v40 + 2 * v37) = (uint64_t)v52;
      v46((uint64_t *)((char *)v40 + 2 * v37), v50, v51);
      uint64_t v54 = type metadata accessor for InternalErrorViewLayout.Context();
      sub_1C13ECB5C((uint64_t)v93 + *(int *)(v54 + 48), 1, (uint64_t *)((char *)v40 + 3 * v37));
      static RadarAttachment.feedGroup(_:)(v92, (uint64_t *)((char *)v40 + 4 * v37));
      static RadarAttachment.feedGroupLayoutContext(_:)(v78, (uint64_t *)((char *)v40 + 5 * v37));
      uint64_t v55 = *(void *)(v90 + 24);
      uint64_t v56 = MEMORY[0x1E4FBC860];
      uint64_t v94 = MEMORY[0x1E4FBC860];
      uint64_t v57 = *(void *)(v55 + 16);
      if (v57)
      {
        double v58 = (void *)(v55 + 32);
        uint64_t v78 = v55;
        swift_bridgeObjectRetain_n();
        double v59 = v92;
        do
        {
          uint64_t v63 = v58[3];
          uint64_t v62 = v58[4];
          uint64_t v93 = __swift_project_boxed_opaque_existential_1(v58, v63);
          double v64 = v91;
          __swift_project_boxed_opaque_existential_1(v59, *((void *)v91 + 4));
          uint64_t v65 = sub_1C151811C();
          uint64_t v67 = v66;
          uint64_t v69 = *((void *)v64 + 4);
          uint64_t v68 = *((void *)v64 + 5);
          __swift_project_boxed_opaque_existential_1(v59, v69);
          (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v68 + 64))(&v95, v69, v68);
          uint64_t v70 = v97;
          if (v97)
          {
            uint64_t v71 = v98;
            __swift_project_boxed_opaque_existential_1(&v95, v97);
            uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v70, v71);
            uint64_t v70 = v72;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v95);
          }
          else
          {
            sub_1BFD10564((uint64_t)&v95);
            uint64_t v60 = 0;
          }
          uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8))(v65, v67, v60, v70, v63, v62);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C1048344(v61);
          v58 += 5;
          --v57;
        }
        while (v57);
        swift_bridgeObjectRelease_n();
        uint64_t v56 = v94;
      }
      swift_getObjectType();
      unint64_t v95 = v77;
      sub_1C1048344(v56);
      (*(void (**)(char *, void, uint64_t))(v85 + 104))(v86, *MEMORY[0x1E4FAC1F8], v88);
      uint64_t v73 = (uint64_t)v87;
      sub_1C151C81C();
      uint64_t v74 = sub_1C151C82C();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
      sub_1C151ADBC();
      uint64_t v75 = (uint64_t)v84;
      sub_1C0C30E7C(v73, &qword_1EA1AF1D0, MEMORY[0x1E4FAD738]);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      return sub_1C0C30DA8(v75);
    }
  }
  return result;
}

uint64_t sub_1C0C302D8(uint64_t a1, uint64_t a2)
{
  sub_1C0C30CDC(0, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (void *)((char *)v19 - v4);
  uint64_t v6 = type metadata accessor for DebugGroupLayoutKey();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    sub_1C0D88764(v5);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_release();
      return sub_1C0C30E7C((uint64_t)v5, qword_1EB870C88, (uint64_t (*)(uint64_t))type metadata accessor for DebugGroupLayoutKey);
    }
    else
    {
      sub_1C0C30D40((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugGroupLayoutKey);
      v19[2] = *(void *)(*(void *)(v11 + 16) + 24);
      v19[1] = swift_getObjectType();
      uint64_t v12 = qword_1EB864458;
      swift_unknownObjectRetain();
      if (v12 != -1) {
        swift_once();
      }
      sub_1C0C30CDC(0, (unint64_t *)&unk_1EB8945A0, MEMORY[0x1E4FAC148], MEMORY[0x1E4FBBE00]);
      uint64_t v13 = *(void *)(sub_1C151A95C() - 8);
      uint64_t v14 = *(void *)(v13 + 72);
      unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C152C7F0;
      uint64_t v17 = (uint64_t *)(v16 + v15);
      uint64_t v18 = type metadata accessor for InternalErrorViewLayout.Context();
      sub_1C13ECB5C(a2 + *(int *)(v18 + 48), 1, v17);
      static RadarAttachment.feedGroup(_:)(&v9[*(int *)(v6 + 24) + 8], (uint64_t *)((char *)v17 + v14));
      static RadarAttachment.feedGroupLayoutContext(_:)((uint64_t)&v9[*(int *)(v6 + 28)], (uint64_t *)((char *)v17 + 2 * v14));
      v19[4] = v16;
      sub_1C151ADBC();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_1C0C30DA8((uint64_t)v9);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C0C30660()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C306A8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0C306E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0C30718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InternalErrorViewLayout.Context();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C3077C()
{
  uint64_t v1 = (int *)(type metadata accessor for InternalErrorViewLayout.Context() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  unint64_t v3 = v0 + v2 + v1[14];
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v3 + 16) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0AEFBB4();
    unint64_t v5 = v3 + *(int *)(v4 + 80);
    __swift_destroy_boxed_opaque_existential_1(v5 + 8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v6 = v5 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
    uint64_t v7 = sub_1C151787C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C309B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for InternalErrorViewLayout.Context() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C0C2F6F0(v3, (void *)(v0 + v2), v4);
}

uint64_t sub_1C0C30A50()
{
  uint64_t v1 = (int *)(type metadata accessor for InternalErrorViewLayout.Context() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  unint64_t v3 = v0 + v2 + v1[14];
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v3 + 16) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0AEFBB4();
    unint64_t v5 = v3 + *(int *)(v4 + 80);
    __swift_destroy_boxed_opaque_existential_1(v5 + 8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v6 = v5 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
    uint64_t v7 = sub_1C151787C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0C30C68()
{
  uint64_t v1 = *(void *)(type metadata accessor for InternalErrorViewLayout.Context() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C0C302D8(v2, v3);
}

void sub_1C0C30CDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0C30D40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C30DA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugGroupLayoutKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0C30E04()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C30E3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0C30E7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0C30CDC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t FormatArticleList.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleList.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t FormatArticleList.init(identifier:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t FormatArticleList.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatArticleList.init(from:)(a1);
  return v2;
}

uint64_t FormatArticleList.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0C313E4(0, &qword_1EB86FDC8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v15 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C31180();
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v15;
    uint64_t v11 = sub_1C152069C();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v6);
    *(void *)(v3 + 16) = v11;
    *(void *)(v3 + 24) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1C0C31180()
{
  unint64_t result = qword_1EB86FB78;
  if (!qword_1EB86FB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FB78);
  }
  return result;
}

uint64_t sub_1C0C311D4(uint64_t a1)
{
  unint64_t v2 = sub_1C0C31180();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C31210(uint64_t a1)
{
  unint64_t v2 = sub_1C0C31180();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatArticleList.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatArticleList.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatArticleList.encode(to:)(void *a1)
{
  sub_1C0C313E4(0, &qword_1EB86FDF8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C31180();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1C0C313E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C31180();
    unint64_t v7 = a3(a1, &type metadata for FormatArticleList.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0C31448@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatArticleList.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0C314A0(void *a1)
{
  sub_1C0C313E4(0, &qword_1EB86FDF8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C31180();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t FormatArticleList.debugDescription.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C0C31688(void *a1)
{
  a1[1] = sub_1C0C31738(&qword_1EB86FB98);
  a1[2] = sub_1C0C31738((unint64_t *)&unk_1EB86FB88);
  uint64_t result = sub_1C0C31738(&qword_1EA1A4BE8);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatArticleList()
{
  return self;
}

uint64_t sub_1C0C31738(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatArticleList();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0C31778()
{
  return FormatArticleList.debugDescription.getter();
}

uint64_t method lookup function for FormatArticleList(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatArticleList);
}

uint64_t dispatch thunk of FormatArticleList.__allocating_init(identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FormatArticleList.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for FormatArticleList.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        _OWORD *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      _OWORD *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0C3188CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatArticleList.CodingKeys()
{
  return &type metadata for FormatArticleList.CodingKeys;
}

unint64_t sub_1C0C318C8()
{
  unint64_t result = qword_1EA1A4BF0;
  if (!qword_1EA1A4BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BF0);
  }
  return result;
}

unint64_t sub_1C0C31920()
{
  unint64_t result = qword_1EB86F720;
  if (!qword_1EB86F720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F720);
  }
  return result;
}

unint64_t sub_1C0C31978()
{
  unint64_t result = qword_1EB86FB80;
  if (!qword_1EB86FB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FB80);
  }
  return result;
}

uint64_t sub_1C0C319CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v55 = a2[7];
  uint64_t v52 = a2[9];
  uint64_t v54 = a2[8];
  uint64_t v10 = *v2;
  char v11 = 0;
  switch((unint64_t)*v2 >> 60)
  {
    case 1uLL:
      if (*(unsigned char *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18)) {
        goto LABEL_27;
      }
      uint64_t v27 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v59 = *a2;
      uint64_t v60 = v4;
      uint64_t v61 = v5;
      uint64_t v62 = v6;
      uint64_t v63 = v7;
      uint64_t v64 = v8;
      uint64_t v65 = v9;
      uint64_t v66 = v55;
      uint64_t v67 = v54;
      uint64_t v68 = v52;
      uint64_t v28 = *(void *)(FormatContentSubgroup.ResolvedContainer.feedItemIdentifiers.getter() + 16);
      swift_bridgeObjectRelease();
      if (v28 >= v27) {
        goto LABEL_27;
      }
      goto LABEL_26;
    case 2uLL:
      uint64_t v29 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v30 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v31 = type metadata accessor for FormatContentSubgroupFilterContext();
      sub_1C0C328B0(a1 + *(int *)(v31 + 20), (uint64_t)&v57);
      if (!v58) {
        goto LABEL_15;
      }
      sub_1BFC773DC(&v57, (uint64_t)&v59);
      uint64_t v32 = v62;
      uint64_t v33 = v63;
      __swift_project_boxed_opaque_existential_1(&v59, v62);
      char v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 16))(v29, v30, v32, v33) == 0;
      goto LABEL_14;
    case 3uLL:
      uint64_t v34 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v35 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v36 = type metadata accessor for FormatContentSubgroupFilterContext();
      sub_1C0C328B0(a1 + *(int *)(v36 + 20), (uint64_t)&v57);
      if (!v58) {
        goto LABEL_15;
      }
      sub_1BFC773DC(&v57, (uint64_t)&v59);
      uint64_t v37 = v62;
      uint64_t v38 = v63;
      __swift_project_boxed_opaque_existential_1(&v59, v62);
      char v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 16))(v34, v35, v37, v38) > 0;
      goto LABEL_14;
    case 4uLL:
      uint64_t v39 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v41 = type metadata accessor for FormatContentSubgroupFilterContext();
      sub_1C0C328B0(a1 + *(int *)(v41 + 20), (uint64_t)&v57);
      if (!v58)
      {
LABEL_15:
        sub_1C0C3296C((uint64_t)&v57);
        goto LABEL_26;
      }
      sub_1BFC773DC(&v57, (uint64_t)&v59);
      uint64_t v42 = v62;
      uint64_t v43 = v63;
      __swift_project_boxed_opaque_existential_1(&v59, v62);
      char v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 24))(v39, v40, v42, v43);
LABEL_14:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
      return v11 & 1;
    case 5uLL:
      return v11 & 1;
    case 6uLL:
      uint64_t v44 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = *(void *)(v44 + 16);
      if (!v50) {
        goto LABEL_27;
      }
      swift_bridgeObjectRetain();
      uint64_t v45 = 0;
      while (1)
      {
        *(void *)&long long v57 = *(void *)(v44 + 8 * v45 + 32);
        uint64_t v59 = v3;
        uint64_t v60 = v4;
        uint64_t v61 = v5;
        uint64_t v62 = v6;
        uint64_t v63 = v7;
        uint64_t v64 = v8;
        uint64_t v65 = v9;
        uint64_t v66 = v55;
        uint64_t v67 = v54;
        uint64_t v68 = v52;
        if ((sub_1C0C319CC(a1, &v59) & 1) == 0) {
          goto LABEL_25;
        }
        if (v50 == ++v45) {
          goto LABEL_20;
        }
      }
    case 7uLL:
      uint64_t v46 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v51 = *(void *)(v46 + 16);
      if (!v51) {
        goto LABEL_27;
      }
      swift_bridgeObjectRetain();
      uint64_t v47 = 0;
      break;
    case 8uLL:
      *(void *)&long long v57 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v59 = v3;
      uint64_t v60 = v4;
      uint64_t v61 = v5;
      uint64_t v62 = v6;
      uint64_t v63 = v7;
      uint64_t v64 = v8;
      uint64_t v65 = v9;
      uint64_t v66 = v55;
      uint64_t v67 = v54;
      uint64_t v68 = v52;
      char v11 = sub_1C0C319CC(a1, &v59) ^ 1;
      return v11 & 1;
    case 9uLL:
      uint64_t v48 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&long long v57 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *((void *)&v57 + 1) = v48;
      char v11 = sub_1C132E228();
      return v11 & 1;
    default:
      uint64_t v12 = *(void *)(v10 + 24);
      uint64_t v13 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroupFilterContext() + 24));
      if (!*(void *)(v13 + 16)) {
        goto LABEL_26;
      }
      uint64_t v14 = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_1BFEF2D8C(v14, v12);
      if ((v16 & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v17 = (uint64_t *)(*(void *)(v13 + 56) + 80 * v15);
      uint64_t v18 = v17[1];
      uint64_t v19 = v17[2];
      uint64_t v20 = v17[3];
      uint64_t v21 = v17[4];
      uint64_t v22 = v17[5];
      uint64_t v23 = v17[7];
      uint64_t v53 = v17[6];
      uint64_t v24 = v17[8];
      uint64_t v25 = v17[9];
      uint64_t v26 = *v17;
      sub_1BFEE0A78();
      swift_bridgeObjectRelease();
      uint64_t v59 = v26;
      uint64_t v60 = v18;
      uint64_t v61 = v19;
      uint64_t v62 = v20;
      uint64_t v63 = v21;
      uint64_t v64 = v22;
      uint64_t v65 = v53;
      uint64_t v66 = v23;
      uint64_t v67 = v24;
      uint64_t v68 = v25;
      char v11 = sub_1C104BF3C(a1);
      sub_1C0033494();
      return v11 & 1;
  }
  do
  {
    *(void *)&long long v57 = *(void *)(v46 + 8 * v47 + 32);
    uint64_t v59 = v3;
    uint64_t v60 = v4;
    uint64_t v61 = v5;
    uint64_t v62 = v6;
    uint64_t v63 = v7;
    uint64_t v64 = v8;
    uint64_t v65 = v9;
    uint64_t v66 = v55;
    uint64_t v67 = v54;
    uint64_t v68 = v52;
    if (sub_1C0C319CC(a1, &v59))
    {
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_27:
      char v11 = 1;
      return v11 & 1;
    }
    ++v47;
  }
  while (v51 != v47);
LABEL_25:
  swift_bridgeObjectRelease();
LABEL_26:
  char v11 = 0;
  return v11 & 1;
}

uint64_t static FormatContentSubgroupFilter.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 60)
  {
    case 1uLL:
      if (v3 >> 60 != 1) {
        goto LABEL_34;
      }
      uint64_t v9 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v10 = v3 & 0xFFFFFFFFFFFFFFFLL;
      char v11 = *(unsigned char *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (*(unsigned char *)(v9 + 24))
      {
        if (v11) {
          goto LABEL_26;
        }
      }
      else
      {
        if (*(void *)(v9 + 16) != *(void *)(v10 + 16)) {
          char v11 = 1;
        }
        if ((v11 & 1) == 0) {
          goto LABEL_26;
        }
      }
      goto LABEL_34;
    case 2uLL:
      if (v3 >> 60 != 2) {
        goto LABEL_34;
      }
      goto LABEL_13;
    case 3uLL:
      if (v3 >> 60 != 3) {
        goto LABEL_34;
      }
      goto LABEL_13;
    case 4uLL:
      if (v3 >> 60 != 4) {
        goto LABEL_34;
      }
      goto LABEL_13;
    case 5uLL:
      if (v3 >> 60 == 5) {
        goto LABEL_26;
      }
      goto LABEL_34;
    case 6uLL:
      if (v3 >> 60 == 6) {
        goto LABEL_28;
      }
      goto LABEL_34;
    case 7uLL:
      if (v3 >> 60 != 7) {
        goto LABEL_34;
      }
LABEL_28:
      uint64_t v13 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      LOBYTE(v13) = sub_1C00DEB9C(v13, v14);
      swift_release();
      swift_release();
      return v13 & 1;
    case 8uLL:
      if (v3 >> 60 != 8) {
        goto LABEL_34;
      }
      uint64_t v15 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v16 = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = v15;
      swift_retain();
      swift_retain();
      char v12 = static FormatContentSubgroupFilter.== infix(_:_:)(&v17, &v16);
      swift_release();
      swift_release();
      return v12 & 1;
    case 9uLL:
      if (v3 >> 60 != 9) {
        goto LABEL_34;
      }
LABEL_13:
      uint64_t v6 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v4 = *(void *)(v6 + 16);
      uint64_t v5 = *(void *)(v6 + 24);
      v3 &= 0xFFFFFFFFFFFFFFFuLL;
      goto LABEL_14;
    default:
      if (v3 >> 60)
      {
LABEL_34:
        char v12 = 0;
        return v12 & 1;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      uint64_t v5 = *(void *)(v2 + 24);
LABEL_14:
      if (v4 == *(void *)(v3 + 16) && v5 == *(void *)(v3 + 24))
      {
LABEL_26:
        char v12 = 1;
        return v12 & 1;
      }
      return sub_1C1520A9C();
  }
}

uint64_t sub_1C0C32138@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0C32198@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0C321FC(uint64_t a1)
{
  unint64_t v2 = sub_1C005CAE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C32238(uint64_t a1)
{
  unint64_t v2 = sub_1C005CAE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C32274(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1C006CDEC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C006CDEC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0C32300()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C006CDEC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0C32364()
{
  sub_1C006CDEC(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C323B8()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C006CDEC(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0C32418()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0C32450()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C3248C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0C324C4()
{
  unint64_t result = qword_1EA1A4BF8;
  if (!qword_1EA1A4BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4BF8);
  }
  return result;
}

unint64_t sub_1C0C32518()
{
  unint64_t result = qword_1EB86A9B0[0];
  if (!qword_1EB86A9B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB86A9B0);
  }
  return result;
}

uint64_t sub_1C0C3256C()
{
  return swift_deallocObject();
}

unint64_t sub_1C0C3257C()
{
  unint64_t result = qword_1EA1A4C00;
  if (!qword_1EA1A4C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C00);
  }
  return result;
}

unint64_t sub_1C0C325D0()
{
  unint64_t result = qword_1EB86A9A8;
  if (!qword_1EB86A9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A9A8);
  }
  return result;
}

unint64_t sub_1C0C32624(void *a1)
{
  a1[1] = sub_1C006CA70();
  a1[2] = sub_1C006CAC4();
  unint64_t result = sub_1C0C3265C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C3265C()
{
  unint64_t result = qword_1EA1A4C08;
  if (!qword_1EA1A4C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C08);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilter()
{
  return &type metadata for FormatContentSubgroupFilter;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilter.CodingType()
{
  return &type metadata for FormatContentSubgroupFilter.CodingType;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupFilter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C327C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilter.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilter.CodingKeys;
}

unint64_t sub_1C0C32804()
{
  unint64_t result = qword_1EA1A4C10;
  if (!qword_1EA1A4C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C10);
  }
  return result;
}

unint64_t sub_1C0C3285C()
{
  unint64_t result = qword_1EA1A4C18;
  if (!qword_1EA1A4C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C18);
  }
  return result;
}

uint64_t sub_1C0C328B0(uint64_t a1, uint64_t a2)
{
  sub_1C0C32914();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0C32914()
{
  if (!qword_1EB88D5E0)
  {
    sub_1C0A212C0();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88D5E0);
    }
  }
}

uint64_t sub_1C0C3296C(uint64_t a1)
{
  sub_1C0C32914();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0C329DC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    char v8 = (void *)(v6 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state + 8);
    if (!v9 || (*v8 == v4 ? (BOOL v10 = v9 == v3) : (BOOL v10 = 0), !v10 && (sub_1C1520A9C() & 1) == 0))
    {
      *char v8 = v4;
      v8[1] = v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C10C1924();
    }
  }
}

uint64_t sub_1C0C32AA0()
{
  return sub_1C15181EC();
}

uint64_t sub_1C0C32C5C(void *a1, uint64_t a2, char *a3)
{
  uint64_t v43 = (void *)*a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = &a3[OBJC_IVAR____TtC8NewsFeed15FormatStateView_identifier];
  *(void *)uint64_t v7 = *(void *)(v5 + 48);
  *((void *)v7 + 1) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C151F8FC();
  swift_beginAccess();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 56));
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  uint64_t v41 = a3;
  uint64_t v13 = &a3[OBJC_IVAR____TtC8NewsFeed15FormatStateView_stateViewFormatLayoutViews];
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v15 = 0;
  int64_t v16 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    unint64_t v17 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v18 = v17 | (v15 << 6);
LABEL_21:
    uint64_t v22 = *(void *)v13;
    if (*(void *)(*(void *)v13 + 16))
    {
      uint64_t v23 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v18);
      uint64_t v24 = *(void *)(*(void *)(v8 + 56) + 8 * v18);
      uint64_t v26 = *v23;
      uint64_t v25 = v23[1];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_1BFEF2D8C(v26, v25);
      if (v28)
      {
        id v29 = *(id *)(*(void *)(v22 + 56) + 8 * v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_setFrame_, *(double *)(*(void *)(v24 + 32) + 16), *(double *)(*(void *)(v24 + 32) + 24), *(double *)(*(void *)(v24 + 32) + 32), *(double *)(*(void *)(v24 + 32) + 40));

        uint64_t result = swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v19 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_32:
    __break(1u);
    return result;
  }
  if (v19 >= v16) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v19);
  ++v15;
  if (v20) {
    goto LABEL_20;
  }
  int64_t v15 = v19 + 1;
  if (v19 + 1 >= v16) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v15);
  if (v20) {
    goto LABEL_20;
  }
  int64_t v15 = v19 + 2;
  if (v19 + 2 >= v16) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v9 + 8 * v15);
  if (v20)
  {
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    goto LABEL_21;
  }
  int64_t v21 = v19 + 3;
  if (v21 < v16)
  {
    unint64_t v20 = *(void *)(v9 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v15 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          goto LABEL_32;
        }
        if (v15 >= v16) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v9 + 8 * v15);
        ++v21;
        if (v20) {
          goto LABEL_20;
        }
      }
    }
    int64_t v15 = v21;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  uint64_t v30 = v43[9];
  uint64_t v32 = *(void *)(v42 + 16);
  uint64_t v31 = *(void *)(v42 + 24);
  if (v30 < 0)
  {
    uint64_t v33 = v30 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    uint64_t v36 = v41;
    uint64_t v35 = v31;
  }
  else
  {
    swift_retain_n();
    sub_1C0D48B40(v32, v31, &v46);
    uint64_t v46 = v48;
    uint64_t v47 = v49;
    sub_1C0C33168();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C15181FC();
    sub_1C00C5B90(v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = v30;
    uint64_t v35 = v31;
    sub_1C00C5B90(v34);
    uint64_t v36 = v41;
  }
  sub_1C151820C();
  uint64_t v37 = v47;
  uint64_t v38 = &v36[OBJC_IVAR____TtC8NewsFeed15FormatStateView_state];
  *(void *)uint64_t v38 = v46;
  *((void *)v38 + 1) = v37;
  swift_bridgeObjectRelease();
  sub_1C10C1924();
  sub_1C151821C();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for FormatLayoutViewToken();
  sub_1C151897C();
  swift_release();
  swift_release();
  uint64_t v39 = v43[10];
  uint64_t v40 = v43[11];
  v44[0] = v43[9];
  v44[1] = v39;
  v44[2] = v40;
  sub_1C0349AA8(v44[0]);
  swift_retain();
  sub_1C0349ED4(v32, v35, (uint64_t)sub_1C0C33160, v33, &v46);
  swift_release();
  sub_1C00C5B90(v44[0]);
  sub_1BFE6A378((uint64_t)&v46, (uint64_t)v44);
  if (v45)
  {
    __swift_project_boxed_opaque_existential_1(v44, v45);
    sub_1C1517E3C();
    swift_release();
    sub_1C03F5550((uint64_t)&v46);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  else
  {
    sub_1C03F5550((uint64_t)&v46);
    swift_release();
    return sub_1C03F5550((uint64_t)v44);
  }
}

uint64_t sub_1C0C33120()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0C33158(uint64_t a1, uint64_t *a2)
{
  sub_1C0C329DC(a1, a2, v2);
}

uint64_t sub_1C0C33160()
{
  return sub_1C0C32AA0();
}

void sub_1C0C33168()
{
  if (!qword_1EB871410)
  {
    sub_1C0C331CC();
    unint64_t v0 = sub_1C151822C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871410);
    }
  }
}

unint64_t sub_1C0C331CC()
{
  unint64_t result = qword_1EB877DB0;
  if (!qword_1EB877DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877DB0);
  }
  return result;
}

uint64_t FormatGroupNodeRenderer.render<A>(context:layoutAttributes:view:auxViews:traitCollection:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0C33254(a2, a3, a4, a5);
}

uint64_t FormatGroupNodeRenderer.deinit()
{
  return v0;
}

uint64_t FormatGroupNodeRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C33254(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a1 + 200);
  sub_1C151F94C();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a1 + 128));
  if (v7)
  {
    objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, *(unsigned char *)(v7 + 178) & 1);
    uint64_t v8 = *(void *)(a1 + 136);
    uint64_t v10 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v7 + 72);
    uint64_t v11 = *(void *)(v7 + 80);
    char v12 = *(unsigned char *)(v7 + 88);
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v9, v11, v12);
  }
  else
  {
    objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, 0);
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    uint64_t v8 = *(void *)(a1 + 136);
    char v12 = -2;
  }
  id v13 = objc_msgSend(a2, sel_layer);
  v16[0] = v9;
  v16[1] = v11;
  char v17 = v12;
  sub_1BFE69BFC(v8, v13, a4, v10, v16);

  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v9, v11, v12);
  if (v7)
  {
    uint64_t v7 = *(void *)(v7 + 56);
    swift_bridgeObjectRetain();
  }
  v16[0] = v7;
  sub_1BFE69FD4(v8, a2, v16, a3);
  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for FormatGroupNodeRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeRenderer);
}

ValueMetadata *type metadata accessor for FeedCursorEntity()
{
  return &type metadata for FeedCursorEntity;
}

uint64_t sub_1C0C33420@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v134 = a2;
  uint64_t v127 = a3;
  char v152 = a1;
  uint64_t v133 = *a1;
  uint64_t v129 = sub_1C151827C();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129);
  v145 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE9F90(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  v144 = (char *)&v127 - v5;
  sub_1BFCBF6E8(0, &qword_1EB85ACB8, &qword_1EB85ACB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v132 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v131 = (char *)&v127 - v9;
  sub_1BFCBF6E8(0, &qword_1EB85ACC8, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798]);
  MEMORY[0x1F4188790](v10 - 8);
  v151 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v130 = (char *)&v127 - v13;
  sub_1C00910EC();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v150 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v149 = (char *)&v127 - v17;
  sub_1BFEE9F90(0, (unint64_t *)&qword_1EB85AC98, (void (*)(uint64_t))sub_1C009103C);
  MEMORY[0x1F4188790](v18 - 8);
  v156 = (char *)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v148 = (char *)&v127 - v21;
  sub_1BFEE9F90(0, &qword_1EB85AC88, sub_1C0091160);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  unint64_t v27 = (char *)&v127 - v26;
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  uint64_t v29 = MEMORY[0x1E4FAA770];
  sub_1BFCBF6E8(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v127 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v127 - v34;
  uint64_t v153 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCBF698(0, &qword_1EB85ACA0, v28, v29, MEMORY[0x1E4FAA6B0]);
  uint64_t v37 = v36;
  uint64_t v138 = v36;
  uint64_t v38 = *(void *)(v36 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v139 = v39;
  uint64_t v140 = v38 + 56;
  unsigned int v136 = v35;
  v39(v35, 1, 1, v36);
  uint64_t v137 = v32;
  v39(v32, 1, 1, v37);
  uint64_t v143 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCBF698(0, &qword_1EB85ACE0, v28, v29, MEMORY[0x1E4FAA6B8]);
  uint64_t v142 = (void (*)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))v40;
  swift_allocObject();
  sub_1C1519BDC();
  v147 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCBF698(0, &qword_1EB85AC40, v28, v29, MEMORY[0x1E4FAA610]);
  uint64_t v141 = v41;
  swift_allocObject();
  uint64_t v157 = sub_1C151996C();
  sub_1C0091160(0);
  uint64_t v43 = v42;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v44(v27, 1, 1, v42);
  v44(v24, 1, 1, v43);
  v154 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCBF9C4(0, &qword_1EB85ACD8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1C0091230(0);
  swift_allocObject();
  uint64_t v155 = sub_1C151996C();
  v44(v27, 1, 1, v43);
  v44(v24, 1, 1, v43);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v163 = sub_1C151996C();
  sub_1C009103C();
  uint64_t v46 = v45;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  uint64_t v48 = v148;
  v47(v148, 1, 1, v45);
  uint64_t v49 = v156;
  v47(v156, 1, 1, v46);
  sub_1BFD77090(0, (unint64_t *)&qword_1EB85ACE8, v154);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1C0091180();
  swift_allocObject();
  v154 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C151996C();
  v47(v48, 1, 1, v46);
  v47(v49, 1, 1, v46);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  v156 = (char *)sub_1C151996C();
  uint64_t v50 = v138;
  uint64_t v51 = v139;
  v139(v136, 1, 1, v138);
  v51(v137, 1, 1, v50);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v148 = (char *)sub_1C151996C();
  sub_1BFCBF758(0, &qword_1EB864040, MEMORY[0x1E4FAA6B0]);
  uint64_t v53 = v52;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
  uint64_t v55 = v149;
  v54(v149, 1, 1, v52);
  uint64_t v56 = v150;
  v54(v150, 1, 1, v53);
  sub_1BFCBF758(0, &qword_1EB8640B0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFCBF758(0, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v146 = sub_1C151996C();
  v54(v55, 1, 1, v53);
  v54(v56, 1, 1, v53);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v149 = (char *)sub_1C151996C();
  uint64_t v57 = MEMORY[0x1E4FBB550];
  uint64_t v58 = MEMORY[0x1E4FAA798];
  sub_1BFCBF698(0, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v153);
  uint64_t v60 = v59;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
  uint64_t v62 = v130;
  v61(v130, 1, 1, v59);
  uint64_t v63 = v151;
  v61(v151, 1, 1, v60);
  sub_1BFCBF698(0, &qword_1EB85ACF8, v57, v58, v143);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFCBF698(0, (unint64_t *)&unk_1EB85AC58, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v147);
  swift_allocObject();
  uint64_t v64 = sub_1C151996C();
  v61(v62, 1, 1, v60);
  v61(v63, 1, 1, v60);
  uint64_t v150 = (char *)v64;
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  v151 = (char *)sub_1C151996C();
  uint64_t v65 = MEMORY[0x1E4FBB390];
  uint64_t v66 = MEMORY[0x1E4FAA780];
  sub_1BFCBF698(0, &qword_1EB85ACB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], v153);
  uint64_t v68 = v67;
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);
  v69(v131, 1, 1, v67);
  v69(v132, 1, 1, v68);
  sub_1BFCBF698(0, &qword_1EB85ACF0, v65, v66, v143);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFCBF698(0, &qword_1EB85AC50, v65, v66, v147);
  swift_allocObject();
  uint64_t v70 = (uint64_t (*)(void, uint64_t, uint64_t))sub_1C151996C();
  uint64_t v71 = v138;
  uint64_t v72 = v139;
  v139(v136, 1, 1, v138);
  v72(v137, 1, 1, v71);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  v147 = (uint64_t (*)(void, uint64_t, uint64_t))sub_1C151996C();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v153 = v70;
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v73 = v152[3];
  uint64_t v161 = v152[2];
  uint64_t v162 = v73;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v138 = sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v74 = (char *)v152 + qword_1EB93C640;
  uint64_t v75 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C151631C();
  uint64_t v139 = v75;
  uint64_t v76 = *((void *)v75 - 1);
  uint64_t v142 = *(void (**)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v76 + 16);
  uint64_t v143 = (uint64_t (*)(void, uint64_t, uint64_t))(v76 + 16);
  unint64_t v77 = v144;
  v142(v144, v74, v75);
  uint64_t v78 = *(void (**)(char *, void, uint64_t, void))(v76 + 56);
  uint64_t v140 = v76 + 56;
  uint64_t v141 = v78;
  v78(v77, 0, 1, v75);
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v138 = sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v79 = v144;
  uint64_t v80 = v139;
  v142(v144, (char *)v152 + qword_1EB93C670, v139);
  v141(v79, 0, 1, v80);
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v81 = sub_1C12510A4();
  if (v81)
  {
    uint64_t v82 = *(void *)(v81 + 16);
    uint64_t v83 = *(void *)(v81 + 24);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    uint64_t v82 = 0;
    uint64_t v83 = 1;
  }
  uint64_t v161 = v82;
  uint64_t v162 = v83;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v144 = (char *)sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unsigned int v84 = (void *)((char *)v152 + *(void *)(*v152 + 272));
  swift_beginAccess();
  if (*v84)
  {
    uint64_t v85 = sub_1C12555F8();
    uint64_t v86 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v85 = 0;
    uint64_t v86 = 1;
  }
  uint64_t v158 = v85;
  v159 = (void (*)(char *, void, uint64_t, void))v86;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v144 = (char *)sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v87 = FeedCursor.rootCursor.getter();
  uint64_t v89 = *(void *)(v87 + 16);
  uint64_t v88 = *(void (**)(char *, void, uint64_t, void))(v87 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v158 = v89;
  v159 = v88;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v90 = v152;
  uint64_t v158 = *(void *)((char *)v152 + qword_1EB93C698);
  LOBYTE(v159) = 0;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v158 = *(void *)((char *)v90 + qword_1EB93C648);
  LOBYTE(v159) = 0;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v158) = FeedCursor.reachedEnd.getter() & 1;
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v91 = 8 * *((char *)v152 + 32);
  uint64_t v92 = *(void *)&aActive_4[v91];
  uint64_t v93 = *(void (**)(char *, void, uint64_t, void))&aRepooledexpand[v91 + 16];
  uint64_t v158 = v92;
  v159 = v93;
  sub_1C1519C0C();
  swift_release();
  sub_1C151869C();
  swift_allocObject();
  v144 = (char *)sub_1C151535C();
  uint64_t v94 = v135;
  sub_1C151867C();
  if (v94)
  {
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    return swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v143 = 0;
    uint64_t v142 = (void (*)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))sub_1C151997C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v158 = 0x2D617461642E63;
    v159 = (void (*)(char *, void, uint64_t, void))0xE700000000000000;
    unint64_t v96 = v152;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v97 = v158;
    unint64_t v98 = (unint64_t)v159;
    uint64_t v100 = v96[2];
    unint64_t v99 = v96[3];
    swift_bridgeObjectRetain();
    uint64_t v101 = sub_1C151825C();
    uint64_t v158 = sub_1C039FAE0(v97, v98, v100, v99, v101, v102);
    v159 = v103;
    uint64_t v160 = v104;
    sub_1BFCBF8CC(0, (unint64_t *)&unk_1EB8614E8, (uint64_t (*)(void))sub_1BFD98EEC, (uint64_t)&type metadata for FeedBlobEntity, MEMORY[0x1E4FAA628]);
    uint64_t v140 = v105;
    swift_allocObject();
    uint64_t v158 = sub_1C1519A2C();
    sub_1C1519C0C();
    swift_release();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v142 = (void (*)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))sub_1C151997C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v106 = v152;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v107 = v154;
    swift_release();
    uint64_t v108 = v163;
    swift_release();
    uint64_t v109 = v155;
    swift_release();
    uint64_t v110 = v157;
    swift_release();
    uint64_t v158 = 0x2D6C6F6F702E63;
    v159 = (void (*)(char *, void, uint64_t, void))0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v139 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v158;
    uint64_t v141 = v159;
    unint64_t v111 = v106[3];
    uint64_t v138 = v106[2];
    swift_bridgeObjectRetain();
    uint64_t v158 = sub_1C151826C();
    sub_1C1518ACC();
    sub_1BFCBFAA8(&qword_1EB85AB38, MEMORY[0x1E4FAAD90]);
    uint64_t v112 = v143;
    uint64_t v113 = sub_1C151533C();
    uint64_t v143 = v112;
    if (v112)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v145, v129);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v115 = v113;
      unint64_t v116 = v114;
      swift_release();
      uint64_t v158 = sub_1C039FAE0((uint64_t)v139, (unint64_t)v141, v138, v111, v115, v116);
      v159 = v117;
      uint64_t v160 = v118;
      swift_allocObject();
      uint64_t v158 = sub_1C1519A2C();
      sub_1C1519C0C();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v145, v129);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v119 = v150;
      swift_release();
      uint64_t v120 = v149;
      swift_release();
      uint64_t v121 = v146;
      swift_release();
      char v122 = v148;
      swift_release();
      v123 = v156;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      uint64_t v124 = v127;
      *uint64_t v127 = v110;
      v124[1] = v109;
      v124[2] = v108;
      v124[3] = (uint64_t)v107;
      v124[4] = (uint64_t)v123;
      v124[5] = (uint64_t)v122;
      v124[6] = v121;
      v124[7] = (uint64_t)v120;
      uint64_t v125 = v151;
      v124[8] = (uint64_t)v119;
      v124[9] = (uint64_t)v125;
      char v126 = v147;
      v124[10] = (uint64_t)v153;
      v124[11] = (uint64_t)v126;
    }
  }
  return result;
}

uint64_t sub_1C0C358B8()
{
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  qword_1EB93C230 = qword_1EA198ED8;
  *(void *)algn_1EB93C238 = unk_1EA198EE0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C35924(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4464657461657263;
      break;
    case 2:
      uint64_t result = 0x446873696C627570;
      break;
    case 3:
      uint64_t result = 0x7543746E65726170;
      break;
    case 4:
      unsigned int v3 = 1954047342;
      goto LABEL_8;
    case 5:
      unsigned int v3 = 1953460082;
LABEL_8:
      uint64_t result = v3 | 0x7372754300000000;
      break;
    case 6:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      uint64_t result = 0xD000000000000015;
      break;
    case 8:
      uint64_t result = 0xD000000000000010;
      break;
    case 9:
      uint64_t result = 0x756A6441746F6C73;
      break;
    case 10:
      uint64_t result = 0x4564656863616572;
      break;
    case 11:
      uint64_t result = 1684957547;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0C35AB0(void *a1)
{
  unsigned int v3 = v1;
  sub_1BFCBF8CC(0, &qword_1EA1A4C48, (uint64_t (*)(void))sub_1C0C37ED4, (uint64_t)&type metadata for FeedCursorEntity.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C37ED4();
  sub_1C1520F0C();
  uint64_t v14 = *v3;
  char v13 = 0;
  sub_1BFCBF698(0, &qword_1EB85AC40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770], MEMORY[0x1E4FAA610]);
  sub_1C0392D34();
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v12 = v3;
    uint64_t v14 = v3[1];
    char v13 = 1;
    sub_1C0091230(0);
    sub_1BFCBFAA8((unint64_t *)&qword_1EA1999B0, sub_1C0091230);
    sub_1C152080C();
    uint64_t v14 = v12[2];
    char v13 = 2;
    sub_1C152080C();
    uint64_t v14 = v12[3];
    char v13 = 3;
    sub_1C0091180();
    sub_1BFCBFAA8(&qword_1EA1999A8, (void (*)(uint64_t))sub_1C0091180);
    sub_1C152080C();
    uint64_t v14 = v12[4];
    char v13 = 4;
    sub_1C152080C();
    uint64_t v10 = v12;
    uint64_t v14 = v12[5];
    char v13 = 5;
    sub_1C152080C();
    uint64_t v14 = v10[6];
    char v13 = 6;
    sub_1BFCBF758(0, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
    sub_1C0C37F28(&qword_1EA1999B8);
    sub_1C152080C();
    uint64_t v14 = v12[7];
    char v13 = 7;
    sub_1C152080C();
    uint64_t v14 = v12[8];
    char v13 = 8;
    sub_1BFCBF698(0, (unint64_t *)&unk_1EB85AC58, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], MEMORY[0x1E4FAA610]);
    sub_1C0C38090();
    sub_1C152080C();
    uint64_t v14 = v12[9];
    char v13 = 9;
    sub_1C152080C();
    uint64_t v14 = v12[10];
    char v13 = 10;
    sub_1BFCBF698(0, &qword_1EB85AC50, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], MEMORY[0x1E4FAA610]);
    sub_1C0C38114();
    sub_1C152080C();
    uint64_t v14 = v12[11];
    char v13 = 11;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0C36050()
{
  return sub_1C0C35924(*v0);
}

uint64_t sub_1C0C36058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C383A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C36080(uint64_t a1)
{
  unint64_t v2 = sub_1C0C37ED4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C360BC(uint64_t a1)
{
  unint64_t v2 = sub_1C0C37ED4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C360F8()
{
  if (qword_1EB85E998 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB93C230;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C0C36160(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98E44();
  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1C0C361AC(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98E44();
  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1C0C361F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98E44();
  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

double sub_1C0C3625C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0C36420(a1, (uint64_t)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1C0C362A8(void *a1)
{
  return sub_1C0C35AB0(a1);
}

uint64_t sub_1C0C362C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1BFD98E44();
  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1C0C3630C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98E44();
  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1C0C36360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1BFD98E44();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1C0C363CC()
{
  unint64_t result = qword_1EA1A4C20;
  if (!qword_1EA1A4C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C20);
  }
  return result;
}

uint64_t sub_1C0C36420@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v116 = a1;
  v99[0] = a2;
  sub_1BFCBF8CC(0, &qword_1EA1A4C28, (uint64_t (*)(void))sub_1C0C37ED4, (uint64_t)&type metadata for FeedCursorEntity.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v101 = v2;
  uint64_t v100 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v117 = (char *)v99 - v3;
  sub_1BFCBF6E8(0, &qword_1EB85ACB8, &qword_1EB85ACB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v109 = (char *)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v108 = (char *)v99 - v7;
  sub_1BFCBF6E8(0, &qword_1EB85ACC8, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v113 = (char *)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v107 = (char *)v99 - v11;
  sub_1C00910EC();
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v114 = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v106 = (char *)v99 - v15;
  sub_1BFEE9F90(0, (unint64_t *)&qword_1EB85AC98, (void (*)(uint64_t))sub_1C009103C);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v115 = (char *)v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v105 = (char *)v99 - v19;
  sub_1BFEE9F90(0, &qword_1EB85AC88, sub_1C0091160);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v99 - v24;
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  uint64_t v27 = MEMORY[0x1E4FAA770];
  sub_1BFCBF6E8(0, (unint64_t *)&qword_1EB85ACA8, &qword_1EB85ACA0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAA770]);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)v99 - v32;
  char v126 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFCBF698(0, &qword_1EB85ACA0, v26, v27, MEMORY[0x1E4FAA6B0]);
  uint64_t v35 = v34;
  uint64_t v120 = v34;
  uint64_t v36 = *((void *)v34 - 1);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t (*)(void, uint64_t, uint64_t)))(v36 + 56);
  uint64_t v121 = v37;
  unint64_t v122 = v36 + 56;
  uint64_t v118 = v33;
  v37(v33, 1, 1, v34);
  uint64_t v119 = v30;
  v37(v30, 1, 1, v35);
  uint64_t v125 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCBF698(0, &qword_1EB85ACE0, v26, v27, MEMORY[0x1E4FAA6B8]);
  v123 = v38;
  swift_allocObject();
  sub_1C1519BDC();
  uint64_t v124 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFCBF698(0, &qword_1EB85AC40, v26, v27, MEMORY[0x1E4FAA610]);
  uint64_t v127 = v39;
  swift_allocObject();
  uint64_t v111 = sub_1C151996C();
  sub_1C0091160(0);
  uint64_t v41 = v40;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  v42(v25, 1, 1, v40);
  v42(v22, 1, 1, v41);
  uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFCBF9C4(0, &qword_1EB85ACD8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0091230(0);
  uint64_t v45 = v44;
  swift_allocObject();
  uint64_t v110 = sub_1C151996C();
  v42(v25, 1, 1, v41);
  v42(v22, 1, 1, v41);
  swift_allocObject();
  sub_1C1519BDC();
  v99[3] = v45;
  swift_allocObject();
  uint64_t v104 = sub_1C151996C();
  sub_1C009103C();
  uint64_t v47 = v46;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
  uint64_t v49 = v105;
  v48(v105, 1, 1, v46);
  uint64_t v50 = v115;
  v48(v115, 1, 1, v47);
  sub_1BFD77090(0, (unint64_t *)&qword_1EB85ACE8, v43);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1C0091180();
  uint64_t v52 = v51;
  swift_allocObject();
  uint64_t v103 = sub_1C151996C();
  v48(v49, 1, 1, v47);
  v48(v50, 1, 1, v47);
  swift_allocObject();
  sub_1C1519BDC();
  v99[2] = v52;
  swift_allocObject();
  uint64_t v105 = (char *)sub_1C151996C();
  uint64_t v53 = v120;
  uint64_t v54 = v121;
  v121(v118, 1, 1, v120);
  v54(v119, 1, 1, v53);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v102 = sub_1C151996C();
  sub_1BFCBF758(0, &qword_1EB864040, MEMORY[0x1E4FAA6B0]);
  uint64_t v56 = v55;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56);
  uint64_t v58 = v106;
  v57(v106, 1, 1, v55);
  uint64_t v59 = v114;
  v57(v114, 1, 1, v56);
  sub_1BFCBF758(0, &qword_1EB8640B0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCBF758(0, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
  uint64_t v61 = v60;
  swift_allocObject();
  uint64_t v115 = (char *)sub_1C151996C();
  v57(v58, 1, 1, v56);
  v57(v59, 1, 1, v56);
  swift_allocObject();
  sub_1C1519BDC();
  v99[1] = v61;
  swift_allocObject();
  uint64_t v106 = (char *)sub_1C151996C();
  uint64_t v62 = MEMORY[0x1E4FBB550];
  uint64_t v63 = MEMORY[0x1E4FAA798];
  sub_1BFCBF698(0, &qword_1EB85ACC0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], v126);
  uint64_t v65 = v64;
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56);
  uint64_t v67 = v107;
  v66(v107, 1, 1, v64);
  uint64_t v68 = v113;
  v66(v113, 1, 1, v65);
  sub_1BFCBF698(0, &qword_1EB85ACF8, v62, v63, v125);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCBF698(0, (unint64_t *)&unk_1EB85AC58, v62, v63, v124);
  swift_allocObject();
  unint64_t v114 = (char *)sub_1C151996C();
  v66(v67, 1, 1, v65);
  v66(v68, 1, 1, v65);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v113 = (char *)sub_1C151996C();
  uint64_t v69 = MEMORY[0x1E4FBB390];
  uint64_t v70 = MEMORY[0x1E4FAA780];
  sub_1BFCBF698(0, &qword_1EB85ACB0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], v126);
  uint64_t v72 = v71;
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
  v73(v108, 1, 1, v71);
  v73(v109, 1, 1, v72);
  sub_1BFCBF698(0, &qword_1EB85ACF0, v69, v70, v125);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFCBF698(0, &qword_1EB85AC50, v69, v70, v124);
  uint64_t v75 = v74;
  swift_allocObject();
  char v126 = (uint64_t (*)(void, uint64_t, uint64_t))sub_1C151996C();
  uint64_t v76 = v120;
  unint64_t v77 = v121;
  v121(v118, 1, 1, v120);
  v77(v119, 1, 1, v76);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v125 = (uint64_t (*)(void, uint64_t, uint64_t))sub_1C151996C();
  uint64_t v78 = v116;
  __swift_project_boxed_opaque_existential_1(v116, v116[3]);
  sub_1C0C37ED4();
  unint64_t v79 = v112;
  sub_1C1520EBC();
  if (v79)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v124 = v75;
    char v128 = 0;
    unint64_t v80 = sub_1C0392C2C();
    sub_1C15206EC();
    uint64_t v81 = v129;
    swift_retain();
    swift_release();
    char v128 = 1;
    sub_1BFCBFAA8((unint64_t *)&qword_1EA199978, sub_1C0091230);
    sub_1C15206EC();
    unint64_t v122 = v80;
    v123 = v81;
    uint64_t v82 = v129;
    swift_retain();
    swift_release();
    char v128 = 2;
    sub_1C15206EC();
    uint64_t v83 = (void (*)(char *, uint64_t, uint64_t, uint64_t (*)(void, uint64_t, uint64_t)))v129;
    swift_retain();
    swift_release();
    char v128 = 3;
    sub_1BFCBFAA8(&qword_1EA199970, (void (*)(uint64_t))sub_1C0091180);
    sub_1C15206EC();
    uint64_t v121 = v83;
    unsigned int v84 = v129;
    swift_retain();
    swift_release();
    char v128 = 4;
    sub_1C15206EC();
    uint64_t v85 = v129;
    swift_retain();
    swift_release();
    char v128 = 5;
    sub_1C15206EC();
    uint64_t v120 = v85;
    uint64_t v86 = (char *)v129;
    swift_retain();
    swift_release();
    char v128 = 6;
    sub_1C0C37F28(&qword_1EA199980);
    sub_1C15206EC();
    uint64_t v119 = (char *)v129;
    swift_retain();
    swift_release();
    char v128 = 7;
    sub_1C15206EC();
    uint64_t v118 = v86;
    uint64_t v87 = (uint64_t)v129;
    swift_retain();
    swift_release();
    char v128 = 8;
    sub_1C0C37F88();
    sub_1C15206EC();
    uint64_t v88 = v84;
    uint64_t v111 = v87;
    uint64_t v112 = v129;
    swift_retain();
    swift_release();
    char v128 = 9;
    sub_1C15206EC();
    uint64_t v110 = (uint64_t)v129;
    swift_retain();
    swift_release();
    char v128 = 10;
    sub_1C0C3800C();
    sub_1C15206EC();
    uint64_t v89 = v129;
    swift_retain();
    swift_release();
    char v128 = 11;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v117, v101);
    uint64_t v90 = v129;
    swift_retain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v116);
    swift_release();
    uint64_t v124 = v89;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v91 = v120;
    swift_release();
    swift_release();
    uint64_t v92 = (void (*)(void, void, void, void))v121;
    swift_release();
    swift_release();
    uint64_t v93 = v123;
    uint64_t result = swift_release();
    unint64_t v95 = (void *)v99[0];
    *(void *)v99[0] = v93;
    v95[1] = v82;
    v95[2] = v92;
    v95[3] = v88;
    unint64_t v96 = v118;
    v95[4] = v91;
    v95[5] = v96;
    uint64_t v97 = v111;
    v95[6] = v119;
    v95[7] = v97;
    uint64_t v98 = v110;
    v95[8] = v112;
    v95[9] = v98;
    v95[10] = v124;
    v95[11] = v90;
  }
  return result;
}

unint64_t sub_1C0C37ED4()
{
  unint64_t result = qword_1EA1A4C30;
  if (!qword_1EA1A4C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C30);
  }
  return result;
}

uint64_t sub_1C0C37F28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFCBF758(255, &qword_1EB863FD8, MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0C37F88()
{
  unint64_t result = qword_1EA1A4C38;
  if (!qword_1EA1A4C38)
  {
    sub_1BFCBF698(255, (unint64_t *)&unk_1EB85AC58, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C38);
  }
  return result;
}

unint64_t sub_1C0C3800C()
{
  unint64_t result = qword_1EA1A4C40;
  if (!qword_1EA1A4C40)
  {
    sub_1BFCBF698(255, &qword_1EB85AC50, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C40);
  }
  return result;
}

unint64_t sub_1C0C38090()
{
  unint64_t result = qword_1EA1A4C50;
  if (!qword_1EA1A4C50)
  {
    sub_1BFCBF698(255, (unint64_t *)&unk_1EB85AC58, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAA798], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C50);
  }
  return result;
}

unint64_t sub_1C0C38114()
{
  unint64_t result = qword_1EA1A4C58;
  if (!qword_1EA1A4C58)
  {
    sub_1BFCBF698(255, &qword_1EB85AC50, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAA780], MEMORY[0x1E4FAA610]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C58);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedCursorEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    _OWORD *result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C38264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedCursorEntity.CodingKeys()
{
  return &type metadata for FeedCursorEntity.CodingKeys;
}

unint64_t sub_1C0C382A0()
{
  unint64_t result = qword_1EA1A4C60;
  if (!qword_1EA1A4C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C60);
  }
  return result;
}

unint64_t sub_1C0C382F8()
{
  unint64_t result = qword_1EA1A4C68;
  if (!qword_1EA1A4C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C68);
  }
  return result;
}

unint64_t sub_1C0C38350()
{
  unint64_t result = qword_1EA1A4C70;
  if (!qword_1EA1A4C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4C70);
  }
  return result;
}

uint64_t sub_1C0C383A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7543746E65726170 && a2 == 0xEE006449726F7372 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737275437478656ELL && a2 == 0xEC0000006449726FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73727543746F6F72 && a2 == 0xEC0000006449726FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1620120 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C1620140 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1620160 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x756A6441746F6C73 && a2 == 0xEE00746E656D7473 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4564656863616572 && a2 == 0xEA0000000000646ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1C0C388E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1BFC82364(0, &qword_1EB862990, (uint64_t (*)(uint64_t))sub_1C0C38DA8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v54 = (char *)&v36 - v8;
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = (void *)a1[3];
  uint64_t v14 = a1[4];
  uint64_t v13 = a1[5];
  uint64_t v15 = *(void *)(a2 + *(int *)(type metadata accessor for FormatContentOverlaySubgroup() + 20));
  uint64_t v51 = *(void *)(v15 + 16);
  if (v51)
  {
    uint64_t v40 = a3;
    uint64_t v41 = v3;
    uint64_t v44 = type metadata accessor for FormatContentOverlaySlot();
    uint64_t v16 = *(void *)(v44 - 8);
    uint64_t v50 = v15 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v49 = *(void *)(v16 + 72);
    uint64_t v48 = type metadata accessor for FormatRegex();
    swift_bridgeObjectRetain();
    uint64_t v39 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = v14;
    swift_bridgeObjectRetain();
    uint64_t v37 = v13;
    swift_bridgeObjectRetain();
    uint64_t v36 = v15;
    swift_bridgeObjectRetain();
    sub_1BFC82364(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
    uint64_t v47 = v17;
    unint64_t v46 = sub_1C0180128();
    unint64_t v45 = sub_1C0C38DDC();
    uint64_t v18 = 0;
    uint64_t v19 = v9;
    uint64_t v42 = v9;
    uint64_t v43 = v10;
    do
    {
      uint64_t v20 = v50 + v49 * v18;
      uint64_t v52 = v10;
      uint64_t v53 = v19;
      swift_bridgeObjectRetain();
      uint64_t v21 = (uint64_t)v54;
      sub_1C151E4FC();
      sub_1C0C38DA8(0);
      int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22);
      sub_1C0C38E64(v21);
      swift_bridgeObjectRelease();
      if (v23 != 1)
      {
        uint64_t v24 = *(void *)(v20 + *(int *)(v44 + 20));
        uint64_t v25 = *(void *)(v24 + 16);
        if (v25)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = (unsigned char *)(v24 + 40);
          do
          {
            unint64_t v28 = *((void *)v26 - 1);
            if (*v26)
            {
              if (*v26 == 1)
              {
                sub_1BFC7E2FC(*((void *)v26 - 1));
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v12 = sub_1C0EE7558(0, v12[2] + 1, 1, v12);
                }
                unint64_t v30 = v12[2];
                unint64_t v29 = v12[3];
                if (v30 >= v29 >> 1) {
                  uint64_t v12 = sub_1C0EE7558((void *)(v29 > 1), v30 + 1, 1, v12);
                }
                v12[2] = v30 + 1;
                v12[v30 + 4] = v28;
              }
              else
              {
                unint64_t v33 = v12[2];
                sub_1BFC7E2FC(*((void *)v26 - 1));
                char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
                if (!isUniquelyReferenced_nonNull_native || v33 >= v12[3] >> 1) {
                  uint64_t v12 = sub_1C0EE7558(isUniquelyReferenced_nonNull_native, v33 + 1, 1, v12);
                }
                swift_arrayDestroy();
                uint64_t v27 = v12[2];
                memmove(v12 + 5, v12 + 4, 8 * v27);
                v12[2] = v27 + 1;
                v12[4] = v28;
              }
            }
            else
            {
              sub_1BFC7E2FC(*((void *)v26 - 1));
              swift_bridgeObjectRelease();
              sub_1BFC7E2FC(v28);
              uint64_t v12 = sub_1C0EE7558(0, 1, 1, MEMORY[0x1E4FBC860]);
              unint64_t v32 = v12[2];
              unint64_t v31 = v12[3];
              if (v32 >= v31 >> 1) {
                uint64_t v12 = sub_1C0EE7558((void *)(v31 > 1), v32 + 1, 1, v12);
              }
              v12[2] = v32 + 1;
              v12[v32 + 4] = v28;
              sub_1C00F5B6C(v28, 0);
            }
            v26 += 16;
            --v25;
          }
          while (v25);
          swift_bridgeObjectRelease();
          uint64_t v19 = v42;
          uint64_t v10 = v43;
        }
      }
      ++v18;
    }
    while (v18 != v51);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v9 = v19;
    a3 = v40;
    uint64_t v14 = v38;
    uint64_t v11 = v39;
    uint64_t v13 = v37;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a3 = v10;
  a3[1] = v9;
  a3[2] = v11;
  a3[3] = v12;
  a3[4] = v14;
  a3[5] = v13;
  return result;
}

void sub_1C0C38DA8(uint64_t a1)
{
}

unint64_t sub_1C0C38DDC()
{
  unint64_t result = qword_1EB862998;
  if (!qword_1EB862998)
  {
    sub_1BFC82364(255, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862998);
  }
  return result;
}

uint64_t sub_1C0C38E64(uint64_t a1)
{
  sub_1BFC82364(0, &qword_1EB862990, (uint64_t (*)(uint64_t))sub_1C0C38DA8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatBlockNode.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlockNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBlockNode.throws.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FormatBlockNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBlockNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatBlockNode.blockIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBlockNode.blockIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.blockIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.throws.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = a1;
  return result;
}

uint64_t (*FormatBlockNode.throws.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBlockNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatBlockNode.__allocating_init(identifier:blockIdentifier:throws:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_beginAccess();
  *(unsigned char *)(v14 + 48) = a5;
  swift_beginAccess();
  *(void *)(v14 + 56) = a6;
  swift_beginAccess();
  *(void *)(v14 + 64) = a7;
  return v14;
}

uint64_t FormatBlockNode.init(identifier:blockIdentifier:throws:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  swift_beginAccess();
  *(unsigned char *)(v7 + 48) = a5;
  swift_beginAccess();
  *(void *)(v7 + 56) = a6;
  swift_beginAccess();
  *(void *)(v7 + 64) = a7;
  return v7;
}

uint64_t FormatBlockNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBlockNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C39564(void *a1)
{
  return FormatBlockNode.encode(to:)(a1);
}

uint64_t sub_1C0C39588(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed15FormatBlockNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void *sub_1C0C39594(uint64_t a1, uint64_t a2)
{
  return FormatBlockNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C0C395B8(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1C0F494D0(v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v14 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1C019FFF0(v13, (uint64_t)v8);
        v15[5] = *((void *)v8 + 2);
        swift_retain();
        sub_1C05B8C90(a1);
        swift_release();
        sub_1BFF1F8F4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v13 += v14;
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1C0C39780(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_retain();
  sub_1C0F4B1A4(v4, a1, v3);
  return swift_release();
}

void sub_1C0C397C8()
{
  if (!qword_1EB873870[0])
  {
    sub_1BFFFCF34();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, qword_1EB873870);
    }
  }
}

uint64_t sub_1C0C39820(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0C39B24(&qword_1EA1A4C78, a2, (void (*)(uint64_t))type metadata accessor for FormatBlockNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C39878(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0C39B24(&qword_1EB87BF30, a2, (void (*)(uint64_t))type metadata accessor for FormatBlockNode);
  a1[2] = sub_1C0C39B24(&qword_1EB85FE60, v3, (void (*)(uint64_t))type metadata accessor for FormatBlockNode);
  uint64_t result = sub_1C0C39B24(&qword_1EA1A4C80, v4, (void (*)(uint64_t))type metadata accessor for FormatBlockNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0C39924(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0C39B24(&qword_1EA1A4C88, a2, (void (*)(uint64_t))type metadata accessor for FormatBlockNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C3997C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C399CC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 48);
  return result;
}

uint64_t sub_1C0C39A14(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 48) = v2;
  return result;
}

uint64_t sub_1C0C39A58@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C39AA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBlockNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBlockNode);
}

uint64_t dispatch thunk of FormatBlockNode.__allocating_init(identifier:blockIdentifier:throws:options:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C0C39B24(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void __swiftcall DefaultFontBook.audioTrackFontBook()(NewsFeed::AudioTrackFontBook *__return_ptr retstr)
{
}

void sub_1C0C39B84(NewsFeed::AudioTrackFontBook *a1@<X8>)
{
}

void __swiftcall CondensedFontBook.headlineFontBook(heading:)(NewsFeed::HeadlineFontBook *__return_ptr retstr, NewsFeed::Heading heading)
{
  sub_1BFF63CD0();
  uint64_t v3 = (objc_class *)sub_1C151F87C();
  uint64_t v4 = self;
  double v5 = *MEMORY[0x1E4FB09D8];
  uint64_t v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09D8]);
  uint64_t v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E4FB09D0]);
  uint64_t v8 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_, 11.0);
  uint64_t v9 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 13.0, v5);
  retstr->titleFont.super.isa = v3;
  retstr->excerptFont.super.isa = v6;
  retstr->accessoryFont.super.isa = v7;
  retstr->publisherFont.super.isa = v8;
  retstr->adBadgeFont.super.isa = v9;
}

id _s8NewsFeed15DefaultFontBookV03gapdE0AA03GapdE0VyF_0@<X0>(void *a1@<X8>)
{
  char v2 = self;
  id v3 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2908]);
  id result = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t _s8NewsFeed15DefaultFontBookV010coverIssuedE0AA05CovergdE0VyF_0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFF63CD0();
  uint64_t v2 = sub_1C151F87C();
  uint64_t v3 = sub_1C151F87C();
  uint64_t v4 = sub_1C151F87C();
  uint64_t v5 = sub_1C151F87C();
  uint64_t v6 = sub_1C151F87C();
  uint64_t result = sub_1C151F87C();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = result;
  return result;
}

void __swiftcall CondensedFontBook.audioTrackFontBook()(NewsFeed::AudioTrackFontBook *__return_ptr retstr)
{
}

uint64_t sub_1C0C39F40@<X0>(unint64_t *a1@<X8>)
{
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v3 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  unint64_t v4 = sub_1BFF63CD0();
  id v5 = v3;
  uint64_t v6 = sub_1C151F87C();
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 40) = v6;
  unint64_t v7 = sub_1BFF991DC(inited);
  id v8 = (id)*MEMORY[0x1E4F247E8];
  sub_1C151E69C();
  uint64_t v9 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v16 = 0xBFC3333333333333;
  sub_1BFF993A8(&v16, v15);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C10693BC(v15, v9, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C151F87C();
  uint64_t v12 = sub_1C151F87C();
  uint64_t v13 = sub_1C151F87C();
  uint64_t result = sub_1C151F87C();
  *a1 = v7;
  a1[1] = v11;
  a1[2] = v12;
  a1[3] = v13;
  a1[4] = result;
  return result;
}

void sub_1C0C3A144(NewsFeed::Heading a1@<W0>, NewsFeed::HeadlineFontBook *a2@<X8>)
{
}

void sub_1C0C3A15C(NewsFeed::AudioTrackFontBook *a1@<X8>)
{
}

uint64_t ScalingFontBook.__allocating_init(contentResizeScale:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  uint64_t v4 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t ScalingFontBook.init(contentResizeScale:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  uint64_t v4 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

id sub_1C0C3A270@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v3 = *a1;
  sub_1C151793C();
  sub_1BFF63CD0();
  if (v3 > 1)
  {
    double v16 = *MEMORY[0x1E4FB09E0];
    uint64_t v4 = sub_1C151F87C();
    sub_1C151793C();
    double v18 = round(v17 * 60.0 * 0.25);
    if (byte_1EA2B53C0) {
      double v19 = v18;
    }
    else {
      double v19 = 15.0;
    }
    id v8 = self;
    double v9 = *MEMORY[0x1E4FB09D8];
    id v10 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v19, *MEMORY[0x1E4FB09D8]);
    sub_1C151793C();
    double v21 = round(v20 * 52.0 * 0.25);
    if (!byte_1EA2B53C0) {
      double v21 = 13.0;
    }
    id v13 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v21, v16);
    sub_1C151793C();
    double v15 = round(v22 * 56.0 * 0.25);
    if (!byte_1EA2B53C0) {
      double v15 = 14.0;
    }
  }
  else
  {
    uint64_t v4 = sub_1C151F87C();
    sub_1C151793C();
    double v6 = round(v5 * 60.0 * 0.25);
    if (byte_1EA2B53C0) {
      double v7 = v6;
    }
    else {
      double v7 = 15.0;
    }
    id v8 = self;
    double v9 = *MEMORY[0x1E4FB09D8];
    id v10 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v7, *MEMORY[0x1E4FB09D8]);
    sub_1C151793C();
    double v12 = round(v11 * 52.0 * 0.25);
    if (!byte_1EA2B53C0) {
      double v12 = 13.0;
    }
    id v13 = objc_msgSend(v8, sel_systemFontOfSize_weight_, v12, *MEMORY[0x1E4FB09E0]);
    sub_1C151793C();
    double v15 = round(v14 * 56.0 * 0.25);
    if (!byte_1EA2B53C0) {
      double v15 = 14.0;
    }
  }
  id v23 = objc_msgSend(v8, sel_systemFontOfSize_, v15);
  id result = objc_msgSend(v8, sel_systemFontOfSize_weight_, 13.0, v9);
  *a2 = v4;
  a2[1] = (uint64_t)v10;
  a2[2] = (uint64_t)v13;
  a2[3] = (uint64_t)v23;
  a2[4] = (uint64_t)result;
  return result;
}

uint64_t sub_1C0C3A5A4@<X0>(unint64_t *a1@<X8>)
{
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  unsigned int v3 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  unint64_t v4 = sub_1BFF63CD0();
  id v5 = v3;
  uint64_t v6 = sub_1C151F87C();
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 40) = v6;
  unint64_t v7 = sub_1BFF991DC(inited);
  id v8 = (id)*MEMORY[0x1E4F247E8];
  sub_1C151E69C();
  double v9 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x1E4FBB3D0];
  *(void *)&long long v16 = 0xBFC3333333333333;
  sub_1BFF993A8(&v16, v15);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C10693BC(v15, v9, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C151F87C();
  uint64_t v12 = sub_1C151F87C();
  uint64_t v13 = sub_1C151F87C();
  uint64_t result = sub_1C151F87C();
  *a1 = v7;
  a1[1] = v11;
  a1[2] = v12;
  a1[3] = v13;
  a1[4] = result;
  return result;
}

uint64_t ScalingFontBook.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  uint64_t v2 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScalingFontBook.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed15ScalingFontBook_contentResizeScale;
  uint64_t v2 = sub_1C151794C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id sub_1C0C3A8A0@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0C3A270(a1, a2);
}

uint64_t sub_1C0C3A8C4@<X0>(unint64_t *a1@<X8>)
{
  return sub_1C0C3A5A4(a1);
}

uint64_t dispatch thunk of FontBookProviding.headlineFontBook(heading:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FontBookProviding.gapFontBook()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FontBookProviding.coverIssueFontBook()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FontBookProviding.audioTrackFontBook()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

ValueMetadata *type metadata accessor for DefaultFontBook()
{
  return &type metadata for DefaultFontBook;
}

ValueMetadata *type metadata accessor for CondensedFontBook()
{
  return &type metadata for CondensedFontBook;
}

uint64_t sub_1C0C3A94C()
{
  return type metadata accessor for ScalingFontBook();
}

uint64_t type metadata accessor for ScalingFontBook()
{
  uint64_t result = qword_1EA1A4C98;
  if (!qword_1EA1A4C98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C3A9A0()
{
  uint64_t result = sub_1C151794C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ScalingFontBook(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScalingFontBook);
}

uint64_t dispatch thunk of ScalingFontBook.__allocating_init(contentResizeScale:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ScalingFontBook.headlineFontBook(heading:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ScalingFontBook.gapFontBook()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ScalingFontBook.coverIssueFontBook()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ScalingFontBook.audioTrackFontBook()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t FormatHeadlineBinding.SourceItemTip.tipSource(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*v2)
  {
    if (qword_1EB86F710 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C151CE3C();
    uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB86F6F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v5, v4);
  }
  else if (objc_msgSend(*(id *)(a1 + 40), sel_sourceChannel))
  {
    id v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier, 0x3A3A776F6C6C6F66, 0xE800000000000000);
    sub_1C151E62C();

    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151CE2C();
    return swift_unknownObjectRelease_n();
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    *id v8 = 0xD000000000000012;
    v8[1] = 0x80000001C1616870;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

BOOL static FormatHeadlineBinding.SourceItemTip.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatHeadlineBinding.SourceItemTip.tipSource(from:)@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  if (*v2)
  {
    if (qword_1EB86F710 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C151CE3C();
    uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1EB86F6F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v5, v4);
  }
  else
  {
    id v7 = objc_msgSend(objc_msgSend(*a1, sel_backingTag), sel_asChannel);
    swift_unknownObjectRelease();
    if (v7)
    {
      id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier, 0x3A3A776F6C6C6F66, 0xE800000000000000);
      sub_1C151E62C();

      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151CE2C();
      return swift_unknownObjectRelease_n();
    }
    else
    {
      type metadata accessor for FormatLayoutError();
      sub_1BFE7E51C();
      swift_allocError();
      void *v9 = 0xD000000000000012;
      v9[1] = 0x80000001C1616870;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
  }
}

uint64_t FormatHeadlineBinding.SourceItemTip.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatHeadlineBinding.SourceItemTip.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C3AF10@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatHeadlineBinding.SourceItemTip.init(from:)(a1, a2);
}

uint64_t sub_1C0C3AF28(void *a1)
{
  return FormatHeadlineBinding.SourceItemTip.encode(to:)(a1);
}

unint64_t sub_1C0C3AF44()
{
  unint64_t result = qword_1EA1A4CA8;
  if (!qword_1EA1A4CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4CA8);
  }
  return result;
}

unint64_t sub_1C0C3AF98(uint64_t a1)
{
  unint64_t result = sub_1C0C3AFC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C3AFC0()
{
  unint64_t result = qword_1EA1A4CB0;
  if (!qword_1EA1A4CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4CB0);
  }
  return result;
}

unint64_t sub_1C0C3B014(void *a1)
{
  a1[1] = sub_1C088A3E4();
  a1[2] = sub_1C08EFA54();
  unint64_t result = sub_1C0C3AF44();
  a1[3] = result;
  return result;
}

unsigned char *_s13SourceItemTipOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C3B118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.SourceItemTip()
{
  return &type metadata for FormatHeadlineBinding.SourceItemTip;
}

uint64_t FormatGroupNodeMaskRendererResult.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatGroupNodeMaskRendererResult.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *initializeBufferWithCopyOfBuffer for FormatGroupMaskSupplementaryLayer(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(id *)a2;
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void destroy for FormatGroupMaskSupplementaryLayer(id *a1)
{
}

uint64_t assignWithCopy for FormatGroupMaskSupplementaryLayer(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(id *)a2;
  unsigned int v6 = *(void **)a1;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;

  return a1;
}

void **assignWithTake for FormatGroupMaskSupplementaryLayer(void **a1, _OWORD *a2)
{
  id v3 = *a1;
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FormatGroupMaskSupplementaryLayer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(void *)(a1 + 8) >> 57) & 0x38 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatGroupMaskSupplementaryLayer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C0C3B334(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_1C0C3B340(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1C0C3B350(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupMaskSupplementaryLayer()
{
  return &type metadata for FormatGroupMaskSupplementaryLayer;
}

uint64_t type metadata accessor for FormatGroupNodeMaskRendererResult()
{
  return self;
}

uint64_t method lookup function for FormatGroupNodeMaskRendererResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeMaskRendererResult);
}

uint64_t sub_1C0C3B3B4(uint64_t a1)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v32 = (_DWORD *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = (uint64_t)&v30 - v6;
  MEMORY[0x1F4188790](v7);
  double v9 = (_DWORD *)((char *)&v30 - v8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v31 = (int *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  double v18 = (int *)((char *)&v30 - v17);
  uint64_t v19 = type metadata accessor for FormatDerivedDataBindingSwitchCaseResult();
  uint64_t v20 = *(int *)(v19 + 20);
  uint64_t v34 = a1;
  sub_1C0C3BF20(a1 + v20, (uint64_t)v12, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t v30 = v14;
  double v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v35 = v13;
  if (v21(v12, 1, v13) == 1)
  {
    sub_1C0C3BFFC((uint64_t)v12, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  }
  else
  {
    sub_1C034CFD8((uint64_t)v12, (uint64_t)v18);
    uint64_t v22 = v1 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchResult() + 20);
    uint64_t v23 = v36;
    sub_1C0C3B7C0(v22, v18, *(unsigned __int8 *)(v1 + 16), v9);
    uint64_t result = sub_1C034D0EC((uint64_t)v18);
    if (v23) {
      return result;
    }
    uint64_t v36 = 0;
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56))(v9, 0, 1, v35);
    sub_1C034D148((uint64_t)v9, v22);
  }
  uint64_t v25 = v33;
  sub_1C0C3BF20(v34 + *(int *)(v19 + 24), v33, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v21((char *)v25, 1, v35) == 1) {
    return sub_1C0C3BFFC(v25, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  }
  uint64_t v26 = v31;
  sub_1C034CFD8(v25, (uint64_t)v31);
  uint64_t v27 = v1 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchResult() + 24);
  uint64_t v28 = v36;
  sub_1C0C3B7C0(v27, v26, *(unsigned __int8 *)(v1 + 16), v32);
  uint64_t result = sub_1C034D0EC((uint64_t)v26);
  if (!v28)
  {
    unint64_t v29 = v32;
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v35);
    return sub_1C034D148((uint64_t)v29, v27);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataBindingSwitchResult()
{
  uint64_t result = qword_1EA1A4CC0;
  if (!qword_1EA1A4CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C3B7C0@<X0>(uint64_t a1@<X0>, int *a2@<X1>, int a3@<W4>, _DWORD *a4@<X8>)
{
  uint64_t v86 = a2;
  LODWORD(v84) = a3;
  uint64_t v87 = a1;
  uint64_t v85 = a4;
  sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v83 = (uint64_t)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v82 = (uint64_t)&v78 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v78 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v78 - v12;
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v78 - v15;
  uint64_t v17 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v78 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v78 - v25;
  sub_1C0C3BF20(v87, (uint64_t)v16, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v87 = v17;
  if (v27(v16, 1, v17) == 1)
  {
    sub_1C0C3BFFC((uint64_t)v16, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v28 = *((void *)v86 + 1);
    if (v84) {
      int v29 = *v86;
    }
    else {
      int v29 = 0;
    }
    uint64_t v47 = v85;
    int v48 = v86[1];
    sub_1C0C3BF20((uint64_t)v86 + *(int *)(v87 + 36), (uint64_t)v85 + *(int *)(v87 + 36), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    *uint64_t v47 = v29;
    v47[1] = v48;
    uint64_t v49 = MEMORY[0x1E4FBC860];
    *((void *)v47 + 1) = v28;
    *((void *)v47 + 2) = v49;
    *((void *)v47 + 3) = 0;
    *((void *)v47 + 4) = 0;
    return swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v79 = v23;
    unint64_t v80 = v10;
    uint64_t v84 = (uint64_t)v20;
    uint64_t v81 = v13;
    sub_1C034CFD8((uint64_t)v16, (uint64_t)v26);
    uint64_t v30 = *((void *)v26 + 1);
    unint64_t v31 = v86;
    uint64_t v32 = *((void *)v86 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v33 = sub_1C00AC6B0(v30, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)v26;
    if (v33)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = swift_bridgeObjectRetain();
      uint64_t v81 = (char *)sub_1C01B0924(v35, v30);
      if (*v31 >= *(_DWORD *)v26) {
        int v36 = *(_DWORD *)v26;
      }
      else {
        int v36 = *v31;
      }
      if (v31[1] <= *((_DWORD *)v26 + 1)) {
        int v37 = *((_DWORD *)v26 + 1);
      }
      else {
        int v37 = v31[1];
      }
      uint64_t v38 = (uint64_t)v31;
      uint64_t v39 = v87;
      uint64_t v40 = (uint64_t)v26;
      uint64_t v41 = v83;
      sub_1C0C3BF20((uint64_t)&v26[*(int *)(v87 + 36)], v83, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v42 = v84;
      sub_1C034D088(v38, v84);
      uint64_t v43 = sub_1C1518CDC();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v41, 1, v43) == 1)
      {
        unint64_t v45 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
        uint64_t v46 = v82;
        sub_1C0C3BF20(v42 + *(int *)(v39 + 36), v82, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        sub_1C034D0EC(v42);
        sub_1C0C3BFFC(v41, (unint64_t *)&qword_1EB884FE0, v45);
      }
      else
      {
        sub_1C034D0EC(v42);
        uint64_t v46 = v82;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v82, v41, v43);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v43);
      }
      uint64_t v67 = v85;
      uint64_t v68 = (uint64_t)v81;
      sub_1C034D0EC(v40);
      _DWORD *v67 = v36;
      v67[1] = v37;
      uint64_t v69 = MEMORY[0x1E4FBC860];
      *((void *)v67 + 1) = v68;
      *((void *)v67 + 2) = v69;
      *((void *)v67 + 3) = 0;
      *((void *)v67 + 4) = 0;
      uint64_t v70 = (uint64_t)v67 + *(int *)(v39 + 36);
    }
    else
    {
      int v51 = *((_DWORD *)v26 + 1);
      if (v51 != v31[1])
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1C00DAB28();
        swift_allocError();
        uint64_t v72 = v71;
        sub_1C0C3BF8C();
        uint64_t v74 = (uint64_t)&v72[*(int *)(v73 + 48)];
        uint64_t v75 = (uint64_t)&v72[*(int *)(v73 + 64)];
        *uint64_t v72 = 4;
        sub_1C034D088((uint64_t)v26, v74);
        sub_1C034D088((uint64_t)v31, v75);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return sub_1C034D0EC((uint64_t)v26);
      }
      swift_bridgeObjectRetain();
      uint64_t v52 = swift_bridgeObjectRetain();
      uint64_t v53 = sub_1C01B0924(v52, v30);
      LODWORD(v84) = *(_DWORD *)v26;
      uint64_t v54 = v31;
      uint64_t v55 = v87;
      uint64_t v56 = (uint64_t)v80;
      sub_1C0C3BF20((uint64_t)&v26[*(int *)(v87 + 36)], (uint64_t)v80, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      uint64_t v57 = (uint64_t)v54;
      uint64_t v58 = (uint64_t)v79;
      sub_1C034D088(v57, (uint64_t)v79);
      uint64_t v59 = sub_1C1518CDC();
      uint64_t v60 = *(void *)(v59 - 8);
      BOOL v61 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v56, 1, v59) == 1;
      uint64_t v62 = v58;
      uint64_t v46 = (uint64_t)v81;
      if (v61)
      {
        uint64_t v63 = v53;
        uint64_t v64 = v62;
        uint64_t v65 = (void (*)(uint64_t))MEMORY[0x1E4FAAFC8];
        sub_1C0C3BF20(v62 + *(int *)(v55 + 36), (uint64_t)v81, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        uint64_t v66 = v64;
        uint64_t v53 = v63;
        sub_1C034D0EC(v66);
        sub_1C0C3BFFC(v56, (unint64_t *)&qword_1EB884FE0, v65);
      }
      else
      {
        sub_1C034D0EC(v62);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v46, v56, v59);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v46, 0, 1, v59);
      }
      sub_1C034D0EC(v34);
      uint64_t v76 = v85;
      *uint64_t v85 = v84;
      v76[1] = v51;
      uint64_t v77 = MEMORY[0x1E4FBC860];
      *((void *)v76 + 1) = v53;
      *((void *)v76 + 2) = v77;
      *((void *)v76 + 3) = 0;
      *((void *)v76 + 4) = 0;
      uint64_t v70 = (uint64_t)v76 + *(int *)(v55 + 36);
    }
    return sub_1BFEF6F58(v46, v70);
  }
}

uint64_t sub_1C0C3BF20(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C034D4B8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C0C3BF8C()
{
  if (!qword_1EA1A4CB8)
  {
    type metadata accessor for FormatSlotDefinitionItemSet();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA1A4CB8);
    }
  }
}

uint64_t sub_1C0C3BFFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C034D4B8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void *sub_1C0C3C058(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for FormatSlotDefinitionItemSet();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v38 = v12;
      void *v9 = *v10;
      uint64_t v16 = v10[2];
      v9[1] = v10[1];
      v9[2] = v16;
      uint64_t v17 = v10[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17)
      {
        uint64_t v18 = v10[4];
        uint64_t v9[3] = v17;
        v9[4] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
      }
      uint64_t v19 = *(int *)(v11 + 36);
      __dst = (char *)v9 + v19;
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = sub_1C1518CDC();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      uint64_t v12 = v38;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v9, 0, 1, v11);
    }
    uint64_t v24 = *(int *)(a3 + 24);
    uint64_t v25 = (void *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    if (v13(v26, 1, v11))
    {
      sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      *uint64_t v25 = *v26;
      uint64_t v28 = v26[2];
      v25[1] = v26[1];
      v25[2] = v28;
      uint64_t v29 = v26[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29)
      {
        uint64_t v30 = v26[4];
        v25[3] = v29;
        v25[4] = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v25 + 3) = *(_OWORD *)(v26 + 3);
      }
      uint64_t v31 = *(int *)(v11 + 36);
      uint64_t v32 = (char *)v25 + v31;
      char v33 = (char *)v26 + v31;
      uint64_t v34 = sub_1C1518CDC();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1C0C3C530(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v4 + *(int *)(v5 + 36);
    uint64_t v8 = sub_1C1518CDC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v10 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = v10 + *(int *)(v5 + 36);
    uint64_t v13 = sub_1C1518CDC();
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13);
    if (!result)
    {
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
      return v14(v12, v13);
    }
  }
  return result;
}

uint64_t sub_1C0C3C780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v36 = v11;
    *uint64_t v8 = *v9;
    uint64_t v14 = v9[2];
    v8[1] = v9[1];
    v8[2] = v14;
    uint64_t v15 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      uint64_t v16 = v9[4];
      uint64_t v8[3] = v15;
      v8[4] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    }
    uint64_t v17 = *(int *)(v10 + 36);
    __dst = (char *)v8 + v17;
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = sub_1C1518CDC();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v11 = v36;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v8, 0, 1, v10);
  }
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  if (v12(v24, 1, v10))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *uint64_t v23 = *v24;
    uint64_t v26 = v24[2];
    v23[1] = v24[1];
    v23[2] = v26;
    uint64_t v27 = v24[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      uint64_t v28 = v24[4];
      v23[3] = v27;
      uint64_t v23[4] = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v23 + 3) = *(_OWORD *)(v24 + 3);
    }
    uint64_t v29 = *(int *)(v10 + 36);
    uint64_t v30 = (char *)v23 + v29;
    uint64_t v31 = (char *)v24 + v29;
    uint64_t v32 = sub_1C1518CDC();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1C0C3CC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1C034D0EC(v7);
      goto LABEL_7;
    }
    uint64_t v61 = v10;
    uint64_t v63 = a3;
    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
    *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
    *(void *)(v7 + 8) = *(void *)(v8 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v7 + 16) = *(void *)(v8 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v8 + 24);
    if (*(void *)(v7 + 24))
    {
      if (v16)
      {
        *(void *)(v7 + 24) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v7 + 32) = *(void *)(v8 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      sub_1C034DE40(v7 + 24);
    }
    else if (v16)
    {
      *(void *)(v7 + 24) = v16;
      *(void *)(v7 + 32) = *(void *)(v8 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
LABEL_20:
    uint64_t v23 = *(int *)(v9 + 36);
    uint64_t v24 = (void *)(v7 + v23);
    uint64_t v25 = (void *)(v8 + v23);
    uint64_t v26 = sub_1C1518CDC();
    uint64_t v58 = *(void *)(v26 - 8);
    uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
    uint64_t v59 = v24;
    LODWORD(v24) = v27(v24, 1, v26);
    int v28 = v27(v25, 1, v26);
    if (v24)
    {
      a3 = v63;
      if (!v28)
      {
        (*(void (**)(void *, void *, uint64_t))(v58 + 16))(v59, v25, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v59, 0, 1, v26);
        goto LABEL_28;
      }
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
      uint64_t v31 = v59;
    }
    else
    {
      a3 = v63;
      if (!v28)
      {
        (*(void (**)(void *, void *, uint64_t))(v58 + 24))(v59, v25, v26);
        goto LABEL_28;
      }
      (*(void (**)(void *, uint64_t))(v58 + 8))(v59, v26);
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
      uint64_t v31 = v59;
    }
    memcpy(v31, v25, v30);
LABEL_28:
    uint64_t v10 = v61;
    goto LABEL_29;
  }
  if (v13)
  {
LABEL_7:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_29;
  }
  uint64_t v60 = v10;
  uint64_t v62 = a3;
  *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
  *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(void *)(v7 + 24) = v14;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
  }
  uint64_t v17 = *(int *)(v9 + 36);
  uint64_t v18 = (void *)(v7 + v17);
  uint64_t v19 = (const void *)(v8 + v17);
  uint64_t v20 = sub_1C1518CDC();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v10 = v60;
  a3 = v62;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v7, 0, 1, v9);
LABEL_29:
  uint64_t v33 = *(int *)(a3 + 24);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  int v36 = v11(a1 + v33, 1, v9);
  int v37 = v11(v35, 1, v9);
  if (!v36)
  {
    if (v37)
    {
      sub_1C034D0EC(v34);
      goto LABEL_35;
    }
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    *(_DWORD *)(v34 + 4) = *(_DWORD *)(v35 + 4);
    *(void *)(v34 + 8) = *(void *)(v35 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v34 + 16) = *(void *)(v35 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v35 + 24);
    if (*(void *)(v34 + 24))
    {
      if (v42)
      {
        *(void *)(v34 + 24) = v42;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v34 + 32) = *(void *)(v35 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_50:
        uint64_t v50 = *(int *)(v9 + 36);
        int v51 = (void *)(v34 + v50);
        v35 += v50;
        uint64_t v52 = sub_1C1518CDC();
        uint64_t v53 = *(void *)(v52 - 8);
        uint64_t v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
        int v55 = v54(v51, 1, v52);
        int v56 = v54((void *)v35, 1, v52);
        if (v55)
        {
          if (!v56)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v53 + 16))(v51, v35, v52);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v52);
            return a1;
          }
        }
        else
        {
          if (!v56)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v53 + 24))(v51, v35, v52);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v53 + 8))(v51, v52);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v40 = *(void *)(*(void *)(v57 - 8) + 64);
        uint64_t v41 = v51;
        goto LABEL_36;
      }
      sub_1C034DE40(v34 + 24);
    }
    else if (v42)
    {
      *(void *)(v34 + 24) = v42;
      *(void *)(v34 + 32) = *(void *)(v35 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_50;
    }
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
    goto LABEL_50;
  }
  if (v37)
  {
LABEL_35:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v40 = *(void *)(*(void *)(v39 - 8) + 64);
    uint64_t v41 = (void *)v34;
LABEL_36:
    memcpy(v41, (const void *)v35, v40);
    return a1;
  }
  *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
  *(_DWORD *)(v34 + 4) = *(_DWORD *)(v35 + 4);
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  uint64_t v38 = *(void *)(v35 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38)
  {
    *(void *)(v34 + 24) = v38;
    *(void *)(v34 + 32) = *(void *)(v35 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
  }
  uint64_t v43 = *(int *)(v9 + 36);
  uint64_t v44 = (void *)(v34 + v43);
  unint64_t v45 = (const void *)(v35 + v43);
  uint64_t v46 = sub_1C1518CDC();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
  return a1;
}

uint64_t sub_1C0C3D5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
    *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
    uint64_t v13 = *(int *)(v9 + 36);
    uint64_t v29 = v10;
    __dst = (char *)v7 + v13;
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = sub_1C1518CDC();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v10 = v29;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  if (v11((void *)(a2 + v18), 1, v9))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    *(_OWORD *)(v19 + 1) = *(_OWORD *)(v20 + 1);
    *(_OWORD *)(v19 + 3) = *(_OWORD *)(v20 + 3);
    uint64_t v22 = *(int *)(v9 + 36);
    uint64_t v23 = (char *)v19 + v22;
    uint64_t v24 = (char *)v20 + v22;
    uint64_t v25 = sub_1C1518CDC();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1C0C3D984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1C034D0EC((uint64_t)v8);
      goto LABEL_7;
    }
    uint64_t v62 = v11;
    *uint64_t v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    v8[2] = v9[2];
    swift_bridgeObjectRelease();
    uint64_t v21 = v9[3];
    uint64_t v58 = a3;
    if (v8[3])
    {
      if (v21)
      {
        uint64_t v8[3] = v21;
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1C034DE40((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
LABEL_15:
    uint64_t v22 = *(int *)(v10 + 36);
    uint64_t v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    uint64_t v25 = sub_1C1518CDC();
    uint64_t v56 = *(void *)(v25 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
    __dsta = v23;
    LODWORD(v23) = v26(v23, 1, v25);
    __src = v24;
    int v27 = v26(v24, 1, v25);
    if (v23)
    {
      a3 = v58;
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v56 + 32))(__dsta, __src, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v25);
        goto LABEL_23;
      }
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
      size_t v30 = __dsta;
    }
    else
    {
      a3 = v58;
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v56 + 40))(__dsta, __src, v25);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v56 + 8))(__dsta, v25);
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
      size_t v30 = __dsta;
    }
    memcpy(v30, __src, v29);
LABEL_23:
    uint64_t v11 = v62;
    goto LABEL_24;
  }
  if (v14)
  {
LABEL_7:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_24;
  }
  *uint64_t v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  uint64_t v15 = *(int *)(v10 + 36);
  __dst = (char *)v8 + v15;
  uint64_t v61 = v11;
  uint64_t v16 = (char *)v9 + v15;
  uint64_t v17 = sub_1C1518CDC();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v11 = v61;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v8, 0, 1, v10);
LABEL_24:
  uint64_t v32 = *(int *)(a3 + 24);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  int v35 = v12((void *)(a1 + v32), 1, v10);
  int v36 = v12(v34, 1, v10);
  if (!v35)
  {
    if (v36)
    {
      sub_1C034D0EC((uint64_t)v33);
      goto LABEL_30;
    }
    *uint64_t v33 = *v34;
    v33[1] = v34[1];
    swift_bridgeObjectRelease();
    v33[2] = v34[2];
    swift_bridgeObjectRelease();
    uint64_t v46 = v34[3];
    if (v33[3])
    {
      if (v46)
      {
        v33[3] = v46;
        swift_bridgeObjectRelease();
        v33[4] = v34[4];
        swift_bridgeObjectRelease();
LABEL_40:
        uint64_t v48 = *(int *)(v10 + 36);
        uint64_t v49 = (char *)v33 + v48;
        uint64_t v34 = (void *)((char *)v34 + v48);
        uint64_t v50 = sub_1C1518CDC();
        uint64_t v51 = *(void *)(v50 - 8);
        uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
        int v53 = v52(v49, 1, v50);
        int v54 = v52((char *)v34, 1, v50);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, void *, uint64_t))(v51 + 32))(v49, v34, v50);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v49, 0, 1, v50);
            return a1;
          }
        }
        else
        {
          if (!v54)
          {
            (*(void (**)(char *, void *, uint64_t))(v51 + 40))(v49, v34, v50);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v44 = *(void *)(*(void *)(v55 - 8) + 64);
        unint64_t v45 = v49;
        goto LABEL_31;
      }
      sub_1C034DE40((uint64_t)(v33 + 3));
    }
    *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
    goto LABEL_40;
  }
  if (v36)
  {
LABEL_30:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v44 = *(void *)(*(void *)(v43 - 8) + 64);
    unint64_t v45 = (char *)v33;
LABEL_31:
    memcpy(v45, v34, v44);
    return a1;
  }
  *uint64_t v33 = *v34;
  *(_OWORD *)(v33 + 1) = *(_OWORD *)(v34 + 1);
  *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
  uint64_t v37 = *(int *)(v10 + 36);
  uint64_t v38 = (char *)v33 + v37;
  uint64_t v39 = (char *)v34 + v37;
  uint64_t v40 = sub_1C1518CDC();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
  return a1;
}

uint64_t sub_1C0C3E1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C3E1D8);
}

uint64_t sub_1C0C3E1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0C3E2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C3E2B8);
}

uint64_t sub_1C0C3E2B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C0C3E37C()
{
  sub_1C034D4B8(319, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t FeatureAvailability.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FeatureAvailability.init()()
{
  return v0;
}

uint64_t FeatureAvailability.deinit()
{
  return v0;
}

uint64_t FeatureAvailability.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t FeatureAvailabilityType.appleNewsContent.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.allowSharingAlways.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.appleNewsPrivateData.getter()
{
  return 0;
}

uint64_t sub_1C0C3E480(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB86EF70);
}

uint64_t FeatureAvailabilityType.useNewReportConcern.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB86EF70);
}

uint64_t sub_1C0C3E4C8(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB882B28);
}

uint64_t FeatureAvailabilityType.useMoreToReadEOA.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB882B28);
}

uint64_t sub_1C0C3E510(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB861150);
}

uint64_t FeatureAvailabilityType.useMoreFromIssueEOA.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB861150);
}

uint64_t sub_1C0C3E558(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EA194468);
}

uint64_t FeatureAvailabilityType.useMultipleNativeAds.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EA194468);
}

uint64_t FeatureAvailabilityType.narrativeAudio.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.appleMagazineContent.getter()
{
  return 0;
}

uint64_t FeatureAvailabilityType.cardFeed.getter()
{
  return 1;
}

uint64_t sub_1C0C3E5B8(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB85F268);
}

uint64_t FeatureAvailabilityType.videoInFeed.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB85F268);
}

uint64_t sub_1C0C3E600(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB8614A8);
}

uint64_t FeatureAvailabilityType.puzzles.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB8614A8);
}

uint64_t sub_1C0C3E648(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EA194478);
}

uint64_t FeatureAvailabilityType.navigationImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EA194478);
}

uint64_t sub_1C0C3E690(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB8614C0);
}

uint64_t FeatureAvailabilityType.articleViewerImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB8614C0);
}

uint64_t sub_1C0C3E6D8(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB863798);
}

uint64_t FeatureAvailabilityType.liveActivitiesEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB863798);
}

uint64_t sub_1C0C3E720(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB8637C8);
}

uint64_t FeatureAvailabilityType.enableAIAttribution.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB8637C8);
}

uint64_t sub_1C0C3E768(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB861140);
}

uint64_t FeatureAvailabilityType.useOfflineMode.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB861140);
}

uint64_t sub_1C0C3E7B0(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, qword_1EA194488);
}

uint64_t sub_1C0C3E7D4(uint64_t a1, uint64_t a2, void *a3)
{
  if ((_s8NewsFeed23FeatureAvailabilityTypePAAE019allowFollowingOfEndH16ArticlePublisherSbvg_0() & 1) == 0) {
    return 0;
  }
  sub_1C151706C();
  sub_1C151704C();
  if (*a3 != -1) {
    swift_once();
  }
  char v4 = sub_1C151705C();
  swift_release();
  return v4 & 1;
}

uint64_t FeatureAvailabilityType.useWelcomeSeries.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, qword_1EA194488);
}

uint64_t sub_1C0C3E884(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB884828);
}

uint64_t FeatureAvailabilityType.feedDifferentiationModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB884828);
}

uint64_t sub_1C0C3E8CC(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB884840);
}

uint64_t FeatureAvailabilityType.inFeedDebugging.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EB884840);
}

uint64_t sub_1C0C3E914(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EA1944A8);
}

uint64_t sub_1C0C3E938(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C151706C();
  sub_1C151704C();
  if (*a3 != -1) {
    swift_once();
  }
  char v4 = sub_1C151705C();
  swift_release();
  return v4 & 1;
}

uint64_t FeatureAvailabilityType.widgetUpsellFeaturesEnabled.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E938(a1, a2, &qword_1EA1944A8);
}

uint64_t FeatureAvailabilityType.useSponsoredSuperFeeds.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, &qword_1EB86C1F0);
}

uint64_t FeatureAvailabilityType.useSponsoredSuperFeedEligibilityOverrides.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C0C3E7D4(a1, a2, qword_1EA194498);
}

uint64_t sub_1C0C3EA20()
{
  sub_1C151706C();
  sub_1C151704C();
  if (qword_1EA1944A8 != -1) {
    swift_once();
  }
  char v0 = sub_1C151705C();
  swift_release();
  return v0 & 1;
}

uint64_t _s8NewsFeed23FeatureAvailabilityTypePAAE019allowFollowingOfEndH16ArticlePublisherSbvg_0()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_1C151E62C();
  uint64_t v4 = v3;

  if (v2 == 0x6C7070612E6D6F63 && v4 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

uint64_t type metadata accessor for FeatureAvailability()
{
  return self;
}

uint64_t method lookup function for FeatureAvailability(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureAvailability);
}

uint64_t dispatch thunk of FeatureAvailability.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.appleNewsContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.allowSharingAlways.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.interstellarEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.appleNewsPrivateData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.allowFollowingOfEndOfArticlePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.allowLikeDislike.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useNewReportConcern.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useMoreToReadEOA.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useMoreFromIssueEOA.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useMultipleNativeAds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.improvedBlockingBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.shouldDisplaySaveInTopBar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.appleMagazineContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.cardFeed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.videoInFeed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.puzzles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.navigationImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.articleViewerImprovementsEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.liveActivitiesEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.enableAIAttribution.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useOfflineMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.useWelcomeSeries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.feedDifferentiationModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.inFeedDebugging.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of FeatureAvailabilityType.widgetUpsellFeaturesEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t sub_1C0C3EE04(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      uint64_t v5 = FormatSlotTransform.description.getter();
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1BFF661B8(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0C3EEEC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DebugFormatCompilerResultOutput();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v15[1] = v1;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C05F7E60(0, v7, 0);
    uint64_t v8 = v16;
    uint64_t v9 = type metadata accessor for DebugFormatCompilerResultEntry();
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v9 - 8) + 72);
    do
    {
      sub_1C0C449D8(v10 + *(int *)(v9 + 20), (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
      uint64_t v16 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C05F7E60(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v16;
      }
      *(void *)(v8 + 16) = v13 + 1;
      sub_1C0C44818((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void *sub_1C0C3F0E4()
{
  sub_1C028A7B0();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v255 = (uint64_t)&v239 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v3 - 8);
  v248 = (uint64_t *)((char *)&v239 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  v246 = (uint64_t *)((char *)&v239 - v6);
  MEMORY[0x1F4188790](v7);
  v244 = (uint64_t *)((char *)&v239 - v8);
  uint64_t v254 = type metadata accessor for FormatCompilerOptions(0);
  MEMORY[0x1F4188790](v254);
  uint64_t v247 = (uint64_t)&v239 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v245 = (uint64_t)&v239 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v243 = (uint64_t)&v239 - v13;
  uint64_t v14 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v253 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v285 = (uint64_t)&v239 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatSlotDefinition();
  uint64_t v251 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  v272 = (uint64_t *)((char *)&v239 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0C4473C();
  uint64_t v258 = v18;
  uint64_t v239 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v250 = (char *)&v239 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0C44974(0, &qword_1EA1A4D18, (uint64_t (*)(uint64_t))sub_1C0C4473C, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8);
  v257 = (id *)((char *)&v239 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v23);
  v256 = (char *)&v239 - v24;
  uint64_t v25 = type metadata accessor for FormatFile();
  uint64_t v267 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  int v27 = (char *)&v239 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  *(void *)&long long v271 = (char *)&v239 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v265 = (uint64_t)&v239 - v31;
  uint64_t j = type metadata accessor for DebugFormatCompilerResultOutput();
  uint64_t v241 = *(void *)(j - 8);
  MEMORY[0x1F4188790](j);
  v266 = (id *)((char *)&v239 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v33);
  uint64_t v283 = (uint64_t)&v239 - v34;
  sub_1C0C44974(0, &qword_1EB85CED0, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, v20);
  MEMORY[0x1F4188790](v35 - 8);
  uint64_t v276 = (uint64_t)&v239 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v242 = (uint64_t)&v239 - v38;
  uint64_t v39 = type metadata accessor for FormatPackage();
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v240 = (uint64_t)&v239 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v284 = type metadata accessor for DebugFormatGroupItem();
  uint64_t v41 = *(void *)(v284 - 8);
  MEMORY[0x1F4188790](v284);
  uint64_t v43 = (char *)&v239 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)&v239 - v45;
  MEMORY[0x1F4188790](v47);
  v249 = (char *)&v239 - v48;
  sub_1C0C44974(0, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, v20);
  MEMORY[0x1F4188790](v49 - 8);
  v261 = (id *)((char *)&v239 - v50);
  uint64_t v264 = type metadata accessor for DebugFormatEditorLayoutContext();
  uint64_t v51 = *(void *)(v264 - 8);
  MEMORY[0x1F4188790](v264);
  uint64_t v260 = (uint64_t)&v239 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v268 = v0;
  uint64_t v269 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package);
  int v53 = (long long *)(v269 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  uint64_t v54 = *((void *)v53 + 1);
  v252 = v53;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_1C00B383C(v54);
  swift_bridgeObjectRelease();
  *(void *)&long long v292 = v55;
  sub_1BFF8F94C((uint64_t *)&v292);
  uint64_t v259 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v56 = v292;
  uint64_t v57 = *(void *)(v292 + 16);
  v286 = v43;
  v278 = (uint64_t (**)(void *, uint64_t, uint64_t))v27;
  uint64_t v275 = v57;
  v279 = (void (**)(void, void, void, void))v25;
  if (v57)
  {
    unint64_t v58 = 0;
    uint64_t v263 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_editor;
    LODWORD(v274) = *(unsigned __int8 *)(v268
                                       + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_filterToActiveDevice);
    uint64_t v273 = v292 + 32;
    v262 = (unsigned int (**)(id *, uint64_t, uint64_t))(v51 + 48);
    uint64_t v59 = MEMORY[0x1E4FBC860];
    uint64_t v60 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v61 = v261;
    uint64_t v270 = v292;
    uint64_t v287 = v41;
    while (1)
    {
      if (v58 >= *(void *)(v56 + 16))
      {
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
        goto LABEL_125;
      }
      uint64_t v62 = *(void **)(v273 + 8 * v58);
      v282 = v62;
      if (!v274) {
        break;
      }
      swift_retain();
      sub_1C151894C();
      swift_release();
      if ((*v262)(v61, 1, v264) != 1)
      {
        uint64_t v63 = v260;
        sub_1C0C44818((uint64_t)v61, v260, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        if (v282 != (void *)sub_1C151754C())
        {
          sub_1C0C44880(v63, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
          goto LABEL_4;
        }
        uint64_t v280 = v58;
        v281 = v60;
        uint64_t v64 = *((void *)v252 + 2);
        long long v292 = *v252;
        *(void *)&long long v293 = v64;
        uint64_t v65 = FormatGroupCollection.subscript.getter((uint64_t)v282);
        if (v65) {
          uint64_t v66 = v65;
        }
        else {
          uint64_t v66 = v59;
        }
        int64_t v67 = *(void *)(v66 + 16);
        if (v67)
        {
          uint64_t v291 = v59;
          sub_1C05F7E18(0, v67, 0);
          uint64_t v59 = v291;
          int64_t v68 = v67 - 1;
          uint64_t v69 = 32;
          uint64_t v70 = v249;
          while (1)
          {
            uint64_t v71 = v66;
            long long v292 = *(_OWORD *)(v66 + v69);
            long long v72 = *(_OWORD *)(v66 + v69 + 16);
            long long v73 = *(_OWORD *)(v66 + v69 + 32);
            long long v74 = *(_OWORD *)(v66 + v69 + 48);
            long long v296 = *(_OWORD *)(v66 + v69 + 64);
            long long v294 = v73;
            long long v295 = v74;
            long long v293 = v72;
            long long v75 = *(_OWORD *)(v66 + v69 + 80);
            long long v76 = *(_OWORD *)(v66 + v69 + 96);
            long long v77 = *(_OWORD *)(v66 + v69 + 128);
            long long v299 = *(_OWORD *)(v66 + v69 + 112);
            long long v300 = v77;
            long long v297 = v75;
            long long v298 = v76;
            memmove(v70, (const void *)(v66 + v69), 0x90uLL);
            swift_storeEnumTagMultiPayload();
            sub_1C0187D08((uint64_t)&v292);
            uint64_t v291 = v59;
            unint64_t v79 = *(void *)(v59 + 16);
            unint64_t v78 = *(void *)(v59 + 24);
            if (v79 >= v78 >> 1)
            {
              sub_1C05F7E18(v78 > 1, v79 + 1, 1);
              uint64_t v59 = v291;
            }
            *(void *)(v59 + 16) = v79 + 1;
            sub_1C0C44818((uint64_t)v70, v59+ ((*(unsigned __int8 *)(v287 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v287 + 80))+ *(void *)(v287 + 72) * v79, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
            if (!v68) {
              break;
            }
            --v68;
            v69 += 144;
            uint64_t v66 = v71;
          }
          swift_bridgeObjectRelease();
          uint64_t v61 = v261;
          uint64_t v41 = v287;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v60 = v281;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v99 = v260;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v60 = sub_1C0EE75FC(0, v60[2] + 1, 1, v60);
        }
        unint64_t v101 = v60[2];
        unint64_t v100 = v60[3];
        uint64_t v102 = v282;
        if (v101 >= v100 >> 1)
        {
          uint64_t v60 = sub_1C0EE75FC((void *)(v100 > 1), v101 + 1, 1, v60);
          uint64_t v102 = v282;
        }
        v60[2] = v101 + 1;
        uint64_t v103 = &v60[4 * v101];
        v103[4] = v102;
        v103[5] = 0;
        *((unsigned char *)v103 + 48) = 0;
        v103[7] = v59;
        sub_1C0C44880(v99, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v56 = v270;
        unint64_t v58 = v280;
        goto LABEL_34;
      }
      sub_1C0C447A8((uint64_t)v61, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
LABEL_4:
      if (++v58 == v275)
      {
        swift_release();
        goto LABEL_45;
      }
    }
    uint64_t v280 = v58;
    v281 = v60;
    uint64_t v80 = *(void *)(v269 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups + 16);
    long long v292 = *(_OWORD *)(v269 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
    *(void *)&long long v293 = v80;
    uint64_t v81 = FormatGroupCollection.subscript.getter((uint64_t)v62);
    if (v81) {
      uint64_t v82 = v81;
    }
    else {
      uint64_t v82 = v59;
    }
    int64_t v83 = *(void *)(v82 + 16);
    if (v83)
    {
      uint64_t v291 = v59;
      sub_1C05F7E18(0, v83, 0);
      uint64_t v59 = v291;
      int64_t v84 = v83 - 1;
      for (uint64_t i = 32; ; i += 144)
      {
        long long v292 = *(_OWORD *)(v82 + i);
        long long v86 = *(_OWORD *)(v82 + i + 16);
        long long v87 = *(_OWORD *)(v82 + i + 32);
        long long v88 = *(_OWORD *)(v82 + i + 48);
        long long v296 = *(_OWORD *)(v82 + i + 64);
        long long v294 = v87;
        long long v295 = v88;
        long long v293 = v86;
        long long v89 = *(_OWORD *)(v82 + i + 80);
        long long v90 = *(_OWORD *)(v82 + i + 96);
        long long v91 = *(_OWORD *)(v82 + i + 128);
        long long v299 = *(_OWORD *)(v82 + i + 112);
        long long v300 = v91;
        long long v297 = v89;
        long long v298 = v90;
        memmove(v46, (const void *)(v82 + i), 0x90uLL);
        swift_storeEnumTagMultiPayload();
        sub_1C0187D08((uint64_t)&v292);
        uint64_t v291 = v59;
        unint64_t v93 = *(void *)(v59 + 16);
        unint64_t v92 = *(void *)(v59 + 24);
        if (v93 >= v92 >> 1)
        {
          sub_1C05F7E18(v92 > 1, v93 + 1, 1);
          uint64_t v59 = v291;
        }
        *(void *)(v59 + 16) = v93 + 1;
        sub_1C0C44818((uint64_t)v46, v59+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v93, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
        if (!v84) {
          break;
        }
        --v84;
      }
      swift_bridgeObjectRelease();
      uint64_t v61 = v261;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v58 = v280;
    uint64_t v60 = v281;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v60 = sub_1C0EE75FC(0, v60[2] + 1, 1, v60);
    }
    unint64_t v95 = v60[2];
    unint64_t v94 = v60[3];
    unint64_t v96 = v282;
    if (v95 >= v94 >> 1)
    {
      uint64_t v60 = sub_1C0EE75FC((void *)(v94 > 1), v95 + 1, 1, v60);
      unint64_t v96 = v282;
    }
    v60[2] = v95 + 1;
    uint64_t v97 = &v60[4 * v95];
    v97[4] = v96;
    v97[5] = 0;
    *((unsigned char *)v97 + 48) = 0;
    v97[7] = v59;
    uint64_t v56 = v270;
LABEL_34:
    uint64_t v59 = MEMORY[0x1E4FBC860];
    goto LABEL_4;
  }
  swift_release();
  uint64_t v60 = (void *)MEMORY[0x1E4FBC860];
LABEL_45:
  sub_1C0C44974(0, (unint64_t *)&unk_1EA1A4D20, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatGroupItem, MEMORY[0x1E4FBBE00]);
  uint64_t v104 = *(void *)(v41 + 72);
  uint64_t v105 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v106 = (v105 + 32) & ~v105;
  uint64_t v264 = 4 * v104;
  uint64_t v275 = v107;
  uint64_t v274 = v105 | 7;
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1C152A660;
  uint64_t v59 = v106;
  uint64_t v108 = (void *)(v41 + v106);
  uint64_t v109 = v269;
  uint64_t v110 = *(void *)(v269 + 16);
  uint64_t v111 = *(void *)(v269 + 24);
  *uint64_t v108 = 0x696669746E656449;
  v108[1] = 0xEA00000000007265;
  v108[2] = v110;
  v108[3] = v111;
  swift_storeEnumTagMultiPayload();
  uint64_t v112 = (void *)((char *)v108 + v104);
  uint64_t v113 = (uint64_t *)(v109 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  uint64_t v114 = *v113;
  uint64_t v115 = v113[1];
  *uint64_t v112 = 1701667150;
  v112[1] = 0xE400000000000000;
  v112[2] = v114;
  v112[3] = v115;
  swift_storeEnumTagMultiPayload();
  uint64_t v287 = v104;
  uint64_t v273 = 2 * v104;
  unint64_t v116 = (void *)((char *)v108 + 2 * v104);
  uint64_t v117 = (uint64_t *)(v109 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  swift_beginAccess();
  uint64_t v118 = *v117;
  uint64_t v119 = v117[1];
  *unint64_t v116 = 0x7470697263736544;
  v116[1] = 0xEB000000006E6F69;
  v116[2] = v118;
  v116[3] = v119;
  swift_storeEnumTagMultiPayload();
  uint64_t v120 = (unsigned __int8 *)(v109 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  swift_beginAccess();
  int v121 = *v120;
  if (v121 == 4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v122 = 0xE800000000000000;
    uint64_t v123 = 0x6C61636974726576;
  }
  else
  {
    uint64_t v289 = 0;
    unint64_t v290 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    char v288 = v121;
    sub_1C152036C();
    uint64_t v123 = v289;
    unint64_t v122 = v290;
  }
  uint64_t v270 = 3 * v287;
  uint64_t v124 = (void *)((char *)v108 + 3 * v287);
  *uint64_t v124 = 0x6F69746365726944;
  v124[1] = 0xE90000000000006ELL;
  v124[2] = v123;
  v124[3] = v122;
  swift_storeEnumTagMultiPayload();
  char v125 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = v266;
  if ((v125 & 1) == 0) {
LABEL_125:
  }
    uint64_t v60 = sub_1C0EE75FC(0, v60[2] + 1, 1, v60);
  unint64_t v127 = v60[2];
  unint64_t v126 = v60[3];
  if (v127 >= v126 >> 1) {
    uint64_t v60 = sub_1C0EE75FC((void *)(v126 > 1), v127 + 1, 1, v60);
  }
  v60[2] = v127 + 1;
  char v128 = &v60[4 * v127];
  v128[4] = 0;
  v128[5] = 0;
  *((unsigned char *)v128 + 48) = 2;
  v128[7] = v41;
  uint64_t v129 = *(void *)(v268 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs);
  uint64_t v130 = *(void *)(v129 + 16);
  if (!v130)
  {
    uint64_t v149 = swift_allocObject();
    *(_OWORD *)(v149 + 16) = xmmword_1C1529AE0;
    swift_storeEnumTagMultiPayload();
    unint64_t v151 = v60[2];
    unint64_t v150 = v60[3];
    if (v151 >= v150 >> 1) {
      uint64_t v60 = sub_1C0EE75FC((void *)(v150 > 1), v151 + 1, 1, v60);
    }
    v60[2] = v151 + 1;
    v281 = v60;
    char v152 = &v60[4 * v151];
    *((_OWORD *)v152 + 2) = xmmword_1C15994B0;
    *((unsigned char *)v152 + 48) = 1;
    v152[7] = v149;
    goto LABEL_104;
  }
  v281 = v60;
  uint64_t v131 = v129 + ((*(unsigned __int8 *)(v241 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v241 + 80));
  uint64_t v280 = *(void *)(v241 + 72);
  uint64_t v132 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v267 + 56);
  v282 = (void *)(v267 + 48);
  uint64_t v268 = v129;
  swift_bridgeObjectRetain_n();
  unint64_t v133 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v134 = v283;
    sub_1C0C449D8(v131, v283, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
    sub_1C0C449D8(v134, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        unsigned int v136 = *v132;
        uint64_t v137 = v276;
        uint64_t v138 = v276;
        uint64_t v139 = 1;
        goto LABEL_60;
      }
      sub_1C0913D20();
    }
    uint64_t v141 = v271;
    sub_1C0C44818((uint64_t)v61, v271, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v137 = v276;
    sub_1C0C44818(v141, v276, (uint64_t (*)(void))type metadata accessor for FormatFile);
    unsigned int v136 = *v132;
    uint64_t v138 = v137;
    uint64_t v139 = 0;
LABEL_60:
    uint64_t v142 = v279;
    v136(v138, v139, 1, v279);
    sub_1C0C44880(v283, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultOutput);
    uint64_t v143 = (unsigned int (*)(void, void, void))*v282;
    if (((unsigned int (*)(uint64_t, uint64_t, void))*v282)(v137, 1, v142) == 1)
    {
      sub_1C0C447A8(v137, &qword_1EB85CED0, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile);
    }
    else
    {
      uint64_t v144 = v265;
      sub_1C0C44818(v137, v265, (uint64_t (*)(void))type metadata accessor for FormatFile);
      sub_1C0C44818(v144, (uint64_t)v278, (uint64_t (*)(void))type metadata accessor for FormatFile);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v133 = sub_1C0EE75B4(0, *(void *)(v133 + 16) + 1, 1, v133);
      }
      unint64_t v146 = *(void *)(v133 + 16);
      unint64_t v145 = *(void *)(v133 + 24);
      if (v146 >= v145 >> 1) {
        unint64_t v133 = sub_1C0EE75B4(v145 > 1, v146 + 1, 1, v133);
      }
      *(void *)(v133 + 16) = v146 + 1;
      sub_1C0C44818((uint64_t)v278, v133+ ((*(unsigned __int8 *)(v267 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v267 + 80))+ *(void *)(v267 + 72) * v146, (uint64_t (*)(void))type metadata accessor for FormatFile);
      uint64_t v61 = v266;
    }
    v131 += v280;
    --v130;
  }
  while (v130);
  swift_bridgeObjectRelease_n();
  if (*(void *)(v133 + 16))
  {
    uint64_t v147 = v242;
    sub_1C0C449D8(v133 + ((*(unsigned __int8 *)(v267 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v267 + 80)), v242, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v148 = 0;
  }
  else
  {
    uint64_t v148 = 1;
    uint64_t v147 = v242;
  }
  uint64_t v153 = v279;
  v136(v147, v148, 1, v279);
  swift_bridgeObjectRelease();
  if (v143(v147, 1, v153) == 1)
  {
    sub_1C0C447A8(v147, &qword_1EB85CED0, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile);
  }
  else
  {
    int v154 = swift_getEnumCaseMultiPayload();
    uint64_t v155 = v281;
    if (v154 == 5)
    {
      uint64_t v41 = v240;
      sub_1C0C44818(v147, v240, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      uint64_t v156 = *(void *)(v41 + 120);
      uint64_t v157 = *(void *)(v156 + 16);
      v279 = (void (**)(void, void, void, void))(v239 + 56);
      v278 = (uint64_t (**)(void *, uint64_t, uint64_t))(v239 + 48);
      uint64_t v276 = v59 + 5 * v287;
      uint64_t v268 = v156;
      swift_bridgeObjectRetain();
      unint64_t v158 = 0;
      long long v271 = xmmword_1C152C7E0;
      uint64_t v159 = v258;
      uint64_t v61 = v257;
      uint64_t v60 = v256;
      uint64_t v160 = (uint64_t)v286;
      for (j = v157; ; uint64_t v157 = j)
      {
        if (v158 == v157)
        {
          uint64_t v161 = 1;
          unint64_t v158 = v157;
        }
        else
        {
          if ((v158 & 0x8000000000000000) != 0) {
            goto LABEL_123;
          }
          if (v158 >= *(void *)(v268 + 16)) {
            goto LABEL_124;
          }
          uint64_t v162 = (uint64_t)&v250[*(int *)(v159 + 48)];
          sub_1C0C449D8(v268+ ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80))+ *(void *)(v251 + 72) * v158, v162, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          uint64_t v163 = (uint64_t)v61 + *(int *)(v159 + 48);
          *uint64_t v61 = (id)v158;
          sub_1C0C44818(v162, v163, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
          uint64_t v161 = 0;
          ++v158;
        }
        (*v279)(v61, v161, 1, v159);
        sub_1C0C448E0((uint64_t)v61, (uint64_t)v60);
        int v164 = (*v278)(v60, 1, v159);
        v281 = v155;
        if (v164 == 1) {
          break;
        }
        uint64_t v165 = *v60;
        uint64_t v166 = (uint64_t)v60 + *(int *)(v159 + 48);
        v167 = v272;
        sub_1C0C44818(v166, (uint64_t)v272, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
        uint64_t v168 = 0x73746F6C53;
        if (v165) {
          uint64_t v168 = 0;
        }
        uint64_t v283 = v168;
        v169 = (void *)0xE500000000000000;
        if (v165) {
          v169 = 0;
        }
        v282 = v169;
        uint64_t v170 = swift_allocObject();
        *(_OWORD *)(v170 + 16) = v271;
        uint64_t v280 = v170;
        v171 = (void *)(v170 + v59);
        uint64_t v172 = *v167;
        uint64_t v173 = v167[1];
        void *v171 = 0x696669746E656449;
        v171[1] = 0xEA00000000007265;
        v171[2] = v172;
        v171[3] = v173;
        swift_storeEnumTagMultiPayload();
        v174 = (void *)((char *)v171 + v287);
        uint64_t v175 = v167[2];
        uint64_t v176 = v167[3];
        unint64_t v177 = 0xE400000000000000;
        void *v174 = 1701667150;
        v174[1] = 0xE400000000000000;
        v174[2] = v175;
        v174[3] = v176;
        swift_storeEnumTagMultiPayload();
        v178 = (void *)((char *)v171 + v273);
        uint64_t v179 = v167[4];
        uint64_t v180 = v167[5];
        void *v178 = 0x7470697263736544;
        v178[1] = 0xEB000000006E6F69;
        v178[2] = v179;
        v178[3] = v180;
        swift_storeEnumTagMultiPayload();
        uint64_t v181 = *(void *)(v167[7] + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v181)
        {
          uint64_t v182 = swift_bridgeObjectRetain();
          uint64_t v183 = v259;
          uint64_t v184 = sub_1C0C3EE04(v182);
          uint64_t v259 = v183;
          swift_bridgeObjectRelease();
          uint64_t v289 = v184;
          sub_1BFE9DD8C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
          sub_1BFE99E40();
          uint64_t v185 = sub_1C151E55C();
          unint64_t v177 = v186;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v185 = 1701736302;
        }
        v187 = (void *)((char *)v171 + v270);
        void *v187 = 0x726F66736E617254;
        v187[1] = 0xEA0000000000736DLL;
        v187[2] = v185;
        v187[3] = v177;
        swift_storeEnumTagMultiPayload();
        uint64_t v188 = (uint64_t)v272;
        *(void *)((char *)v171 + v264) = v272[8];
        swift_storeEnumTagMultiPayload();
        uint64_t v189 = *(void *)(v188 + 48);
        int64_t v190 = *(void *)(v189 + 16);
        if (v190)
        {
          uint64_t v289 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C05F7E18(0, v190, 0);
          uint64_t v191 = v189 + ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80));
          uint64_t v192 = *(void *)(v253 + 72);
          do
          {
            uint64_t v193 = v285;
            sub_1C0C449D8(v191, v285, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            sub_1C0C449D8(v193, v160, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            swift_storeEnumTagMultiPayload();
            sub_1C0C44880(v193, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
            uint64_t v194 = v289;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C05F7E18(0, *(void *)(v194 + 16) + 1, 1);
              uint64_t v194 = v289;
            }
            unint64_t v196 = *(void *)(v194 + 16);
            unint64_t v195 = *(void *)(v194 + 24);
            if (v196 >= v195 >> 1)
            {
              sub_1C05F7E18(v195 > 1, v196 + 1, 1);
              uint64_t v194 = v289;
            }
            *(void *)(v194 + 16) = v196 + 1;
            uint64_t v197 = v194 + v59 + v196 * v287;
            uint64_t v160 = (uint64_t)v286;
            sub_1C0C44818((uint64_t)v286, v197, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
            v191 += v192;
            --v190;
          }
          while (v190);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v194 = MEMORY[0x1E4FBC860];
        }
        uint64_t v289 = v280;
        sub_1C104ACDC(v194);
        uint64_t v41 = v289;
        uint64_t v155 = v281;
        unint64_t v199 = v281[2];
        unint64_t v198 = v281[3];
        uint64_t v159 = v258;
        uint64_t v61 = v257;
        uint64_t v60 = v256;
        if (v199 >= v198 >> 1) {
          uint64_t v155 = sub_1C0EE75FC((void *)(v198 > 1), v199 + 1, 1, v281);
        }
        v155[2] = v199 + 1;
        v200 = &v155[4 * v199];
        v201 = v282;
        v200[4] = v283;
        v200[5] = v201;
        *((unsigned char *)v200 + 48) = 1;
        v200[7] = v41;
        sub_1C0C44880((uint64_t)v272, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      }
      swift_bridgeObjectRelease();
      v202 = type metadata accessor for FormatPackage;
      uint64_t v203 = v240;
    }
    else
    {
      v202 = type metadata accessor for FormatFile;
      uint64_t v203 = v147;
    }
    sub_1C0C44880(v203, (uint64_t (*)(void))v202);
  }
LABEL_104:
  uint64_t v204 = swift_allocObject();
  *(_OWORD *)(v204 + 16) = xmmword_1C152C7F0;
  v205 = (void *)(v204 + v59);
  uint64_t v206 = v204;
  uint64_t v207 = v269 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  uint64_t v208 = v243;
  sub_1C0C449D8(v269 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v243, type metadata accessor for FormatCompilerOptions);
  uint64_t v209 = v255;
  sub_1C0C449D8(v208 + *(int *)(v254 + 24), v255, (uint64_t (*)(void))sub_1C028A7B0);
  v210 = v244;
  sub_1C0C44818(v209, (uint64_t)v244, type metadata accessor for FormatCompilerOptions.Newsroom);
  sub_1C0C44880(v208, type metadata accessor for FormatCompilerOptions);
  uint64_t v212 = *v210;
  uint64_t v211 = v210[1];
  sub_1BFD5A4A4(*v210, v211);
  sub_1C0C44880((uint64_t)v210, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v211 == 1)
  {
    uint64_t v213 = 0;
    uint64_t v211 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v212, v211);
    if (v211) {
      uint64_t v213 = v212;
    }
    else {
      uint64_t v213 = 0;
    }
  }
  void *v205 = 16721;
  v205[1] = 0xE200000000000000;
  v205[2] = v213;
  v205[3] = v211;
  swift_storeEnumTagMultiPayload();
  uint64_t v214 = v245;
  sub_1C0C449D8(v207, v245, type metadata accessor for FormatCompilerOptions);
  uint64_t v215 = v255;
  sub_1C0C449D8(v214 + *(int *)(v254 + 24), v255, (uint64_t (*)(void))sub_1C028A7B0);
  v216 = v246;
  sub_1C0C44818(v215, (uint64_t)v246, type metadata accessor for FormatCompilerOptions.Newsroom);
  sub_1C0C44880(v214, type metadata accessor for FormatCompilerOptions);
  uint64_t v217 = *v216;
  uint64_t v218 = v216[1];
  uint64_t v220 = v216[2];
  uint64_t v219 = v216[3];
  sub_1BFD5A4A4(*v216, v218);
  sub_1C0C44880((uint64_t)v216, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v218 == 1)
  {
    uint64_t v221 = 0;
    uint64_t v219 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v217, v218);
    if (v219) {
      uint64_t v221 = v220;
    }
    else {
      uint64_t v221 = 0;
    }
  }
  v222 = (void *)((char *)v205 + v287);
  void *v222 = 0x676E6967617453;
  v222[1] = 0xE700000000000000;
  v222[2] = v221;
  v222[3] = v219;
  swift_storeEnumTagMultiPayload();
  uint64_t v223 = v207;
  uint64_t v224 = v247;
  sub_1C0C449D8(v223, v247, type metadata accessor for FormatCompilerOptions);
  uint64_t v225 = v255;
  sub_1C0C449D8(v224 + *(int *)(v254 + 24), v255, (uint64_t (*)(void))sub_1C028A7B0);
  uint64_t v226 = v225;
  v227 = v248;
  sub_1C0C44818(v226, (uint64_t)v248, type metadata accessor for FormatCompilerOptions.Newsroom);
  sub_1C0C44880(v224, type metadata accessor for FormatCompilerOptions);
  uint64_t v228 = *v227;
  uint64_t v229 = v227[1];
  uint64_t v231 = v227[4];
  uint64_t v230 = v227[5];
  sub_1BFD5A4A4(*v227, v229);
  sub_1C0C44880((uint64_t)v227, type metadata accessor for FormatCompilerOptions.Newsroom);
  if (v229 == 1)
  {
    uint64_t v232 = 0;
    uint64_t v230 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFD5A4F8(v228, v229);
    if (v230) {
      uint64_t v232 = v231;
    }
    else {
      uint64_t v232 = 0;
    }
  }
  v233 = (void *)((char *)v205 + v273);
  void *v233 = 0x69746375646F7250;
  v233[1] = 0xEA00000000006E6FLL;
  v233[2] = v232;
  v233[3] = v230;
  swift_storeEnumTagMultiPayload();
  v234 = v281;
  unint64_t v236 = v281[2];
  unint64_t v235 = v281[3];
  if (v236 >= v235 >> 1) {
    v234 = sub_1C0EE75FC((void *)(v235 > 1), v236 + 1, 1, v281);
  }
  v234[2] = v236 + 1;
  v237 = &v234[4 * v236];
  *((_OWORD *)v237 + 2) = xmmword_1C153AB20;
  *((unsigned char *)v237 + 48) = 2;
  v237[7] = v206;
  return v234;
}

char *sub_1C0C4138C(uint64_t a1, uint64_t a2, char a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver] = 0;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v10 = v3;
  *(void *)&v3[v8] = objc_msgSend(v9, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_editor] = a1;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package] = a2;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections] = MEMORY[0x1E4FBC860];
  v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_filterToActiveDevice] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v12 = sub_1C0C44674(a2, v18, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = v11;
  }
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs] = v13;

  v17.receiver = v10;
  v17.super_class = ObjectType;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v15 = sub_1C0C3F0E4();

  swift_release();
  swift_release();
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections] = v15;
  swift_bridgeObjectRelease();
  return v14;
}

id sub_1C0C415FC()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver;
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver];
  if (v4)
  {
    id v5 = v4;
    sub_1C1515CCC();

    uint64_t v4 = *(void **)&v1[v3];
  }
  *(void *)&v1[v3] = 0;

  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_1C0C4172C()
{
  uint64_t v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v1, sel_navigationItem);
  uint64_t v6 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setTitle_, v6);

  objc_super v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView];
  objc_msgSend(v7, sel_setDataSource_, v1);
  objc_msgSend(v7, sel_setDelegate_, v1);
  objc_msgSend(v7, sel_setAlwaysBounceVertical_, 1);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setTableFooterView_, v8);

  type metadata accessor for SubtitleTableViewCell();
  sub_1C151F26C();
  sub_1C151F26C();
  type metadata accessor for DebugJournalTableViewCell();
  sub_1C151F26C();
  id v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x1C0C41BB4);
  }
  uint64_t v10 = v9;
  objc_msgSend(v9, sel_addSubview_, v7);

  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v11 = v7;
  uint64_t v12 = sub_1C1515D8C();
  swift_release();
  swift_release();

  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver];
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_contentSizeObserver] = v12;
}

id sub_1C0C41BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs;
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_compilerResultOutputs);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C0C44674(v4, v3, v6);
  id result = (id)swift_bridgeObjectRelease();
  if (v7)
  {
    *(void *)(a1 + v5) = v7;
    swift_bridgeObjectRelease();
    *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections) = sub_1C0C3F0E4();
    swift_bridgeObjectRelease();
    id v9 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView);
    return objc_msgSend(v9, sel_reloadData);
  }
  return result;
}

id sub_1C0C41CA4(uint64_t a1)
{
  *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections) = sub_1C0C3F0E4();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView);
  return objc_msgSend(v2, sel_reloadData);
}

id sub_1C0C41D04(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_tableView), sel_reloadData);
}

void sub_1C0C41D1C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1C18C9C60](v4);
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v3, sel_contentSize);
    sub_1C151F7EC();
    objc_msgSend(v6, sel_setPreferredContentSize_);

    id v7 = objc_msgSend(v6, sel_view);
    if (v7)
    {
      id v8 = v7;
      objc_msgSend(v7, sel_setNeedsLayout);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for DebugFormatGroupViewController()
{
  return self;
}

char *sub_1C0C41FA4()
{
  uint64_t v1 = type metadata accessor for FormatSlotDefinitionItemSet();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v156 = (char *)&v149 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0C44974(0, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v153 = (char *)&v149 - v5;
  uint64_t v6 = type metadata accessor for DebugFormatEditorLayoutContext();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v151 = (uint64_t)&v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C44974(0, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, v3);
  MEMORY[0x1F4188790](v9 - 8);
  char v152 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v149 - v12;
  sub_1C0C44974(0, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700], v3);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v155 = (uint64_t)&v149 - v15;
  uint64_t v16 = type metadata accessor for DebugFormatGroupItem();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v158 = (uint64_t)&v149 - v21;
  unint64_t v22 = sub_1C151676C();
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_97;
  }
  uint64_t v23 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections);
  if (v22 >= *(void *)(v23 + 16))
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  uint64_t v157 = v7;
  uint64_t v24 = *(void *)(v23 + 32 * v22 + 56);
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_1C151675C();
  if ((v25 & 0x8000000000000000) != 0)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if (v25 >= *(void *)(v24 + 16))
  {
LABEL_99:
    __break(1u);
    JUMPOUT(0x1C0C4340CLL);
  }
  uint64_t v154 = v6;
  uint64_t v26 = v0;
  uint64_t v27 = v158;
  sub_1C0C449D8(v24+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v25, v158, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
  swift_bridgeObjectRelease();
  sub_1C0C449D8(v27, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v33 = *((_OWORD *)v19 + 7);
      long long v174 = *((_OWORD *)v19 + 6);
      long long v175 = v33;
      long long v176 = *((_OWORD *)v19 + 8);
      long long v34 = *((_OWORD *)v19 + 3);
      long long v170 = *((_OWORD *)v19 + 2);
      long long v171 = v34;
      long long v35 = *((_OWORD *)v19 + 5);
      long long v172 = *((_OWORD *)v19 + 4);
      long long v173 = v35;
      long long v36 = *((_OWORD *)v19 + 1);
      long long v168 = *(_OWORD *)v19;
      long long v169 = v36;
      type metadata accessor for SubtitleTableViewCell();
      uint64_t v37 = (void *)sub_1C151F24C();
      uint64_t v38 = (char *)self;
      id v39 = v37;
      uint64_t v156 = v38;
      id v40 = objc_msgSend(v38, sel_secondaryLabelColor);
      objc_msgSend(v39, sel_setTintColor_, v40);

      id v41 = objc_msgSend(v39, sel_textLabel);
      if (v41)
      {
        uint64_t v42 = v41;
        objc_msgSend(v41, sel_setNumberOfLines_, 0);
      }
      id v43 = objc_msgSend(v39, sel_textLabel);
      uint64_t v44 = v26;
      if (v43)
      {
        uint64_t v45 = v43;
        uint64_t v46 = (void *)sub_1C151E5EC();
        objc_msgSend(v45, sel_setText_, v46);
      }
      id v47 = objc_msgSend(v39, sel_textLabel);
      uint64_t v48 = v154;
      if (v47)
      {
        uint64_t v49 = v47;
        id v50 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v49, sel_setFont_, v50);
      }
      long long v165 = v174;
      long long v166 = v175;
      long long v167 = v176;
      long long v161 = v170;
      long long v162 = v171;
      long long v163 = v172;
      long long v164 = v173;
      long long v159 = v168;
      long long v160 = v169;
      uint64_t v51 = *(void *)(v44 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_editor);
      sub_1C0187D08((uint64_t)&v168);
      swift_retain();
      sub_1C151894C();
      swift_release();
      uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
      v157 += 48;
      if (v52(v13, 1, v48))
      {
        sub_1C0C447A8((uint64_t)v13, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v53 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v155, 1, 1, v53);
      }
      else
      {
        uint64_t v103 = v151;
        sub_1C0C449D8((uint64_t)v13, v151, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        sub_1C0C447A8((uint64_t)v13, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v104 = v103 + *(int *)(v154 + 20);
        uint64_t v105 = sub_1C151772C();
        uint64_t v106 = *(void *)(v105 - 8);
        uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16);
        id v150 = v39;
        uint64_t v108 = v155;
        v107(v155, v104, v105);
        uint64_t v109 = v103;
        uint64_t v48 = v154;
        sub_1C0C44880(v109, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        id v39 = v150;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56))(v108, 0, 1, v105);
      }
      swift_retain();
      uint64_t v110 = (uint64_t)v152;
      sub_1C151894C();
      swift_release();
      unsigned int v111 = v52((char *)v110, 1, v48);
      uint64_t v112 = (uint64_t)v153;
      if (v111)
      {
        sub_1C0C447A8(v110, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v113 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v112, 1, 1, v113);
      }
      else
      {
        uint64_t v122 = v110;
        uint64_t v123 = v110;
        uint64_t v124 = v151;
        sub_1C0C449D8(v122, v151, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        sub_1C0C447A8(v123, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v125 = sub_1C151757C();
        uint64_t v126 = *(void *)(v125 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v112, v124, v125);
        sub_1C0C44880(v124, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v112, 0, 1, v125);
      }
      uint64_t v127 = sub_1C01A073C(&v159, v155, v112);
      uint64_t v129 = v128;
      unsigned __int8 v131 = v130;
      id v132 = objc_msgSend(v39, sel_textLabel);
      if (!v132) {
        goto LABEL_76;
      }
      unint64_t v133 = v132;
      if (v131 >= 2u)
      {
        if (!(v127 ^ 1 | v129))
        {
          id v136 = objc_msgSend(v156, sel_labelColor);
          goto LABEL_74;
        }
      }
      else
      {
        swift_retain();
        sub_1C151709C();
        swift_release();
        if (v159 != 1)
        {
          id v134 = objc_msgSend(v156, sel_systemYellowColor);
          id v135 = objc_msgSend(v134, sel_colorWithAlphaComponent_, 0.1);

          goto LABEL_75;
        }
      }
      sub_1BFF6B690();
      id v136 = (id)sub_1C151FA6C();
LABEL_74:
      id v135 = v136;
LABEL_75:
      objc_msgSend(v133, sel_setTextColor_, v135);

LABEL_76:
      id v137 = objc_msgSend(v39, sel_detailTextLabel);
      if (v137)
      {
        uint64_t v138 = v137;
        objc_msgSend(v137, sel_setNumberOfLines_, 0);
      }
      id v139 = objc_msgSend(v39, sel_detailTextLabel);
      if (v139)
      {
        uint64_t v140 = v139;
        long long v165 = v174;
        long long v166 = v175;
        long long v167 = v176;
        long long v161 = v170;
        long long v162 = v171;
        long long v163 = v172;
        long long v164 = v173;
        long long v159 = v168;
        long long v160 = v169;
        id v141 = sub_1C01A00B0(v51, (uint64_t)&v159, v127, v129, v131);
        objc_msgSend(v140, sel_setAttributedText_, v141);
      }
      long long v165 = v174;
      long long v166 = v175;
      long long v167 = v176;
      long long v161 = v170;
      long long v162 = v171;
      long long v163 = v172;
      long long v164 = v173;
      long long v159 = v168;
      long long v160 = v169;
      uint64_t v29 = (char *)v39;
      char v142 = sub_1C0C43420((uint64_t *)&v159);
      sub_1C0187DF4((uint64_t)&v168);
      if (v142) {
        uint64_t v143 = 3;
      }
      else {
        uint64_t v143 = 0;
      }
      objc_msgSend(v29, sel_setAccessoryType_, v143);

      if (v131 >= 2u)
      {
        unint64_t v146 = v29;
        if (v127 ^ 1 | v129) {
          uint64_t v145 = 0;
        }
        else {
          uint64_t v145 = 3;
        }
      }
      else
      {
        uint64_t v144 = v29;
        swift_retain();
        sub_1C151709C();
        swift_release();
        sub_1BFDCA350(v127, v129, v131);
        if ((_BYTE)v159) {
          uint64_t v145 = 0;
        }
        else {
          uint64_t v145 = 3;
        }
      }
      objc_msgSend(v29, sel_setSelectionStyle_, v145);

LABEL_95:
      sub_1C0C44880(v158, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
      return v29;
    case 2u:
      uint64_t v54 = *(void *)v19;
      type metadata accessor for SubtitleTableViewCell();
      uint64_t v29 = (char *)sub_1C151F24C();
      id v55 = objc_msgSend(v29, sel_textLabel);
      if (v55)
      {
        uint64_t v56 = v55;
        uint64_t v57 = (void *)sub_1C151E5EC();
        objc_msgSend(v56, sel_setText_, v57);
      }
      id v58 = objc_msgSend(v29, sel_textLabel);
      if (v58)
      {
        uint64_t v59 = v58;
        objc_msgSend(v58, sel_setNumberOfLines_, 0);
      }
      id v60 = objc_msgSend(v29, sel_textLabel);
      if (v60)
      {
        uint64_t v61 = v60;
        id v62 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v61, sel_setFont_, v62);
      }
      id v63 = objc_msgSend(v29, sel_detailTextLabel);
      if (v63)
      {
        uint64_t v64 = v63;
        uint64_t v65 = *(void *)(v54 + 16);
        swift_bridgeObjectRelease();
        *(void *)&long long v159 = v65;
        *(void *)&long long v168 = sub_1C152088C();
        *((void *)&v168 + 1) = v66;
        sub_1C151E80C();
        int64_t v67 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v64, sel_setText_, v67);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v114 = objc_msgSend(v29, sel_detailTextLabel);
      if (v114)
      {
        uint64_t v115 = v114;
        objc_msgSend(v114, sel_setNumberOfLines_, 0);
      }
      id v116 = objc_msgSend(v29, sel_detailTextLabel);
      if (v116)
      {
        uint64_t v117 = v116;
        id v118 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
        objc_msgSend(v117, sel_setFont_, v118);
      }
      id v119 = objc_msgSend(v29, sel_detailTextLabel);
      if (v119)
      {
        uint64_t v120 = v119;
        id v121 = objc_msgSend(self, sel_secondaryLabelColor);
        objc_msgSend(v120, sel_setTextColor_, v121);
      }
      objc_msgSend(v29, sel_setAccessoryType_, 1);
      goto LABEL_94;
    case 3u:
      sub_1C0C44818((uint64_t)v19, (uint64_t)v156, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      type metadata accessor for SubtitleTableViewCell();
      uint64_t v29 = (char *)sub_1C151F24C();
      id v68 = objc_msgSend(v29, sel_textLabel);
      if (v68)
      {
        uint64_t v69 = v68;
        uint64_t v70 = (void *)sub_1C151E5EC();
        objc_msgSend(v69, sel_setText_, v70);
      }
      id v71 = objc_msgSend(v29, sel_textLabel);
      if (v71)
      {
        long long v72 = v71;
        objc_msgSend(v71, sel_setNumberOfLines_, 0);
      }
      id v73 = objc_msgSend(v29, sel_textLabel);
      if (v73)
      {
        long long v74 = v73;
        id v75 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v74, sel_setFont_, v75);
      }
      id v76 = objc_msgSend(v29, sel_detailTextLabel);
      if (v76)
      {
        long long v77 = v76;
        sub_1C0DC96AC();
        unint64_t v78 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v77, sel_setText_, v78);
      }
      id v79 = objc_msgSend(v29, sel_detailTextLabel);
      if (v79)
      {
        uint64_t v80 = v79;
        objc_msgSend(v79, sel_setNumberOfLines_, 0);
      }
      id v81 = objc_msgSend(v29, sel_detailTextLabel);
      if (v81)
      {
        uint64_t v82 = v81;
        id v83 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
        objc_msgSend(v82, sel_setFont_, v83);
      }
      id v84 = objc_msgSend(v29, sel_detailTextLabel);
      if (v84)
      {
        uint64_t v85 = v84;
        id v86 = objc_msgSend(self, sel_secondaryLabelColor);
        objc_msgSend(v85, sel_setTextColor_, v86);
      }
      objc_msgSend(v29, sel_setAccessoryType_, 1);
      objc_msgSend(v29, sel_setSelectionStyle_, 0);
      sub_1C0C44880((uint64_t)v156, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      goto LABEL_95;
    case 4u:
      type metadata accessor for DebugJournalTableViewCell();
      uint64_t v29 = (char *)sub_1C151F24C();
      objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC8NewsFeed25DebugJournalTableViewCell_activityIndicatorView], sel_startAnimating);
      goto LABEL_95;
    default:
      uint64_t v28 = *((void *)v19 + 3);
      type metadata accessor for SubtitleTableViewCell();
      uint64_t v29 = (char *)sub_1C151F24C();
      id v30 = objc_msgSend(v29, sel_textLabel);
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v31, sel_setText_, v32);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v87 = objc_msgSend(v29, sel_textLabel);
      if (v87)
      {
        long long v88 = v87;
        objc_msgSend(v87, sel_setNumberOfLines_, 0);
      }
      id v89 = objc_msgSend(v29, sel_textLabel);
      if (v89)
      {
        long long v90 = v89;
        id v91 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
        objc_msgSend(v90, sel_setFont_, v91);
      }
      id v92 = objc_msgSend(v29, sel_detailTextLabel);
      if (v92)
      {
        unint64_t v93 = v92;
        swift_bridgeObjectRetain();
        unint64_t v94 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        objc_msgSend(v93, sel_setText_, v94);
      }
      id v95 = objc_msgSend(v29, sel_detailTextLabel);
      if (v95)
      {
        unint64_t v96 = v95;
        objc_msgSend(v95, sel_setNumberOfLines_, 0);
      }
      id v97 = objc_msgSend(v29, sel_detailTextLabel);
      if (v97)
      {
        uint64_t v98 = v97;
        id v99 = objc_msgSend(self, sel_systemFontOfSize_, 13.0);
        objc_msgSend(v98, sel_setFont_, v99);
      }
      id v100 = objc_msgSend(v29, sel_detailTextLabel);
      if (v100)
      {
        unint64_t v101 = v100;
        if (v28)
        {
          swift_bridgeObjectRelease();
          id v102 = objc_msgSend(self, sel_secondaryLabelColor);
        }
        else
        {
          sub_1BFF6B690();
          id v102 = (id)sub_1C151FA6C();
        }
        uint64_t v147 = v102;
        objc_msgSend(v101, sel_setTextColor_, v102);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v29, sel_setAccessoryType_, 0);
LABEL_94:
      objc_msgSend(v29, sel_setSelectionStyle_, 0);
      goto LABEL_95;
  }
}

uint64_t sub_1C0C43420(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package);
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) == 6)
  {
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (v11 == *(void *)(v2 + 16) && v12 == *(void *)(v2 + 24))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v6 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      char v7 = 0;
      if ((v6 & 1) == 0) {
        return v7 & 1;
      }
    }
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (v11 != v4 || v12 != v3) {
      goto LABEL_22;
    }
  }
  else
  {
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (v11 == *(void *)(v2 + 16) && v12 == *(void *)(v2 + 24))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v9 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      char v7 = 0;
      if ((v9 & 1) == 0) {
        return v7 & 1;
      }
    }
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (v11 != v4 || v12 != v3)
    {
LABEL_22:
      char v7 = sub_1C1520A9C();
      goto LABEL_23;
    }
  }
  char v7 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C0C437F8(void *a1)
{
  id v81 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0C44974(0, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v79 = (char *)&v72 - v4;
  uint64_t v80 = type metadata accessor for DebugFormatEditorLayoutContext();
  uint64_t v77 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v73 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C44974(0, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, v2);
  MEMORY[0x1F4188790](v6 - 8);
  id v76 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v75 = (char *)&v72 - v9;
  sub_1C0C44974(0, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700], v2);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v78 = (char *)&v72 - v11;
  sub_1C0C44974(0, &qword_1EA19A078, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, v2);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v72 - v13;
  uint64_t v15 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v74 = (uint64_t)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DebugFormatGroupItem();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v83 = (uint64_t)&v72 - v23;
  unint64_t v24 = sub_1C151676C();
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v25 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_sections];
  if (v24 >= *(void *)(v25 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v82 = v1;
  uint64_t v26 = *(void *)(v25 + 32 * v24 + 56);
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_1C151675C();
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v27 >= *(void *)(v26 + 16))
  {
LABEL_27:
    __break(1u);
    JUMPOUT(0x1C0C44400);
  }
  uint64_t v28 = v83;
  sub_1C0C449D8(v26+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v27, v83, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
  swift_bridgeObjectRelease();
  sub_1C0C449D8(v28, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v30 = *((_OWORD *)v21 + 5);
      long long v31 = *((_OWORD *)v21 + 7);
      long long v99 = *((_OWORD *)v21 + 6);
      long long v100 = v31;
      long long v32 = *((_OWORD *)v21 + 7);
      long long v101 = *((_OWORD *)v21 + 8);
      long long v33 = *((_OWORD *)v21 + 1);
      long long v34 = *((_OWORD *)v21 + 3);
      long long v95 = *((_OWORD *)v21 + 2);
      long long v96 = v34;
      long long v35 = *((_OWORD *)v21 + 3);
      long long v36 = *((_OWORD *)v21 + 5);
      long long v97 = *((_OWORD *)v21 + 4);
      long long v98 = v36;
      long long v37 = *((_OWORD *)v21 + 1);
      long long v93 = *(_OWORD *)v21;
      long long v94 = v37;
      long long v90 = v99;
      long long v91 = v32;
      long long v92 = *((_OWORD *)v21 + 8);
      long long v86 = v95;
      long long v87 = v35;
      long long v88 = v97;
      long long v89 = v30;
      long long v84 = v93;
      long long v85 = v33;
      sub_1C0187D08((uint64_t)&v93);
      swift_retain();
      uint64_t v38 = (uint64_t)v75;
      sub_1C151894C();
      swift_release();
      id v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
      uint64_t v40 = v80;
      if (v39(v38, 1, v80))
      {
        sub_1C0C447A8(v38, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v41 = sub_1C151772C();
        uint64_t v42 = (uint64_t)v78;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v78, 1, 1, v41);
      }
      else
      {
        uint64_t v52 = v73;
        sub_1C0C449D8(v38, v73, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        sub_1C0C447A8(v38, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v53 = v52 + *(int *)(v40 + 20);
        uint64_t v54 = sub_1C151772C();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v42 = (uint64_t)v78;
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v78, v53, v54);
        sub_1C0C44880(v52, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v56 = v54;
        uint64_t v40 = v80;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v42, 0, 1, v56);
      }
      swift_retain();
      uint64_t v57 = (uint64_t)v76;
      sub_1C151894C();
      swift_release();
      if (v39(v57, 1, v40))
      {
        sub_1C0C447A8(v57, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v58 = sub_1C151757C();
        uint64_t v59 = (uint64_t)v79;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v79, 1, 1, v58);
      }
      else
      {
        uint64_t v60 = v73;
        sub_1C0C449D8(v57, v73, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        sub_1C0C447A8(v57, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
        uint64_t v61 = sub_1C151757C();
        uint64_t v62 = *(void *)(v61 - 8);
        uint64_t v59 = (uint64_t)v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v79, v60, v61);
        sub_1C0C44880(v60, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      uint64_t v63 = sub_1C01A073C(&v84, v42, v59);
      uint64_t v66 = v63;
      uint64_t v67 = v64;
      if (v65 >= 2u)
      {
        if (!(v63 ^ 1 | v64))
        {
LABEL_17:
          uint64_t v69 = v82;
          uint64_t v70 = *(void *)&v82[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_package];
          long long v90 = v99;
          long long v91 = v100;
          long long v92 = v101;
          long long v86 = v95;
          long long v87 = v96;
          long long v88 = v97;
          long long v89 = v98;
          long long v84 = v93;
          long long v85 = v94;
          sub_1C0D274B4(v70, (uint64_t *)&v84);
          sub_1C0187DF4((uint64_t)&v93);
          id v71 = objc_msgSend(v69, sel_popoverPresentationController);

          if (v71) {
            objc_msgSend(v69, sel_dismissViewControllerAnimated_completion_, 1, 0);
          }
          else {
            objc_msgSend(v81, sel_reloadData);
          }
          return sub_1C0C44880(v83, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
        }
      }
      else
      {
        unsigned __int8 v68 = v65;
        swift_retain();
        sub_1C151709C();
        swift_release();
        sub_1BFDCA350(v66, v67, v68);
        if ((v84 & 1) == 0) {
          goto LABEL_17;
        }
      }
      sub_1C0C44880(v83, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
      return sub_1C0187DF4((uint64_t)&v93);
    case 2u:
      uint64_t v43 = sub_1C0BE7EA4(*(void *)v21);
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_1C0234BB4(v43);
      swift_bridgeObjectRelease();
      uint64_t v45 = sub_1C131B79C(v44);
      swift_bridgeObjectRelease();
      sub_1BFE9DD8C(0, &qword_1EA1A4D40, (uint64_t)&type metadata for FormatInspection, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      *(void *)(inited + 32) = v45;
      id v47 = (void *)sub_1C151F22C();
      sub_1C0C44414(inited, (uint64_t)v47);

      swift_setDeallocating();
      swift_arrayDestroy();
      return sub_1C0C44880(v83, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
    case 3u:
      uint64_t v48 = v74;
      sub_1C0C44818((uint64_t)v21, v74, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      swift_retain();
      sub_1C0D33E3C((uint64_t)&v93, 0.0, 0.0, 22.0, 22.0);
      swift_release();
      sub_1C0C449D8(v48, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
      uint64_t v49 = sub_1C0DCAE70((uint64_t)&v93, (uint64_t)v14);
      sub_1C0C447A8((uint64_t)v14, &qword_1EA19A078, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1BFE9DD8C(0, &qword_1EA1A4D40, (uint64_t)&type metadata for FormatInspection, MEMORY[0x1E4FBBE00]);
      uint64_t v50 = swift_initStackObject();
      *(_OWORD *)(v50 + 16) = xmmword_1C1529AE0;
      *(void *)(v50 + 32) = v49;
      uint64_t v51 = (void *)sub_1C151F22C();
      sub_1C0C44414(v50, (uint64_t)v51);

      swift_setDeallocating();
      swift_arrayDestroy();
      sub_1C0167828((uint64_t)&v93);
      sub_1C0C44880(v48, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      return sub_1C0C44880(v83, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
    case 4u:
      return sub_1C0C44880(v83, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
    default:
      sub_1C0C44880(v83, (uint64_t (*)(void))type metadata accessor for DebugFormatGroupItem);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
}

void sub_1C0C44414(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v3 = v2;
    type metadata accessor for DebugFormatInspectorPaneViewController();
    uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed30DebugFormatGroupViewController_editor];
    swift_retain();
    swift_bridgeObjectRetain();
    id v10 = (id)sub_1C0CF0780(v6, a1, 0, 0);
    objc_msgSend(v10, sel_setModalPresentationStyle_, 7);
    id v7 = objc_msgSend(v10, sel_popoverPresentationController);
    objc_msgSend(v7, sel_setSourceView_, a2);

    id v8 = objc_msgSend(v10, sel_popoverPresentationController);
    if (v8)
    {
      uint64_t v9 = v8;
      objc_msgSend(v8, sel_setPermittedArrowDirections_, 4);
    }
    objc_msgSend(v10, sel_setPreferredContentSize_, 375.0, 0.0);
    objc_msgSend(v3, sel_presentViewController_animated_completion_, v10, 1, 0);
  }
}

uint64_t sub_1C0C44674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v5 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1BFEF2D8C(v6, v5);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(a2 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_1C0C3EEEC(v9);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_6:
  uint64_t v11 = *(void *)(v10 + 16);
  if (!*(void *)(a3 + 16))
  {
    if (v11) {
      return v10;
    }
    goto LABEL_8;
  }
  if (v11)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

void sub_1C0C4473C()
{
  if (!qword_1EA1A4D10)
  {
    type metadata accessor for FormatSlotDefinition();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A4D10);
    }
  }
}

uint64_t sub_1C0C447A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0C44974(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0C44818(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C44880(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0C448E0(uint64_t a1, uint64_t a2)
{
  sub_1C0C44974(0, &qword_1EA1A4D18, (uint64_t (*)(uint64_t))sub_1C0C4473C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0C44974(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0C449D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C44A40(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0C44A58(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *keypath_get_selector_contentSize()
{
  return sel_contentSize;
}

uint64_t sub_1C0C44A84()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0C44ABC(void **a1, uint64_t a2)
{
  sub_1C0C41D1C(a1, a2, v2);
}

ValueMetadata *_s10GapOfflineVMa()
{
  return &_s10GapOfflineVN;
}

ValueMetadata *_s3GapVMa()
{
  return &_s3GapVN;
}

uint64_t sub_1C0C44AF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFC66384(v1, a1);
}

uint64_t sub_1C0C44B14()
{
  return sub_1C12BC660();
}

uint64_t sub_1C0C44B24@<X0>(unsigned char *a1@<X8>)
{
  long long v33 = a1;
  uint64_t v2 = sub_1C1517A9C();
  uint64_t v31 = *(void *)(v2 - 8);
  *(void *)&long long v32 = v2;
  MEMORY[0x1F4188790](v2);
  long long v30 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10GapOfflineV5BoundVMa(0);
  uint64_t v5 = v1 + *(int *)(v4 + 24);
  uint64_t v6 = *(void *)(v5 + 8);
  char v7 = *(unsigned char *)(v5 + 32);
  uint64_t v8 = *(void *)(v5 + 40);
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = *(void *)(v5 + 56);
  uint64_t v11 = *(void *)(v5 + 64);
  uint64_t v12 = *(void *)(v5 + 72);
  unint64_t v13 = *(void *)(v5 + 80);
  *(void *)&long long v37 = *(void *)v5;
  *((void *)&v37 + 1) = v6;
  long long v38 = *(_OWORD *)(v5 + 16);
  LOBYTE(v39) = v7;
  *((void *)&v39 + 1) = v8;
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  uint64_t v42 = v11;
  uint64_t v43 = v12;
  unint64_t v44 = v13;
  uint64_t v14 = v1 + *(int *)(v4 + 20);
  uint64_t v15 = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(*(void *)(v14 + *(int *)(v15 + 40)) + 16);
  double v17 = *(double *)(v14 + *(int *)(v15 + 32));
  sub_1BFC66384(v16 + 16, (uint64_t)v45);
  sub_1BFC66384(v16 + 56, (uint64_t)v35);
  double v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v45, inited + 16);
  sub_1BFC773DC(v35, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v12, v13);
  sub_1C0E7FDFC(v36);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1C0F0E7CC(&v37, (uint64_t)v36, (uint64_t)v45);
  long long v34 = v45;
  (*(void (**)(char *, void, void))(v31 + 104))(v30, *MEMORY[0x1E4FAB8F8], v32);
  sub_1C0C479D8();
  swift_allocObject();
  sub_1C1517BEC();
  sub_1C1517BFC();
  swift_release();
  long long v20 = v37;
  long long v21 = v38;
  long long v32 = v39;
  uint64_t v22 = v40;
  uint64_t v23 = v41;
  sub_1BFEB0F38(0, (unint64_t *)&unk_1EB87A620, MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
  uint64_t v25 = swift_allocObject();
  sub_1C0C47B64((uint64_t)v45, v25 + 16);
  *(_OWORD *)(v25 + 152) = v20;
  *(_OWORD *)(v25 + 168) = v21;
  *(_OWORD *)(v25 + 184) = v32;
  *(void *)(v25 + 200) = v22;
  *(void *)(v25 + 208) = v23;
  *(void *)(v24 + 32) = v25 | 0x2000000000000000;
  *(void *)&long long v37 = v24;
  sub_1BFEB0F38(0, (unint64_t *)&qword_1EB879CB0, MEMORY[0x1E4FBB320]);
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  uint64_t v26 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  unint64_t v27 = v33;
  *long long v33 = 0;
  *(_OWORD *)(v27 + 8) = v20;
  *(_OWORD *)(v27 + 24) = v21;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  *((void *)v27 + 5) = v26;
  *((void *)v27 + 6) = v28;
  return sub_1C0C47BC0((uint64_t)v45);
}

uint64_t sub_1C0C44ED8(uint64_t a1)
{
  sub_1C01B6C4C(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  char v9 = *((unsigned char *)v4 + 32);
  uint64_t v10 = v4[6];
  uint64_t v11 = v4[8];
  uint64_t v16 = v4[7];
  uint64_t v17 = v4[5];
  uint64_t v12 = v4[9];
  unint64_t v13 = v4[10];
  *(void *)(v3 + 56) = &type metadata for FeedGapOffline;
  *(void *)(v3 + 64) = sub_1C0641E5C();
  uint64_t v14 = swift_allocObject();
  *(void *)(v3 + 32) = v14;
  *(void *)(v14 + 16) = v6;
  *(void *)(v14 + 24) = v5;
  *(void *)(v14 + 32) = v7;
  *(void *)(v14 + 40) = v8;
  *(unsigned char *)(v14 + 48) = v9;
  *(void *)(v14 + 56) = v17;
  *(void *)(v14 + 64) = v10;
  *(void *)(v14 + 72) = v16;
  *(void *)(v14 + 80) = v11;
  *(void *)(v14 + 88) = v12;
  *(void *)(v14 + 96) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v12, v13);
  return v3;
}

uint64_t sub_1C0C45010()
{
  return sub_1C12BC678();
}

uint64_t _s10GapOfflineV5BoundVMa(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB86F520);
}

void *sub_1C0C45040(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v40 = a3;
    uint64_t v41 = a2;
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C151772C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = v10 + v13;
    uint64_t v16 = sub_1C151757C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v12[6];
    double v18 = &v9[v17];
    uint64_t v19 = v10 + v17;
    *(_OWORD *)double v18 = *(_OWORD *)(v10 + v17);
    v18[16] = *(unsigned char *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    v18[19] = *(unsigned char *)(v10 + v17 + 19);
    *((_DWORD *)v18 + 5) = *(_DWORD *)(v10 + v17 + 20);
    unint64_t v20 = *(void *)(v10 + v17 + 24);
    if (v20 >= 2) {
      unint64_t v20 = swift_bridgeObjectRetain();
    }
    *((void *)v18 + 3) = v20;
    uint64_t v21 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v22 = *(int *)(v21 + 36);
    __dst = &v18[v22];
    uint64_t v23 = (const void *)(v19 + v22);
    uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      uint64_t v28 = sub_1C151B62C();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v28 - 8) + 16))(__dst, v23, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    *(void *)&v18[*(int *)(v21 + 40)] = *(void *)(v19 + *(int *)(v21 + 40));
    *(void *)&v9[v12[7]] = *(void *)(v10 + v12[7]);
    *(void *)&v9[v12[8]] = *(void *)(v10 + v12[8]);
    v9[v12[9]] = *(unsigned char *)(v10 + v12[9]);
    *(void *)&v9[v12[10]] = *(void *)(v10 + v12[10]);
    v9[v12[11]] = *(unsigned char *)(v10 + v12[11]);
    *(void *)&v9[v12[12]] = *(void *)(v10 + v12[12]);
    uint64_t v29 = *(int *)(v40 + 24);
    long long v30 = (char *)v4 + v29;
    uint64_t v31 = (uint64_t)v41 + v29;
    uint64_t v32 = *(void *)(v31 + 8);
    *(void *)long long v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = *(void *)(v31 + 24);
    *((void *)v30 + 2) = *(void *)(v31 + 16);
    *((void *)v30 + 3) = v33;
    v30[32] = *(unsigned char *)(v31 + 32);
    uint64_t v34 = *(void *)(v31 + 48);
    *((void *)v30 + 5) = *(void *)(v31 + 40);
    *((void *)v30 + 6) = v34;
    uint64_t v35 = *(void *)(v31 + 64);
    *((void *)v30 + 7) = *(void *)(v31 + 56);
    *((void *)v30 + 8) = v35;
    long long v36 = (void *)(v31 + 72);
    unint64_t v37 = *(void *)(v31 + 80);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37 >= 0x11)
    {
      *((void *)v30 + 9) = *v36;
      *((void *)v30 + 10) = v37;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v30 + 72) = *(_OWORD *)v36;
    }
    *(void *)((char *)v4 + *(int *)(v40 + 28)) = *(uint64_t *)((char *)v41 + *(int *)(v40 + 28));
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C0C45430(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v4 + *(int *)(v6 + 24);
  if (*(void *)(v9 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  swift_release();
  swift_release();
  uint64_t v13 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 80) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1C0C455F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v40 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  unint64_t v19 = *(void *)(v9 + v16 + 24);
  if (v19 >= 2) {
    unint64_t v19 = swift_bridgeObjectRetain();
  }
  *(void *)(v17 + 24) = v19;
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v20 + 36);
  uint64_t v22 = (void *)(v17 + v21);
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(void *)(v17 + *(int *)(v20 + 40)) = *(void *)(v18 + *(int *)(v20 + 40));
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  uint64_t v28 = *(int *)(v38 + 24);
  uint64_t v29 = v40 + v28;
  uint64_t v30 = v39 + v28;
  uint64_t v31 = *(void *)(v30 + 8);
  *(void *)uint64_t v29 = *(void *)v30;
  *(void *)(v29 + 8) = v31;
  uint64_t v32 = *(void *)(v30 + 24);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = v32;
  *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
  uint64_t v33 = *(void *)(v30 + 48);
  *(void *)(v29 + 40) = *(void *)(v30 + 40);
  *(void *)(v29 + 48) = v33;
  uint64_t v34 = *(void *)(v30 + 64);
  *(void *)(v29 + 56) = *(void *)(v30 + 56);
  *(void *)(v29 + 64) = v34;
  uint64_t v35 = (void *)(v30 + 72);
  unint64_t v36 = *(void *)(v30 + 80);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36 >= 0x11)
  {
    *(void *)(v29 + 72) = *v35;
    *(void *)(v29 + 80) = v36;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v29 + 72) = *(_OWORD *)v35;
  }
  *(void *)(v40 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_retain();
  return v40;
}

uint64_t *sub_1C0C45988(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  id v47 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v42 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  long long v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)uint64_t v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  unint64_t v19 = (unint64_t *)&v7[v15 + 24];
  unint64_t v20 = *(void *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *unint64_t v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F1C4((uint64_t)(v16 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v19 = *((void *)v17 + 3);
    }
  }
  else
  {
    *unint64_t v19 = v20;
    if (v20 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v44 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v44 + 36);
  uint64_t v22 = (uint64_t)&v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v43 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    uint64_t v29 = v45;
    uint64_t v28 = v46;
    if (v27)
    {
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      uint64_t v32 = (void *)v43;
LABEL_13:
      memcpy(v32, v23, v31);
      goto LABEL_16;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v43, v23, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v43, 0, 1, v24);
  }
  else
  {
    uint64_t v29 = v45;
    uint64_t v28 = v46;
    if (v27)
    {
      sub_1BFF1F1C4(v43, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v32 = (void *)v43;
      goto LABEL_13;
    }
    uint64_t v35 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v43, v23, v35);
  }
LABEL_16:
  *(void *)&v16[*(int *)(v44 + 40)] = *(void *)&v17[*(int *)(v44 + 40)];
  *(void *)&v7[v42[7]] = *(void *)&v8[v42[7]];
  *(void *)&v7[v42[8]] = *(void *)&v8[v42[8]];
  v7[v42[9]] = v8[v42[9]];
  *(void *)&v7[v42[10]] = *(void *)&v8[v42[10]];
  swift_retain();
  swift_release();
  v7[v42[11]] = v8[v42[11]];
  *(void *)&v7[v42[12]] = *(void *)&v8[v42[12]];
  swift_retain();
  swift_release();
  uint64_t v36 = *(int *)(v29 + 24);
  unint64_t v37 = (char *)v47 + v36;
  uint64_t v38 = (uint64_t)v28 + v36;
  *(void *)unint64_t v37 = *(uint64_t *)((char *)v28 + v36);
  *((void *)v37 + 1) = *(uint64_t *)((char *)v28 + v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v37 + 2) = *(void *)(v38 + 16);
  uint64_t v39 = *(void *)(v38 + 24);
  v37[32] = *(unsigned char *)(v38 + 32);
  *((void *)v37 + 3) = v39;
  *((void *)v37 + 5) = *(void *)(v38 + 40);
  *((void *)v37 + 6) = *(void *)(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v37 + 7) = *(void *)(v38 + 56);
  *((void *)v37 + 8) = *(void *)(v38 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v40 = *(void *)(v38 + 80);
  if (*((void *)v37 + 10) >= 0x11uLL)
  {
    if (v40 >= 0x11)
    {
      *((void *)v37 + 9) = *(void *)(v38 + 72);
      *((void *)v37 + 10) = *(void *)(v38 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1C01A7564((uint64_t)(v37 + 72));
    goto LABEL_21;
  }
  if (v40 < 0x11)
  {
LABEL_21:
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v38 + 72);
    goto LABEL_23;
  }
  *((void *)v37 + 9) = *(void *)(v38 + 72);
  *((void *)v37 + 10) = *(void *)(v38 + 80);
  swift_bridgeObjectRetain();
LABEL_23:
  *(uint64_t *)((char *)v47 + *(int *)(v29 + 28)) = *(uint64_t *)((char *)v28 + *(int *)(v29 + 28));
  swift_retain();
  swift_release();
  return v47;
}

uint64_t sub_1C0C45EEC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v11 = v10[5];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(void *)(v16 + 24) = *(void *)(v8 + v15 + 24);
  uint64_t v18 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v19 = *(int *)(v18 + 36);
  __dst = (void *)(v16 + v19);
  uint64_t v34 = v18;
  unint64_t v20 = (const void *)(v17 + v19);
  uint64_t v21 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(__dst, v20, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(void *)(v16 + *(int *)(v34 + 40)) = *(void *)(v17 + *(int *)(v34 + 40));
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  *(void *)(v7 + v10[8]) = *(void *)(v8 + v10[8]);
  *(unsigned char *)(v7 + v10[9]) = *(unsigned char *)(v8 + v10[9]);
  *(void *)(v7 + v10[10]) = *(void *)(v8 + v10[10]);
  *(unsigned char *)(v7 + v10[11]) = *(unsigned char *)(v8 + v10[11]);
  *(void *)(v7 + v10[12]) = *(void *)(v8 + v10[12]);
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 80) = *(void *)(v28 + 80);
  long long v30 = *(_OWORD *)(v28 + 64);
  long long v31 = *(_OWORD *)(v28 + 32);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(v28 + 48);
  *(_OWORD *)(v27 + 64) = v30;
  *(_OWORD *)(v27 + 32) = v31;
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  return a1;
}

uint64_t sub_1C0C461F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v49 = a3;
  uint64_t v50 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v46 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 18) = *(unsigned char *)(v9 + v16 + 18);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(unsigned char *)(v17 + 20) = *(unsigned char *)(v9 + v16 + 20);
  *(unsigned char *)(v17 + 21) = *(unsigned char *)(v9 + v16 + 21);
  *(unsigned char *)(v17 + 22) = *(unsigned char *)(v9 + v16 + 22);
  *(unsigned char *)(v17 + 23) = *(unsigned char *)(v9 + v16 + 23);
  uint64_t v19 = (unint64_t *)(v8 + v16 + 24);
  unint64_t v20 = *(void *)(v9 + v16 + 24);
  uint64_t v51 = a1;
  if (*v19 < 2) {
    goto LABEL_4;
  }
  if (v20 < 2)
  {
    sub_1BFF1F1C4((uint64_t)v19, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v20 = *(void *)(v18 + 24);
LABEL_4:
    *uint64_t v19 = v20;
    goto LABEL_6;
  }
  *uint64_t v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v48 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v48 + 36);
  uint64_t v22 = v17 + v21;
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v47 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    uint64_t v28 = v51;
    uint64_t v29 = v49;
    if (v27)
    {
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      uint64_t v32 = (void *)v47;
LABEL_11:
      memcpy(v32, v23, v31);
      goto LABEL_14;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v47, v23, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v47, 0, 1, v24);
  }
  else
  {
    uint64_t v28 = v51;
    uint64_t v29 = v49;
    if (v27)
    {
      sub_1BFF1F1C4(v47, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v32 = (void *)v47;
      goto LABEL_11;
    }
    uint64_t v35 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v35 - 8) + 40))(v47, v23, v35);
  }
LABEL_14:
  *(void *)(v17 + *(int *)(v48 + 40)) = *(void *)(v18 + *(int *)(v48 + 40));
  *(void *)(v8 + v46[7]) = *(void *)(v9 + v46[7]);
  *(void *)(v8 + v46[8]) = *(void *)(v9 + v46[8]);
  *(unsigned char *)(v8 + v46[9]) = *(unsigned char *)(v9 + v46[9]);
  *(void *)(v8 + v46[10]) = *(void *)(v9 + v46[10]);
  swift_release();
  *(unsigned char *)(v8 + v46[11]) = *(unsigned char *)(v9 + v46[11]);
  *(void *)(v8 + v46[12]) = *(void *)(v9 + v46[12]);
  swift_release();
  uint64_t v36 = *(int *)(v29 + 24);
  uint64_t v37 = v28 + v36;
  uint64_t v38 = v50 + v36;
  uint64_t v39 = *(void *)(v50 + v36 + 8);
  *(void *)uint64_t v37 = *(void *)(v50 + v36);
  *(void *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v38 + 24);
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  *(void *)(v37 + 24) = v40;
  *(unsigned char *)(v37 + 32) = *(unsigned char *)(v38 + 32);
  uint64_t v41 = *(void *)(v38 + 48);
  *(void *)(v37 + 40) = *(void *)(v38 + 40);
  *(void *)(v37 + 48) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(v38 + 64);
  *(void *)(v37 + 56) = *(void *)(v38 + 56);
  *(void *)(v37 + 64) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = (void *)(v38 + 72);
  if (*(void *)(v37 + 80) >= 0x11uLL)
  {
    unint64_t v44 = *(void *)(v38 + 80);
    if (v44 >= 0x11)
    {
      *(void *)(v37 + 72) = *v43;
      *(void *)(v37 + 80) = v44;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1C01A7564(v37 + 72);
  }
  *(_OWORD *)(v37 + 72) = *(_OWORD *)v43;
LABEL_19:
  *(void *)(v28 + *(int *)(v29 + 28)) = *(void *)(v50 + *(int *)(v29 + 28));
  swift_release();
  return v28;
}

uint64_t sub_1C0C466C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_1C0C466E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_1C0C466F8()
{
  return sub_1C0083AA8();
}

uint64_t sub_1C0C46704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  unint64_t v19 = *(void *)(v9 + v16 + 24);
  if (v19 >= 2) {
    unint64_t v19 = swift_bridgeObjectRetain();
  }
  *(void *)(v17 + 24) = v19;
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v20 + 36);
  __dst = (void *)(v17 + v21);
  uint64_t v22 = (const void *)(v18 + v21);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v22, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  *(void *)(v17 + *(int *)(v20 + 40)) = *(void *)(v18 + *(int *)(v20 + 40));
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  uint64_t v27 = *(int *)(v36 + 24);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = v37 + v27;
  uint64_t v30 = *(void *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(void *)(v28 + 8) = v30;
  uint64_t v31 = *(void *)(v29 + 24);
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  *(void *)(v28 + 24) = v31;
  *(unsigned char *)(v28 + 32) = *(unsigned char *)(v29 + 32);
  uint64_t v32 = (void *)(v29 + 40);
  unint64_t v33 = *(void *)(v29 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v33 >= 0x11)
  {
    *(void *)(v28 + 40) = *v32;
    *(void *)(v28 + 48) = v33;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v28 + 40) = *(_OWORD *)v32;
  }
  *(void *)(a1 + *(int *)(v36 + 28)) = *(void *)(v37 + *(int *)(v36 + 28));
  swift_retain();
  return a1;
}

uint64_t *sub_1C0C46A80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v47 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v42 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  long long v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)uint64_t v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  unint64_t v19 = (unint64_t *)&v7[v15 + 24];
  unint64_t v20 = *(void *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *unint64_t v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F1C4((uint64_t)(v16 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v19 = *((void *)v17 + 3);
    }
  }
  else
  {
    *unint64_t v19 = v20;
    if (v20 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v44 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v44 + 36);
  uint64_t v22 = (uint64_t)&v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v43 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    uint64_t v29 = v45;
    uint64_t v28 = v46;
    if (v27)
    {
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      uint64_t v32 = (void *)v43;
LABEL_13:
      memcpy(v32, v23, v31);
      goto LABEL_16;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v43, v23, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v43, 0, 1, v24);
  }
  else
  {
    uint64_t v29 = v45;
    uint64_t v28 = v46;
    if (v27)
    {
      sub_1BFF1F1C4(v43, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v32 = (void *)v43;
      goto LABEL_13;
    }
    uint64_t v35 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v43, v23, v35);
  }
LABEL_16:
  *(void *)&v16[*(int *)(v44 + 40)] = *(void *)&v17[*(int *)(v44 + 40)];
  *(void *)&v7[v42[7]] = *(void *)&v8[v42[7]];
  *(void *)&v7[v42[8]] = *(void *)&v8[v42[8]];
  v7[v42[9]] = v8[v42[9]];
  *(void *)&v7[v42[10]] = *(void *)&v8[v42[10]];
  swift_retain();
  swift_release();
  v7[v42[11]] = v8[v42[11]];
  *(void *)&v7[v42[12]] = *(void *)&v8[v42[12]];
  swift_retain();
  swift_release();
  uint64_t v36 = *(int *)(v29 + 24);
  uint64_t v37 = (char *)v47 + v36;
  uint64_t v38 = (uint64_t)v28 + v36;
  *(void *)uint64_t v37 = *(uint64_t *)((char *)v28 + v36);
  *((void *)v37 + 1) = *(uint64_t *)((char *)v28 + v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v37 + 2) = *(void *)(v38 + 16);
  uint64_t v39 = *(void *)(v38 + 24);
  v37[32] = *(unsigned char *)(v38 + 32);
  *((void *)v37 + 3) = v39;
  unint64_t v40 = *(void *)(v38 + 48);
  if (*((void *)v37 + 6) >= 0x11uLL)
  {
    if (v40 >= 0x11)
    {
      *((void *)v37 + 5) = *(void *)(v38 + 40);
      *((void *)v37 + 6) = *(void *)(v38 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1C01A7564((uint64_t)(v37 + 40));
    goto LABEL_21;
  }
  if (v40 < 0x11)
  {
LABEL_21:
    *(_OWORD *)(v37 + 40) = *(_OWORD *)(v38 + 40);
    goto LABEL_23;
  }
  *((void *)v37 + 5) = *(void *)(v38 + 40);
  *((void *)v37 + 6) = *(void *)(v38 + 48);
  swift_bridgeObjectRetain();
LABEL_23:
  *(uint64_t *)((char *)v47 + *(int *)(v29 + 28)) = *(uint64_t *)((char *)v28 + *(int *)(v29 + 28));
  swift_retain();
  swift_release();
  return v47;
}

uint64_t sub_1C0C46FA4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v11 = v10[5];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(void *)(v16 + 24) = *(void *)(v8 + v15 + 24);
  uint64_t v18 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v19 = *(int *)(v18 + 36);
  __dst = (void *)(v16 + v19);
  uint64_t v32 = v18;
  unint64_t v20 = (const void *)(v17 + v19);
  uint64_t v21 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(__dst, v20, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(void *)(v16 + *(int *)(v32 + 40)) = *(void *)(v17 + *(int *)(v32 + 40));
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  *(void *)(v7 + v10[8]) = *(void *)(v8 + v10[8]);
  *(unsigned char *)(v7 + v10[9]) = *(unsigned char *)(v8 + v10[9]);
  *(void *)(v7 + v10[10]) = *(void *)(v8 + v10[10]);
  *(unsigned char *)(v7 + v10[11]) = *(unsigned char *)(v8 + v10[11]);
  *(void *)(v7 + v10[12]) = *(void *)(v8 + v10[12]);
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(void *)(v27 + 48) = *(void *)(v28 + 48);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  return a1;
}

uint64_t sub_1C0C472A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v44 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 18) = *(unsigned char *)(v9 + v16 + 18);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(unsigned char *)(v17 + 20) = *(unsigned char *)(v9 + v16 + 20);
  *(unsigned char *)(v17 + 21) = *(unsigned char *)(v9 + v16 + 21);
  *(unsigned char *)(v17 + 22) = *(unsigned char *)(v9 + v16 + 22);
  *(unsigned char *)(v17 + 23) = *(unsigned char *)(v9 + v16 + 23);
  uint64_t v19 = (unint64_t *)(v8 + v16 + 24);
  unint64_t v20 = *(void *)(v9 + v16 + 24);
  uint64_t v49 = a1;
  if (*v19 < 2) {
    goto LABEL_4;
  }
  if (v20 < 2)
  {
    sub_1BFF1F1C4((uint64_t)v19, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v20 = *(void *)(v18 + 24);
LABEL_4:
    *uint64_t v19 = v20;
    goto LABEL_6;
  }
  *uint64_t v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v46 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v46 + 36);
  uint64_t v22 = v17 + v21;
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v45 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    uint64_t v28 = v49;
    uint64_t v29 = v47;
    if (v27)
    {
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      uint64_t v32 = (void *)v45;
LABEL_11:
      memcpy(v32, v23, v31);
      goto LABEL_14;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v45, v23, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v45, 0, 1, v24);
  }
  else
  {
    uint64_t v28 = v49;
    uint64_t v29 = v47;
    if (v27)
    {
      sub_1BFF1F1C4(v45, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v32 = (void *)v45;
      goto LABEL_11;
    }
    uint64_t v35 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v35 - 8) + 40))(v45, v23, v35);
  }
LABEL_14:
  *(void *)(v17 + *(int *)(v46 + 40)) = *(void *)(v18 + *(int *)(v46 + 40));
  *(void *)(v8 + v44[7]) = *(void *)(v9 + v44[7]);
  *(void *)(v8 + v44[8]) = *(void *)(v9 + v44[8]);
  *(unsigned char *)(v8 + v44[9]) = *(unsigned char *)(v9 + v44[9]);
  *(void *)(v8 + v44[10]) = *(void *)(v9 + v44[10]);
  swift_release();
  *(unsigned char *)(v8 + v44[11]) = *(unsigned char *)(v9 + v44[11]);
  *(void *)(v8 + v44[12]) = *(void *)(v9 + v44[12]);
  swift_release();
  uint64_t v36 = *(int *)(v29 + 24);
  uint64_t v37 = v28 + v36;
  uint64_t v38 = v48 + v36;
  uint64_t v39 = *(void *)(v48 + v36 + 8);
  *(void *)uint64_t v37 = *(void *)(v48 + v36);
  *(void *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v38 + 24);
  *(void *)(v37 + 16) = *(void *)(v38 + 16);
  *(void *)(v37 + 24) = v40;
  *(unsigned char *)(v37 + 32) = *(unsigned char *)(v38 + 32);
  uint64_t v41 = (void *)(v38 + 40);
  if (*(void *)(v37 + 48) >= 0x11uLL)
  {
    unint64_t v42 = *(void *)(v38 + 48);
    if (v42 >= 0x11)
    {
      *(void *)(v37 + 40) = *v41;
      *(void *)(v37 + 48) = v42;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1C01A7564(v37 + 40);
  }
  *(_OWORD *)(v37 + 40) = *(_OWORD *)v41;
LABEL_19:
  *(void *)(v28 + *(int *)(v29 + 28)) = *(void *)(v48 + *(int *)(v29 + 28));
  swift_release();
  return v28;
}

uint64_t sub_1C0C47758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C4776C);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0C47820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C47834);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0C478E0(uint64_t a1)
{
  uint64_t result = sub_1BFEB1328(&qword_1EB86F510, (void (*)(uint64_t))_s10GapOfflineV5BoundVMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C47938()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocObject();
}

uint64_t sub_1C0C47988()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C0C479D0(uint64_t a1)
{
  return sub_1C0F0F554(a1, *(void *)(v1 + 16));
}

void sub_1C0C479D8()
{
  if (!qword_1EB86F500)
  {
    sub_1C0C47A54();
    sub_1C0C47AA8();
    unint64_t v0 = sub_1C1517C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86F500);
    }
  }
}

unint64_t sub_1C0C47A54()
{
  unint64_t result = qword_1EB86F5F8[0];
  if (!qword_1EB86F5F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB86F5F8);
  }
  return result;
}

unint64_t sub_1C0C47AA8()
{
  unint64_t result = qword_1EB86F5E0;
  if (!qword_1EB86F5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F5E0);
  }
  return result;
}

uint64_t sub_1C0C47AFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C47B64(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0C47BC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0C47C14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t type metadata accessor for DebugFormatCodeViewController()
{
  uint64_t result = qword_1EA1A4D58;
  if (!qword_1EA1A4D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C47CB8()
{
  return swift_initClassMetadata2();
}

char *sub_1C0C47D08(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a2;
  uint64_t v44 = (uint64_t (*)(uint64_t))a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v39 = sub_1C151531C();
  uint64_t v3 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v5 = (uint64_t *)((char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1C15152DC();
  MEMORY[0x1F4188790](v6);
  sub_1C151536C();
  swift_allocObject();
  uint64_t v40 = v2;
  uint64_t v7 = sub_1C151535C();
  sub_1C0C48458(0, &qword_1EA198310, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
  sub_1C15152BC();
  sub_1C15152CC();
  v48[0] = v8;
  sub_1C0C48518(&qword_1EA198318, MEMORY[0x1E4F26CD0]);
  sub_1C0C48458(0, &qword_1EA198320, MEMORY[0x1E4FBB320]);
  sub_1C0211834();
  uint64_t v9 = v44;
  sub_1C151FFBC();
  sub_1C15152EC();
  *uint64_t v5 = 0x7974696E69666E69;
  v5[1] = 0xE800000000000000;
  void v5[2] = 0x74696E69666E692DLL;
  v5[3] = 0xE900000000000079;
  v5[4] = 7233902;
  v5[5] = 0xE300000000000000;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F26D30], v39);
  sub_1C151532C();
  uint64_t v42 = v7;
  if (v9)
  {
    swift_retain();
    uint64_t v10 = v9(v7);
    unint64_t v12 = v11;
    uint64_t v13 = (void *)v10;
    sub_1BFC3E5C0((uint64_t)v9);
    char v14 = 0;
  }
  else
  {
    sub_1C0C484B8();
    uint64_t v13 = (void *)swift_allocError();
    unint64_t v12 = 0;
    char v14 = 1;
  }
  uint64_t v15 = type metadata accessor for DebugFormatCodeJSONLoader();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  *(unsigned char *)(v16 + 32) = v14;
  uint64_t v49 = v15;
  uint64_t v50 = &off_1F1C05DB0;
  v48[0] = v16;
  uint64_t v17 = (objc_class *)type metadata accessor for DebugFormatCodeDisplayViewController();
  uint64_t v18 = (char *)objc_allocWithZone(v17);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView;
  id v20 = objc_allocWithZone(MEMORY[0x1E4FB1DD8]);
  sub_1C0C4850C(v13, v12, v14);
  swift_retain();
  uint64_t v21 = v18;
  *(void *)&v18[v19] = objc_msgSend(v20, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BFC66384((uint64_t)v48, (uint64_t)&v21[OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader]);

  v47.receiver = v21;
  v47.super_class = v17;
  id v22 = objc_msgSendSuper2(&v47, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  swift_release();
  uint64_t v23 = v40;
  *(void *)&v40[qword_1EA1A4D48] = v22;
  uint64_t v24 = type metadata accessor for DebugFormatCodeYAMLLoader();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v13;
  *(void *)(v25 + 24) = v12;
  *(unsigned char *)(v25 + 32) = v14;
  uint64_t v49 = v24;
  uint64_t v50 = &off_1F1C08F30;
  v48[0] = v25;
  uint64_t v26 = (char *)objc_allocWithZone(v17);
  uint64_t v27 = OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_textView;
  id v28 = objc_allocWithZone(MEMORY[0x1E4FB1DD8]);
  sub_1C0C4850C(v13, v12, v14);
  swift_retain();
  uint64_t v29 = v26;
  *(void *)&v26[v27] = objc_msgSend(v28, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BFC66384((uint64_t)v48, (uint64_t)&v29[OBJC_IVAR____TtC8NewsFeed36DebugFormatCodeDisplayViewController_loader]);

  v46.receiver = v29;
  v46.super_class = v17;
  id v30 = objc_msgSendSuper2(&v46, sel_initWithNibName_bundle_, 0, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  swift_release();
  *(void *)&v23[qword_1EA1A4D50] = v30;

  v45.receiver = v23;
  v45.super_class = ObjectType;
  size_t v31 = (char *)objc_msgSendSuper2(&v45, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v32 = *(void **)&v31[qword_1EA1A4D50];
  sub_1C0C48518(&qword_1EA1A4D70, (void (*)(uint64_t))type metadata accessor for DebugFormatCodeDisplayViewController);
  uint64_t v33 = v31;
  id v34 = v32;
  sub_1C151BA2C();

  uint64_t v35 = *(void **)&v33[qword_1EA1A4D48];
  uint64_t v36 = v33;
  id v37 = v35;
  sub_1C151BA2C();
  sub_1BFC3E5C0((uint64_t)v44);

  sub_1C0C48560(v13, v12, v14);
  swift_release();
  return v36;
}

void sub_1C0C48334()
{
}

void sub_1C0C48390(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1C0C483C4()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA1A4D50);
}

void sub_1C0C48404(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_1EA1A4D50);
}

uint64_t sub_1C0C48450()
{
  return type metadata accessor for DebugFormatCodeViewController();
}

void sub_1C0C48458(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C15152DC();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0C484B8()
{
  unint64_t result = qword_1EA1A4D68;
  if (!qword_1EA1A4D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4D68);
  }
  return result;
}

id sub_1C0C4850C(id a1, unint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)sub_1BFE95820((uint64_t)a1, a2);
  }
}

uint64_t sub_1C0C48518(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0C48560(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_1BFE95664((uint64_t)a1, a2);
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatCodeViewController.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        _OWORD *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      _OWORD *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0C48608);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCodeViewController.Errors()
{
  return &type metadata for DebugFormatCodeViewController.Errors;
}

unint64_t sub_1C0C48644()
{
  unint64_t result = qword_1EA1A4D78;
  if (!qword_1EA1A4D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4D78);
  }
  return result;
}

uint64_t sub_1C0C48698(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v53 = a6;
  uint64_t v54 = a7;
  uint64_t v51 = a4;
  uint64_t v52 = a2;
  uint64_t v14 = sub_1C151E17C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C1515FDC();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a3;
  if (*a3 < 0)
  {
    uint64_t v49 = a8;
    uint64_t v50 = v9;
    uint64_t v39 = v51;
    uint64_t v40 = v52;
    uint64_t v41 = v53;
    uint64_t v42 = v54;
    uint64_t v46 = a9;
    uint64_t v43 = *(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v44 = *(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v48 = v44 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    uint64_t v47 = v43 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (objc_msgSend(a5, sel_userInterfaceStyle) == (id)2) {
      aBlock[0] = v44;
    }
    else {
      aBlock[0] = v43;
    }
    sub_1C0C48698(a1, v40, aBlock, v39, a5, v41, v42, v49, v46);
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v24 = v20;
    uint64_t v25 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v25, v24);
    uint64_t v26 = *(void **)(v9 + 16);
    uint64_t v27 = (void *)sub_1C1515E9C();
    id v28 = objc_msgSend(v26, sel_assetHandleForURL_lifetimeHint_, v27, 0);

    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCB28], v14);
    uint64_t v29 = (void *)sub_1C151F5BC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = v28;
    v32[3] = v31;
    uint64_t v33 = v53;
    uint64_t v34 = v54;
    v32[4] = v30;
    v32[5] = v33;
    v32[6] = v34;
    aBlock[4] = sub_1C0C491A4;
    aBlock[5] = v32;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_47;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = v28;
    swift_retain();
    swift_release();
    id v37 = objc_msgSend(v36, sel_downloadIfNeededWithCompletionQueue_completion_, v29, v35);
    _Block_release(v35);

    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v24);
  }
}

uint64_t sub_1C0C48B08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a3;
  uint64_t v24 = a5;
  uint64_t v21 = a4;
  uint64_t v22 = a2;
  uint64_t v28 = sub_1C1515FDC();
  MEMORY[0x1F4188790](v28);
  uint64_t v6 = sub_1C151E16C();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151E1DC();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB85EF90);
  uint64_t v12 = sub_1C151E62C();
  id v13 = sub_1C04C4DA4(a1, v12);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v14 = (void *)sub_1C151F56C();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = v23;
  void v15[2] = v22;
  v15[3] = v16;
  uint64_t v17 = v21;
  v15[4] = v13;
  v15[5] = v17;
  void v15[6] = v24;
  aBlock[4] = sub_1C0C4920C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_14_0;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v19 = v13;
  swift_retain();
  swift_release();
  sub_1C151E19C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1BFDE8C64((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1BFDE8C64((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v11, v8, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v26);
}

void sub_1C0C49064(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v6 = a1 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C18C9C60](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    swift_beginAccess();
    uint64_t v9 = (void *)MEMORY[0x1C18C9C60](a2 + 16);

    if (v9)
    {
      sub_1C151CADC();
      a4(v8);
    }
  }
}

uint64_t sub_1C0C4911C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0C49154()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C491A4()
{
  return sub_1C0C49224((uint64_t (*)(void, void, void, void, void))sub_1C0C48B08);
}

uint64_t sub_1C0C491BC()
{
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C4920C()
{
  return sub_1C0C49224((uint64_t (*)(void, void, void, void, void))sub_1C0C49064);
}

uint64_t sub_1C0C49224(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1C0C49248@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C0178190();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v48 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[1];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v8;
  uint64_t v50 = a1;
  uint64_t v9 = a1[2];
  *(void *)&long long v53 = v9;
  swift_bridgeObjectRetain();
  FormatOptionValue.type.getter((char *)v60);
  uint64_t v10 = LOBYTE(v60[0]);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = v10;
  uint64_t v51 = a2;
  v52[0] = v9;
  *(unsigned char *)(a2 + 40) = 0;
  sub_1C0EC0F14((uint64_t)&v53);
  if (!*((void *)&v54 + 1))
  {
    sub_1C0C4CE38((uint64_t)&v53);
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
LABEL_27:
    uint64_t v39 = v51;
    *(void *)(v51 + 48) = v14;
    uint64_t v40 = type metadata accessor for FormatOption();
    uint64_t v41 = (uint64_t)v50;
    uint64_t v42 = v48;
    sub_1C0C4CC5C((uint64_t)v50 + *(int *)(v40 + 28), v48, (uint64_t (*)(void))sub_1C0178190);
    sub_1C0C4BB9C(v41, (uint64_t (*)(void))type metadata accessor for FormatOption);
    uint64_t v43 = type metadata accessor for FormatDerivedDataOption();
    return sub_1C0C4CBF4(v42, v39 + *(int *)(v43 + 28), (uint64_t (*)(void))sub_1C0178190);
  }
  v60[0] = v53;
  v60[1] = v54;
  uint64_t v61 = v55;
  unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v44 = *(void *)(v55 + 16);
  if (!v44)
  {
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
LABEL_26:
    sub_1C0C4CEB8((uint64_t)v60);
    goto LABEL_27;
  }
  uint64_t v46 = v55 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  uint64_t v14 = v11;
  uint64_t v45 = result;
  while (1)
  {
    if (v13 >= *(void *)(result + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v55 = 0;
    long long v53 = 0u;
    long long v54 = 0u;
    unsigned int v56 = 0;
    unsigned __int16 v57 = -512;
    uint64_t v58 = v11;
    uint64_t v59 = v11;
    unint64_t v49 = v13;
    uint64_t v15 = v46 + 48 * v13;
    uint64_t v16 = *(void *)(v15 + 32);
    uint64_t v17 = *(void *)(v15 + 40);
    uint64_t v18 = qword_1EB87F148;
    swift_bridgeObjectRetain();
    if (v18 != -1) {
      swift_once();
    }
    v52[0] = v16;
    v52[1] = v17;
    uint64_t v19 = sub_1BFEF53C0(v52);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v11;
LABEL_14:
    swift_bridgeObjectRetain();
    sub_1C017F59C(0, 0, 0, 0, 0, 0xFE0000000000uLL);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v25[2];
    uint64_t v47 = v25;
    if (v26)
    {
      uint64_t v27 = v25 + 4;
      do
      {
        unint64_t v30 = *v27++;
        unint64_t v29 = v30;
        if (v30 >> 60 == 3)
        {
          uint64_t v62 = v3;
          uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v32 = *(void *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v33 = *(void *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v34 = *(void *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = sub_1C0EE0888(0, v14[2] + 1, 1, v14);
          }
          unint64_t v36 = v14[2];
          unint64_t v35 = v14[3];
          id v37 = v14;
          if (v36 >= v35 >> 1) {
            id v37 = sub_1C0EE0888((void *)(v35 > 1), v36 + 1, 1, v14);
          }
          v37[2] = v36 + 1;
          uint64_t v14 = v37;
          uint64_t v28 = &v37[4 * v36];
          v28[4] = v31;
          v28[5] = v32;
          v28[6] = v33;
          v28[7] = v34;
          swift_release();
          uint64_t v3 = v62;
        }
        --v26;
      }
      while (v26);
    }
    unint64_t v13 = v49 + 1;
    swift_bridgeObjectRelease();
    uint64_t result = v45;
    unint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    if (v13 == v44)
    {
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  uint64_t v21 = v14;
  uint64_t v22 = (uint64_t *)(v19 + 64);
  while (1)
  {
    uint64_t v24 = *(v22 - 1);
    uint64_t v23 = *v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0AB1A88((uint64_t)&v53, v24, v23);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 += 5;
    if (!--v20)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v21;
      uint64_t v25 = v58;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0C4BB9C((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatOption);
  swift_bridgeObjectRelease();
  sub_1C017F59C(v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55, v56 | ((unint64_t)v57 << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0C4CEB8((uint64_t)v60);
  swift_bridgeObjectRelease();
  uint64_t v38 = v51;
  swift_bridgeObjectRelease();
  return sub_1C033D2B4(*(void *)(v38 + 16), *(void *)(v38 + 24), *(void *)(v38 + 32), *(unsigned char *)(v38 + 40));
}

uint64_t sub_1C0C49740(void *a1)
{
  uint64_t v3 = v1;
  sub_1BFEFF450(0, &qword_1EA1A4DE8, (uint64_t (*)(void))sub_1C0C4CB4C, (uint64_t)&type metadata for FormatDerivedDataOption.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C4CB4C();
  sub_1C1520F0C();
  LOBYTE(v13) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    uint64_t v10 = *(void *)(v3 + 32);
    char v11 = *(unsigned char *)(v3 + 40);
    long long v13 = *(_OWORD *)(v3 + 16);
    uint64_t v14 = v10;
    char v15 = v11;
    char v16 = 1;
    sub_1C0C4CCC4();
    sub_1C152080C();
    *(void *)&long long v13 = *(void *)(v3 + 48);
    char v16 = 2;
    sub_1BFFF7CA0(0, &qword_1EA1A4DD8, (uint64_t)&type metadata for FormatDerivedDataOptionReference, MEMORY[0x1E4FBB320]);
    sub_1C0C4CD18(&qword_1EA1A4DF8, (void (*)(void))sub_1C038968C);
    sub_1C152080C();
    type metadata accessor for FormatDerivedDataOption();
    LOBYTE(v13) = 3;
    type metadata accessor for FormatVersionRequirement(0);
    sub_1C0C4CDA8(&qword_1EA199690);
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0C49A08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  sub_1C0178190();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF450(0, &qword_1EA1A4DC0, (uint64_t (*)(void))sub_1C0C4CB4C, (uint64_t)&type metadata for FormatDerivedDataOption.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v25 = v6;
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C4CB4C();
  uint64_t v26 = v8;
  uint64_t v12 = v27;
  sub_1C1520EBC();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)a1;
  uint64_t v15 = v23;
  uint64_t v14 = v24;
  uint64_t v16 = (uint64_t)v5;
  LOBYTE(v28) = 0;
  uint64_t v17 = v25;
  *(void *)char v11 = sub_1C152069C();
  *((void *)v11 + 1) = v18;
  char v31 = 1;
  sub_1C0C4CBA0();
  sub_1C15206EC();
  uint64_t v19 = v29;
  char v20 = v30;
  *((_OWORD *)v11 + 1) = v28;
  *((void *)v11 + 4) = v19;
  v11[40] = v20;
  sub_1BFFF7CA0(0, &qword_1EA1A4DD8, (uint64_t)&type metadata for FormatDerivedDataOptionReference, MEMORY[0x1E4FBB320]);
  char v31 = 2;
  sub_1C0C4CD18(&qword_1EA1A4DE0, (void (*)(void))sub_1C03892C0);
  uint64_t v27 = 0;
  sub_1C15206EC();
  *((void *)v11 + 6) = v28;
  type metadata accessor for FormatVersionRequirement(0);
  LOBYTE(v28) = 3;
  sub_1C0C4CDA8(&qword_1EB891B80);
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v26, v17);
  sub_1C0C4CBF4(v16, (uint64_t)&v11[*(int *)(v9 + 28)], (uint64_t (*)(void))sub_1C0178190);
  sub_1C0C4CC5C((uint64_t)v11, v14, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_1C0C4BB9C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
}

unint64_t sub_1C0C49EAC()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x636E657265666572;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0C49F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C4D118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C49F64(uint64_t a1)
{
  unint64_t v2 = sub_1C0C4CB4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C49FA0(uint64_t a1)
{
  unint64_t v2 = sub_1C0C4CB4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C49FDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0C49A08(a1, a2);
}

uint64_t sub_1C0C49FF4(void *a1)
{
  return sub_1C0C49740(a1);
}

uint64_t FormatDerivedDataOptionType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1BFEFF450(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15[-1] - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v16;
    sub_1C0C4A2C8();
    v15[0] = 0uLL;
    sub_1C15206EC();
    if ((_BYTE)v14)
    {
      if (v14 == 1)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v10 = 0;
        long long v11 = 0uLL;
        char v12 = 2;
      }
      else
      {
        long long v14 = xmmword_1C152C800;
        sub_1C0C4A31C();
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        uint64_t v10 = *(void *)&v15[0];
        long long v11 = *(_OWORD *)((char *)v15 + 8);
        char v12 = 1;
      }
    }
    else
    {
      v15[0] = xmmword_1C152C800;
      sub_1BFF71ADC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      char v12 = 0;
      uint64_t v10 = v14;
      long long v11 = 0uLL;
    }
    *(void *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 8) = v11;
    *(unsigned char *)(v9 + 24) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C0C4A2C8()
{
  unint64_t result = qword_1EA1A4D80;
  if (!qword_1EA1A4D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4D80);
  }
  return result;
}

unint64_t sub_1C0C4A31C()
{
  unint64_t result = qword_1EA1A4D88;
  if (!qword_1EA1A4D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4D88);
  }
  return result;
}

uint64_t FormatDerivedDataOptionType.encode(to:)(void *a1)
{
  sub_1BFEFF450(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v16 = v8;
  uint64_t v14 = v1[2];
  int v9 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  if (v9)
  {
    if (v9 != 1)
    {
      LOBYTE(v17) = 1;
      sub_1C0C4A604();
      long long v18 = 0uLL;
      goto LABEL_8;
    }
    LOBYTE(v17) = 2;
    sub_1C0C4A604();
    long long v18 = 0uLL;
    uint64_t v10 = v20;
    sub_1C152080C();
    if (!v10)
    {
      *(void *)&long long v18 = v16;
      *((void *)&v18 + 1) = v15;
      uint64_t v19 = v14;
      long long v17 = xmmword_1C152C800;
      sub_1C0C4A658();
LABEL_8:
      sub_1C152080C();
    }
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_1C0C4A604();
    long long v18 = 0uLL;
    uint64_t v11 = v20;
    sub_1C152080C();
    if (!v11)
    {
      LOBYTE(v17) = v16;
      long long v18 = xmmword_1C152C800;
      sub_1BFF08118();
      goto LABEL_8;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0C4A604()
{
  unint64_t result = qword_1EA1A4D90;
  if (!qword_1EA1A4D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4D90);
  }
  return result;
}

unint64_t sub_1C0C4A658()
{
  unint64_t result = qword_1EA1A4D98;
  if (!qword_1EA1A4D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4D98);
  }
  return result;
}

uint64_t sub_1C0C4A6AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147DBC4(*a1, *a2);
}

uint64_t sub_1C0C4A6B8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C4A750()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C4A7D4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C4A868@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0C4CDEC();
  *a1 = result;
  return result;
}

void sub_1C0C4A898(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7958113;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E656D6574617473;
    unint64_t v4 = 0xE900000000000074;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701869940;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0C4A8EC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0C4A94C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0C4A9A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDerivedDataOptionType.init(from:)(a1, a2);
}

uint64_t sub_1C0C4A9B8(void *a1)
{
  return FormatDerivedDataOptionType.encode(to:)(a1);
}

uint64_t FormatDerivedDataOptionType.description.getter()
{
  if (v0[24])
  {
    if (v0[24] == 1) {
      return 0x6E656D6574617473;
    }
    else {
      return 7958113;
    }
  }
  else
  {
    uint64_t result = 0x6E61656C6F6F62;
    switch(*v0)
    {
      case 1:
        uint64_t result = 1702125924;
        break;
      case 2:
        uint64_t result = 1836412517;
        break;
      case 3:
        uint64_t result = 0x74616F6C66;
        break;
      case 4:
        uint64_t result = 0x72656765746E69;
        break;
      case 5:
        uint64_t result = 0x676E69727473;
        break;
      case 6:
        uint64_t result = 7107189;
        break;
      case 7:
        uint64_t result = 0x726F6C6F63;
        break;
      case 8:
        uint64_t result = 0x6567616D69;
        break;
      case 9:
        uint64_t result = 0x6F65646976;
        break;
      case 0xA:
        uint64_t result = 1953394534;
        break;
      case 0xB:
        uint64_t result = 0x616C506F65646976;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t _s8NewsFeed27FormatDerivedDataOptionTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (v5 == 1)
    {
      if (v9 == 1)
      {
        BOOL v10 = v3 == v7 && v2 == v6;
        if (v10 || (sub_1C1520A9C() & 1) != 0)
        {
          char v11 = sub_1C00E0518(v4, v8);
          char v12 = 1;
          sub_1C0387CE0(v7, v6, v8, 1);
          sub_1C0387CE0(v3, v2, v4, 1);
          sub_1C033D2B4(v3, v2, v4, 1);
          sub_1C033D2B4(v7, v6, v8, 1);
          if (v11) {
            return v12 & 1;
          }
          goto LABEL_24;
        }
        sub_1C0387CE0(v7, v6, v8, 1);
        sub_1C0387CE0(v3, v2, v4, 1);
        sub_1C033D2B4(v3, v2, v4, 1);
        uint64_t v18 = v7;
        uint64_t v19 = v6;
        uint64_t v20 = v8;
        char v21 = 1;
LABEL_23:
        sub_1C033D2B4(v18, v19, v20, v21);
LABEL_24:
        char v12 = 0;
        return v12 & 1;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_22:
      sub_1C0387CE0(v7, v6, v8, v9);
      sub_1C033D2B4(v3, v2, v4, v5);
      uint64_t v18 = v7;
      uint64_t v19 = v6;
      uint64_t v20 = v8;
      char v21 = v9;
      goto LABEL_23;
    }
    if (v9 != 2 || (v6 | v7 | v8) != 0) {
      goto LABEL_22;
    }
    sub_1C033D2B4(*(void *)a1, v2, v4, 2);
    sub_1C033D2B4(0, 0, 0, 2);
    char v12 = 1;
  }
  else
  {
    if (*(unsigned char *)(a2 + 24)) {
      goto LABEL_22;
    }
    uint64_t v13 = FormatOptionType.rawValue.getter();
    uint64_t v15 = v14;
    if (v13 == FormatOptionType.rawValue.getter() && v15 == v16) {
      char v12 = 1;
    }
    else {
      char v12 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C033D2B4(v3, v2, v4, 0);
    sub_1C033D2B4(v7, v6, v8, 0);
  }
  return v12 & 1;
}

uint64_t destroy for FormatDerivedDataOptionType(uint64_t a1)
{
  return sub_1C033D2B4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatDerivedDataOptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0387CE0(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataOptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C0387CE0(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C033D2B4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataOptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C033D2B4(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1C0C4AF10(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C0C4AF28(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionType()
{
  return &type metadata for FormatDerivedDataOptionType;
}

uint64_t sub_1C0C4AF54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  char v11 = *((unsigned char *)a2 + 40);
  swift_bridgeObjectRetain();
  sub_1C0387CE0(v8, v9, v10, v11);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = a2[6];
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v16 = *(void *)(v15 - 8);
  long long v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (!v17(v14, 1, v15))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v24 = sub_1C151928C();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      v25(v13, v14, v24);
      sub_1BFF05D18();
      uint64_t v27 = v26;
      v25(&v13[*(int *)(v26 + 48)], &v14[*(int *)(v26 + 48)], v24);
      uint64_t v23 = *(int *)(v27 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v31 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v13, v14, v31);
        goto LABEL_11;
      }
      uint64_t v21 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v13, v14, v21);
      sub_1C015F8A0();
      uint64_t v23 = *(int *)(v22 + 48);
    }
    long long v28 = &v13[v23];
    uint64_t v29 = &v14[v23];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)long long v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    return a1;
  }
  sub_1C0178190();
  memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  return a1;
}

uint64_t sub_1C0C4B244(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_1C033D2B4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result) {
    return result;
  }
  type metadata accessor for FormatVersionRequirement.Value(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v9 = sub_1C151928C();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v4, v9);
      sub_1BFF05D18();
      v10(v4 + *(int *)(v11 + 48), v9);
      break;
    case 1:
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v4, v12);
      sub_1C015F8A0();
      break;
    case 0:
      uint64_t v7 = sub_1C151928C();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v4, v7);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C4B438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_1C0387CE0(v7, v8, v9, v10);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (!v16(v13, 1, v14))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = sub_1C151928C();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      v23(v12, v13, v22);
      sub_1BFF05D18();
      uint64_t v25 = v24;
      v23(&v12[*(int *)(v24 + 48)], &v13[*(int *)(v24 + 48)], v22);
      uint64_t v21 = *(int *)(v25 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v29 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v12, v13, v29);
        goto LABEL_9;
      }
      uint64_t v19 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
      sub_1C015F8A0();
      uint64_t v21 = *(int *)(v20 + 48);
    }
    uint64_t v26 = &v12[v21];
    uint64_t v27 = &v13[v21];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    return a1;
  }
  sub_1C0178190();
  memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  return a1;
}

uint64_t sub_1C0C4B6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  sub_1C0387CE0(v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  char v13 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  sub_1C033D2B4(v10, v11, v12, v13);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v8) = v19(v15, 1, v17);
  int v20 = v19(v16, 1, v17);
  if (v8)
  {
    if (!v20)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v32 = sub_1C151928C();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        v33(v15, v16, v32);
        sub_1BFF05D18();
        uint64_t v35 = v34;
        v33(&v15[*(int *)(v34 + 48)], &v16[*(int *)(v34 + 48)], v32);
        uint64_t v24 = *(int *)(v35 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v38 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v15, v16, v38);
          goto LABEL_17;
        }
        uint64_t v22 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v15, v16, v22);
        sub_1C015F8A0();
        uint64_t v24 = *(int *)(v23 + 48);
      }
      unint64_t v36 = &v15[v24];
      id v37 = &v16[v24];
      *(void *)unint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = *((void *)v37 + 1);
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      return a1;
    }
    goto LABEL_8;
  }
  if (v20)
  {
    sub_1C0C4BB9C((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
LABEL_8:
    sub_1C0178190();
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1C0C4BB9C((uint64_t)v15, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2)
    {
      uint64_t v40 = sub_1C151928C();
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      v41(v15, v16, v40);
      sub_1BFF05D18();
      uint64_t v43 = v42;
      v41(&v15[*(int *)(v42 + 48)], &v16[*(int *)(v42 + 48)], v40);
      uint64_t v44 = *(int *)(v43 + 64);
      uint64_t v45 = &v15[v44];
      uint64_t v46 = &v16[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = *((void *)v46 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v26 == 1)
      {
        uint64_t v27 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v15, v16, v27);
        sub_1C015F8A0();
        uint64_t v29 = *(int *)(v28 + 48);
        uint64_t v30 = &v15[v29];
        uint64_t v31 = &v16[v29];
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = *((void *)v31 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v47 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v15, v16, v47);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0C4BB9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0C4BBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  uint64_t v8 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = sub_1C151928C();
      int v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v20(v6, v7, v15);
      sub_1BFF05D18();
      uint64_t v17 = v16;
      v20(&v6[*(int *)(v16 + 48)], &v7[*(int *)(v16 + 48)], v15);
      uint64_t v14 = *(int *)(v17 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v18 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v6, v7, v18);
        goto LABEL_9;
      }
      uint64_t v12 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v6, v7, v12);
      sub_1C015F8A0();
      uint64_t v14 = *(int *)(v13 + 48);
    }
    *(_OWORD *)&v6[v14] = *(_OWORD *)&v7[v14];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    return a1;
  }
  sub_1C0178190();
  memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1C0C4BE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v7;
  char v12 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1C033D2B4(v9, v10, v11, v12);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v29 = sub_1C151928C();
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
        v39(v14, v15, v29);
        sub_1BFF05D18();
        uint64_t v31 = v30;
        v39(&v14[*(int *)(v30 + 48)], &v15[*(int *)(v30 + 48)], v29);
        uint64_t v24 = *(int *)(v31 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v32 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v14, v15, v32);
          goto LABEL_17;
        }
        uint64_t v22 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v14, v15, v22);
        sub_1C015F8A0();
        uint64_t v24 = *(int *)(v23 + 48);
      }
      *(_OWORD *)&v14[v24] = *(_OWORD *)&v15[v24];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      return a1;
    }
    goto LABEL_8;
  }
  if (v20)
  {
    sub_1C0C4BB9C((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
LABEL_8:
    sub_1C0178190();
    memcpy(v14, v15, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1C0C4BB9C((uint64_t)v14, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 2)
    {
      uint64_t v34 = sub_1C151928C();
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32);
      v35(v14, v15, v34);
      sub_1BFF05D18();
      uint64_t v37 = v36;
      v35(&v14[*(int *)(v36 + 48)], &v15[*(int *)(v36 + 48)], v34);
      *(_OWORD *)&v14[*(int *)(v37 + 64)] = *(_OWORD *)&v15[*(int *)(v37 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v26 == 1)
      {
        uint64_t v27 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v14, v15, v27);
        sub_1C015F8A0();
        *(_OWORD *)&v14[*(int *)(v28 + 48)] = *(_OWORD *)&v15[*(int *)(v28 + 48)];
      }
      else
      {
        uint64_t v38 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v14, v15, v38);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0C4C2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C4C2C8);
}

uint64_t sub_1C0C4C2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C0178190();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0C4C378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C4C38C);
}

uint64_t sub_1C0C4C38C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C0178190();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataOption()
{
  uint64_t result = qword_1EA1A4DA0;
  if (!qword_1EA1A4DA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0C4C480()
{
  sub_1C0178190();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataOptionType.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    _OWORD *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C4C5FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionType.CodingType()
{
  return &type metadata for FormatDerivedDataOptionType.CodingType;
}

unint64_t sub_1C0C4C638()
{
  unint64_t result = qword_1EA1A4DB0;
  if (!qword_1EA1A4DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4DB0);
  }
  return result;
}

unint64_t sub_1C0C4C68C()
{
  unint64_t result = qword_1EA1A4DB8;
  if (!qword_1EA1A4DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4DB8);
  }
  return result;
}

BOOL sub_1C0C4C6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0164B28();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0178190();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v33 - v16;
  MEMORY[0x1F4188790](v18);
  int v20 = (char *)&v33 - v19;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v21 = sub_1C1520A9C(), result = 0, (v21 & 1) != 0))
  {
    uint64_t v23 = *(void *)(a1 + 32);
    char v24 = *(unsigned char *)(a1 + 40);
    long long v38 = *(_OWORD *)(a1 + 16);
    uint64_t v39 = v23;
    char v40 = v24;
    uint64_t v25 = *(void *)(a2 + 32);
    char v26 = *(unsigned char *)(a2 + 40);
    long long v35 = *(_OWORD *)(a2 + 16);
    uint64_t v36 = v25;
    char v37 = v26;
    if ((_s8NewsFeed27FormatDerivedDataOptionTypeO2eeoiySbAC_ACtFZ_0((uint64_t)&v38, (uint64_t)&v35) & 1) != 0
      && (sub_1C00E1C28(*(void *)(a1 + 48), *(void *)(a2 + 48)) & 1) != 0)
    {
      uint64_t v34 = v7;
      uint64_t v27 = v5;
      uint64_t v28 = type metadata accessor for FormatDerivedDataOption();
      sub_1C0C4CC5C(a1 + *(int *)(v28 + 28), (uint64_t)v20, (uint64_t (*)(void))sub_1C0178190);
      sub_1C0C4CC5C(a2 + *(int *)(v28 + 28), (uint64_t)v17, (uint64_t (*)(void))sub_1C0178190);
      uint64_t v29 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_1C0C4CC5C((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(void))sub_1C0178190);
      sub_1C0C4CC5C((uint64_t)v17, v29, (uint64_t (*)(void))sub_1C0178190);
      uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
      if (v30((uint64_t)v11, 1, v4) == 1)
      {
        sub_1C0C4BB9C((uint64_t)v17, (uint64_t (*)(void))sub_1C0178190);
        sub_1C0C4BB9C((uint64_t)v20, (uint64_t (*)(void))sub_1C0178190);
        if (v30(v29, 1, v4) == 1)
        {
          sub_1C0C4BB9C((uint64_t)v11, (uint64_t (*)(void))sub_1C0178190);
          return 1;
        }
      }
      else
      {
        sub_1C0C4CC5C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))sub_1C0178190);
        if (v30(v29, 1, v4) != 1)
        {
          uint64_t v31 = (uint64_t)v34;
          sub_1C0C4CBF4(v29, (uint64_t)v34, type metadata accessor for FormatVersionRequirement);
          char v32 = sub_1C02F0BB4((uint64_t)v14, v31);
          sub_1C0C4BB9C(v31, type metadata accessor for FormatVersionRequirement);
          sub_1C0C4BB9C((uint64_t)v17, (uint64_t (*)(void))sub_1C0178190);
          sub_1C0C4BB9C((uint64_t)v20, (uint64_t (*)(void))sub_1C0178190);
          sub_1C0C4BB9C((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
          sub_1C0C4BB9C((uint64_t)v11, (uint64_t (*)(void))sub_1C0178190);
          return (v32 & 1) != 0;
        }
        sub_1C0C4BB9C((uint64_t)v17, (uint64_t (*)(void))sub_1C0178190);
        sub_1C0C4BB9C((uint64_t)v20, (uint64_t (*)(void))sub_1C0178190);
        sub_1C0C4BB9C((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
      }
      sub_1C0C4BB9C((uint64_t)v11, (uint64_t (*)(void))sub_1C0164B28);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C0C4CB4C()
{
  unint64_t result = qword_1EA1A4DC8;
  if (!qword_1EA1A4DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4DC8);
  }
  return result;
}

unint64_t sub_1C0C4CBA0()
{
  unint64_t result = qword_1EA1A4DD0;
  if (!qword_1EA1A4DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4DD0);
  }
  return result;
}

uint64_t sub_1C0C4CBF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C4CC5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C0C4CCC4()
{
  unint64_t result = qword_1EA1A4DF0;
  if (!qword_1EA1A4DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4DF0);
  }
  return result;
}

uint64_t sub_1C0C4CD18(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFFF7CA0(255, &qword_1EA1A4DD8, (uint64_t)&type metadata for FormatDerivedDataOptionReference, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C4CDA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatVersionRequirement(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C4CDEC()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0C4CE38(uint64_t a1)
{
  sub_1BFFF7CA0(0, &qword_1EA1A4E00, (uint64_t)&type metadata for AnyFormatSelectorValue, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0C4CEB8(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataOption.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    _OWORD *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C4CFD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOption.CodingKeys()
{
  return &type metadata for FormatDerivedDataOption.CodingKeys;
}

unint64_t sub_1C0C4D014()
{
  unint64_t result = qword_1EA1A4E08;
  if (!qword_1EA1A4E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E08);
  }
  return result;
}

unint64_t sub_1C0C4D06C()
{
  unint64_t result = qword_1EA1A4E10;
  if (!qword_1EA1A4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E10);
  }
  return result;
}

unint64_t sub_1C0C4D0C4()
{
  unint64_t result = qword_1EA1A4E18;
  if (!qword_1EA1A4E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E18);
  }
  return result;
}

uint64_t sub_1C0C4D118(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1615740)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t FormatArticle.selectors.getter()
{
  return sub_1BFC893A4();
}

uint64_t FormatArticle.properties.getter()
{
  return sub_1BFC893A4();
}

uint64_t FormatArticle.__allocating_init(identifier:overrides:selectors:properties:alternate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BFE0B61C(a3, v13);
  uint64_t v14 = (void *)(v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
  swift_beginAccess();
  *uint64_t v14 = a4;
  uint64_t v15 = (void *)(v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
  swift_beginAccess();
  *uint64_t v15 = a5;
  *(void *)(v12 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = a6;
  return v12;
}

uint64_t sub_1C0C4D3DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFE0B70C(0, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v9 - v5;
  uint64_t v7 = *a1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BFE0B824(v7, (uint64_t)v6);
  return sub_1BFE0B61C((uint64_t)v6, a2);
}

uint64_t sub_1C0C4D4C4(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE0CA04(a1, (uint64_t)v6);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1C0C4D7E4((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t FormatArticle.overrides.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1C0C4D7E4(a1, v3);
  return swift_endAccess();
}

uint64_t (*FormatArticle.overrides.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatArticle.selectors.setter(uint64_t a1)
{
  return sub_1C036B7AC(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
}

uint64_t (*FormatArticle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatArticle.properties.setter(uint64_t a1)
{
  return sub_1C036B7AC(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
}

uint64_t (*FormatArticle.properties.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatArticle.alternate.getter()
{
  return swift_retain();
}

uint64_t FormatArticle.init(identifier:overrides:selectors:properties:alternate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v11 = v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BFE0B61C(a3, v11);
  uint64_t v12 = (void *)(v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
  swift_beginAccess();
  *uint64_t v12 = a4;
  uint64_t v13 = (void *)(v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
  swift_beginAccess();
  *uint64_t v13 = a5;
  *(void *)(v6 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = a6;
  return v6;
}

uint64_t sub_1C0C4D7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatArticleOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FormatArticle.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatArticle.init(from:)(a1);
  return v2;
}

uint64_t sub_1C0C4D898(uint64_t a1)
{
  sub_1BFE0B70C(0, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0C4D940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C4E4D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C4D968(uint64_t a1)
{
  unint64_t v2 = sub_1BFE0B7D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C4D9A4(uint64_t a1)
{
  unint64_t v2 = sub_1BFE0B7D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatArticle.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C0C4D898(v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t FormatArticle.__deallocating_deinit()
{
  FormatArticle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatArticle.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v25 = *v3;
  char v26 = v2;
  sub_1BFE0B70C(0, &qword_1EB888B48, (uint64_t (*)(void))sub_1C0067A40, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v25 - v6);
  sub_1BFE0B70C(0, (unint64_t *)&unk_1EB85E0F8, (uint64_t (*)(void))sub_1BFE0B7D0, (uint64_t)&type metadata for FormatArticle.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFE0B7D0();
  uint64_t v13 = v3;
  sub_1C1520F0C();
  char v30 = 0;
  uint64_t v14 = v26;
  sub_1C15207CC();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v16 = (uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BFE0B824(v16, (uint64_t)v7);
  if (qword_1EB88A568 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for FormatArticleOverrides();
  uint64_t v18 = (void *)__swift_project_value_buffer(v17, (uint64_t)qword_1EB88A548);
  if (!_s8NewsFeed22FormatArticleOverridesV2eeoiySbAC_ACtFZ_0(v7, v18))
  {
    char v29 = 1;
    sub_1C0C4E17C();
    sub_1BFE0B680(&qword_1EB866FF0, (void (*)(uint64_t))type metadata accessor for FormatArticleOverrides);
    sub_1C1520BAC();
  }
  sub_1C0C4D898((uint64_t)v7);
  uint64_t v19 = (void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
  swift_beginAccess();
  uint64_t v20 = *v19;
  if (*(void *)(*v19 + 16))
  {
    char v26 = v3;
    char v31 = 2;
    swift_bridgeObjectRetain_n();
    char v21 = sub_1BFE71F8C(v20);
    swift_bridgeObjectRelease();
    uint64_t v28 = v21;
    swift_retain();
    sub_1BFD8BB48((uint64_t *)&v28);
    swift_release();
    uint64_t v27 = (uint64_t)v28;
    sub_1C0C4E17C();
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
    sub_1BFD8BA00();
    sub_1C1520BAC();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v13 = v26;
  }
  uint64_t v22 = (void *)((char *)v13 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
  swift_beginAccess();
  uint64_t v23 = *v22;
  if (*(void *)(*v22 + 16))
  {
    char v31 = 3;
    uint64_t v28 = (void *)v23;
    sub_1C0C4E17C();
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
    sub_1BFDB23BC((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
    char v24 = v12;
    sub_1C1520BAC();
  }
  else
  {
    char v24 = v12;
  }
  uint64_t v28 = *(void **)((char *)v13 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
  char v31 = 4;
  sub_1BFE0B680(&qword_1EB85D0F0, (void (*)(uint64_t))type metadata accessor for FormatArticle);
  sub_1C152078C();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v24, v9);
}

uint64_t sub_1C0C4E088(void *a1)
{
  return FormatArticle.encode(to:)(a1);
}

uint64_t sub_1C0C4E0AC(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed13FormatArticleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t FormatArticle.debugDescription.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C0C4E158()
{
  return FormatArticle.debugDescription.getter();
}

unint64_t sub_1C0C4E17C()
{
  unint64_t result = qword_1EB86B898;
  if (!qword_1EB86B898)
  {
    sub_1BFE0B70C(255, (unint64_t *)&unk_1EB85E0F8, (uint64_t (*)(void))sub_1BFE0B7D0, (uint64_t)&type metadata for FormatArticle.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B898);
  }
  return result;
}

uint64_t sub_1C0C4E20C(void *a1)
{
  a1[1] = sub_1BFE0B680(&qword_1EB874340, (void (*)(uint64_t))type metadata accessor for FormatArticle);
  a1[2] = sub_1BFE0B680(&qword_1EB85D0F0, (void (*)(uint64_t))type metadata accessor for FormatArticle);
  uint64_t result = sub_1BFE0B680(&qword_1EA1A4E20, (void (*)(uint64_t))type metadata accessor for FormatArticle);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0C4E2C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors, a2);
}

uint64_t sub_1C0C4E2CC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
}

uint64_t sub_1C0C4E2EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties, a2);
}

uint64_t sub_1C0C4E2F8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C036B738(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
}

uint64_t sub_1C0C4E318()
{
  return type metadata accessor for FormatArticle();
}

uint64_t method lookup function for FormatArticle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatArticle);
}

uint64_t dispatch thunk of FormatArticle.__allocating_init(identifier:overrides:selectors:properties:alternate:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FormatArticle.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for FormatArticle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    _OWORD *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C4E440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatArticle.CodingKeys()
{
  return &type metadata for FormatArticle.CodingKeys;
}

unint64_t sub_1C0C4E47C()
{
  unint64_t result = qword_1EA1A4E28;
  if (!qword_1EA1A4E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E28);
  }
  return result;
}

uint64_t sub_1C0C4E4D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74616E7265746C61 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t FormatGroupPriority.rawValue.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7827308;
      break;
    case 2:
      uint64_t result = 1751607656;
      break;
    case 3:
      uint64_t result = 0x756F72636964756CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0C4E788()
{
  unint64_t result = qword_1EA1A4E30;
  if (!qword_1EA1A4E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E30);
  }
  return result;
}

uint64_t sub_1C0C4E7DC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C4E8A0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C4E94C()
{
  return sub_1C1520E0C();
}

void sub_1C0C4EA0C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7827308;
      goto LABEL_3;
    case 2:
      *a1 = 1751607656;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x756F72636964756CLL;
      a1[1] = 0xE900000000000073;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C0C4EA90(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0C4EAC0();
  unint64_t result = sub_1BFC5012C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0C4EAC0()
{
  unint64_t result = qword_1EA1A4E38;
  if (!qword_1EA1A4E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E38);
  }
  return result;
}

uint64_t sub_1C0C4EB14(unsigned __int8 *a1, char *a2)
{
  return sub_1C1489C80(*a1, *a2);
}

unint64_t sub_1C0C4EB20(uint64_t a1)
{
  unint64_t result = sub_1C0C4EB48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C4EB48()
{
  unint64_t result = qword_1EA1A4E40;
  if (!qword_1EA1A4E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E40);
  }
  return result;
}

unint64_t sub_1C0C4EB9C(void *a1)
{
  a1[1] = sub_1BFDCA258();
  a1[2] = sub_1C04A7CC8();
  unint64_t result = sub_1C0C4E788();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0C4EBD4(void *a1)
{
  return FormatGroupPriority.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatGroupPriority()
{
  return &type metadata for FormatGroupPriority;
}

uint64_t dispatch thunk of FeedItemLayoutAttributesDebuggable.groupLayoutKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FeedPuzzleRankState.rawState.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  uint64_t v3 = *MEMORY[0x1E4FABFF8];
  uint64_t v4 = sub_1C151A7DC();
  uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  return v5(a1, v3, v4);
}

BOOL static FeedPuzzleRankState.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C0C4ECCC@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  uint64_t v3 = *MEMORY[0x1E4FABFF8];
  uint64_t v4 = sub_1C151A7DC();
  uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  return v5(a1, v3, v4);
}

uint64_t getEnumTagSinglePayload for FormatLayoutOption(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

char *sub_1C0C4ED68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a3)
  {
    uint64_t v11 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v37.receiver = v10;
  v37.super_class = ObjectType;
  uint64_t v12 = (char *)objc_msgSendSuper2(&v37, sel_initWithStyle_reuseIdentifier_, a1, v11);

  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label];
  uint64_t v15 = v12;
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v16 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v16, sel_addSubview_, v14);

  uint64_t v17 = self;
  sub_1BFE4DBE0();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C15418C0;
  id v19 = objc_msgSend(*(id *)&v12[v13], sel_topAnchor);
  id v20 = objc_msgSend(v15, sel_contentView);
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v18 + 32) = v22;
  id v23 = objc_msgSend(*(id *)&v12[v13], sel_leadingAnchor);
  id v24 = objc_msgSend(v15, sel_contentView);
  id v25 = objc_msgSend(v24, sel_leadingAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(void *)(v18 + 40) = v26;
  id v27 = objc_msgSend(*(id *)&v12[v13], sel_trailingAnchor);
  id v28 = objc_msgSend(v15, sel_contentView);
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v18 + 48) = v30;
  id v31 = objc_msgSend(*(id *)&v12[v13], sel_bottomAnchor);
  id v32 = objc_msgSend(v15, sel_contentView);
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(void *)(v18 + 56) = v34;
  sub_1C151EBEC();
  sub_1C03767D0();
  long long v35 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_activateConstraints_, v35);

  return v15;
}

uint64_t type metadata accessor for DebugFormatUploadDiffTableViewCell()
{
  return self;
}

uint64_t FormatWebEmbedBinding.SourceItemTip.tipSource(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = a1 + *(int *)(type metadata accessor for FeedWebEmbed() + 52);
  sub_1C0AC3DFC(v14, (uint64_t)v13, (uint64_t (*)(void))sub_1BFECFC20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    uint64_t v15 = (uint64_t (*)(void))sub_1BFECFC20;
    uint64_t v16 = (uint64_t)v13;
LABEL_5:
    sub_1C0AC3E64(v16, v15);
LABEL_6:
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    uint64_t v18 = v17;
    sub_1C0AC3DFC(v14, (uint64_t)v10, (uint64_t (*)(void))sub_1BFECFC20);
    uint64_t v19 = sub_1C151E6AC();
    *uint64_t v18 = 0x65726F6373;
    v18[1] = 0xE500000000000000;
    void v18[2] = v19;
    v18[3] = v20;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  sub_1C0AC3DFC((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C0AC3E64((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v16 = (uint64_t)v13;
    uint64_t v15 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
    goto LABEL_5;
  }
  unint64_t v22 = *v7;
  sub_1C0AC3E64((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (v22 >> 61)
  {
    swift_release();
    goto LABEL_6;
  }
  swift_release();
  if (qword_1EB86C310 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C151CE3C();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB86C2F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a2, v24, v23);
}

uint64_t static FormatWebEmbedBinding.SourceItemTip.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatWebEmbedBinding.SourceItemTip.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatWebEmbedBinding.SourceItemTip.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C4F604(void *a1)
{
  return FormatWebEmbedBinding.SourceItemTip.init(from:)(a1);
}

uint64_t sub_1C0C4F61C(void *a1)
{
  return FormatWebEmbedBinding.SourceItemTip.encode(to:)(a1);
}

unint64_t sub_1C0C4F638()
{
  unint64_t result = qword_1EA1A4E50;
  if (!qword_1EA1A4E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E50);
  }
  return result;
}

unint64_t sub_1C0C4F68C(uint64_t a1)
{
  unint64_t result = sub_1C0C4F6B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C4F6B4()
{
  unint64_t result = qword_1EA1A4E58;
  if (!qword_1EA1A4E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E58);
  }
  return result;
}

unint64_t sub_1C0C4F708(void *a1)
{
  a1[1] = sub_1C088A33C();
  a1[2] = sub_1C08EFAFC();
  unint64_t result = sub_1C0C4F638();
  a1[3] = result;
  return result;
}

unsigned char *_s13SourceItemTipOwst_1(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        _OWORD *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      _OWORD *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0C4F7DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.SourceItemTip()
{
  return &type metadata for FormatWebEmbedBinding.SourceItemTip;
}

uint64_t FormatOrExpression.lhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatOrExpression.rhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1C0C4F834(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  sub_1BFF81FF0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = a3(a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if (v15) {
    char v16 = 1;
  }
  else {
    char v16 = a5(a1, v14);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

uint64_t sub_1C0C4F974(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (a3()) {
    return 1;
  }
  else {
    return a5(a1) & 1;
  }
}

uint64_t sub_1C0C4F9D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, __n128), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  sub_1BFF81FF0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = a3(a1, a2, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if (v15) {
    char v16 = 1;
  }
  else {
    char v16 = a5(a1, v14);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

unint64_t sub_1C0C4FB18(uint64_t a1)
{
  unint64_t result = sub_1C0C4FB40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C4FB40()
{
  unint64_t result = qword_1EA1A4E60;
  if (!qword_1EA1A4E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E60);
  }
  return result;
}

unint64_t sub_1C0C4FB94(void *a1)
{
  a1[1] = sub_1BFE6627C();
  a1[2] = sub_1BFE3F7B8();
  unint64_t result = sub_1C0C4FBCC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C4FBCC()
{
  unint64_t result = qword_1EA1A4E68;
  if (!qword_1EA1A4E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E68);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOrExpression()
{
  return &type metadata for FormatOrExpression;
}

void FormatColorComponentExpression.component.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void FormatColorComponentExpression.operator.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

double FormatColorComponentExpression.value.getter()
{
  return *(double *)(v0 + 8);
}

BOOL _s8NewsFeed30FormatColorComponentExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  double v3 = *(double *)(a2 + 8);
  if ((sub_1C1478790(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  unint64_t v4 = FormatOperator.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == FormatOperator.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v9 & 1) == 0) {
      return result;
    }
  }
  return v2 == v3;
}

unint64_t sub_1C0C4FD38(uint64_t a1)
{
  unint64_t result = sub_1C0C4FD60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C4FD60()
{
  unint64_t result = qword_1EA1A4E70;
  if (!qword_1EA1A4E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E70);
  }
  return result;
}

unint64_t sub_1C0C4FDB4(void *a1)
{
  a1[1] = sub_1BFD55E34();
  a1[2] = sub_1BFD4DB38();
  unint64_t result = sub_1C0C4FDEC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C4FDEC()
{
  unint64_t result = qword_1EA1A4E78;
  if (!qword_1EA1A4E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4E78);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatColorAssignComponentProcessor(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && a1[16]) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 7;
  int v5 = v3 - 7;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatColorComponentExpression()
{
  return &type metadata for FormatColorComponentExpression;
}

unint64_t sub_1C0C4FE94@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2 = *a1;
  *a2 = v2;
  return sub_1BFE6FA30(v2);
}

unint64_t sub_1C0C4FEA0@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2 = *a1;
  *a2 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t static FormatCodingStrategy<>.decode(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = *(void *)(a5 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 72))(a1, a4, v13);
  if (result) {
    return static FormatCodingStrategy.encode<A>(_:into:forKey:)(a1, v6, a2, a4, a3, v13, WitnessTable);
  }
  return result;
}

{
  uint64_t v5;
  uint64_t WitnessTable;

  uint64_t WitnessTable = swift_getWitnessTable();
  return static FormatCodingStrategy.encode<A>(_:into:forKey:)(a1, v5, a2, a4, a3, a5, WitnessTable);
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v12 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v9 = (char *)&v11 - v8;
  uint64_t result = static FormatCodingDefaultStrategy.decodeOrDefault<A>(from:forKey:)(a1, a2, (uint64_t)&v11 - v8);
  if (!v3) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12, v9, AssociatedTypeWitness);
  }
  return result;
}

{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  uint64_t v12 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v9 = (char *)&v11 - v8;
  uint64_t result = static FormatCodingStrategy.decode<A>(from:forKey:)(a1, a2, (uint64_t)&v11 - v8);
  if (!v3) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v12, v9, AssociatedTypeWitness);
  }
  return result;
}

uint64_t static FormatCodingDefault<>.== infix(_:_:)()
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0C50358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  int v8 = *(unsigned __int8 *)(a1 + 50);
  int v9 = *(unsigned __int16 *)(a1 + 48);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(unsigned char *)(a2 + 50) = v8;
  *(_WORD *)(a2 + 48) = v9;
  return sub_1BFF2B090(v3, v2, v4, v5, v6, v7, v9 | (v8 << 16));
}

uint64_t sub_1C0C5038C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  int v8 = *(unsigned __int8 *)(a1 + 50);
  int v9 = *(unsigned __int16 *)(a1 + 48);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(unsigned char *)(a2 + 50) = v8;
  *(_WORD *)(a2 + 48) = v9;
  return sub_1BFF2B090(v3, v2, v4, v5, v6, v7, v9 | (v8 << 16));
}

unint64_t sub_1C0C503E4@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1BFF8401C(v3, v2);
}

unint64_t sub_1C0C503F4@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1BFF8401C(v3, v2);
}

uint64_t sub_1C0C50428@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1C05D8AD4(v3);
}

uint64_t sub_1C0C50438@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1C05D8AD4(v3);
}

uint64_t sub_1C0C5046C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static FormatCodingStrategy<>.decode(rawValue:)(a1, a2);
}

uint64_t sub_1C0C50484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, type metadata accessor for FormatCompilerOptions.Newsroom);
}

uint64_t sub_1C0C504B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, type metadata accessor for FormatCompilerOptions.Newsroom);
}

uint64_t sub_1C0C504F4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2 = *(_WORD *)(result + 8);
  *(void *)a2 = *(void *)result;
  *(_WORD *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1C0C50508@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C0C50518@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C0C5053C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C50548@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C0C50558@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C0C5057C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 4);
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(unsigned char *)(a2 + 4) = v2;
  return result;
}

uint64_t sub_1C0C50590@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0C505EC(a1, (uint64_t (*)(uint64_t))sub_1BFE94AB4, a2);
}

uint64_t sub_1C0C505A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0C50634(a1, (uint64_t (*)(uint64_t))sub_1BFE94AB4, a2);
}

uint64_t sub_1C0C505D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0C505EC(a1, (uint64_t (*)(uint64_t))sub_1C00F64A4, a2);
}

uint64_t sub_1C0C505EC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  *(void *)a3 = *a1;
  *(void *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 16) = v5;
  return a2(v4);
}

uint64_t sub_1C0C50608@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0C50634(a1, (uint64_t (*)(uint64_t))sub_1C00F64A4, a2);
}

uint64_t sub_1C0C50634@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  *(void *)a3 = *a1;
  *(void *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 16) = v5;
  return a2(v4);
}

uint64_t sub_1C0C50674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, type metadata accessor for FormatPuzzleType.Overrides);
}

uint64_t sub_1C0C506A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, type metadata accessor for FormatPuzzleType.Overrides);
}

uint64_t sub_1C0C506E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

uint64_t sub_1C0C50714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

uint64_t sub_1C0C50754@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v2 = a1[5];
  long long v3 = a1[7];
  long long v19 = a1[6];
  long long v20 = v3;
  long long v4 = a1[7];
  long long v21 = a1[8];
  long long v5 = a1[1];
  long long v6 = a1[3];
  long long v15 = a1[2];
  long long v7 = v15;
  long long v16 = v6;
  long long v8 = a1[3];
  long long v9 = a1[5];
  long long v17 = a1[4];
  long long v10 = v17;
  long long v18 = v9;
  long long v11 = a1[1];
  v14[0] = *a1;
  long long v12 = v14[0];
  v14[1] = v11;
  a2[6] = v19;
  a2[7] = v4;
  a2[8] = a1[8];
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v2;
  *a2 = v12;
  a2[1] = v5;
  return sub_1C0153E30((uint64_t)v14);
}

uint64_t sub_1C0C507C8@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v2 = a1[5];
  long long v3 = a1[7];
  long long v19 = a1[6];
  long long v20 = v3;
  long long v4 = a1[7];
  long long v21 = a1[8];
  long long v5 = a1[1];
  long long v6 = a1[3];
  long long v15 = a1[2];
  long long v7 = v15;
  long long v16 = v6;
  long long v8 = a1[3];
  long long v9 = a1[5];
  long long v17 = a1[4];
  long long v10 = v17;
  long long v18 = v9;
  long long v11 = a1[1];
  v14[0] = *a1;
  long long v12 = v14[0];
  v14[1] = v11;
  a2[6] = v19;
  a2[7] = v4;
  a2[8] = a1[8];
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v2;
  *a2 = v12;
  a2[1] = v5;
  return sub_1C0153E30((uint64_t)v14);
}

void sub_1C0C5084C()
{
}

void static FormatCodingTransformStrategy.defaultValue.getter()
{
}

void sub_1C0C508D4()
{
}

void static FormatCodingTransformStrategy.shouldEncode(wrappedValue:)()
{
}

void sub_1C0C5098C()
{
}

void sub_1C0C509B8()
{
}

__n128 sub_1C0C509E4@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t static FormatCodingDefaultStrategy.encodeIfNotDefault<A>(_:into:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a6 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 72))(a1, a4, v13);
  if (result) {
    return static FormatCodingStrategy.encode<A>(_:into:forKey:)(a1, a2, a3, a4, a5, v13, a7);
  }
  return result;
}

uint64_t FormatCodingDefault.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t FormatCodingDefault.wrappedValue.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t (*FormatCodingDefault.wrappedValue.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatCodingDefault.init(from:)(uint64_t a1)
{
  type metadata accessor for FormatCodingDefault.Errors();
  swift_getWitnessTable();
  swift_allocError();
  *long long v2 = 1;
  swift_willThrow();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t type metadata accessor for FormatCodingDefault.Errors()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatCodingDefault.encode(to:)()
{
  return sub_1C0C50FA8();
}

uint64_t sub_1C0C50C58(uint64_t a1)
{
  return FormatCodingDefault.init(from:)(a1);
}

uint64_t sub_1C0C50C78()
{
  return sub_1C0C50FA8();
}

uint64_t FormatCodingDefault.description.getter()
{
  return 0;
}

uint64_t sub_1C0C50CF8()
{
  return static FormatCodingDefault<>.== infix(_:_:)();
}

uint64_t FormatCodingDefault<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  return sub_1C151E48C();
}

uint64_t FormatCodingDefault<>.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C50DDC()
{
  return FormatCodingDefault<>.hashValue.getter();
}

uint64_t sub_1C0C50DE4()
{
  return FormatCodingDefault<>.hash(into:)();
}

uint64_t sub_1C0C50DEC()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0C50E40@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2 = *a1;
  *a2 = v2;
  return sub_1BFF35EA4(v2);
}

unint64_t sub_1C0C50E4C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2 = *a1;
  *a2 = v2;
  return sub_1BFF35EA4(v2);
}

_DWORD *sub_1C0C50E7C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1C0C50E88()
{
}

uint64_t sub_1C0C50EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
}

uint64_t sub_1C0C50EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFE0D77C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatArticleOverrides);
}

uint64_t sub_1C0C50F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  char v9 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a2 + 56) = v9;
  return sub_1C08A7374(v3, v2, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C0C50F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  char v9 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a2 + 56) = v9;
  return sub_1C08A7374(v3, v2, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C0C50FA8()
{
  type metadata accessor for FormatCodingDefault.Errors();
  swift_getWitnessTable();
  swift_allocError();
  unsigned char *v0 = 0;
  return swift_willThrow();
}

uint64_t sub_1C0C51014()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of static FormatCodingStrategy.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of static FormatCodingStrategy.shouldEncode(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of static FormatCodingStrategy.encode(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of static FormatCodingStrategy.decode(rawValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t *sub_1C0C510C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1C0C5119C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_1C0C51218(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0C51290(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0C51308(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0C51380(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        long long v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_1C0C51530(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C0C5176CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

unsigned char *sub_1C0C51794(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C51860);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C0C51888()
{
  return swift_getWitnessTable();
}

unsigned char *sub_1C0C518A4@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BFE31C6C(a1, a2);
}

unint64_t sub_1C0C518BC@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1C0C50E4C(a1, a2);
}

uint64_t sub_1C0C518D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0C50558(a1, a2);
}

uint64_t static FormatContentSubgroupFilterRemove.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1C0C51904(uint64_t a1)
{
  unint64_t v2 = sub_1C0C51AE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C51940(uint64_t a1)
{
  unint64_t v2 = sub_1C0C51AE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterRemove.encode(to:)(void *a1)
{
  sub_1C0C51A88();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C51AE4();
  sub_1C1520F0C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1C0C51A88()
{
  if (!qword_1EA1A4F00)
  {
    sub_1C0C51AE4();
    unint64_t v0 = sub_1C152083C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A4F00);
    }
  }
}

unint64_t sub_1C0C51AE4()
{
  unint64_t result = qword_1EA1A4F08;
  if (!qword_1EA1A4F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4F08);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterRemove.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

unint64_t sub_1C0C51B60(void *a1)
{
  a1[1] = sub_1C0C51B98();
  a1[2] = sub_1C0C51BEC();
  unint64_t result = sub_1C0C51C40();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C51B98()
{
  unint64_t result = qword_1EA1A4F10;
  if (!qword_1EA1A4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4F10);
  }
  return result;
}

unint64_t sub_1C0C51BEC()
{
  unint64_t result = qword_1EA1A4F18;
  if (!qword_1EA1A4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4F18);
  }
  return result;
}

unint64_t sub_1C0C51C40()
{
  unint64_t result = qword_1EA1A4F20;
  if (!qword_1EA1A4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4F20);
  }
  return result;
}

uint64_t sub_1C0C51C94(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1C0C51CBC(void *a1)
{
  sub_1C0C51A88();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C51AE4();
  sub_1C1520F0C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRemove()
{
  return &type metadata for FormatContentSubgroupFilterRemove;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRemove.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterRemove.CodingKeys;
}

unint64_t sub_1C0C51DEC()
{
  unint64_t result = qword_1EA1A4F28;
  if (!qword_1EA1A4F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4F28);
  }
  return result;
}

unint64_t sub_1C0C51E44()
{
  unint64_t result = qword_1EA1A4F30;
  if (!qword_1EA1A4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4F30);
  }
  return result;
}

uint64_t sub_1C0C51E98(uint64_t a1)
{
  return sub_1C0C51FE0(a1, qword_1EA1A4F38);
}

uint64_t static RadarComponent.newsFeed.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C521D8(&qword_1EA194850, (uint64_t)qword_1EA1A4F38, a1);
}

uint64_t sub_1C0C51EF0(uint64_t a1)
{
  return sub_1C0C51FE0(a1, qword_1EA1A4F50);
}

uint64_t static RadarComponent.newsPersonalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C521D8(&qword_1EA194858, (uint64_t)qword_1EA1A4F50, a1);
}

uint64_t sub_1C0C51F48(uint64_t a1)
{
  return sub_1C0C51FE0(a1, qword_1EA1A4F68);
}

uint64_t static RadarComponent.newsSports.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C521D8(&qword_1EA194860, (uint64_t)qword_1EA1A4F68, a1);
}

uint64_t sub_1C0C51FA4(uint64_t a1)
{
  return sub_1C0C51FE0(a1, qword_1EA1A4F80);
}

uint64_t sub_1C0C51FE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1C151A5FC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1C151A5EC();
}

uint64_t static RadarComponent.newsNetworking.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C521D8(&qword_1EA194868, (uint64_t)qword_1EA1A4F80, a1);
}

uint64_t sub_1C0C52084()
{
  uint64_t v0 = sub_1C151A5FC();
  __swift_allocate_value_buffer(v0, qword_1EA1A4F98);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA1A4F98);
  return sub_1C151A5EC();
}

uint64_t static RadarComponent.newsAnalytics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C521D8(&qword_1EA194870, (uint64_t)qword_1EA1A4F98, a1);
}

uint64_t sub_1C0C52130()
{
  uint64_t v0 = sub_1C151A5FC();
  __swift_allocate_value_buffer(v0, qword_1EB8937F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EB8937F8);
  return sub_1C151A5EC();
}

uint64_t static RadarComponent.feedFormat.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C521D8(qword_1EB893BB8, (uint64_t)qword_1EB8937F8, a1);
}

uint64_t sub_1C0C521D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C151A5FC();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  unsigned int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

id CoverViewFollowSwitch.onTap.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap);
}

uint64_t CoverViewFollowSwitch.toggleState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  swift_beginAccess();
  uint64_t v4 = sub_1C151A17C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C0C52304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  swift_beginAccess();
  uint64_t v4 = sub_1C151A17C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1C0C5238C(uint64_t a1)
{
  uint64_t v2 = sub_1C151A17C();
  __n128 v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return CoverViewFollowSwitch.toggleState.setter((uint64_t)v5);
}

uint64_t CoverViewFollowSwitch.toggleState.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C151A17C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v7 = &v1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 24))(v7, a1, v3);
  swift_endAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == *MEMORY[0x1E4FABC70])
  {
    objc_msgSend(v1, sel_removeTarget_action_forControlEvents_, 0, 0, 0xFFFFFFFFLL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  if (v8 == *MEMORY[0x1E4FABC78])
  {
    sub_1C151C87C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  uint64_t result = sub_1C152040C();
  __break(1u);
  return result;
}

void (*CoverViewFollowSwitch.toggleState.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1C151A17C();
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1C0C52730;
}

void sub_1C0C52730(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(v3 + 48);
    uint64_t v5 = *(void *)(v3 + 32);
    uint64_t v6 = *(void *)(v3 + 40);
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 16))(v4, *(void *)(v3 + 24) + *(void *)(v3 + 56), v5);
    int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5);
    if (v7 == *MEMORY[0x1E4FABC70])
    {
      objc_msgSend(*(id *)(v3 + 24), sel_removeTarget_action_forControlEvents_, 0, 0, 0xFFFFFFFFLL);
    }
    else
    {
      if (v7 != *MEMORY[0x1E4FABC78])
      {
        sub_1C152040C();
        __break(1u);
        return;
      }
      sub_1C151C87C();
    }
  }
  free(*(void **)(v3 + 48));
  free((void *)v3);
}

char *sub_1C0C5287C(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel;
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  int v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_init);
  *(void *)&v13[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor] = 0;
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap;
  sub_1BFD22278();
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(v15), sel_init);
  long long v16 = &v13[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState];
  uint64_t v17 = *MEMORY[0x1E4FABC78];
  uint64_t v18 = sub_1C151A17C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);

  v21.receiver = v13;
  v21.super_class = ObjectType;
  long long v19 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v19, sel_addSubview_, *(void *)&v19[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel]);
  return v19;
}

void CoverViewFollowSwitch.didUpdateToggleState(toggleState:animated:)(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1C151A17C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  if (a2) {
    double v7 = 0.2;
  }
  else {
    double v7 = 0.0;
  }
  int v8 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1C0C52DFC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_48;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_animateWithDuration_animations_, v11, v7);
  _Block_release(v11);
}

uint64_t sub_1C0C52CA4(uint64_t a1)
{
  uint64_t v2 = sub_1C151A17C();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (result != *MEMORY[0x1E4FABC70] && result != *MEMORY[0x1E4FABC78])
  {
    uint64_t result = sub_1C152040C();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall CoverViewFollowSwitch.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  id v3 = objc_msgSend(v1, sel_traitCollection);
  LODWORD(isa) = objc_msgSend(v3, sel_hasDifferentColorAppearanceComparedToTraitCollection_, isa);

  if (isa)
  {
    id v4 = objc_msgSend(v1, sel_layer);
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor];
    if (v5) {
      id v6 = objc_msgSend(v5, sel_CGColor);
    }
    else {
      id v6 = 0;
    }
    id v7 = v6;
    objc_msgSend(v4, sel_setBorderColor_);
  }
}

id CoverViewFollowSwitch.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0C53038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState;
  swift_beginAccess();
  uint64_t v4 = sub_1C151A17C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

void (*sub_1C0C530C0(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CoverViewFollowSwitch.toggleState.modify(v2);
  return sub_1C02B53A8;
}

void sub_1C0C53118(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1C151A17C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  if (a2) {
    double v7 = 0.2;
  }
  else {
    double v7 = 0.0;
  }
  int v8 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1C0C52DFC;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_8;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_animateWithDuration_animations_, v11, v7);
  _Block_release(v11);
}

uint64_t sub_1C0C532F4()
{
  return type metadata accessor for CoverViewFollowSwitch();
}

uint64_t type metadata accessor for CoverViewFollowSwitch()
{
  uint64_t result = qword_1EB85D5B8;
  if (!qword_1EB85D5B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C53348()
{
  uint64_t result = sub_1C151A17C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0C533F8()
{
  uint64_t v1 = *(void *)(sub_1C151A17C() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1C0C52CA4(v2);
}

uint64_t sub_1C0C53460(char *a1, char *a2)
{
  return sub_1C147D4BC(*a1, *a2);
}

uint64_t sub_1C0C5346C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C534E8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C53550()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C535C8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0C53628(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1635017060;
  if (*v1) {
    uint64_t v2 = 0x617461646174656DLL;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0C53660()
{
  if (*v0) {
    return 0x617461646174656DLL;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1C0C53694@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0C536F8(uint64_t a1)
{
  unint64_t v2 = sub_1C0C53924();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C53734(uint64_t a1)
{
  unint64_t v2 = sub_1C0C53924();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsTaxonomyGraphResource.encode(to:)(void *a1)
{
  sub_1C0C53C60(0, &qword_1EA1A4FC8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v8 = (char *)&v12 - v7;
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C53924();
  sub_1C1520F0C();
  uint64_t v14 = v10;
  char v16 = 0;
  sub_1C0C53978();
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v14 = v13;
    uint64_t v15 = v12;
    char v16 = 1;
    sub_1C0C539CC();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C0C53924()
{
  unint64_t result = qword_1EB8683E0;
  if (!qword_1EB8683E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8683E0);
  }
  return result;
}

unint64_t sub_1C0C53978()
{
  unint64_t result = qword_1EA1A4FD0;
  if (!qword_1EA1A4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4FD0);
  }
  return result;
}

unint64_t sub_1C0C539CC()
{
  unint64_t result = qword_1EA1A4FD8;
  if (!qword_1EA1A4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4FD8);
  }
  return result;
}

uint64_t SportsTaxonomyGraphResource.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0C53C60(0, &qword_1EB86B6C8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C53924();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v15 = 0;
  sub_1C0C53CC4();
  sub_1C15206EC();
  uint64_t v10 = v14[0];
  char v15 = 1;
  sub_1C0C53D18();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = v14[0];
  uint64_t v12 = v14[1];
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0C53C60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C53924();
    unint64_t v7 = a3(a1, &type metadata for SportsTaxonomyGraphResource.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0C53CC4()
{
  unint64_t result = qword_1EB86A4D0;
  if (!qword_1EB86A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A4D0);
  }
  return result;
}

unint64_t sub_1C0C53D18()
{
  unint64_t result = qword_1EB86A4B0;
  if (!qword_1EB86A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A4B0);
  }
  return result;
}

uint64_t sub_1C0C53D6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsTaxonomyGraphResource.init(from:)(a1, a2);
}

uint64_t sub_1C0C53D84(void *a1)
{
  return SportsTaxonomyGraphResource.encode(to:)(a1);
}

uint64_t destroy for SportsDataVisualizationRecentRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed20FormatInspectionListVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatInspectionList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatInspectionList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResource()
{
  return &type metadata for SportsTaxonomyGraphResource;
}

unsigned char *storeEnumTagSinglePayload for SportsTaxonomyGraphResource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    _OWORD *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C53FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          _OWORD *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResource.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResource.CodingKeys;
}

unint64_t sub_1C0C53FE4()
{
  unint64_t result = qword_1EA1A4FE0;
  if (!qword_1EA1A4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4FE0);
  }
  return result;
}

unint64_t sub_1C0C5403C()
{
  unint64_t result = qword_1EB8683F0;
  if (!qword_1EB8683F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8683F0);
  }
  return result;
}

unint64_t sub_1C0C54094()
{
  unint64_t result = qword_1EB8683E8;
  if (!qword_1EB8683E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8683E8);
  }
  return result;
}

uint64_t FeedGroupKnobsRuleSet.value(for:)()
{
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  type metadata accessor for FeedGroupKnobsRuleSet.Selector();
  sub_1C151ED5C();
  swift_getWitnessTable();
  if (sub_1C151F15C()) {
    return swift_bridgeObjectRetain();
  }
  uint64_t v2 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v2);
  sub_1C151F04C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151E9EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t FeedGroupKnobsRuleSet.__allocating_init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t FeedGroupKnobsRuleSet.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = *(void *)(*v1 + 88);
  uint64_t v7 = *(void *)(*v1 + 96);
  uint64_t v8 = *(void *)(v4 + 104);
  uint64_t v30 = v5;
  uint64_t v31 = v6;
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  type metadata accessor for FeedGroupKnobsRuleSet.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1C152083C();
  uint64_t v23 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v22 = (char *)v18 - v10;
  uint64_t v11 = v2[3];
  uint64_t v38 = v11;
  uint64_t v30 = v5;
  uint64_t v31 = v5;
  uint64_t v32 = v6;
  uint64_t v33 = v7;
  uint64_t v34 = v8;
  uint64_t v35 = v6;
  uint64_t v25 = v7;
  uint64_t v36 = v7;
  uint64_t v37 = v8;
  uint64_t v12 = type metadata accessor for FeedGroupKnobsRuleSet.Selector();
  uint64_t v13 = sub_1C151ED5C();
  swift_getWitnessTable();
  if (sub_1C151F15C())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C1520EEC();
    uint64_t v38 = v2[2];
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v30, v33);
    sub_1C151F04C();
    uint64_t v27 = v25;
    swift_getWitnessTable();
    sub_1C1520B2C();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  }
  else
  {
    v18[1] = v12;
    uint64_t v19 = v11;
    uint64_t v20 = v13;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    char v15 = v22;
    sub_1C1520F0C();
    uint64_t v30 = v2[2];
    LOBYTE(v38) = 0;
    sub_1C151F04C();
    uint64_t v29 = v25;
    swift_getWitnessTable();
    uint64_t v16 = v24;
    uint64_t v17 = v26;
    sub_1C152080C();
    if (!v17)
    {
      uint64_t v30 = v19;
      LOBYTE(v38) = 1;
      uint64_t v28 = swift_getWitnessTable();
      swift_getWitnessTable();
      sub_1C152080C();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v15, v16);
  }
}

uint64_t FeedGroupKnobsRuleSet.init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1C0C546E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0C54734(*(void *)(v1 + 48));
  if (!result) {
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a1 = result;
  return result;
}

uint64_t sub_1C0C54734(uint64_t a1)
{
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v1 + 24);
  v13[0] = *(void *)(v1 + 16);
  v13[1] = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1BFEF53C0(v13);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 64);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1BFF36784(a1, v7);
      char v10 = sub_1BFEFAE14(v9, v7);
      swift_release();
      if (v10)
      {
        char v11 = sub_1BFEFB810(a1, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v11)
        {
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRetain();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v6 += 5;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t static FeedGroupKnobsRuleSet.== infix(_:_:)()
{
  if (sub_1C151F00C())
  {
    type metadata accessor for FeedGroupKnobsRuleSet.Selector();
    swift_getWitnessTable();
    char v0 = sub_1C151ED6C();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

void *FeedGroupKnobsRuleSet.Selector.__allocating_init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  uint64_t result = (void *)swift_allocObject();
  uint64_t v5 = *a2;
  result[3] = a2[1];
  result[4] = a1;
  result[2] = v5;
  return result;
}

void *FeedGroupKnobsRuleSet.Selector.init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  v2[3] = a2[1];
  v2[4] = a1;
  v2[2] = v3;
  return v2;
}

uint64_t FeedGroupKnobsRuleSet.Selector.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FeedGroupKnobsRuleSet.Selector.init(from:)(a1);
  return v2;
}

void *FeedGroupKnobsRuleSet.Selector.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  uint64_t v33 = v2;
  uint64_t v34 = v5;
  uint64_t v7 = *(void *)(v5 + 120);
  uint64_t v8 = *(void *)(v5 + 128);
  uint64_t v9 = *(void *)(v5 + 136);
  uint64_t v35 = *(void *)(v5 + 88);
  uint64_t v6 = v35;
  uint64_t v36 = v7;
  *(void *)&long long v37 = v8;
  *((void *)&v37 + 1) = v9;
  uint64_t v31 = sub_1C1517E6C();
  uint64_t v10 = sub_1C151FD8C();
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v28 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v32 = (char *)&v27 - v11;
  uint64_t v12 = *(void *)(v5 + 112);
  uint64_t v35 = *(void *)(v5 + 80);
  uint64_t v36 = v6;
  uint64_t v29 = v6;
  long long v37 = *(_OWORD *)(v5 + 96);
  uint64_t v38 = v12;
  uint64_t v39 = v7;
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  type metadata accessor for FeedGroupKnobsRuleSet.Selector.CodingKeys();
  swift_getWitnessTable();
  uint64_t v13 = sub_1C152072C();
  uint64_t v30 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v27 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v16 = v33;
  uint64_t v17 = (uint64_t)a1;
  sub_1C1520EBC();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v33 = v9;
    LOBYTE(v35) = 1;
    uint64_t v18 = v31;
    swift_getWitnessTable();
    uint64_t v19 = v32;
    sub_1C15205FC();
    uint64_t v20 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v28);
      uint64_t v21 = sub_1C151E31C();
    }
    else
    {
      uint64_t v23 = v31;
      unint64_t v22 = v32;
      uint64_t v21 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v23);
    }
    uint64_t v24 = v30;
    v3[4] = v21;
    char v42 = 0;
    sub_1BFE9420C();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v13);
    uint64_t v26 = v36;
    v3[2] = v35;
    v3[3] = v26;
  }
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v3;
}

uint64_t static FeedGroupKnobsRuleSet.Selector.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v2 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1C151F00C();
}

BOOL sub_1C0C54ED0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C00C2CCC(*a1, *a2);
}

uint64_t sub_1C0C54F14()
{
  return sub_1C00C2DD8();
}

uint64_t sub_1C0C54F50()
{
  return sub_1C00C2CDC();
}

uint64_t sub_1C0C54F8C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C54FE4()
{
  return sub_1C0052940(*v0);
}

uint64_t sub_1C0C55020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C01E2F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C55068@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00C51E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C550A4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0C550F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FeedGroupKnobsRuleSet.Selector.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedGroupKnobsRuleSet.Selector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FeedGroupKnobsRuleSet.Selector.encode(to:)(void *a1)
{
  BOOL v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 120);
  uint64_t v6 = *(void *)(*v2 + 128);
  uint64_t v7 = *(void *)(*v2 + 136);
  uint64_t v20 = *(void *)(*v2 + 80);
  long long v15 = *(_OWORD *)(v4 + 88);
  long long v21 = v15;
  long long v22 = *(_OWORD *)(v4 + 104);
  uint64_t v23 = v5;
  uint64_t v24 = v6;
  uint64_t v16 = v7;
  uint64_t v17 = v6;
  uint64_t v25 = v7;
  type metadata accessor for FeedGroupKnobsRuleSet.Selector.CodingKeys();
  swift_getWitnessTable();
  uint64_t v8 = sub_1C152083C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  uint64_t v12 = v2[3];
  uint64_t v20 = v2[2];
  *(void *)&long long v21 = v12;
  char v26 = 0;
  sub_1BFE79808();
  uint64_t v13 = v18;
  sub_1C152080C();
  if (!v13)
  {
    uint64_t v20 = v2[4];
    char v26 = 1;
    sub_1C151F04C();
    uint64_t v19 = v17;
    swift_getWitnessTable();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C0C5544C()
{
  uint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0C554A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = FeedGroupKnobsRuleSet.Selector.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0C554CC(void *a1)
{
  return FeedGroupKnobsRuleSet.Selector.encode(to:)(a1);
}

uint64_t sub_1C0C554F0(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupKnobsRuleSet.Selector.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0C554FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0C55570(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C0C555DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0C5564C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0C556BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0C5544C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C556F8()
{
  return sub_1C0054844(*v0);
}

uint64_t sub_1C0C5570C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0C5544C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C55740@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C00C51E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C55774(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0C557C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FeedGroupKnobsRuleSet.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedGroupKnobsRuleSet.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C55884(void *a1)
{
  return FeedGroupKnobsRuleSet.encode(to:)(a1);
}

uint64_t sub_1C0C558A8()
{
  return static FeedGroupKnobsRuleSet.== infix(_:_:)();
}

uint64_t type metadata accessor for FeedGroupKnobsRuleSet.Selector.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for FeedGroupKnobsRuleSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupKnobsRuleSet);
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.__allocating_init(value:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for FeedGroupKnobsRuleSet.Selector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupKnobsRuleSet.Selector);
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.Selector.__allocating_init(value:selector:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleSet.Selector.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unsigned char *sub_1C0C55978(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C55A44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C0C55A6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0C55A88()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0C55AA4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0C55AC0()
{
  return swift_getWitnessTable();
}

uint64_t FormatMenuGroupData.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C05DCF14(v2, v3, v4);
}

id FormatMenuGroupData.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 24);
  *(void *)a1 = v2;
  unsigned __int8 v3 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_1C05DCF2C(v2, v3);
}

uint64_t FormatMenuGroupData.style.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FormatMenuGroupData.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatMenuGroupData(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 != 255) {
    sub_1C04B5360(*(void *)a1, *(void *)(a1 + 8), v2 & 1);
  }
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 != 255) {
    sub_1C01DD018(*(void **)(a1 + 24), v3 & 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatMenuGroupData(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    char v5 = v4 & 1;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    sub_1C04B5340(*a2, v7, v4 & 1);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = v5;
  }
  uint64_t v8 = (void **)(a2 + 3);
  int v9 = *((unsigned __int8 *)a2 + 32);
  if (v9 == 255)
  {
    *(void *)(a1 + 24) = *v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  }
  else
  {
    char v10 = v9 & 1;
    uint64_t v11 = *v8;
    sub_1C01DCFFC(*v8, v9 & 1);
    *(void *)(a1 + 24) = v11;
    *(unsigned char *)(a1 + 32) = v10;
  }
  *(void *)(a1 + 40) = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatMenuGroupData(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v13 = v4 & 1;
      uint64_t v14 = *(void *)a2;
      uint64_t v15 = *((void *)a2 + 1);
      sub_1C04B5340(*(void *)a2, v15, v4 & 1);
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v15;
      *(unsigned char *)(a1 + 16) = v13;
    }
  }
  else if (v4 == 255)
  {
    sub_1C0C55DF4(a1);
    char v5 = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(unsigned char *)(a1 + 16) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    sub_1C04B5340(*(void *)a2, v9, v4 & 1);
    uint64_t v10 = *(void *)a1;
    uint64_t v11 = *(void *)(a1 + 8);
    char v12 = *(unsigned char *)(a1 + 16);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 16) = v7;
    sub_1C04B5360(v10, v11, v12);
  }
  uint64_t v16 = (void **)(a1 + 24);
  uint64_t v17 = (void **)a2 + 3;
  int v18 = *((unsigned __int8 *)a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v18 == 255)
    {
      uint64_t v20 = *v17;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *uint64_t v16 = v20;
    }
    else
    {
      char v25 = v18 & 1;
      char v26 = *v17;
      sub_1C01DCFFC(v26, v18 & 1);
      *(void *)(a1 + 24) = v26;
      *(unsigned char *)(a1 + 32) = v25;
    }
  }
  else if (v18 == 255)
  {
    sub_1C0C55E48(a1 + 24);
    char v19 = *((unsigned char *)a2 + 32);
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 32) = v19;
  }
  else
  {
    char v21 = v18 & 1;
    long long v22 = *v17;
    sub_1C01DCFFC(v22, v18 & 1);
    uint64_t v23 = *(void **)(a1 + 24);
    char v24 = *(unsigned char *)(a1 + 32);
    *(void *)(a1 + 24) = v22;
    *(unsigned char *)(a1 + 32) = v21;
    sub_1C01DD018(v23, v24);
  }
  uint64_t v27 = *((void *)a2 + 5);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 40) = v27;
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0C55DF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0C55E48(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatMenuGroupData(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 255) {
    goto LABEL_4;
  }
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 255)
  {
    sub_1C0C55DF4(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  sub_1C04B5360(v6, v7, v4 & 1);
LABEL_6:
  uint64_t v8 = (void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a1 + 32);
  if (v9 != 255)
  {
    int v10 = *(unsigned __int8 *)(a2 + 32);
    if (v10 != 255)
    {
      uint64_t v11 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = *v8;
      *(unsigned char *)(a1 + 32) = v10 & 1;
      sub_1C01DD018(v11, v9 & 1);
      goto LABEL_11;
    }
    sub_1C0C55E48(a1 + 24);
  }
  *(void *)(a1 + 24) = *v8;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_11:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenuGroupData()
{
  return &type metadata for FormatMenuGroupData;
}

uint64_t sub_1C0C55FA4(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v13 = a4;
  sub_1C0C56520(0, &qword_1EA1A5000, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C564CC();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v4)
  {
    char v14 = 1;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C0C5612C()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0C56170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C56790(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C56198(uint64_t a1)
{
  unint64_t v2 = sub_1C0C564CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C561D4(uint64_t a1)
{
  unint64_t v2 = sub_1C0C564CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C56210@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C0C562CC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1C0C56244(void *a1)
{
  return sub_1C0C55FA4(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

ValueMetadata *_s10SwitchDataVMa()
{
  return &_s10SwitchDataVN;
}

unint64_t sub_1C0C56278()
{
  unint64_t result = qword_1EA1A4FE8;
  if (!qword_1EA1A4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4FE8);
  }
  return result;
}

uint64_t sub_1C0C562CC(void *a1)
{
  sub_1C0C56520(0, &qword_1EA1A4FF0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C564CC();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    uint64_t v8 = sub_1C152069C();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_1C15206AC();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1C0C564CC()
{
  unint64_t result = qword_1EA1A4FF8;
  if (!qword_1EA1A4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4FF8);
  }
  return result;
}

void sub_1C0C56520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C564CC();
    unint64_t v7 = a3(a1, &_s10SwitchDataV10CodingKeysON, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *_s10SwitchDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C56650);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10SwitchDataV10CodingKeysOMa()
{
  return &_s10SwitchDataV10CodingKeysON;
}

unint64_t sub_1C0C5668C()
{
  unint64_t result = qword_1EA1A5008;
  if (!qword_1EA1A5008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5008);
  }
  return result;
}

unint64_t sub_1C0C566E4()
{
  unint64_t result = qword_1EA1A5010;
  if (!qword_1EA1A5010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5010);
  }
  return result;
}

unint64_t sub_1C0C5673C()
{
  unint64_t result = qword_1EA1A5018;
  if (!qword_1EA1A5018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5018);
  }
  return result;
}

uint64_t sub_1C0C56790(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C16207B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t WebEmbedDatastoreUpdate.visualization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFED38E4(v1, a1, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
}

uint64_t WebEmbedDatastoreUpdate.datastore.getter()
{
  type metadata accessor for WebEmbedDatastoreUpdate();
  return swift_retain();
}

uint64_t WebEmbedDatastoreUpdate.hash(into:)()
{
  WebEmbedDataVisualization.identifier.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t WebEmbedDatastoreUpdate.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C569A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C56A04()
{
  WebEmbedDataVisualization.identifier.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C56A54()
{
  return sub_1C1520E0C();
}

uint64_t _s8NewsFeed23WebEmbedDatastoreUpdateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDatastoreUpdate();
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v12 = v11;
  if (v10 == WebEmbedDataVisualization.identifier.getter() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    sub_1BFED38E4(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
    sub_1BFED38E4(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
  }
  else
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFED38E4(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
    sub_1BFED38E4(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
    char v15 = 0;
    if ((v14 & 1) == 0) {
      goto LABEL_12;
    }
  }
  uint64_t v16 = *(int *)(v4 + 20);
  uint64_t v17 = *(void *)&v6[v16];
  id v18 = objc_msgSend(*(id *)(*(void *)&v9[v16] + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString);
  uint64_t v19 = sub_1C151E62C();
  uint64_t v21 = v20;

  id v22 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v17
                                                              + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString));
  uint64_t v23 = sub_1C151E62C();
  uint64_t v25 = v24;

  if (v19 == v23 && v21 == v25) {
    char v15 = 1;
  }
  else {
    char v15 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  sub_1BFECFF10((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
  sub_1BFECFF10((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDatastoreUpdate);
  return v15 & 1;
}

unint64_t sub_1C0C56D18()
{
  unint64_t result = qword_1EA1A5020;
  if (!qword_1EA1A5020)
  {
    type metadata accessor for WebEmbedDatastoreUpdate();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5020);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WebEmbedDatastoreUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    type metadata accessor for WebEmbedDataVisualization();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v8 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = a2[1];
      *a1 = v8;
      a1[1] = v9;
      uint64_t v10 = type metadata accessor for GenericDataVisualization();
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v17 = (char *)a1 + v11;
      uint64_t v12 = (char *)a2 + v11;
      uint64_t v13 = sub_1C1515FDC();
      char v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v17, v12, v13);
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for WebEmbedDatastoreUpdate(uint64_t a1)
{
  type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for GenericDataVisualization() + 20);
    uint64_t v3 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

void *initializeWithCopy for WebEmbedDatastoreUpdate(void *a1, uint64_t *a2, uint64_t a3)
{
  type metadata accessor for WebEmbedDataVisualization();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = type metadata accessor for GenericDataVisualization();
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v15 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v15, v11, v12);
    *(void *)((char *)a1 + *(int *)(v9 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 24));
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

void *assignWithCopy for WebEmbedDatastoreUpdate(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFECFF10((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    type metadata accessor for WebEmbedDataVisualization();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      uint64_t v7 = type metadata accessor for GenericDataVisualization();
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v8;
      uint64_t v9 = (char *)a2 + v8;
      uint64_t v10 = sub_1C1515FDC();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v13, v9, v10);
      *(void *)((char *)a1 + *(int *)(v7 + 24)) = *(void *)((char *)a2 + *(int *)(v7 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for WebEmbedDatastoreUpdate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = type metadata accessor for GenericDataVisualization();
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(void *)((char *)a1 + *(int *)(v7 + 24)) = *(void *)((char *)a2 + *(int *)(v7 + 24));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *assignWithTake for WebEmbedDatastoreUpdate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFECFF10((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = type metadata accessor for GenericDataVisualization();
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(void *)((char *)a1 + *(int *)(v7 + 24)) = *(void *)((char *)a2 + *(int *)(v7 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebEmbedDatastoreUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C57490);
}

uint64_t sub_1C0C57490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WebEmbedDatastoreUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C57564);
}

uint64_t sub_1C0C57564(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C0C57620()
{
  uint64_t v0 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v0 - 8);
  type metadata accessor for FormatStateMachineStateStore();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t result = sub_1C1517EBC();
  *(void *)(v1 + 24) = result;
  qword_1EB93C2B0 = v1;
  return result;
}

uint64_t type metadata accessor for FormatStateMachineStateStore()
{
  return self;
}

uint64_t FormatItemNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0C5779C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1BFFA18D8(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v59 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v5 = v0[3];
  uint64_t v70 = v0[2];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v68 = v6;
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v13 = v1[10];
  uint64_t v12 = v1[11];
  int v14 = *((unsigned __int8 *)v1 + 112);
  uint64_t v15 = v1[12];
  uint64_t v71 = v1[13];
  uint64_t v69 = v5;
  uint64_t v67 = v7;
  uint64_t v66 = v8;
  uint64_t v65 = v10;
  uint64_t v64 = v11;
  int v62 = v14;
  uint64_t v61 = v15;
  uint64_t v72 = v12;
  if ((v14 & 0xFE) == 0x7E)
  {
    uint64_t v60 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v58 = v2;
    uint64_t v57 = v12 & 1;
    uint64_t v16 = v12;
    if ((~v9 & 0xF000000000000007) != 0)
    {
      uint64_t v73 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = v16;
      uint64_t v18 = v71;
      sub_1BFF8C638(v9, v8, v10, v11, v13, v20, v15, v71, v14, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
      sub_1C10E55EC(v81);
      uint64_t v19 = v81[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = v16;
      uint64_t v18 = v71;
      sub_1BFF8C638(v9, v8, v10, v11, v13, v17, v15, v71, v14, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
      uint64_t v19 = v9;
    }
    sub_1BFEF6828(v15, v18, v14);
    sub_1BFF8C638(v9, v8, v10, v11, v13, v72, v15, v18, v14, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
    uint64_t v60 = v19;
    uint64_t v72 = v57;
  }
  uint64_t v21 = v1[15];
  uint64_t v22 = v1[16];
  uint64_t v23 = v1[17];
  uint64_t v24 = v1[18];
  uint64_t v26 = v1[19];
  uint64_t v25 = v1[20];
  uint64_t v27 = v1[21];
  int v28 = *((unsigned __int8 *)v1 + 176);
  uint64_t v63 = v13;
  if (v28 == 255)
  {
    LODWORD(v58) = 255;
    uint64_t v57 = v21;
    uint64_t v56 = v22;
    uint64_t v55 = v23;
  }
  else
  {
    uint64_t v73 = v21;
    uint64_t v74 = v22;
    uint64_t v75 = v23;
    uint64_t v76 = v24;
    uint64_t v77 = v26;
    uint64_t v78 = v25;
    uint64_t v79 = v27;
    char v80 = v28;
    sub_1C14285C0((uint64_t)v81);
    uint64_t v57 = v81[0];
    uint64_t v56 = v81[1];
    uint64_t v24 = v81[3];
    uint64_t v55 = v81[2];
    uint64_t v26 = v81[4];
    uint64_t v25 = v81[5];
    uint64_t v27 = v81[6];
    LODWORD(v58) = v82;
  }
  uint64_t v29 = v59;
  sub_1BFFA1380((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v59, (uint64_t (*)(void))sub_1BFFA18D8);
  int v54 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  int v53 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  unint64_t v30 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  unint64_t v31 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
  uint64_t v32 = (void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  uint64_t v33 = *v32;
  long long v52 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
  uint64_t v51 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 16);
  uint64_t v50 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 24);
  int v49 = *(unsigned __int16 *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  uint64_t v34 = swift_allocObject();
  swift_beginAccess();
  uint64_t v35 = v69;
  *(void *)(v34 + 16) = v70;
  *(void *)(v34 + 24) = v35;
  uint64_t v36 = v67;
  *(void *)(v34 + 32) = v68;
  *(void *)(v34 + 40) = v36;
  uint64_t v37 = v66;
  *(void *)(v34 + 48) = v60;
  *(void *)(v34 + 56) = v37;
  uint64_t v38 = v64;
  *(void *)(v34 + 64) = v65;
  *(void *)(v34 + 72) = v38;
  uint64_t v39 = v72;
  *(void *)(v34 + 80) = v63;
  *(void *)(v34 + 88) = v39;
  uint64_t v40 = v71;
  *(void *)(v34 + 96) = v61;
  *(void *)(v34 + 104) = v40;
  *(unsigned char *)(v34 + 112) = v62;
  uint64_t v41 = v56;
  *(void *)(v34 + 120) = v57;
  *(void *)(v34 + 128) = v41;
  *(void *)(v34 + 136) = v55;
  *(void *)(v34 + 144) = v24;
  *(void *)(v34 + 152) = v26;
  *(void *)(v34 + 160) = v25;
  *(void *)(v34 + 168) = v27;
  uint64_t v42 = v34 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(unsigned char *)(v34 + 176) = v58;
  sub_1BFFA11CC(v29, v42, (uint64_t (*)(void))sub_1BFFA18D8);
  *(unsigned char *)(v34 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = v54;
  *(unsigned char *)(v34 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = v53;
  uint64_t v43 = (unint64_t *)(v34 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *uint64_t v43 = v30;
  v43[1] = v31;
  uint64_t v44 = (void *)(v34 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *uint64_t v44 = v33;
  uint64_t v45 = v34 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)uint64_t v45 = v52;
  uint64_t v46 = v50;
  *(void *)(v45 + 16) = v51;
  *(void *)(v45 + 24) = v46;
  *(_WORD *)(v45 + 32) = v49;
  sub_1BFFA1B08(v30);
  swift_bridgeObjectRetain();
  return v34;
}

uint64_t FormatItemNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatItemNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatItemNodeStyle.previewParameters.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 88);
  uint64_t v8 = *(void *)(v1 + 96);
  uint64_t v9 = *(void *)(v1 + 104);
  unsigned __int8 v10 = *(unsigned char *)(v1 + 112);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  sub_1BFF8C638(v2, v3, v4, v5, v6, v7, v8, v9, v10, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
}

void FormatItemNodeStyle.cellSelection.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 160);
  uint64_t v8 = *(void *)(v1 + 168);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  char v9 = *(unsigned char *)(v1 + 176);
  *(unsigned char *)(a1 + 56) = v9;
  sub_1BFF8C70C(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t FormatItemNodeStyle.cellAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFFA1380(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, a1, (uint64_t (*)(void))sub_1BFFA18D8);
}

uint64_t FormatItemNodeStyle.clipsToBounds.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
}

uint64_t FormatItemNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
}

unint64_t FormatItemNodeStyle.swipeActionStyle.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFFA1B08(v2);
}

uint64_t sub_1C0C57FB8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatItemNodeStyle.selectors.setter(uint64_t a1)
{
  unint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *unint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatItemNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

__n128 FormatItemNodeStyle.focusParameters.getter@<Q0>(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  __n128 result = *(__n128 *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = v2;
  return result;
}

uint64_t FormatItemNodeStyle.__allocating_init(identifier:class:previewParameters:cellSelection:cellAction:clipsToBounds:ignoresSmartInvertColors:swipeActionStyle:selectors:focusParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, long long *a6, uint64_t a7, char a8, char a9, uint64_t *a10, uint64_t a11, long long *a12)
{
  uint64_t v16 = swift_allocObject();
  long long v32 = a5[1];
  long long v33 = *a5;
  long long v17 = a5[2];
  uint64_t v18 = *((void *)a5 + 6);
  uint64_t v19 = *((void *)a5 + 7);
  LOBYTE(a5) = *((unsigned char *)a5 + 64);
  long long v30 = *a6;
  long long v31 = v17;
  long long v28 = a6[2];
  long long v29 = a6[1];
  uint64_t v20 = *((void *)a6 + 6);
  LOBYTE(a6) = *((unsigned char *)a6 + 56);
  uint64_t v21 = a10[1];
  long long v39 = *a12;
  uint64_t v38 = *((void *)a12 + 2);
  uint64_t v36 = *a10;
  uint64_t v37 = *((void *)a12 + 3);
  __int16 v22 = *((_WORD *)a12 + 16);
  swift_beginAccess();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = a4;
  *(_OWORD *)(v16 + 48) = v33;
  *(_OWORD *)(v16 + 64) = v32;
  *(_OWORD *)(v16 + 80) = v31;
  *(void *)(v16 + 96) = v18;
  *(void *)(v16 + 104) = v19;
  *(unsigned char *)(v16 + 112) = (_BYTE)a5;
  *(_OWORD *)(v16 + 120) = v30;
  *(_OWORD *)(v16 + 136) = v29;
  *(_OWORD *)(v16 + 152) = v28;
  *(void *)(v16 + 168) = v20;
  uint64_t v23 = v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(unsigned char *)(v16 + 176) = (_BYTE)a6;
  sub_1BFFA11CC(a7, v23, (uint64_t (*)(void))sub_1BFFA18D8);
  *(unsigned char *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = a8;
  *(unsigned char *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = a9;
  uint64_t v24 = (void *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *uint64_t v24 = v36;
  v24[1] = v21;
  uint64_t v25 = (void *)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *uint64_t v25 = a11;
  uint64_t v26 = v16 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)uint64_t v26 = v39;
  *(void *)(v26 + 16) = v38;
  *(void *)(v26 + 24) = v37;
  *(_WORD *)(v26 + 32) = v22;
  return v16;
}

uint64_t FormatItemNodeStyle.init(identifier:class:previewParameters:cellSelection:cellAction:clipsToBounds:ignoresSmartInvertColors:swipeActionStyle:selectors:focusParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, long long *a6, uint64_t a7, char a8, char a9, uint64_t *a10, uint64_t a11, long long *a12)
{
  long long v31 = a5[1];
  long long v32 = *a5;
  uint64_t v17 = *((void *)a5 + 6);
  uint64_t v18 = *((void *)a5 + 7);
  char v19 = *((unsigned char *)a5 + 64);
  long long v29 = *a6;
  long long v30 = a5[2];
  long long v27 = a6[2];
  long long v28 = a6[1];
  uint64_t v20 = *((void *)a6 + 6);
  char v21 = *((unsigned char *)a6 + 56);
  uint64_t v33 = a10[1];
  uint64_t v34 = *a10;
  long long v39 = *a12;
  uint64_t v37 = *((void *)a12 + 3);
  uint64_t v38 = *((void *)a12 + 2);
  __int16 v36 = *((_WORD *)a12 + 16);
  swift_beginAccess();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  *(_OWORD *)(v12 + 48) = v32;
  *(_OWORD *)(v12 + 64) = v31;
  *(_OWORD *)(v12 + 80) = v30;
  *(void *)(v12 + 96) = v17;
  *(void *)(v12 + 104) = v18;
  *(unsigned char *)(v12 + 112) = v19;
  *(_OWORD *)(v12 + 120) = v29;
  *(_OWORD *)(v12 + 136) = v28;
  *(_OWORD *)(v12 + 152) = v27;
  *(void *)(v12 + 168) = v20;
  uint64_t v22 = v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(unsigned char *)(v12 + 176) = v21;
  sub_1BFFA11CC(a7, v22, (uint64_t (*)(void))sub_1BFFA18D8);
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = a8;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = a9;
  uint64_t v23 = (void *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  *uint64_t v23 = v34;
  v23[1] = v33;
  uint64_t v24 = (void *)(v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *uint64_t v24 = a11;
  uint64_t v25 = v12 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)uint64_t v25 = v39;
  *(void *)(v25 + 16) = v38;
  *(void *)(v25 + 24) = v37;
  *(_WORD *)(v25 + 32) = v36;
  return v12;
}

uint64_t sub_1C0C584B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1BFFA18D8(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v114 = (uint64_t)&v72 - v10;
  uint64_t v11 = *a1;
  uint64_t v12 = (int *)type metadata accessor for FormatItemNodeStyle.Selector(0);
  uint64_t v13 = (uint64_t *)(a2 + v12[11]);
  int v14 = *((unsigned __int16 *)v13 + 16);
  long long v100 = a3;
  if ((v14 & 0xFF00) == 0x400)
  {
    uint64_t v13 = (uint64_t *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
    int v87 = *(unsigned __int16 *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  }
  else
  {
    int v87 = v14;
  }
  uint64_t v99 = v13[3];
  uint64_t v98 = v13[2];
  uint64_t v16 = v13;
  uint64_t v15 = *v13;
  uint64_t v97 = v16[1];
  uint64_t v96 = v15;
  swift_beginAccess();
  uint64_t v95 = *(void *)(v11 + 16);
  uint64_t v113 = *(void *)(v11 + 24);
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v19 = *(void *)(a2 + 32);
  uint64_t v20 = *(void *)(a2 + 40);
  uint64_t v21 = *(void *)(a2 + 48);
  uint64_t v22 = *(void *)(a2 + 56);
  int v23 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v86 = v17;
  uint64_t v85 = v18;
  uint64_t v84 = v19;
  uint64_t v83 = v20;
  uint64_t v82 = v21;
  uint64_t v111 = v21;
  uint64_t v25 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  uint64_t v81 = v22;
  uint64_t v110 = v22;
  uint64_t v79 = v25;
  uint64_t v109 = v25;
  uint64_t v80 = v24;
  uint64_t v108 = v24;
  int v107 = v23;
  uint64_t v90 = *(void *)(v11 + 32);
  uint64_t v112 = *(void *)(v11 + 40);
  if ((v23 & 0xFE) == 0x7E)
  {
    uint64_t v17 = *(void *)(v11 + 48);
    uint64_t v18 = *(void *)(v11 + 56);
    uint64_t v19 = *(void *)(v11 + 64);
    uint64_t v20 = *(void *)(v11 + 72);
    uint64_t v26 = *(void *)(v11 + 80);
    uint64_t v27 = *(void *)(v11 + 88);
    uint64_t v28 = *(void *)(v11 + 96);
    uint64_t v29 = *(void *)(v11 + 104);
    int v107 = *(unsigned __int8 *)(v11 + 112);
    uint64_t v110 = v27;
    uint64_t v111 = v26;
    uint64_t v108 = v29;
    uint64_t v109 = v28;
    sub_1BFF8C638(v17, v18, v19, v20, v26, v27, v28, v29, v107, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
  }
  uint64_t v91 = v20;
  uint64_t v92 = v19;
  uint64_t v93 = v18;
  uint64_t v94 = v17;
  uint64_t v30 = *(void *)(a2 + 88);
  uint64_t v31 = *(void *)(a2 + 96);
  uint64_t v32 = *(void *)(a2 + 104);
  uint64_t v33 = *(void *)(a2 + 112);
  uint64_t v34 = *(void *)(a2 + 120);
  uint64_t v35 = *(void *)(a2 + 128);
  uint64_t v36 = *(void *)(a2 + 136);
  uint64_t v78 = v30;
  uint64_t v77 = v31;
  uint64_t v76 = v32;
  uint64_t v105 = v33;
  uint64_t v106 = v32;
  uint64_t v75 = v34;
  uint64_t v104 = v34;
  int v37 = *(unsigned __int8 *)(a2 + 144);
  uint64_t v74 = v35;
  uint64_t v103 = v35;
  uint64_t v73 = v36;
  uint64_t v101 = v36;
  int v102 = v37;
  if (v37 == 255)
  {
    uint64_t v30 = *(void *)(v11 + 120);
    uint64_t v31 = *(void *)(v11 + 128);
    uint64_t v38 = *(void *)(v11 + 136);
    uint64_t v39 = *(void *)(v11 + 152);
    uint64_t v40 = *(void *)(v11 + 160);
    uint64_t v41 = *(void *)(v11 + 168);
    int v42 = *(unsigned __int8 *)(v11 + 176);
    uint64_t v105 = *(void *)(v11 + 144);
    uint64_t v106 = v38;
    uint64_t v104 = v39;
    uint64_t v103 = v40;
    uint64_t v101 = v41;
    int v102 = v42;
    sub_1BFF8C70C(v30, v31, v38, v105, v39, v40, v41, v42);
  }
  uint64_t v88 = v31;
  uint64_t v89 = v30;
  sub_1BFFA1380(a2 + v12[7], (uint64_t)v8, (uint64_t (*)(void))sub_1BFFA18D8);
  uint64_t v43 = type metadata accessor for FormatItemNodeAction();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v8, 1, v43) == 1)
  {
    sub_1BFFA1380(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v114, (uint64_t (*)(void))sub_1BFFA18D8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF8C638(v86, v85, v84, v83, v82, v81, v79, v80, v23, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
    sub_1BFF8C70C(v78, v77, v76, v33, v75, v74, v73, v37);
    sub_1BFFA12B4((uint64_t)v8, (uint64_t (*)(void))sub_1BFFA18D8);
  }
  else
  {
    uint64_t v45 = (uint64_t)v8;
    uint64_t v46 = v114;
    sub_1BFFA11CC(v45, v114, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF8C638(v86, v85, v84, v83, v82, v81, v79, v80, v23, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
    sub_1BFF8C70C(v78, v77, v76, v33, v75, v74, v73, v37);
  }
  int v47 = *(unsigned __int8 *)(a2 + v12[8]);
  if (v47 == 2) {
    LOBYTE(v47) = *(unsigned char *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  }
  int v48 = *(unsigned __int8 *)(a2 + v12[9]);
  if (v48 == 2) {
    LOBYTE(v48) = *(unsigned char *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  }
  int v49 = (unint64_t *)(a2 + v12[10]);
  unint64_t v50 = *v49;
  unint64_t v51 = *v49;
  unint64_t v52 = v49[1];
  if (*v49 == 3)
  {
    unint64_t v51 = *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    unint64_t v52 = *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    sub_1BFFA1B08(v51);
  }
  int v53 = (uint64_t *)(v11 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  uint64_t v54 = *v53;
  type metadata accessor for FormatItemNodeStyle(0);
  uint64_t v55 = swift_allocObject();
  swift_beginAccess();
  uint64_t v56 = v113;
  *(void *)(v55 + 16) = v95;
  *(void *)(v55 + 24) = v56;
  uint64_t v57 = v112;
  *(void *)(v55 + 32) = v90;
  *(void *)(v55 + 40) = v57;
  uint64_t v58 = v93;
  *(void *)(v55 + 48) = v94;
  *(void *)(v55 + 56) = v58;
  uint64_t v59 = v91;
  *(void *)(v55 + 64) = v92;
  *(void *)(v55 + 72) = v59;
  uint64_t v60 = v110;
  *(void *)(v55 + 80) = v111;
  *(void *)(v55 + 88) = v60;
  uint64_t v61 = v108;
  *(void *)(v55 + 96) = v109;
  *(void *)(v55 + 104) = v61;
  *(unsigned char *)(v55 + 112) = v107;
  uint64_t v62 = v88;
  *(void *)(v55 + 120) = v89;
  *(void *)(v55 + 128) = v62;
  uint64_t v63 = v105;
  *(void *)(v55 + 136) = v106;
  *(void *)(v55 + 144) = v63;
  uint64_t v64 = v103;
  *(void *)(v55 + 152) = v104;
  *(void *)(v55 + 160) = v64;
  *(void *)(v55 + 168) = v101;
  uint64_t v65 = v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(unsigned char *)(v55 + 176) = v102;
  sub_1BFFA11CC(v114, v65, (uint64_t (*)(void))sub_1BFFA18D8);
  *(unsigned char *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = v47;
  *(unsigned char *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = v48;
  uint64_t v66 = (unint64_t *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  unint64_t *v66 = v51;
  v66[1] = v52;
  uint64_t v67 = (void *)(v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  void *v67 = v54;
  uint64_t v68 = v55 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  uint64_t v69 = v97;
  *(void *)uint64_t v68 = v96;
  *(void *)(v68 + 8) = v69;
  uint64_t v70 = v99;
  *(void *)(v68 + 16) = v98;
  *(void *)(v68 + 24) = v70;
  *(_WORD *)(v68 + 32) = v87;
  *long long v100 = v55;
  sub_1BFFA1B08(v50);
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF8C638(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112), (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
  sub_1BFF8C720(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  sub_1BFFA12B4(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t (*)(void))sub_1BFFA18D8);
  sub_1BFF8C734(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0C58DB0(void *a1, void *a2)
{
  return static FormatItemNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatItemNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void FormatItemNodeStyle.Selector.previewParameters.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  unsigned __int8 v10 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  sub_1BFF8C638(v2, v3, v4, v5, v6, v7, v8, v9, v10, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
}

void FormatItemNodeStyle.Selector.cellSelection.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 104);
  uint64_t v5 = *(void *)(v1 + 112);
  uint64_t v6 = *(void *)(v1 + 120);
  uint64_t v7 = *(void *)(v1 + 128);
  uint64_t v8 = *(void *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  char v9 = *(unsigned char *)(v1 + 144);
  *(unsigned char *)(a1 + 56) = v9;
  sub_1BFF8C70C(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t FormatItemNodeStyle.Selector.cellAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  return sub_1BFFA1380(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))sub_1BFFA18D8);
}

uint64_t FormatItemNodeStyle.Selector.clipsToBounds.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 32));
}

uint64_t FormatItemNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 36));
}

unint64_t FormatItemNodeStyle.Selector.swipeActionStyle.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = (unint64_t *)(v1 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 40));
  unint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BFFA1B08(v4);
}

__n128 FormatItemNodeStyle.Selector.focusParameters.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatItemNodeStyle.Selector(0) + 44);
  __int16 v4 = *(_WORD *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = v4;
  return result;
}

uint64_t FormatItemNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E4FBC870];
}

void sub_1C0C58F98(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1BFFAE054();
  *a2 = *(void *)(a1 + *(int *)(v4 + 36));
}

BOOL _s8NewsFeed19FormatItemNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatItemNodeAction();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v100[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0C5BB88();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v100[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFFA18D8(0);
  MEMORY[0x1F4188790](v12 - 8);
  int v14 = &v100[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v100[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v100[-v19];
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v21 = sub_1C1520A9C();
    BOOL result = 0;
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  uint64_t v108 = v9;
  uint64_t v112 = v17;
  uint64_t v113 = v20;
  int v107 = v14;
  uint64_t v106 = v7;
  uint64_t v109 = v5;
  uint64_t v110 = v4;
  uint64_t v111 = v11;
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v23 = *(void *)(a1 + 24);
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v28 = *(int **)(a1 + 48);
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v29 = *(void *)(a1 + 64);
  uint64_t v30 = *(void *)(a1 + 72);
  char v31 = *(unsigned char *)(a1 + 80);
  uint64_t v33 = *(void *)(a2 + 16);
  uint64_t v32 = *(void *)(a2 + 24);
  uint64_t v35 = *(void *)(a2 + 32);
  uint64_t v34 = *(void *)(a2 + 40);
  uint64_t v36 = *(void *)(a2 + 48);
  uint64_t v37 = *(void *)(a2 + 56);
  uint64_t v38 = *(void *)(a2 + 64);
  uint64_t v39 = *(void *)(a2 + 72);
  unsigned __int8 v40 = *(unsigned char *)(a2 + 80);
  if ((v31 & 0xFE) == 0x7E)
  {
    if ((v40 & 0xFE) == 0x7E) {
      goto LABEL_11;
    }
LABEL_9:
    *(void *)&long long v121 = v24;
    *((void *)&v121 + 1) = v23;
    *(void *)&long long v122 = v26;
    *((void *)&v122 + 1) = v25;
    uint64_t v123 = (uint64_t)v28;
    uint64_t v124 = v27;
    uint64_t v125 = v29;
    uint64_t v126 = v30;
    LOBYTE(v127) = v31;
    uint64_t v128 = v33;
    uint64_t v129 = v32;
    uint64_t v130 = v35;
    uint64_t v131 = v34;
    uint64_t v132 = v36;
    uint64_t v133 = v37;
    uint64_t v134 = v38;
    uint64_t v135 = v39;
    unsigned __int8 v136 = v40;
    sub_1BFF8C638(v33, v32, v35, v34, v36, v37, v38, v39, v40, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
    sub_1C08E94BC((uint64_t)&v121);
    return 0;
  }
  *(void *)&long long v121 = *(void *)(a1 + 16);
  *((void *)&v121 + 1) = v23;
  *(void *)&long long v122 = v26;
  *((void *)&v122 + 1) = v25;
  uint64_t v123 = (uint64_t)v28;
  uint64_t v124 = v27;
  uint64_t v125 = v29;
  uint64_t v126 = v30;
  LOBYTE(v127) = v31;
  uint64_t v105 = v28;
  uint64_t v104 = v25;
  uint64_t v103 = v26;
  uint64_t v102 = v23;
  if ((v40 & 0xFE) == 0x7E)
  {
    uint64_t v113 = (unsigned char *)v27;
    uint64_t v112 = (unsigned char *)v39;
    uint64_t v111 = (unsigned char *)v38;
    uint64_t v110 = v37;
    uint64_t v41 = v36;
    uint64_t v42 = v34;
    sub_1BFDC11A4(v24);
    sub_1BFEF6828(v29, v30, v31);
    sub_1BFDC11A4(v24);
    sub_1BFEF6828(v29, v30, v31);
    sub_1BFDC11BC(v24);
    sub_1BFEF68AC(v29, v30, v31);
    uint64_t v34 = v42;
    uint64_t v36 = v41;
    uint64_t v37 = v110;
    uint64_t v38 = (uint64_t)v111;
    uint64_t v39 = (uint64_t)v112;
    uint64_t v23 = v102;
    uint64_t v26 = v103;
    uint64_t v25 = v104;
    uint64_t v28 = v105;
    uint64_t v27 = (uint64_t)v113;
    goto LABEL_9;
  }
  *(void *)&long long v114 = v33;
  *((void *)&v114 + 1) = v32;
  *(void *)&long long v115 = v35;
  *((void *)&v115 + 1) = v34;
  uint64_t v116 = v36;
  LOBYTE(v117) = v37 & 1;
  uint64_t v118 = v38;
  uint64_t v119 = v39;
  unsigned __int8 v120 = v40;
  uint64_t v43 = v27;
  sub_1BFF8C638(v24, v23, v26, v25, (uint64_t)v28, v27, v29, v30, v31, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
  sub_1BFDC11A4(v24);
  sub_1BFEF6828(v29, v30, v31);
  BOOL v101 = _s8NewsFeed23FormatPreviewParametersV2eeoiySbAC_ACtFZ_0((uint64_t)&v121, (uint64_t)&v114);
  uint64_t v44 = v125;
  uint64_t v45 = v126;
  char v46 = v127;
  sub_1BFDC11BC(v121);
  sub_1BFEF68AC(v44, v45, v46);
  sub_1BFF8C638(v24, v102, v103, v104, (uint64_t)v105, v43, v29, v30, v31, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
  if (!v101) {
    return 0;
  }
LABEL_11:
  uint64_t v48 = *(void *)(a1 + 88);
  uint64_t v47 = *(void *)(a1 + 96);
  uint64_t v50 = *(void *)(a1 + 104);
  uint64_t v49 = *(void *)(a1 + 112);
  uint64_t v52 = *(void *)(a1 + 120);
  uint64_t v51 = *(void *)(a1 + 128);
  uint64_t v53 = *(void *)(a1 + 136);
  int v54 = *(unsigned __int8 *)(a1 + 144);
  uint64_t v55 = *(void *)(a2 + 88);
  uint64_t v56 = *(void *)(a2 + 96);
  uint64_t v57 = *(void *)(a2 + 104);
  uint64_t v58 = *(void *)(a2 + 112);
  uint64_t v59 = *(void *)(a2 + 120);
  uint64_t v60 = *(void *)(a2 + 128);
  uint64_t v61 = *(void *)(a2 + 136);
  int v62 = *(unsigned __int8 *)(a2 + 144);
  if (v54 == 255)
  {
    if (v62 == 255) {
      goto LABEL_16;
    }
LABEL_20:
    *(void *)&long long v121 = v48;
    *((void *)&v121 + 1) = v47;
    *(void *)&long long v122 = v50;
    *((void *)&v122 + 1) = v49;
    uint64_t v123 = v52;
    uint64_t v124 = v51;
    uint64_t v125 = v53;
    LOBYTE(v126) = v54;
    uint64_t v127 = v55;
    uint64_t v128 = v56;
    uint64_t v129 = v57;
    uint64_t v130 = v58;
    uint64_t v131 = v59;
    uint64_t v132 = v60;
    uint64_t v133 = v61;
    LOBYTE(v134) = v62;
    sub_1BFF8C70C(v55, v56, v57, v58, v59, v60, v61, v62);
    sub_1C0C5BBEC((uint64_t)&v121);
    return 0;
  }
  *(void *)&long long v121 = *(void *)(a1 + 88);
  *((void *)&v121 + 1) = v47;
  *(void *)&long long v122 = v50;
  *((void *)&v122 + 1) = v49;
  uint64_t v123 = v52;
  uint64_t v124 = v51;
  uint64_t v125 = v53;
  LOBYTE(v126) = v54;
  if (v62 == 255)
  {
    uint64_t v108 = v55;
    uint64_t v109 = v56;
    uint64_t v110 = v57;
    uint64_t v111 = (unsigned char *)v58;
    uint64_t v112 = (unsigned char *)v59;
    uint64_t v113 = (unsigned char *)v60;
    uint64_t v71 = v53;
    uint64_t v72 = v61;
    sub_1BFFA1B88(v48, v47, v50, v49, v52, v51, v53, v54);
    sub_1BFFA1B88(v48, v47, v50, v49, v52, v51, v71, v54);
    sub_1BFF8B764(v48, v47, v50, v49, v52, v51, v71, v54);
    uint64_t v55 = v108;
    uint64_t v56 = v109;
    uint64_t v57 = v110;
    uint64_t v58 = (uint64_t)v111;
    uint64_t v59 = (uint64_t)v112;
    uint64_t v60 = (uint64_t)v113;
    uint64_t v61 = v72;
    uint64_t v53 = v71;
    goto LABEL_20;
  }
  *(void *)&long long v114 = v55;
  *((void *)&v114 + 1) = v56;
  *(void *)&long long v115 = v57;
  *((void *)&v115 + 1) = v58;
  uint64_t v116 = v59;
  uint64_t v117 = v60;
  uint64_t v118 = v61;
  LOBYTE(v119) = v62;
  uint64_t v63 = v53;
  sub_1BFF8C70C(v48, v47, v50, v49, v52, v51, v53, v54);
  sub_1BFFA1B88(v48, v47, v50, v49, v52, v51, v63, v54);
  LODWORD(v105) = _s8NewsFeed19FormatCellSelectionO2eeoiySbAC_ACtFZ_0((uint64_t)&v121, (uint64_t)&v114);
  sub_1BFF8B764(v121, *((uint64_t *)&v121 + 1), v122, *((uint64_t *)&v122 + 1), v123, v124, v125, v126);
  sub_1BFF8C720(v48, v47, v50, v49, v52, v51, v63, v54);
  if ((v105 & 1) == 0) {
    return 0;
  }
LABEL_16:
  uint64_t v64 = (int *)type metadata accessor for FormatItemNodeStyle.Selector(0);
  uint64_t v65 = (uint64_t)v113;
  sub_1BFFA1380(a1 + v64[7], (uint64_t)v113, (uint64_t (*)(void))sub_1BFFA18D8);
  uint64_t v105 = v64;
  uint64_t v66 = (uint64_t)v112;
  sub_1BFFA1380(a2 + v64[7], (uint64_t)v112, (uint64_t (*)(void))sub_1BFFA18D8);
  uint64_t v67 = (uint64_t)v111;
  uint64_t v68 = (uint64_t)&v111[*(int *)(v108 + 48)];
  sub_1BFFA1380(v65, (uint64_t)v111, (uint64_t (*)(void))sub_1BFFA18D8);
  sub_1BFFA1380(v66, v68, (uint64_t (*)(void))sub_1BFFA18D8);
  uint64_t v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
  uint64_t v70 = v110;
  if (v69(v67, 1, v110) != 1)
  {
    uint64_t v73 = (uint64_t)v107;
    sub_1BFFA1380(v67, (uint64_t)v107, (uint64_t (*)(void))sub_1BFFA18D8);
    if (v69(v68, 1, v70) != 1)
    {
      uint64_t v74 = (uint64_t)v106;
      sub_1BFFA11CC(v68, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
      char v75 = static FormatItemNodeAction.== infix(_:_:)(v73, v74);
      sub_1BFFA12B4(v74, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
      sub_1BFFA12B4((uint64_t)v112, (uint64_t (*)(void))sub_1BFFA18D8);
      sub_1BFFA12B4((uint64_t)v113, (uint64_t (*)(void))sub_1BFFA18D8);
      sub_1BFFA12B4(v73, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
      sub_1BFFA12B4(v67, (uint64_t (*)(void))sub_1BFFA18D8);
      if ((v75 & 1) == 0) {
        return 0;
      }
      goto LABEL_27;
    }
    sub_1BFFA12B4((uint64_t)v112, (uint64_t (*)(void))sub_1BFFA18D8);
    sub_1BFFA12B4((uint64_t)v113, (uint64_t (*)(void))sub_1BFFA18D8);
    sub_1BFFA12B4(v73, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
LABEL_23:
    sub_1BFFA12B4(v67, (uint64_t (*)(void))sub_1C0C5BB88);
    return 0;
  }
  sub_1BFFA12B4(v66, (uint64_t (*)(void))sub_1BFFA18D8);
  sub_1BFFA12B4(v65, (uint64_t (*)(void))sub_1BFFA18D8);
  if (v69(v68, 1, v70) != 1) {
    goto LABEL_23;
  }
  sub_1BFFA12B4(v67, (uint64_t (*)(void))sub_1BFFA18D8);
LABEL_27:
  uint64_t v76 = v105;
  uint64_t v77 = v105[8];
  int v78 = *(unsigned __int8 *)(a1 + v77);
  int v79 = *(unsigned __int8 *)(a2 + v77);
  if (v78 == 2)
  {
    if (v79 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    BOOL v80 = (v78 & 1) == 0;
    if (v79 == 2 || ((v80 ^ v79) & 1) == 0) {
      return result;
    }
  }
  uint64_t v81 = v105[9];
  int v82 = *(unsigned __int8 *)(a1 + v81);
  int v83 = *(unsigned __int8 *)(a2 + v81);
  if (v82 == 2)
  {
    if (v83 != 2) {
      return 0;
    }
LABEL_37:
    uint64_t v85 = v105[10];
    unint64_t v86 = *(void *)(a1 + v85);
    uint64_t v87 = *(void *)(a1 + v85 + 8);
    uint64_t v88 = (unint64_t *)(a2 + v85);
    unint64_t v89 = *v88;
    unint64_t v90 = v88[1];
    if (v86 == 3)
    {
      if (v89 == 3)
      {
LABEL_44:
        uint64_t v92 = v76[11];
        uint64_t v93 = (long long *)(a1 + v92);
        __int16 v94 = *(_WORD *)(a1 + v92 + 32);
        uint64_t v95 = (long long *)(a2 + v92);
        __int16 v96 = *(_WORD *)(a2 + v92 + 32);
        if ((v94 & 0xFF00) != 0x400)
        {
          long long v97 = *v95;
          long long v98 = v95[1];
          long long v99 = v93[1];
          long long v121 = *v93;
          long long v122 = v99;
          LOWORD(v123) = v94;
          if ((v96 & 0xFF00) == 0x400) {
            return 0;
          }
          long long v114 = v97;
          long long v115 = v98;
          LOWORD(v116) = v96 & 0xFF01;
          return (_s8NewsFeed21FormatFocusParametersV2eeoiySbAC_ACtFZ_0((uint64_t)&v121, (uint64_t)&v114) & 1) != 0;
        }
        return (v96 & 0xFF00) == 0x400;
      }
    }
    else
    {
      *(void *)&long long v121 = v86;
      *((void *)&v121 + 1) = v87;
      if (v89 != 3)
      {
        *(void *)&long long v114 = v89;
        *((void *)&v114 + 1) = v90;
        sub_1BFFA1B08(v86);
        sub_1C05DCC00(v86);
        BOOL v91 = _s8NewsFeed30FormatItemNodeSwipeActionStyleO2eeoiySbAC_ACtFZ_0((unint64_t *)&v121, (unint64_t *)&v114);
        sub_1C05DCC44(v121);
        sub_1BFF8C734(v86);
        if (!v91) {
          return 0;
        }
        goto LABEL_44;
      }
      sub_1C05DCC00(v86);
      sub_1C05DCC00(v86);
      sub_1C05DCC44(v86);
    }
    sub_1BFFA1B08(v89);
    sub_1BFF8C734(v86);
    sub_1BFF8C734(v89);
    return 0;
  }
  BOOL result = 0;
  BOOL v84 = (v82 & 1) == 0;
  if (v83 != 2 && ((v84 ^ v83) & 1) != 0) {
    goto LABEL_37;
  }
  return result;
}

uint64_t sub_1C0C59BB4(uint64_t a1)
{
  uint64_t result = sub_1C005DBDC(&qword_1EA1A5028, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C59C0C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C005DBDC(&qword_1EB888D70, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
  uint64_t result = sub_1C005DBDC(&qword_1EB866898, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C0C59C90(void *a1)
{
  a1[1] = sub_1C005DBDC(&qword_1EB888D70, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
  a1[2] = sub_1C005DBDC(&qword_1EB866898, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
  uint64_t result = sub_1C005DBDC(&qword_1EA1A5030, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0C59D3C(uint64_t a1)
{
  uint64_t result = sub_1C005DBDC(&qword_1EA1A5038, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle.Selector);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C59D94(void *a1)
{
  a1[1] = sub_1C005DBDC(&qword_1EB888CB0, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle.Selector);
  a1[2] = sub_1C005DBDC(&qword_1EB888CA8, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle.Selector);
  uint64_t result = sub_1C005DBDC(&qword_1EA1A5040, (void (*)(uint64_t))type metadata accessor for FormatItemNodeStyle.Selector);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0C59E40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C59E90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C59EEC()
{
  return type metadata accessor for FormatItemNodeStyle(0);
}

uint64_t method lookup function for FormatItemNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatItemNodeStyle);
}

uint64_t dispatch thunk of FormatItemNodeStyle.__allocating_init(identifier:class:previewParameters:cellSelection:cellAction:clipsToBounds:ignoresSmartInvertColors:swipeActionStyle:selectors:focusParameters:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t initializeBufferWithCopyOfBuffer for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v6 = a3;
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = a2 + 2;
  unsigned int v9 = *((unsigned __int8 *)a2 + 80);
  swift_bridgeObjectRetain();
  if ((v9 & 0xFE) == 0x7E)
  {
    long long v10 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v10;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    long long v11 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *v8;
    *(_OWORD *)(a1 + 32) = v11;
  }
  else
  {
    uint64_t v13 = *(void *)v8;
    if ((~v13 & 0xF000000000000007) != 0) {
      swift_retain();
    }
    *(void *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    if (v9 <= 0xFD)
    {
      uint64_t v14 = a2[8];
      uint64_t v15 = a2[9];
      sub_1BFF046A0(v14, v15, v9);
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = v15;
      *(unsigned char *)(a1 + 80) = v9;
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    }
  }
  int v16 = *((unsigned __int8 *)a2 + 144);
  if (v16 == 255)
  {
    long long v24 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 104) = v24;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)((char *)a2 + 129);
  }
  else
  {
    uint64_t v17 = a2[11];
    uint64_t v18 = a2[12];
    uint64_t v19 = a2[13];
    uint64_t v20 = a2[14];
    uint64_t v51 = v6;
    uint64_t v21 = a2[15];
    uint64_t v22 = a2[16];
    uint64_t v23 = a2[17];
    sub_1BFFA1B88(v17, v18, v19, v20, v21, v22, v23, v16);
    *(void *)(a1 + 88) = v17;
    *(void *)(a1 + 96) = v18;
    *(void *)(a1 + 104) = v19;
    *(void *)(a1 + 112) = v20;
    *(void *)(a1 + 120) = v21;
    *(void *)(a1 + 128) = v22;
    uint64_t v6 = v51;
    *(void *)(a1 + 136) = v23;
    *(unsigned char *)(a1 + 144) = v16;
  }
  uint64_t v25 = v6[7];
  uint64_t v26 = (uint64_t *)(a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for FormatItemNodeAction();
  uint64_t v29 = *(void *)(v28 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for FormatCommandOpenURL();
      int v37 = swift_getEnumCaseMultiPayload();
      if (v37 == 2 || v37 == 1)
      {
        uint64_t v38 = *((void *)v27 + 1);
        *uint64_t v26 = *(void *)v27;
        v26[1] = v38;
        v26[2] = *((void *)v27 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v39 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v26, v27, v39);
        uint64_t v40 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v26 + *(int *)(v40 + 20)) = *(void *)&v27[*(int *)(v40 + 20)];
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v26, v27, *(void *)(v29 + 64));
LABEL_25:
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        goto LABEL_26;
      }
      uint64_t v32 = *(void *)v27;
      uint64_t v33 = *((void *)v27 + 1);
      uint64_t v34 = *((void *)v27 + 2);
      uint64_t v52 = v6;
      char v35 = v27[25];
      unsigned int v36 = v27[24];
      sub_1C0C5A3A8(v32, v33, v34, v36, v35, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      *uint64_t v26 = v32;
      v26[1] = v33;
      v26[2] = v34;
      *((unsigned char *)v26 + 24) = v36;
      *((unsigned char *)v26 + 25) = v35;
      uint64_t v6 = v52;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  sub_1BFFA18D8(0);
  memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_26:
  uint64_t v41 = v6[9];
  *(unsigned char *)(a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *(unsigned char *)(a1 + v41) = *((unsigned char *)a2 + v41);
  uint64_t v42 = v6[10];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = (uint64_t)a2 + v42;
  if (*(void *)v44 < 4uLL)
  {
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  }
  else
  {
    uint64_t v45 = *(void *)(v44 + 8);
    *(void *)uint64_t v43 = *(void *)v44;
    *(void *)(v43 + 8) = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v46 = v6[11];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = (uint64_t)a2 + v46;
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(_WORD *)(v47 + 32) = *(_WORD *)(v48 + 32);
  return a1;
}

uint64_t sub_1C0C5A3A8(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      uint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      uint64_t result = a7();
      break;
    case 6u:
      uint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      uint64_t v8 = a4 & 1;
      uint64_t result = a8(result, a2, a3, v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t assignWithCopy for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  int v8 = *(unsigned char *)(a2 + 80) & 0xFE;
  if ((*(unsigned char *)(a1 + 80) & 0xFE) == 0x7E)
  {
    if (v8 == 126)
    {
      _OWORD *v6 = *v7;
      long long v9 = *(_OWORD *)(a2 + 32);
      long long v10 = *(_OWORD *)(a2 + 48);
      long long v11 = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 32) = v9;
      goto LABEL_24;
    }
    uint64_t v15 = *(void *)v7;
    if ((~v15 & 0xF000000000000007) != 0) {
      swift_retain();
    }
    *(void *)(a1 + 16) = v15;
    long long v16 = *(_OWORD *)(a2 + 24);
    long long v17 = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v17;
    *(_OWORD *)(a1 + 24) = v16;
    unsigned int v18 = *(unsigned __int8 *)(a2 + 80);
    if (v18 > 0xFD)
    {
      long long v19 = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = v19;
      goto LABEL_24;
    }
    goto LABEL_20;
  }
  if (v8 == 126)
  {
    sub_1C0C5ACE0(a1 + 16);
    _OWORD *v6 = *v7;
    long long v13 = *(_OWORD *)(a2 + 48);
    long long v12 = *(_OWORD *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v13;
    *(_OWORD *)(a1 + 64) = v12;
    *(_OWORD *)(a1 + 32) = v14;
    goto LABEL_24;
  }
  uint64_t v20 = *(void *)v7;
  unint64_t v21 = *(void *)v7 & 0xF000000000000007;
  if ((~*(void *)v6 & 0xF000000000000007) == 0)
  {
    if (v21 != 0xF000000000000007)
    {
      *(void *)uint64_t v6 = v20;
      swift_retain();
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if (v21 == 0xF000000000000007)
  {
    sub_1C036EDB0(a1 + 16);
    uint64_t v20 = *(void *)v7;
LABEL_15:
    *(void *)uint64_t v6 = v20;
    goto LABEL_17;
  }
  *(void *)uint64_t v6 = v20;
  swift_retain();
  swift_release();
LABEL_17:
  long long v22 = *(_OWORD *)(a2 + 24);
  long long v23 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v23;
  *(_OWORD *)(a1 + 24) = v22;
  long long v24 = (_OWORD *)(a1 + 64);
  uint64_t v25 = (_OWORD *)(a2 + 64);
  unsigned int v18 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) <= 0xFDu)
  {
    if (v18 <= 0xFD)
    {
      uint64_t v30 = *(void *)(a2 + 64);
      uint64_t v31 = *(void *)(a2 + 72);
      sub_1BFF046A0(v30, v31, *(unsigned char *)(a2 + 80));
      uint64_t v32 = *(void *)(a1 + 64);
      uint64_t v33 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v30;
      *(void *)(a1 + 72) = v31;
      char v34 = *(unsigned char *)(a1 + 80);
      *(unsigned char *)(a1 + 80) = v18;
      sub_1BFF04738(v32, v33, v34);
    }
    else
    {
      sub_1C02D0F84(a1 + 64);
      char v29 = *(unsigned char *)(a2 + 80);
      *long long v24 = *v25;
      *(unsigned char *)(a1 + 80) = v29;
    }
    goto LABEL_24;
  }
  if (v18 > 0xFD)
  {
    long long v26 = *v25;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *long long v24 = v26;
    goto LABEL_24;
  }
LABEL_20:
  uint64_t v27 = *(void *)(a2 + 64);
  uint64_t v28 = *(void *)(a2 + 72);
  sub_1BFF046A0(v27, v28, v18);
  *(void *)(a1 + 64) = v27;
  *(void *)(a1 + 72) = v28;
  *(unsigned char *)(a1 + 80) = v18;
LABEL_24:
  char v35 = (_OWORD *)(a1 + 88);
  unsigned int v36 = (long long *)(a2 + 88);
  int v37 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 255)
  {
    if (v37 == 255)
    {
      long long v63 = *v36;
      long long v64 = *(_OWORD *)(a2 + 104);
      long long v65 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 104) = v64;
      *(_OWORD *)(a1 + 120) = v65;
      *char v35 = v63;
    }
    else
    {
      uint64_t v53 = *(void *)(a2 + 88);
      uint64_t v54 = *(void *)(a2 + 96);
      uint64_t v55 = *(void *)(a2 + 104);
      uint64_t v56 = *(void *)(a2 + 112);
      int v107 = a3;
      uint64_t v57 = *(void *)(a2 + 120);
      uint64_t v58 = *(void *)(a2 + 128);
      uint64_t v59 = *(void *)(a2 + 136);
      sub_1BFFA1B88(v53, v54, v55, v56, v57, v58, v59, v37);
      *(void *)(a1 + 88) = v53;
      *(void *)(a1 + 96) = v54;
      *(void *)(a1 + 104) = v55;
      *(void *)(a1 + 112) = v56;
      *(void *)(a1 + 120) = v57;
      *(void *)(a1 + 128) = v58;
      a3 = v107;
      *(void *)(a1 + 136) = v59;
      *(unsigned char *)(a1 + 144) = v37;
    }
  }
  else if (v37 == 255)
  {
    sub_1C0C5AD34(a1 + 88);
    long long v61 = *(_OWORD *)(a2 + 104);
    long long v60 = *(_OWORD *)(a2 + 120);
    long long v62 = *v36;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 104) = v61;
    *(_OWORD *)(a1 + 120) = v60;
    *char v35 = v62;
  }
  else
  {
    uint64_t v38 = *(void *)(a2 + 88);
    uint64_t v39 = *(void *)(a2 + 96);
    uint64_t v40 = *(void *)(a2 + 104);
    uint64_t v41 = *(void *)(a2 + 112);
    uint64_t v106 = a3;
    uint64_t v42 = *(void *)(a2 + 120);
    uint64_t v43 = *(void *)(a2 + 128);
    uint64_t v44 = *(void *)(a2 + 136);
    sub_1BFFA1B88(v38, v39, v40, v41, v42, v43, v44, v37);
    uint64_t v45 = *(void *)(a1 + 88);
    uint64_t v46 = *(void *)(a1 + 96);
    uint64_t v47 = *(void *)(a1 + 104);
    uint64_t v48 = *(void *)(a1 + 112);
    uint64_t v49 = *(void *)(a1 + 120);
    uint64_t v50 = *(void *)(a1 + 128);
    uint64_t v51 = *(void *)(a1 + 136);
    *(void *)(a1 + 88) = v38;
    *(void *)(a1 + 96) = v39;
    *(void *)(a1 + 104) = v40;
    *(void *)(a1 + 112) = v41;
    *(void *)(a1 + 120) = v42;
    *(void *)(a1 + 128) = v43;
    a3 = v106;
    *(void *)(a1 + 136) = v44;
    char v52 = *(unsigned char *)(a1 + 144);
    *(unsigned char *)(a1 + 144) = v37;
    sub_1BFF8B764(v45, v46, v47, v48, v49, v50, v51, v52);
  }
  uint64_t v66 = a3[7];
  uint64_t v67 = (uint64_t *)(a1 + v66);
  uint64_t v68 = (char *)(a2 + v66);
  uint64_t v69 = type metadata accessor for FormatItemNodeAction();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1, v69);
  int v73 = v71((uint64_t *)v68, 1, v69);
  if (v72)
  {
    if (!v73)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for FormatCommandOpenURL();
        int v89 = swift_getEnumCaseMultiPayload();
        if (v89 == 2 || v89 == 1)
        {
          uint64_t *v67 = *(void *)v68;
          v67[1] = *((void *)v68 + 1);
          v67[2] = *((void *)v68 + 2);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v91 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v67, v68, v91);
          uint64_t v92 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v67 + *(int *)(v92 + 20)) = *(void *)&v68[*(int *)(v92 + 20)];
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v67, v68, *(void *)(v70 + 64));
LABEL_55:
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          goto LABEL_56;
        }
        uint64_t v75 = *(void *)v68;
        uint64_t v76 = *((void *)v68 + 1);
        uint64_t v77 = *((void *)v68 + 2);
        uint64_t v108 = a3;
        char v78 = v68[25];
        unsigned int v79 = v68[24];
        sub_1C0C5A3A8(v75, v76, v77, v79, v78, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
        uint64_t *v67 = v75;
        v67[1] = v76;
        v67[2] = v77;
        *((unsigned char *)v67 + 24) = v79;
        *((unsigned char *)v67 + 25) = v78;
        a3 = v108;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_55;
    }
    goto LABEL_38;
  }
  if (v73)
  {
    sub_1BFFA12B4((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
LABEL_38:
    sub_1BFFA18D8(0);
    size_t v81 = *(void *)(*(void *)(v80 - 8) + 64);
    goto LABEL_39;
  }
  if (a1 == a2) {
    goto LABEL_56;
  }
  sub_1BFFA12B4((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FormatItemNodeAction);
  int v82 = swift_getEnumCaseMultiPayload();
  if (v82 != 1)
  {
    if (!v82)
    {
      uint64_t v83 = *(void *)v68;
      uint64_t v84 = *((void *)v68 + 1);
      uint64_t v85 = *((void *)v68 + 2);
      unint64_t v86 = a3;
      char v87 = v68[25];
      unsigned int v88 = v68[24];
      sub_1C0C5A3A8(v83, v84, v85, v88, v87, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      uint64_t *v67 = v83;
      v67[1] = v84;
      v67[2] = v85;
      *((unsigned char *)v67 + 24) = v88;
      *((unsigned char *)v67 + 25) = v87;
      a3 = v86;
      swift_storeEnumTagMultiPayload();
      goto LABEL_56;
    }
    size_t v81 = *(void *)(v70 + 64);
LABEL_39:
    memcpy(v67, v68, v81);
    goto LABEL_56;
  }
  type metadata accessor for FormatCommandOpenURL();
  int v90 = swift_getEnumCaseMultiPayload();
  if (v90 == 2 || v90 == 1)
  {
    uint64_t *v67 = *(void *)v68;
    v67[1] = *((void *)v68 + 1);
    v67[2] = *((void *)v68 + 2);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v104 = sub_1C1515FDC();
    (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v67, v68, v104);
    uint64_t v105 = type metadata accessor for FormatAbsoluteURL();
    *(uint64_t *)((char *)v67 + *(int *)(v105 + 20)) = *(void *)&v68[*(int *)(v105 + 20)];
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
LABEL_56:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v93 = a3[10];
  __int16 v94 = (unint64_t *)(a1 + v93);
  uint64_t v95 = a2 + v93;
  unint64_t v96 = *(void *)(a1 + v93);
  unint64_t v97 = *(void *)(a2 + v93);
  if (v96 == 3)
  {
    if (v97 >= 4) {
      goto LABEL_63;
    }
    goto LABEL_66;
  }
  if (v97 == 3)
  {
    sub_1C0C5ADDC(a1 + v93);
    goto LABEL_66;
  }
  if (v96 >= 3)
  {
    if (v97 >= 3)
    {
      *__int16 v94 = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v94[1] = *(void *)(v95 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    sub_1C0C5AD88(a1 + v93);
    goto LABEL_66;
  }
  if (v97 < 3)
  {
LABEL_66:
    *(_OWORD *)__int16 v94 = *(_OWORD *)v95;
    goto LABEL_67;
  }
LABEL_63:
  *__int16 v94 = v97;
  v94[1] = *(void *)(v95 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_67:
  uint64_t v98 = a3[11];
  uint64_t v99 = a1 + v98;
  long long v100 = (long long *)(a2 + v98);
  long long v101 = *v100;
  long long v102 = v100[1];
  *(_WORD *)(v99 + 32) = *((_WORD *)v100 + 16);
  *(_OWORD *)uint64_t v99 = v101;
  *(_OWORD *)(v99 + 16) = v102;
  return a1;
}

uint64_t sub_1C0C5ACE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0C5AD34(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0C5AD88(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0C5ADDC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v8 = a3[7];
  long long v9 = (char *)(a1 + v8);
  long long v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  uint64_t v11 = type metadata accessor for FormatItemNodeAction();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BFFA18D8(0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for FormatCommandOpenURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v15 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
        uint64_t v16 = type metadata accessor for FormatAbsoluteURL();
        *(void *)&v9[*(int *)(v16 + 20)] = *(void *)&v10[*(int *)(v16 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(v12 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_WORD *)(v19 + 32) = *(_WORD *)(v20 + 32);
  return a1;
}

uint64_t sub_1C0C5B078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFFA18D8(0);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0C5B128(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFFA18D8(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void *sub_1C0C5B1D0(double *a1, uint64_t a2)
{
  uint64_t v84 = a1;
  sub_1BFFA18D8(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFFA1874(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C15445C0;
  sub_1BFFA1874(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v6);
  uint64_t v8 = v7;
  sub_1C0181BEC(0);
  uint64_t v87 = v9;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v11 = (v10 + 32) & ~v10;
  uint64_t v86 = *(void *)(*(void *)(v9 - 8) + 72);
  uint64_t v81 = v10 | 7;
  uint64_t v82 = v8;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
  uint64_t v13 = (void *)(v12 + v11);
  uint64_t v83 = v5;
  if (a2)
  {
    unint64_t v14 = *(void *)(a2 + 40);
    uint64_t v80 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(void *)int v89 = sub_1C0C5779C();
    memset(&v89[8], 0, 32);
    uint64_t v90 = 0;
    long long v91 = xmmword_1C159B0A0;
    uint64_t v15 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)v89, v15 + 16);
    uint64_t v16 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v16 = sub_1C139486C;
    uint64_t v15 = 0;
    uint64_t v80 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v18 = (uint64_t (**)())((char *)v13 + *(int *)(v17 + 24));
  *uint64_t v18 = v16;
  v18[1] = (uint64_t (*)())v15;
  uint64_t v19 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  *(void *)(v12 + v11) = v80;
  uint64_t v13[2] = 0;
  v13[3] = 0;
  v13[1] = v14;
  uint64_t v20 = (char *)v13 + *(int *)(v17 + 28);
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  v20[16] = -1;
  long long v21 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v21(v13, 0, 1, v17);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v12, v93);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v22 = inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v22 + 64) = &off_1F1BDEC90;
  uint64_t v23 = swift_allocObject();
  *(void *)(v22 + 32) = v23;
  *(void *)(v23 + 48) = v94;
  long long v24 = v93[1];
  *(_OWORD *)(v23 + 16) = v93[0];
  *(_OWORD *)(v23 + 32) = v24;
  uint64_t v25 = v86;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C152A660;
  uint64_t v27 = (void *)(v26 + v11);
  sub_1C0433600(1701869908, 0xE400000000000000, 1835365449, 0xE400000000000000, v27);
  v21(v27, 0, 1, v17);
  if (a2)
  {
    sub_1C0432B74(0x6F74207370696C43, 0xEF73646E756F4220, *(unsigned char *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds), (void *)((char *)v27 + v25));
    v21((void *)((char *)v27 + v25), 0, 1, v17);
    uint64_t v28 = (uint64_t)v83;
    sub_1BFFA1380(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v83, (uint64_t (*)(void))sub_1BFFA18D8);
  }
  else
  {
    sub_1C0432B74(0x6F74207370696C43, 0xEF73646E756F4220, 2, (void *)((char *)v27 + v25));
    v21((void *)((char *)v27 + v25), 0, 1, v17);
    uint64_t v29 = type metadata accessor for FormatItemNodeAction();
    uint64_t v28 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v83, 1, 1, v29);
  }
  sub_1C043A478(0x746341206C6C6543, 0xEB000000006E6F69, v28, (void *)((char *)v27 + 2 * v25));
  v21((void *)((char *)v27 + 2 * v25), 0, 1, v17);
  if (a2) {
    char v30 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  }
  else {
    char v30 = 2;
  }
  uint64_t v31 = (void *)((char *)v27 + 3 * v86);
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v30, v31);
  v21(v31, 0, 1, v17);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v26, v95);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v32 = inited;
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(v32 + 104) = &off_1F1BDEC90;
  uint64_t v33 = swift_allocObject();
  *(void *)(v32 + 72) = v33;
  *(void *)(v33 + 48) = v96;
  long long v34 = v95[1];
  *(_OWORD *)(v33 + 16) = v95[0];
  *(_OWORD *)(v33 + 32) = v34;
  uint64_t v85 = a2;
  if (a2)
  {
    uint64_t v35 = *(void *)(a2 + 48);
    uint64_t v36 = *(void *)(a2 + 56);
    uint64_t v37 = *(void *)(a2 + 64);
    uint64_t v38 = *(void *)(a2 + 72);
    uint64_t v39 = *(void *)(a2 + 80);
    uint64_t v40 = *(void *)(a2 + 88);
    uint64_t v41 = *(void *)(a2 + 96);
    uint64_t v42 = *(void *)(a2 + 104);
    LODWORD(v87) = *(unsigned __int8 *)(a2 + 112);
    uint64_t v43 = v35;
    uint64_t v44 = v36;
    uint64_t v45 = v37;
    uint64_t v46 = v38;
    uint64_t v47 = v39;
    uint64_t v48 = v40;
    uint64_t v49 = v41;
    a2 = v42;
    sub_1BFF8C638(v35, v36, v37, v38, v39, v40, v41, v42, v87, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    LODWORD(v87) = 126;
  }
  *(void *)int v89 = v43;
  *(void *)&v89[8] = v44;
  *(void *)&v89[16] = v45;
  *(void *)&v89[24] = v46;
  *(void *)&v89[32] = v47;
  uint64_t v90 = v48;
  *(void *)&long long v91 = v49;
  *((void *)&v91 + 1) = a2;
  unsigned __int8 v50 = v87;
  char v92 = v87;
  uint64_t v51 = sub_1C09D129C(v84, (uint64_t)v89);
  uint64_t v52 = v43;
  uint64_t v53 = v51;
  sub_1BFF8C638(v52, v44, v45, v46, v47, v48, v49, a2, v50, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
  uint64_t v54 = inited;
  *(void *)(inited + 136) = &type metadata for FormatInspection;
  *(void *)(v54 + 144) = &off_1F1C29D30;
  *(void *)(v54 + 112) = v53;
  if (v85)
  {
    uint64_t v55 = *(void *)(v85 + 120);
    uint64_t v56 = *(void *)(v85 + 128);
    uint64_t v57 = *(void *)(v85 + 136);
    uint64_t v58 = *(void *)(v85 + 144);
    uint64_t v59 = *(void *)(v85 + 152);
    uint64_t v60 = *(void *)(v85 + 160);
    uint64_t v61 = *(void *)(v85 + 168);
    char v62 = *(unsigned char *)(v85 + 176);
    sub_1BFF8C70C(v55, v56, v57, v58, v59, v60, v61, v62);
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    char v62 = -1;
  }
  long long v63 = (void *)inited;
  uint64_t v87 = inited + 32;
  *(void *)int v89 = v55;
  *(void *)&v89[8] = v56;
  *(void *)&v89[16] = v57;
  *(void *)&v89[24] = v58;
  *(void *)&v89[32] = v59;
  uint64_t v90 = v60;
  *(void *)&long long v91 = v61;
  BYTE8(v91) = v62;
  long long v64 = sub_1C142A330((uint64_t)v89);
  uint64_t v65 = v55;
  uint64_t v66 = v64;
  sub_1BFF8C720(v65, v56, v57, v58, v59, v60, v61, v62);
  v63[22] = &type metadata for FormatInspection;
  v63[23] = &off_1F1C29D30;
  v63[19] = v66;
  uint64_t v67 = v85;
  if (v85)
  {
    unint64_t v69 = *(void *)(v85 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    uint64_t v68 = *(void *)(v85 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    sub_1BFFA1B08(v69);
  }
  else
  {
    uint64_t v68 = 0;
    unint64_t v69 = 3;
  }
  *(void *)int v89 = v69;
  *(void *)&v89[8] = v68;
  uint64_t v70 = sub_1C097C238((uint64_t *)v89);
  sub_1BFF8C734(v69);
  uint64_t v71 = inited;
  *(void *)(inited + 216) = &type metadata for FormatInspection;
  *(void *)(v71 + 224) = &off_1F1C29D30;
  *(void *)(v71 + 192) = v70;
  if (v67)
  {
    long long v72 = *(_OWORD *)(v67 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
    long long v73 = *(_OWORD *)(v67 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 16);
    __int16 v74 = *(_WORD *)(v67 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  }
  else
  {
    long long v72 = 0uLL;
    __int16 v74 = 1024;
    long long v73 = 0uLL;
  }
  *(_OWORD *)int v89 = v72;
  *(_OWORD *)&v89[16] = v73;
  *(_WORD *)&v89[32] = v74;
  uint64_t v75 = sub_1C0CE0034((uint64_t *)v89);
  uint64_t v76 = inited;
  *(void *)(inited + 256) = &type metadata for FormatInspection;
  *(void *)(v76 + 264) = &off_1F1C29D30;
  *(void *)(v76 + 232) = v75;
  uint64_t v77 = sub_1C131B79C(v76);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v77;
}

uint64_t sub_1C0C5BAFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0C5BB44()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

void sub_1C0C5BB88()
{
  if (!qword_1EA1A0840)
  {
    sub_1BFFA18D8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A0840);
    }
  }
}

uint64_t sub_1C0C5BBEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  char v9 = *(unsigned char *)(a1 + 120);
  sub_1BFF8C720(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_1BFF8C720(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatUploadConfirmSection()
{
  return &type metadata for DebugFormatUploadConfirmSection;
}

uint64_t sub_1C0C5BC90()
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C0C5C6D8();
  uint64_t v0 = swift_allocObject();
  if (v2 - 1 > 1)
  {
    *(_OWORD *)(v0 + 16) = xmmword_1C1529AE0;
    *(void *)(v0 + 32) = 0x746567726154;
    *(void *)(v0 + 40) = 0xE600000000000000;
    *(void *)(v0 + 72) = &type metadata for DebugFormatUploadTarget;
    *(void *)(v0 + 80) = sub_1C0C5C730();
    swift_retain();
    sub_1C151709C();
    swift_release();
    *(unsigned char *)(v0 + 88) = 0;
  }
  else
  {
    *(_OWORD *)(v0 + 16) = xmmword_1C1527210;
    *(void *)(v0 + 32) = 0x746567726154;
    *(void *)(v0 + 40) = 0xE600000000000000;
    *(void *)(v0 + 72) = &type metadata for DebugFormatUploadTarget;
    *(void *)(v0 + 80) = sub_1C0C5C730();
    swift_retain();
    sub_1C151709C();
    swift_release();
    *(unsigned char *)(v0 + 88) = 0;
    *(void *)(v0 + 96) = 0x6D6E6F7269766E45;
    *(void *)(v0 + 104) = 0xEB00000000746E65;
    *(void *)(v0 + 136) = &type metadata for DebugFormatBackendEnvironment;
    *(void *)(v0 + 144) = sub_1C0C5C784();
    swift_retain();
    sub_1C151709C();
    swift_release();
    *(unsigned char *)(v0 + 152) = 0;
  }
  swift_release();
  return 0x64616F6C7055;
}

uint64_t sub_1C0C5BE5C(unint64_t a1, unsigned char *a2)
{
  uint64_t v2 = 0x74756F79616CLL;
  int v3 = *a2;
  unint64_t v4 = 0xE600000000000000;
  switch(*a2)
  {
    case 1:
      uint64_t v2 = 0x726564616568;
      break;
    case 2:
      uint64_t v2 = 0x7265746F6F66;
      break;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v2 = 0x6C6C6177796170;
      break;
    case 4:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v2 = 0x656D656874;
      break;
    case 5:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v2 = 0x7972617262696CLL;
      break;
    case 6:
      uint64_t v2 = 0x756F72676B636162;
      unint64_t v4 = 0xEA0000000000646ELL;
      break;
    default:
      break;
  }
  swift_bridgeObjectRetain();
  sub_1BFE7E4D4(v2, v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_1BFF27ECC();
    uint64_t v8 = sub_1C151FE5C();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1C029748C(1uLL, v2, v4);
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v11, v13, v15, v17);
    swift_bridgeObjectRelease();
    v43[1] = v10;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v8;
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  v43[0] = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19)
    {
LABEL_12:
      if (v19 >= 1)
      {
        if ((a1 & 0xC000000000000001) == 0)
        {
          uint64_t v28 = 0;
          while (2)
          {
            unint64_t v29 = 0xE600000000000000;
            uint64_t v30 = 0x74756F79616CLL;
            switch(*(unsigned char *)(*(void *)(*(void *)(a1 + 8 * v28 + 32) + 16)
                              + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role))
            {
              case 1:
                uint64_t v30 = 0x726564616568;
                break;
              case 2:
                uint64_t v30 = 0x7265746F6F66;
                break;
              case 3:
                unint64_t v29 = 0xE700000000000000;
                uint64_t v30 = 0x6C6C6177796170;
                break;
              case 4:
                unint64_t v29 = 0xE500000000000000;
                uint64_t v30 = 0x656D656874;
                break;
              case 5:
                unint64_t v29 = 0xE700000000000000;
                uint64_t v30 = 0x7972617262696CLL;
                break;
              case 6:
                uint64_t v30 = 0x756F72676B636162;
                unint64_t v29 = 0xEA0000000000646ELL;
                break;
              default:
                break;
            }
            unint64_t v31 = 0xE600000000000000;
            uint64_t v32 = 0x74756F79616CLL;
            switch(v3)
            {
              case 1:
                uint64_t v33 = 1684104552;
                goto LABEL_54;
              case 2:
                uint64_t v33 = 1953460070;
LABEL_54:
                if (v30 != (v33 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
                  goto LABEL_65;
                }
                goto LABEL_62;
              case 3:
                unint64_t v31 = 0xE700000000000000;
                if (v30 != 0x6C6C6177796170) {
                  goto LABEL_65;
                }
                goto LABEL_62;
              case 4:
                unint64_t v31 = 0xE500000000000000;
                if (v30 != 0x656D656874) {
                  goto LABEL_65;
                }
                goto LABEL_62;
              case 5:
                unint64_t v31 = 0xE700000000000000;
                uint64_t v32 = 0x7972617262696CLL;
                goto LABEL_61;
              case 6:
                unint64_t v31 = 0xEA0000000000646ELL;
                if (v30 != 0x756F72676B636162) {
                  goto LABEL_65;
                }
                goto LABEL_62;
              default:
LABEL_61:
                if (v30 != v32) {
                  goto LABEL_65;
                }
LABEL_62:
                if (v29 == v31)
                {
                  swift_retain();
                  swift_bridgeObjectRelease_n();
                }
                else
                {
LABEL_65:
                  char v34 = sub_1C1520A9C();
                  swift_retain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v34 & 1) == 0)
                  {
                    swift_release();
                    goto LABEL_43;
                  }
                }
                sub_1C152025C();
                sub_1C152029C();
                sub_1C15202AC();
                sub_1C152026C();
LABEL_43:
                if (v19 != ++v28) {
                  continue;
                }
                goto LABEL_67;
            }
          }
        }
        uint64_t v20 = 0;
        while (2)
        {
          uint64_t v21 = *(void *)(MEMORY[0x1C18C7CB0](v20, a1) + 16);
          unint64_t v22 = 0xE600000000000000;
          uint64_t v23 = 0x74756F79616CLL;
          switch(*(unsigned char *)(v21 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role))
          {
            case 1:
              uint64_t v23 = 0x726564616568;
              break;
            case 2:
              uint64_t v23 = 0x7265746F6F66;
              break;
            case 3:
              unint64_t v22 = 0xE700000000000000;
              uint64_t v23 = 0x6C6C6177796170;
              break;
            case 4:
              unint64_t v22 = 0xE500000000000000;
              uint64_t v23 = 0x656D656874;
              break;
            case 5:
              unint64_t v22 = 0xE700000000000000;
              uint64_t v23 = 0x7972617262696CLL;
              break;
            case 6:
              uint64_t v23 = 0x756F72676B636162;
              unint64_t v22 = 0xEA0000000000646ELL;
              break;
            default:
              break;
          }
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x74756F79616CLL;
          switch(v3)
          {
            case 1:
              uint64_t v26 = 1684104552;
              goto LABEL_28;
            case 2:
              uint64_t v26 = 1953460070;
LABEL_28:
              if (v23 != (v26 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
                goto LABEL_37;
              }
              goto LABEL_36;
            case 3:
              unint64_t v24 = 0xE700000000000000;
              if (v23 != 0x6C6C6177796170) {
                goto LABEL_37;
              }
              goto LABEL_36;
            case 4:
              unint64_t v24 = 0xE500000000000000;
              if (v23 != 0x656D656874) {
                goto LABEL_37;
              }
              goto LABEL_36;
            case 5:
              unint64_t v24 = 0xE700000000000000;
              uint64_t v25 = 0x7972617262696CLL;
              goto LABEL_35;
            case 6:
              unint64_t v24 = 0xEA0000000000646ELL;
              if (v23 != 0x756F72676B636162) {
                goto LABEL_37;
              }
              goto LABEL_36;
            default:
LABEL_35:
              if (v23 != v25) {
                goto LABEL_37;
              }
LABEL_36:
              if (v22 == v24)
              {
                swift_bridgeObjectRelease_n();
LABEL_16:
                sub_1C152025C();
                sub_1C152029C();
                sub_1C15202AC();
                sub_1C152026C();
                goto LABEL_17;
              }
LABEL_37:
              char v27 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v27) {
                goto LABEL_16;
              }
              swift_unknownObjectRelease();
LABEL_17:
              if (v19 != ++v20) {
                continue;
              }
LABEL_67:
              swift_bridgeObjectRelease();
              uint64_t v18 = MEMORY[0x1E4FBC860];
              uint64_t v35 = v43[0];
              if ((v43[0] & 0x8000000000000000) != 0) {
                goto LABEL_82;
              }
              goto LABEL_71;
          }
        }
      }
      __break(1u);
LABEL_86:
      __break(1u);
      JUMPOUT(0x1C0C5C64CLL);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = v43[0];
  if ((v43[0] & 0x8000000000000000) != 0)
  {
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1C15204BC();
    swift_release();
    if (v36) {
      goto LABEL_73;
    }
LABEL_83:
    swift_release();
    return v2;
  }
LABEL_71:
  if ((v35 & 0x4000000000000000) != 0) {
    goto LABEL_82;
  }
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36) {
    goto LABEL_83;
  }
LABEL_73:
  uint64_t v45 = v18;
  sub_1C05F6BD8(0, v36 & ~(v36 >> 63), 0);
  if (v36 < 0) {
    goto LABEL_86;
  }
  uint64_t v37 = 0;
  uint64_t v38 = v45;
  do
  {
    if ((v35 & 0xC000000000000001) != 0) {
      uint64_t v39 = MEMORY[0x1C18C7CB0](v37, v35);
    }
    else {
      uint64_t v39 = swift_retain();
    }
    v43[0] = v39;
    char v44 = 1;
    uint64_t v45 = v38;
    unint64_t v41 = *(void *)(v38 + 16);
    unint64_t v40 = *(void *)(v38 + 24);
    if (v41 >= v40 >> 1)
    {
      sub_1C05F6BD8(v40 > 1, v41 + 1, 1);
      uint64_t v38 = v45;
    }
    ++v37;
    *(void *)(v38 + 16) = v41 + 1;
    sub_1C01DCEA0((uint64_t)v43, v38 + (v41 << 6) + 32);
  }
  while (v36 != v37);
  swift_release();
  return v2;
}

void sub_1C0C5C6D8()
{
  if (!qword_1EA19C918)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA19C918);
    }
  }
}

unint64_t sub_1C0C5C730()
{
  unint64_t result = qword_1EA1A5048;
  if (!qword_1EA1A5048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5048);
  }
  return result;
}

unint64_t sub_1C0C5C784()
{
  unint64_t result = qword_1EA1A5050;
  if (!qword_1EA1A5050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5050);
  }
  return result;
}

uint64_t sub_1C0C5C7D8()
{
  objc_msgSend(v0, sel_displayGamut);
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_horizontalSizeClass);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  objc_msgSend(v0, sel_verticalSizeClass);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  objc_msgSend(v0, sel_displayScale);
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  objc_msgSend(v0, sel_userInterfaceStyle);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 91;
}

id sub_1C0C5CB00(char a1)
{
  switch(a1)
  {
    case 1:
      id v3 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      return objc_msgSend(v3, sel_initWithRed_green_blue_alpha_, 0.988235294, 0.729411765, 0.0117647059, 1.0);
    case 2:
      id v1 = objc_msgSend(self, sel_systemRedColor);
      goto LABEL_5;
    case 3:
      id v1 = objc_msgSend(self, sel_systemGray2Color);
      goto LABEL_5;
    default:
      id v1 = objc_msgSend(self, sel_systemGreenColor);
LABEL_5:
      return v1;
  }
}

uint64_t SportsEventState.selectors.getter(char a1)
{
  uint64_t v1 = sub_1C00B818C((uint64_t)*(&off_1E6417268 + a1));
  swift_arrayDestroy();
  return v1;
}

void *static SportsEventState.allCases.getter()
{
  return &unk_1F1B89AC0;
}

uint64_t sub_1C0C5CC68()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C5CD38()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C5CDF0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C5CEBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s8NewsFeed16SportsEventStateO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1C0C5CEEC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x656D6167657270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656D61476576696CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x656D614774736F70;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C0C5CF84()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0C5CFE4()
{
  return sub_1C151EAEC();
}

void sub_1C0C5D034(void *a1@<X8>)
{
  *a1 = &unk_1F1B69DD8;
}

uint64_t sub_1C0C5D044(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x656D6167657270;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x656D6167657270;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      unsigned int v6 = 1702259052;
      goto LABEL_4;
    case 2:
      unint64_t v4 = 0xE800000000000000;
      unsigned int v6 = 1953722224;
LABEL_4:
      uint64_t v5 = v6 | 0x656D614700000000;
      break;
    case 3:
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      if (v5 == 0x656D61476576696CLL) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v2 = 0x656D614774736F70;
      goto LABEL_10;
    case 3:
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v4 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t SportsEventState.description.getter(char a1)
{
  uint64_t result = 0x656D6167657270;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1702259052;
      goto LABEL_4;
    case 2:
      unsigned int v3 = 1953722224;
LABEL_4:
      uint64_t result = v3 | 0x656D614700000000;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0C5D250()
{
  uint64_t result = 0x656D6167657270;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1702259052;
      goto LABEL_4;
    case 2:
      unsigned int v2 = 1953722224;
LABEL_4:
      uint64_t result = v2 | 0x656D614700000000;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s8NewsFeed16SportsEventStateO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C0C5D324()
{
  unint64_t result = qword_1EB865DD8;
  if (!qword_1EB865DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865DD8);
  }
  return result;
}

unint64_t sub_1C0C5D37C()
{
  unint64_t result = qword_1EA1A5058;
  if (!qword_1EA1A5058)
  {
    sub_1C0C5D3D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5058);
  }
  return result;
}

void sub_1C0C5D3D4()
{
  if (!qword_1EA1A5060)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A5060);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsEventState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C5D4F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEventState()
{
  return &type metadata for SportsEventState;
}

unint64_t sub_1C0C5D530()
{
  unint64_t result = qword_1EA1A5068;
  if (!qword_1EA1A5068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5068);
  }
  return result;
}

NewsFeed::FormatURLAnnotator __swiftcall FormatURLAnnotator.init(contentIdentifier:itemIdentifier:)(Swift::String_optional contentIdentifier, Swift::String_optional itemIdentifier)
{
  *unsigned int v2 = contentIdentifier;
  v2[1] = itemIdentifier;
  result.itemIdentifier = itemIdentifier;
  result.contentIdentifier = contentIdentifier;
  return result;
}

uint64_t sub_1C0C5D594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  uint64_t v71 = a2;
  uint64_t v72 = a3;
  uint64_t v80 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v76 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1FB8C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v75 = (char *)&v63 - v11;
  uint64_t v12 = sub_1C15155DC();
  uint64_t v79 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v78 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v77 = (char *)&v63 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v63 - v17;
  sub_1BFF1FB8C(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v63 - v20;
  uint64_t v22 = sub_1C15156FC();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v63 - v27;
  sub_1C151564C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1BFF1F954((uint64_t)v21, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v80, a1, v7);
  }
  else
  {
    uint64_t v69 = v8;
    uint64_t v70 = v7;
    uint64_t v68 = a1;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v28, v21, v22);
    sub_1C15156EC();
    sub_1C15156CC();
    sub_1C151569C();
    uint64_t v30 = sub_1C15155FC();
    if (v30) {
      unint64_t v31 = v30;
    }
    else {
      unint64_t v31 = MEMORY[0x1E4FBC860];
    }
    uint64_t v32 = *(void *)(v31 + 16);
    uint64_t v33 = v23;
    char v34 = v25;
    uint64_t v67 = v22;
    if (v32)
    {
      long long v64 = v25;
      uint64_t v65 = v28;
      uint64_t v66 = v23;
      uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v79 + 16);
      unint64_t v36 = v31 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      uint64_t v37 = *(void *)(v79 + 72);
      uint64_t v38 = (void (**)(char *, uint64_t))(v79 + 8);
      unint64_t v63 = v31;
      swift_bridgeObjectRetain();
      while (1)
      {
        v35(v18, v36, v12);
        if (sub_1C15155BC() == 0x6469635F66666ELL && v39 == 0xE700000000000000) {
          break;
        }
        char v40 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        (*v38)(v18, v12);
        if (v40) {
          goto LABEL_23;
        }
        v36 += v37;
        if (!--v32)
        {
          unint64_t v41 = v63;
          swift_bridgeObjectRelease();
          unint64_t v31 = v41;
          uint64_t v28 = v65;
          uint64_t v33 = v66;
          char v34 = v64;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      (*v38)(v18, v12);
LABEL_23:
      swift_bridgeObjectRelease_n();
      uint64_t v61 = v67;
      char v62 = *(void (**)(char *, uint64_t))(v66 + 8);
      v62(v64, v67);
      v62(v65, v61);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v80, v68, v70);
    }
    else
    {
LABEL_13:
      unint64_t v42 = v31;
      sub_1C15155AC();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v43 = v42;
      }
      else {
        unint64_t v43 = sub_1BFFB4568(0, *(void *)(v42 + 16) + 1, 1, v42);
      }
      unint64_t v45 = *(void *)(v43 + 16);
      unint64_t v44 = *(void *)(v43 + 24);
      uint64_t v46 = v34;
      uint64_t v47 = v33;
      if (v45 >= v44 >> 1) {
        unint64_t v43 = sub_1BFFB4568(v44 > 1, v45 + 1, 1, v43);
      }
      *(void *)(v43 + 16) = v45 + 1;
      uint64_t v48 = *(void (**)(unint64_t, char *, uint64_t))(v79 + 32);
      unint64_t v49 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
      uint64_t v50 = *(void *)(v79 + 72);
      unint64_t v51 = v43;
      v48(v43 + v49 + v50 * v45, v77, v12);
      sub_1C15155AC();
      uint64_t v52 = v51;
      unint64_t v54 = *(void *)(v51 + 16);
      unint64_t v53 = *(void *)(v51 + 24);
      if (v54 >= v53 >> 1) {
        uint64_t v52 = sub_1BFFB4568(v53 > 1, v54 + 1, 1, v51);
      }
      *(void *)(v52 + 16) = v54 + 1;
      v48(v52 + v49 + v54 * v50, v78, v12);
      sub_1C151560C();
      sub_1C151568C();
      sub_1C15156DC();
      uint64_t v55 = (uint64_t)v75;
      sub_1C151565C();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v47 + 8);
      uint64_t v57 = v67;
      v56(v46, v67);
      v56(v28, v57);
      uint64_t v58 = v69;
      uint64_t v59 = v76;
      uint64_t v60 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v76, v68, v70);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v55, 1, v60) == 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v80, v59, v60);
        return sub_1BFF1F954(v55, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v80, v55, v60);
      }
    }
  }
}

uint64_t FormatURLAnnotator.copy(withFeedItem:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  uint64_t v8 = v2[1];
  uint64_t v10 = v2[2];
  uint64_t v11 = v2[3];
  sub_1BFF1985C(a1, (uint64_t)&v14);
  if (v15)
  {
    sub_1BFC773DC(&v14, (uint64_t)v16);
    sub_1BFC66384((uint64_t)v16, (uint64_t)&v14);
    sub_1BFFF4D94(&v14, (uint64_t)v7);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C0C5DE64((uint64_t)v7);
    uint64_t v11 = v12;
    sub_1BFF5B64C((uint64_t)v7, type metadata accessor for FeedItem);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    sub_1BFF1F954((uint64_t)&v14, qword_1EB873870, (void (*)(uint64_t))sub_1BFFFCF34);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a2 = v9;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v11;
  return result;
}

uint64_t sub_1C0C5DE64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (id *)((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C5EDA8(a1, (uint64_t)v19, type metadata accessor for FeedItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      sub_1BFEEFB50((uint64_t)v19, (uint64_t)v16, type metadata accessor for FeedHeadline);
      id v20 = objc_msgSend(v16[5], sel_identifier);
      uint64_t v21 = sub_1C151E62C();

      uint64_t v22 = type metadata accessor for FeedHeadline;
      uint64_t v23 = (uint64_t)v16;
      goto LABEL_11;
    case 4u:
      sub_1BFEEFB50((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v21 = *((void *)v13 + 5);
      swift_bridgeObjectRetain();
      uint64_t v22 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      uint64_t v23 = (uint64_t)v13;
      goto LABEL_11;
    case 5u:
      long long v24 = *((_OWORD *)v19 + 7);
      long long v49 = *((_OWORD *)v19 + 6);
      *(_OWORD *)uint64_t v50 = v24;
      *(_OWORD *)&v50[9] = *(_OWORD *)(v19 + 121);
      long long v25 = *((_OWORD *)v19 + 1);
      long long v43 = *(_OWORD *)v19;
      long long v44 = v25;
      long long v26 = *((_OWORD *)v19 + 3);
      long long v45 = *((_OWORD *)v19 + 2);
      long long v46 = v26;
      long long v27 = *((_OWORD *)v19 + 5);
      long long v47 = *((_OWORD *)v19 + 4);
      id v28 = objc_msgSend((id)v43, sel_identifier, (void)v43, *((void *)&v43 + 1), (void)v44, *((void *)&v44 + 1), v45, v26, v47, v27, v49, *(_OWORD *)v50, *(_OWORD *)&v50[16]);
      uint64_t v21 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v43);
      return v21;
    case 7u:
      long long v29 = *((_OWORD *)v19 + 7);
      long long v49 = *((_OWORD *)v19 + 6);
      *(_OWORD *)uint64_t v50 = v29;
      *(_OWORD *)&v50[16] = *((_OWORD *)v19 + 8);
      LOBYTE(v51) = v19[144];
      long long v30 = *((_OWORD *)v19 + 3);
      long long v45 = *((_OWORD *)v19 + 2);
      long long v46 = v30;
      long long v31 = *((_OWORD *)v19 + 5);
      long long v47 = *((_OWORD *)v19 + 4);
      long long v48 = v31;
      long long v32 = *((_OWORD *)v19 + 1);
      long long v43 = *(_OWORD *)v19;
      id v33 = objc_msgSend((id)v32, sel_identifier, (void)v43, *((void *)&v43 + 1), v32, v45, v46, v47, v48, v49, *(_OWORD *)v50, *(_OWORD *)&v50[16], (void)v51);
      uint64_t v21 = sub_1C151E62C();

      sub_1BFEA4290((uint64_t)&v43);
      return v21;
    case 8u:
      sub_1BFEEFB50((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      sub_1C0C5EDA8((uint64_t)&v10[*(int *)(v8 + 20)], (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      sub_1BFF5B64C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v21 = *v7;
      swift_bridgeObjectRetain();
      uint64_t v22 = (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved;
      uint64_t v23 = (uint64_t)v7;
      goto LABEL_11;
    case 0xDu:
      long long v34 = *((_OWORD *)v19 + 11);
      long long v52 = *((_OWORD *)v19 + 10);
      long long v53 = v34;
      long long v54 = *((_OWORD *)v19 + 12);
      long long v35 = *((_OWORD *)v19 + 7);
      long long v49 = *((_OWORD *)v19 + 6);
      *(_OWORD *)uint64_t v50 = v35;
      long long v36 = *((_OWORD *)v19 + 9);
      *(_OWORD *)&v50[16] = *((_OWORD *)v19 + 8);
      long long v51 = v36;
      long long v37 = *((_OWORD *)v19 + 3);
      long long v45 = *((_OWORD *)v19 + 2);
      long long v46 = v37;
      long long v38 = *((_OWORD *)v19 + 5);
      long long v47 = *((_OWORD *)v19 + 4);
      long long v48 = v38;
      long long v39 = *(_OWORD *)v19;
      long long v44 = *((_OWORD *)v19 + 1);
      long long v43 = v39;
      uint64_t v21 = *((void *)&v45 + 1);
      swift_bridgeObjectRetain();
      sub_1C01F0A74((uint64_t)&v43);
      return v21;
    case 0xEu:
      uint64_t v40 = *((void *)v19 + 3);
      unint64_t v41 = *((void *)v19 + 4);
      uint64_t v21 = *((void *)v19 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEFC20(v40, v41);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v21;
    case 0xFu:
      sub_1BFEEFB50((uint64_t)v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v21 = *((void *)v4 + 5);
      swift_bridgeObjectRetain();
      uint64_t v22 = (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic;
      uint64_t v23 = (uint64_t)v4;
LABEL_11:
      sub_1BFF5B64C(v23, v22);
      break;
    default:
      sub_1BFF5B64C((uint64_t)v19, type metadata accessor for FeedItem);
      uint64_t v21 = 0;
      break;
  }
  return v21;
}

uint64_t sub_1C0C5E404()
{
  if (*v0) {
    return 0x6E6564496D657469;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1C0C5E450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C5EC94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C5E478(uint64_t a1)
{
  unint64_t v2 = sub_1C0C5E67C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C5E4B4(uint64_t a1)
{
  unint64_t v2 = sub_1C0C5E67C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatURLAnnotator.encode(to:)(void *a1)
{
  sub_1C0C5E8E8(0, &qword_1EA1A5070, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  _OWORD v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C5E67C();
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C152074C();
  if (!v9)
  {
    char v12 = 1;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0C5E67C()
{
  unint64_t result = qword_1EA1A5078;
  if (!qword_1EA1A5078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5078);
  }
  return result;
}

uint64_t FormatURLAnnotator.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0C5E8E8(0, &qword_1EA1A5080, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C5E67C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_1C152060C();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152060C();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0C5E8E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C5E67C();
    unint64_t v7 = a3(a1, &type metadata for FormatURLAnnotator.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0C5E94C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatURLAnnotator.init(from:)(a1, a2);
}

uint64_t sub_1C0C5E964(void *a1)
{
  return FormatURLAnnotator.encode(to:)(a1);
}

uint64_t static FormatURLAnnotator.transferAnnotations(fromURL:toURL:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C1515DDC();
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v5;
    uint64_t v8 = sub_1C1515DDC();
    sub_1C0C5D594(a1, v6, v7, v8, v9, a2);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    return v12(a2, a1, v11);
  }
}

unsigned char *storeEnumTagSinglePayload for FormatURLAnnotator.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C5EB54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatURLAnnotator.CodingKeys()
{
  return &type metadata for FormatURLAnnotator.CodingKeys;
}

unint64_t sub_1C0C5EB90()
{
  unint64_t result = qword_1EA1A5088;
  if (!qword_1EA1A5088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5088);
  }
  return result;
}

unint64_t sub_1C0C5EBE8()
{
  unint64_t result = qword_1EA1A5090;
  if (!qword_1EA1A5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5090);
  }
  return result;
}

unint64_t sub_1C0C5EC40()
{
  unint64_t result = qword_1EA1A5098;
  if (!qword_1EA1A5098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5098);
  }
  return result;
}

uint64_t sub_1C0C5EC94(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001C1620870 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C0C5EDA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatSourceMapCollection()
{
  return self;
}

ValueMetadata *type metadata accessor for FormatSourceMapEntry()
{
  return &type metadata for FormatSourceMapEntry;
}

uint64_t sub_1C0C5EE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a1;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v25 = (char *)&v18 - v12;
  swift_bridgeObjectRetain();
  if (!MEMORY[0x1C18C6870](a2, a3)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = 0;
  uint64_t v22 = a4;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8);
  uint64_t v19 = v9;
  char v20 = v14;
  uint64_t v21 = a4 + 8;
  uint64_t v23 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
  while (1)
  {
    char v15 = sub_1C151ECDC();
    sub_1C151EC7C();
    if (v15)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v25, a2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v13, a3);
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_11;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1C152016C();
    if (v19 != 8) {
      break;
    }
    uint64_t v26 = result;
    (*v23)(v25, &v26, a3);
    swift_unknownObjectRelease();
    uint64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v25, a3);
    v20(v24, a3, v22);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
    if (!v4)
    {
      ++v13;
      if (v16 != MEMORY[0x1C18C6870](a2, a3)) {
        continue;
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0C5F0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0C5EE44(a1, *v3, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_1C0C5F0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a1;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v48 = sub_1C151FD8C();
  MEMORY[0x1F4188790](v48);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = *(void *)(a2 + 64);
  uint64_t v36 = a2 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v38 = v7 + 16;
  uint64_t v39 = v7;
  long long v46 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v47 = TupleTypeMetadata2 - 8;
  uint64_t v45 = a4;
  uint64_t v42 = a4 + 8;
  long long v43 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v40 = a2;
  unint64_t v41 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
  int64_t v37 = (unint64_t)(v19 + 63) >> 6;
  int64_t v35 = v37 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  while (1)
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      int64_t v25 = v23;
      unint64_t v26 = v24 | (v23 << 6);
      goto LABEL_6;
    }
    int64_t v31 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v31 >= v37)
    {
      int64_t v25 = v23;
      goto LABEL_12;
    }
    unint64_t v32 = *(void *)(v36 + 8 * v31);
    if (v32) {
      goto LABEL_10;
    }
    int64_t v25 = v23 + 2;
    if (v23 + 2 >= v37)
    {
      int64_t v25 = v23 + 1;
      goto LABEL_12;
    }
    unint64_t v32 = *(void *)(v36 + 8 * v25);
    if (v32)
    {
      int64_t v31 = v23 + 2;
      goto LABEL_10;
    }
    int64_t v34 = v23 + 3;
    if (v34 < v37) {
      break;
    }
LABEL_12:
    uint64_t v30 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v13, 1, 1, TupleTypeMetadata2);
    unint64_t v21 = 0;
LABEL_13:
    (*v46)(v17, v13, v48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v17, 1, TupleTypeMetadata2) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = v49;
      (*v43)(v9, &v17[*(int *)(TupleTypeMetadata2 + 48)], v49);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v33);
      uint64_t result = (*v41)(v9, v33);
      int64_t v23 = v25;
      if (!v4) {
        continue;
      }
    }
    return swift_release();
  }
  unint64_t v32 = *(void *)(v36 + 8 * v34);
  if (v32)
  {
    int64_t v31 = v34;
LABEL_10:
    unint64_t v21 = (v32 - 1) & v32;
    unint64_t v26 = __clz(__rbit64(v32)) + (v31 << 6);
    int64_t v25 = v31;
LABEL_6:
    uint64_t v27 = *(void *)(v40 + 56);
    id v28 = (void *)(*(void *)(v40 + 48) + 16 * v26);
    uint64_t v29 = v28[1];
    *(void *)uint64_t v13 = *v28;
    *((void *)v13 + 1) = v29;
    (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(&v13[*(int *)(TupleTypeMetadata2 + 48)], v27 + *(void *)(v39 + 72) * v26, v49);
    uint64_t v30 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v13, 0, 1, TupleTypeMetadata2);
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  while (1)
  {
    int64_t v31 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v31 >= v37)
    {
      int64_t v25 = v35;
      goto LABEL_12;
    }
    unint64_t v32 = *(void *)(v36 + 8 * v31);
    ++v34;
    if (v32) {
      goto LABEL_10;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C0C5F580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0C5F0D4(a1, *v3, *(void *)(a2 + 24), *(void *)(a3 - 8));
}

uint64_t sub_1C0C5F5A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v7 = (void *)a2[3];
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v8 = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v10;
      uint64_t v11 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v11;
      uint64_t v12 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v12;
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *(void *)(a1 + 56) = a2[7];
      uint64_t v13 = a2 + 8;
      unint64_t v14 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *v13;
      }
      else
      {
        *(unsigned char *)(a1 + 64) = *(unsigned char *)v13;
        *(void *)(a1 + 72) = v14;
        swift_bridgeObjectRetain();
      }
      uint64_t v15 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v15;
      uint64_t v16 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v16;
      uint64_t v17 = a2[15];
      *(void *)(a1 + 112) = a2[14];
      *(void *)(a1 + 120) = v17;
      *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
      uint64_t v18 = a2[18];
      *(void *)(a1 + 136) = a2[17];
      *(void *)(a1 + 144) = v18;
      uint64_t v90 = type metadata accessor for DebugFormatTestCaseResult(0);
      uint64_t v19 = *(int *)(v90 + 24);
      uint64_t v89 = a1;
      uint64_t v92 = a1 + v19;
      long long v91 = a2;
      uint64_t v20 = (uint64_t)a2 + v19;
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          uint64_t v42 = *(void *)(v20 + 8);
          *(void *)uint64_t v92 = *(void *)v20;
          *(void *)(v92 + 8) = v42;
          uint64_t v43 = *(void *)(v20 + 24);
          *(void *)(v92 + 16) = *(void *)(v20 + 16);
          *(void *)(v92 + 24) = v43;
          uint64_t v44 = *(void *)(v20 + 40);
          *(void *)(v92 + 32) = *(void *)(v20 + 32);
          *(void *)(v92 + 40) = v44;
          *(unsigned char *)(v92 + 48) = *(unsigned char *)(v20 + 48);
          *(void *)(v92 + 56) = *(void *)(v20 + 56);
          uint64_t v45 = (_OWORD *)(v92 + 64);
          long long v46 = (_OWORD *)(v20 + 64);
          unint64_t v47 = *(void *)(v20 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v47 >= 2)
          {
            a1 = v89;
            if (v47 == 2)
            {
              *uint64_t v45 = *v46;
            }
            else
            {
              *(unsigned char *)(v92 + 64) = *(unsigned char *)v46;
              *(void *)(v92 + 72) = v47;
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            *uint64_t v45 = *v46;
            a1 = v89;
          }
          uint64_t v65 = *(void *)(v21 + 88);
          *(void *)(v92 + 80) = *(void *)(v21 + 80);
          *(void *)(v92 + 88) = v65;
          uint64_t v66 = *(void *)(v21 + 104);
          *(void *)(v92 + 96) = *(void *)(v21 + 96);
          *(void *)(v92 + 104) = v66;
          uint64_t v67 = *(void *)(v21 + 120);
          *(void *)(v92 + 112) = *(void *)(v21 + 112);
          *(void *)(v92 + 120) = v67;
          *(unsigned char *)(v92 + 128) = *(unsigned char *)(v21 + 128);
          uint64_t v68 = v21;
          uint64_t v69 = *(void *)(v21 + 136);
          uint64_t v70 = *(void *)(v21 + 144);
          *(void *)(v92 + 136) = v69;
          *(void *)(v92 + 144) = v70;
          *(void *)(v92 + 152) = *(void *)(v68 + 152);
          long long v71 = *(_OWORD *)(v68 + 184);
          *(_OWORD *)(v92 + 184) = v71;
          uint64_t v85 = v71;
          uint64_t v83 = **(void (***)(uint64_t, uint64_t, uint64_t))(v71 - 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          v83(v92 + 160, v68 + 160, v85);
          *(void *)(v92 + 200) = *(void *)(v68 + 200);
          long long v72 = *(_OWORD *)(v68 + 232);
          *(_OWORD *)(v92 + 232) = v72;
          uint64_t v73 = v72;
          uint64_t v74 = **(void (***)(uint64_t, uint64_t, uint64_t))(v72 - 8);
          swift_retain();
          v74(v92 + 208, v68 + 208, v73);
          uint64_t v75 = *(void *)(v68 + 256);
          *(void *)(v92 + 248) = *(void *)(v68 + 248);
          *(void *)(v92 + 256) = v75;
          uint64_t v76 = *(void *)(v68 + 272);
          *(void *)(v92 + 264) = *(void *)(v68 + 264);
          *(void *)(v92 + 272) = v76;
          uint64_t v77 = *(void *)(v68 + 288);
          *(void *)(v92 + 280) = *(void *)(v68 + 280);
          *(void *)(v92 + 288) = v77;
          char v78 = *(void **)(v68 + 296);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          id v79 = v78;
          *(void *)(v92 + 296) = v78;
          break;
        default:
          long long v22 = *(_OWORD *)(v20 + 24);
          *(_OWORD *)(v92 + 24) = v22;
          (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v92, v20);
          uint64_t v87 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
          uint64_t v88 = v20;
          uint64_t v23 = v87[5];
          uint64_t v24 = v92 + v23;
          uint64_t v25 = v20 + v23;
          uint64_t v26 = sub_1C151772C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
          uint64_t v27 = (int *)type metadata accessor for GroupLayoutContext();
          uint64_t v28 = v27[5];
          uint64_t v29 = v24 + v28;
          uint64_t v30 = v25 + v28;
          uint64_t v31 = sub_1C151757C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
          uint64_t v32 = v27[6];
          uint64_t v33 = v24 + v32;
          uint64_t v34 = v25 + v32;
          *(_OWORD *)uint64_t v33 = *(_OWORD *)(v25 + v32);
          *(unsigned char *)(v33 + 16) = *(unsigned char *)(v25 + v32 + 16);
          *(_WORD *)(v33 + 17) = *(_WORD *)(v25 + v32 + 17);
          *(unsigned char *)(v33 + 19) = *(unsigned char *)(v25 + v32 + 19);
          *(_DWORD *)(v33 + 20) = *(_DWORD *)(v25 + v32 + 20);
          unint64_t v35 = *(void *)(v25 + v32 + 24);
          if (v35 >= 2) {
            unint64_t v35 = swift_bridgeObjectRetain();
          }
          *(void *)(v33 + 24) = v35;
          uint64_t v86 = type metadata accessor for FeedLayoutSolverOptions(0);
          uint64_t v36 = *(int *)(v86 + 36);
          int64_t v37 = (void *)(v33 + v36);
          uint64_t v38 = (const void *)(v34 + v36);
          uint64_t v39 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
          uint64_t v40 = *(void *)(v39 - 8);
          a1 = v89;
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
          {
            sub_1C01BB2C0();
            memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            uint64_t v48 = sub_1C151B62C();
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 16))(v37, v38, v48);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
          }
          *(void *)(v33 + *(int *)(v86 + 40)) = *(void *)(v34 + *(int *)(v86 + 40));
          *(void *)(v24 + v27[7]) = *(void *)(v25 + v27[7]);
          *(void *)(v24 + v27[8]) = *(void *)(v25 + v27[8]);
          *(unsigned char *)(v24 + v27[9]) = *(unsigned char *)(v25 + v27[9]);
          *(void *)(v24 + v27[10]) = *(void *)(v25 + v27[10]);
          *(unsigned char *)(v24 + v27[11]) = *(unsigned char *)(v25 + v27[11]);
          *(void *)(v24 + v27[12]) = *(void *)(v25 + v27[12]);
          uint64_t v49 = v87[6];
          uint64_t v50 = v92 + v49;
          uint64_t v51 = v88 + v49;
          *(unsigned char *)uint64_t v50 = *(unsigned char *)(v88 + v49);
          uint64_t v52 = v88 + v49 + 8;
          long long v53 = *(_OWORD *)(v88 + v49 + 32);
          *(_OWORD *)(v50 + 32) = v53;
          uint64_t v54 = v53;
          uint64_t v55 = **(void (***)(uint64_t, uint64_t, uint64_t))(v53 - 8);
          swift_retain();
          swift_retain();
          v55(v50 + 8, v52, v54);
          uint64_t v56 = *(void *)(v51 + 56);
          *(void *)(v50 + 48) = *(void *)(v51 + 48);
          *(void *)(v50 + 56) = v56;
          uint64_t v57 = *(void *)(v51 + 72);
          *(void *)(v50 + 64) = *(void *)(v51 + 64);
          *(void *)(v50 + 72) = v57;
          *(void *)(v50 + 80) = *(void *)(v51 + 80);
          *(unsigned char *)(v50 + 88) = *(unsigned char *)(v51 + 88);
          *(void *)(v50 + 96) = *(void *)(v51 + 96);
          uint64_t v58 = (int *)type metadata accessor for GroupLayoutBindingContext();
          uint64_t v59 = v58[13];
          uint64_t v82 = v51 + v59;
          uint64_t v84 = v50 + v59;
          uint64_t v60 = sub_1C151787C();
          uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v81(v84, v82, v60);
          *(void *)(v50 + v58[14]) = *(void *)(v51 + v58[14]);
          *(void *)(v50 + v58[15]) = *(void *)(v51 + v58[15]);
          *(unsigned char *)(v50 + v58[16]) = *(unsigned char *)(v51 + v58[16]);
          *(void *)(v50 + v58[17]) = *(void *)(v51 + v58[17]);
          *(void *)(v50 + v58[18]) = *(void *)(v51 + v58[18]);
          *(void *)(v50 + v58[19]) = *(void *)(v51 + v58[19]);
          uint64_t v61 = v87[7];
          uint64_t v62 = v92 + v61;
          uint64_t v63 = v88 + v61;
          *(unsigned char *)uint64_t v62 = *(unsigned char *)v63;
          *(_OWORD *)(v62 + 8) = *(_OWORD *)(v63 + 8);
          *(_OWORD *)(v62 + 24) = *(_OWORD *)(v63 + 24);
          uint64_t v64 = *(void *)(v63 + 48);
          *(void *)(v62 + 40) = *(void *)(v63 + 40);
          *(void *)(v62 + 48) = v64;
          *(void *)(v92 + v87[8]) = *(void *)(v88 + v87[8]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      *(void *)(a1 + *(int *)(v90 + 28)) = *(uint64_t *)((char *)v91 + *(int *)(v90 + 28));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C0C5FEE8(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_11:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 72) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for DebugFormatTestCaseResult(0) + 24);
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        __swift_destroy_boxed_opaque_existential_1(v2);
        uint64_t v3 = type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v4 = v2 + *(int *)(v3 + 20);
        uint64_t v5 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
        uint64_t v6 = type metadata accessor for GroupLayoutContext();
        uint64_t v7 = v4 + *(int *)(v6 + 20);
        uint64_t v8 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        uint64_t v9 = v4 + *(int *)(v6 + 24);
        if (*(void *)(v9 + 24) >= 2uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v10 = v9 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
        uint64_t v11 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
        {
          uint64_t v12 = sub_1C151B62C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
        }
        swift_release();
        swift_release();
        uint64_t v13 = v2 + *(int *)(v3 + 24);
        __swift_destroy_boxed_opaque_existential_1(v13 + 8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v13 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
        uint64_t v15 = sub_1C151787C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      case 2u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v2 + 72) >= 3uLL) {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v2 + 160);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v2 + 208);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v16 = *(void **)(v2 + 296);

        break;
      default:
        return;
    }
  }
}

uint64_t sub_1C0C6032C(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v5 = *(void **)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v6 = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v10 = (_OWORD *)(a2 + 64);
    unint64_t v11 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 <= 2)
    {
      *(_OWORD *)(a1 + 64) = *v10;
    }
    else
    {
      *(unsigned char *)(a1 + 64) = *(unsigned char *)v10;
      *(void *)(a1 + 72) = v11;
      swift_bridgeObjectRetain();
    }
    uint64_t v12 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v12;
    uint64_t v13 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v13;
    uint64_t v14 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v14;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    uint64_t v15 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v15;
    uint64_t v87 = type metadata accessor for DebugFormatTestCaseResult(0);
    uint64_t v16 = *(int *)(v87 + 24);
    uint64_t v86 = a1;
    uint64_t v89 = a1 + v16;
    uint64_t v88 = a2;
    uint64_t v17 = a2 + v16;
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        uint64_t v39 = *(void *)(v17 + 8);
        *(void *)uint64_t v89 = *(void *)v17;
        *(void *)(v89 + 8) = v39;
        uint64_t v40 = *(void *)(v17 + 24);
        *(void *)(v89 + 16) = *(void *)(v17 + 16);
        *(void *)(v89 + 24) = v40;
        uint64_t v41 = *(void *)(v17 + 40);
        *(void *)(v89 + 32) = *(void *)(v17 + 32);
        *(void *)(v89 + 40) = v41;
        *(unsigned char *)(v89 + 48) = *(unsigned char *)(v17 + 48);
        *(void *)(v89 + 56) = *(void *)(v17 + 56);
        uint64_t v42 = (_OWORD *)(v89 + 64);
        uint64_t v43 = (_OWORD *)(v17 + 64);
        unint64_t v44 = *(void *)(v17 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v44 >= 2)
        {
          a1 = v86;
          if (v44 == 2)
          {
            _OWORD *v42 = *v43;
          }
          else
          {
            *(unsigned char *)(v89 + 64) = *(unsigned char *)v43;
            *(void *)(v89 + 72) = v44;
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          _OWORD *v42 = *v43;
          a1 = v86;
        }
        uint64_t v62 = *(void *)(v18 + 88);
        *(void *)(v89 + 80) = *(void *)(v18 + 80);
        *(void *)(v89 + 88) = v62;
        uint64_t v63 = *(void *)(v18 + 104);
        *(void *)(v89 + 96) = *(void *)(v18 + 96);
        *(void *)(v89 + 104) = v63;
        uint64_t v64 = *(void *)(v18 + 120);
        *(void *)(v89 + 112) = *(void *)(v18 + 112);
        *(void *)(v89 + 120) = v64;
        *(unsigned char *)(v89 + 128) = *(unsigned char *)(v18 + 128);
        uint64_t v65 = v18;
        uint64_t v66 = *(void *)(v18 + 136);
        uint64_t v67 = *(void *)(v18 + 144);
        *(void *)(v89 + 136) = v66;
        *(void *)(v89 + 144) = v67;
        *(void *)(v89 + 152) = *(void *)(v65 + 152);
        long long v68 = *(_OWORD *)(v65 + 184);
        *(_OWORD *)(v89 + 184) = v68;
        uint64_t v82 = v68;
        uint64_t v80 = **(void (***)(uint64_t, uint64_t, uint64_t))(v68 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v80(v89 + 160, v65 + 160, v82);
        *(void *)(v89 + 200) = *(void *)(v65 + 200);
        long long v69 = *(_OWORD *)(v65 + 232);
        *(_OWORD *)(v89 + 232) = v69;
        uint64_t v70 = v69;
        long long v71 = **(void (***)(uint64_t, uint64_t, uint64_t))(v69 - 8);
        swift_retain();
        v71(v89 + 208, v65 + 208, v70);
        uint64_t v72 = *(void *)(v65 + 256);
        *(void *)(v89 + 248) = *(void *)(v65 + 248);
        *(void *)(v89 + 256) = v72;
        uint64_t v73 = *(void *)(v65 + 272);
        *(void *)(v89 + 264) = *(void *)(v65 + 264);
        *(void *)(v89 + 272) = v73;
        uint64_t v74 = *(void *)(v65 + 288);
        *(void *)(v89 + 280) = *(void *)(v65 + 280);
        *(void *)(v89 + 288) = v74;
        uint64_t v75 = *(void **)(v65 + 296);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        id v76 = v75;
        *(void *)(v89 + 296) = v75;
        break;
      default:
        long long v19 = *(_OWORD *)(v17 + 24);
        *(_OWORD *)(v89 + 24) = v19;
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))(v89, v17);
        uint64_t v84 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v85 = v17;
        uint64_t v20 = v84[5];
        uint64_t v21 = v89 + v20;
        uint64_t v22 = v17 + v20;
        uint64_t v23 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        uint64_t v24 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v25 = v24[5];
        uint64_t v26 = v21 + v25;
        uint64_t v27 = v22 + v25;
        uint64_t v28 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        uint64_t v29 = v24[6];
        uint64_t v30 = v21 + v29;
        uint64_t v31 = v22 + v29;
        *(_OWORD *)uint64_t v30 = *(_OWORD *)(v22 + v29);
        *(unsigned char *)(v30 + 16) = *(unsigned char *)(v22 + v29 + 16);
        *(_WORD *)(v30 + 17) = *(_WORD *)(v22 + v29 + 17);
        *(unsigned char *)(v30 + 19) = *(unsigned char *)(v22 + v29 + 19);
        *(_DWORD *)(v30 + 20) = *(_DWORD *)(v22 + v29 + 20);
        unint64_t v32 = *(void *)(v22 + v29 + 24);
        if (v32 >= 2) {
          unint64_t v32 = swift_bridgeObjectRetain();
        }
        *(void *)(v30 + 24) = v32;
        uint64_t v83 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v33 = *(int *)(v83 + 36);
        uint64_t v34 = (void *)(v30 + v33);
        unint64_t v35 = (const void *)(v31 + v33);
        uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v37 = *(void *)(v36 - 8);
        a1 = v86;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          sub_1C01BB2C0();
          memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v45 = sub_1C151B62C();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v34, v35, v45);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
        }
        *(void *)(v30 + *(int *)(v83 + 40)) = *(void *)(v31 + *(int *)(v83 + 40));
        *(void *)(v21 + v24[7]) = *(void *)(v22 + v24[7]);
        *(void *)(v21 + v24[8]) = *(void *)(v22 + v24[8]);
        *(unsigned char *)(v21 + v24[9]) = *(unsigned char *)(v22 + v24[9]);
        *(void *)(v21 + v24[10]) = *(void *)(v22 + v24[10]);
        *(unsigned char *)(v21 + v24[11]) = *(unsigned char *)(v22 + v24[11]);
        *(void *)(v21 + v24[12]) = *(void *)(v22 + v24[12]);
        uint64_t v46 = v84[6];
        uint64_t v47 = v89 + v46;
        uint64_t v48 = v85 + v46;
        *(unsigned char *)uint64_t v47 = *(unsigned char *)(v85 + v46);
        uint64_t v49 = v85 + v46 + 8;
        long long v50 = *(_OWORD *)(v85 + v46 + 32);
        *(_OWORD *)(v47 + 32) = v50;
        uint64_t v51 = v50;
        uint64_t v52 = **(void (***)(uint64_t, uint64_t, uint64_t))(v50 - 8);
        swift_retain();
        swift_retain();
        v52(v47 + 8, v49, v51);
        uint64_t v53 = *(void *)(v48 + 56);
        *(void *)(v47 + 48) = *(void *)(v48 + 48);
        *(void *)(v47 + 56) = v53;
        uint64_t v54 = *(void *)(v48 + 72);
        *(void *)(v47 + 64) = *(void *)(v48 + 64);
        *(void *)(v47 + 72) = v54;
        *(void *)(v47 + 80) = *(void *)(v48 + 80);
        *(unsigned char *)(v47 + 88) = *(unsigned char *)(v48 + 88);
        *(void *)(v47 + 96) = *(void *)(v48 + 96);
        uint64_t v55 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v56 = v55[13];
        uint64_t v79 = v48 + v56;
        uint64_t v81 = v47 + v56;
        uint64_t v57 = sub_1C151787C();
        char v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v78(v81, v79, v57);
        *(void *)(v47 + v55[14]) = *(void *)(v48 + v55[14]);
        *(void *)(v47 + v55[15]) = *(void *)(v48 + v55[15]);
        *(unsigned char *)(v47 + v55[16]) = *(unsigned char *)(v48 + v55[16]);
        *(void *)(v47 + v55[17]) = *(void *)(v48 + v55[17]);
        *(void *)(v47 + v55[18]) = *(void *)(v48 + v55[18]);
        *(void *)(v47 + v55[19]) = *(void *)(v48 + v55[19]);
        uint64_t v58 = v84[7];
        uint64_t v59 = v89 + v58;
        uint64_t v60 = v85 + v58;
        *(unsigned char *)uint64_t v59 = *(unsigned char *)v60;
        *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
        *(_OWORD *)(v59 + 24) = *(_OWORD *)(v60 + 24);
        uint64_t v61 = *(void *)(v60 + 48);
        *(void *)(v59 + 40) = *(void *)(v60 + 40);
        *(void *)(v59 + 48) = v61;
        *(void *)(v89 + v84[8]) = *(void *)(v85 + v84[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    *(void *)(a1 + *(int *)(v87 + 28)) = *(void *)(v88 + *(int *)(v87 + 28));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C0C60C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    sub_1C0C615DC(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v2 = *(void *)a2;
      *(void *)(v2 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(v2 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v4 = *(void **)(a2 + 24);
      *(void *)(v2 + 24) = v4;
      *(unsigned char *)(v2 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(v2 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v5 = v4;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)uint64_t v2 = *(void *)a2;
      *(void *)(v2 + 8) = *(void *)(a2 + 8);
      *(void *)(v2 + 16) = *(void *)(a2 + 16);
      *(void *)(v2 + 24) = *(void *)(a2 + 24);
      *(void *)(v2 + 32) = *(void *)(a2 + 32);
      *(void *)(v2 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(v2 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(v2 + 56) = *(void *)(a2 + 56);
      unint64_t v6 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v6 <= 2)
      {
        *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 64);
      }
      else
      {
        *(unsigned char *)(v2 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(v2 + 72) = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
      }
      *(void *)(v2 + 80) = *(void *)(a2 + 80);
      *(void *)(v2 + 88) = *(void *)(a2 + 88);
      *(void *)(v2 + 96) = *(void *)(a2 + 96);
      *(void *)(v2 + 104) = *(void *)(a2 + 104);
      *(void *)(v2 + 112) = *(void *)(a2 + 112);
      *(void *)(v2 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(v2 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(v2 + 136) = *(void *)(a2 + 136);
      *(void *)(v2 + 144) = *(void *)(a2 + 144);
      uint64_t v65 = type metadata accessor for DebugFormatTestCaseResult(0);
      uint64_t v7 = *(int *)(v65 + 24);
      uint64_t v63 = v2;
      uint64_t v66 = v2 + v7;
      uint64_t v64 = a2;
      uint64_t v8 = a2 + v7;
      type metadata accessor for DebugFormatTestCaseResult.Result(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
          *(void *)uint64_t v66 = *(void *)v8;
          *(void *)(v66 + 8) = *(void *)(v8 + 8);
          *(void *)(v66 + 16) = *(void *)(v8 + 16);
          *(void *)(v66 + 24) = *(void *)(v8 + 24);
          *(void *)(v66 + 32) = *(void *)(v8 + 32);
          *(void *)(v66 + 40) = *(void *)(v8 + 40);
          *(unsigned char *)(v66 + 48) = *(unsigned char *)(v8 + 48);
          *(void *)(v66 + 56) = *(void *)(v8 + 56);
          unint64_t v32 = (_OWORD *)(v66 + 64);
          uint64_t v33 = (_OWORD *)(v8 + 64);
          unint64_t v34 = *(void *)(v8 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v34 >= 2)
          {
            uint64_t v2 = v63;
            if (v34 == 2)
            {
              *unint64_t v32 = *v33;
            }
            else
            {
              *(unsigned char *)(v66 + 64) = *(unsigned char *)(v9 + 64);
              *(void *)(v66 + 72) = *(void *)(v9 + 72);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            *unint64_t v32 = *v33;
            uint64_t v2 = v63;
          }
          *(void *)(v66 + 80) = *(void *)(v9 + 80);
          *(void *)(v66 + 88) = *(void *)(v9 + 88);
          *(void *)(v66 + 96) = *(void *)(v9 + 96);
          *(void *)(v66 + 104) = *(void *)(v9 + 104);
          *(void *)(v66 + 112) = *(void *)(v9 + 112);
          *(void *)(v66 + 120) = *(void *)(v9 + 120);
          *(unsigned char *)(v66 + 128) = *(unsigned char *)(v9 + 128);
          *(void *)(v66 + 136) = *(void *)(v9 + 136);
          *(void *)(v66 + 144) = *(void *)(v9 + 144);
          *(void *)(v66 + 152) = *(void *)(v9 + 152);
          uint64_t v62 = v9 + 160;
          uint64_t v48 = (void *)v9;
          uint64_t v49 = *(void *)(v9 + 184);
          *(void *)(v66 + 184) = v49;
          *(void *)(v66 + 192) = v48[24];
          uint64_t v58 = **(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          v58(v66 + 160, v62, v49);
          *(void *)(v66 + 200) = v48[25];
          uint64_t v50 = v48[29];
          *(void *)(v66 + 232) = v50;
          *(void *)(v66 + 240) = v48[30];
          uint64_t v51 = **(void (***)(uint64_t, void *, uint64_t))(v50 - 8);
          swift_retain();
          v51(v66 + 208, v48 + 26, v50);
          *(void *)(v66 + 248) = v48[31];
          *(void *)(v66 + 256) = v48[32];
          *(void *)(v66 + 264) = v48[33];
          *(void *)(v66 + 272) = v48[34];
          *(void *)(v66 + 280) = v48[35];
          *(void *)(v66 + 288) = v48[36];
          uint64_t v52 = (void *)v48[37];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          id v53 = v52;
          *(void *)(v66 + 296) = v52;
          break;
        default:
          uint64_t v10 = *(void *)(v8 + 24);
          *(void *)(v66 + 24) = v10;
          *(void *)(v66 + 32) = *(void *)(v8 + 32);
          (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v66, v8);
          uint64_t v11 = type metadata accessor for DebugFormatTestCaseLayout();
          uint64_t v12 = *(int *)(v11 + 20);
          uint64_t v13 = v66 + v12;
          uint64_t v60 = (int *)v11;
          uint64_t v61 = v8;
          uint64_t v14 = v8 + v12;
          uint64_t v15 = sub_1C151772C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
          uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
          uint64_t v17 = v16[5];
          uint64_t v18 = v13 + v17;
          uint64_t v19 = v14 + v17;
          uint64_t v20 = sub_1C151757C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
          uint64_t v21 = v16[6];
          uint64_t v22 = v13 + v21;
          uint64_t v23 = v14 + v21;
          long long v24 = *(_OWORD *)(v14 + v21);
          *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
          *(_OWORD *)uint64_t v22 = v24;
          LOBYTE(v21) = *(unsigned char *)(v14 + v21 + 19);
          *(_WORD *)(v22 + 17) = *(_WORD *)(v23 + 17);
          *(unsigned char *)(v22 + 19) = v21;
          *(_WORD *)(v22 + 20) = *(_WORD *)(v23 + 20);
          *(_WORD *)(v22 + 22) = *(_WORD *)(v23 + 22);
          unint64_t v25 = *(void *)(v23 + 24);
          if (v25 >= 2) {
            unint64_t v25 = swift_bridgeObjectRetain();
          }
          *(void *)(v22 + 24) = v25;
          uint64_t v59 = type metadata accessor for FeedLayoutSolverOptions(0);
          uint64_t v26 = *(int *)(v59 + 36);
          uint64_t v27 = (void *)(v22 + v26);
          uint64_t v28 = (const void *)(v23 + v26);
          uint64_t v29 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
          uint64_t v30 = *(void *)(v29 - 8);
          uint64_t v2 = v63;
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
          {
            sub_1C01BB2C0();
            memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            uint64_t v35 = sub_1C151B62C();
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 16))(v27, v28, v35);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          }
          *(void *)(v22 + *(int *)(v59 + 40)) = *(void *)(v23 + *(int *)(v59 + 40));
          *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
          *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
          *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
          *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
          *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
          *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
          uint64_t v36 = v60[6];
          uint64_t v37 = v66 + v36;
          uint64_t v38 = v61 + v36;
          *(unsigned char *)uint64_t v37 = *(unsigned char *)(v61 + v36);
          uint64_t v39 = *(void *)(v61 + v36 + 32);
          *(void *)(v37 + 32) = v39;
          *(void *)(v37 + 40) = *(void *)(v61 + v36 + 40);
          uint64_t v40 = **(void (***)(uint64_t, uint64_t, uint64_t))(v39 - 8);
          swift_retain();
          swift_retain();
          v40(v37 + 8, v38 + 8, v39);
          *(void *)(v37 + 48) = *(void *)(v38 + 48);
          *(void *)(v37 + 56) = *(void *)(v38 + 56);
          *(void *)(v37 + 64) = *(void *)(v38 + 64);
          *(void *)(v37 + 72) = *(void *)(v38 + 72);
          *(void *)(v37 + 80) = *(void *)(v38 + 80);
          *(unsigned char *)(v37 + 88) = *(unsigned char *)(v38 + 88);
          *(void *)(v37 + 96) = *(void *)(v38 + 96);
          uint64_t v41 = (int *)type metadata accessor for GroupLayoutBindingContext();
          uint64_t v42 = v41[13];
          uint64_t v56 = v38 + v42;
          uint64_t v57 = v37 + v42;
          uint64_t v43 = sub_1C151787C();
          uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v55(v57, v56, v43);
          *(void *)(v37 + v41[14]) = *(void *)(v38 + v41[14]);
          *(void *)(v37 + v41[15]) = *(void *)(v38 + v41[15]);
          *(unsigned char *)(v37 + v41[16]) = *(unsigned char *)(v38 + v41[16]);
          *(void *)(v37 + v41[17]) = *(void *)(v38 + v41[17]);
          *(void *)(v37 + v41[18]) = *(void *)(v38 + v41[18]);
          *(void *)(v37 + v41[19]) = *(void *)(v38 + v41[19]);
          uint64_t v44 = v60[7];
          uint64_t v45 = v66 + v44;
          uint64_t v46 = v61 + v44;
          *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
          long long v47 = *(_OWORD *)(v46 + 8);
          *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
          *(_OWORD *)(v45 + 8) = v47;
          *(void *)(v45 + 40) = *(void *)(v46 + 40);
          *(void *)(v45 + 48) = *(void *)(v46 + 48);
          *(void *)(v66 + v60[8]) = *(void *)(v61 + v60[8]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      *(void *)(v2 + *(int *)(v65 + 28)) = *(void *)(v64 + *(int *)(v65 + 28));
    }
    swift_storeEnumTagMultiPayload();
  }
  return v2;
}

uint64_t sub_1C0C615DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatTestSuiteScopeResult()
{
  uint64_t result = qword_1EA1A50A0;
  if (!qword_1EA1A50A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C0C61684(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (!swift_getEnumCaseMultiPayload())
  {
    long long v6 = a2[7];
    a1[6] = a2[6];
    a1[7] = v6;
    a1[8] = a2[8];
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    long long v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((void *)a1 + 18) = *((void *)a2 + 18);
    uint64_t v10 = type metadata accessor for DebugFormatTestCaseResult(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v64 = v10;
      long long v32 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v32;
      *((void *)v12 + 4) = *((void *)v13 + 4);
      uint64_t v61 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v62 = v13;
      uint64_t v33 = v61[5];
      uint64_t v63 = v12;
      uint64_t v18 = &v12[v33];
      uint64_t v19 = &v13[v33];
      uint64_t v34 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v18, v19, v34);
      uint64_t v21 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v35 = v21[5];
      uint64_t v36 = &v18[v35];
      uint64_t v37 = &v19[v35];
      uint64_t v38 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      uint64_t v39 = v21[6];
      uint64_t v27 = &v18[v39];
      uint64_t v28 = &v19[v39];
      *(_OWORD *)uint64_t v27 = *(_OWORD *)&v19[v39];
      v27[16] = v19[v39 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v39 + 17];
      v27[19] = v19[v39 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v39 + 20];
      *((void *)v27 + 3) = *(void *)&v19[v39 + 24];
      uint64_t v58 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v40 = *(int *)(v58 + 36);
      uint64_t v60 = &v27[v40];
      uint64_t v30 = &v28[v40];
      uint64_t v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v57 = *(void *)(v31 - 8);
      uint64_t v59 = v30;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v30, 1, v31))
      {
LABEL_8:
        sub_1C01BB2C0();
        memcpy(v60, v59, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_11:
        *(void *)&v27[*(int *)(v58 + 40)] = *(void *)&v28[*(int *)(v58 + 40)];
        *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
        *(void *)&v18[v21[8]] = *(void *)&v19[v21[8]];
        v18[v21[9]] = v19[v21[9]];
        *(void *)&v18[v21[10]] = *(void *)&v19[v21[10]];
        v18[v21[11]] = v19[v21[11]];
        *(void *)&v18[v21[12]] = *(void *)&v19[v21[12]];
        uint64_t v43 = v61[6];
        uint64_t v44 = &v63[v43];
        uint64_t v45 = &v62[v43];
        *uint64_t v44 = v62[v43];
        *(_OWORD *)(v44 + 8) = *(_OWORD *)&v62[v43 + 8];
        *(_OWORD *)(v44 + 24) = *(_OWORD *)&v62[v43 + 24];
        *((void *)v44 + 5) = *(void *)&v62[v43 + 40];
        long long v46 = *(_OWORD *)&v62[v43 + 64];
        *((_OWORD *)v44 + 3) = *(_OWORD *)&v62[v43 + 48];
        *((_OWORD *)v44 + 4) = v46;
        *((void *)v44 + 10) = *(void *)&v62[v43 + 80];
        v44[88] = v62[v43 + 88];
        *((void *)v44 + 12) = *(void *)&v62[v43 + 96];
        long long v47 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v48 = v47[13];
        uint64_t v49 = &v44[v48];
        uint64_t v50 = &v45[v48];
        uint64_t v51 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
        *(void *)&v44[v47[14]] = *(void *)&v45[v47[14]];
        *(void *)&v44[v47[15]] = *(void *)&v45[v47[15]];
        v44[v47[16]] = v45[v47[16]];
        *(void *)&v44[v47[17]] = *(void *)&v45[v47[17]];
        *(void *)&v44[v47[18]] = *(void *)&v45[v47[18]];
        *(void *)&v44[v47[19]] = *(void *)&v45[v47[19]];
        uint64_t v52 = v61[7];
        id v53 = &v63[v52];
        uint64_t v54 = &v62[v52];
        long long v55 = *((_OWORD *)v54 + 1);
        *(_OWORD *)id v53 = *(_OWORD *)v54;
        *((_OWORD *)v53 + 1) = v55;
        *((_OWORD *)v53 + 2) = *((_OWORD *)v54 + 2);
        *((void *)v53 + 6) = *((void *)v54 + 6);
        *(void *)&v63[v61[8]] = *(void *)&v62[v61[8]];
        swift_storeEnumTagMultiPayload();
        uint64_t v10 = v64;
        goto LABEL_12;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_12:
        *(void *)((char *)a1 + *(int *)(v10 + 28)) = *(void *)((char *)a2 + *(int *)(v10 + 28));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v64 = v10;
      long long v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((void *)v12 + 4) = *((void *)v13 + 4);
      uint64_t v61 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v62 = v13;
      uint64_t v17 = v61[5];
      uint64_t v63 = v12;
      uint64_t v18 = &v12[v17];
      uint64_t v19 = &v13[v17];
      uint64_t v20 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      uint64_t v21 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v22 = v21[5];
      uint64_t v23 = &v18[v22];
      long long v24 = &v19[v22];
      uint64_t v25 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      uint64_t v26 = v21[6];
      uint64_t v27 = &v18[v26];
      uint64_t v28 = &v19[v26];
      *(_OWORD *)uint64_t v27 = *(_OWORD *)&v19[v26];
      v27[16] = v19[v26 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v26 + 17];
      v27[19] = v19[v26 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v26 + 20];
      *((void *)v27 + 3) = *(void *)&v19[v26 + 24];
      uint64_t v58 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v29 = *(int *)(v58 + 36);
      uint64_t v60 = &v27[v29];
      uint64_t v30 = &v28[v29];
      uint64_t v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v57 = *(void *)(v31 - 8);
      uint64_t v59 = v30;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v30, 1, v31)) {
        goto LABEL_8;
      }
    }
    uint64_t v42 = sub_1C151B62C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v60, v30, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v60, 0, 1, v31);
    goto LABEL_11;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1C0C61EDC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0C615DC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    long long v6 = a2[7];
    a1[6] = a2[6];
    a1[7] = v6;
    a1[8] = a2[8];
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    long long v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((void *)a1 + 18) = *((void *)a2 + 18);
    uint64_t v10 = type metadata accessor for DebugFormatTestCaseResult(0);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v66 = v10;
      long long v33 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v33;
      *((void *)v12 + 4) = *((void *)v13 + 4);
      uint64_t v63 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v64 = v13;
      uint64_t v34 = v63[5];
      uint64_t v65 = v12;
      uint64_t v18 = &v12[v34];
      uint64_t v19 = &v13[v34];
      uint64_t v35 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v18, v19, v35);
      uint64_t v21 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v36 = v21[5];
      uint64_t v37 = &v18[v36];
      uint64_t v38 = &v19[v36];
      uint64_t v39 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      uint64_t v40 = v21[6];
      uint64_t v27 = &v18[v40];
      uint64_t v28 = &v19[v40];
      *(_OWORD *)uint64_t v27 = *(_OWORD *)&v19[v40];
      v27[16] = v19[v40 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v40 + 17];
      v27[19] = v19[v40 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v40 + 20];
      *((void *)v27 + 3) = *(void *)&v19[v40 + 24];
      uint64_t v41 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v42 = *(int *)(v41 + 36);
      uint64_t v61 = &v27[v42];
      uint64_t v62 = v41;
      uint64_t v31 = &v28[v42];
      uint64_t v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v59 = *(void *)(v32 - 8);
      uint64_t v60 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v31, 1, v32))
      {
LABEL_9:
        sub_1C01BB2C0();
        memcpy(v61, v60, *(void *)(*(void *)(v43 - 8) + 64));
LABEL_12:
        *(void *)&v27[*(int *)(v62 + 40)] = *(void *)&v28[*(int *)(v62 + 40)];
        *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
        *(void *)&v18[v21[8]] = *(void *)&v19[v21[8]];
        v18[v21[9]] = v19[v21[9]];
        *(void *)&v18[v21[10]] = *(void *)&v19[v21[10]];
        v18[v21[11]] = v19[v21[11]];
        *(void *)&v18[v21[12]] = *(void *)&v19[v21[12]];
        uint64_t v45 = v63[6];
        long long v46 = &v65[v45];
        long long v47 = &v64[v45];
        *long long v46 = v64[v45];
        *(_OWORD *)(v46 + 8) = *(_OWORD *)&v64[v45 + 8];
        *(_OWORD *)(v46 + 24) = *(_OWORD *)&v64[v45 + 24];
        *((void *)v46 + 5) = *(void *)&v64[v45 + 40];
        long long v48 = *(_OWORD *)&v64[v45 + 64];
        *((_OWORD *)v46 + 3) = *(_OWORD *)&v64[v45 + 48];
        *((_OWORD *)v46 + 4) = v48;
        *((void *)v46 + 10) = *(void *)&v64[v45 + 80];
        v46[88] = v64[v45 + 88];
        *((void *)v46 + 12) = *(void *)&v64[v45 + 96];
        uint64_t v49 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v50 = v49[13];
        uint64_t v51 = &v46[v50];
        uint64_t v52 = &v47[v50];
        uint64_t v53 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        *(void *)&v46[v49[14]] = *(void *)&v47[v49[14]];
        *(void *)&v46[v49[15]] = *(void *)&v47[v49[15]];
        v46[v49[16]] = v47[v49[16]];
        *(void *)&v46[v49[17]] = *(void *)&v47[v49[17]];
        *(void *)&v46[v49[18]] = *(void *)&v47[v49[18]];
        *(void *)&v46[v49[19]] = *(void *)&v47[v49[19]];
        uint64_t v54 = v63[7];
        long long v55 = &v65[v54];
        uint64_t v56 = &v64[v54];
        long long v57 = *((_OWORD *)v56 + 1);
        *(_OWORD *)long long v55 = *(_OWORD *)v56;
        *((_OWORD *)v55 + 1) = v57;
        *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
        *((void *)v55 + 6) = *((void *)v56 + 6);
        *(void *)&v65[v63[8]] = *(void *)&v64[v63[8]];
        swift_storeEnumTagMultiPayload();
        uint64_t v10 = v66;
        goto LABEL_13;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_13:
        *(void *)((char *)a1 + *(int *)(v10 + 28)) = *(void *)((char *)a2 + *(int *)(v10 + 28));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v66 = v10;
      long long v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((void *)v12 + 4) = *((void *)v13 + 4);
      uint64_t v63 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v64 = v13;
      uint64_t v17 = v63[5];
      uint64_t v65 = v12;
      uint64_t v18 = &v12[v17];
      uint64_t v19 = &v13[v17];
      uint64_t v20 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      uint64_t v21 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v22 = v21[5];
      uint64_t v23 = &v18[v22];
      long long v24 = &v19[v22];
      uint64_t v25 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      uint64_t v26 = v21[6];
      uint64_t v27 = &v18[v26];
      uint64_t v28 = &v19[v26];
      *(_OWORD *)uint64_t v27 = *(_OWORD *)&v19[v26];
      v27[16] = v19[v26 + 16];
      *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v26 + 17];
      v27[19] = v19[v26 + 19];
      *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v26 + 20];
      *((void *)v27 + 3) = *(void *)&v19[v26 + 24];
      uint64_t v29 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v30 = *(int *)(v29 + 36);
      uint64_t v61 = &v27[v30];
      uint64_t v62 = v29;
      uint64_t v31 = &v28[v30];
      uint64_t v32 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v59 = *(void *)(v32 - 8);
      uint64_t v60 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v31, 1, v32)) {
        goto LABEL_9;
      }
    }
    uint64_t v44 = sub_1C151B62C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v61, v31, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v32);
    goto LABEL_12;
  }
  return a1;
}

uint64_t sub_1C0C62734()
{
  uint64_t result = type metadata accessor for DebugFormatTestCaseResult(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t static FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_1C00DFA40(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t sub_1C0C62878(uint64_t a1)
{
  unint64_t result = sub_1C0C628A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C628A0()
{
  unint64_t result = qword_1EA1A50B0;
  if (!qword_1EA1A50B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A50B0);
  }
  return result;
}

unint64_t sub_1C0C628F4(void *a1)
{
  a1[1] = sub_1C087E528();
  a1[2] = sub_1C08FD11C();
  unint64_t result = sub_1C0C6292C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C6292C()
{
  unint64_t result = qword_1EA1A50B8;
  if (!qword_1EA1A50B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A50B8);
  }
  return result;
}

uint64_t sub_1C0C62980@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.init(from:)(a1, a2);
}

uint64_t sub_1C0C62998(void *a1)
{
  return FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet.encode(to:)(a1);
}

uint64_t sub_1C0C629B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_1C00DFA40(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C0C62A10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C62A1C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet()
{
  return &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatCacheDirectory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C62B3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCacheDirectory()
{
  return &type metadata for DebugFormatCacheDirectory;
}

unint64_t sub_1C0C62B78()
{
  unint64_t result = qword_1EA1A50C0;
  if (!qword_1EA1A50C0)
  {
    sub_1C0C62BD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A50C0);
  }
  return result;
}

void sub_1C0C62BD0()
{
  if (!qword_1EA1A50C8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A50C8);
    }
  }
}

uint64_t sub_1C0C62C28()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C62CA0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C62CFC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C62D70@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0C62DD0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x736567616B636170;
  if (*v1) {
    uint64_t v2 = 0x73676E69646E6962;
  }
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1C0C62E08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1480A78(*a1, *a2);
}

void sub_1C0C62E14(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B938;
}

unint64_t sub_1C0C62E28()
{
  unint64_t result = qword_1EA1A50D0;
  if (!qword_1EA1A50D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A50D0);
  }
  return result;
}

void sub_1C0C62E7C(void *a1, _OWORD *a2, uint64_t a3)
{
  sub_1BFC4B3F4();
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151F95C();
  if (*(void *)(a3 + 16))
  {
    unint64_t v9 = sub_1C1051F60(1u);
    if (v10)
    {
      uint64_t v11 = *(void *)(a3 + 56) + 16 * v9;
      if (*(unsigned char *)(v11 + 8) == 2)
      {
        id v12 = *(id *)v11;
        objc_msgSend(a1, sel_bounds);
        sub_1C151F8FC();
        long long v13 = a2[5];
        v32[4] = a2[4];
        v32[5] = v13;
        long long v14 = a2[7];
        v32[6] = a2[6];
        v32[7] = v14;
        long long v15 = a2[1];
        v32[0] = *a2;
        v32[1] = v15;
        long long v16 = a2[3];
        v32[2] = a2[2];
        v32[3] = v16;
        sub_1C0CC330C((uint64_t)v8);
        uint64_t v17 = sub_1C151BC8C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 0, 1, v17);
        sub_1C151B15C();
        id v18 = objc_msgSend(v12, sel_layer);
        id v19 = objc_msgSend(a1, sel_layer);
        objc_msgSend(v19, sel_cornerRadius);
        double v21 = v20;

        objc_msgSend(v18, sel_setCornerRadius_, v21);
        id v22 = objc_msgSend(v12, sel_layer);
        id v23 = objc_msgSend(a1, sel_layer);
        id v24 = objc_msgSend(v23, sel_maskedCorners);

        objc_msgSend(v22, sel_setMaskedCorners_, v24);
        id v25 = objc_msgSend(v12, sel_layer);
        id v26 = objc_msgSend(a1, sel_layer);
        id v27 = objc_msgSend(v26, sel_cornerCurve);

        objc_msgSend(v25, sel_setCornerCurve_, v27);
        id v28 = objc_msgSend(v12, sel_layer);
        id v29 = objc_msgSend(a1, sel_layer);
        objc_msgSend(v29, sel_cornerRadius);
        double v31 = v30;

        objc_msgSend(v28, sel_setMasksToBounds_, v31 > 0.0);
      }
    }
  }
}

void sub_1C0C63168(void *a1, _OWORD *a2, uint64_t a3)
{
  sub_1BFC4B3F4();
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  if (*(void *)(a3 + 16))
  {
    unint64_t v10 = sub_1C1051F60(1u);
    if (v11)
    {
      uint64_t v12 = *(void *)(a3 + 56) + 16 * v10;
      if (*(unsigned char *)(v12 + 8) == 2)
      {
        id v13 = *(id *)v12;
        objc_msgSend(a1, sel_frame);
        sub_1C151F8FC();
        objc_msgSend(v13, sel_bounds);
        sub_1C151F8FC();
        long long v14 = a2[5];
        v21[4] = a2[4];
        v21[5] = v14;
        long long v15 = a2[7];
        v21[6] = a2[6];
        v21[7] = v15;
        long long v16 = a2[1];
        v21[0] = *a2;
        v21[1] = v16;
        long long v17 = a2[3];
        void v21[2] = a2[2];
        v21[3] = v17;
        sub_1C0CC330C((uint64_t)v8);
        uint64_t v18 = sub_1C151BC8C();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
        sub_1C151B15C();
        sub_1C151CD7C();
        if (swift_dynamicCastClass())
        {
          id v19 = a1;
          double v20 = (void *)sub_1C151CD3C();
          objc_msgSend(v13, sel_bounds);
          sub_1C151F8FC();
        }
      }
    }
  }
}

uint64_t static FormatVideoPlayerContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 < 0)
  {
    if (v3 < 0)
    {
      char v9 = *(unsigned char *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v10 = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v11 = *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
      char v12 = *(unsigned char *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
      long long v17 = *(_OWORD *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = v10;
      char v19 = v9;
      long long v14 = *(_OWORD *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = v11;
      char v16 = v12;
      swift_retain();
      swift_retain();
      char v8 = _s8NewsFeed28FormatVideoPlayerNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v17, (uint64_t)&v14);
      swift_release();
      swift_release();
      return v8 & 1;
    }
    goto LABEL_6;
  }
  if (v3 < 0)
  {
LABEL_6:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (sub_1C00E33F0(v4, v6))
  {
    *(void *)&long long v17 = v5;
    *(void *)&long long v14 = v7;
    char v8 = static FormatVideoPlayerContent.== infix(_:_:)(&v17, &v14);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    char v8 = 0;
  }
  return v8 & 1;
}

void sub_1C0C634DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *v3;
  if (*v3 < 0)
  {
    sub_1C0EFA390(a1, a3);
  }
  else
  {
    uint64_t v9 = *(void *)(v7 + 16);
    uint64_t v8 = *(void *)(v7 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C125B60C(a2, a1, v9, v8, &v10);
    sub_1C0C634DC(a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_1C0C635DC(void *a1)
{
  return FormatVideoPlayerContent.encode(to:)(a1);
}

unint64_t sub_1C0C635F8(uint64_t a1)
{
  unint64_t result = sub_1C006F9DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C63620()
{
  unint64_t result = qword_1EB891B90;
  if (!qword_1EB891B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891B90);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerContent()
{
  return &type metadata for FormatVideoPlayerContent;
}

ValueMetadata *type metadata accessor for DebugTextAttachment()
{
  return &type metadata for DebugTextAttachment;
}

uint64_t sub_1C0C63694()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C63718()
{
  sub_1C151E77C();
  sub_1C151E77C();
  return sub_1C151E77C();
}

uint64_t sub_1C0C63784()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C63804@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C63810(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1C0C638B0(v7, v8) & 1;
}

unint64_t sub_1C0C6385C()
{
  unint64_t result = qword_1EA1A50D8;
  if (!qword_1EA1A50D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A50D8);
  }
  return result;
}

uint64_t sub_1C0C638B0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C1520A9C(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_1C1520A9C(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
      {
        return 1;
      }
      else
      {
        return sub_1C1520A9C();
      }
    }
  }
  return result;
}

uint64_t sub_1C0C63964()
{
  if ((sub_1C1517D3C() & 1) == 0) {
    sub_1C151EF4C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  if ((sub_1C1517D3C() & 1) == 0) {
    sub_1C151EF4C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 40;
}

uint64_t sub_1C0C63A4C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1BFEC0B68(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v40 - v7;
  long long v48 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void **)(v2 + 16);
  if (v9)
  {
    uint64_t v10 = v9[2];
    if (*(void *)(v10 + 16))
    {
      uint64_t v41 = a2;
      *(void *)&long long v42 = a1;
      uint64_t v11 = v9[3];
      uint64_t v12 = v9[4];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = sub_1C0EE000C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v15 = v13[2];
      unint64_t v14 = v13[3];
      if (v15 >= v14 >> 1) {
        id v13 = sub_1C0EE000C((void *)(v14 > 1), v15 + 1, 1, v13);
      }
      uint64_t v13[2] = v15 + 1;
      char v16 = &v13[3 * v15];
      v16[4] = v10;
      v16[5] = v11;
      v16[6] = v12;
      swift_release();
      long long v48 = v13;
      a2 = v41;
      a1 = v42;
    }
  }
  long long v17 = *(void **)(v3 + 24);
  if (v17)
  {
    id v18 = v17;
    id v19 = objc_msgSend(v18, sel_alternativeFeedDescriptor);
    if (v19)
    {
      double v20 = v19;
      double v21 = sub_1C0C63F04(v19);
      sub_1C10477E8((uint64_t)v21);
    }
    id v22 = sub_1C0C63F04(v18);
    sub_1C10477E8((uint64_t)v22);
  }
  if (*(void *)(v3 + 32))
  {
    id v23 = (void *)swift_unknownObjectRetain();
    sub_1C0C64248(v23, &v43);
    uint64_t v24 = v43;
    if (v43)
    {
      long long v42 = v44;
      id v25 = v48;
      id v26 = a2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v25 = sub_1C0EE000C(0, v25[2] + 1, 1, v25);
      }
      unint64_t v28 = v25[2];
      unint64_t v27 = v25[3];
      if (v28 >= v27 >> 1) {
        id v25 = sub_1C0EE000C((void *)(v27 > 1), v28 + 1, 1, v25);
      }
      void v25[2] = v28 + 1;
      id v29 = &v25[3 * v28];
      v29[4] = v24;
      *(_OWORD *)(v29 + 5) = v42;
      swift_unknownObjectRelease();
      long long v48 = v25;
      a2 = v26;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  double v30 = v48;
  uint64_t v31 = v48[2];
  if (v31)
  {
    uint64_t v32 = (int *)type metadata accessor for FormatContent(0);
    uint64_t v43 = *(void *)(a1 + v32[14]);
    uint64_t v33 = *(void *)(a1 + v32[17]);
    uint64_t v46 = *(void *)(a1 + v32[16]);
    uint64_t v47 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v30 + 6;
    do
    {
      uint64_t v35 = *(v34 - 2);
      v34 += 3;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFEC4CAC(v35);
      uint64_t v36 = swift_bridgeObjectRetain();
      sub_1BFEF3808(v36);
      uint64_t v37 = swift_bridgeObjectRetain();
      sub_1C1047944(v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1C151D6DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v8, 1, 1, v38);
    uint64_t v45 = v43;
    FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, a2, 0, 0, (uint64_t)v8, v46, &v45, 0, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BFDDF7D4((uint64_t)v8, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1C0348588(a1, (uint64_t)a2);
  }
}

void *FormatServiceMergeContext.__allocating_init(theme:feedDescriptor:groupTag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

void *FormatServiceMergeContext.init(theme:feedDescriptor:groupTag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

void *sub_1C0C63F04(void *a1)
{
  id v2 = objc_msgSend(a1, sel_backingChannel);
  if (v2)
  {
    uint64_t v3 = v2;
    BOOL v4 = (void *)swift_unknownObjectRetain();
    sub_1C0C64248(v4, &v31);
    swift_unknownObjectRelease();
    uint64_t v5 = v31;
    if (v31)
    {
      long long v28 = v32;
      uint64_t v6 = sub_1C0EE000C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v8 = v6[2];
      unint64_t v7 = v6[3];
      if (v8 >= v7 >> 1) {
        uint64_t v6 = sub_1C0EE000C((void *)(v7 > 1), v8 + 1, 1, v6);
      }
      long long v6[2] = v8 + 1;
      uint64_t v9 = &v6[3 * v8];
      v9[4] = v5;
      *(_OWORD *)(v9 + 5) = v28;
    }
    else
    {
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    }
    id v14 = objc_msgSend(v3, sel_identifier, v28);
    uint64_t v15 = sub_1C151E62C();
    uint64_t v17 = v16;

    id v18 = objc_msgSend(objc_msgSend(a1, sel_backingTag), sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v19 = sub_1C151E62C();
    uint64_t v21 = v20;

    if (v15 == v19 && v17 == v21)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v22 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
        sub_1C0C64248(objc_msgSend(a1, sel_backingTag), &v31);
        swift_unknownObjectRelease();
        uint64_t v23 = v31;
        if (v31)
        {
          long long v30 = v32;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1C0EE000C(0, v6[2] + 1, 1, v6);
          }
          unint64_t v25 = v6[2];
          unint64_t v24 = v6[3];
          if (v25 >= v24 >> 1) {
            uint64_t v6 = sub_1C0EE000C((void *)(v24 > 1), v25 + 1, 1, v6);
          }
          long long v6[2] = v25 + 1;
          id v26 = &v6[3 * v25];
          v26[4] = v23;
          *(_OWORD *)(v26 + 5) = v30;
        }
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1C0C64248(objc_msgSend(a1, sel_backingTag), &v31);
    swift_unknownObjectRelease();
    uint64_t v10 = v31;
    if (v31)
    {
      long long v29 = v32;
      uint64_t v6 = sub_1C0EE000C(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1) {
        uint64_t v6 = sub_1C0EE000C((void *)(v11 > 1), v12 + 1, 1, v6);
      }
      long long v6[2] = v12 + 1;
      id v13 = &v6[3 * v12];
      uint64_t v13[4] = v10;
      *(_OWORD *)(v13 + 5) = v29;
    }
    else
    {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v6;
}

id sub_1C0C64248@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C151E68C();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x1F4188790](v4).n128_u64[0];
  unint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(a1, sel_supergroupConfigJson, v6);
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v10 = result;
  sub_1C151E62C();

  sub_1C151E67C();
  uint64_t v11 = sub_1C151E63C();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v13 >> 60 == 15)
  {
LABEL_4:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    sub_1BFFDEB20();
    v22[2] = v14;
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
    id v16 = objc_msgSend(a1, sel_identifier);
    uint64_t v17 = sub_1C151E62C();
    uint64_t v19 = v18;

    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = sub_1BFE9C558();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    sub_1C1517DCC();
    swift_allocObject();
    sub_1C1517DBC();
    sub_1C0C65020();
    sub_1C1517D9C();
    sub_1BFE95878(v11, v13);
    swift_release();
    uint64_t v20 = v23;
    uint64_t v21 = v24;
    id result = v25;
    if (!*(void *)(v23 + 16) && !*(void *)(v24 + 16) && !v25[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      id result = 0;
    }
    *a2 = v20;
    a2[1] = v21;
    a2[2] = result;
  }
  return result;
}

uint64_t FormatServiceMergeContext.deinit()
{
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatServiceMergeContext.__deallocating_deinit()
{
  swift_release();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatServiceMergeContext()
{
  return self;
}

uint64_t method lookup function for FormatServiceMergeContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatServiceMergeContext);
}

uint64_t dispatch thunk of FormatServiceMergeContext.__allocating_init(theme:feedDescriptor:groupTag:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C0C646BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v40 = a2;
  sub_1BFEC0B68(0, (unint64_t *)&unk_1EB861170, (void (*)(uint64_t))sub_1BFE89214);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v35 - v4;
  sub_1BFEC0B68(0, &qword_1EB862930, (void (*)(uint64_t))sub_1C00FC8DC);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v35 - v7;
  sub_1C0C650D8(0, &qword_1EA1A50F0, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v11 = *((void *)v9 - 1);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v35 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C65084();
  uint64_t v14 = (uint64_t)v41;
  sub_1C1520EBC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v41 = a1;
  uint64_t v38 = v5;
  uint64_t v39 = v8;
  sub_1BFE38D20();
  char v44 = 0;
  sub_1BFEBC304((unint64_t *)&unk_1EB878E00, (void (*)(uint64_t))sub_1BFE38D20);
  sub_1C152065C();
  uint64_t v15 = v13;
  if (v45) {
    uint64_t v17 = v45;
  }
  else {
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  sub_1C00FC8DC();
  uint64_t v19 = v18;
  char v43 = 1;
  sub_1BFEBC304(&qword_1EB85F2C8, (void (*)(uint64_t))sub_1C00FC8DC);
  swift_bridgeObjectRetain();
  uint64_t v20 = (uint64_t)v39;
  sub_1C152065C();
  uint64_t v36 = v17;
  uint64_t v37 = 0;
  uint64_t v21 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v20, 1, v19) == 1)
  {
    sub_1BFDDF7D4(v20, &qword_1EB862930, (void (*)(uint64_t))sub_1C00FC8DC);
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v22 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v19);
  }
  uint64_t v23 = (uint64_t)v38;
  sub_1BFE89214();
  uint64_t v25 = v24;
  char v42 = 2;
  sub_1BFEBC304(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
  swift_bridgeObjectRetain();
  uint64_t v26 = v37;
  sub_1C152065C();
  if (!v26)
  {
    uint64_t v38 = (char *)v22;
    uint64_t v39 = v10;
    uint64_t v28 = *(void *)(v25 - 8);
    int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v23, 1, v25);
    uint64_t v30 = (uint64_t)v41;
    if (v29 == 1)
    {
      sub_1BFDDF7D4(v23, (unint64_t *)&unk_1EB861170, (void (*)(uint64_t))sub_1BFE89214);
      uint64_t v31 = MEMORY[0x1E4FBC870];
    }
    else
    {
      uint64_t v31 = sub_1C1517E5C();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v23, v25);
    }
    (*(void (**)(char *, char *))(v11 + 8))(v15, v39);
    uint64_t v32 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v33 = v40;
    uint64_t v34 = v38;
    *uint64_t v40 = v32;
    v33[1] = v34;
    v33[2] = v31;
    __swift_destroy_boxed_opaque_existential_1(v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, char *))(v11 + 8))(v15, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v27) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0C64CBC(void *a1)
{
  sub_1C0C650D8(0, (unint64_t *)&unk_1EA1A5108, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v13 - v7;
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v14 = v1[2];
  uint64_t v15 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C65084();
  sub_1C1520F0C();
  uint64_t v17 = v10;
  char v16 = 0;
  sub_1BFE38D20();
  sub_1BFEBC304(&qword_1EB85D980, (void (*)(uint64_t))sub_1BFE38D20);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v11 = v14;
    uint64_t v17 = v15;
    char v16 = 1;
    sub_1C00FCE3C();
    sub_1C00FCE94();
    sub_1C152080C();
    uint64_t v17 = v11;
    char v16 = 2;
    sub_1BFEBC4B4();
    sub_1C00FCF04();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0C64EF0()
{
  uint64_t v1 = 0x69747265706F7270;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F7463656C6573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73656D656874;
  }
}

uint64_t sub_1C0C64F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C65348(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C64F78(uint64_t a1)
{
  unint64_t v2 = sub_1C0C65084();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C64FB4(uint64_t a1)
{
  unint64_t v2 = sub_1C0C65084();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C64FF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0C646BC(a1, a2);
}

uint64_t sub_1C0C65008(void *a1)
{
  return sub_1C0C64CBC(a1);
}

unint64_t sub_1C0C65020()
{
  unint64_t result = qword_1EA1A50E0;
  if (!qword_1EA1A50E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A50E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMergeConfig()
{
  return &type metadata for FormatMergeConfig;
}

unint64_t sub_1C0C65084()
{
  unint64_t result = qword_1EA1A50F8;
  if (!qword_1EA1A50F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A50F8);
  }
  return result;
}

void sub_1C0C650D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C65084();
    unint64_t v7 = a3(a1, &type metadata for FormatMergeConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FormatMergeConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C65208);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMergeConfig.CodingKeys()
{
  return &type metadata for FormatMergeConfig.CodingKeys;
}

unint64_t sub_1C0C65244()
{
  unint64_t result = qword_1EA1A5118;
  if (!qword_1EA1A5118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5118);
  }
  return result;
}

unint64_t sub_1C0C6529C()
{
  unint64_t result = qword_1EA1A5120;
  if (!qword_1EA1A5120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5120);
  }
  return result;
}

unint64_t sub_1C0C652F4()
{
  unint64_t result = qword_1EA1A5128;
  if (!qword_1EA1A5128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5128);
  }
  return result;
}

uint64_t sub_1C0C65348(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656D656874 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

char *sub_1C0C654B0()
{
  uint64_t v1 = *(void *)v0;
  swift_release();
  sub_1BFF97BE4((uint64_t)&v0[qword_1EB8739C8]);
  uint64_t v2 = *(void *)(v1 + 80);
  int v3 = *(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(&v0[*(void *)(*(void *)v0 + 120)], v2);
  unsigned int v4 = &v0[*(void *)(*(void *)v0 + 128)];
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  v3(&v0[*(void *)(*(void *)v0 + 136)], v2);
  return v0;
}

uint64_t sub_1C0C655CC()
{
  sub_1C0C654B0();
  return swift_deallocClassInstance();
}

id sub_1C0C65624(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (unint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AC3DFC(a1, (uint64_t)v9, (uint64_t (*)(void))sub_1BFECFC20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    uint64_t v10 = (uint64_t (*)(void))sub_1BFECFC20;
    uint64_t v11 = (uint64_t)v9;
LABEL_5:
    sub_1C0AC3E64(v11, v10);
    return objc_msgSend(v1, sel_setAlpha_, 0.0);
  }
  sub_1C0AC3DFC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C0AC3E64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v11 = (uint64_t)v9;
    uint64_t v10 = (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization;
    goto LABEL_5;
  }
  unint64_t v13 = *v6;
  sub_1C0AC3E64((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (v13 >> 61
    || (uint64_t v14 = *(void *)(v13 + 16),
        swift_retain(),
        swift_release(),
        !*(void *)(v14 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_debugData)))
  {
    swift_release();
    return objc_msgSend(v1, sel_setAlpha_, 0.0);
  }
  unint64_t v15 = swift_retain();
  sub_1C0C6586C(v15);
  return (id)swift_release_n();
}

void sub_1C0C6586C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label];
  if (v2[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_display])
  {
    switch(a1)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        break;
      default:
        swift_retain();
        SportsScoreDataVisualization.debugDescription.getter();
        sub_1C0993E1C(a1);
        break;
    }
    uint64_t v5 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setText_, v5);

    char v6 = self;
    id v7 = objc_msgSend(v6, sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v7);

    id v8 = objc_msgSend(v2, sel_layer);
    id v9 = sub_1C0C65C14(a1);
    if (v9)
    {
      uint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_CGColor);
    }
    else
    {
      id v11 = 0;
    }
    objc_msgSend(v8, sel_setBorderColor_, v11);

    id v12 = objc_msgSend(v2, sel_layer);
    objc_msgSend(v12, sel_setBorderWidth_, 2.0);

    id v13 = objc_msgSend(v6, sel_systemBackgroundColor);
    id v14 = objc_msgSend(v13, sel_colorWithAlphaComponent_, 0.75);

    objc_msgSend(v2, sel_setBackgroundColor_, v14);
    objc_msgSend(v2, sel_setAlpha_, 1.0);
  }
  else
  {
    switch(a1)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        break;
      default:
        swift_retain();
        SportsScoreDataVisualization.debugDescription.getter();
        sub_1C0993E1C(a1);
        break;
    }
    unint64_t v15 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setText_, v15);

    id v16 = sub_1C0C65C14(a1);
    objc_msgSend(v2, sel_setBackgroundColor_, v16);

    sub_1C0C65FC0();
  }
}

id sub_1C0C65C14(unint64_t a1)
{
  if (a1 < 4)
  {
    uint64_t v1 = &off_1E64172B8[a1];
    return [self **v1];
  }
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_debugData);
  if (v2)
  {
    uint64_t v1 = &off_1E64172D8[*(char *)(v2 + 16)];
    return [self **v1];
  }
  return 0;
}

char *sub_1C0C65C94(char a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  char v4 = a1 & 1;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v7 = v1;
  *(void *)&v1[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_display] = v4;

  v21.receiver = v7;
  v21.super_class = ObjectType;
  id v8 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v8, sel_setAlpha_, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label;
  uint64_t v10 = *(void **)&v8[OBJC_IVAR____TtC8NewsFeed17WebEmbedDebugView_label];
  objc_msgSend(v10, sel_setTextAlignment_, 1);
  id v11 = self;
  double v12 = *MEMORY[0x1E4FB09E0];
  id v13 = v10;
  id v14 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 13.0, v12);
  objc_msgSend(v13, sel_setFont_, v14);

  unint64_t v15 = *(void **)&v8[v9];
  id v16 = self;
  id v17 = v15;
  id v18 = objc_msgSend(v16, sel_blackColor);
  objc_msgSend(v17, sel_setTextColor_, v18);

  uint64_t v19 = *(void **)&v8[v9];
  objc_msgSend(v19, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_addSubview_, v19);

  return v8;
}

void sub_1C0C65FC0()
{
  uint64_t v1 = v0;
  objc_msgSend(v0, sel_setAlpha_, 0.9);
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  id v13 = sub_1C0C66364;
  uint64_t v14 = v3;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  id v11 = sub_1BFC9FC68;
  double v12 = &block_descriptor_49;
  char v4 = _Block_copy(&v9);
  id v5 = v1;
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  id v13 = sub_1C0C66364;
  uint64_t v14 = v6;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  id v11 = sub_1C0DF5960;
  double v12 = &block_descriptor_10_0;
  id v7 = _Block_copy(&v9);
  id v8 = v5;
  swift_release();
  objc_msgSend(v2, sel_animateWithDuration_delay_options_animations_completion_, 0x10000, v4, v7, 1.5, 0.2);
  _Block_release(v7);
  _Block_release(v4);
}

uint64_t type metadata accessor for WebEmbedDebugView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for WebEmbedDebugViewDisplay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C6629CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDebugViewDisplay()
{
  return &type metadata for WebEmbedDebugViewDisplay;
}

unint64_t sub_1C0C662D8()
{
  unint64_t result = qword_1EA1A5140;
  if (!qword_1EA1A5140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5140);
  }
  return result;
}

uint64_t sub_1C0C6632C()
{
  return swift_deallocObject();
}

id sub_1C0C66364()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 0.0);
}

uint64_t StubFeedPersonalizationService.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t StubFeedPersonalizationService.init()()
{
  return v0;
}

double StubFeedPersonalizationService.baselineScore.getter()
{
  return 0.0;
}

uint64_t StubFeedPersonalizationService.prepareForUse()()
{
  return sub_1C151908C();
}

uint64_t StubFeedPersonalizationService.deinit()
{
  return v0;
}

uint64_t StubFeedPersonalizationService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score6issues7contextSayAA0B11ScoredIssueVGSaySo7FCIssueCG_AA0bJ14ScoringContextOtF_0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F69B4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v3 = v14;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C18C7CB0](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      id v7 = v6;
      id v8 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
      id v9 = v7;
      id v10 = objc_msgSend(v8, sel_init);
      if (!v10) {
        id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }

      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_1C05F69B4(v11 > 1, v12 + 1, 1);
      }
      ++v5;
      *(void *)(v14 + 16) = v12 + 1;
      uint64_t v13 = v14 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score9headlines7contextSayAA0B14ScoredHeadlineVGSaySo19FCHeadlineProviding_pG_AA0bJ14ScoringContextOtF_0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F6994(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18C7CB0](v5, a1);
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      id v7 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
      swift_unknownObjectRetain();
      id v8 = objc_msgSend(v7, sel_init);
      if (!v8) {
        id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      swift_unknownObjectRelease();
      unint64_t v10 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      if (v10 >= v9 >> 1) {
        sub_1C05F6994(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v10 + 1;
      uint64_t v11 = v12 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score4tagsSayAA0B9ScoredTagVGSaySSG_tF_0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C05F69D4(0, v1, 0);
    uint64_t v2 = v11;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_1C05F69D4(v8 > 1, v7 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v7 + 1;
      unint64_t v9 = (void *)(v11 + 24 * v7);
      v9[4] = v6;
      v9[5] = v5;
      v9[6] = 0;
      --v1;
    }
    while (v1);
  }
  return v2;
}

double _s8NewsFeed04StubB22PersonalizationServiceC10groupScore5itemsSdSayAA0B10ScoredItemVG_tF_0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    double v11 = MEMORY[0x1E4FBC860];
    sub_1C05F6CA8(0, v1, 0);
    double v3 = v11;
    unsigned int v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_agedPersonalizationScore);
      uint64_t v6 = v5;
      double v10 = v3;
      unint64_t v8 = *(void *)(*(void *)&v3 + 16);
      unint64_t v7 = *(void *)(*(void *)&v3 + 24);
      if (v8 >= v7 >> 1) {
        sub_1C05F6CA8(v7 > 1, v8 + 1, 1);
      }
      *(void *)(*(void *)&v3 + 16) = v8 + 1;
      *(void *)(*(void *)&v3 + 8 * v8 + 32) = v6;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  sub_1C0209230();
  sub_1C151EC5C();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s8NewsFeed04StubB22PersonalizationServiceC5score5items7contextSayAA0B10ScoredItemVGSaySo019FCFeedPersonalizingJ0_pG_AA0B14ScoringContextOtF_0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F69F4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18C7CB0](v5, a1);
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      id v7 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
      swift_unknownObjectRetain();
      id v8 = objc_msgSend(v7, sel_init);
      if (!v8) {
        id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      swift_unknownObjectRelease();
      unint64_t v10 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      if (v10 >= v9 >> 1) {
        sub_1C05F69F4(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v10 + 1;
      double v11 = (void *)(v12 + 24 * v10);
      void v11[4] = v6;
      v11[5] = v8;
      v11[6] = 0;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

double _s8NewsFeed04StubB22PersonalizationServiceC10groupScore9headlinesSdSayAA0B14ScoredHeadlineVG_tF_0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    double v11 = MEMORY[0x1E4FBC860];
    sub_1C05F6CA8(0, v1, 0);
    double v3 = v11;
    unsigned int v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_agedPersonalizationScore);
      uint64_t v6 = v5;
      double v10 = v3;
      unint64_t v8 = *(void *)(*(void *)&v3 + 16);
      unint64_t v7 = *(void *)(*(void *)&v3 + 24);
      if (v8 >= v7 >> 1) {
        sub_1C05F6CA8(v7 > 1, v8 + 1, 1);
      }
      *(void *)(*(void *)&v3 + 16) = v8 + 1;
      *(void *)(*(void *)&v3 + 8 * v8 + 32) = v6;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  sub_1C0209230();
  sub_1C151EC5C();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for StubFeedPersonalizationService()
{
  return self;
}

uint64_t method lookup function for StubFeedPersonalizationService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StubFeedPersonalizationService);
}

uint64_t dispatch thunk of StubFeedPersonalizationService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t FormatImageRequestData.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t initializeWithCopy for FormatImageRequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatImageRequestData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  return a1;
}

uint64_t assignWithTake for FormatImageRequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageRequestData()
{
  return &type metadata for FormatImageRequestData;
}

BOOL static SharingArticleActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SharingArticleActivity.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SharingArticleActivity.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0C66DE0()
{
  unint64_t result = qword_1EA1A5148;
  if (!qword_1EA1A5148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5148);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharingArticleActivity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    void *result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C66F00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t UIUserInterfaceLayoutDirection.description.getter(uint64_t a1)
{
  uint64_t v1 = 0x6E776F6E6B6E75;
  if (a1 == 1) {
    uint64_t v1 = 0x6F74207468676952;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0x206F74207466654CLL;
  }
}

uint64_t sub_1C0C66F98()
{
  uint64_t v1 = 0x6E776F6E6B6E75;
  if (*v0 == 1) {
    uint64_t v1 = 0x6F74207468676952;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x206F74207466654CLL;
  }
}

uint64_t destroy for DebugFormatCreatePackageSection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatCreatePackageSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatCreatePackageSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatCreatePackageSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatCreatePackageSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatCreatePackageSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageSection()
{
  return &type metadata for DebugFormatCreatePackageSection;
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageItem()
{
  return &type metadata for DebugFormatCreatePackageItem;
}

uint64_t sub_1C0C67388()
{
  return sub_1C0C7C56C(&qword_1EA1A5150, 255, type metadata accessor for UIUserInterfaceLayoutDirection);
}

uint64_t sub_1C0C673D4()
{
  uint64_t v1 = sub_1C151772C();
  uint64_t v20 = *(void *)(v1 - 8);
  uint64_t v21 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151759C();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v8, *MEMORY[0x1E4FAB6D8], v4, v6);
  swift_retain();
  sub_1C151709C();
  swift_release();
  unsigned __int8 v9 = v22;
  id v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    double v11 = v10;
    uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
    sub_1C151F32C();
    double v14 = v13;
    objc_msgSend(v12, sel_safeAreaInsets);
    sub_1C10F61A0(v11, v9, (uint64_t)v3, v14, v15, v16, v17, v18);

    sub_1C151758C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    __break(1u);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void sub_1C0C6769C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton);
  uint64_t v3 = (const void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages);
  memcpy(__dst, (const void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(__dst));
  memcpy(v12, (const void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v12));
  id v4 = v2;
  sub_1C09C3F4C((uint64_t)__dst);
  unint64_t v5 = sub_1C142048C();
  if (v5 >> 62) {
    uint64_t v6 = sub_1C15204BC();
  }
  else {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1C09C51F8((uint64_t)__dst);
  objc_msgSend(v4, sel_setEnabled_, v6 != 0);

  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton);
  memcpy(v12, v3, sizeof(v12));
  memcpy(v11, v3, sizeof(v11));
  id v8 = v7;
  sub_1C09C3F4C((uint64_t)v12);
  unint64_t v9 = sub_1C142048C();
  if (v9 >> 62) {
    uint64_t v10 = sub_1C15204BC();
  }
  else {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1C09C51F8((uint64_t)v12);
  objc_msgSend(v8, sel_setEnabled_, v10 != 0);
}

char *sub_1C0C67824()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView);
  }
  else
  {
    uint64_t v4 = v0;
    unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView);
    id v6 = objc_allocWithZone((Class)type metadata accessor for DebugFormatOverlayView());
    uint64_t v7 = sub_1C0E08494(v5);
    id v8 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v7;
    uint64_t v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1C0C678A8()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem];
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    unint64_t v5 = v0;
    id v6 = (void *)sub_1C151E5EC();
    if (ObjectType)
    {
      uint64_t v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      uint64_t v8 = *(void *)(ObjectType - 8);
      __n128 v9 = MEMORY[0x1F4188790](v7);
      double v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
      uint64_t v12 = sub_1C1520A7C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      uint64_t v12 = 0;
    }
    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 0, v12, sel_doResetZoom, v18[0]);

    swift_unknownObjectRelease();
    double v15 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v14;
    id v3 = v14;

    uint64_t v2 = 0;
  }
  id v16 = v2;
  return v3;
}

void sub_1C0C67A64()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___rotateDeviceCanvasBarButtonItem;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___rotateDeviceCanvasBarButtonItem];
  if (v2) {
    goto LABEL_7;
  }
  id v3 = v0;
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (v12)
  {
    uint64_t v4 = (void *)sub_1C151E5EC();
    id v5 = objc_msgSend(self, sel_systemImageNamed_, v4);

    if (v5)
    {
LABEL_6:
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
      uint64_t v8 = v3;
      id v9 = objc_msgSend(v7, sel_initWithImage_style_target_action_, v5, 0, v8, sel_doRotateDevice);

      uint64_t v10 = *(void **)&v3[v1];
      *(void *)&v3[v1] = v9;
      v9;

      uint64_t v2 = 0;
LABEL_7:
      id v11 = v2;
      return;
    }
    __break(1u);
  }
  id v6 = (void *)sub_1C151E5EC();
  id v5 = objc_msgSend(self, sel_systemImageNamed_, v6);

  if (v5) {
    goto LABEL_6;
  }
  __break(1u);
}

char *sub_1C0C67C08()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView);
  if (v2)
  {
    id v3 = *(char **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView);
  }
  else
  {
    uint64_t v4 = v0;
    objc_allocWithZone((Class)type metadata accessor for DebugFormatEditorPathView());
    uint64_t v5 = swift_retain();
    id v6 = sub_1C09CEA60(v5);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C0C67C94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = *a1;
  id v6 = *(void **)&v4[*a1];
  if (v6)
  {
    id v7 = *(id *)&v4[*a1];
  }
  else
  {
    id v9 = (void *)sub_1C151E5EC();
    id v10 = objc_msgSend(self, sel_systemImageNamed_, v9);

    uint64_t v11 = *a4;
    id v12 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v13 = v4;
    id v14 = objc_msgSend(v12, sel_initWithImage_style_target_action_, v10, 2, v13, v11);

    double v15 = *(void **)&v4[v5];
    *(void *)&v4[v5] = v14;
    id v7 = v14;

    id v6 = 0;
  }
  id v16 = v6;
  return v7;
}

id sub_1C0C67D7C()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem];
  }
  else
  {
    uint64_t v4 = (void *)sub_1C151E5EC();
    id v5 = objc_msgSend(self, sel_systemImageNamed_, v4);

    id v6 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v7 = v0;
    id v8 = objc_msgSend(v6, sel_initWithImage_style_target_action_, v5, 0, v7, sel_doSnapshotWithSender_);

    id v9 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C0C67E78()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem);
  }
  else
  {
    uint64_t v4 = v0;
    swift_retain();
    uint64_t v5 = sub_1C15170BC();
    swift_release();
    sub_1C0AEF234(v5, 0x69682E6567756167, 0xEA00000000006867, 0x6F6C2E6567756167, 0xE900000000000077);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C0C67F40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages;
  uint64_t v9 = qword_1EA194C50;
  id v10 = v3;
  if (v9 != -1) {
    swift_once();
  }
  memcpy(__dst, &byte_1EA2B5418, sizeof(__dst));
  memmove(&v10[v8], &byte_1EA2B5418, 0x150uLL);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView;
  id v12 = objc_allocWithZone((Class)type metadata accessor for DebugFormatRulerView());
  sub_1C09C3F4C((uint64_t)__dst);
  *(void *)&v10[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView] = 0;
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView;
  *(void *)&v10[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView;
  *(void *)&v10[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatSnapshotCanvasView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___rotateDeviceCanvasBarButtonItem] = 0;
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)&v10[v15] = v16;
  double v17 = &v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)double v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v17[32] = 1;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView] = 0;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editorToolbarItems] = MEMORY[0x1E4FBC860];
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_debuggerToolbarItems] = v18;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem] = 0;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor] = a1;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_formatManager] = a2;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView] = v19;
  id v20 = objc_allocWithZone((Class)type metadata accessor for DebugFormatEditorStatusView());
  swift_retain_n();
  swift_retain();
  id v21 = v19;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView] = sub_1C0A097C4(a1);
  id v22 = objc_allocWithZone((Class)type metadata accessor for DebugFormatCanvasViewController());
  swift_retain();
  id v23 = v21;
  id v24 = sub_1C0F8ACE4(a1, v23);
  swift_release();

  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController] = v24;
  id v25 = objc_allocWithZone((Class)type metadata accessor for DebugFormatBackgroundView());
  uint64_t v26 = swift_retain();
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView] = sub_1C14BBC8C(v26);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController] = a3;
  id v27 = a3;

  v30.receiver = v10;
  v30.super_class = ObjectType;
  id v28 = objc_msgSendSuper2(&v30, sel_initWithNibName_bundle_, 0, 0);

  swift_release();
  swift_release();

  return v28;
}

void sub_1C0C68324()
{
  uint64_t v1 = v0;
  v189.receiver = v0;
  v189.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v189, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v3 = v2;
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  id v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView];
  id v7 = objc_msgSend(v4, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  objc_msgSend(v6, sel_setHidden_, 1);
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView];
  objc_msgSend(v8, sel_addSubview_, v9);
  id v10 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  objc_msgSend(v10, sel_addSubview_, v8);
  id v11 = objc_msgSend(v1, sel_view);
  if (!v11)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v12 = v11;
  id v180 = v4;
  objc_msgSend(v11, sel_addSubview_, v10);

  id v13 = objc_msgSend(v1, sel_view);
  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_addSubview_, v6);

  uint64_t v15 = *(char **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController];
  id v16 = objc_msgSend(v15, sel_view);
  if (!v16)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  double v17 = v16;
  objc_msgSend(v16, sel_setPreservesSuperviewLayoutMargins_, 1);

  objc_msgSend(v1, sel_addChildViewController_, v15);
  id v18 = objc_msgSend(v15, sel_view);
  if (!v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v19 = v18;
  objc_msgSend(v8, sel_addSubview_, v18);

  objc_msgSend(v15, sel_didMoveToParentViewController_, v1);
  id v20 = objc_msgSend(v15, sel_view);
  if (!v20)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v21 = v20;
  id v22 = objc_msgSend(v1, sel_view);
  if (!v22)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v23 = v22;
  objc_msgSend(v22, sel_bounds);
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;

  objc_msgSend(v21, sel_setFrame_, v25, v27, v29, v31);
  *(void *)&v15[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_delegate + 8] = &off_1F1BF2CA0;
  swift_unknownObjectWeakAssign();
  uint64_t v32 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  sub_1C0D276FC((uint64_t)v15);
  uint64_t v183 = v32;
  swift_retain();
  sub_1C151709C();
  swift_release();
  objc_msgSend(v9, sel_setOverrideUserInterfaceStyle_, v187);
  objc_msgSend(v10, sel_setMinimumZoomScale_, 1.0);
  objc_msgSend(v10, sel_setMaximumZoomScale_, 30.0);
  objc_msgSend(v10, sel_setDelegate_, v1);
  uint64_t v33 = sub_1C0C67824();
  objc_msgSend(v10, sel_addSubview_, v33);

  objc_msgSend(v10, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView]);
  objc_msgSend(v10, sel_setZoomScale_animated_, 0, 1.0);
  id v34 = sub_1C0C678A8();
  sub_1BFEF4060((uint64_t)&unk_1F1B89AE8);
  swift_arrayDestroy();
  uint64_t v35 = (void *)sub_1C151EFAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setPossibleTitles_, v35);

  id v174 = sub_1C0C678A8();
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  uint64_t v37 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v38 = *v37;
  *(void *)(inited + 32) = *v37;
  id v173 = self;
  id v172 = v38;
  id v39 = objc_msgSend(v173, sel_systemFontOfSize_, 10.0);
  uint64_t v40 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v39;
  uint64_t v41 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v40;
  *(void *)(inited + 72) = v41;
  id v42 = v41;
  id v43 = objc_msgSend(v180, sel_secondaryLabelColor);
  uint64_t v44 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 104) = v44;
  *(void *)(inited + 80) = v43;
  sub_1BFF991DC(inited);
  type metadata accessor for Key(0);
  sub_1C0C7C56C((unint64_t *)&qword_1EB87A1F0, 255, type metadata accessor for Key);
  uint64_t v45 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v174, sel_setTitleTextAttributes_forState_, v45, 0);

  id v46 = sub_1C0C678A8();
  uint64_t v47 = swift_initStackObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C1527210;
  *(void *)(v47 + 32) = v172;
  id v48 = v172;
  *(void *)(v47 + 40) = objc_msgSend(v173, sel_systemFontOfSize_, 10.0);
  *(void *)(v47 + 64) = v40;
  *(void *)(v47 + 72) = v42;
  id v49 = v42;
  id v50 = objc_msgSend(v180, sel_secondaryLabelColor);
  *(void *)(v47 + 104) = v44;
  *(void *)(v47 + 80) = v50;
  sub_1BFF991DC(v47);
  uint64_t v51 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  objc_msgSend(v46, sel_setTitleTextAttributes_forState_, v51, 1);

  id v52 = objc_msgSend(v1, sel_navigationItem);
  sub_1C0C7C36C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1C1540C60;
  uint64_t v54 = (void *)sub_1C151E5EC();
  long long v55 = self;
  id v56 = objc_msgSend(v55, sel_systemImageNamed_, v54);

  if (!v56)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v57 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v58 = v1;
  id v59 = objc_msgSend(v57, sel_initWithImage_style_target_action_, v56, 0, v58, sel_doToggleSidebar);

  *(void *)(v53 + 32) = v59;
  swift_retain();
  uint64_t v60 = sub_1C15170BC();
  swift_release();
  sub_1C0AEF234(v60, 0x69662E72656C7572, 0xEA00000000006C6CLL, 0x72656C7572, 0xE500000000000000);
  *(void *)(v53 + 40) = v61;
  *(void *)(v53 + 48) = sub_1C0C67D7C();
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v62 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_setLeftBarButtonItems_, v62);

  id v63 = objc_msgSend(v58, sel_navigationItem);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1C1540C60;
  uint64_t v65 = (void *)sub_1C151E5EC();
  id v66 = objc_msgSend(v55, sel_systemImageNamed_, v65);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v67 = objc_allocWithZone((Class)sub_1C151BBEC());
  *(void *)(v64 + 32) = sub_1C151BBDC();
  *(void *)(v64 + 40) = sub_1C0C67E78();
  swift_retain();
  uint64_t v68 = sub_1C151896C();
  swift_release();
  sub_1C0AEF52C(v68, 0xD000000000000017, 0x80000001C1621290, 0xD000000000000012, 0x80000001C161DEC0);
  *(void *)(v64 + 48) = v69;
  unint64_t v188 = v64;
  sub_1C151EBEC();
  uint64_t v70 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v63, sel_setRightBarButtonItems_, v70);

  id v71 = objc_msgSend(v58, sel_navigationItem);
  uint64_t v72 = *(void *)&v58[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView];
  objc_msgSend(v71, sel_setTitleView_, v72);

  id v73 = objc_msgSend(v58, sel_navigationItem);
  uint64_t v74 = sub_1C0C67C08();
  objc_msgSend(v73, sel_ts_setBottomPaletteWithContentView_, v74);

  id v75 = objc_msgSend(v58, sel_navigationItem);
  id v76 = objc_msgSend(v180, sel_secondarySystemBackgroundColor);
  sub_1C149EA4C(v75, (uint64_t)v76);

  uint64_t v77 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onHistoryTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v78 = v77;

  swift_release();
  uint64_t v79 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onPackageTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v80 = v79;

  swift_release();
  uint64_t v81 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onErrorTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v82 = v81;

  swift_release();
  uint64_t v83 = *(void **)(v72 + OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_onServerTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v84 = v83;

  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  id v179 = v55;
  sub_1C151897C();
  swift_release();
  id v85 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  id v86 = objc_msgSend(v180, sel_systemBlueColor);
  objc_msgSend(v85, sel_setTintColor_, v86);

  id v87 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem, 0x2E64726177726F66, 0xEE00656C63726963, (uint64_t *)&selRef_doBreakpointNext);
  id v88 = objc_msgSend(v180, sel_systemBlueColor);
  objc_msgSend(v87, sel_setTintColor_, v88);

  id v89 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem, 0xD00000000000001ALL, 0x80000001C16213D0, (uint64_t *)&selRef_doBreakpointStepOver);
  id v90 = objc_msgSend(v180, sel_systemBlueColor);
  objc_msgSend(v89, sel_setTintColor_, v90);

  id v91 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem, 0xD000000000000019, 0x80000001C16213B0, (uint64_t *)&selRef_doBreakpointStepIn);
  id v92 = objc_msgSend(v180, sel_systemBlueColor);
  objc_msgSend(v91, sel_setTintColor_, v92);

  id v93 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem, 0xD000000000000017, 0x80000001C1621390, (uint64_t *)&selRef_doBreakpointStepOut);
  id v94 = objc_msgSend(v180, sel_systemBlueColor);
  objc_msgSend(v93, sel_setTintColor_, v94);

  swift_retain();
  swift_retain();
  sub_1C151896C();
  swift_release();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C0C6C0D8(v188);
  uint64_t v96 = v95;
  id v97 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v98 = v58;
  id v181 = objc_msgSend(v97, sel_initWithImage_style_target_action_, v96, 0, v98, sel_doLightDarkMode);

  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C0C6C204(v188);
  long long v100 = v99;
  id v101 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  long long v102 = v98;
  id v103 = objc_msgSend(v101, sel_initWithImage_style_target_action_, v100, 0, v102, sel_doInterfaceLayoutDirection);

  uint64_t v104 = (void *)sub_1C151E5EC();
  id v105 = objc_msgSend(v179, sel_systemImageNamed_, v104);

  id v106 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  int v107 = v102;
  id v108 = objc_msgSend(v106, (SEL)&selRef_copyItemAtURL_toURL_error_ + 5, v105, 0, v107, sel_doToggleConsoleDisplay);

  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();
  uint64_t v109 = swift_allocObject();
  *(_OWORD *)(v109 + 16) = xmmword_1C159C050;
  *(void *)(v109 + 32) = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  uint64_t v110 = (void *)sub_1C151E5EC();
  id v111 = objc_msgSend(v179, sel_systemImageNamed_, v110);

  if (!v111)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v112 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v113 = v107;
  id v114 = objc_msgSend(v112, sel_initWithImage_style_target_action_, v111, 0, v113, sel_doDevicesWithSender_);

  *(void *)(v109 + 40) = v114;
  sub_1C0C67A64();
  *(void *)(v109 + 48) = v115;
  *(void *)(v109 + 56) = v181;
  *(void *)(v109 + 64) = v103;
  id v182 = v181;
  id v176 = v103;
  swift_retain();
  uint64_t v116 = sub_1C15170BC();
  swift_release();
  sub_1C0AEF234(v116, 0x6172642E646E6168, 0xEE006C6C69662E77, 0x6172642E646E6168, 0xE900000000000077);
  *(void *)(v109 + 72) = v117;
  uint64_t v118 = (void *)sub_1C151E5EC();
  id v119 = objc_msgSend(v179, sel_ts_internalSystemImageNamed_, v118);

  if (!v119)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v120 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  long long v121 = v113;
  id v122 = objc_msgSend(v120, sel_initWithImage_style_target_action_, v119, 0, v121, sel_doAccessibilityWithSender_);

  *(void *)(v109 + 80) = v122;
  *(void *)(v109 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(void *)(v109 + 96) = sub_1C0C678A8();
  *(void *)(v109 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(void *)(v109 + 112) = v108;
  sub_1C151EBEC();
  *(void *)&v121[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editorToolbarItems] = v109;
  id v123 = v108;
  swift_bridgeObjectRelease();
  uint64_t v124 = sub_1C151F47C();
  if (v124)
  {
    uint64_t v125 = (void *)v124;
    swift_bridgeObjectRetain();
    uint64_t v126 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v125, sel_setToolbarItems_, v126);
  }
  uint64_t v127 = swift_allocObject();
  *(_OWORD *)(v127 + 16) = xmmword_1C159C060;
  *(void *)(v127 + 32) = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  *(void *)(v127 + 40) = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem, 0x2E64726177726F66, 0xEE00656C63726963, (uint64_t *)&selRef_doBreakpointNext);
  *(void *)(v127 + 48) = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem, 0xD00000000000001ALL, 0x80000001C16213D0, (uint64_t *)&selRef_doBreakpointStepOver);
  *(void *)(v127 + 56) = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem, 0xD000000000000019, 0x80000001C16213B0, (uint64_t *)&selRef_doBreakpointStepIn);
  *(void *)(v127 + 64) = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem, 0xD000000000000017, 0x80000001C1621390, (uint64_t *)&selRef_doBreakpointStepOut);
  *(void *)(v127 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(void *)(v127 + 80) = sub_1C0C678A8();
  *(void *)(v127 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(void *)(v127 + 96) = v123;
  sub_1C151EBEC();
  *(void *)&v121[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_debuggerToolbarItems] = v127;
  id v171 = v123;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  sub_1C0C6C568();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C151708C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C15170CC();
  swift_release();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C15170CC();
  swift_release();
  swift_release();
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  uint64_t v128 = *(void *)(v183 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
  uint64_t v129 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v130 = *(void *)(v128 + 32);
  *(void *)(v128 + 32) = sub_1C0C7C260;
  *(void *)(v128 + 40) = v129;
  sub_1BFC3E5C0(v130);
  swift_retain();
  sub_1C15170BC();
  swift_release();
  sub_1C15170CC();
  swift_release();
  swift_retain();
  swift_retain();
  sub_1C151896C();
  swift_release();
  swift_release();
  sub_1C151897C();
  swift_release();
  swift_retain();
  swift_retain();
  sub_1C151896C();
  swift_release();
  swift_release();
  sub_1C151891C();
  swift_release();
  swift_retain();
  sub_1C151896C();
  swift_release();
  sub_1C151897C();
  swift_release();
  uint64_t v131 = sub_1C0C67C08();
  uint64_t v132 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v133 = (uint64_t *)&v131[OBJC_IVAR____TtC8NewsFeed25DebugFormatEditorPathView_onShowSourceMap];
  swift_beginAccess();
  uint64_t v134 = *v133;
  *uint64_t v133 = (uint64_t)sub_1C0C7C268;
  v133[1] = v132;
  sub_1BFC3E5C0(v134);

  uint64_t v135 = (void *)*MEMORY[0x1E4FB27A8];
  uint64_t v184 = (void *)*MEMORY[0x1E4FB2438];
  unsigned __int8 v136 = (void *)*MEMORY[0x1E4FB24A8];
  uint64_t v185 = (void *)*MEMORY[0x1E4FB2428];
  id v137 = (void *)*MEMORY[0x1E4FB2450];
  unint64_t v186 = (void *)*MEMORY[0x1E4FB2420];
  uint64_t v138 = self;
  id v139 = v135;
  id v140 = v184;
  id v141 = v136;
  id v175 = v185;
  id v177 = v137;
  id v178 = v186;
  id v142 = v139;
  id v143 = objc_msgSend(v138, sel_defaultCenter);
  objc_msgSend(v143, sel_addObserver_selector_name_object_, v121, sel_doReload, v142, 0);

  id v144 = v140;
  id v145 = objc_msgSend(v138, sel_defaultCenter);
  objc_msgSend(v145, sel_addObserver_selector_name_object_, v121, sel_doReload, v144, 0);

  id v146 = v141;
  id v147 = objc_msgSend(v138, sel_defaultCenter);
  objc_msgSend(v147, sel_addObserver_selector_name_object_, v121, sel_doReload, v146, 0);

  id v148 = v175;
  id v149 = objc_msgSend(v138, sel_defaultCenter);
  objc_msgSend(v149, sel_addObserver_selector_name_object_, v121, sel_doReload, v148, 0);

  id v150 = v177;
  id v151 = objc_msgSend(v138, sel_defaultCenter);
  objc_msgSend(v151, sel_addObserver_selector_name_object_, v121, sel_doReload, v150, 0);

  id v152 = v178;
  id v153 = objc_msgSend(v138, sel_defaultCenter);
  objc_msgSend(v153, sel_addObserver_selector_name_object_, v121, sel_doReload, v152, 0);

  type metadata accessor for Name(0);
  swift_arrayDestroy();
  uint64_t v154 = *(void **)&v121[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController];
  objc_msgSend(v121, sel_addChildViewController_, v154);
  id v155 = objc_msgSend(v121, sel_view);
  if (!v155) {
    goto LABEL_28;
  }
  uint64_t v156 = v155;
  id v157 = objc_msgSend(v154, sel_view);
  if (!v157)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v158 = v157;
  objc_msgSend(v156, sel_addSubview_, v157);

  objc_msgSend(v154, sel_didMoveToParentViewController_, v121);
  id v159 = objc_msgSend(v154, sel_view);
  if (!v159)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  long long v160 = v159;
  id v161 = objc_msgSend(v121, sel_view);
  if (v161)
  {
    long long v162 = v161;
    objc_msgSend(v161, sel_bounds);
    double v164 = v163;
    double v166 = v165;
    double v168 = v167;
    double v170 = v169;

    objc_msgSend(v160, sel_setFrame_, v164, v166, v168, v170);
    swift_retain();
    sub_1C151896C();
    swift_release();
    sub_1C151891C();
    swift_release();
    swift_retain();
    sub_1C151896C();
    swift_release();
    sub_1C151891C();

    swift_release();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1C0C6AB5C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  id v2 = (objc_class *)type metadata accessor for DebugFormatHistoryViewController();
  id v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_sections] = MEMORY[0x1E4FBC860];
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_tableView;
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  swift_retain();
  id v6 = v3;
  *(void *)&v3[v4] = objc_msgSend(v5, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed32DebugFormatHistoryViewController_editor] = v1;
  swift_retain();

  v15.receiver = v6;
  v15.super_class = v2;
  id v7 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  id v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v7);
  objc_msgSend(v8, sel_setModalPresentationStyle_, 7);
  id v9 = objc_msgSend(v8, sel_popoverPresentationController);
  if (v9)
  {
    id v10 = v9;
    objc_msgSend(v9, sel_setSourceView_, *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView)+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_historyButton));
  }
  id v11 = objc_msgSend(v8, sel_popoverPresentationController);
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v11, sel_setPermittedArrowDirections_, 1);
  }
  id v13 = (void *)sub_1C151F47C();
  if (v13)
  {
    uint64_t v14 = v13;
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v8, 1, 0);
  }
}

uint64_t sub_1C0C6AD38()
{
  uint64_t v1 = (uint64_t)v0;
  memcpy(__dst, &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages], 0x150uLL);
  unint64_t v2 = __dst[22];
  unint64_t v28 = __dst[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C09C3F4C((uint64_t)__dst);
  sub_1BFDBB6AC(v2);
  unint64_t v3 = swift_bridgeObjectRetain();
  sub_1BFDBB6AC(v3);
  unint64_t v4 = swift_bridgeObjectRetain();
  sub_1BFDBB6AC(v4);
  sub_1C09C51F8((uint64_t)__dst);
  double v26 = v0;
  if (!(v28 >> 62))
  {
    uint64_t v5 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v6 = v0;
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_15:

    return swift_bridgeObjectRelease_n();
  }
LABEL_26:
  id v25 = (id)v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C15204BC();
  if (!v5) {
    goto LABEL_15;
  }
LABEL_3:
  uint64_t v27 = *(void *)&v26[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor];
  uint64_t v1 = 4;
  while (1)
  {
    uint64_t v7 = v1 - 4;
    if ((v28 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = MEMORY[0x1C18C7CB0](v1 - 4, v28);
      uint64_t v9 = v1 - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(v28 + 8 * v1);
      swift_retain();
      uint64_t v9 = v1 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    uint64_t v11 = *(void *)(v8 + 16);
    uint64_t v10 = *(void *)(v8 + 24);
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (v11 == v28 && v10 == v29)
    {
      objc_super v15 = v26;

      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v13 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v13) {
      break;
    }
    swift_release();
    ++v1;
    if (v9 == v5) {
      goto LABEL_15;
    }
  }
  objc_super v15 = v26;

LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v16 = objc_allocWithZone((Class)type metadata accessor for DebugFormatGroupViewController());
  swift_retain();
  swift_retain();
  double v17 = sub_1C0C4138C(v27, v8, 1);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB19E8]), sel_initWithRootViewController_, v17);
  objc_msgSend(v18, sel_setModalPresentationStyle_, 7);
  id v19 = objc_msgSend(v18, sel_popoverPresentationController);
  if (v19)
  {
    id v20 = v19;
    objc_msgSend(v19, sel_setSourceView_, *(void *)(*(void *)&v15[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView]+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_packageButton));
  }
  id v21 = objc_msgSend(v18, sel_popoverPresentationController);
  if (v21)
  {
    id v22 = v21;
    objc_msgSend(v21, sel_setPermittedArrowDirections_, 1);
  }
  id v23 = (void *)sub_1C151F47C();
  if (v23)
  {
    double v24 = v23;
    objc_msgSend(v23, sel_presentViewController_animated_completion_, v18, 1, 0);
  }
  return swift_release();
}

void sub_1C0C6B07C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  unint64_t v3 = (objc_class *)type metadata accessor for DebugFormatCompilerViewController();
  unint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_tableView;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  swift_retain();
  uint64_t v7 = v4;
  *(void *)&v4[v5] = objc_msgSend(v6, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_throttler;
  sub_1C151888C();
  uint64_t v25 = sub_1C151887C();
  sub_1C0B439C0();
  swift_allocObject();
  *(void *)&v7[v8] = sub_1C15193DC();
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_editor] = v2;
  sub_1C0C7C36C(0, (unint64_t *)&unk_1EA1A3B30, (uint64_t)&type metadata for DebugFormatCompilerSection, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  uint64_t v10 = qword_1EA194C00;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C151928C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EA2B53E8);
  uint64_t v12 = sub_1C151920C();
  uint64_t v14 = v13;
  swift_retain();
  uint64_t v15 = sub_1C0B42210((uint64_t)&unk_1F1B89958, v2);
  swift_release();
  *(void *)(v9 + 32) = 0x72656C69706D6F43;
  *(void *)(v9 + 40) = 0xE800000000000000;
  *(void *)(v9 + 48) = v12;
  *(void *)(v9 + 56) = v14;
  *(void *)(v9 + 64) = v15;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed33DebugFormatCompilerViewController_sections] = v9;

  v24.receiver = v7;
  v24.super_class = v3;
  id v16 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v16);
  objc_msgSend(v17, sel_setModalPresentationStyle_, 7);
  id v18 = objc_msgSend(v17, sel_popoverPresentationController);
  if (v18)
  {
    id v19 = v18;
    objc_msgSend(v18, sel_setSourceView_, *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView)+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_errorButton));
  }
  id v20 = objc_msgSend(v17, sel_popoverPresentationController);
  if (v20)
  {
    id v21 = v20;
    objc_msgSend(v20, sel_setPermittedArrowDirections_, 1);
  }
  id v22 = (void *)sub_1C151F47C();
  if (v22)
  {
    id v23 = v22;
    objc_msgSend(v22, sel_presentViewController_animated_completion_, v17, 1, 0);
  }
}

void sub_1C0C6B384(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    a2();
  }
}

void sub_1C0C6B3E0()
{
  uint64_t v0 = MEMORY[0x1E4FBB1A0];
  uint64_t v1 = MEMORY[0x1E4FAB458];
  sub_1C0C7BD28(0, &qword_1EA1984F8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB458], MEMORY[0x1E4FAB398]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v32 - v5;
  sub_1C0C7A1C8(0, (unint64_t *)&unk_1EA1A5340, MEMORY[0x1E4FAB3E8], MEMORY[0x1E4FBBE00]);
  uint64_t v7 = *(void *)(sub_1C151717C() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  sub_1C0607420();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C152C7F0;
  sub_1C0C7BD28(0, &qword_1EA198520, v0, v1, MEMORY[0x1E4FAB3C0]);
  uint64_t v12 = v11;
  if (qword_1EA194508 != -1) {
    swift_once();
  }
  v32[1] = v9 + v8;
  uint64_t v13 = *MEMORY[0x1E4FAB390];
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v14(v6, v13, v3);
  swift_retain();
  uint64_t v15 = sub_1C151710C();
  *(void *)(v10 + 56) = v12;
  unint64_t v16 = sub_1C0C7B620();
  *(void *)(v10 + 64) = v16;
  *(void *)(v10 + 32) = v15;
  if (qword_1EA194510 != -1) {
    swift_once();
  }
  v14(v6, v13, v3);
  swift_retain();
  uint64_t v17 = sub_1C151710C();
  *(void *)(v10 + 96) = v12;
  *(void *)(v10 + 104) = v16;
  *(void *)(v10 + 72) = v17;
  if (qword_1EA194518 != -1) {
    swift_once();
  }
  v14(v6, v13, v3);
  swift_retain();
  uint64_t v18 = sub_1C151710C();
  *(void *)(v10 + 136) = v12;
  *(void *)(v10 + 144) = v16;
  *(void *)(v10 + 112) = v18;
  sub_1C151716C();
  uint64_t v19 = sub_1C151B38C();
  swift_allocObject();
  uint64_t v20 = sub_1C151B37C();
  v32[6] = v19;
  v32[7] = MEMORY[0x1E4FAC6C0];
  v32[3] = v20;
  id v21 = objc_allocWithZone((Class)sub_1C151B81C());
  id v22 = (void *)sub_1C151B80C();

  id v23 = objc_msgSend(v22, sel_navigationItem);
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  objc_super v24 = (void *)sub_1C151EBAC();
  objc_msgSend(v23, sel_setRightBarButtonItems_, v24);

  id v25 = objc_msgSend(v22, sel_navigationItem);
  double v26 = (void *)sub_1C151E5EC();
  objc_msgSend(v25, sel_setTitle_, v26);

  id v27 = objc_msgSend(objc_allocWithZone((Class)sub_1C151C02C()), sel_initWithRootViewController_, v22);
  objc_msgSend(v27, sel_setModalPresentationStyle_, 7);
  id v28 = objc_msgSend(v27, sel_popoverPresentationController);
  if (v28)
  {
    uint64_t v29 = v28;
    objc_msgSend(v28, sel_setSourceView_, *(void *)(*(void *)(v32[2] + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_statusView)+ OBJC_IVAR____TtC8NewsFeed27DebugFormatEditorStatusView_serverButton));
  }
  double v30 = (void *)sub_1C151F47C();
  if (v30)
  {
    double v31 = v30;
    objc_msgSend(v30, sel_presentViewController_animated_completion_, v27, 1, 0);
  }
}

uint64_t sub_1C0C6B968(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t result = MEMORY[0x1C18C9C60](a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate);
  if (result)
  {
    if (v2)
    {
      uint64_t v4 = sub_1C1160524();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    sub_1C0CCCCF4(v4, v6);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C0C6BA0C(uint64_t a1, unsigned char *a2)
{
  if (*a2)
  {
    if (*a2 == 1) {
      sub_1C0C6BA4C();
    }
  }
  else
  {
    sub_1C0C6BD18();
  }
}

uint64_t sub_1C0C6BA4C()
{
  uint64_t v1 = v0;
  id v2 = sub_1C0C67D7C();
  objc_msgSend(v2, sel_setEnabled_, 0);

  id v3 = sub_1C0C67E78();
  objc_msgSend(v3, sel_setEnabled_, 0);

  uint64_t v4 = sub_1C151F47C();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setToolbarItems_, v6);
  }
  swift_retain();
  sub_1C15170AC();
  swift_release();
  swift_retain();
  sub_1C151895C();
  swift_release();
  uint64_t v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C0C7C354;
  *(void *)(v9 + 24) = v8;
  v14[4] = sub_1C0C7C5B8;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1BFC81740;
  v14[3] = &block_descriptor_104;
  uint64_t v10 = _Block_copy(v14);
  id v11 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_performWithoutAnimation_, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (!LOBYTE(v14[0]))
    {
      LOBYTE(v14[0]) = 1;
      swift_retain();
      sub_1C15170AC();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1C0C6BD18()
{
  id v1 = sub_1C0C67D7C();
  objc_msgSend(v1, sel_setEnabled_, 1);

  id v2 = sub_1C0C67E78();
  objc_msgSend(v2, sel_setEnabled_, 1);

  uint64_t v3 = sub_1C151F47C();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setToolbarItems_, v5);
  }
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v7 = v39;
  if (!v39) {
    goto LABEL_11;
  }
  uint64_t v8 = v38;
  uint64_t v10 = v40;
  uint64_t v9 = v41;
  id v11 = v42;
  uint64_t v12 = *(void *)(v6 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 40);
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEF2D8C(v38, v39);
    if (v15)
    {
      unint64_t v16 = (long long *)(*(void *)(v13 + 56) + (v14 << 7));
      long long v18 = v16[2];
      long long v17 = v16[3];
      long long v19 = v16[1];
      long long v24 = *v16;
      long long v25 = v19;
      long long v26 = v18;
      long long v27 = v17;
      long long v20 = v16[4];
      long long v21 = v16[5];
      long long v22 = v16[7];
      long long v30 = v16[6];
      long long v31 = v22;
      long long v28 = v20;
      long long v29 = v21;
      memmove(&__dst, v16, 0x80uLL);
      nullsub_1();
      sub_1C0B8CEF4(&v24);
    }
    else
    {
      sub_1C017F2B4(&__dst);
    }
  }
  else
  {
    sub_1C017F2B4(&__dst);
    swift_bridgeObjectRetain();
  }
  sub_1C09CFC44((uint64_t)&__dst, (uint64_t)v37);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C09CFC44((uint64_t)v37, (uint64_t)&__dst);
  if (sub_1C0263AB8((uint64_t)&__dst) == 1)
  {
    sub_1C017F270(v8, v7, v10, v9, v11);
LABEL_11:
    swift_retain();
    sub_1C151894C();
    swift_release();
    sub_1C09CFC44((uint64_t)&__dst, (uint64_t)v37);
    sub_1C09CFC44((uint64_t)v37, (uint64_t)&v24);
    swift_retain();
    sub_1C151895C();
    swift_release();
    return;
  }
  long long v24 = __dst;
  *(void *)&long long v25 = v33;
  BYTE8(v25) = v34;
  long long v26 = v35;
  *(void *)&long long v27 = v8;
  *((void *)&v27 + 1) = v7;
  *(void *)&long long v28 = v10;
  *((void *)&v28 + 1) = v9;
  *(void *)&long long v29 = v36;
  *((void *)&v29 + 1) = v8;
  *(void *)&long long v30 = v7;
  *((void *)&v30 + 1) = v10;
  *(void *)&long long v31 = v9;
  *((void *)&v31 + 1) = v11;
  nullsub_1();
  sub_1C09CFC44((uint64_t)&v24, (uint64_t)v23);
  swift_bridgeObjectRetain();
  sub_1C09C87E4(v8, v7, v10, v9, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C151895C();
  swift_release();
  v23[0] = 1;
  swift_retain();
  sub_1C151895C();
  swift_release();
  sub_1C0C7C270(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
  sub_1C017F270(v8, v7, v10, v9, v11);
}

void sub_1C0C6C0D8(unint64_t a1)
{
  BOOL v1 = a1 == 2;
  if (a1 < 2)
  {
    id v2 = (void *)sub_1C151E5EC();
    id v3 = objc_msgSend(self, sel_systemImageNamed_, v2);

    if (v3) {
      return;
    }
    __break(1u);
  }
  if (v1)
  {
    uint64_t v4 = (void *)sub_1C151E5EC();
    id v5 = objc_msgSend(self, sel_systemImageNamed_, v4);

    if (v5) {
      return;
    }
    __break(1u);
  }
  uint64_t v6 = (void *)sub_1C151E5EC();
  id v7 = objc_msgSend(self, sel_systemImageNamed_, v6);

  if (!v7) {
    __break(1u);
  }
}

void sub_1C0C6C204(uint64_t a1)
{
  if (a1 != 1)
  {
    if (a1) {
      goto LABEL_7;
    }
    BOOL v1 = (void *)sub_1C151E5EC();
    id v2 = objc_msgSend(self, sel_systemImageNamed_, v1);

    if (v2) {
      return;
    }
    __break(1u);
  }
  id v3 = (void *)sub_1C151E5EC();
  id v4 = objc_msgSend(self, sel_systemImageNamed_, v3);

  if (v4) {
    return;
  }
  __break(1u);
LABEL_7:
  id v5 = (void *)sub_1C151E5EC();
  id v6 = objc_msgSend(self, sel_systemImageNamed_, v5);

  if (!v6) {
    __break(1u);
  }
}

void sub_1C0C6C320(void *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  id v4 = self;
  id v5 = &selRef_secondaryLabelColor;
  if (v3) {
    id v5 = &selRef_systemBlueColor;
  }
  id v6 = [v4 *v5];
  objc_msgSend(a1, sel_setTintColor_, v6);
}

void sub_1C0C6C3AC()
{
}

void sub_1C0C6C3C4()
{
  sub_1C151932C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v0 = (void *)sub_1C151F56C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1C151901C();
  swift_release();
  swift_release();
}

void sub_1C0C6C490()
{
  sub_1C151932C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v0 = (void *)sub_1C151F56C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1C151901C();
  swift_release();
  swift_release();
}

void sub_1C0C6C568()
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v0 = sub_1C10F65B8(v9);
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v1 = sub_1C0453EF0(v8, v0);
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
    swift_retain();
    sub_1C15170AC();
    swift_release();
  }
  sub_1C0C67A64();
  int v3 = v2;
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v4 = sub_1C10F65B8(v7);
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v5 = sub_1C0453EF0((v6 & 1) == 0, v4);
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setEnabled_, v5 & 1);
}

void sub_1C0C6C6C4(uint64_t a1, unsigned char *a2)
{
  byte_1EA2B53C0 = *a2 == 29;
  sub_1C0D276FC(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController));
  int v3 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  swift_retain();
  sub_1C151709C();
  swift_release();
  objc_msgSend(v3, sel_setOverrideUserInterfaceStyle_, v5);
  sub_1C0C6C568();
  sub_1C151932C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v4 = (void *)sub_1C151F56C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1C151901C();
  swift_release();
  swift_release();
}

void sub_1C0C6C81C(uint64_t a1, char *a2)
{
  char v2 = *a2;
  sub_1C0C67A64();
  uint64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (void *)sub_1C151E5EC();
    id v6 = objc_msgSend(self, sel_systemImageNamed_, v5);

    if (v6)
    {
LABEL_5:
      objc_msgSend(v4, sel_setImage_, v6);

      MEMORY[0x1F4188790](v8);
      sub_1C151932C();
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
      unsigned __int8 v9 = (void *)sub_1C151F56C();
      type metadata accessor for DebugFormatEditorViewController();
      sub_1C151901C();
      swift_release();
      swift_release();

      return;
    }
    __break(1u);
  }
  unsigned __int8 v7 = (void *)sub_1C151E5EC();
  id v6 = objc_msgSend(self, sel_systemImageNamed_, v7);

  if (v6) {
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1C0C6C9F8(uint64_t a1)
{
}

void sub_1C0C6CA10(uint64_t a1)
{
  sub_1C0D276FC(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController));
  char v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  swift_retain();
  sub_1C151709C();
  swift_release();
  objc_msgSend(v2, sel_setOverrideUserInterfaceStyle_, v4);
  sub_1C151932C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  int v3 = (void *)sub_1C151F56C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1C151901C();
  swift_release();
  swift_release();
}

void sub_1C0C6CB40()
{
}

void sub_1C0C6CB58()
{
  sub_1C151932C();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  uint64_t v0 = (void *)sub_1C151F56C();
  type metadata accessor for DebugFormatEditorViewController();
  sub_1C151901C();
  swift_release();
  swift_release();
}

id sub_1C0C6CC20(uint64_t a1, unsigned __int8 *a2)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView), sel_setAlwaysBounceVertical_, *a2);
}

id sub_1C0C6CC3C(uint64_t a1, unsigned __int8 *a2)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView), sel_setAlwaysBounceHorizontal_, *a2);
}

void sub_1C0C6CC58(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a2;
  int v3 = sub_1C0C67824();
  uint64_t v4 = (objc_class *)type metadata accessor for DebugFormatOverlayView();
  v8.receiver = v3;
  v8.super_class = v4;
  objc_msgSendSuper2(&v8, sel_setUserInteractionEnabled_, v2);
  v7.receiver = v3;
  v7.super_class = v4;
  if ((objc_msgSendSuper2(&v7, sel_isUserInteractionEnabled) & 1) == 0)
  {
    uint64_t v5 = &v3[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
    *(_OWORD *)uint64_t v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
    sub_1C0E07F6C();
    id v6 = &v3[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
    *(_OWORD *)id v6 = 0u;
    *((_OWORD *)v6 + 1) = 0u;
    sub_1C0E07F90();
  }
}

void sub_1C0C6CD0C(char *a1, unsigned char *a2)
{
  *(unsigned char *)(*(void *)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView]
           + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden) = (*a2 & 1) == 0;
  sub_1C0658DB8();
  id v3 = objc_msgSend(a1, sel_view);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v3, sel_setNeedsLayout);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C0C6CDA4(void *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  id v4 = (void *)sub_1C151F47C();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_navigationController);

    if (v6)
    {
      objc_msgSend(v6, sel_setToolbarHidden_animated_, v3 ^ 1u, 1);
    }
  }
  id v7 = objc_msgSend(a1, sel_view);
  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v7, sel_setNeedsLayout);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C0C6CE64(uint64_t a1, void *a2)
{
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView), sel_setOverrideUserInterfaceStyle_, *a2);
}

void sub_1C0C6CE80(char *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a3 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C18C9C60](v7);
  if (v8)
  {
    unsigned __int8 v9 = (void *)v8;
    uint64_t v10 = (void *)a4(v6);
    objc_msgSend(v9, sel_setImage_, v10);
  }
  id v11 = &a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)id v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  uint64_t v12 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController];
  sub_1C0D276FC((uint64_t)v12);
  uint64_t v13 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView];
  swift_retain();
  sub_1C151709C();
  swift_release();
  objc_msgSend(v13, sel_setOverrideUserInterfaceStyle_, v20);
  id v14 = objc_msgSend(v12, sel_view);
  if (!v14)
  {
    __break(1u);
    goto LABEL_8;
  }
  char v15 = v14;
  objc_msgSend(v14, sel_layoutIfNeeded);

  id v16 = objc_msgSend(a1, sel_view);
  if (!v16)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  long long v17 = v16;
  objc_msgSend(v16, sel_setNeedsLayout);

  id v18 = objc_msgSend(a1, sel_view);
  if (v18)
  {
    long long v19 = v18;
    objc_msgSend(v18, sel_layoutIfNeeded);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1C0C6D01C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8((void *)3, 0, 0, 0xD00000000000002FLL, 0x80000001C16212E0);
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    int v3 = (void *)v2;
    MEMORY[0x1F4188790](v2);
    sub_1C151932C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    id v4 = (void *)sub_1C151F56C();
    type metadata accessor for DebugFormatEditorViewController();
    sub_1C151901C();

    swift_release();
    swift_release();
  }
}

void sub_1C0C6D1A8(uint64_t a1, uint64_t a2)
{
  sub_1C0C7A1C8(0, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - v4;
  sub_1C0C7C2D4(a2, (uint64_t)&v12 - v4, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  uint64_t v6 = type metadata accessor for FormatDebuggerContext();
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  id v7 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  if (a2 == 1)
  {
    uint64_t v8 = (void *)sub_1C151E5EC();
    id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

    objc_msgSend(v7, sel_setImage_, v9);
  }
  else
  {
    uint64_t v10 = (void *)sub_1C151E5EC();
    id v11 = objc_msgSend(self, sel_systemImageNamed_, v10);

    objc_msgSend(v7, sel_setImage_, v11);
    sub_1C0C7C008((uint64_t)v5, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
}

void sub_1C0C6D3E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  id v3 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  if (*(void *)(v2 + 16) && (swift_retain(), sub_1C151894C(), swift_release(), v5))
  {
    swift_release();
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  objc_msgSend(v3, sel_setEnabled_, v4);
}

void sub_1C0C6D4B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  id v3 = sub_1C0C67C94(&OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem, 0x7269632E79616C70, 0xEB00000000656C63, (uint64_t *)&selRef_doStartStopDebugger);
  swift_retain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v4) {
    BOOL v5 = v2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  uint64_t v6 = !v5;
  objc_msgSend(v3, sel_setEnabled_, v6);
}

void sub_1C0C6D590(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C18C9C60](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    v9[0] = v2;
    v9[1] = v3;
    v9[2] = v4;
    uint64_t v9[3] = v5;
    sub_1C0C6D608(v9);
  }
}

uint64_t sub_1C0C6D608(uint64_t *a1)
{
  sub_1C0C7A1C8(0, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v21 = a1[2];
  uint64_t v22 = v12;
  uint64_t v20 = a1[3];
  swift_retain();
  sub_1C151894C();
  swift_release();
  if (!*(void *)&v27[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_1C0C7C008((uint64_t)v7, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  }
  uint64_t v14 = *(void *)(*(void *)&v27[0] + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1BFEF2D8C(v22, v13);
    if (v16)
    {
      sub_1C0C7A164(*(void *)(v14 + 56) + *(void *)(v9 + 72) * v15, (uint64_t)v7);
      long long v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v17(v7, 0, 1, v8);
    }
    else
    {
      long long v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v17(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v17(v7, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1C0C7C008((uint64_t)v7, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  }
  sub_1C0C7A22C((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  sub_1C0C7A164((uint64_t)v11, (uint64_t)v4);
  v17(v4, 0, 1, v8);
  v25[0] = v22;
  v25[1] = v13;
  void v25[2] = v21;
  v25[3] = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  v23[0] = v27[0];
  v23[1] = v27[1];
  uint64_t v24 = v28;
  sub_1C017ED10((uint64_t)v4, v25, (uint64_t *)v23, (uint64_t)v26);
  sub_1C09CFC44((uint64_t)v26, (uint64_t)v27);
  sub_1C09CFC44((uint64_t)v27, (uint64_t)v23);
  swift_retain();
  sub_1C151895C();
  swift_release();
  v26[0] = 1;
  swift_retain();
  sub_1C151895C();
  swift_release();
  return sub_1C0C7B0D8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
}

void sub_1C0C6DA0C(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  id v3 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController), sel_view);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v3, sel_setHidden_, v2 ^ 1u);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C0C6DA84(uint64_t a1, uint64_t a2)
{
  sub_1C09CFC44(a2, (uint64_t)v5);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController)
     + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile;
  sub_1C09CFC44(v3, (uint64_t)v6);
  sub_1C09CFC44((uint64_t)v5, v3);
  sub_1C0C7C270(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
  sub_1C0C7C270(v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
  return sub_1C0B89C84();
}

uint64_t sub_1C0C6DB7C(char a1)
{
  if (a1) {
    return sub_1C0C6DBF4();
  }
  sub_1C0C7C36C(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

uint64_t sub_1C0C6DBF4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView);
  objc_msgSend(v1, sel_setZoomScale_animated_, 0, 1.0);
  sub_1C0C6E670(v1);
  objc_msgSend(v1, sel_adjustedContentInset);
  objc_msgSend(v1, sel_setContentOffset_animated_, 0, 0.0, -v2);
  uint64_t v3 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController)
                + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView);
  id v4 = self;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_mainScreen);
  objc_msgSend(v6, sel_scale);
  double v8 = v7;

  sub_1C0FB4CD0(v8);
  sub_1C0C7C36C(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151911C();
}

void sub_1C0C6DD3C(int a1, char *a2)
{
  uint64_t v3 = &a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v3[32] = 1;
  id v4 = objc_msgSend(a2, sel_view);
  if (v4)
  {
    id v5 = v4;
    objc_msgSend(v4, sel_setNeedsLayout);

    id v6 = objc_msgSend(a2, sel_view);
    if (v6)
    {
      double v7 = v6;
      objc_msgSend(v6, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C0C6DDEC(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  uint64_t v3 = (void *)sub_1C151F47C();
  id v4 = v3;
  if (v3)
  {
    id v5 = objc_msgSend(v3, sel_navigationController);

    id v4 = objc_msgSend(v5, sel_toolbar);
  }
  sub_1C149EB64(v4);

  id v6 = (void *)sub_1C151F47C();
  if (v6)
  {
    double v7 = v6;
    id v8 = objc_msgSend(v6, sel_navigationController);

    if (v8)
    {
      swift_retain();
      sub_1C151709C();
      swift_release();
      objc_msgSend(v8, sel_setToolbarHidden_animated_, (v9 & 1) == 0, 0);
    }
  }
}

id sub_1C0C6DF64()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C151772C();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x1F4188790](v3).n128_u64[0];
  double v7 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118.receiver = v1;
  v118.super_class = ObjectType;
  objc_msgSendSuper2(&v118, sel_viewWillLayoutSubviews, v5);
  id v8 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  objc_super v10 = result;
  objc_msgSend(result, sel_bounds);
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;

  objc_msgSend(v8, sel_setFrame_, v12, v14, v16, v18);
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView];
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v20 = result;
  objc_msgSend(result, sel_bounds);
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;

  objc_msgSend(v19, sel_setFrame_, v22, v24, v26, v28);
  long long v29 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView];
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  long long v30 = result;
  objc_msgSend(result, sel_bounds);
  double v32 = v31;
  double v34 = v33;
  double v36 = v35;
  double v38 = v37;

  objc_msgSend(v29, sel_setFrame_, v32, v34, v36, v38);
  id result = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_sourceViewController], sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v39 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v40 = result;
  uint64_t v116 = v8;
  objc_msgSend(result, sel_bounds);
  double v42 = v41;
  double v44 = v43;
  double v46 = v45;
  double v48 = v47;

  objc_msgSend(v39, sel_setFrame_, v42, v44, v46, v48);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v49 = result;
  uint64_t v50 = v3;
  objc_msgSend(result, sel_bounds);
  CGFloat v52 = v51;
  CGFloat v54 = v53;
  CGFloat v56 = v55;
  CGFloat v58 = v57;

  v119.origin.x = v52;
  v119.origin.y = v54;
  v119.size.width = v56;
  v119.size.height = v58;
  double Width = CGRectGetWidth(v119);
  uint64_t v60 = sub_1C0C67C08();
  objc_msgSend(v60, sel_frame);
  CGFloat v62 = v61;
  CGFloat v64 = v63;
  CGFloat v66 = v65;
  CGFloat v68 = v67;

  v126.origin.x = 0.0;
  v126.origin.y = 0.0;
  v126.size.height = 22.0;
  v120.origin.x = v62;
  v120.origin.y = v64;
  v120.size.width = v66;
  v120.size.height = v68;
  v126.size.width = Width;
  if (!CGRectEqualToRect(v120, v126))
  {
    uint64_t v69 = sub_1C0C67C08();
    objc_msgSend(v69, sel_setFrame_, 0.0, 0.0, Width, 22.0);

    id v70 = objc_msgSend(v1, sel_navigationItem);
    v121.origin.x = 0.0;
    v121.origin.y = 0.0;
    v121.size.height = 22.0;
    v121.size.width = Width;
    objc_msgSend(v70, sel_ts_setBottomPaletteMinimumHeight_, CGRectGetHeight(v121));

    id v71 = objc_msgSend(v1, sel_navigationItem);
    v122.origin.x = 0.0;
    v122.origin.y = 0.0;
    v122.size.height = 22.0;
    v122.size.width = Width;
    objc_msgSend(v71, sel_ts_setBottomPalettePreferredHeight_, CGRectGetHeight(v122));
  }
  swift_retain();
  sub_1C151709C();
  swift_release();
  unsigned __int8 v72 = v117;
  id result = objc_msgSend(v1, sel_view);
  if (!result) {
    goto LABEL_23;
  }
  id v73 = result;
  uint64_t v74 = v116;
  sub_1C151F32C();
  double v76 = v75;
  objc_msgSend(v74, sel_safeAreaInsets);
  sub_1C10F61A0(v73, v72, (uint64_t)v7, v76, v77, v78, v79, v80);

  sub_1C151765C();
  double v82 = v81;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v50);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v83 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v85 = v84;
  CGFloat v87 = v86;
  CGFloat v89 = v88;
  CGFloat v91 = v90;

  v123.origin.x = v85;
  v123.origin.y = v87;
  v123.size.width = v89;
  v123.size.height = v91;
  double v92 = CGRectGetWidth(v123);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v93 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v95 = v94;
  CGFloat v97 = v96;
  CGFloat v99 = v98;
  CGFloat v101 = v100;

  v124.origin.x = v95;
  v124.origin.y = v97;
  v124.size.width = v99;
  v124.size.height = v101;
  double Height = CGRectGetHeight(v124);
  id v103 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController];
  id result = objc_msgSend(v103, sel_view);
  uint64_t v104 = v116;
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v105 = result;
  double v106 = v92 * 0.5 - v82 * 0.5;
  objc_msgSend(result, sel_setFrame_, v106, 0.0, v82, Height);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView], sel_setFrame_, v106, 0.0, v82, Height);
  int v107 = sub_1C0C67824();
  id result = objc_msgSend(v103, sel_view);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v108 = result;
  objc_msgSend(result, sel_frame);
  CGFloat v110 = v109;
  CGFloat v112 = v111;

  uint64_t v113 = (CGFloat *)&v107[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset];
  CGFloat *v113 = v110;
  v113[1] = v112;
  CGRect v125 = CGRectOffset(*(CGRect *)&v107[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame], v110, v112);
  objc_msgSend(v107, sel_setFrame_, v125.origin.x, v125.origin.y, v125.size.width, v125.size.height);

  id result = objc_msgSend(v103, sel_view);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v114 = result;
  objc_msgSend(result, sel_setNeedsLayout);

  id result = objc_msgSend(v103, sel_view);
  if (result)
  {
    uint64_t v115 = result;
    objc_msgSend(result, sel_layoutIfNeeded);

    return sub_1C0C6E670(v104);
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_1C0C6E670(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(unsigned char **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView);
  double v5 = 0.0;
  if ((v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulersHidden] & 1) == 0) {
    double v5 = *(double *)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_rulerSize];
  }
  objc_msgSend(a1, sel_setContentInset_, v5, v5, 0.0, 0.0);
  uint64_t v6 = *(char **)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController);
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView]
     + OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame;
  double v8 = *(double *)(v7 + 16);
  double v9 = *(double *)(v7 + 24);
  objc_msgSend(a1, sel_contentSize);
  double v11 = v10;
  objc_msgSend(a1, sel_frame);
  double Width = CGRectGetWidth(v46);
  if (v8 > Width) {
    double Width = v8;
  }
  if (v11 <= Width) {
    double v11 = Width;
  }
  objc_msgSend(a1, sel_contentSize);
  double v14 = v13;
  objc_msgSend(a1, sel_frame);
  double Height = CGRectGetHeight(v47);
  if (v9 > Height) {
    double Height = v9;
  }
  if (v14 > Height) {
    double v16 = v14;
  }
  else {
    double v16 = Height;
  }
  objc_msgSend(a1, sel_setContentSize_, v11, v16);
  objc_msgSend(a1, sel_bounds);
  double MinX = CGRectGetMinX(v48);
  objc_msgSend(a1, sel_bounds);
  double MinY = CGRectGetMinY(v49);
  objc_msgSend(a1, sel_safeAreaInsets);
  double v20 = MinY + v19;
  objc_msgSend(a1, sel_bounds);
  double v21 = CGRectGetWidth(v50);
  objc_msgSend(a1, sel_bounds);
  double v22 = CGRectGetHeight(v51);
  objc_msgSend(a1, sel_safeAreaInsets);
  double v24 = v22 - v23;
  objc_msgSend(a1, sel_safeAreaInsets);
  objc_msgSend(v4, sel_setFrame_, MinX, v20, v21, v24 - v25);
  id result = objc_msgSend(v6, sel_view);
  if (result)
  {
    id v27 = result;
    objc_msgSend(result, sel_frame);
    CGFloat v29 = v28;
    CGFloat v31 = v30;

    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView), sel_transform);
    v45.x = v29;
    v45.y = v31;
    CGPoint v32 = CGPointApplyAffineTransform(v45, &v44);
    double v33 = (CGPoint *)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_canvasOffset];
    *double v33 = v32;
    double v34 = *(char **)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    *(CGPoint *)&v34[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_canvasOffset] = v32;
    objc_msgSend(v34, sel_setNeedsLayout);
    double v35 = *(char **)&v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    *(CGPoint *)&v35[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_canvasOffset] = *v33;
    objc_msgSend(v35, sel_setNeedsLayout);
    objc_msgSend(a1, sel_contentSize);
    double v36 = &v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentSize];
    *double v36 = v37;
    v36[1] = v38;
    sub_1C0658B90();
    objc_msgSend(a1, sel_bounds);
    uint64_t v39 = &v4[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_contentBounds];
    *uint64_t v39 = v40;
    v39[1] = v41;
    v39[2] = v42;
    v39[3] = v43;
    return sub_1C0658C40();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0C6E9C8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C151772C();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x1F4188790](v3);
  double v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1C151757C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  double v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C7A1C8(0, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  double v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = MEMORY[0x1F4188790](v12).n128_u64[0];
  double v15 = (char *)v55 - v14;
  v60.receiver = v1;
  v60.super_class = ObjectType;
  v55[1] = ObjectType;
  objc_msgSendSuper2(&v60, sel_viewDidLayoutSubviews, v13);
  sub_1C0C673D4();
  swift_retain();
  sub_1C151709C();
  swift_release();
  unsigned __int8 v16 = v59;
  id v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v18 = v17;
  double v19 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  sub_1C151F32C();
  double v21 = v20;
  objc_msgSend(v19, sel_safeAreaInsets);
  sub_1C10F61A0(v18, v16, (uint64_t)v5, v21, v22, v23, v24, v25);

  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v15, v8, v56);
  uint64_t v26 = type metadata accessor for DebugFormatEditorLayoutContext();
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v15[*(int *)(v26 + 20)], v5, v58);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v15, 0, 1, v26);
  sub_1C0C7C2D4((uint64_t)v15, (uint64_t)v11, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
  swift_retain();
  sub_1C151895C();
  swift_release();
  sub_1C0C7C008((uint64_t)v15, &qword_1EA1A3B80, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditorLayoutContext);
  swift_retain();
  sub_1C151894C();
  swift_release();
  if (v59) {
    return;
  }
  id v27 = &v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  CGFloat v28 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  CGFloat v29 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 8];
  CGFloat v30 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 16];
  CGFloat v31 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 24];
  char v32 = v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds + 32];
  id v33 = objc_msgSend(v1, sel_view);
  if (!v33) {
    goto LABEL_10;
  }
  double v34 = v33;
  objc_msgSend(v33, sel_bounds);
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  CGFloat v40 = v39;
  CGFloat v42 = v41;

  if (v32) {
    goto LABEL_6;
  }
  v61.origin.x = v28;
  v61.origin.y = v29;
  v61.size.width = v30;
  v61.size.height = v31;
  v62.origin.x = v36;
  v62.origin.y = v38;
  v62.size.width = v40;
  v62.size.height = v42;
  if (!CGRectEqualToRect(v61, v62))
  {
LABEL_6:
    id v43 = objc_msgSend(v1, sel_view);
    if (v43)
    {
      CGAffineTransform v44 = v43;
      objc_msgSend(v43, sel_bounds);
      uint64_t v46 = v45;
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      uint64_t v52 = v51;

      *(void *)id v27 = v46;
      *((void *)v27 + 1) = v48;
      *((void *)v27 + 2) = v50;
      *((void *)v27 + 3) = v52;
      v27[32] = 0;
      MEMORY[0x1F4188790](v53);
      v55[-2] = v1;
      sub_1C151932C();
      CGFloat v54 = (void *)sub_1C151806C();
      sub_1C151904C();
      swift_release();
      swift_release();

      return;
    }
LABEL_11:
    __break(1u);
  }
}

uint64_t sub_1C0C6EF14(const void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  memcpy(v47, a1, sizeof(v47));
  memcpy(v48, (const void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v48));
  memcpy((void *)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), a1, 0x150uLL);
  sub_1C09C3F4C((uint64_t)v47);
  sub_1C09C51F8((uint64_t)v48);
  sub_1C0C6769C();
  unint64_t v6 = v47[25];
  unint64_t v50 = v47[4];
  sub_1C09C3F4C((uint64_t)v47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C104AD08(v6);
  unint64_t v7 = swift_bridgeObjectRetain();
  sub_1C104AD08(v7);
  unint64_t v8 = swift_bridgeObjectRetain();
  sub_1C104AD08(v8);
  sub_1C09C51F8((uint64_t)v47);
  unint64_t v9 = v50;
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v10 = v50;
  uint64_t v11 = *(void *)&v51[0];
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C0C7708C(v9, v10, v11, v50, *(uint64_t *)&v51[0], (uint64_t)v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0C7A22C((uint64_t)v37, (uint64_t)v49, (uint64_t (*)(void))sub_1C0C7A294);
  sub_1C0C7A22C((uint64_t)v49, (uint64_t)&v50, (uint64_t (*)(void))sub_1C0C7A294);
  if (sub_1C00A0A24((uint64_t *)&v50) == 1)
  {
    sub_1C0FB4E24();
    if (qword_1EA194558 != -1) {
      swift_once();
    }
    type metadata accessor for DebugFormatCanvasViewController();
    sub_1C0C7C56C((unint64_t *)&unk_1EA1A9830, 255, (void (*)(uint64_t))type metadata accessor for DebugFormatCanvasViewController);
    sub_1C1516FBC();
    if (LOBYTE(v37[0]) == 1)
    {
      id v12 = objc_msgSend(self, sel_defaultCenter);
      if (qword_1EB87C338 != -1) {
        swift_once();
      }
      objc_msgSend(v12, sel_postNotificationName_object_, qword_1EB93C730, 0);
    }
    sub_1C0C6DBF4();
    swift_release();
    sub_1C0C7C36C(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    long long v44 = v51[6];
    long long v45 = v51[7];
    long long v46 = v51[8];
    long long v40 = v51[2];
    long long v41 = v51[3];
    long long v42 = v51[4];
    long long v43 = v51[5];
    long long v38 = v51[0];
    long long v39 = v51[1];
    uint64_t v14 = v50;
    v37[0] = v51[0];
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C15170AC();
    swift_release();
    *(void *)&v37[0] = 0;
    *((void *)&v37[0] + 1) = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    *(void *)&v37[0] = 0xD000000000000019;
    *((void *)&v37[0] + 1) = 0x80000001C1620F30;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    long long v15 = v37[0];
    if (qword_1EA1943D0 != -1) {
      swift_once();
    }
    sub_1C02306F8((void *)2, 0, 0, v15, *((uint64_t *)&v15 + 1));
    swift_bridgeObjectRelease();
    *(void *)&v37[0] = v14;
    swift_retain();
    swift_retain();
    sub_1C151895C();
    swift_release();
    swift_retain();
    swift_retain();
    sub_1C151894C();
    swift_release();
    swift_retain();
    sub_1C151895C();
    swift_release();
    uint64_t v16 = swift_release();
    MEMORY[0x1F4188790](v16);
    sub_1C151932C();
    id v17 = (void *)sub_1C151806C();
    uint64_t v18 = swift_allocObject();
    long long v19 = v42;
    *(_OWORD *)(v18 + 104) = v43;
    long long v20 = v45;
    *(_OWORD *)(v18 + 120) = v44;
    *(_OWORD *)(v18 + 136) = v20;
    *(_OWORD *)(v18 + 152) = v46;
    long long v21 = v38;
    *(_OWORD *)(v18 + 40) = v39;
    long long v22 = v41;
    *(_OWORD *)(v18 + 56) = v40;
    *(_OWORD *)(v18 + 72) = v22;
    *(_OWORD *)(v18 + 88) = v19;
    *(void *)(v18 + 16) = v14;
    *(_OWORD *)(v18 + 24) = v21;
    *(void *)(v18 + 168) = a2;
    swift_retain();
    sub_1C0187D08((uint64_t)v51);
    swift_retain();
    sub_1C151900C();
    swift_release();

    swift_release();
    double v23 = (void *)sub_1C151806C();
    sub_1C151901C();
    swift_release();

    uint64_t v24 = swift_allocObject();
    long long v25 = v42;
    *(_OWORD *)(v24 + 104) = v43;
    long long v26 = v45;
    *(_OWORD *)(v24 + 120) = v44;
    *(_OWORD *)(v24 + 136) = v26;
    *(_OWORD *)(v24 + 152) = v46;
    long long v27 = v38;
    *(_OWORD *)(v24 + 40) = v39;
    long long v28 = v41;
    *(_OWORD *)(v24 + 56) = v40;
    *(_OWORD *)(v24 + 72) = v28;
    *(_OWORD *)(v24 + 88) = v25;
    *(void *)(v24 + 16) = v14;
    *(_OWORD *)(v24 + 24) = v27;
    swift_retain();
    sub_1C0187D08((uint64_t)v51);
    CGFloat v29 = (void *)sub_1C1518E7C();
    sub_1C15190FC();
    swift_release();
    swift_release();

    CGFloat v30 = (_OWORD *)swift_allocObject();
    long long v31 = v45;
    v30[7] = v44;
    v30[8] = v31;
    v30[9] = v46;
    long long v32 = v41;
    v30[3] = v40;
    v30[4] = v32;
    long long v33 = v43;
    v30[5] = v42;
    v30[6] = v33;
    long long v34 = v39;
    v30[1] = v38;
    v30[2] = v34;
    double v35 = (void *)sub_1C1518E7C();
    uint64_t v13 = sub_1C151903C();
    swift_release();
    swift_release();
    swift_release();
  }
  return v13;
}

void *sub_1C0C6F6F0(void *a1)
{
  return sub_1C0C6F714(a1);
}

void *sub_1C0C6F714(void *a1)
{
  sub_1C0C7A1C8(0, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  double v5 = (id *)((char *)&v80 - v4);
  id v108 = a1;
  id v6 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  if (swift_dynamicCast())
  {
    long long v7 = v102;
    uint64_t v8 = v103;
    if (v105 >> 60 == 12)
    {
      uint64_t v82 = v104;
      id v84 = (id)(v105 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v85 = v1;
      uint64_t v83 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
      uint64_t v9 = *(void *)(v83 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
      swift_retain();
      sub_1C1517E7C();
      swift_beginAccess();
      uint64_t v10 = *(void *)(v9 + 40);
      if (*(void *)(v10 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_1BFEF2D8C(v7, *((uint64_t *)&v7 + 1));
        if (v12)
        {
          uint64_t v13 = (long long *)(*(void *)(v10 + 56) + (v11 << 7));
          long long v15 = v13[2];
          long long v14 = v13[3];
          long long v16 = v13[1];
          long long v90 = *v13;
          long long v91 = v16;
          long long v92 = v15;
          long long v93 = v14;
          long long v17 = v13[4];
          long long v18 = v13[5];
          long long v19 = v13[7];
          *(_OWORD *)&v95[16] = v13[6];
          *(_OWORD *)&v95[32] = v19;
          long long v94 = v17;
          *(_OWORD *)CGFloat v95 = v18;
          memmove(&v96, v13, 0x80uLL);
          nullsub_1();
          sub_1C0B8CEF4(&v90);
        }
        else
        {
          sub_1C017F2B4(&v96);
        }
      }
      else
      {
        sub_1C017F2B4(&v96);
        swift_bridgeObjectRetain();
      }
      sub_1C09CFC44((uint64_t)&v96, (uint64_t)&v102);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_release();
      sub_1C09CFC44((uint64_t)&v102, (uint64_t)&v96);
      if (sub_1C0263AB8((uint64_t)&v96) == 1)
      {

        swift_bridgeObjectRelease();
        int v20 = 1;
      }
      else
      {
        uint64_t v22 = v99;
        unint64_t v21 = v100;
        long long v86 = v7;
        uint64_t v87 = v8;
        uint64_t v88 = v82;
        sub_1C017F5CC(v99, v100, (uint64_t *)&v86, v84, (uint64_t *)&v90);
        swift_bridgeObjectRelease();
        uint64_t v23 = *((void *)&v90 + 1);
        uint64_t v81 = v91;
        uint64_t v82 = v90;
        uint64_t v80 = *((void *)&v91 + 1);
        long long v90 = v96;
        *(void *)&long long v91 = v97;
        BYTE8(v91) = v98;
        *(void *)&long long v92 = v22;
        *((void *)&v92 + 1) = v21;
        *(void *)&long long v93 = v82;
        *((void *)&v93 + 1) = v23;
        *(void *)&long long v94 = v81;
        *((void *)&v94 + 1) = v80;
        *(void *)CGFloat v95 = v101;
        *(void *)&v95[8] = v82;
        *(void *)&v95[16] = v23;
        *(void *)&v95[24] = v81;
        *(void *)&v95[32] = v80;
        *(void *)&v95[40] = a1;
        nullsub_1();
        sub_1C09CFC44((uint64_t)&v90, (uint64_t)&v86);
        swift_bridgeObjectRetain();
        id v24 = a1;
        swift_bridgeObjectRetain_n();
        id v25 = a1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C151895C();
        swift_release();
        sub_1C0C7C36C(0, &qword_1EA1A5250, (uint64_t)&type metadata for FormatSourceMap, MEMORY[0x1E4FBBE00]);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1C1529AE0;
        uint64_t v28 = v81;
        uint64_t v27 = v82;
        *(void *)(v26 + 32) = v82;
        *(void *)(v26 + 40) = v23;
        uint64_t v29 = v80;
        *(void *)(v26 + 48) = v28;
        *(void *)(v26 + 56) = v29;
        *(void *)&long long v86 = v26;
        swift_retain();
        sub_1C151895C();
        swift_release();
        *(void *)&long long v86 = v27;
        *((void *)&v86 + 1) = v23;
        uint64_t v87 = v28;
        uint64_t v88 = v29;
        CGFloat v89 = a1;
        swift_bridgeObjectRetain();
        id v30 = a1;
        swift_retain();
        sub_1C151895C();
        swift_release();
        LOBYTE(v86) = 1;
        swift_retain();
        sub_1C151895C();
        swift_bridgeObjectRelease();
        swift_release();

        sub_1C0C7C270(&v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
        int v20 = 0;
      }
      uint64_t v1 = v85;
    }
    else
    {
      sub_1C017F78C(v102, *((uint64_t *)&v102 + 1), v103, v104, v105);
      int v20 = 1;
    }
  }
  else
  {
    int v20 = 1;
  }
  *(void *)&long long v102 = a1;
  id v31 = a1;
  uint64_t v32 = type metadata accessor for FormatLayoutError();
  int v33 = swift_dynamicCast();
  long long v34 = *(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
  if (!v33)
  {
    v34(v5, 1, 1, v32);
    id result = (void *)sub_1C0C7C008((uint64_t)v5, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError);
    if (!v20) {
      return result;
    }
LABEL_30:
    *(void *)&long long v102 = 0;
    *((void *)&v102 + 1) = 0xE000000000000000;
    sub_1C15200FC();
    sub_1C151E80C();
    *(void *)&long long v96 = a1;
    sub_1C152036C();
    long long v55 = v102;
    if (qword_1EA1943D0 != -1) {
      swift_once();
    }
    sub_1C02306F8(a1, 0, 0, v55, *((uint64_t *)&v55 + 1));
    swift_bridgeObjectRelease();
    LOBYTE(v102) = 1;
    *((void *)&v102 + 1) = 0x726F727245;
    uint64_t v103 = 0xE500000000000000;
    uint64_t v104 = 0xD000000000000022;
    unint64_t v105 = 0x80000001C1620F00;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v56 = (void *)(*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor)
                   + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
    swift_beginAccess();
    if (*v56)
    {
      swift_retain();
      sub_1C0D6A240(&v102);
      swift_release();
    }
    swift_retain();
    sub_1C151709C();
    id result = (void *)swift_release();
    if (!(_BYTE)v90)
    {
      LOBYTE(v90) = 1;
      swift_retain();
      sub_1C15170AC();
      return (void *)swift_release();
    }
    return result;
  }
  v34(v5, 0, 1, v32);
  if (swift_getEnumCaseMultiPayload() != 65)
  {
    id result = (void *)sub_1C0C7B0D8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    if (!v20) {
      return result;
    }
    goto LABEL_30;
  }
  uint64_t v35 = (uint64_t)*v5;
  uint64_t v36 = *((void *)*v5 + 2);
  if (!v36)
  {

    id result = (void *)swift_bridgeObjectRelease();
    if (!v20) {
      return result;
    }
    goto LABEL_30;
  }
  id v84 = v5[1];
  uint64_t v85 = v1;
  double v37 = (uint64_t *)(v35 + 32 * v36);
  uint64_t v38 = *v37;
  uint64_t v39 = v37[1];
  uint64_t v40 = v37[2];
  uint64_t v80 = v37[3];
  uint64_t v81 = v40;
  uint64_t v83 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  uint64_t v41 = *(void *)(v83 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v42 = *(void *)(v41 + 40);
  uint64_t v43 = *(void *)(v42 + 16);
  uint64_t v82 = v38;
  if (v43)
  {
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_1BFEF2D8C(v38, v39);
    if (v45)
    {
      long long v46 = (long long *)(*(void *)(v42 + 56) + (v44 << 7));
      long long v48 = v46[2];
      long long v47 = v46[3];
      long long v49 = v46[1];
      long long v90 = *v46;
      long long v91 = v49;
      long long v92 = v48;
      long long v93 = v47;
      long long v50 = v46[4];
      long long v51 = v46[5];
      long long v52 = v46[7];
      *(_OWORD *)&v95[16] = v46[6];
      *(_OWORD *)&v95[32] = v52;
      long long v94 = v50;
      *(_OWORD *)CGFloat v95 = v51;
      memmove(&v96, v46, 0x80uLL);
      nullsub_1();
      sub_1C0B8CEF4(&v90);
    }
    else
    {
      sub_1C017F2B4(&v96);
    }
  }
  else
  {
    sub_1C017F2B4(&v96);
    swift_bridgeObjectRetain();
  }
  sub_1C09CFC44((uint64_t)&v96, (uint64_t)&v102);
  CGFloat v54 = v84;
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  swift_release();
  sub_1C09CFC44((uint64_t)&v102, (uint64_t)&v96);
  if (sub_1C0263AB8((uint64_t)&v96) == 1)
  {
    swift_bridgeObjectRelease();

    id result = (void *)swift_bridgeObjectRelease();
    uint64_t v1 = v85;
    if (!v20) {
      return result;
    }
    goto LABEL_30;
  }
  uint64_t v58 = v99;
  unint64_t v57 = v100;
  *(void *)&long long v86 = v82;
  *((void *)&v86 + 1) = v39;
  uint64_t v87 = v81;
  uint64_t v88 = v80;
  sub_1C017F5CC(v99, v100, (uint64_t *)&v86, v54, (uint64_t *)&v90);
  swift_bridgeObjectRelease();
  long long v59 = v90;
  long long v60 = v91;
  long long v90 = v96;
  *(void *)&long long v91 = v97;
  BYTE8(v91) = v98;
  *(void *)&long long v92 = v58;
  *((void *)&v92 + 1) = v57;
  long long v93 = v59;
  long long v94 = v60;
  *(void *)CGFloat v95 = v101;
  *(_OWORD *)&v95[8] = v59;
  *(_OWORD *)&v95[24] = v60;
  uint64_t v85 = *((void *)&v60 + 1);
  *(void *)&v95[40] = v54;
  nullsub_1();
  CGRect v61 = *(void **)(v83 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__sourceFile);
  sub_1C09CFC44((uint64_t)&v90, (uint64_t)&v86);
  swift_bridgeObjectRetain_n();
  id v62 = v54;
  swift_bridgeObjectRetain();
  id v63 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  CGFloat v64 = v61;
  sub_1C151895C();
  swift_release();
  sub_1C0E82E9C(1, v35);
  unint64_t v68 = (v67 >> 1) - v66;
  if (__OFSUB__(v67 >> 1, v66))
  {
    __break(1u);
    goto LABEL_44;
  }
  BOOL v69 = __OFADD__(v68, 1);
  uint64_t v70 = v68 + 1;
  if (v69)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v71 = v65;
  uint64_t v72 = v66;
  unint64_t v73 = v67;
  *(void *)&long long v86 = sub_1C0EE2410(0, v70 & ~(v70 >> 63), 0, MEMORY[0x1E4FBC860]);
  uint64_t v74 = swift_unknownObjectRetain();
  sub_1C104AD20(v74, v71, v72, v73);
  CGFloat v64 = (void *)v86;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_45:
  }
    CGFloat v64 = sub_1C0EE2410(0, v64[2] + 1, 1, v64);
  unint64_t v76 = v64[2];
  unint64_t v75 = v64[3];
  if (v76 >= v75 >> 1) {
    CGFloat v64 = sub_1C0EE2410((void *)(v75 > 1), v76 + 1, 1, v64);
  }
  v64[2] = v76 + 1;
  double v77 = &v64[4 * v76];
  *((_OWORD *)v77 + 2) = v59;
  uint64_t v78 = v85;
  v77[6] = v60;
  v77[7] = v78;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v86 = v64;
  swift_retain();
  sub_1C151895C();
  swift_release();
  long long v86 = v59;
  uint64_t v87 = v60;
  uint64_t v88 = v78;
  CGFloat v89 = v54;
  swift_bridgeObjectRetain();
  id v79 = v54;
  swift_retain();
  sub_1C151895C();
  swift_release();
  LOBYTE(v86) = 1;
  swift_retain();
  sub_1C151895C();
  swift_release();

  swift_bridgeObjectRelease();
  return sub_1C0C7C270(&v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
}

void sub_1C0C702B0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C151772C();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x1F4188790](v3).n128_u64[0];
  long long v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32.receiver = v0;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, sel_viewLayoutMarginsDidChange, v5);
  id v8 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController], sel_view);
  if (!v8)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v9 = v8;
  swift_retain();
  sub_1C151709C();
  swift_release();
  unsigned __int8 v10 = v31;
  id v11 = objc_msgSend(v0, sel_view);
  if (!v11)
  {
LABEL_7:
    __break(1u);
    return;
  }
  char v12 = v11;
  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
  sub_1C151F32C();
  double v15 = v14;
  objc_msgSend(v13, sel_safeAreaInsets);
  sub_1C10F61A0(v12, v10, (uint64_t)v7, v15, v16, v17, v18, v19);

  sub_1C151766C();
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  objc_msgSend(v9, sel_setLayoutMargins_, v21, v23, v25, v27);

  swift_retain();
  sub_1C151894C();
  uint64_t v28 = swift_release();
  if ((v31 & 1) == 0)
  {
    MEMORY[0x1F4188790](v28);
    *(void *)&v30[-16] = v1;
    sub_1C151932C();
    uint64_t v29 = (void *)sub_1C151806C();
    sub_1C151904C();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1C0C70598(uint64_t a1)
{
  uint64_t v1 = (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages);
  memcpy(__dst, (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(__dst));
  memcpy(v4, v1, sizeof(v4));
  sub_1C09C3F4C((uint64_t)__dst);
  uint64_t v2 = sub_1C0C6EF14(v4, 0);
  sub_1C09C51F8((uint64_t)__dst);
  return v2;
}

uint64_t sub_1C0C70874(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C18C9C60](v1);
  sub_1BFC39268(0, &qword_1EA1A2120);
  if (!v2) {
    return sub_1C151F8AC();
  }
  sub_1C0C7C36C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C152F080;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320F0;
  sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
  swift_allocObject();
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v3 + 32) = sub_1C151FBBC();
  swift_allocObject();
  swift_beginAccess();
  double v5 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v3 + 40) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v33 + 32) = sub_1C151F8BC();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C152F080;
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  long long v7 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v6 + 32) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  id v8 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v6 + 40) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v6 + 48) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  unsigned __int8 v10 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v6 + 56) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  id v11 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v6 + 64) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  char v12 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v6 + 72) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  uint64_t v13 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v6 + 80) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v33 + 40) = sub_1C151F8BC();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C15320F0;
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  double v15 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v14 + 32) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_allocObject();
  swift_beginAccess();
  double v16 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v14 + 40) = sub_1C151FBBC();
  sub_1C151EBEC();
  char v32 = v14;
  *(void *)(v33 + 48) = sub_1C151F8BC();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C15320F0;
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (v32) {
    sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_beginAccess();
  double v19 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v17 + 32) = sub_1C151FBBC();
  swift_retain();
  sub_1C151709C();
  swift_release();
  if (v34 != 1) {
    sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_beginAccess();
  double v20 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v17 + 40) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v33 + 56) = sub_1C151F8BC();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C159C070;
  swift_allocObject();
  swift_beginAccess();
  double v22 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v21 + 32) = sub_1C151FBBC();
  swift_allocObject();
  swift_beginAccess();
  double v23 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v21 + 40) = sub_1C151FBBC();
  *(void *)(v21 + 48) = sub_1C151FBBC();
  swift_allocObject();
  swift_beginAccess();
  double v24 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v21 + 56) = sub_1C151FBBC();
  *(void *)(v21 + 64) = sub_1C151FBBC();
  swift_allocObject();
  swift_beginAccess();
  double v25 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v21 + 72) = sub_1C151FBBC();
  *(void *)(v21 + 80) = sub_1C151FBBC();
  swift_allocObject();
  swift_beginAccess();
  double v26 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v21 + 88) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v33 + 64) = sub_1C151F8BC();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C15320E0;
  swift_allocObject();
  swift_beginAccess();
  uint64_t v28 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v27 + 32) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v33 + 72) = sub_1C151F8BC();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C15320E0;
  swift_allocObject();
  swift_beginAccess();
  id v30 = (void *)MEMORY[0x1C18C9C60](v1);
  swift_unknownObjectWeakInit();

  *(void *)(v29 + 32) = sub_1C151FBBC();
  sub_1C151EBEC();
  *(void *)(v33 + 80) = sub_1C151F8BC();
  sub_1C151EBEC();
  uint64_t v18 = sub_1C151F8AC();

  return v18;
}

void sub_1C0C71D60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    MEMORY[0x1F4188790](v3);
    sub_1C151932C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    double v5 = (void *)sub_1C151F56C();
    type metadata accessor for DebugFormatEditorViewController();
    sub_1C151901C();

    swift_release();
    swift_release();
  }
}

void sub_1C0C71E8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController);
  id v4 = objc_allocWithZone((Class)type metadata accessor for DebugFormatLayoutDimensionViewController());
  swift_retain();
  double v5 = v3;
  id v9 = (id)sub_1C10D5E30(v2, v5);

  id v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v9);
  objc_msgSend(v6, sel_setModalPresentationStyle_, 1);
  long long v7 = (void *)sub_1C151F47C();
  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v7, sel_presentViewController_animated_completion_, v6, 1, 0);
  }
}

uint64_t sub_1C0C71F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();
    swift_retain();
    sub_1C151709C();
    swift_release();
    swift_retain();
    sub_1C15170AC();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C72044(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();
    swift_retain();
    sub_1C15170AC();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C720E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();
    swift_retain();
    sub_1C15170AC();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C72184(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();
    sub_1C15170AC();

    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C72208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();
    sub_1C15170AC();

    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C72290(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();

    swift_retain();
    swift_release();
    swift_retain();
    sub_1C151895C();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C72344(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1C15170AC();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C723E0()
{
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151950C();
  return swift_release();
}

uint64_t sub_1C0C7246C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
    swift_retain();

    uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_resizingProvider);
    swift_retain();
    swift_release();
    sub_1C1517E7C();
    swift_beginAccess();
    *(void *)(v6 + 24) = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease();
    sub_1C1517E8C();
    return swift_release();
  }
  return result;
}

void sub_1C0C7252C()
{
  id v0 = objc_msgSend(self, sel_defaultCenter);
  id v1 = v0;
  if (qword_1EB87C338 != -1)
  {
    swift_once();
    id v0 = v1;
  }
  objc_msgSend(v0, sel_postNotificationName_object_, qword_1EB93C730, 0);
}

uint64_t sub_1C0C725CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();

    swift_retain();
    swift_release();
    sub_1C13BEADC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C72660()
{
  if (qword_1EB85E8C0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB93C2B0;
  sub_1C1517E7C();
  swift_beginAccess();
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  return sub_1C1517E8C();
}

uint64_t sub_1C0C726F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    id v4 = (void *)v3;
    swift_retain();

    swift_retain();
    sub_1C15170AC();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    uint64_t v6 = (void *)result;
    swift_retain();

    swift_retain();
    sub_1C15170AC();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1C0C72804(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C18C9C60](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    a3();
  }
}

void sub_1C0C72860()
{
  sub_1C0C7BF68(0, (unint64_t *)&unk_1EA1A5288, MEMORY[0x1E4FAB398]);
  uint64_t v230 = v0;
  uint64_t v228 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v229 = (char *)&v196 - v1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAB398];
  sub_1C0C7BDFC(0, (unint64_t *)&unk_1EA1A5298, (uint64_t (*)(void))sub_1C05E6F18, (uint64_t)&type metadata for DebugFormatBackgroundColor, MEMORY[0x1E4FAB398]);
  uint64_t v225 = v3;
  uint64_t v224 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v226 = (char *)&v196 - v4;
  uint64_t v5 = MEMORY[0x1E4FBB3D0];
  uint64_t v6 = MEMORY[0x1E4FAB478];
  long long v7 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4FAB398];
  sub_1C0C7BD28(0, &qword_1EA1A52A8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAB478], MEMORY[0x1E4FAB398]);
  uint64_t v223 = v8;
  uint64_t v221 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v222 = (char *)&v196 - v9;
  sub_1C0C7BD28(0, &qword_1EA1A52B0, v5, v6, MEMORY[0x1E4FAB3B8]);
  uint64_t v219 = v10;
  uint64_t v218 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v220 = (_DWORD *)((char *)&v196 - v11);
  sub_1C0C7BD28(0, &qword_1EA1A52B8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAB4A0], v7);
  uint64_t v216 = v12;
  uint64_t v215 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v217 = (char *)&v196 - v13;
  sub_1C0C7BDFC(0, (unint64_t *)&unk_1EA1A52C0, (uint64_t (*)(void))sub_1C05E6B5C, (uint64_t)&type metadata for DebugFormatTestSubject, v2);
  uint64_t v213 = v14;
  uint64_t v212 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v214 = (char *)&v196 - v15;
  sub_1C0C7BDFC(0, (unint64_t *)&unk_1EA1A52D0, (uint64_t (*)(void))sub_1C05E6C70, (uint64_t)&type metadata for DebugFormatTestRun, v2);
  uint64_t v207 = v16;
  uint64_t v206 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v208 = (char *)&v196 - v17;
  sub_1C0C7BDFC(0, (unint64_t *)&unk_1EA1A52E0, (uint64_t (*)(void))sub_1C05E6D18, (uint64_t)&type metadata for DebugFormatTestScope, v2);
  uint64_t v204 = v18;
  uint64_t v203 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v205 = (char *)&v196 - v19;
  sub_1C0C7BD28(0, (unint64_t *)&unk_1EA1A52F0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468], v7);
  uint64_t v247 = v20;
  uint64_t v252 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  v246 = (char *)&v196 - v21;
  uint64_t v251 = sub_1C151707C();
  uint64_t v254 = *(void *)(v251 - 8);
  MEMORY[0x1F4188790](v251);
  v249 = (char *)&v196 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C7BDFC(0, &qword_1EA198500, (uint64_t (*)(void))sub_1C022F57C, (uint64_t)&type metadata for DebugFormatBackendEnvironment, v2);
  unint64_t v250 = v23;
  v248 = *(void (***)(char *, uint64_t, unint64_t))(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v253 = (char *)&v196 - v24;
  sub_1C0C7BDFC(0, &qword_1EA198508, (uint64_t (*)(void))sub_1C022F5D0, (uint64_t)&type metadata for DebugFormatUploadTarget, v2);
  uint64_t v243 = (char *)*((void *)v25 - 1);
  v244 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v245 = (char *)&v196 - v26;
  sub_1C0C7BDFC(0, &qword_1EA1A5318, (uint64_t (*)(void))sub_1C05E6A0C, (uint64_t)&type metadata for DebugFormatWeather, v2);
  *(void *)&long long v241 = v27;
  *(void *)&long long v236 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v242 = (uint64_t *)((char *)&v196 - v28);
  sub_1C0C7BDFC(0, &qword_1EA1A5328, (uint64_t (*)(void))sub_1C05E6AB4, (uint64_t)&type metadata for DebugFormatLocation, v2);
  uint64_t v201 = v29;
  uint64_t v200 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  v202 = (char *)&v196 - v30;
  sub_1C0C7BDFC(0, &qword_1EA1A5338, (uint64_t (*)(void))sub_1C05E6964, (uint64_t)&type metadata for FeedKind, v2);
  uint64_t v198 = v31;
  uint64_t v197 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  unint64_t v199 = (char *)&v196 - v32;
  uint64_t v33 = MEMORY[0x1E4FBB1A0];
  uint64_t v34 = MEMORY[0x1E4FAB458];
  sub_1C0C7BD28(0, &qword_1EA1984F8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB458], v7);
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)&v196 - v38;
  sub_1C0C7A1C8(0, (unint64_t *)&unk_1EA1A5340, MEMORY[0x1E4FAB3E8], MEMORY[0x1E4FBBE00]);
  uint64_t v41 = v40;
  uint64_t v42 = *(void *)(sub_1C151717C() - 8);
  uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = (v43 + 32) & ~v43;
  uint64_t v240 = *(void *)(v42 + 72);
  uint64_t v211 = v41;
  uint64_t v209 = v43 | 7;
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1C152C610;
  sub_1C0607420();
  uint64_t v238 = v46;
  uint64_t v47 = swift_allocObject();
  long long v196 = xmmword_1C152C7F0;
  *(_OWORD *)(v47 + 16) = xmmword_1C152C7F0;
  sub_1C0C7BD28(0, &qword_1EA198520, v33, v34, MEMORY[0x1E4FAB3C0]);
  uint64_t v49 = v48;
  if (qword_1EA194508 != -1) {
    swift_once();
  }
  uint64_t v210 = v44;
  uint64_t v227 = v45;
  uint64_t v239 = v45 + v44;
  uint64_t v50 = *MEMORY[0x1E4FAB390];
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
  uint64_t v52 = v37 + 104;
  long long v51 = v53;
  v53(v39, v50, v36);
  swift_retain();
  uint64_t v54 = sub_1C151710C();
  *(void *)(v47 + 56) = v49;
  unint64_t v55 = sub_1C0C7B620();
  *(void *)(v47 + 64) = v55;
  *(void *)(v47 + 32) = v54;
  if (qword_1EA194510 != -1) {
    swift_once();
  }
  v51(v39, v50, v36);
  swift_retain();
  uint64_t v56 = sub_1C151710C();
  *(void *)(v47 + 96) = v49;
  *(void *)(v47 + 104) = v55;
  *(void *)(v47 + 72) = v56;
  if (qword_1EA194518 != -1) {
    swift_once();
  }
  uint64_t v237 = v36;
  uint64_t v234 = v52;
  uint64_t v232 = v51;
  v51(v39, v50, v36);
  swift_retain();
  unint64_t v235 = v39;
  uint64_t v57 = sub_1C151710C();
  uint64_t v233 = v49;
  *(void *)(v47 + 136) = v49;
  *(void *)(v47 + 144) = v55;
  unint64_t v231 = v55;
  *(void *)(v47 + 112) = v57;
  sub_1C151716C();
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v196;
  sub_1C0C7BDFC(0, &qword_1EA1A5368, (uint64_t (*)(void))sub_1C05E6964, (uint64_t)&type metadata for FeedKind, MEMORY[0x1E4FAB3C0]);
  uint64_t v60 = v59;
  uint64_t v61 = v50;
  if (qword_1EA194738 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v197 + 104))(v199, v50, v198);
  sub_1C02A1CC0();
  swift_retain();
  uint64_t v62 = sub_1C151712C();
  *(void *)(v58 + 56) = v60;
  *(void *)(v58 + 64) = sub_1C0C7B6A4();
  *(void *)(v58 + 32) = v62;
  sub_1C0C7BDFC(0, &qword_1EA1A5380, (uint64_t (*)(void))sub_1C05E6AB4, (uint64_t)&type metadata for DebugFormatLocation, MEMORY[0x1E4FAB3C0]);
  uint64_t v64 = v63;
  if (qword_1EA1945D8 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v200 + 104))(v202, v50, v201);
  sub_1C0C7B734();
  swift_retain();
  uint64_t v65 = sub_1C151712C();
  *(void *)(v58 + 96) = v64;
  *(void *)(v58 + 104) = sub_1C0C7B788();
  *(void *)(v58 + 72) = v65;
  sub_1C0C7BDFC(0, &qword_1EA1A5398, (uint64_t (*)(void))sub_1C05E6A0C, (uint64_t)&type metadata for DebugFormatWeather, MEMORY[0x1E4FAB3C0]);
  uint64_t v67 = v66;
  if (qword_1EA1945E0 != -1) {
    swift_once();
  }
  (*(void (**)(uint64_t *, uint64_t, void))(v236 + 104))(v242, v50, v241);
  sub_1C0C7B818();
  swift_retain();
  uint64_t v68 = sub_1C151712C();
  *(void *)(v58 + 136) = v67;
  *(void *)(v58 + 144) = sub_1C0C7B86C();
  *(void *)(v58 + 112) = v68;
  sub_1C151716C();
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_1C152A660;
  sub_1C0C7BDFC(0, (unint64_t *)&unk_1EA1A53B0, (uint64_t (*)(void))sub_1C022F5D0, (uint64_t)&type metadata for DebugFormatUploadTarget, MEMORY[0x1E4FAB3C0]);
  uint64_t v71 = v70;
  uint64_t v72 = v237;
  if (qword_1EA194610 != -1) {
    swift_once();
  }
  uint64_t v73 = 2 * v240;
  (*((void (**)(char *, uint64_t, void))v243 + 13))(v245, v50, v244);
  sub_1C00FB6D4();
  swift_retain();
  uint64_t v74 = sub_1C151712C();
  *(void *)(v69 + 56) = v71;
  *(void *)(v69 + 64) = sub_1C0C7B8FC();
  *(void *)(v69 + 32) = v74;
  sub_1C0C7BDFC(0, &qword_1EA198510, (uint64_t (*)(void))sub_1C022F57C, (uint64_t)&type metadata for DebugFormatBackendEnvironment, MEMORY[0x1E4FAB3C0]);
  uint64_t v76 = v75;
  if (qword_1EA194620 != -1) {
    swift_once();
  }
  v202 = (char *)v73;
  uint64_t v245 = (char *)(v239 + v73);
  v248[13](v253, v50, v250);
  sub_1C00FC074();
  swift_retain();
  uint64_t v77 = sub_1C151712C();
  *(void *)(v69 + 96) = v76;
  *(void *)(v69 + 104) = sub_1C0C7B98C();
  *(void *)(v69 + 72) = v77;
  if (qword_1EA194628 != -1) {
    swift_once();
  }
  uint64_t v78 = v235;
  uint64_t v79 = v72;
  uint64_t v80 = v232;
  v232(v235, v50, v79);
  swift_retain();
  uint64_t v81 = v233;
  uint64_t v82 = sub_1C151710C();
  unint64_t v83 = v231;
  *(void *)(v69 + 136) = v81;
  *(void *)(v69 + 144) = v83;
  *(void *)(v69 + 112) = v82;
  if (qword_1EA194630 != -1) {
    swift_once();
  }
  uint64_t v85 = v254 + 104;
  id v84 = *(void (***)(char *, uint64_t, unint64_t))(v254 + 104);
  long long v86 = v249;
  LODWORD(v253) = *MEMORY[0x1E4FAB2F0];
  v248 = v84;
  ((void (*)(char *))v84)(v249);
  v80(v78, v61, v237);
  swift_retain();
  uint64_t v87 = sub_1C151711C();
  *(void *)(v69 + 176) = v81;
  *(void *)(v69 + 184) = v83;
  *(void *)(v69 + 152) = v87;
  sub_1C151716C();
  uint64_t v254 = v239 + 3 * v240;
  uint64_t v88 = v61;
  CGFloat v89 = v86;
  uint64_t v90 = swift_allocObject();
  long long v236 = xmmword_1C1529AE0;
  *(_OWORD *)(v90 + 16) = xmmword_1C1529AE0;
  sub_1C0C7BD28(0, (unint64_t *)&unk_1EA1A53E0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468], MEMORY[0x1E4FAB3C0]);
  long long v92 = v91;
  if (qword_1EA194560 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v248)(v89, v253, v251);
  uint64_t v93 = v252 + 104;
  long long v94 = *(void (**)(char *, uint64_t, uint64_t))(v252 + 104);
  uint64_t v95 = v85;
  long long v96 = v246;
  v94(v246, v88, v247);
  swift_retain();
  uint64_t v97 = sub_1C151713C();
  *(void *)(v90 + 56) = v92;
  uint64_t v98 = v88;
  unint64_t v99 = sub_1C0C7BA1C();
  *(void *)(v90 + 64) = v99;
  *(void *)(v90 + 32) = v97;
  sub_1C151716C();
  uint64_t v245 = (char *)(v239 + 4 * v240);
  uint64_t v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = v236;
  if (qword_1EA194618 != -1) {
    swift_once();
  }
  uint64_t v254 = v95;
  ((void (*)(char *, void, uint64_t))v248)(v249, v253, v251);
  uint64_t v101 = v98;
  uint64_t v252 = v93;
  v244 = v94;
  v94(v96, v98, v247);
  swift_retain();
  uint64_t v102 = MEMORY[0x1E4FBC860];
  uint64_t v103 = sub_1C151713C();
  *(void *)(v100 + 56) = v92;
  *(void *)(v100 + 64) = v99;
  unint64_t v250 = v99;
  *(void *)(v100 + 32) = v103;
  sub_1C151716C();
  if (qword_1EA194C00 != -1) {
    swift_once();
  }
  uint64_t v104 = sub_1C151928C();
  __swift_project_value_buffer(v104, (uint64_t)qword_1EA2B53E8);
  uint64_t v201 = sub_1C151920C();
  uint64_t v200 = v105;
  uint64_t v258 = v102;
  sub_1C05F7EA8(0, 3, 0);
  uint64_t v106 = 0;
  uint64_t v107 = v258;
  uint64_t v242 = (uint64_t *)"ition Item Kind Mismatch";
  uint64_t v243 = "Newsroom Identifiers";
  *(void *)&long long v241 = "ebug-format-logger";
  uint64_t v245 = v92;
  do
  {
    if (byte_1F1B89B60[v106 + 32])
    {
      if (byte_1F1B89B60[v106 + 32] != 1)
      {
        if (qword_1EA1943E8 == -1) {
          goto LABEL_35;
        }
LABEL_39:
        swift_once();
        goto LABEL_35;
      }
      if (qword_1EA1943E0 != -1) {
        goto LABEL_39;
      }
    }
    else if (qword_1EA1943D8 != -1)
    {
      goto LABEL_39;
    }
LABEL_35:
    ((void (*)(char *, void, uint64_t))v248)(v249, v253, v251);
    v244(v246, v98, v247);
    swift_retain();
    id v108 = v245;
    uint64_t v109 = sub_1C151713C();
    uint64_t v258 = v107;
    unint64_t v111 = *(void *)(v107 + 16);
    unint64_t v110 = *(void *)(v107 + 24);
    if (v111 >= v110 >> 1)
    {
      sub_1C05F7EA8(v110 > 1, v111 + 1, 1);
      uint64_t v107 = v258;
    }
    ++v106;
    uint64_t v256 = (uint64_t)v108;
    unint64_t v257 = v250;
    *(void *)&long long v255 = v109;
    *(void *)(v107 + 16) = v111 + 1;
    sub_1BFC773DC(&v255, v107 + 40 * v111 + 32);
  }
  while (v106 != 3);
  sub_1C151716C();
  uint64_t v112 = swift_allocObject();
  uint64_t v113 = (void *)v112;
  *(_OWORD *)(v112 + 16) = v236;
  if (qword_1EA194728 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v248)(v249, v253, v251);
  v244(v246, v98, v247);
  swift_retain();
  id v114 = v245;
  uint64_t v115 = sub_1C151713C();
  unint64_t v116 = v250;
  v113[7] = v114;
  v113[8] = v116;
  v113[4] = v115;
  sub_1C151716C();
  uint64_t v117 = swift_allocObject();
  *(_OWORD *)(v117 + 16) = xmmword_1C15445C0;
  sub_1C0C7BDFC(0, (unint64_t *)&unk_1EA1A53F0, (uint64_t (*)(void))sub_1C05E6D18, (uint64_t)&type metadata for DebugFormatTestScope, MEMORY[0x1E4FAB3C0]);
  uint64_t v119 = v118;
  if (qword_1EA1946E0 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v203 + 104))(v205, v98, v204);
  sub_1C0A93150();
  swift_retain();
  uint64_t v120 = sub_1C151712C();
  *(void *)(v117 + 56) = v119;
  *(void *)(v117 + 64) = sub_1C0C7BAA0();
  *(void *)(v117 + 32) = v120;
  sub_1C0C7BDFC(0, &qword_1EA1A5408, (uint64_t (*)(void))sub_1C05E6C70, (uint64_t)&type metadata for DebugFormatTestRun, MEMORY[0x1E4FAB3C0]);
  uint64_t v122 = v121;
  if (qword_1EA1946C8 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v206 + 104))(v208, v98, v207);
  sub_1C0C7BB30();
  swift_retain();
  uint64_t v123 = sub_1C151712C();
  *(void *)(v117 + 96) = v122;
  *(void *)(v117 + 104) = sub_1C0C7BB84();
  *(void *)(v117 + 72) = v123;
  sub_1C0C7BDFC(0, (unint64_t *)&unk_1EA1A5420, (uint64_t (*)(void))sub_1C05E6B5C, (uint64_t)&type metadata for DebugFormatTestSubject, MEMORY[0x1E4FAB3C0]);
  uint64_t v125 = v124;
  if (qword_1EA1946E8 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v212 + 104))(v214, v98, v213);
  sub_1C015F328();
  swift_retain();
  uint64_t v126 = sub_1C151712C();
  *(void *)(v117 + 136) = v125;
  *(void *)(v117 + 144) = sub_1C0C7BC14();
  *(void *)(v117 + 112) = v126;
  sub_1C0C7BD28(0, &qword_1EA1A5438, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAB4A0], MEMORY[0x1E4FAB3C0]);
  uint64_t v128 = v127;
  if (qword_1EA1946C0 != -1) {
    swift_once();
  }
  uint64_t v129 = v253;
  ((void (*)(char *, void, uint64_t))v248)(v249, v253, v251);
  (*(void (**)(char *, uint64_t, uint64_t))(v215 + 104))(v217, v98, v216);
  swift_retain();
  uint64_t v130 = sub_1C151713C();
  *(void *)(v117 + 176) = v128;
  *(void *)(v117 + 184) = sub_1C0C7BCA4();
  *(void *)(v117 + 152) = v130;
  sub_1C0C7BD28(0, &qword_1EA1A5448, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAB478], MEMORY[0x1E4FAB3C0]);
  uint64_t v132 = v131;
  if (qword_1EA1946D8 != -1) {
    swift_once();
  }
  uint64_t v133 = v220;
  *uint64_t v220 = 1028443341;
  (*(void (**)(_DWORD *, void, uint64_t))(v218 + 104))(v133, *MEMORY[0x1E4FAB3A0], v219);
  (*(void (**)(char *, uint64_t, uint64_t))(v221 + 104))(v222, v101, v223);
  swift_retain();
  uint64_t v134 = sub_1C15170FC();
  *(void *)(v117 + 216) = v132;
  *(void *)(v117 + 224) = sub_1C0C7BD78();
  *(void *)(v117 + 192) = v134;
  uint64_t v135 = v247;
  if (qword_1EA1946D0 != -1) {
    swift_once();
  }
  ((void (*)(char *, uint64_t, uint64_t))v248)(v249, v129, v251);
  v244(v246, v101, v135);
  swift_retain();
  unsigned __int8 v136 = v245;
  uint64_t v137 = sub_1C151713C();
  *(void *)(v117 + 256) = v136;
  *(void *)(v117 + 264) = v116;
  *(void *)(v117 + 232) = v137;
  sub_1C151716C();
  uint64_t v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = xmmword_1C152FC70;
  uint64_t v139 = v210;
  uint64_t v140 = swift_allocObject();
  long long v241 = xmmword_1C1527210;
  *(_OWORD *)(v140 + 16) = xmmword_1C1527210;
  uint64_t v243 = (char *)v140;
  uint64_t v141 = v140 + v139;
  uint64_t v142 = swift_allocObject();
  *(_OWORD *)(v142 + 16) = v236;
  sub_1C0C7BDFC(0, &qword_1EA1A5458, (uint64_t (*)(void))sub_1C05E6F18, (uint64_t)&type metadata for DebugFormatBackgroundColor, MEMORY[0x1E4FAB3C0]);
  uint64_t v144 = v143;
  if (qword_1EA194670 != -1) {
    swift_once();
  }
  uint64_t v242 = (uint64_t *)(v138 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v224 + 104))(v226, v101, v225);
  sub_1C0C7BE64();
  swift_retain();
  uint64_t v145 = sub_1C151712C();
  *(void *)(v142 + 56) = v144;
  *(void *)(v142 + 64) = sub_1C0C7BEB8();
  *(void *)(v142 + 32) = v145;
  sub_1C151716C();
  *(void *)&long long v236 = v141 + v240;
  uint64_t v146 = swift_allocObject();
  *(_OWORD *)(v146 + 16) = v241;
  if (qword_1EA194678 != -1) {
    swift_once();
  }
  id v147 = v235;
  uint64_t v148 = v237;
  id v149 = v232;
  v232(v235, v101, v237);
  swift_retain();
  uint64_t v150 = v233;
  uint64_t v151 = sub_1C151710C();
  unint64_t v152 = v231;
  *(void *)(v146 + 56) = v150;
  *(void *)(v146 + 64) = v152;
  *(void *)(v146 + 32) = v151;
  if (qword_1EA194680 != -1) {
    swift_once();
  }
  v149(v147, v101, v148);
  swift_retain();
  uint64_t v153 = sub_1C151710C();
  *(void *)(v146 + 96) = v150;
  *(void *)(v146 + 104) = v152;
  *(void *)(v146 + 72) = v153;
  sub_1C151716C();
  uint64_t v154 = sub_1C151715C();
  uint64_t v155 = MEMORY[0x1E4FAB3D0];
  *(void *)(v138 + 56) = v154;
  *(void *)(v138 + 64) = v155;
  __swift_allocate_boxed_opaque_existential_0(v242);
  sub_1C151714C();
  if (qword_1EA194540 != -1) {
    swift_once();
  }
  id v157 = v248;
  uint64_t v156 = v249;
  uint64_t v158 = v251;
  ((void (*)(char *, void, uint64_t))v248)(v249, v253, v251);
  id v159 = v246;
  uint64_t v160 = v247;
  id v161 = v244;
  v244(v246, v101, v247);
  swift_retain();
  long long v162 = v245;
  uint64_t v163 = sub_1C151713C();
  unint64_t v164 = v250;
  *(void *)(v138 + 96) = v162;
  *(void *)(v138 + 104) = v164;
  *(void *)(v138 + 72) = v163;
  if (qword_1EA194530 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v157)(v156, v253, v158);
  v161(v159, v101, v160);
  swift_retain();
  uint64_t v165 = sub_1C151713C();
  unint64_t v166 = v250;
  *(void *)(v138 + 136) = v162;
  *(void *)(v138 + 144) = v166;
  *(void *)(v138 + 112) = v165;
  if (qword_1EA1945E8 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v157)(v156, v253, v158);
  v161(v159, v101, v160);
  swift_retain();
  uint64_t v167 = sub_1C151713C();
  unint64_t v168 = v250;
  *(void *)(v138 + 176) = v162;
  *(void *)(v138 + 184) = v168;
  *(void *)(v138 + 152) = v167;
  if (qword_1EA1945F0 != -1) {
    swift_once();
  }
  uint64_t v243 = (char *)(v239 + 8 * v240);
  ((void (*)(char *, void, uint64_t))v157)(v156, v253, v158);
  v161(v159, v101, v160);
  swift_retain();
  uint64_t v169 = sub_1C151713C();
  unint64_t v170 = v250;
  *(void *)(v138 + 216) = v162;
  *(void *)(v138 + 224) = v170;
  *(void *)(v138 + 192) = v169;
  if (qword_1EA194558 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v157)(v156, v253, v158);
  v161(v159, v101, v160);
  swift_retain();
  uint64_t v171 = sub_1C151713C();
  unint64_t v172 = v250;
  *(void *)(v138 + 256) = v162;
  *(void *)(v138 + 264) = v172;
  *(void *)(v138 + 232) = v171;
  if (qword_1EA194548 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v157)(v156, v253, v158);
  v161(v159, v101, v160);
  swift_retain();
  uint64_t v173 = sub_1C151713C();
  unint64_t v174 = v250;
  *(void *)(v138 + 296) = v162;
  *(void *)(v138 + 304) = v174;
  *(void *)(v138 + 272) = v173;
  sub_1C151716C();
  uint64_t v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = xmmword_1C152C7E0;
  sub_1C0C7BF48(0);
  uint64_t v177 = v176;
  uint64_t v178 = v101;
  if (qword_1EA1946A0 != -1) {
    swift_once();
  }
  id v179 = *(void (**)(char *, uint64_t, uint64_t))(v228 + 104);
  id v180 = v229;
  uint64_t v181 = v230;
  v179(v229, v178, v230);
  sub_1C0C7C56C(&qword_1EA1A5478, 255, MEMORY[0x1E4FAB298]);
  LODWORD(v254) = v178;
  swift_retain();
  uint64_t v182 = sub_1C151712C();
  *(void *)(v175 + 56) = v177;
  uint64_t v183 = sub_1C0C7C56C((unint64_t *)&unk_1EA1A5480, 255, sub_1C0C7BF48);
  *(void *)(v175 + 64) = v183;
  *(void *)(v175 + 32) = v182;
  if (qword_1EA1946A8 != -1) {
    swift_once();
  }
  uint64_t v184 = 9 * v240;
  v179(v180, v254, v181);
  swift_retain();
  uint64_t v185 = sub_1C151712C();
  *(void *)(v175 + 96) = v177;
  *(void *)(v175 + 104) = v183;
  *(void *)(v175 + 72) = v185;
  if (qword_1EA1946B0 != -1) {
    swift_once();
  }
  uint64_t v253 = (char *)(v239 + v184);
  v179(v180, v254, v181);
  swift_retain();
  uint64_t v186 = sub_1C151712C();
  *(void *)(v175 + 136) = v177;
  *(void *)(v175 + 144) = v183;
  *(void *)(v175 + 112) = v186;
  if (qword_1EA1946B8 != -1) {
    swift_once();
  }
  v179(v180, v254, v181);
  swift_retain();
  uint64_t v187 = sub_1C151712C();
  *(void *)(v175 + 176) = v177;
  *(void *)(v175 + 184) = v183;
  *(void *)(v175 + 152) = v187;
  if (qword_1EB85F268 != -1) {
    swift_once();
  }
  v179(v180, v254, v181);
  swift_retain();
  uint64_t v188 = sub_1C151712C();
  *(void *)(v175 + 216) = v177;
  *(void *)(v175 + 224) = v183;
  *(void *)(v175 + 192) = v188;
  sub_1C151716C();
  uint64_t v189 = sub_1C151B38C();
  swift_allocObject();
  uint64_t v190 = sub_1C151B37C();
  uint64_t v256 = v189;
  unint64_t v257 = MEMORY[0x1E4FAC6C0];
  *(void *)&long long v255 = v190;
  id v191 = objc_allocWithZone((Class)sub_1C151B81C());
  uint64_t v192 = (void *)sub_1C151B80C();
  id v193 = objc_msgSend(objc_allocWithZone((Class)sub_1C151C02C()), sel_initWithRootViewController_, v192);

  objc_msgSend(v193, sel_setModalPresentationStyle_, 2);
  uint64_t v194 = (void *)sub_1C151F47C();
  if (v194)
  {
    unint64_t v195 = v194;
    objc_msgSend(v194, sel_presentViewController_animated_completion_, v193, 1, 0);
  }
}

void sub_1C0C75710(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    swift_retain();

    swift_retain();
    swift_release();
    sub_1C1017054();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1C18C9C60](v2);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_1C0C757E4()
{
  id v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1
    || ((uint64_t v2 = v1,
         id v3 = objc_msgSend(v1, sel_traitCollection),
         v2,
         id v4 = objc_msgSend(v3, sel_horizontalSizeClass),
         v3,
         v4)
      ? (BOOL v5 = v4 == (id)2)
      : (BOOL v5 = 1),
        v5))
  {
    id v6 = objc_msgSend(v0, sel_splitViewController);
    if (!v6) {
      return;
    }
    id v12 = v6;
    objc_msgSend(v6, sel_togglePrimaryViewVisibilityAnimated_, 1);
  }
  else
  {
    if (v4 != (id)1) {
      return;
    }
    id v7 = objc_msgSend(v0, sel_splitViewController);
    if (!v7) {
      return;
    }
    id v12 = v7;
    type metadata accessor for DebugFormatMainViewController();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = *(void **)(v8 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryContainerController);
      objc_msgSend(v9, sel_setModalPresentationStyle_, 0);
      uint64_t v10 = (void *)sub_1C151F47C();
      if (v10)
      {
        uint64_t v11 = v10;
        objc_msgSend(v10, sel_presentViewController_animated_completion_, v9, 1, 0);
      }
    }
  }
}

uint64_t sub_1C0C75998()
{
  swift_retain();
  sub_1C151709C();
  uint64_t result = swift_release();
  if (v1 <= 2)
  {
    swift_retain();
    sub_1C15170AC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C75A7C()
{
  swift_retain();
  sub_1C151709C();
  uint64_t result = swift_release();
  if (v1 <= 1)
  {
    swift_retain();
    sub_1C15170AC();
    return swift_release();
  }
  return result;
}

void sub_1C0C75B60(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  id v4 = (objc_class *)type metadata accessor for DebugFormatDeviceViewController();
  BOOL v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDeviceViewController_tableView;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  swift_retain();
  uint64_t v8 = v5;
  *(void *)&v5[v6] = objc_msgSend(v7, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatDeviceViewController_filteredDevices] = MEMORY[0x1E4FBC860];
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed31DebugFormatDeviceViewController_editor] = v3;
  swift_retain();

  v15.receiver = v8;
  v15.super_class = v4;
  id v9 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
  swift_release();
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v9);
  objc_msgSend(v10, sel_setModalPresentationStyle_, 7);
  id v11 = objc_msgSend(v10, sel_popoverPresentationController);
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v11, sel_setBarButtonItem_, a1);
  }
  uint64_t v13 = (void *)sub_1C151F47C();
  if (v13)
  {
    uint64_t v14 = v13;
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v10, 1, 0);
  }
}

void sub_1C0C75D60(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for DebugFormatAccessibilityViewController());
  uint64_t v3 = swift_retain();
  id v9 = sub_1C109AB40(v3);
  swift_release();
  id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v9);
  objc_msgSend(v4, sel_setModalPresentationStyle_, 7);
  id v5 = objc_msgSend(v4, sel_popoverPresentationController);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_setBarButtonItem_, a1);
  }
  id v7 = (void *)sub_1C151F47C();
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_presentViewController_animated_completion_, v4, 1, 0);
  }
}

void sub_1C0C75F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_sharedApplication);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1C005A48C;
  *(void *)(v7 + 24) = v4;
  uint64_t v9[4] = sub_1BFC81770;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1BFC9FC68;
  uint64_t v9[3] = &block_descriptor_40;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  objc_msgSend(v6, sel_ts_installCACommitCompletionBlock_, v8);
  _Block_release(v8);
}

void sub_1C0C76234(void *a1)
{
  uint64_t v2 = v1;
  swift_retain();
  sub_1C151894C();
  swift_release();
  swift_retain();
  sub_1C151895C();
  swift_release();
  swift_retain();
  sub_1C151894C();
  swift_release();
  if (v12 == 1)
  {
    uint64_t v4 = (void *)sub_1C151E5EC();
    id v5 = objc_msgSend(self, sel_systemImageNamed_, v4);

    objc_msgSend(a1, sel_setImage_, v5);
    sub_1C14C62E8(*(void **)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView), *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView));
    uint64_t v6 = sub_1C151F47C();
    if (!v6) {
      return;
    }
    uint64_t v7 = (void *)v6;
  }
  else
  {
    uint64_t v8 = (void *)sub_1C151E5EC();
    id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

    objc_msgSend(a1, sel_setImage_, v9);
    sub_1C14C65E4(*(void **)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView));
    uint64_t v10 = sub_1C151F47C();
    if (!v10) {
      return;
    }
    uint64_t v7 = (void *)v10;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  swift_bridgeObjectRetain();
  id v11 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setToolbarItems_, v11);
}

uint64_t sub_1C0C76508()
{
  return swift_release();
}

uint64_t sub_1C0C76614()
{
  swift_retain();
  sub_1C151709C();
  swift_release();
  uint64_t v0 = sub_1C10F65B8(v4);
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v1 = sub_1C0453EF0((v3 & 1) == 0, v0);
  uint64_t result = swift_bridgeObjectRelease();
  if (v1)
  {
    swift_retain();
    sub_1C151709C();
    swift_release();
    swift_retain();
    sub_1C15170AC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C76758()
{
  uint64_t v1 = v0;
  sub_1C0C7A1C8(0, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned __int8 v4 = &v11[-v3];
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_debugger;
  swift_retain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  swift_release();
  uint64_t v7 = type metadata accessor for FormatDebuggerContext();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1C151894C();
    swift_release();
    swift_release();
    uint64_t v8 = *(void *)(v12[0] + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v8)
    {
      memcpy(v12, (const void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v12));
      memcpy(v11, (const void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages), sizeof(v11));
      uint64_t v10 = *(void *)(v5 + v6);
      sub_1C09C3F4C((uint64_t)v12);
      swift_retain();
      sub_1C0C6EF14(v11, v10);
      swift_release();
      swift_release();
      return sub_1C09C51F8((uint64_t)v12);
    }
  }
  else
  {
    swift_retain();
    sub_1C101711C();
    swift_release();
    return sub_1C0C7C008((uint64_t)v4, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
  return result;
}

uint64_t sub_1C0C76A70(uint64_t a1)
{
  sub_1C0C7A1C8(0, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_debugger;
  swift_retain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  swift_release();
  uint64_t v8 = type metadata accessor for FormatDebuggerContext();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8);
  if (result != 1)
  {
    uint64_t v10 = *(void *)(v6 + v7);
    swift_retain();
    sub_1C1517E7C();
    if (*(void *)(v10 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) == 1)
    {
      *(void *)(v10 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_count) = 0;
      uint64_t v11 = v10 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_breakExecutionState;
      *(void *)uint64_t v11 = a1;
      *(unsigned char *)(v11 + 8) = 2;
      sub_1C1517E8C();
      sub_1C151F65C();
    }
    else
    {
      sub_1C1517E8C();
    }
    swift_release();
    return sub_1C0C7C008((uint64_t)v5, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
  return result;
}

uint64_t sub_1C0C76C80(void (*a1)(uint64_t))
{
  sub_1C0C7A1C8(0, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  swift_retain();
  swift_retain();
  sub_1C151894C();
  swift_release();
  swift_release();
  uint64_t v5 = type metadata accessor for FormatDebuggerContext();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result != 1)
  {
    uint64_t v7 = swift_retain();
    a1(v7);
    swift_release();
    return sub_1C0C7C008((uint64_t)v4, &qword_1EA1A5280, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  }
  return result;
}

uint64_t sub_1C0C76E50()
{
  swift_retain();
  sub_1C151709C();
  uint64_t result = swift_release();
  if (!v1)
  {
    swift_retain();
    sub_1C15170AC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C76ED8()
{
  swift_retain();
  sub_1C151894C();
  swift_release();
  sub_1C09CFC44((uint64_t)v10, (uint64_t)v16);
  sub_1C09CFC44((uint64_t)v16, (uint64_t)v17);
  uint64_t result = sub_1C0263AB8((uint64_t)v17);
  if (result != 1)
  {
    uint64_t v1 = v11;
    uint64_t v2 = v12;
    uint64_t v3 = v13;
    uint64_t v4 = v14;
    uint64_t v5 = v15;
    sub_1C09CFC44((uint64_t)v10, (uint64_t)v9);
    sub_1C09C87E4(v1, v2, v3, v4, v5);
    uint64_t result = (uint64_t)sub_1C0C7C270(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
    if (v2)
    {
      sub_1C017F270(v1, v2, v3, v4, v5);
      LOBYTE(v8[0]) = 0;
      swift_retain();
      sub_1C151895C();
      swift_release();
      sub_1C017F2B4(v8);
      sub_1C09CFC44((uint64_t)v8, (uint64_t)v6);
      swift_retain();
      sub_1C151895C();
      swift_release();
      uint64_t v7 = 0;
      memset(v6, 0, sizeof(v6));
      swift_retain();
      sub_1C151895C();
      swift_release();
      *(void *)&v6[0] = MEMORY[0x1E4FBC860];
      swift_retain();
      sub_1C151895C();
      return swift_release();
    }
  }
  return result;
}

id sub_1C0C7708C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v97 = a4;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0C7A1C8(0, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  long long v96 = (char *)v87 - v13;
  sub_1C0C7A1C8(0, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700], v11);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v95 = (uint64_t)v87 - v15;
  uint64_t v16 = sub_1C151757C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C0C7925C(a1, a2, a3);
  swift_bridgeObjectRelease();
  if (v20)
  {
    uint64_t v91 = 0;
    uint64_t v89 = a6;
    uint64_t v94 = a5;
    uint64_t v21 = (uint64_t *)(*(void *)(v20 + 16) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
    swift_beginAccess();
    uint64_t v22 = v16;
    uint64_t v23 = *v21;
    uint64_t v24 = v21[1];
    uint64_t v25 = v21[2];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C0C673D4();
    uint64_t v26 = v20;
    uint64_t v27 = sub_1C151754C();
    uint64_t v90 = (void (**)(uint64_t, void, uint64_t, uint64_t))v17;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v93 = v22;
    v28(v19, v22);
    *(void *)id v108 = v23;
    *(void *)&v108[8] = v24;
    *(void *)&v108[16] = v25;
    uint64_t v29 = FormatGroupCollection.subscript.getter(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29)
    {
      uint64_t v88 = v26;
      uint64_t v30 = (char *)v92;
      uint64_t v31 = v91;
      uint64_t v32 = sub_1C0C7938C(v29, v30);
      swift_bridgeObjectRelease();

      uint64_t v33 = *(void *)(v32 + 16);
      a6 = v89;
      if (v33)
      {
        v87[0] = v32 + 32;
        v87[1] = v31;
        uint64_t v91 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView;
        id v92 = (id)OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor;
        swift_bridgeObjectRetain();
        long long v34 = *(_OWORD *)(v32 + 128);
        long long v104 = *(_OWORD *)(v32 + 112);
        long long v105 = v34;
        long long v35 = *(_OWORD *)(v32 + 160);
        long long v106 = *(_OWORD *)(v32 + 144);
        long long v107 = v35;
        long long v36 = *(_OWORD *)(v32 + 48);
        long long v37 = *(_OWORD *)(v32 + 80);
        long long v38 = *(_OWORD *)(v32 + 96);
        long long v101 = *(_OWORD *)(v32 + 64);
        long long v102 = v37;
        long long v103 = v38;
        long long v39 = *(_OWORD *)(v32 + 32);
        v90 += 7;
        uint64_t v40 = v33 - 1;
        uint64_t v41 = 176;
        long long v99 = v39;
        long long v100 = v36;
        uint64_t v42 = v94;
        while (1)
        {
          BOOL v43 = (void)v99 == v97 && *((void *)&v99 + 1) == v42;
          if (v43 || (sub_1C1520A9C() & 1) != 0)
          {
            *(_OWORD *)&v108[96] = v105;
            *(_OWORD *)&v108[112] = v106;
            *(_OWORD *)&v108[128] = v107;
            *(_OWORD *)&v108[32] = v101;
            *(_OWORD *)&v108[48] = v102;
            *(_OWORD *)&v108[64] = v103;
            *(_OWORD *)&v108[80] = v104;
            *(_OWORD *)id v108 = v99;
            *(_OWORD *)&v108[16] = v100;
            sub_1C0187D08((uint64_t)&v99);
            sub_1C0187D08((uint64_t)&v99);
            swift_retain();
            sub_1C151709C();
            swift_release();
            unsigned __int8 v44 = v98[0];
            id result = objc_msgSend(v30, sel_view);
            if (!result)
            {
              __break(1u);
              return result;
            }
            uint64_t v46 = result;
            uint64_t v47 = *(void **)&v30[v91];
            sub_1C151F32C();
            double v49 = v48;
            objc_msgSend(v47, sel_safeAreaInsets);
            uint64_t v50 = v95;
            sub_1C10F61A0(v46, v44, v95, v49, v51, v52, v53, v54);

            uint64_t v55 = sub_1C151772C();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v50, 0, 1, v55);
            uint64_t v56 = (uint64_t)v96;
            sub_1C0C673D4();
            (*v90)(v56, 0, 1, v93);
            uint64_t v57 = sub_1C01A073C(v108, v50, v56);
            uint64_t v60 = v57;
            uint64_t v61 = v58;
            if (v59 >= 2u)
            {
              if (!(v57 ^ 1 | v58))
              {
LABEL_31:
                uint64_t v85 = v88;
                swift_release();
                swift_bridgeObjectRelease_n();
                *(_OWORD *)&v108[88] = v104;
                *(_OWORD *)&v108[104] = v105;
                *(_OWORD *)&v108[120] = v106;
                *(_OWORD *)&v108[136] = v107;
                *(_OWORD *)&v108[24] = v100;
                *(_OWORD *)&v108[40] = v101;
                *(_OWORD *)&v108[56] = v102;
                *(_OWORD *)&v108[72] = v103;
                *(_OWORD *)&v108[8] = v99;
                *(void *)id v108 = v85;
                nullsub_1();
                uint64_t v84 = v89;
                return (id)sub_1C0C7A22C((uint64_t)v108, v84, (uint64_t (*)(void))sub_1C0C7A294);
              }
            }
            else
            {
              unsigned __int8 v62 = v59;
              swift_retain();
              sub_1C151709C();
              swift_release();
              sub_1BFDCA350(v60, v61, v62);
              if ((v108[0] & 1) == 0) {
                goto LABEL_31;
              }
            }
            sub_1C0187DF4((uint64_t)&v99);
            uint64_t v42 = v94;
          }
          if (!v40) {
            break;
          }
          long long v99 = *(_OWORD *)(v32 + v41);
          long long v63 = *(_OWORD *)(v32 + v41 + 16);
          long long v64 = *(_OWORD *)(v32 + v41 + 32);
          long long v65 = *(_OWORD *)(v32 + v41 + 64);
          long long v102 = *(_OWORD *)(v32 + v41 + 48);
          long long v103 = v65;
          long long v100 = v63;
          long long v101 = v64;
          long long v66 = *(_OWORD *)(v32 + v41 + 80);
          long long v67 = *(_OWORD *)(v32 + v41 + 96);
          long long v68 = *(_OWORD *)(v32 + v41 + 128);
          long long v106 = *(_OWORD *)(v32 + v41 + 112);
          long long v107 = v68;
          long long v104 = v66;
          long long v105 = v67;
          v41 += 144;
          --v40;
        }
        swift_bridgeObjectRelease();
        uint64_t v69 = *(void *)(v32 + 16);
        a6 = v89;
        if (!v69) {
          goto LABEL_26;
        }
        swift_bridgeObjectRetain();
        long long v70 = *(_OWORD *)(v87[0] + 96);
        long long v104 = *(_OWORD *)(v87[0] + 80);
        long long v105 = v70;
        long long v71 = *(_OWORD *)(v87[0] + 128);
        long long v106 = *(_OWORD *)(v87[0] + 112);
        long long v107 = v71;
        long long v72 = *(_OWORD *)(v87[0] + 16);
        long long v73 = *(_OWORD *)(v87[0] + 48);
        long long v74 = *(_OWORD *)(v87[0] + 64);
        long long v101 = *(_OWORD *)(v87[0] + 32);
        long long v102 = v73;
        long long v103 = v74;
        long long v99 = *(_OWORD *)v87[0];
        long long v100 = v72;
        uint64_t v75 = 176;
        uint64_t v76 = 1;
        while (1)
        {
          v98[6] = v105;
          v98[7] = v106;
          v98[8] = v107;
          v98[2] = v101;
          v98[3] = v102;
          v98[4] = v103;
          v98[5] = v104;
          v98[0] = v99;
          v98[1] = v100;
          sub_1C0187D08((uint64_t)&v99);
          if (sub_1C0C78414(v98, v30))
          {
            uint64_t v86 = v88;
            swift_release();
            swift_bridgeObjectRelease_n();
            *(_OWORD *)&v108[88] = v104;
            *(_OWORD *)&v108[104] = v105;
            *(_OWORD *)&v108[120] = v106;
            *(_OWORD *)&v108[136] = v107;
            *(_OWORD *)&v108[24] = v100;
            *(_OWORD *)&v108[40] = v101;
            *(_OWORD *)&v108[56] = v102;
            *(_OWORD *)&v108[72] = v103;
            *(_OWORD *)&v108[8] = v99;
            *(void *)id v108 = v86;
            nullsub_1();
            goto LABEL_29;
          }
          sub_1C0187DF4((uint64_t)&v99);
          if (v69 == v76) {
            break;
          }
          long long v99 = *(_OWORD *)(v32 + v75);
          long long v77 = *(_OWORD *)(v32 + v75 + 16);
          long long v78 = *(_OWORD *)(v32 + v75 + 32);
          long long v79 = *(_OWORD *)(v32 + v75 + 64);
          long long v102 = *(_OWORD *)(v32 + v75 + 48);
          long long v103 = v79;
          long long v100 = v77;
          long long v101 = v78;
          long long v80 = *(_OWORD *)(v32 + v75 + 80);
          long long v81 = *(_OWORD *)(v32 + v75 + 96);
          long long v82 = *(_OWORD *)(v32 + v75 + 128);
          long long v106 = *(_OWORD *)(v32 + v75 + 112);
          long long v107 = v82;
          long long v104 = v80;
          long long v105 = v81;
          v75 += 144;
          if (__OFADD__(v76++, 1))
          {
            __break(1u);
            goto LABEL_26;
          }
        }
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_26:
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_release();
    }
    else
    {
      swift_release_n();
      a6 = v89;
    }
  }
  sub_1C0C7B410((uint64_t)v108);
LABEL_29:
  uint64_t v84 = a6;
  return (id)sub_1C0C7A22C((uint64_t)v108, v84, (uint64_t (*)(void))sub_1C0C7A294);
}

uint64_t sub_1C0C77874(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v2 = &v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages];
  unint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages + 144];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C151709C();
  swift_release();
  swift_retain();
  sub_1C151709C();
  swift_release();
  sub_1C0C7708C(v3, v50, *(uint64_t *)&v51[0], v50, *(uint64_t *)&v51[0], (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0C7A22C((uint64_t)v39, (uint64_t)v49, (uint64_t (*)(void))sub_1C0C7A294);
  sub_1C0C7A22C((uint64_t)v49, (uint64_t)&v50, (uint64_t (*)(void))sub_1C0C7A294);
  if (sub_1C00A0A24(&v50) == 1)
  {
    sub_1C14BBA80();
    sub_1C0C7C36C(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    long long v46 = v51[6];
    long long v47 = v51[7];
    long long v48 = v51[8];
    long long v42 = v51[2];
    long long v43 = v51[3];
    long long v44 = v51[4];
    long long v45 = v51[5];
    long long v40 = v51[0];
    long long v41 = v51[1];
    uint64_t v35 = v50;
    swift_beginAccess();
    swift_retain();
    swift_retain();
    sub_1C151894C();
    swift_release();
    uint64_t v5 = v37;
    unint64_t v38 = MEMORY[0x1E4FBC860];
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = v1;
      swift_bridgeObjectRetain();
      uint64_t v8 = (uint64_t *)(v5 + 40);
      do
      {
        if (*(void *)(*((void *)v2 + 9) + 16))
        {
          uint64_t v10 = *(v8 - 1);
          uint64_t v9 = *v8;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1BFEF2D8C(v10, v9);
          if (v11)
          {
            swift_retain();
            swift_bridgeObjectRelease_n();
            uint64_t v12 = swift_bridgeObjectRelease();
            MEMORY[0x1C18C66D0](v12);
            if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
          }
        }
        v8 += 2;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      unint64_t v13 = v38;
    }
    else
    {
      uint64_t v14 = v1;
      unint64_t v13 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();

    FormatPackageInventory.merging(with:)(v13);
    swift_release();
    uint64_t v15 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v15);
    type metadata accessor for FormatPackageInventory();
    sub_1C151932C();
    uint64_t v16 = (void *)sub_1C151806C();
    uint64_t v17 = swift_allocObject();
    long long v18 = v47;
    *(_OWORD *)(v17 + 112) = v46;
    *(_OWORD *)(v17 + 128) = v18;
    *(_OWORD *)(v17 + 144) = v48;
    long long v19 = v43;
    *(_OWORD *)(v17 + 48) = v42;
    *(_OWORD *)(v17 + 64) = v19;
    long long v20 = v45;
    *(_OWORD *)(v17 + 80) = v44;
    *(_OWORD *)(v17 + 96) = v20;
    long long v21 = v41;
    *(_OWORD *)(v17 + 16) = v40;
    *(_OWORD *)(v17 + 32) = v21;
    *(void *)(v17 + 160) = a1;
    sub_1C0187D08((uint64_t)v51);
    swift_retain();
    sub_1C151900C();
    swift_release();

    swift_release();
    uint64_t v22 = swift_allocObject();
    long long v23 = v44;
    *(_OWORD *)(v22 + 104) = v45;
    long long v24 = v47;
    *(_OWORD *)(v22 + 120) = v46;
    *(_OWORD *)(v22 + 136) = v24;
    *(_OWORD *)(v22 + 152) = v48;
    long long v25 = v40;
    *(_OWORD *)(v22 + 40) = v41;
    long long v26 = v43;
    *(_OWORD *)(v22 + 56) = v42;
    *(_OWORD *)(v22 + 72) = v26;
    *(_OWORD *)(v22 + 88) = v23;
    *(void *)(v22 + 16) = v35;
    *(_OWORD *)(v22 + 24) = v25;
    sub_1C0187D08((uint64_t)v51);
    swift_retain();
    uint64_t v27 = (void *)sub_1C1518E7C();
    sub_1C15190FC();
    swift_release();
    swift_release();

    uint64_t v28 = (_OWORD *)swift_allocObject();
    long long v29 = v47;
    v28[7] = v46;
    v28[8] = v29;
    v28[9] = v48;
    long long v30 = v43;
    v28[3] = v42;
    v28[4] = v30;
    long long v31 = v45;
    v28[5] = v44;
    v28[6] = v31;
    long long v32 = v41;
    v28[1] = v40;
    void v28[2] = v32;
    uint64_t v33 = (void *)sub_1C1518E7C();
    uint64_t v4 = sub_1C151903C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return v4;
}

uint64_t sub_1C0C77E3C(uint64_t a1, char *a2, uint64_t a3, _OWORD *a4, uint64_t a5)
{
  sub_1C0C78150(*(void **)&a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView]);
  swift_beginAccess();
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v7 = v28;
  unint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = &a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages];
    uint64_t v10 = a2;
    swift_bridgeObjectRetain();
    char v11 = (uint64_t *)(v7 + 40);
    do
    {
      if (*(void *)(*((void *)v9 + 9) + 16))
      {
        uint64_t v12 = *(v11 - 1);
        uint64_t v13 = *v11;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BFEF2D8C(v12, v13);
        if (v14)
        {
          swift_retain();
          swift_bridgeObjectRelease_n();
          uint64_t v15 = swift_bridgeObjectRelease();
          MEMORY[0x1C18C66D0](v15);
          if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
      }
      v11 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    unint64_t v16 = v29;
  }
  else
  {
    uint64_t v17 = a2;
    unint64_t v16 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();

  FormatPackageInventory.merging(with:)(v16);
  uint64_t v18 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v18);
  type metadata accessor for FormatPackageInventory();
  sub_1C151932C();
  long long v19 = (void *)sub_1C151806C();
  uint64_t v20 = swift_allocObject();
  long long v21 = a4[7];
  *(_OWORD *)(v20 + 112) = a4[6];
  *(_OWORD *)(v20 + 128) = v21;
  *(_OWORD *)(v20 + 144) = a4[8];
  long long v22 = a4[3];
  *(_OWORD *)(v20 + 48) = a4[2];
  *(_OWORD *)(v20 + 64) = v22;
  long long v23 = a4[5];
  *(_OWORD *)(v20 + 80) = a4[4];
  *(_OWORD *)(v20 + 96) = v23;
  long long v24 = a4[1];
  *(_OWORD *)(v20 + 16) = *a4;
  *(_OWORD *)(v20 + 32) = v24;
  *(void *)(v20 + 160) = a5;
  sub_1C0187D08((uint64_t)a4);
  type metadata accessor for DebugFormatEditorViewController();
  swift_retain();
  uint64_t v25 = sub_1C151900C();
  swift_release();
  swift_release();

  swift_release();
  return v25;
}

id sub_1C0C78150(void *a1)
{
  sub_1C0C6E670(a1);
  sub_1C151BB1C();
  objc_msgSend(a1, sel_bounds);
  CGRectGetHeight(v6);
  objc_msgSend(a1, sel_zoomScale);
  objc_msgSend(a1, sel_contentOffset);
  objc_msgSend(a1, sel_adjustedContentInset);
  objc_msgSend(a1, sel_zoomScale);
  unint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  objc_msgSend(v3, sel_frame);
  sub_1C151F79C();
  objc_msgSend(v3, sel_frame);
  CGRectGetHeight(v7);
  sub_1C151F71C();
  return objc_msgSend(v3, sel_setFrame_);
}

uint64_t sub_1C0C782C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView);
  objc_msgSend(v3, sel_zoomScale);
  if (v4 > 1.0)
  {
    id v5 = objc_retain(*(id *)(*(void *)(a2
                                       + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController)
                           + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView));
    objc_msgSend(v3, sel_zoomScale);
    double v7 = v6;
    uint64_t v8 = self;
    id v9 = objc_msgSend(v8, sel_mainScreen);
    objc_msgSend(v9, sel_scale);
    double v11 = v10;

    sub_1C0FB4CD0(v7 * v11);
    uint64_t v12 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
    objc_msgSend(v3, sel_zoomScale);
    double v14 = v13;
    id v15 = objc_msgSend(v8, sel_mainScreen);
    objc_msgSend(v15, sel_scale);
    double v17 = v16;

    objc_msgSend(v12, sel_setContentScaleFactor_, v14 * v17);
  }
  return sub_1C0C76ED8();
}

id sub_1C0C78414(long long *a1, char *a2)
{
  double v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0C7A1C8(0, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  double v7 = &v39[-v6];
  sub_1C0C7A1C8(0, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700], v4);
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = &v39[-v9];
  long long v11 = a1[6];
  long long v12 = a1[4];
  long long v46 = a1[5];
  long long v47 = v11;
  long long v13 = a1[6];
  long long v14 = a1[8];
  long long v48 = a1[7];
  long long v49 = v14;
  long long v15 = a1[2];
  long long v16 = *a1;
  long long v42 = a1[1];
  long long v43 = v15;
  long long v17 = a1[2];
  long long v18 = a1[4];
  long long v44 = a1[3];
  long long v45 = v18;
  long long v19 = *a1;
  v40[6] = v13;
  v40[7] = v48;
  v40[8] = a1[8];
  long long v41 = v19;
  v40[2] = v17;
  v40[3] = v44;
  v40[4] = v12;
  v40[5] = v46;
  v40[0] = v16;
  v40[1] = v42;
  swift_retain();
  sub_1C0187D08((uint64_t)&v41);
  sub_1C151709C();
  swift_release();
  unsigned __int8 v20 = v39[15];
  id result = objc_msgSend(a2, sel_view);
  if (result)
  {
    long long v22 = result;
    long long v23 = *(void **)&a2[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView];
    sub_1C151F32C();
    double v25 = v24;
    objc_msgSend(v23, sel_safeAreaInsets);
    sub_1C10F61A0(v22, v20, (uint64_t)v10, v25, v26, v27, v28, v29);

    uint64_t v30 = sub_1C151772C();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
    sub_1C0C673D4();
    uint64_t v31 = sub_1C151757C();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v7, 0, 1, v31);
    uint64_t v32 = sub_1C01A073C(v40, (uint64_t)v10, (uint64_t)v7);
    uint64_t v35 = v32;
    uint64_t v36 = v33;
    if (v34 >= 2u)
    {
      char v38 = (v32 ^ 1 | v33) == 0;
    }
    else
    {
      unsigned __int8 v37 = v34;
      swift_retain();
      sub_1C151709C();
      swift_release();
      sub_1BFDCA350(v35, v36, v37);
      char v38 = LOBYTE(v40[0]) ^ 1;
    }
    return (id)(v38 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0C78770(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  type metadata accessor for DebugFormatCanvasLayoutViewResult();
  sub_1C151932C();
  unint64_t v3 = (void *)sub_1C151806C();
  *(void *)(swift_allocObject() + 16) = v2;
  type metadata accessor for DebugFormatCanvasViewController();
  id v4 = v2;
  uint64_t v5 = sub_1C151901C();
  swift_release();

  swift_release();
  return v5;
}

uint64_t sub_1C0C7888C(void *a1)
{
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  sub_1C02306F8(a1, 0, 0, 0, 0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C789D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v6 = sub_1C101B080(a2, (uint64_t)v5);
  sub_1C0C7B0D8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  return v6;
}

uint64_t sub_1C0C78AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView);
  uint64_t v3 = sub_1C0C67824();
  type metadata accessor for DebugFormatCanvasLayoutViewResult();
  sub_1C151932C();
  uint64_t v4 = (void *)sub_1C151806C();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v3;
  type metadata accessor for DebugFormatCanvasViewController();
  id v6 = v2;
  double v7 = v3;
  uint64_t v8 = sub_1C151901C();

  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1C0C78C20(uint64_t a1, uint64_t a2)
{
  return sub_1C0C79C58(a2);
}

void sub_1C0C78C38(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView);
  objc_msgSend(a1, sel_zoomScale);
  *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_scale) = v5;
  sub_1C0658AE4();
  id v6 = sub_1C0C67824();
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView), sel_transform);
  long long v7 = v21;
  long long v8 = v22;
  uint64_t v9 = &v6[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_OWORD *)uint64_t v9 = aBlock;
  *((_OWORD *)v9 + 1) = v7;
  *((_OWORD *)v9 + 2) = v8;
  uint64_t v10 = self;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C0C7B5E8;
  *(void *)(v12 + 24) = v11;
  *(void *)&long long v22 = sub_1C0C7C5B8;
  *((void *)&v22 + 1) = v12;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v21 = sub_1BFC81740;
  *((void *)&v21 + 1) = &block_descriptor_50_0;
  long long v13 = _Block_copy(&aBlock);
  long long v14 = v6;
  swift_retain();
  swift_release();
  objc_msgSend((id)v10, sel_performWithoutAnimation_, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  swift_release();
  if (v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v15 = sub_1C0C678A8();
  objc_msgSend(a1, sel_zoomScale);
  double v17 = v16 * 100.0;
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v17 < 9.22337204e18)
  {
    *(void *)&long long aBlock = sub_1C152088C();
    *((void *)&aBlock + 1) = v18;
    sub_1C151E80C();
    long long v19 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setTitle_, v19);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1C0C79050(uint64_t a1)
{
  uint64_t v2 = sub_1C0C7C56C((unint64_t *)&unk_1EA1A54A0, 255, type metadata accessor for UIUserInterfaceLayoutDirection);
  uint64_t v3 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0C790D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C0C7C56C((unint64_t *)&unk_1EA1A54A0, 255, type metadata accessor for UIUserInterfaceLayoutDirection);
  uint64_t v5 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C0C79168(uint64_t a1)
{
  uint64_t v2 = sub_1C0C7C56C((unint64_t *)&unk_1EA1A54A0, 255, type metadata accessor for UIUserInterfaceLayoutDirection);
  uint64_t v3 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

uint64_t type metadata accessor for DebugFormatEditorViewController()
{
  return self;
}

uint64_t sub_1C0C79214(uint64_t a1, uint64_t a2)
{
  return sub_1C0C7C56C(&qword_1EA1A5238, a2, (void (*)(uint64_t))type metadata accessor for DebugFormatEditorViewController);
}

uint64_t sub_1C0C7925C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x1C18C7CB0](v7 - 4, a1);
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a1 + 8 * v7);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v12 = *(void *)(v9 + 16);
        BOOL v13 = *(void *)(v12 + 16) == a2 && *(void *)(v12 + 24) == a3;
        if (v13 || (sub_1C1520A9C() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0C7938C(uint64_t a1, char *a2)
{
  uint64_t v69 = sub_1C151772C();
  uint64_t v5 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  unint64_t v7 = (unint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1C151759C();
  uint64_t v8 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v56 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1C151757C();
  MEMORY[0x1F4188790](v68);
  long long v67 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (****)(char *, uint64_t))(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = 0;
  uint64_t v66 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor;
  uint64_t v60 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_scrollView;
  unsigned int v65 = *MEMORY[0x1E4FAB6D8];
  long long v64 = (void (**)(char *, void, uint64_t))(v8 + 104);
  uint64_t v61 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  unsigned __int8 v62 = (void (**)(char *, uint64_t))(v8 + 8);
  unsigned __int8 v59 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v14 = a1 + 32;
  double v54 = (void (***)(char *, uint64_t))((char *)v12 - 1);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v58 = a2;
  long long v63 = v12;
  uint64_t v55 = v14;
  do
  {
    uint64_t v57 = v15;
    if (v13 <= (unint64_t)v12) {
      double v16 = v12;
    }
    else {
      double v16 = (void (***)(char *, uint64_t))v13;
    }
    long long v70 = v16;
    double v17 = (long long *)(v14 + 144 * v13);
    uint64_t v18 = (void (***)(char *, uint64_t))v13;
    long long v19 = v56;
    while (1)
    {
      unsigned __int8 v20 = v70;
      if (v70 == v18)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        (**(v20 - 32))((char *)v7, v69);
        (*v62)(v19, v84);
        uint64_t result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      long long v71 = v18;
      uint64_t v21 = v7;
      long long v22 = v17[7];
      long long v79 = v17[6];
      long long v80 = v22;
      long long v81 = v17[8];
      long long v23 = v17[3];
      long long v75 = v17[2];
      long long v76 = v23;
      long long v24 = v17[5];
      long long v77 = v17[4];
      long long v78 = v24;
      long long v25 = *v17;
      long long v74 = v17[1];
      long long v73 = v25;
      uint64_t v26 = *((void *)&v76 + 1);
      (*v64)(v19, v65, v84);
      double v27 = v19;
      long long v19 = *(char **)&a2[v66];
      swift_retain();
      sub_1C0187D08((uint64_t)&v73);
      swift_bridgeObjectRetain();
      sub_1C151709C();
      swift_release();
      unint64_t v7 = v72;
      id v28 = objc_msgSend(a2, sel_view);
      if (!v28) {
        goto LABEL_22;
      }
      double v29 = a2;
      uint64_t v30 = v28;
      uint64_t v31 = *(void **)&v29[v60];
      sub_1C151F32C();
      double v33 = v32;
      objc_msgSend(v31, sel_safeAreaInsets);
      unsigned __int8 v34 = v7;
      unint64_t v7 = v21;
      sub_1C10F61A0(v30, v34, v21, v33, v35, v36, v37, v38);

      long long v39 = v67;
      sub_1C151758C();
      long long v19 = v27;
      unsigned __int8 v20 = (void (***)(char *, uint64_t))&v83;
      if (v2) {
        goto LABEL_23;
      }
      (*v61)(v21, v69);
      (*v62)(v27, v84);
      uint64_t v40 = sub_1C151754C();
      (*v59)(v39, v68);
      LOBYTE(v40) = sub_1BFFC399C(v40, v26);
      swift_bridgeObjectRelease();
      uint64_t v12 = v63;
      if (v40) {
        break;
      }
      uint64_t v18 = (void (***)(char *, uint64_t))((char *)v71 + 1);
      sub_1C0187DF4((uint64_t)&v73);
      v17 += 9;
      a2 = v58;
      if (v12 == v18) {
        return v57;
      }
    }
    uint64_t v15 = v57;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v82 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BFEAFBDC(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v82;
    }
    uint64_t v14 = v55;
    unint64_t v43 = *(void *)(v15 + 16);
    unint64_t v42 = *(void *)(v15 + 24);
    if (v43 >= v42 >> 1)
    {
      sub_1BFEAFBDC(v42 > 1, v43 + 1, 1);
      uint64_t v15 = v82;
    }
    long long v44 = v71;
    unint64_t v13 = (unint64_t)v71 + 1;
    *(void *)(v15 + 16) = v43 + 1;
    long long v45 = (_OWORD *)(v15 + 144 * v43);
    v45[2] = v73;
    long long v46 = v74;
    long long v47 = v75;
    long long v48 = v77;
    v45[5] = v76;
    v45[6] = v48;
    v45[3] = v46;
    v45[4] = v47;
    long long v49 = v78;
    long long v50 = v79;
    long long v51 = v81;
    long long v45[9] = v80;
    v45[10] = v51;
    v45[7] = v49;
    v45[8] = v50;
    a2 = v58;
  }
  while (v54 != v44);
  return v15;
}

void sub_1C0C799F0()
{
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_packages;
  if (qword_1EA194C50 != -1) {
    swift_once();
  }
  memcpy(__dst, &byte_1EA2B5418, 0x150uLL);
  memmove(&v0[v1], &byte_1EA2B5418, 0x150uLL);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_rulerView;
  id v3 = objc_allocWithZone((Class)type metadata accessor for DebugFormatRulerView());
  sub_1C09C3F4C((uint64_t)__dst);
  *(void *)&v0[v2] = objc_msgSend(v3, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___overlayView] = 0;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatSnapshotCanvasView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___zoomBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___rotateDeviceCanvasBarButtonItem] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)&v0[v6] = v7;
  uint64_t v8 = &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_lastLayoutBounds];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___editorPathView] = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editorToolbarItems] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_debuggerToolbarItems] = v9;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerRunBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerNextBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepInBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOverBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___debuggerStepOutBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___snapshotBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController____lazy_storage___sourceMetricsBarButtonItem] = 0;

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0C79C58(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C0C7A1C8(0, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *(_OWORD *)(a1 + 144);
  long long v67 = *(_OWORD *)(a1 + 128);
  long long v68 = v14;
  uint64_t v15 = *(void *)(a1 + 168);
  uint64_t v69 = *(void *)(a1 + 160);
  long long v16 = *(_OWORD *)(a1 + 80);
  long long v63 = *(_OWORD *)(a1 + 64);
  long long v64 = v16;
  long long v17 = *(_OWORD *)(a1 + 112);
  long long v65 = *(_OWORD *)(a1 + 96);
  long long v66 = v17;
  long long v18 = *(_OWORD *)(a1 + 16);
  long long v59 = *(_OWORD *)a1;
  long long v60 = v18;
  long long v19 = *(_OWORD *)(a1 + 48);
  long long v61 = *(_OWORD *)(a1 + 32);
  long long v62 = v19;
  uint64_t v21 = *(void *)(a1 + 176);
  uint64_t v20 = *(void *)(a1 + 184);
  int v22 = *(unsigned __int8 *)(a1 + 192);
  uint64_t v40 = v15;
  uint64_t v41 = v20;
  int v39 = v22;
  uint64_t v38 = v21;
  if (v21) {
    uint64_t v23 = swift_bridgeObjectRetain();
  }
  else {
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v44 = v23;
  swift_retain();
  sub_1C151895C();
  swift_release();
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v24 = *(void *)(v44 + 16);
  if (!v24)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  long long v25 = (uint64_t *)(v44 + 32 * v24);
  uint64_t v26 = v25[1];
  uint64_t v36 = *v25;
  uint64_t v37 = v2;
  uint64_t v27 = v25[2];
  uint64_t v34 = v25[3];
  uint64_t v35 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C151894C();
  swift_release();
  if (!(void)v44)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1C0C7C008((uint64_t)v9, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_17;
  }
  uint64_t v28 = *(void *)(v44 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v28 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1BFEF2D8C(v36, v26);
    if (v30)
    {
      sub_1C0C7A164(*(void *)(v28 + 56) + *(void *)(v11 + 72) * v29, (uint64_t)v9);
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v31(v9, 0, 1, v10);
    }
    else
    {
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v31(v9, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v31(v9, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    goto LABEL_15;
  }
  sub_1C0C7A22C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  sub_1C0C7A164((uint64_t)v13, (uint64_t)v6);
  v31(v6, 0, 1, v10);
  v42[0] = v36;
  v42[1] = v26;
  v42[2] = v35;
  v42[3] = v34;
  *(void *)&long long v46 = 0;
  long long v44 = 0u;
  long long v45 = 0u;
  sub_1C017ED10((uint64_t)v6, v42, (uint64_t *)&v44, (uint64_t)v43);
  sub_1C09CFC44((uint64_t)v43, (uint64_t)&v44);
  sub_1C09CFC44((uint64_t)&v44, (uint64_t)v42);
  swift_retain();
  sub_1C151895C();
  swift_release();
  sub_1C0C7B0D8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
LABEL_17:
  uint64_t v32 = v41;
  swift_retain();
  sub_1C151894C();
  uint64_t result = swift_release();
  if (v44 == 1)
  {
    long long v52 = v67;
    long long v53 = v68;
    long long v48 = v63;
    long long v49 = v64;
    long long v50 = v65;
    long long v51 = v66;
    long long v44 = v59;
    long long v45 = v60;
    long long v46 = v61;
    long long v47 = v62;
    uint64_t v54 = v69;
    uint64_t v55 = v40;
    uint64_t v56 = v38;
    uint64_t v57 = v32;
    char v58 = v39;
    return sub_1C14C677C(&v44);
  }
  return result;
}

uint64_t sub_1C0C7A164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatCacheFile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0C7A1C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0C7A22C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0C7A294()
{
  if (!qword_1EA1A5258)
  {
    sub_1C0C7C094(255, (unint64_t *)&unk_1EA1A5260, (void (*)(uint64_t))type metadata accessor for DebugFormatPackageInventory);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A5258);
    }
  }
}

uint64_t sub_1C0C7A310()
{
  return sub_1C0C77874(*(void *)(v0 + 24));
}

uint64_t sub_1C0C7A340()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C7A3E8(uint64_t a1, char *a2)
{
  return sub_1C0C77E3C(a1, a2, *(void *)(v2 + 16), (_OWORD *)(v2 + 24), *(void *)(v2 + 168));
}

uint64_t sub_1C0C7A410(void *a1, uint64_t a2)
{
  return sub_1C0C7B2A0(a1, a2);
}

uint64_t sub_1C0C7A42C(void *a1)
{
  return sub_1C0C7888C(a1);
}

uint64_t sub_1C0C7A464(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v93 = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0C7A1C8(0, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v91 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v85 - v11;
  uint64_t v13 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v90 = (uint64_t *)((char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  id v92 = (uint64_t *)((char *)&v85 - v17);
  sub_1C0C7A1C8(0, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, v7);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v85 - v19;
  uint64_t v21 = *a2;
  uint64_t v22 = a2[1];
  v117[0] = a4;
  uint64_t v94 = a4;
  id v23 = a4;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v24 = type metadata accessor for FormatLayoutError();
  int v25 = swift_dynamicCast();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  if (v25)
  {
    v26(v20, 0, 1, v24);
    if (swift_getEnumCaseMultiPayload() == 65)
    {
      uint64_t v27 = (void *)*((void *)v20 + 1);
      swift_bridgeObjectRelease();

      uint64_t v28 = v94;
LABEL_18:
      uint64_t v35 = (uint64_t)v28;
      goto LABEL_19;
    }
    sub_1C0C7B0D8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
  }
  else
  {
    v26(v20, 1, 1, v24);
    sub_1C0C7C008((uint64_t)v20, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError);
  }
  uint64_t v118 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v29 = *(void *)(v93 + 40);
  if (!*(void *)(v29 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_12:
    uint64_t v34 = (uint64_t)v12;
LABEL_13:
    sub_1C0C7C008(v34, (unint64_t *)&qword_1EA1A5240, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
LABEL_14:
    uint64_t v28 = v94;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_1C1052834(v21, v22, 1);
  if (v31)
  {
    sub_1C0C7A164(*(void *)(v29 + 56) + *(void *)(v14 + 72) * v30, (uint64_t)v12);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v32((uint64_t)v12, 0, 1, v13);
  }
  else
  {
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v32((uint64_t)v12, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  double v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v33(v12, 1, v13) == 1) {
    goto LABEL_12;
  }
  uint64_t v87 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v33;
  uint64_t v88 = v32;
  int v39 = v92;
  sub_1C0C7A22C((uint64_t)v12, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  uint64_t v40 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_formatManager);
  uint64_t v42 = *v39;
  uint64_t v41 = v39[1];
  uint64_t v43 = *(void *)(v40 + 16);
  swift_bridgeObjectRetain();
  *(void *)&long long v89 = v43;
  sub_1C1517E7C();
  uint64_t v85 = v40 + 40;
  swift_beginAccess();
  uint64_t v86 = v40;
  uint64_t v44 = *(void *)(v40 + 40);
  if (*(void *)(v44 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v45 = sub_1BFEF2D8C(v42, v41);
    if (v46)
    {
      long long v47 = (long long *)(*(void *)(v44 + 56) + (v45 << 7));
      long long v49 = v47[2];
      long long v48 = v47[3];
      long long v50 = v47[1];
      long long v106 = *v47;
      long long v107 = v50;
      long long v108 = v49;
      long long v109 = v48;
      long long v51 = v47[4];
      long long v52 = v47[5];
      long long v53 = v47[7];
      long long v112 = v47[6];
      long long v113 = v53;
      long long v110 = v51;
      long long v111 = v52;
      memmove(v114, v47, 0x80uLL);
      nullsub_1();
      sub_1C0B8CEF4(&v106);
    }
    else
    {
      sub_1C017F2B4(v114);
    }
  }
  else
  {
    sub_1C017F2B4(v114);
    swift_bridgeObjectRetain();
  }
  sub_1C09CFC44((uint64_t)v114, (uint64_t)v117);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  swift_bridgeObjectRelease();
  sub_1C09CFC44((uint64_t)v117, (uint64_t)v114);
  if (sub_1C0263AB8((uint64_t)v114) == 1)
  {
    sub_1C0C7B0D8((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    goto LABEL_14;
  }
  sub_1C017FC04(v115, v116, v92, &v106);
  long long v54 = v106;
  long long v89 = v107;
  uint64_t v55 = sub_1C0EE2410(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v57 = v55[2];
  unint64_t v56 = v55[3];
  if (v57 >= v56 >> 1) {
    uint64_t v55 = sub_1C0EE2410((void *)(v56 > 1), v57 + 1, 1, v55);
  }
  void v55[2] = v57 + 1;
  char v58 = &v55[4 * v57];
  *((_OWORD *)v58 + 2) = v54;
  *((_OWORD *)v58 + 3) = v89;
  uint64_t v118 = v55;
  if (!*(void *)(v29 + 16))
  {
    uint64_t v64 = v91;
    v88(v91, 1, 1, v13);
LABEL_35:
    sub_1C0C7B0D8((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    sub_1C0C7C270(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
    uint64_t v34 = v64;
    goto LABEL_13;
  }
  uint64_t v59 = *(void *)(v93 + 16);
  uint64_t v60 = *(void *)(v59 + 16);
  uint64_t v61 = *(void *)(v59 + 24);
  swift_bridgeObjectRetain();
  unint64_t v62 = sub_1C1052834(v60, v61, 3);
  if (v63)
  {
    uint64_t v64 = v91;
    sub_1C0C7A164(*(void *)(v29 + 56) + *(void *)(v14 + 72) * v62, v91);
    uint64_t v65 = 0;
  }
  else
  {
    uint64_t v65 = 1;
    uint64_t v64 = v91;
  }
  long long v66 = v87;
  v88(v64, v65, 1, v13);
  swift_bridgeObjectRelease();
  if (v66(v64, 1, v13) == 1) {
    goto LABEL_35;
  }
  long long v67 = v90;
  sub_1C0C7A22C(v64, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  uint64_t v70 = v86;
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v71 = *(void *)(v70 + 40);
  if (*(void *)(v71 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v72 = sub_1BFEF2D8C(v69, v68);
    if (v73)
    {
      long long v74 = (int64x2_t *)(*(void *)(v71 + 56) + (v72 << 7));
      int64x2_t v76 = v74[2];
      int64x2_t v75 = v74[3];
      int64x2_t v77 = v74[1];
      int64x2_t v95 = *v74;
      int64x2_t v96 = v77;
      int64x2_t v97 = v76;
      int64x2_t v98 = v75;
      int64x2_t v78 = v74[4];
      int64x2_t v79 = v74[5];
      int64x2_t v80 = v74[7];
      int64x2_t v101 = v74[6];
      int64x2_t v102 = v80;
      int64x2_t v99 = v78;
      int64x2_t v100 = v79;
      memmove(v103, v74, 0x80uLL);
      nullsub_1();
      sub_1C0B8CEF4(&v95);
    }
    else
    {
      sub_1C017F2B4(v103);
    }
  }
  else
  {
    sub_1C017F2B4(v103);
    swift_bridgeObjectRetain();
  }
  sub_1C09CFC44((uint64_t)v103, (uint64_t)&v106);
  uint64_t v28 = v94;
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  swift_bridgeObjectRelease();
  sub_1C09CFC44((uint64_t)&v106, (uint64_t)v103);
  if (sub_1C0263AB8((uint64_t)v103) == 1)
  {
    sub_1C0C7C270(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
    sub_1C0C7B0D8((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    long long v81 = v92;
  }
  else
  {
    uint64_t v82 = v67;
    uint64_t v83 = (uint64_t)v67;
    uint64_t v84 = v92;
    sub_1C017FE58(v104, v105, v82, v92, &v95);
    sub_1C0247358(0, 0, v95.i64[0], v95.i64[1], v96.i64[0], v96.i64[1]);
    sub_1C0C7C270(&v106, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
    sub_1C0C7C270(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
    sub_1C0C7B0D8(v83, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    long long v81 = v84;
  }
  sub_1C0C7B0D8((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
LABEL_15:
  if (!v118[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  sub_1C0C7C56C((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  uint64_t v35 = swift_allocError();
  *uint64_t v36 = v118;
  v36[1] = v28;
  swift_storeEnumTagMultiPayload();
LABEL_19:
  id v37 = v28;
  return v35;
}

uint64_t sub_1C0C7AE08()
{
  return sub_1C0C789D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0C7AE28(uint64_t a1, uint64_t a2)
{
  return sub_1C0C78AE4(a1, a2);
}

id sub_1C0C7AE48()
{
  return sub_1C0F86784(*(char **)(v0 + 16), *(long long **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C0C7AE68()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C7AEA8(uint64_t *a1, void *a2)
{
  return sub_1C0F87118(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1C0C7AEC4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  if (MEMORY[0x1C18C9C60](v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_delegate))
  {
    sub_1C0D02C60(a1, a2);
    swift_unknownObjectRelease();
  }
  swift_retain();
  sub_1C151894C();
  uint64_t result = swift_release();
  if (LOBYTE(v15[0]) == 1)
  {
    uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_snapshotCanvasView);
    uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_contentView);
    uint64_t v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v7;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1C0C7B0C0;
    *(void *)(v11 + 24) = v10;
    v15[4] = sub_1BFC81768;
    v15[5] = v11;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 1107296256;
    _OWORD v15[2] = sub_1BFC81740;
    v15[3] = &block_descriptor_50;
    uint64_t v12 = _Block_copy(v15);
    id v13 = v8;
    id v14 = v7;
    swift_retain();
    swift_release();
    objc_msgSend((id)v9, sel_performWithoutAnimation_, v12);
    _Block_release(v12);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v9) {
      __break(1u);
    }
  }
  return result;
}

void sub_1C0C7B0C0()
{
  sub_1C14C8604(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0C7B0C8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C7B0D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_9Tm_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C7B1DC(uint64_t a1, uint64_t a2)
{
  return sub_1C0C78770(a1, a2);
}

uint64_t objectdestroy_3Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0C7B2A0(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  long long v5 = *(_OWORD *)(v2 + 104);
  long long v6 = *(_OWORD *)(v2 + 136);
  v10[6] = *(_OWORD *)(v2 + 120);
  v10[7] = v6;
  v10[8] = *(_OWORD *)(v2 + 152);
  long long v7 = *(_OWORD *)(v2 + 40);
  long long v8 = *(_OWORD *)(v2 + 72);
  v10[2] = *(_OWORD *)(v2 + 56);
  v10[3] = v8;
  v10[4] = *(_OWORD *)(v2 + 88);
  v10[5] = v5;
  v10[0] = *(_OWORD *)(v2 + 24);
  v10[1] = v7;
  sub_1C0C7A464(v4, (uint64_t *)v10, *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_editor), a1);
  return swift_willThrow();
}

uint64_t sub_1C0C7B32C(void *a1)
{
  return sub_1C0C7888C(a1);
}

id sub_1C0C7B364()
{
  return sub_1C0F88894(*(char **)(v0 + 16), *(long long **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C0C7B384()
{
  return swift_deallocObject();
}

void sub_1C0C7B3BC(uint64_t a1, uint64_t a2)
{
  sub_1C0F88A00(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C0C7B3D8()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1C0C7B410(uint64_t a1)
{
  *(void *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

id sub_1C0C7B430(void *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_canvasViewController);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView;
  long long v8 = *(void **)(v6 + OBJC_IVAR____TtC8NewsFeed31DebugFormatCanvasViewController_contentView);
  uint64_t v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_mainScreen);
  objc_msgSend(v11, sel_scale);
  double v13 = v12;

  sub_1C0FB4CD0(v13 * a2);
  id v14 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed31DebugFormatEditorViewController_backgroundView);
  id v15 = objc_msgSend(v9, sel_mainScreen);
  objc_msgSend(v15, sel_scale);
  double v17 = v16;

  objc_msgSend(v14, sel_setContentScaleFactor_, v17 * a2);
  uint64_t v18 = *(void *)(v6 + v7) + OBJC_IVAR____TtC8NewsFeed22DebugFormatContentView_contentFrame;
  double v19 = *(double *)(v18 + 16);
  double v20 = *(double *)(v18 + 24);
  objc_msgSend(a1, sel_contentSize);
  double v22 = v21;
  double v23 = v19 * a2;
  objc_msgSend(a1, sel_frame);
  double Width = CGRectGetWidth(v32);
  if (v23 > Width) {
    double Width = v23;
  }
  if (v22 <= Width) {
    double v22 = Width;
  }
  objc_msgSend(a1, sel_contentSize);
  double v26 = v25;
  double v27 = v20 * a2;
  objc_msgSend(a1, sel_frame);
  double Height = CGRectGetHeight(v33);
  if (v27 > Height) {
    double Height = v27;
  }
  if (v26 > Height) {
    double v29 = v26;
  }
  else {
    double v29 = Height;
  }
  return objc_msgSend(a1, sel_setContentSize_, v22, v29);
}

void sub_1C0C7B5E8()
{
  sub_1C0E080C4(*(char **)(v0 + 16));
}

uint64_t sub_1C0C7B5F0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C7B600()
{
  return sub_1C0C6DB7C(*(unsigned char *)(v0 + 16));
}

unint64_t sub_1C0C7B620()
{
  unint64_t result = qword_1EA1A5360;
  if (!qword_1EA1A5360)
  {
    sub_1C0C7BD28(255, &qword_1EA198520, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB458], MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5360);
  }
  return result;
}

unint64_t sub_1C0C7B6A4()
{
  unint64_t result = qword_1EA1A5378;
  if (!qword_1EA1A5378)
  {
    sub_1C0C7BDFC(255, &qword_1EA1A5368, (uint64_t (*)(void))sub_1C05E6964, (uint64_t)&type metadata for FeedKind, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5378);
  }
  return result;
}

unint64_t sub_1C0C7B734()
{
  unint64_t result = qword_1EA1A5388;
  if (!qword_1EA1A5388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5388);
  }
  return result;
}

unint64_t sub_1C0C7B788()
{
  unint64_t result = qword_1EA1A5390;
  if (!qword_1EA1A5390)
  {
    sub_1C0C7BDFC(255, &qword_1EA1A5380, (uint64_t (*)(void))sub_1C05E6AB4, (uint64_t)&type metadata for DebugFormatLocation, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5390);
  }
  return result;
}

unint64_t sub_1C0C7B818()
{
  unint64_t result = qword_1EA1A53A0;
  if (!qword_1EA1A53A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A53A0);
  }
  return result;
}

unint64_t sub_1C0C7B86C()
{
  unint64_t result = qword_1EA1A53A8;
  if (!qword_1EA1A53A8)
  {
    sub_1C0C7BDFC(255, &qword_1EA1A5398, (uint64_t (*)(void))sub_1C05E6A0C, (uint64_t)&type metadata for DebugFormatWeather, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A53A8);
  }
  return result;
}

unint64_t sub_1C0C7B8FC()
{
  unint64_t result = qword_1EA1A53C0;
  if (!qword_1EA1A53C0)
  {
    sub_1C0C7BDFC(255, (unint64_t *)&unk_1EA1A53B0, (uint64_t (*)(void))sub_1C022F5D0, (uint64_t)&type metadata for DebugFormatUploadTarget, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A53C0);
  }
  return result;
}

unint64_t sub_1C0C7B98C()
{
  unint64_t result = qword_1EA198518;
  if (!qword_1EA198518)
  {
    sub_1C0C7BDFC(255, &qword_1EA198510, (uint64_t (*)(void))sub_1C022F57C, (uint64_t)&type metadata for DebugFormatBackendEnvironment, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198518);
  }
  return result;
}

unint64_t sub_1C0C7BA1C()
{
  unint64_t result = qword_1EA1A94D0;
  if (!qword_1EA1A94D0)
  {
    sub_1C0C7BD28(255, (unint64_t *)&unk_1EA1A53E0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468], MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A94D0);
  }
  return result;
}

unint64_t sub_1C0C7BAA0()
{
  unint64_t result = qword_1EA1A5400;
  if (!qword_1EA1A5400)
  {
    sub_1C0C7BDFC(255, (unint64_t *)&unk_1EA1A53F0, (uint64_t (*)(void))sub_1C05E6D18, (uint64_t)&type metadata for DebugFormatTestScope, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5400);
  }
  return result;
}

unint64_t sub_1C0C7BB30()
{
  unint64_t result = qword_1EA1A5410;
  if (!qword_1EA1A5410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5410);
  }
  return result;
}

unint64_t sub_1C0C7BB84()
{
  unint64_t result = qword_1EA1A5418;
  if (!qword_1EA1A5418)
  {
    sub_1C0C7BDFC(255, &qword_1EA1A5408, (uint64_t (*)(void))sub_1C05E6C70, (uint64_t)&type metadata for DebugFormatTestRun, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5418);
  }
  return result;
}

unint64_t sub_1C0C7BC14()
{
  unint64_t result = qword_1EA1A5430;
  if (!qword_1EA1A5430)
  {
    sub_1C0C7BDFC(255, (unint64_t *)&unk_1EA1A5420, (uint64_t (*)(void))sub_1C05E6B5C, (uint64_t)&type metadata for DebugFormatTestSubject, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5430);
  }
  return result;
}

unint64_t sub_1C0C7BCA4()
{
  unint64_t result = qword_1EA1A5440;
  if (!qword_1EA1A5440)
  {
    sub_1C0C7BD28(255, &qword_1EA1A5438, MEMORY[0x1E4FBB550], MEMORY[0x1E4FAB4A0], MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5440);
  }
  return result;
}

void sub_1C0C7BD28(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C0C7BD78()
{
  unint64_t result = qword_1EA1A5450;
  if (!qword_1EA1A5450)
  {
    sub_1C0C7BD28(255, &qword_1EA1A5448, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FAB478], MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5450);
  }
  return result;
}

void sub_1C0C7BDFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0C7BE64()
{
  unint64_t result = qword_1EA1A5460;
  if (!qword_1EA1A5460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5460);
  }
  return result;
}

unint64_t sub_1C0C7BEB8()
{
  unint64_t result = qword_1EA1A5468;
  if (!qword_1EA1A5468)
  {
    sub_1C0C7BDFC(255, &qword_1EA1A5458, (uint64_t (*)(void))sub_1C05E6F18, (uint64_t)&type metadata for DebugFormatBackgroundColor, MEMORY[0x1E4FAB3C0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5468);
  }
  return result;
}

void sub_1C0C7BF48(uint64_t a1)
{
}

void sub_1C0C7BF68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1516FEC();
    uint64_t v7 = sub_1C0C7C56C(&qword_1EB896580, 255, MEMORY[0x1E4FAB298]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0C7C008(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0C7A1C8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0C7C078()
{
  return sub_1C0C70598(*(void *)(v0 + 16));
}

void sub_1C0C7C094(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0C7C100()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0C7C138()
{
  return sub_1C0C70874(v0);
}

void sub_1C0C7C140()
{
  sub_1C0C6B384(v0, sub_1C0C6AB5C);
}

void sub_1C0C7C170()
{
  sub_1C0C6B384(v0, (void (*)(void))sub_1C0C6AD38);
}

void sub_1C0C7C1A0()
{
  sub_1C0C6B384(v0, sub_1C0C6B07C);
}

void sub_1C0C7C1D0()
{
  sub_1C0C6B384(v0, sub_1C0C6B3E0);
}

void sub_1C0C7C200(char *a1, uint64_t *a2)
{
  sub_1C0C6CE80(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1C0C6C0D8);
}

void sub_1C0C7C230(char *a1, uint64_t *a2)
{
  sub_1C0C6CE80(a1, a2, v2, (uint64_t (*)(uint64_t))sub_1C0C6C204);
}

void sub_1C0C7C260()
{
  sub_1C0C6D01C(v0);
}

void sub_1C0C7C268(uint64_t *a1)
{
  sub_1C0C6D590(a1, v1);
}

void *sub_1C0C7C270(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C0C7C2D4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C0C7A1C8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0C7C354()
{
  return sub_1C0C76E50();
}

uint64_t sub_1C0C7C35C()
{
  return swift_deallocObject();
}

void sub_1C0C7C36C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C0C7C3B8(uint64_t a1)
{
  sub_1C0C71D60(a1, v1);
}

void sub_1C0C7C3C0(uint64_t a1)
{
  sub_1C0C72804(a1, v1, sub_1C0C71E8C);
}

uint64_t sub_1C0C7C3F0(uint64_t a1)
{
  return sub_1C0C71F80(a1, v1);
}

uint64_t sub_1C0C7C414(uint64_t a1)
{
  return sub_1C0C71F80(a1, v1);
}

uint64_t sub_1C0C7C438(uint64_t a1)
{
  return sub_1C0C71F80(a1, v1);
}

uint64_t sub_1C0C7C45C(uint64_t a1)
{
  return sub_1C0C71F80(a1, v1);
}

uint64_t sub_1C0C7C480(uint64_t a1)
{
  return sub_1C0C71F80(a1, v1);
}

uint64_t sub_1C0C7C4A4(uint64_t a1)
{
  return sub_1C0C71F80(a1, v1);
}

uint64_t sub_1C0C7C4C8(uint64_t a1)
{
  return sub_1C0C71F80(a1, v1);
}

uint64_t sub_1C0C7C4EC(uint64_t a1)
{
  return sub_1C0C72044(a1, v1);
}

uint64_t sub_1C0C7C4F4(uint64_t a1)
{
  return sub_1C0C720E4(a1, v1);
}

uint64_t sub_1C0C7C4FC(uint64_t a1)
{
  return sub_1C0C72184(a1, v1);
}

uint64_t sub_1C0C7C504(uint64_t a1)
{
  return sub_1C0C72208(a1, v1);
}

uint64_t sub_1C0C7C50C(uint64_t a1)
{
  return sub_1C0C72290(a1, v1);
}

uint64_t sub_1C0C7C514(uint64_t a1)
{
  return sub_1C0C72344(a1, v1);
}

uint64_t sub_1C0C7C51C(uint64_t a1)
{
  return sub_1C0C7246C(a1, v1);
}

uint64_t sub_1C0C7C524(uint64_t a1)
{
  return sub_1C0C725CC(a1, v1);
}

uint64_t sub_1C0C7C52C(uint64_t a1)
{
  return sub_1C0C726F0(a1, v1);
}

void sub_1C0C7C534(uint64_t a1)
{
  sub_1C0C72804(a1, v1, sub_1C0C72860);
}

void sub_1C0C7C564(uint64_t a1)
{
  sub_1C0C75710(a1, v1);
}

uint64_t sub_1C0C7C56C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C7C5BC()
{
  return sub_1C0C7C078();
}

uint64_t sub_1C0C7C600()
{
  return sub_1C0C7AE08();
}

uint64_t sub_1C0C7C618()
{
  return sub_1C0C7B600();
}

id sub_1C0C7C630()
{
  uint64_t v0 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_systemImageNamed_, v0);

  return v1;
}

void *PuzzleComponentsViewProvider.__allocating_init(puzzleComponentsStyler:sceneProvider:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  _OWORD v6[2] = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  v6[3] = a1;
  v6[4] = a2;
  sub_1BFC773DC(a3, (uint64_t)(v6 + 5));
  return v6;
}

void *PuzzleComponentsViewProvider.init(puzzleComponentsStyler:sceneProvider:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3[2] = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  v3[3] = a1;
  v3[4] = a2;
  sub_1BFC773DC(a3, (uint64_t)(v3 + 5));
  return v3;
}

unint64_t PuzzleComponentsViewProvider.barButtonItems(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_1BFC648F8(a2);
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1C0C7FE8C(v6, v3, a2, a3);
  sub_1BFC3E5C0(a2);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_1C0C7C860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1C0C80AA8(0, &qword_1EA1A5500, MEMORY[0x1E4FAC8E8]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v122 = (char **)((char *)&v117 - v9);
  uint64_t v124 = (void *)sub_1C151B68C();
  uint64_t v123 = *(v124 - 1);
  MEMORY[0x1F4188790](v124);
  uint64_t v117 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v118 = (char *)&v117 - v12;
  uint64_t v121 = sub_1C151635C();
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  uint64_t v119 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151B4EC();
  uint64_t v131 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v133 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151A90C();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v125 = (int *)((char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1C151B2FC();
  uint64_t v135 = *(void *)(v18 - 8);
  uint64_t v136 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v134 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C80AA8(0, (unint64_t *)&qword_1EA19A6C0, (void (*)(uint64_t))type metadata accessor for PuzzleToolbarItem);
  MEMORY[0x1F4188790](v20 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v148 = (uint64_t *)((char *)&v117 - v22);
  uint64_t v24 = *(void *)a1;
  double v23 = *(uint64_t **)(a1 + 8);
  double v25 = *(void **)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 24);
  id v27 = *(id *)(a1 + 56);
  id v141 = *(id *)(a1 + 48);
  id v142 = v25;
  uint64_t v140 = *(void *)(a1 + 64);
  uint64_t v28 = *(void *)(a1 + 80);
  uint64_t v143 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(a1 + 72);
  uint64_t v29 = *(void *)(a1 + 88);
  uint64_t v30 = *(void *)(a1 + 96);
  char v31 = (void *)*(unsigned __int8 *)(a1 + 104);
  uint64_t v33 = *(void *)(a1 + 120);
  uint64_t v32 = *(void *)(a1 + 128);
  int v34 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v146 = a2;
  uint64_t v147 = a3;
  uint64_t v138 = a4;
  int v139 = v34;
  uint64_t v132 = v14;
  uint64_t v130 = v29;
  uint64_t v129 = v28;
  uint64_t v128 = v32;
  uint64_t v127 = v33;
  uint64_t v126 = v35;
  id v137 = v31;
  if (v23)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
    uint64_t v36 = (void *)swift_allocObject();
    v36[2] = a2;
    v36[3] = a3;
    uint64_t v37 = v24;
    v36[4] = v24;
    uint64_t v36[5] = v23;
    swift_bridgeObjectRetain();
    sub_1BFC648F8(a2);
    id v145 = (id)sub_1C151FBBC();
  }
  else
  {
    uint64_t v37 = v24;
    id v145 = 0;
  }
  uint64_t v38 = v26;
  if (v30)
  {
    uint64_t v40 = v146;
    uint64_t v39 = v147;
    sub_1BFC648F8(v146);
    swift_bridgeObjectRetain();
    uint64_t v41 = (uint64_t)v144;
    swift_retain();
    sub_1C0C7FD04(v30, v41, v40, v39);
    sub_1BFC3E5C0(v40);
    swift_release();
    sub_1BFC39268(0, &qword_1EA1A2120);
    uint64_t v42 = (void *)sub_1C151F8BC();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v42 = 0;
  }
  uint64_t v43 = (uint64_t)v148;
  uint64_t v44 = v37;
  unint64_t v45 = v143;
  id v141 = v42;
  if (!v27)
  {
    id v137 = 0;
    goto LABEL_14;
  }
  uint64_t v46 = (uint64_t)v148;
  long long v47 = (void *)v144[2];
  swift_bridgeObjectRetain_n();
  id v48 = v47;
  long long v49 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  long long v50 = self;
  id v51 = objc_msgSend(v50, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v49, v48, 0);

  if (v51)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    long long v52 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(v50, sel_systemImageNamed_, v52);

    swift_bridgeObjectRelease();
    if (!v51)
    {
      id v27 = 0;
      id v137 = 0;
      goto LABEL_13;
    }
  }
  uint64_t v53 = v144[4];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 16);
  id v56 = v51;
  unint64_t v57 = (void *)v55(ObjectType, v53);
  id v27 = objc_msgSend(v56, sel_imageByApplyingSymbolConfiguration_, v57);
  id v137 = v56;

LABEL_13:
  uint64_t v43 = v46;
  uint64_t v42 = v141;
  unint64_t v45 = v143;
LABEL_14:
  sub_1C151A1AC();
  id v58 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v58, sel_setImage_forState_, v27, 0);
  objc_msgSend(v58, sel_setMenu_, v42);
  id v59 = v58;
  if (v45) {
    uint64_t v60 = (void *)sub_1C151E5EC();
  }
  else {
    uint64_t v60 = 0;
  }
  objc_msgSend(v58, sel_setAccessibilityLabel_, v60);

  id v61 = v58;
  if (v45) {
    unint64_t v62 = (void *)sub_1C151E5EC();
  }
  else {
    unint64_t v62 = 0;
  }
  objc_msgSend(v58, sel_setLargeContentTitle_, v62);

  if (v23)
  {
    swift_bridgeObjectRetain();
    char v63 = (void *)sub_1C151A19C();
    id v64 = v27;
    uint64_t v65 = (void *)swift_allocObject();
    uint64_t v66 = v146;
    uint64_t v67 = v147;
    v65[2] = v146;
    v65[3] = v67;
    v65[4] = v44;
    v65[5] = v23;
    sub_1BFC648F8(v66);

    id v27 = v64;
    swift_release();
  }
  else
  {
    objc_msgSend(v58, sel_setShowsMenuAsPrimaryAction_, 1);
  }
  sub_1C151AF5C();
  id v68 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCustomView_, v58);
  if (v38) {
    uint64_t v69 = (void *)sub_1C151E5EC();
  }
  else {
    uint64_t v69 = 0;
  }
  uint64_t v144 = v58;
  objc_msgSend(v68, sel_setTitle_, v69);

  objc_msgSend(v68, sel_setPrimaryAction_, v145);
  sub_1C151AF4C();
  if (v23)
  {
    swift_bridgeObjectRetain();
    sub_1C151AF3C();
  }
  uint64_t v70 = (int *)type metadata accessor for PuzzleToolbarItem(0);
  uint64_t v71 = *((void *)v70 - 1);
  unint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v71 + 56);
  uint64_t v140 = v71 + 56;
  v72(v43, 1, 1, v70);
  uint64_t v143 = v72;
  if (v42)
  {
    id v73 = objc_allocWithZone(MEMORY[0x1E4F29128]);
    id v142 = v42;
    id v74 = objc_msgSend(v73, sel_init);
    id v75 = objc_msgSend(v74, sel_UUIDString);

    sub_1C151E62C();
    sub_1C151A92C();
    swift_allocObject();
    uint64_t v76 = sub_1C151A91C();
    uint64_t v149 = v76;
    swift_retain();
    uint64_t v124 = v27;
    sub_1C151A8FC();
    (*(void (**)(char *, void, uint64_t))(v131 + 104))(v133, *MEMORY[0x1E4FAC838], v132);
    sub_1C0C80B58(&qword_1EA1A5510, MEMORY[0x1E4FAC0B0]);
    swift_bridgeObjectRetain();
    uint64_t v77 = (uint64_t)v68;
    swift_bridgeObjectRetain();
    int64x2_t v78 = v134;
    sub_1C151B2EC();
    uint64_t v79 = sub_1C151AF2C();
    uint64_t v81 = v80;
    sub_1C0C80AFC((uint64_t)v148, (unint64_t *)&qword_1EA19A6C0, (void (*)(uint64_t))type metadata accessor for PuzzleToolbarItem);
    uint64_t v82 = v126;
    uint64_t v83 = v135;
    uint64_t v84 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))((char *)v126 + v70[5], v78, v136);
    *uint64_t v82 = v79;
    v82[1] = v81;
    uint64_t v85 = (uint64_t *)((char *)v82 + v70[6]);
    uint64_t v86 = (uint64_t)v141;
    *uint64_t v85 = v76;
    v85[1] = v86;
    v85[2] = 0;
    uint64_t v87 = (uint64_t *)((char *)v82 + v70[7]);
    uint64_t v89 = v146;
    uint64_t v88 = v147;
    *uint64_t v87 = v146;
    v87[1] = v88;
    v143((uint64_t)v82, 0, 1, v70);
    sub_1C03932BC((uint64_t)v82, (uint64_t)v148);
    sub_1BFC648F8(v89);
    id v90 = v142;
    swift_retain();
    uint64_t v91 = sub_1C151AF2C();
    uint64_t v93 = v92;

    swift_release();
    uint64_t v94 = v148;

    int64x2_t v95 = v78;
    uint64_t v44 = v91;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v95, v84);
    int64x2_t v96 = v138;
  }
  else
  {
    uint64_t v125 = v70;
    if (v23)
    {
      uint64_t v126 = v23;
    }
    else
    {
      uint64_t v44 = sub_1C151AF2C();
      uint64_t v126 = v97;
    }
    swift_bridgeObjectRetain();
    id v141 = v68;
    uint64_t v149 = sub_1C151AF2C();
    uint64_t v150 = v98;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    uint64_t v100 = v149;
    uint64_t v99 = v150;
    int64x2_t v101 = v119;
    sub_1C151634C();
    sub_1C151633C();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v101, v121);
    uint64_t v149 = v100;
    uint64_t v150 = v99;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C151AD2C();
    swift_allocObject();
    uint64_t v102 = sub_1C151AD1C();
    if (v27)
    {
      uint64_t v121 = v44;
      uint64_t v103 = (uint64_t)v122;
      *uint64_t v122 = v27;
      uint64_t v104 = v123;
      unint64_t v105 = v124;
      (*(void (**)(uint64_t, void, void *))(v123 + 104))(v103, *MEMORY[0x1E4FAC8D8], v124);
      (*(void (**)(uint64_t, void, uint64_t, void *))(v104 + 56))(v103, 0, 1, v105);
    }
    else
    {
      unint64_t v105 = v124;
      uint64_t v103 = (uint64_t)v122;
      if (!v38)
      {
        (*(void (**)(void *, uint64_t, uint64_t, void *))(v123 + 56))(v122, 1, 1, v124);

        swift_release();
        sub_1C0C80AFC(v103, &qword_1EA1A5500, MEMORY[0x1E4FAC8E8]);
        int64x2_t v96 = v138;
        uint64_t v94 = v148;
        uint64_t v77 = (uint64_t)v141;
        uint64_t v93 = v126;
        goto LABEL_38;
      }
      uint64_t v121 = v44;
      *uint64_t v122 = v142;
      *(void *)(v103 + 8) = v38;
      uint64_t v104 = v123;
      (*(void (**)(uint64_t, void, void *))(v123 + 104))(v103, *MEMORY[0x1E4FAC8D0], v105);
      (*(void (**)(uint64_t, void, uint64_t, void *))(v104 + 56))(v103, 0, 1, v105);
      swift_bridgeObjectRetain();
    }
    long long v106 = v118;
    (*(void (**)(char *, uint64_t, void *))(v104 + 32))(v118, v103, v105);
    uint64_t v149 = v102;
    (*(void (**)(char *, char *, void *))(v104 + 16))(v117, v106, v105);
    uint64_t v107 = v102;
    (*(void (**)(char *, void, uint64_t))(v131 + 104))(v133, *MEMORY[0x1E4FAC838], v132);
    long long v108 = v105;
    sub_1C0C80B58(&qword_1EA1A5508, MEMORY[0x1E4FAC300]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    long long v109 = v134;
    sub_1C151B2EC();

    (*(void (**)(char *, void *))(v104 + 8))(v106, v108);
    uint64_t v94 = v148;
    sub_1C0C80AFC((uint64_t)v148, (unint64_t *)&qword_1EA19A6C0, (void (*)(uint64_t))type metadata accessor for PuzzleToolbarItem);
    uint64_t v44 = v121;
    uint64_t v93 = v126;
    *uint64_t v94 = v121;
    v94[1] = (uint64_t)v93;
    long long v110 = (char *)v125;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))((char *)v94 + v125[5], v109, v136);
    long long v111 = (unint64_t *)((char *)v94 + *((int *)v110 + 6));
    *long long v111 = v107 | 0x8000000000000000;
    v111[1] = v44;
    v111[2] = (unint64_t)v93;
    long long v112 = (uint64_t *)((char *)v94 + *((int *)v110 + 7));
    uint64_t v114 = v146;
    uint64_t v113 = v147;
    *long long v112 = v146;
    v112[1] = v113;
    v143((uint64_t)v94, 0, 1, (int *)v110);
    swift_bridgeObjectRetain();
    sub_1BFC648F8(v114);
    swift_bridgeObjectRetain();
    int64x2_t v96 = v138;
    uint64_t v77 = (uint64_t)v141;
  }
LABEL_38:
  uint64_t v115 = type metadata accessor for PuzzleBarButtonItem(0);
  sub_1C03932BC((uint64_t)v94, (uint64_t)v96 + *(int *)(v115 + 24));
  uint64_t *v96 = v44;
  v96[1] = (uint64_t)v93;
  v96[2] = v77;
  *((unsigned char *)v96 + *(int *)(v115 + 28)) = v139;
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v96, 0, 1, v115);
}

uint64_t PuzzleComponentsViewProvider.menu(with:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 96);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BFC648F8(a2);
      sub_1C0C7FD04(v6, v3, a2, a3);
      sub_1BFC3E5C0(a2);
      swift_release();
      sub_1BFC39268(0, &qword_1EA1A2120);
      return sub_1C151F8BC();
    }
  }
  else if (v6)
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0C7DAA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v4 = (void (*)(void *))result;
    v5[0] = a3;
    v5[1] = a4;
    swift_bridgeObjectRetain();
    v4(v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *PuzzleComponentsViewProvider.accessoryComponentView(for:colorTheme:handler:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  unint64_t v10 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v11 = a1[6];
  unint64_t v12 = a1[7];
  uint64_t v13 = a1[8];
  uint64_t v15 = *(void **)a2;
  uint64_t v14 = *(void **)(a2 + 8);
  if (v10 >> 8 == 0xFFFFFFFF && v12 < 4) {
    return 0;
  }
  if (v12 >> 62)
  {
    if (v12 >> 62 == 1)
    {
      uint64_t v26 = (char *)objc_allocWithZone((Class)type metadata accessor for PuzzleStackAccessoryView());
      sub_1C028A540(v7, v8, v10, v9, v11, v12);
      sub_1C0C801E4(v15, v14);
      sub_1BFC648F8(a3);
      swift_retain();
      uint64_t v16 = sub_1C0C7F0D0(v7, v4, v15, v14, a3, a4, v26);
      if (!v16) {
        return v16;
      }
      uint64_t v17 = &protocol witness table for PuzzleStackAccessoryView;
    }
    else
    {
      uint64_t v18 = a1[1];
      uint64_t v28 = *a1;
      uint64_t v19 = (char *)objc_allocWithZone((Class)type metadata accessor for PuzzleButtonsAccessoryView());
      swift_bridgeObjectRetain();
      sub_1C028A540(v7, v8, v10, v9, v11, v12);
      sub_1BFC648F8(a3);
      swift_retain();
      uint64_t v16 = (void *)sub_1C0C7F308(v28, v18, v7, v4, a3, a4, v19, 52.0);
      if (!v16) {
        return v16;
      }
      uint64_t v17 = &protocol witness table for PuzzleButtonsAccessoryView;
    }
  }
  else
  {
    *(void *)&long long v33 = a1[2];
    *((void *)&v33 + 1) = v8;
    char v34 = v10;
    uint64_t v35 = v9;
    uint64_t v36 = v11;
    char v37 = v12;
    uint64_t v38 = v13;
    uint64_t v23 = *(void *)(v4 + 24);
    uint64_t v24 = v5;
    uint64_t v25 = *(void *)(v4 + 32);
    uint64_t v27 = v6;
    v32[0] = v15;
    v32[1] = v14;
    sub_1BFC66384(v4 + 40, (uint64_t)v31);
    objc_allocWithZone((Class)type metadata accessor for PuzzleHintAccessoryView());
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1C028A540(v7, v8, v10, v9, v11, v12);
    sub_1C0C801E4(v15, v14);
    sub_1BFC648F8(a3);
    uint64_t v16 = PuzzleHintAccessoryView.init(identifier:minHeight:hintConfig:puzzleComponentsStyler:colorTheme:sceneProvider:handler:)(v27, v24, &v33, v23, v25, (uint64_t)v32, v31, a3, 59.0, a4);
    if (!v16) {
      return v16;
    }
    uint64_t v17 = &protocol witness table for PuzzleHintAccessoryView;
  }
  swift_getObjectType();
  uint64_t v20 = (double (__cdecl *)())v17[4];
  id v21 = v16;
  objc_msgSend(v21, sel_setFrame_, 0.0, 0.0, 1.0, v20());

  return v16;
}

char *PuzzleComponentsViewProvider.accessoryView(for:colorTheme:handler:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 64);
  v15[0] = *(void *)a1;
  v15[1] = v4;
  long long v6 = *(_OWORD *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 16);
  long long v17 = v6;
  long long v18 = *(_OWORD *)(a1 + 48);
  uint64_t v19 = v5;
  long long v14 = *a2;
  uint64_t v7 = PuzzleComponentsViewProvider.accessoryComponentView(for:colorTheme:handler:)(v15, (uint64_t)&v14, a3, a4);
  uint64_t v9 = v8;
  if (qword_1EA194878 != -1) {
    swift_once();
  }
  unint64_t v10 = (char *)(id)qword_1EA1A54B0;
  sub_1C0C7E834(v7, v9);
  uint64_t v11 = &v10[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  unint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  *(void *)uint64_t v11 = v7;
  *((void *)v11 + 1) = v9;

  return v10;
}

uint64_t PuzzleComponentsViewProvider.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return v0;
}

uint64_t PuzzleComponentsViewProvider.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

unint64_t sub_1C0C7DF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_1BFC648F8(a2);
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1C0C7FE8C(v6, v3, a2, a3);
  sub_1BFC3E5C0(a2);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

void PuzzleComponentsViewProvider.menuElement(with:handler:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1[14];
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[12];
  uint64_t v21 = *a1;
  if (a1[7])
  {
    uint64_t v20 = a1[12];
    unint64_t v7 = *(void **)(v3 + 16);
    swift_bridgeObjectRetain();
    id v8 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    unint64_t v10 = self;
    id v11 = objc_msgSend(v10, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v9, v8, 0);

    if (!v11)
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v11 = objc_msgSend(v10, sel_systemImageNamed_, v12);
    }
    uint64_t v6 = v20;
    if (v5) {
      goto LABEL_5;
    }
LABEL_20:
    if (v6)
    {
      sub_1BFC648F8(a2);
      swift_retain();
      sub_1C0C7FD04(v6, v3, a2, a3);
      sub_1BFC3E5C0(a2);
      swift_release();
      sub_1BFC39268(0, &qword_1EA1A2120);
      sub_1C151F8BC();
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = 0;
  if (!v5) {
    goto LABEL_20;
  }
LABEL_5:
  if (!v4 || (uint64_t v13 = *(void *)(v4 + 16)) == 0)
  {
LABEL_18:
    sub_1BFC39268(0, (unint64_t *)&qword_1EA196BB0);
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a2;
    v19[3] = a3;
    v19[4] = v21;
    void v19[5] = v5;
    swift_bridgeObjectRetain();
    sub_1BFC648F8(a2);
    sub_1C151FBBC();
    return;
  }
  uint64_t v14 = 0;
  uint64_t v15 = (unsigned __int8 *)(v4 + 32);
  while (1)
  {
    int v18 = *v15++;
    int v17 = v18;
    if (!v18)
    {
      BOOL v16 = __CFADD__(v14, 2);
      v14 += 2;
      if (v16)
      {
        __break(1u);
        goto LABEL_18;
      }
      goto LABEL_9;
    }
    if (v17 != 1) {
      break;
    }
    BOOL v16 = __CFADD__(v14++, 1);
    if (v16) {
      goto LABEL_24;
    }
LABEL_9:
    if (!--v13) {
      goto LABEL_18;
    }
  }
  BOOL v16 = __CFADD__(v14, 8);
  v14 += 8;
  if (!v16) {
    goto LABEL_9;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

id sub_1C0C7E3DC(void *a1)
{
  uint64_t v2 = v1;
  id result = objc_msgSend(a1, sel_input);
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  id v8 = &v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_events];
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  if (!*(void *)(v9 + 16)) {
    return (id)swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1BFEF2D8C(v5, v7);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  unint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 32 * v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v16 = v12[2];
  uint64_t v15 = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v17 = *(void (**)(void *))&v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_handler];
  if (v17)
  {
    v18[0] = v14;
    v18[1] = v13;
    void v18[2] = v16;
    v18[3] = v15;
    swift_retain();
    v17(v18);
    sub_1BFC3E5C0((uint64_t)v17);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_1C0C7E718()
{
  return sub_1C0C7EF08((uint64_t (*)(void))type metadata accessor for PuzzleAlertController);
}

uint64_t sub_1C0C7E790(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    v7[0] = a4;
    v7[1] = a5;
    swift_bridgeObjectRetain();
    a2(v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C0C7E7F0()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AccessoryViewContainer()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  qword_1EA1A54B0 = (uint64_t)result;
  return result;
}

void sub_1C0C7E834(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    double v7 = (*(double (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
    uint64_t v8 = OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height;
    *(double *)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height] = v7;
    id v9 = objc_msgSend(a1, sel_heightAnchor);
    id v10 = objc_msgSend(v9, sel_constraintEqualToConstant_, *(double *)&v3[v8]);
  }
  else
  {
    id v10 = 0;
    *(void *)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height] = 0;
  }
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint;
  unint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint];
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint] = v10;

  uint64_t v13 = *(void **)&v3[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  if (v13) {
    objc_msgSend(v13, sel_removeFromSuperview);
  }
  if (a1)
  {
    objc_msgSend(v3, sel_addSubview_, a1);
    objc_msgSend(a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v14 = self;
    sub_1BFE4DBE0();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C15418C0;
    id v32 = a1;
    id v16 = objc_msgSend(v32, sel_leadingAnchor);
    id v17 = objc_msgSend(v3, sel_leadingAnchor);
    id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(void *)(v15 + 32) = v18;
    id v19 = objc_msgSend(v32, sel_trailingAnchor);
    id v20 = objc_msgSend(v3, sel_trailingAnchor);
    id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

    *(void *)(v15 + 40) = v21;
    id v22 = objc_msgSend(v32, sel_topAnchor);
    id v23 = objc_msgSend(v3, sel_topAnchor);
    id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

    *(void *)(v15 + 48) = v24;
    id v25 = objc_msgSend(v32, sel_bottomAnchor);
    id v26 = objc_msgSend(v3, sel_layoutMarginsGuide);
    id v27 = objc_msgSend(v26, sel_bottomAnchor);

    id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
    *(void *)(v15 + 56) = v28;
    sub_1C151EBEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
    uint64_t v29 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_activateConstraints_, v29);

    uint64_t v30 = *(void **)&v3[v11];
    if (v30)
    {
      id v31 = v30;
      objc_msgSend(v31, sel_setActive_, 1);
    }
  }
}

id sub_1C0C7EDA0(double a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = &v1[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_accessoryView];
  double v5 = 0.0;
  if (v4)
  {
    uint64_t v7 = *((void *)v3 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v9 = *(void (**)(uint64_t, uint64_t, double))(v7 + 40);
    id v10 = v4;
    v9(ObjectType, v7, a1);

    uint64_t v11 = *(void **)v3;
    if (*(void *)v3)
    {
      uint64_t v12 = *((void *)v3 + 1);
      uint64_t v13 = swift_getObjectType();
      uint64_t v14 = *(double (**)(uint64_t, uint64_t))(v12 + 32);
      id v15 = v11;
      double v5 = v14(v13, v12);
    }
  }
  *(double *)&v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height] = v5;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_heightConstraint], sel_setConstant_, v5);
  return objc_msgSend(v2, sel_setNeedsUpdateConstraints);
}

id sub_1C0C7EEF0()
{
  return sub_1C0C7EF08((uint64_t (*)(void))type metadata accessor for AccessoryViewContainer);
}

id sub_1C0C7EF08(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C0C7EFA8()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C0C7F000(uint64_t a1, uint64_t a2)
{
  double v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_identifier);
  swift_beginAccess();
  *double v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C0C7F060())()
{
  return j__swift_endAccess;
}

double sub_1C0C7F0BC()
{
  return *(double *)(v0 + OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B22AccessoryViewContainer_height);
}

id sub_1C0C7F0D0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = &a7[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_identifier];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v32 = a2;
  long long v33 = &protocol witness table for PuzzleComponentsViewProvider;
  char v34 = a3;
  uint64_t v35 = a4;
  uint64_t v30 = a5;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  id v15 = a7;
  id v16 = sub_1C02839E8((void (*)(long long *__return_ptr, void *))sub_1C0C809FC, (uint64_t)v31, a1);
  sub_1C019BB14(a3, a4);
  swift_bridgeObjectRelease();
  *(void *)&v15[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_stackViews] = v16;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  uint64_t v18 = v16[2];
  if (v18)
  {
    swift_bridgeObjectRetain();
    id v19 = v16 + 5;
    double v20 = 0.0;
    do
    {
      id v21 = (void *)*(v19 - 1);
      uint64_t v22 = *v19;
      uint64_t v23 = swift_getObjectType();
      id v24 = v21;
      objc_msgSend(v17, sel_addSubview_, v24);
      double v25 = (*(double (**)(uint64_t, uint64_t))(v22 + 32))(v23, v22);

      double v20 = v20 + v25;
      v19 += 2;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    double v20 = 0.0;
  }
  *(double *)&v15[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_height] = v20;
  *(void *)&v15[OBJC_IVAR____TtC8NewsFeed24PuzzleStackAccessoryView_containerView] = v17;
  id v26 = v17;

  v38.receiver = v15;
  v38.super_class = ObjectType;
  id v27 = objc_msgSendSuper2(&v38, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v27, sel_addSubview_, v26);
  sub_1BFC3E5C0(v30);

  swift_release();
  return v27;
}

uint64_t sub_1C0C7F308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, double a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v16 = &a7[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_identifier];
  *(void *)id v16 = 0;
  *((void *)v16 + 1) = 0;
  *(void *)&a7[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_spacing] = 0x4020000000000000;
  uint64_t v88 = a1;
  uint64_t v89 = a2;
  uint64_t v90 = a4;
  uint64_t v91 = &protocol witness table for PuzzleComponentsViewProvider;
  uint64_t v92 = a5;
  uint64_t v93 = a6;
  id v17 = a7;
  unint64_t v18 = sub_1C0282AD0((void (*)(uint64_t *__return_ptr, void *))sub_1C0C80A20, (uint64_t)v87, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (v19)
  {
    uint64_t v95 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F64C8(0, v19 & ~(v19 >> 63), 0);
    if (v19 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = 0;
    uint64_t v20 = v95;
    double v23 = *MEMORY[0x1E4FB2C68];
    double v24 = *(double *)(MEMORY[0x1E4FB2C68] + 8);
    do
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x1C18C7CB0](v22, v18);
      }
      else {
        id v25 = *(id *)(v18 + 8 * v22 + 32);
      }
      id v26 = v25;
      objc_msgSend(v25, sel_systemLayoutSizeFittingSize_, v23, v24, ObjectType);
      uint64_t v28 = v27;

      uint64_t v95 = v20;
      unint64_t v30 = *(void *)(v20 + 16);
      unint64_t v29 = *(void *)(v20 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1C05F64C8(v29 > 1, v30 + 1, 1);
        uint64_t v20 = v95;
      }
      ++v22;
      *(void *)(v20 + 16) = v30 + 1;
      *(void *)(v20 + 8 * v30 + 32) = v28;
    }
    while (v19 != v22);
  }
  *(double *)&uint64_t v31 = COERCE_DOUBLE(sub_1C14C61F0(v20));
  char v33 = v32;
  swift_bridgeObjectRelease();
  double v34 = *(double *)&v31;
  if (v33) {
    double v34 = 0.0;
  }
  if (v34 <= a8) {
    double v34 = a8;
  }
  *(double *)&v17[OBJC_IVAR____TtC8NewsFeed26PuzzleButtonsAccessoryView_height] = v34;
  if (v18 >> 62)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    swift_bridgeObjectRetain();
    sub_1C152041C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C1520B5C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  }
  swift_bridgeObjectRelease();
  id v35 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  uint64_t v36 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v35, sel_initWithArrangedSubviews_, v36);

  objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v37, sel_setAxis_, 0);
  objc_msgSend(v37, sel_setDistribution_, 2);
  objc_msgSend(v37, sel_setAlignment_, 3);
  objc_msgSend(v37, sel_setSpacing_, 8.0);
  objc_msgSend(v37, sel_setLayoutMarginsRelativeArrangement_, 1);
  id v38 = v37;

  objc_msgSend(v38, sel_setLayoutMargins_, 8.0, 8.0, 8.0, 8.0);
  v94.receiver = v17;
  v94.super_class = ObjectType;
  id v39 = objc_msgSendSuper2(&v94, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v40 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v41 = v39;
  id v42 = objc_msgSend(v40, sel_init);
  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_init);
  objc_msgSend(v43, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v41, sel_addSubview_, v43);
  objc_msgSend(v43, sel_addSubview_, v42);
  objc_msgSend(v42, sel_addSubview_, v38);
  id v86 = self;
  sub_1BFE4DBE0();
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1C152B920;
  id v45 = objc_msgSend(v43, sel_topAnchor);
  id v46 = objc_msgSend(v41, (SEL)&selRef_setTailIndent_ + 3);
  id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  *(void *)(v44 + 32) = v47;
  id v48 = objc_msgSend(v43, sel_leadingAnchor);
  id v49 = objc_msgSend(v41, (SEL)&selRef_systemImageNamed_withConfiguration_ + 2);
  id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(void *)(v44 + 40) = v50;
  id v51 = objc_msgSend(v43, sel_trailingAnchor);
  id v52 = objc_msgSend(v41, (SEL)&selRef_lowQualityImage + 4);
  id v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v52);

  *(void *)(v44 + 48) = v53;
  id v54 = objc_msgSend(v43, sel_bottomAnchor);
  id v55 = objc_msgSend(v41, sel_bottomAnchor);
  id v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

  *(void *)(v44 + 56) = v56;
  id v57 = objc_msgSend(v42, sel_topAnchor);
  id v58 = objc_msgSend(v43, sel_topAnchor);
  id v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v58);

  *(void *)(v44 + 64) = v59;
  id v60 = objc_msgSend(v42, sel_leadingAnchor);
  id v61 = objc_msgSend(v43, sel_leadingAnchor);
  id v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

  *(void *)(v44 + 72) = v62;
  id v63 = objc_msgSend(v42, sel_trailingAnchor);
  id v64 = objc_msgSend(v43, sel_trailingAnchor);
  id v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v64);

  *(void *)(v44 + 80) = v65;
  id v66 = objc_msgSend(v42, sel_bottomAnchor);
  id v67 = objc_msgSend(v43, sel_bottomAnchor);
  id v68 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v67);

  *(void *)(v44 + 88) = v68;
  id v69 = objc_msgSend(v42, sel_heightAnchor);
  id v70 = objc_msgSend(v43, sel_heightAnchor);
  id v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

  *(void *)(v44 + 96) = v71;
  id v72 = objc_msgSend(v38, sel_topAnchor);
  id v73 = objc_msgSend(v42, sel_topAnchor);
  id v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v73);

  *(void *)(v44 + 104) = v74;
  id v75 = objc_msgSend(v38, sel_leadingAnchor);
  id v76 = objc_msgSend(v42, sel_leadingAnchor);
  id v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v76);

  *(void *)(v44 + 112) = v77;
  id v78 = objc_msgSend(v38, sel_trailingAnchor);
  id v79 = objc_msgSend(v42, sel_trailingAnchor);
  id v80 = objc_msgSend(v78, sel_constraintEqualToAnchor_, v79);

  *(void *)(v44 + 120) = v80;
  id v81 = objc_msgSend(v38, sel_bottomAnchor);
  id v82 = objc_msgSend(v42, sel_bottomAnchor);
  id v83 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v82);

  *(void *)(v44 + 128) = v83;
  uint64_t v95 = v44;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
  uint64_t v84 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v86, sel_activateConstraints_, v84);
  sub_1BFC3E5C0(a5);

  swift_release();
  return (uint64_t)v41;
}

uint64_t sub_1C0C7FD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a4;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    swift_bridgeObjectRetain();
    long long v8 = *(_OWORD *)(a1 + 144);
    long long v28 = *(_OWORD *)(a1 + 128);
    v29[0] = v8;
    *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)(a1 + 153);
    long long v9 = *(_OWORD *)(a1 + 80);
    long long v24 = *(_OWORD *)(a1 + 64);
    long long v25 = v9;
    long long v10 = *(_OWORD *)(a1 + 112);
    long long v26 = *(_OWORD *)(a1 + 96);
    long long v27 = v10;
    long long v12 = *(_OWORD *)(a1 + 32);
    long long v11 = *(_OWORD *)(a1 + 48);
    uint64_t v13 = v5 - 1;
    for (uint64_t i = 176; ; i += 144)
    {
      v23[0] = v12;
      v23[1] = v11;
      v21[6] = v28;
      v22[0] = v29[0];
      *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v29 + 9);
      void v21[2] = v24;
      v21[3] = v25;
      v21[4] = v26;
      v21[5] = v27;
      v21[0] = v12;
      v21[1] = v11;
      sub_1C00DD354((uint64_t)v23);
      PuzzleComponentsViewProvider.menuElement(with:handler:)((uint64_t *)v21, a3, v31);
      uint64_t v16 = v15;
      uint64_t v17 = sub_1C00DD3FC((uint64_t)v23);
      if (v16)
      {
        MEMORY[0x1C18C66D0](v17);
        if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      if (!v13) {
        break;
      }
      long long v18 = *(_OWORD *)(a1 + i + 112);
      long long v28 = *(_OWORD *)(a1 + i + 96);
      v29[0] = v18;
      *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)(a1 + i + 121);
      long long v19 = *(_OWORD *)(a1 + i + 48);
      long long v24 = *(_OWORD *)(a1 + i + 32);
      long long v25 = v19;
      long long v20 = *(_OWORD *)(a1 + i + 80);
      long long v26 = *(_OWORD *)(a1 + i + 64);
      long long v27 = v20;
      long long v12 = *(_OWORD *)(a1 + i);
      long long v11 = *(_OWORD *)(a1 + i + 16);
      --v13;
    }
    swift_bridgeObjectRelease();
    return v30;
  }
  return result;
}

unint64_t sub_1C0C7FE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v51 = a3;
  sub_1C0C80AA8(0, &qword_1EA1A54F8, (void (*)(uint64_t))type metadata accessor for PuzzleBarButtonItem);
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (void *)((char *)v34 - v9);
  uint64_t v40 = type metadata accessor for PuzzleBarButtonItem(0);
  uint64_t v11 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (uint64_t)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v38 = (uint64_t)v34 - v14;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  v34[1] = v5;
  swift_bridgeObjectRetain();
  long long v16 = *(_OWORD *)(a1 + 144);
  long long v49 = *(_OWORD *)(a1 + 128);
  v50[0] = v16;
  *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)(a1 + 153);
  long long v17 = *(_OWORD *)(a1 + 80);
  long long v45 = *(_OWORD *)(a1 + 64);
  long long v46 = v17;
  long long v18 = *(_OWORD *)(a1 + 112);
  long long v47 = *(_OWORD *)(a1 + 96);
  long long v48 = v18;
  long long v20 = *(_OWORD *)(a1 + 32);
  long long v19 = *(_OWORD *)(a1 + 48);
  uint64_t v35 = v11;
  id v21 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v22 = v15 - 1;
  uint64_t v23 = 176;
  long long v43 = v20;
  long long v44 = v19;
  unint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v36 = a1;
  uint64_t v37 = a4;
  while (1)
  {
    v41[6] = v49;
    v42[0] = v50[0];
    *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v50 + 9);
    v41[2] = v45;
    v41[3] = v46;
    v41[4] = v47;
    v41[5] = v48;
    v41[0] = v43;
    v41[1] = v44;
    sub_1C00DD354((uint64_t)&v43);
    sub_1C0C7C860((uint64_t)v41, v51, a4, v10);
    sub_1C00DD3FC((uint64_t)&v43);
    if ((*v21)(v10, 1, v40) != 1) {
      break;
    }
    sub_1C0C80AFC((uint64_t)v10, &qword_1EA1A54F8, (void (*)(uint64_t))type metadata accessor for PuzzleBarButtonItem);
    if (!v22) {
      goto LABEL_12;
    }
LABEL_11:
    long long v28 = *(_OWORD *)(a1 + v23 + 112);
    long long v49 = *(_OWORD *)(a1 + v23 + 96);
    v50[0] = v28;
    *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)(a1 + v23 + 121);
    long long v29 = *(_OWORD *)(a1 + v23 + 48);
    long long v45 = *(_OWORD *)(a1 + v23 + 32);
    long long v46 = v29;
    long long v30 = *(_OWORD *)(a1 + v23 + 80);
    long long v47 = *(_OWORD *)(a1 + v23 + 64);
    long long v48 = v30;
    long long v32 = *(_OWORD *)(a1 + v23);
    long long v31 = *(_OWORD *)(a1 + v23 + 16);
    v23 += 144;
    --v22;
    long long v43 = v32;
    long long v44 = v31;
  }
  uint64_t v25 = v38;
  sub_1C0C80A44((uint64_t)v10, v38);
  sub_1C0C80A44(v25, v39);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v24 = sub_1C0EE7A18(0, *(void *)(v24 + 16) + 1, 1, v24);
  }
  unint64_t v27 = *(void *)(v24 + 16);
  unint64_t v26 = *(void *)(v24 + 24);
  if (v27 >= v26 >> 1) {
    unint64_t v24 = sub_1C0EE7A18(v26 > 1, v27 + 1, 1, v24);
  }
  *(void *)(v24 + 16) = v27 + 1;
  sub_1C0C80A44(v39, v24+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v27);
  a1 = v36;
  a4 = v37;
  if (v22) {
    goto LABEL_11;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return v24;
}

id sub_1C0C801E4(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

id _s8NewsFeed28PuzzleComponentsViewProviderC5alert3for7handlerSo17UIAlertControllerCAA0C18AlertConfigurationV_yAA0c9ComponentL5EventVcSgtF_0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  if (!a1[3])
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    if (v7) {
      goto LABEL_3;
    }
LABEL_5:
    long long v10 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_5;
  }
LABEL_3:
  long long v10 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
LABEL_6:
  type metadata accessor for PuzzleAlertController();
  uint64_t v11 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v9, v10, 1);

  id v46 = v11;
  uint64_t v12 = (uint64_t *)&v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_handler];
  uint64_t v13 = *(void *)&v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_handler];
  *uint64_t v12 = a2;
  v12[1] = a3;
  sub_1BFC648F8(a2);
  sub_1BFC3E5C0(v13);
  if (v8)
  {
    uint64_t v45 = *(void *)(v8 + 16);
    if (v45)
    {
      uint64_t v43 = v8 + 32;
      uint64_t v14 = self;
      uint64_t v40 = &v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_commands];
      uint64_t v37 = &v11[OBJC_IVAR____TtC8NewsFeedP33_B3216C832986877D01E235539593604B21PuzzleAlertController_events];
      id v42 = (id)v14;
      swift_bridgeObjectRetain_n();
      uint64_t v15 = 0;
      uint64_t v38 = a2;
      uint64_t v39 = a3;
      uint64_t v16 = v6;
      uint64_t v17 = v5;
      uint64_t v44 = v16;
      uint64_t v41 = v5;
      while (1)
      {
        while (1)
        {
          uint64_t v18 = v43 + 40 * v15;
          uint64_t v20 = *(void *)v18;
          uint64_t v19 = *(void *)(v18 + 8);
          uint64_t v21 = *(void *)(v18 + 24);
          uint64_t v48 = *(unsigned __int8 *)(v18 + 32);
          uint64_t v22 = (void *)swift_allocObject();
          _OWORD v22[2] = a2;
          void v22[3] = a3;
          void v22[4] = v16;
          v22[5] = v17;
          uint64_t v47 = v20;
          v22[6] = v20;
          v22[7] = v19;
          uint64_t v23 = v21;
          uint64_t v24 = v19;
          sub_1BFC648F8(a2);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          if (v23)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v25 = (void *)sub_1C151E5EC();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v25 = 0;
          }
          aBlock[4] = sub_1C0C809B0;
          aBlock[5] = v22;
          aBlock[0] = MEMORY[0x1E4F143A8];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1BFD34E78;
          aBlock[3] = &block_descriptor_51;
          unint64_t v26 = _Block_copy(aBlock);
          swift_release();
          id v27 = objc_msgSend(v42, sel_actionWithTitle_style_handler_, v25, v48, v26);
          _Block_release(v26);

          objc_msgSend(v46, sel_addAction_, v27);
          if (v48 != 1) {
            break;
          }
          swift_bridgeObjectRelease();
          uint64_t v49 = v15 + 1;
LABEL_17:
          uint64_t v29 = sub_1C151E62C();
          uint64_t v31 = v30;
          long long v32 = (void *)sub_1C151E5EC();
          id v33 = objc_msgSend(self, sel_keyCommandWithInput_modifierFlags_action_, v32, 0, sel_didPressKey_);

          swift_beginAccess();
          id v34 = v33;
          MEMORY[0x1C18C66D0]();
          if (*(void *)((*(void *)v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v40 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            sub_1C151EC8C();
          sub_1C151ECEC();
          sub_1C151EBEC();
          swift_endAccess();
          swift_beginAccess();
          uint64_t v17 = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v50 = *(void *)v37;
          *(void *)uint64_t v37 = 0x8000000000000000;
          uint64_t v16 = v44;
          sub_1C1069590(v44, v41, v47, v24, v29, v31, isUniquelyReferenced_nonNull_native);
          *(void *)uint64_t v37 = v50;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v15 = v49;
          a2 = v38;
          a3 = v39;
          if (v49 == v45)
          {
LABEL_20:
            swift_bridgeObjectRelease_n();
            return v46;
          }
        }
        ++v15;
        char v28 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v28)
        {
          uint64_t v49 = v15;
          goto LABEL_17;
        }
        swift_bridgeObjectRelease_n();
        uint64_t v17 = v41;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v16 = v44;
        if (v15 == v45) {
          goto LABEL_20;
        }
      }
    }
  }
  return v46;
}

uint64_t sub_1C0C807CC(uint64_t a1)
{
  return sub_1C0C7E790(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.identifier.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.identifier.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.height.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PuzzleAccessoryViewType.updateHeight(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.barButtonItems(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.menuElement(with:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.menu(with:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.accessoryView(for:colorTheme:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.accessoryComponentView(for:colorTheme:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of PuzzleComponentsViewProviderType.alert(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t type metadata accessor for PuzzleComponentsViewProvider()
{
  return self;
}

uint64_t method lookup function for PuzzleComponentsViewProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleComponentsViewProvider);
}

uint64_t dispatch thunk of PuzzleComponentsViewProvider.__allocating_init(puzzleComponentsStyler:sceneProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for PuzzleAlertController()
{
  return self;
}

uint64_t type metadata accessor for AccessoryViewContainer()
{
  return self;
}

uint64_t sub_1C0C80960()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0C809B0()
{
  uint64_t v1 = *(uint64_t (**)(long long *))(v0 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v0 + 56);
    long long v5 = *(_OWORD *)(v0 + 32);
    uint64_t v6 = v3;
    uint64_t v7 = v2;
    return v1(&v5);
  }
  return result;
}

uint64_t sub_1C0C809FC@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0FE4C90(a1, v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

void *sub_1C0C80A20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C00DB948(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_1C0C80A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleBarButtonItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0C80AA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0C80AFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0C80AA8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0C80B58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C80BA4()
{
  return sub_1C0C7DAA4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t FormatFileReference.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1BFEC0618(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - v5;
  uint64_t v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v17, v2, a1, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *(void *)(a1 + 16);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_1BFEBF838((uint64_t)&v17[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
    return 0x6E693D657079747BLL;
  }
  else
  {
    sub_1BFEBE33C();
    uint64_t v23 = (uint64_t)&v17[*(int *)(v22 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    sub_1BFEC1150(v23, (uint64_t)v9);
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v27 = 0xD000000000000013;
    unint64_t v28 = 0x80000001C1603F20;
    sub_1BFEC03F4((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v6);
    uint64_t v24 = sub_1C151928C();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) == 1)
    {
      sub_1BFEC09E4((uint64_t)v6, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    }
    else
    {
      sub_1C151920C();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
    }
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C1515E2C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    unint64_t v21 = v27;
    sub_1BFEBF838((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v21;
}

uint64_t sub_1C0C8108C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0C81100(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C0C8116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C0C811DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t static FormatFileReference.== infix(_:_:)(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v68 = a1;
  id v69 = a2;
  uint64_t v67 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  id v61 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v63);
  id v59 = (void **)((char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  id v60 = (void **)((char *)&v56 - v9);
  MEMORY[0x1F4188790](v10);
  id v56 = (void **)((char *)&v56 - v11);
  MEMORY[0x1F4188790](v12);
  id v57 = (void **)((char *)&v56 - v13);
  uint64_t v14 = sub_1C1515FDC();
  uint64_t v65 = *(void *)(v14 - 8);
  uint64_t v66 = v14;
  MEMORY[0x1F4188790](v14);
  id v64 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a4;
  uint64_t v16 = type metadata accessor for FormatFileReference();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v56 - v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v62 = *(void *)(TupleTypeMetadata2 - 8);
  __n128 v24 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  unint64_t v26 = (char *)&v56 - v25;
  unint64_t v28 = (char *)&v56 + *(int *)(v27 + 48) - v25;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v29((char *)&v56 - v25, v68, v16, v24);
  ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v29)(v28, v69, v16);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    ((void (*)(char *, char *, uint64_t))v29)(v22, v26, v16);
    sub_1BFEBE33C();
    uint64_t v41 = *(int *)(v40 + 48);
    uint64_t v42 = (uint64_t)&v22[v41];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v43 = &v28[v41];
      uint64_t v44 = v64;
      uint64_t v45 = v65;
      id v46 = v28;
      uint64_t v47 = v66;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v46, v66);
      uint64_t v48 = v57;
      sub_1BFEC1150(v42, (uint64_t)v57);
      uint64_t v49 = (uint64_t)v43;
      uint64_t v50 = v56;
      sub_1BFEC1150(v49, (uint64_t)v56);
      char v51 = MEMORY[0x1C18BDA40](v22, v44);
      id v52 = *(void (**)(char *, uint64_t))(v45 + 8);
      v52(v22, v47);
      if (v51)
      {
        char v53 = static FormatMetadata.== infix(_:_:)(v48, v50);
        uint64_t v54 = (uint64_t)v50;
        char v39 = v53;
        sub_1BFEBF838(v54, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        sub_1BFEBF838((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
        v52(v64, v47);
        goto LABEL_14;
      }
      sub_1BFEBF838((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEBF838((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      v52(v64, v47);
LABEL_13:
      char v39 = 0;
      goto LABEL_14;
    }
    sub_1BFEBF838((uint64_t)&v22[v41], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v22, v66);
LABEL_8:
    char v39 = 0;
    uint64_t v17 = v62;
    uint64_t v16 = TupleTypeMetadata2;
    goto LABEL_14;
  }
  ((void (*)(char *, char *, uint64_t))v29)(v19, v26, v16);
  uint64_t v30 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v31 = (uint64_t)&v19[v30];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BFEBF838((uint64_t)&v19[v30], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v19, a3);
    goto LABEL_8;
  }
  long long v32 = &v28[v30];
  uint64_t v33 = v67;
  id v34 = v61;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v61, v28, a3);
  uint64_t v35 = v60;
  sub_1BFEC1150(v31, (uint64_t)v60);
  uint64_t v36 = (uint64_t)v32;
  uint64_t v37 = v59;
  sub_1BFEC1150(v36, (uint64_t)v59);
  char v38 = sub_1C151E5CC();
  id v69 = *(void (**)(char *, uint64_t))(v33 + 8);
  v69(v19, a3);
  if ((v38 & 1) == 0)
  {
    sub_1BFEBF838((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBF838((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    v69(v34, a3);
    goto LABEL_13;
  }
  char v39 = static FormatMetadata.== infix(_:_:)(v35, v37);
  sub_1BFEBF838((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBF838((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  v69(v34, a3);
LABEL_14:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v16);
  return v39 & 1;
}

uint64_t sub_1C0C81914(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  return static FormatFileReference.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t FormatFileReference.minVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatFileReference.metadata.getter(a1, (uint64_t)v7);
  uint64_t v8 = &v7[*(int *)(v5 + 28)];
  uint64_t v9 = sub_1C151928C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a2, v8, v9);
  return sub_1BFEBF838((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

uint64_t FormatFileReference.maxVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatFileReference.metadata.getter(a1, (uint64_t)v7);
  uint64_t v8 = &v7[*(int *)(v5 + 32)];
  uint64_t v9 = sub_1C151928C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a2, v8, v9);
  return sub_1BFEBF838((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

uint64_t sub_1C0C81B0C(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

_DWORD *sub_1C0C81B8C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v71 = *(void *)(v6 - 8);
    uint64_t v7 = *(void *)(v71 + 64);
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = v10 | 7;
    uint64_t v70 = (v10 | 7) + v7;
    uint64_t v12 = v10 + 16;
    size_t v13 = *(void *)(v9 + 64);
    size_t v14 = v13 + v10;
    uint64_t v15 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84)) {
      ++v13;
    }
    size_t __n = v13;
    size_t v74 = v13 + 7;
    unint64_t v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    uint64_t v68 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v69 = *(void *)(v68 + 64) + v11;
    if (v16 + (v69 & ~v11) <= v16 + (v70 & ~(v10 | 7))) {
      unint64_t v17 = v16 + (v70 & ~(v10 | 7));
    }
    else {
      unint64_t v17 = v16 + (v69 & ~v11);
    }
    unsigned int v18 = *((unsigned __int8 *)a1 + v17);
    unint64_t v73 = v17;
    uint64_t v19 = v17 & 0xFFFFFFF8;
    uint64_t v66 = v19;
    if (v18 >= 2 && v19 != 0) {
      unsigned int v18 = *a1 + 2;
    }
    uint64_t v21 = ~v11;
    uint64_t v22 = ~v10;
    uint64_t v72 = v10 + 16;
    uint64_t v63 = *(void *)(a3 + 16);
    uint64_t v64 = v6;
    if (v18 == 1)
    {
      (*(void (**)(_DWORD *, void))(v68 + 8))(a1, *(void *)(a3 + 16));
      uint64_t v23 = v69;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v71 + 8))(a1, v6);
      uint64_t v23 = v70;
    }
    unint64_t v24 = ((unint64_t)a1 + v23) & v21;
    swift_bridgeObjectRelease();
    unint64_t v25 = (v12 + v24) & v22;
    unint64_t v26 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v26(v25, v8);
    size_t v27 = (v14 + v25) & v22;
    v26(v27, v8);
    size_t v28 = (v14 + v27) & v22;
    uint64_t v67 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v67(v28, 1, v8)) {
      v26(v28, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v29 = *((unsigned __int8 *)a2 + v73);
    if (v66) {
      BOOL v30 = v29 >= 2;
    }
    else {
      BOOL v30 = 0;
    }
    if (v30) {
      unsigned int v29 = *a2 + 2;
    }
    if (v29 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v68 + 16))(a1, a2, v63);
      uint64_t v31 = (void *)(((unint64_t)a1 + v69) & v21);
      long long v32 = (void *)(((unint64_t)a2 + v69) & v21);
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      unint64_t v33 = ((unint64_t)v31 + v72) & v22;
      unint64_t v34 = ((unint64_t)v32 + v72) & v22;
      uint64_t v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v35(v33, v34, v8);
      unint64_t v36 = (v14 + v33) & v22;
      unint64_t v37 = (v14 + v34) & v22;
      v35(v36, v37, v8);
      char v38 = (void *)((v14 + v36) & v22);
      char v39 = (const void *)((v14 + v37) & v22);
      if (v67((size_t)v39, 1, v8))
      {
        memcpy(v38, v39, __n);
      }
      else
      {
        v35((unint64_t)v38, (unint64_t)v39, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
      }
      uint64_t v49 = (void *)(((unint64_t)v38 + v74) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v50 = (void *)(((unint64_t)v39 + v74) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v49 = *v50;
      char v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
      id v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v51 = *v52;
      char v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v53 = *v54;
      *(void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v55 = 1;
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v71 + 16))(a1, a2, v64);
      uint64_t v40 = (void *)(((unint64_t)a1 + v70) & v21);
      uint64_t v41 = (void *)(((unint64_t)a2 + v70) & v21);
      *uint64_t v40 = *v41;
      v40[1] = v41[1];
      unint64_t v42 = ((unint64_t)v40 + v72) & v22;
      unint64_t v43 = ((unint64_t)v41 + v72) & v22;
      uint64_t v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v44(v42, v43, v8);
      unint64_t v45 = (v14 + v42) & v22;
      unint64_t v46 = (v14 + v43) & v22;
      v44(v45, v46, v8);
      uint64_t v47 = (void *)((v14 + v45) & v22);
      uint64_t v48 = (const void *)((v14 + v46) & v22);
      if (v67((size_t)v48, 1, v8))
      {
        memcpy(v47, v48, __n);
      }
      else
      {
        v44((unint64_t)v47, (unint64_t)v48, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v47, 0, 1, v8);
      }
      char v55 = 0;
      id v56 = (void *)(((unint64_t)v47 + v74) & 0xFFFFFFFFFFFFFFF8);
      id v57 = (void *)(((unint64_t)v48 + v74) & 0xFFFFFFFFFFFFFFF8);
      *id v56 = *v57;
      uint64_t v58 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
      id v59 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v58 = *v59;
      id v60 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
      id v61 = (void *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8);
      *id v60 = *v61;
      *(void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
    }
    *((unsigned char *)a1 + v73) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0C821D8(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  uint64_t v6 = *(void *)(v49 + 64);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v9 | 7;
  uint64_t v11 = (v9 | 7) + v6;
  uint64_t v12 = v9 + 16;
  size_t v13 = *(void *)(v8 + 64);
  size_t v14 = v13 + v9;
  uint64_t v15 = (v13 + v9 + ((v13 + v9 + ((v9 + 16) & ~v9)) & ~v9)) & ~v9;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v13;
  }
  size_t __n = v13;
  size_t v53 = v13 + 7;
  unint64_t v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v18 = *(void *)(v17 + 64) + v10;
  if (v16 + (v18 & ~v10) <= v16 + (v11 & ~(v9 | 7))) {
    unint64_t v19 = v16 + (v11 & ~(v9 | 7));
  }
  else {
    unint64_t v19 = v16 + (v18 & ~v10);
  }
  unsigned int v20 = *((unsigned __int8 *)a2 + v19);
  unint64_t v52 = v19;
  uint64_t v21 = v19 & 0xFFFFFFF8;
  if (v20 >= 2 && v21 != 0) {
    unsigned int v20 = *a2 + 2;
  }
  uint64_t v23 = ~v10;
  uint64_t v24 = ~v9;
  if (v20 == 1)
  {
    (*(void (**)(uint64_t, _DWORD *))(v17 + 32))(a1, a2);
    unint64_t v25 = (_OWORD *)((v18 + a1) & v23);
    unint64_t v26 = (_OWORD *)(((unint64_t)a2 + v18) & v23);
    *unint64_t v25 = *v26;
    unint64_t v27 = ((unint64_t)v25 + v12) & v24;
    unint64_t v28 = ((unint64_t)v26 + v12) & v24;
    unsigned int v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
    v29(v27, v28, v7);
    unint64_t v30 = (v14 + v27) & v24;
    unint64_t v31 = (v14 + v28) & v24;
    v29(v30, v31, v7);
    long long v32 = (void *)((v14 + v30) & v24);
    unint64_t v33 = (const void *)((v14 + v31) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v33, 1, v7))
    {
      memcpy(v32, v33, __n);
      char v34 = 1;
    }
    else
    {
      v29((unint64_t)v32, (unint64_t)v33, v7);
      char v34 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
    }
  }
  else
  {
    (*(void (**)(uint64_t, _DWORD *, uint64_t))(v49 + 32))(a1, a2, v50);
    uint64_t v35 = (_OWORD *)((v11 + a1) & v23);
    unint64_t v36 = (_OWORD *)(((unint64_t)a2 + v11) & v23);
    *uint64_t v35 = *v36;
    unint64_t v37 = ((unint64_t)v35 + v12) & v24;
    unint64_t v38 = ((unint64_t)v36 + v12) & v24;
    char v39 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32);
    v39(v37, v38, v7);
    unint64_t v40 = (v14 + v37) & v24;
    unint64_t v41 = (v14 + v38) & v24;
    v39(v40, v41, v7);
    long long v32 = (void *)((v14 + v40) & v24);
    unint64_t v33 = (const void *)((v14 + v41) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v33, 1, v7))
    {
      memcpy(v32, v33, __n);
    }
    else
    {
      v39((unint64_t)v32, (unint64_t)v33, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
    }
    char v34 = 0;
  }
  uint64_t result = a1;
  unint64_t v43 = (void *)(((unint64_t)v32 + v53) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v44 = (void *)(((unint64_t)v33 + v53) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v43 = *v44;
  unint64_t v45 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v45 = *v46;
  uint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v47 = *v48;
  *(void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(a1 + v52) = v34;
  return result;
}

_DWORD *sub_1C0C82638(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v63 = *(void *)(v6 - 8);
    uint64_t v7 = *(void *)(v63 + 64);
    uint64_t v8 = sub_1C151928C();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = v10 | 7;
    uint64_t v62 = (v10 | 7) + v7;
    uint64_t v12 = v10 + 16;
    size_t v13 = *(void *)(v9 + 64);
    size_t v14 = v13 + v10;
    uint64_t v15 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
    if (!*(_DWORD *)(v9 + 84)) {
      ++v13;
    }
    size_t __n = v13;
    size_t v66 = v13 + 7;
    unint64_t v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    uint64_t v60 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v61 = *(void *)(v60 + 64) + v11;
    if (v16 + (v61 & ~v11) <= v16 + (v62 & ~(v10 | 7))) {
      unint64_t v17 = v16 + (v62 & ~(v10 | 7));
    }
    else {
      unint64_t v17 = v16 + (v61 & ~v11);
    }
    unsigned int v18 = *((unsigned __int8 *)a1 + v17);
    unint64_t v65 = v17;
    uint64_t v19 = v17 & 0xFFFFFFF8;
    uint64_t v58 = v19;
    if (v18 >= 2 && v19 != 0) {
      unsigned int v18 = *a1 + 2;
    }
    uint64_t v21 = ~v11;
    uint64_t v22 = ~v10;
    uint64_t v64 = v10 + 16;
    uint64_t v55 = *(void *)(a3 + 16);
    uint64_t v56 = v6;
    if (v18 == 1)
    {
      (*(void (**)(_DWORD *, void))(v60 + 8))(a1, *(void *)(a3 + 16));
      uint64_t v23 = v61;
    }
    else
    {
      (*(void (**)(_DWORD *, uint64_t))(v63 + 8))(a1, v6);
      uint64_t v23 = v62;
    }
    unint64_t v24 = ((unint64_t)a1 + v23) & v21;
    swift_bridgeObjectRelease();
    unint64_t v25 = (v12 + v24) & v22;
    unint64_t v26 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
    v26(v25, v8);
    size_t v27 = (v14 + v25) & v22;
    v26(v27, v8);
    size_t v28 = (v14 + v27) & v22;
    id v59 = *(unsigned int (**)(size_t, uint64_t, uint64_t))(v9 + 48);
    if (!v59(v28, 1, v8)) {
      v26(v28, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v29 = *((unsigned __int8 *)a2 + v65);
    if (v58) {
      BOOL v30 = v29 >= 2;
    }
    else {
      BOOL v30 = 0;
    }
    if (v30) {
      unsigned int v29 = *a2 + 2;
    }
    if (v29 == 1)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v60 + 32))(a1, a2, v55);
      unint64_t v31 = (_OWORD *)(((unint64_t)a1 + v61) & v21);
      long long v32 = (_OWORD *)(((unint64_t)a2 + v61) & v21);
      *unint64_t v31 = *v32;
      unint64_t v33 = ((unint64_t)v31 + v64) & v22;
      unint64_t v34 = ((unint64_t)v32 + v64) & v22;
      uint64_t v35 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v35(v33, v34, v8);
      unint64_t v36 = (v14 + v33) & v22;
      unint64_t v37 = (v14 + v34) & v22;
      v35(v36, v37, v8);
      unint64_t v38 = (void *)((v14 + v36) & v22);
      char v39 = (const void *)((v14 + v37) & v22);
      if (v59((size_t)v39, 1, v8))
      {
        memcpy(v38, v39, __n);
        char v40 = 1;
      }
      else
      {
        v35((unint64_t)v38, (unint64_t)v39, v8);
        char v40 = 1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
      }
    }
    else
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v63 + 32))(a1, a2, v56);
      unint64_t v41 = (_OWORD *)(((unint64_t)a1 + v62) & v21);
      unint64_t v42 = (_OWORD *)(((unint64_t)a2 + v62) & v21);
      *unint64_t v41 = *v42;
      unint64_t v43 = ((unint64_t)v41 + v64) & v22;
      unint64_t v44 = ((unint64_t)v42 + v64) & v22;
      unint64_t v45 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
      v45(v43, v44, v8);
      unint64_t v46 = (v14 + v43) & v22;
      unint64_t v47 = (v14 + v44) & v22;
      v45(v46, v47, v8);
      unint64_t v38 = (void *)((v14 + v46) & v22);
      char v39 = (const void *)((v14 + v47) & v22);
      if (v59((size_t)v39, 1, v8))
      {
        memcpy(v38, v39, __n);
      }
      else
      {
        v45((unint64_t)v38, (unint64_t)v39, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0, 1, v8);
      }
      char v40 = 0;
    }
    uint64_t v48 = (void *)(((unint64_t)v38 + v66) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v49 = (void *)(((unint64_t)v39 + v66) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v48 = *v49;
    uint64_t v50 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v50 = *v51;
    unint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    size_t v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v52 = *v53;
    *(void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)a1 + v65) = v40;
  }
  return a1;
}

uint64_t sub_1C0C82C04(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v7 = *(void *)(sub_1C151928C() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = ((v8 | 7) + v6) & ~(v8 | 7);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v12 = (v11 + v8 + ((v11 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  BOOL v13 = *(_DWORD *)(v7 + 84) == 0;
  uint64_t v14 = (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9) & ~v9;
  if (v13) {
    uint64_t v15 = v11 + 1;
  }
  else {
    uint64_t v15 = v11;
  }
  unint64_t v16 = ((((((((v15 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v17 = v16 + v10;
  unint64_t v18 = v16 + v14;
  if (v18 <= v17) {
    unint64_t v18 = v17;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_26;
  }
  uint64_t v19 = v18 | 1;
  char v20 = 8 * (v18 | 1);
  if ((v18 | 1) <= 3)
  {
    unsigned int v23 = (a2 + ~(-1 << v20) - 254) >> v20;
    if (v23 > 0xFFFE)
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_26;
      }
      goto LABEL_17;
    }
    if (v23 > 0xFE)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_26;
      }
      goto LABEL_17;
    }
    if (!v23)
    {
LABEL_26:
      unsigned int v26 = *((unsigned __int8 *)a1 + v18);
      if (v26 >= 2) {
        return (v26 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_26;
  }
LABEL_17:
  int v24 = (v21 - 1) << v20;
  if (v19 > 3)
  {
    int v24 = 0;
    LODWORD(v19) = 4;
  }
  switch((int)v19)
  {
    case 2:
      int v25 = *a1;
      break;
    case 3:
      int v25 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      break;
    case 4:
      int v25 = *(_DWORD *)a1;
      break;
    default:
      int v25 = *(unsigned __int8 *)a1;
      break;
  }
  return (v25 | v24) + 255;
}

void sub_1C0C82E28(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v9 = *(void *)(sub_1C151928C() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = ((v10 | 7) + v8) & ~(v10 | 7);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = (v13 + v10 + ((v13 + v10 + ((v10 + 16) & ~v10)) & ~v10)) & ~v10;
  uint64_t v15 = (*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11) & ~v11;
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v16 = v13;
  }
  else {
    uint64_t v16 = v13 + 1;
  }
  unint64_t v17 = ((((((((v16 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v18 = v17 + v12;
  unint64_t v19 = v17 + v15;
  if (v19 <= v18) {
    unint64_t v19 = v18;
  }
  size_t v20 = v19 | 1;
  if (a3 < 0xFF)
  {
    int v21 = 0;
  }
  else if (v20 <= 3)
  {
    unsigned int v24 = (a3 + ~(-1 << (8 * v20)) - 254) >> (8 * v20);
    if (v24 > 0xFFFE)
    {
      int v21 = 4;
    }
    else if (v24 >= 0xFF)
    {
      int v21 = 2;
    }
    else
    {
      int v21 = v24 != 0;
    }
  }
  else
  {
    int v21 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v22 = a2 - 255;
    if (v20 < 4)
    {
      int v23 = (v22 >> (8 * v20)) + 1;
      int v25 = v22 & ~(-1 << (8 * v20));
      bzero(a1, v20);
      if (v20 == 1)
      {
        *a1 = v25;
      }
      else
      {
        *(_WORD *)a1 = v25;
        a1[2] = BYTE2(v25);
      }
    }
    else
    {
      bzero(a1, v19 | 1);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        a1[v20] = v23;
        break;
      case 2:
        *(_WORD *)&a1[v20] = v23;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C0C830B8);
      case 4:
        *(_DWORD *)&a1[v20] = v23;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v21)
    {
      case 1:
        a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      case 2:
        *(_WORD *)&a1[v20] = 0;
        goto LABEL_23;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v20] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      default:
LABEL_23:
        if (a2) {
LABEL_24:
        }
          a1[v19] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C0C830E0(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v5 = *(void *)(sub_1C151928C() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v8 = ((v6 | 7) + v4) & ~(v6 | 7);
  uint64_t v9 = *(void *)(v5 + 64);
  uint64_t v10 = (v9 + v6 + ((v9 + v6 + ((v6 + 16) & ~v6)) & ~v6)) & ~v6;
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v11 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v11 = v9 + 1;
  }
  unint64_t v12 = ((((((((v11 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v13 = v12 + v8;
  unint64_t v14 = v12 + ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + v7) & ~v7);
  if (v14 <= v13) {
    unint64_t v14 = v13;
  }
  uint64_t result = *((unsigned __int8 *)a1 + v14);
  uint64_t v16 = v14 & 0xFFFFFFF8;
  if (result >= 2 && v16 != 0) {
    return (*a1 + 2);
  }
  return result;
}

void sub_1C0C8321C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(sub_1C1515FDC() - 8) + 64);
  uint64_t v7 = *(void *)(sub_1C151928C() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = ((v8 | 7) + v6) & ~(v8 | 7);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v12 = (v11 + v8 + ((v11 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v13 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  unint64_t v14 = ((((((((v13 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  size_t v15 = v14 + v10;
  size_t v16 = v14 + ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9) & ~v9);
  if (v16 <= v15) {
    size_t v17 = v15;
  }
  else {
    size_t v17 = v16;
  }
  if (a2 > 1)
  {
    *((unsigned char *)a1 + v17) = 2;
    bzero(a1, v17);
    *a1 = a2 - 2;
  }
  else
  {
    *((unsigned char *)a1 + v17) = a2;
  }
}

uint64_t sub_1C0C83390()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0C833AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151EE9C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C151EE8C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C0C8B578(a1, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C151EDBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C0C8356C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151EE9C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C151EE8C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C0C8B578(a1, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C151EDBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_1BFE6CA24(0, &qword_1EA1A28E8, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBB718]);
  return swift_task_create();
}

Swift::Void __swiftcall PuzzleEmbedViewController.prewarm()()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_prewarm);
}

Swift::Void __swiftcall PuzzleEmbedViewController.setInputAccessoryView(_:)(UIView_optional *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  sub_1BFC39268(0, &qword_1EA1A5530);
  uint64_t v4 = (void *)sub_1C151EBAC();
  uint64_t v5 = (void *)sub_1C151EBAC();
  objc_msgSend(v3, sel_setShortcutsBarWithLeadingGroups_trailingGroups_, v4, v5);

  objc_msgSend(v3, sel_setInputAccessoryView_, a1);
}

Swift::Void __swiftcall PuzzleEmbedViewController.refresh()()
{
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager), sel_refresh);
}

Swift::Void __swiftcall PuzzleEmbedViewController.prepareForReuse()()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v2 = *v1;
  *uint64_t v1 = 0;
  v1[1] = 0;
  sub_1BFC3E5C0(v2);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
}

void PuzzleEmbedViewController.add(handler:name:)(uint64_t a1)
{
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_messageHandlerManager);
  id v4 = (id)sub_1C151E5EC();
  objc_msgSend(v3, sel_addMessageHandler_name_, a1, v4);
  swift_unknownObjectRelease();
}

uint64_t sub_1C0C83944(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C0C8396C(uint64_t a1, double a2)
{
  id v3 = *(void (**)(uint64_t, double))(a1 + 32);
  uint64_t v4 = swift_retain();
  v3(v4, a2);
  return swift_release();
}

void sub_1C0C839C0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id PuzzleEmbedViewController.onReuse.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onReuse);
}

uint64_t PuzzleEmbedViewController.reuseIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PuzzleEmbedViewController.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PuzzleEmbedViewController.reuseIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t PuzzleEmbedViewController.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v1);
}

uint64_t PuzzleEmbedViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*PuzzleEmbedViewController.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019ACB8;
}

double PuzzleEmbedViewController.contentFrame.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t PuzzleEmbedViewController.contentFrame.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = (double *)(v4 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame);
  uint64_t result = swift_beginAccess();
  double *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  uint64_t v9[3] = a4;
  return result;
}

uint64_t (*PuzzleEmbedViewController.contentFrame.modify())()
{
  return j_j__swift_endAccess;
}

double PuzzleEmbedViewController.viewportSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t PuzzleEmbedViewController.viewportSize.setter(double a1, double a2)
{
  uint64_t v5 = (double *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize);
  uint64_t result = swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PuzzleEmbedViewController.viewportSize.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0C83EA0@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  id v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1BFC81770;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BFC648F8(v4);
}

uint64_t sub_1C0C83F40(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C0C8B50C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1BFC648F8(v3);
  return sub_1BFC3E5C0(v8);
}

uint64_t PuzzleEmbedViewController.onEmbedInteraction.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1BFC648F8(*v1);
  return v2;
}

uint64_t PuzzleEmbedViewController.onEmbedInteraction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1BFC3E5C0(v6);
}

uint64_t (*PuzzleEmbedViewController.onEmbedInteraction.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C0C84120@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment;
  int v5 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment);
  if (v5 == 8)
  {
    if (qword_1EB896B90 != -1) {
      swift_once();
    }
    sub_1C0C8B534(&qword_1EA1A5620);
    uint64_t result = sub_1C1516FBC();
    LOBYTE(v5) = v6;
    *(unsigned char *)(v1 + v4) = v6;
  }
  *a1 = v5;
  return result;
}

Swift::Void __swiftcall PuzzleEmbedViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v34.receiver = v0;
  v34.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v34, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, sel_setClipsToBounds_, 1);

  objc_msgSend(v1, sel_setEdgesForExtendedLayout_, 0);
  id v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  int v5 = v4;
  objc_msgSend(v4, sel_setAutoresizingMask_, 0);

  char v6 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
  objc_msgSend(v1, sel_addChildViewController_, v6);
  id v7 = objc_msgSend(v1, sel_view);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v6, sel_view);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = v9;
  objc_msgSend(v8, sel_addSubview_, v9);

  objc_msgSend(v6, sel_didMoveToParentViewController_, v1);
  id v11 = objc_msgSend(v6, sel_view);
  if (!v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = v11;
  objc_msgSend(v11, sel_setHidden_, 1);

  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView];
  objc_msgSend(v13, sel_setHidden_, 1);
  objc_msgSend(v13, sel_setAutoresizingMask_, 18);
  id v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  size_t v15 = v14;
  objc_msgSend(v14, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator]);

  id v16 = objc_msgSend(v1, sel_view);
  if (v16)
  {
    size_t v17 = v16;
    objc_msgSend(v16, sel_addSubview_, v13);

    objc_msgSend(v6, sel_setTextInputTraits_, *(void *)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_textInputTraits]);
    sub_1C0C84704();
    unint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_actionProvider];
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    long long v32 = sub_1C0C8893C;
    uint64_t v33 = v19;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v29 = 1107296256;
    BOOL v30 = sub_1C0C84B9C;
    unint64_t v31 = &block_descriptor_52;
    size_t v20 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v18, sel_onAction_, v20);
    _Block_release(v20);
    int v21 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager];
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    long long v32 = sub_1C0C88944;
    uint64_t v33 = v22;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v29 = 1107296256;
    BOOL v30 = sub_1C0C8396C;
    unint64_t v31 = &block_descriptor_4_0;
    int v23 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v21, sel_onPresentable_, v23);
    _Block_release(v23);
    unsigned int v24 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorProvider];
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    long long v32 = sub_1C0C8894C;
    uint64_t v33 = v25;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v29 = 1107296256;
    BOOL v30 = sub_1C0C839C0;
    unint64_t v31 = &block_descriptor_8_0;
    unsigned int v26 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v24, sel_onError_, v26);
    _Block_release(v26);
    LOBYTE(aBlock) = 0;
    swift_retain();
    sub_1C15181EC();
    swift_release();
    id v27 = objc_msgSend(self, sel_defaultCenter);
    objc_msgSend(v27, sel_addObserver_selector_name_object_, v1, sel_keyboardWillChangeFrameWithNotification_, *MEMORY[0x1E4FB2C48], 0);

    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1C0C84704()
{
  CFTimeInterval v1 = CACurrentMediaTime();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  uint64_t v3 = v0;
  id v4 = sub_1C15198AC();
  os_log_type_t v5 = sub_1C151F38C();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = v7;
    *(_DWORD *)char v6 = 136315138;
    uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
    unint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
    swift_bridgeObjectRetain();
    sub_1BFDA76EC(v8, v9, &v17);
    sub_1C151FE1C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v4, v5, "Puzzle did start preparing for load, puzzle=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v7, -1, -1);
    MEMORY[0x1C18C9B00](v6, -1, -1);
  }
  else
  {
  }
  LOBYTE(v17) = 1;
  sub_1C0C8B738();
  swift_allocObject();
  swift_retain();
  sub_1C1518B6C();
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(CFTimeInterval *)(v11 + 24) = v1;
  sub_1C1518B8C();
  swift_release();
  swift_release();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(CFTimeInterval *)(v13 + 24) = v1;
  sub_1C1518B7C();
  swift_release();
  swift_release();
  sub_1C15181DC();
  swift_release();
  swift_release();
  LOBYTE(v17) = 2;
  swift_allocObject();
  swift_retain();
  sub_1C1518B6C();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(CFTimeInterval *)(v15 + 24) = v1;
  sub_1C1518B8C();
  swift_release();
  swift_release();
  sub_1C15181DC();
  swift_release();
  return swift_release();
}

void sub_1C0C84AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    os_log_type_t v5 = (void *)v4;
    uint64_t v6 = v4 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1C18C9C60](v6))
    {
      uint64_t v7 = *(void *)(v6 + 8);

      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, ObjectType, v7);
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1C0C84B9C(uint64_t a1)
{
  CFTimeInterval v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1C0C84BFC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    swift_retain();

    sub_1C15181EC();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v1);
  if (v4)
  {
    os_log_type_t v5 = (void *)v4;
    uint64_t v6 = v4 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1C18C9C60](v6))
    {
      uint64_t v7 = *(void *)(v6 + 8);

      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1C0C84D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  uint64_t v3 = (void *)sub_1C1515D2C();
  id v4 = objc_msgSend(v3, sel_code);

  if (v4 == (id)2)
  {
    swift_beginAccess();
    uint64_t v5 = MEMORY[0x1C18C9C60](v2);
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      uint64_t v7 = v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
      swift_beginAccess();
      if (MEMORY[0x1C18C9C60](v7))
      {
        uint64_t v8 = *(void *)(v7 + 8);

        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v2);
  if (result)
  {
    uint64_t v11 = (void *)result;
    swift_retain();

    sub_1C15181EC();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall PuzzleEmbedViewController.viewDidLayoutSubviews()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C00845F4(0, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v47 - v3;
  uint64_t v5 = type metadata accessor for PuzzleData();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  unint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48.receiver = v0;
  v48.super_class = ObjectType;
  objc_msgSendSuper2(&v48, sel_viewDidLayoutSubviews, v7);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
  id v11 = objc_msgSend(v10, sel_view);
  if (!v11)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v12 = v11;
  id v13 = objc_msgSend(v0, sel_view);
  if (!v13)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_bounds);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;

  objc_msgSend(v12, sel_setFrame_, v16, v18, v20, v22);
  uint64_t v23 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  sub_1C0C88954(v23, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C0C8B578((uint64_t)v4, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData);
  }
  else
  {
    sub_1C0C8ABE8((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleData);
    id v24 = sub_1C0C85234((uint64_t)&v9[*(int *)(v5 + 20)]);
    objc_msgSend(v10, sel_setConfiguration_, v24);

    sub_1C0C8ADCC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  }
  uint64_t v25 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView];
  id v26 = objc_msgSend(v0, sel_view);
  if (!v26) {
    goto LABEL_11;
  }
  id v27 = v26;
  objc_msgSend(v26, sel_bounds);
  double v29 = v28;
  double v31 = v30;
  double v33 = v32;
  double v35 = v34;

  objc_msgSend(v25, sel_setFrame_, v29, v31, v33, v35);
  unint64_t v36 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator];
  id v37 = objc_msgSend(v0, sel_view);
  if (v37)
  {
    unint64_t v38 = v37;
    objc_msgSend(v37, sel_bounds);
    double v40 = v39;
    double v42 = v41;
    double v44 = v43;
    double v46 = v45;

    objc_msgSend(v36, sel_setFrame_, v40, v42, v44, v46);
    return;
  }
LABEL_12:
  __break(1u);
}

id sub_1C0C85234(uint64_t a1)
{
  uint64_t v41 = a1;
  sub_1C00845F4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v37 - v3;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C15164AC();
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(self, sel_sharedAccount);
  id v13 = objc_msgSend(v12, sel_contentStoreFrontID);

  if (v13)
  {
    uint64_t v14 = sub_1C151E62C();
    uint64_t v39 = v15;
    uint64_t v40 = v14;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  sub_1C151644C();
  sub_1C0C84120(&v42);
  uint64_t v16 = 8 * v42;
  uint64_t v38 = *(void *)&aProductistagin_0[v16];
  uint64_t v17 = *(void *)&aOn_2[v16];
  id v18 = objc_msgSend(self, sel_sharedApplication);
  id v19 = objc_msgSend(v18, sel_preferredContentSizeCategory);

  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  uint64_t v23 = (double *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize);
  swift_beginAccess();
  double v24 = *v23;
  double v25 = v23[1];
  id v26 = (double *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame);
  swift_beginAccess();
  double v27 = *v26;
  double v28 = v26[1];
  double v29 = v26[2];
  double v30 = v26[3];
  uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v41, v5);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  double v32 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration);
  id v33 = objc_allocWithZone(MEMORY[0x1E4F9F8E0]);
  swift_getObjectType();
  swift_unknownObjectRetain();
  id v34 = v32;
  id v35 = sub_1C0C8AEE8(v24, v25, v27, v28, v29, v30, v40, v39, (uint64_t)v11, v38, v17, v20, v22, 0, v31, (uint64_t)v8, (uint64_t)v4, (uint64_t)v34, 0,
          v33);
  swift_unknownObjectRelease();

  return v35;
}

id PuzzleEmbedViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  v8.receiver = v3;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  return objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager], sel_setPresentationState_, 2);
}

id PuzzleEmbedViewController.inputAccessoryView.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_inputAccessoryView);
  return v1;
}

Swift::Void __swiftcall PuzzleEmbedViewController.prepare(contentFrame:isResizable:)(__C::CGRect contentFrame, Swift::Bool isResizable)
{
  CGFloat height = contentFrame.size.height;
  CGFloat width = contentFrame.size.width;
  CGFloat y = contentFrame.origin.y;
  CGFloat x = contentFrame.origin.x;
  objc_super v8 = (CGFloat *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame);
  swift_beginAccess();
  *objc_super v8 = x;
  v8[1] = y;
  v8[2] = width;
  _OWORD v8[3] = height;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable) = isResizable;
}

uint64_t PuzzleEmbedViewController.populate(with:puzzleLaunchAction:contentFrame:viewportSize:location:feedConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  swift_getObjectType();
  return sub_1C0C889E8(a1, a2, a3, a4, v10, a5, a6, a7, a8, a9, a10);
}

void sub_1C0C858FC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
    swift_beginAccess();
    uint64_t v5 = (void (*)(void))*v4;
    sub_1BFC648F8(*v4);

    if (v5)
    {
      swift_beginAccess();
      uint64_t v6 = MEMORY[0x1C18C9C60](v1);
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        uint64_t v8 = v6 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
        swift_beginAccess();
        if (MEMORY[0x1C18C9C60](v8))
        {
          uint64_t v9 = *(void *)(v8 + 8);

          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
          swift_unknownObjectRelease();
        }
        else
        {
        }
      }
      v5();
      sub_1BFC3E5C0((uint64_t)v5);
    }
  }
}

Swift::Void __swiftcall PuzzleEmbedViewController.updateWindowSceneTitle()()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_window);

    if (v3)
    {
      id v4 = objc_msgSend(v3, sel_windowScene);

      if (v4)
      {
        sub_1C0C85B30();
        if (v5)
        {
          id v6 = (id)sub_1C151E5EC();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v6 = 0;
        }
        objc_msgSend(v4, sel_setTitle_, v6);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C0C85B30()
{
  uint64_t v100 = sub_1C15164AC();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  int64x2_t v101 = (char *)&v92 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00845F4(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v92 - v3;
  uint64_t v5 = sub_1C151631C();
  unint64_t v103 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v92 - v9;
  uint64_t v11 = sub_1C15154CC();
  uint64_t v102 = *(void **)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v0;
  uint64_t v15 = (void **)(v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData);
  swift_beginAccess();
  uint64_t v16 = type metadata accessor for PuzzleData();
  uint64_t v17 = 0;
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16)) {
    return v17;
  }
  uint64_t v94 = v14;
  uint64_t v95 = v7;
  uint64_t v93 = v4;
  uint64_t v92 = v10;
  int64x2_t v96 = v13;
  uint64_t v97 = v11;
  id v18 = v101;
  id v19 = *v15;
  swift_getObjectType();
  id v20 = objc_msgSend(objc_msgSend((id)swift_unknownObjectRetain(), sel_puzzleType), sel_nameCompact);
  swift_unknownObjectRelease();
  uint64_t v98 = v19;
  if (v20)
  {
    uint64_t v21 = sub_1C151E62C();
    unint64_t v23 = v22;

    uint64_t v104 = (void *)v21;
    unint64_t v105 = v23;
    double v24 = v96;
    sub_1C151545C();
    sub_1BFF27ECC();
    uint64_t v25 = sub_1C151FE9C();
    unint64_t v27 = v26;
    double v28 = v102;
    ((void (*)(char *, uint64_t))v102[1])(v24, v97);
    swift_bridgeObjectRelease();
    uint64_t v29 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0) {
      uint64_t v29 = v25 & 0xFFFFFFFFFFFFLL;
    }
    double v30 = v95;
    if (v29)
    {
      uint64_t v104 = (void *)v25;
      unint64_t v105 = v27;
      sub_1C151E80C();
      uint64_t v31 = v104;
      double v32 = (char *)v105;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = 0;
      double v32 = 0;
    }
    id v19 = v98;
  }
  else
  {
    uint64_t v31 = 0;
    double v32 = 0;
    double v28 = v102;
    double v30 = v95;
  }
  uint64_t v33 = v94;
  uint64_t v34 = FCPuzzleProviding.puzzleTypeTraits.getter();
  int64x2_t v101 = v32;
  uint64_t v102 = v31;
  if ((v34 & 0x10000) != 0
    && (uint64_t v35 = *(void *)(v33
                        + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDifficultyDescriptionProvider
                        + 24),
        uint64_t v36 = *(void *)(v33
                        + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDifficultyDescriptionProvider
                        + 32),
        __swift_project_boxed_opaque_existential_1((void *)(v33 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDifficultyDescriptionProvider), v35), uint64_t v37 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 8))(v19, v35, v36), v38))
  {
    uint64_t v39 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0) {
      uint64_t v39 = v37 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v40 = v5;
    uint64_t v41 = (uint64_t)v93;
    if (v39)
    {
      uint64_t v104 = (void *)v37;
      unint64_t v105 = v38;
      sub_1C151E80C();
      unint64_t v42 = v105;
      uint64_t v95 = (char *)v104;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v95 = 0;
      unint64_t v42 = 0;
    }
    unint64_t v43 = v103;
  }
  else
  {
    uint64_t v95 = 0;
    unint64_t v42 = 0;
    uint64_t v40 = v5;
    unint64_t v43 = v103;
    uint64_t v41 = (uint64_t)v93;
  }
  id v44 = objc_msgSend(v19, sel_publishDate);
  if (!v44)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v41, 1, 1, v40);
    goto LABEL_25;
  }
  double v45 = v44;
  sub_1C15162BC();

  double v46 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
  v46(v41, v30, v40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v40) == 1)
  {
LABEL_25:
    sub_1C0C8B578(v41, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    uint64_t v54 = 0;
    uint64_t v56 = 0;
    goto LABEL_26;
  }
  uint64_t v47 = v18;
  objc_super v48 = v92;
  v46((uint64_t)v92, (char *)v41, v40);
  uint64_t v49 = v40;
  if (qword_1EA194880 != -1) {
    swift_once();
  }
  id v50 = (id)qword_1EA1A5520;
  char v51 = (void *)sub_1C151621C();
  id v52 = objc_msgSend(v50, sel_stringFromDate_, v51);

  size_t v53 = v48;
  uint64_t v54 = sub_1C151E62C();
  uint64_t v56 = v55;

  (*(void (**)(char *, uint64_t))(v103 + 8))(v53, v49);
  id v18 = v47;
LABEL_26:
  id v57 = objc_msgSend(v19, sel_subtitle);
  if (v57)
  {
    unint64_t v103 = v42;
    uint64_t v58 = sub_1C151E62C();
    unint64_t v60 = v59;

    uint64_t v104 = (void *)v58;
    unint64_t v105 = v60;
    uint64_t v61 = v96;
    sub_1C151545C();
    sub_1BFF27ECC();
    uint64_t v62 = sub_1C151FE9C();
    unint64_t v64 = v63;
    ((void (*)(char *, uint64_t))v28[1])(v61, v97);
    swift_bridgeObjectRelease();
    uint64_t v65 = HIBYTE(v64) & 0xF;
    if ((v64 & 0x2000000000000000) == 0) {
      uint64_t v65 = v62 & 0xFFFFFFFFFFFFLL;
    }
    if (v65)
    {
      sub_1C151644C();
      uint64_t v66 = sub_1C151640C();
      if (v67) {
        uint64_t v68 = v66;
      }
      else {
        uint64_t v68 = 0;
      }
      uint64_t v69 = v18;
      if (v67) {
        unint64_t v70 = v67;
      }
      else {
        unint64_t v70 = 0xE000000000000000;
      }
      sub_1C15163FC();
      uint64_t v104 = (void *)v68;
      unint64_t v105 = v70;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      id v57 = v104;
      unint64_t v71 = v105;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v69, v100);
    }
    else
    {
      swift_bridgeObjectRelease();
      id v57 = 0;
      unint64_t v71 = 0;
    }
    unint64_t v42 = v103;
  }
  else
  {
    unint64_t v71 = 0;
  }
  unint64_t v73 = v101;
  uint64_t v72 = v102;
  long long v106 = v102;
  uint64_t v107 = v101;
  size_t v74 = v95;
  long long v108 = v95;
  unint64_t v109 = v42;
  uint64_t v110 = v54;
  uint64_t v111 = v56;
  id v112 = v57;
  unint64_t v113 = v71;
  if (v101)
  {
    swift_bridgeObjectRetain();
    id v75 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v77 = v75[2];
    unint64_t v76 = v75[3];
    if (v77 >= v76 >> 1) {
      id v75 = sub_1BFEF9B68((void *)(v76 > 1), v77 + 1, 1, v75);
    }
    v75[2] = v77 + 1;
    id v78 = &v75[2 * v77];
    v78[4] = v72;
    v78[5] = v73;
    if (!v42) {
      goto LABEL_51;
    }
    goto LABEL_46;
  }
  id v75 = (void *)MEMORY[0x1E4FBC860];
  if (v42)
  {
LABEL_46:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v75 = sub_1BFEF9B68(0, v75[2] + 1, 1, v75);
    }
    unint64_t v80 = v75[2];
    unint64_t v79 = v75[3];
    if (v80 >= v79 >> 1) {
      id v75 = sub_1BFEF9B68((void *)(v79 > 1), v80 + 1, 1, v75);
    }
    v75[2] = v80 + 1;
    id v81 = &v75[2 * v80];
    v81[4] = v74;
    v81[5] = v42;
    uint64_t v54 = v110;
    uint64_t v56 = v111;
  }
LABEL_51:
  if (v56)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v75 = sub_1BFEF9B68(0, v75[2] + 1, 1, v75);
    }
    unint64_t v83 = v75[2];
    unint64_t v82 = v75[3];
    if (v83 >= v82 >> 1) {
      id v75 = sub_1BFEF9B68((void *)(v82 > 1), v83 + 1, 1, v75);
    }
    v75[2] = v83 + 1;
    uint64_t v84 = &v75[2 * v83];
    v84[4] = v54;
    v84[5] = v56;
  }
  unint64_t v85 = v113;
  if (v113)
  {
    id v86 = v112;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v75 = sub_1BFEF9B68(0, v75[2] + 1, 1, v75);
    }
    unint64_t v88 = v75[2];
    unint64_t v87 = v75[3];
    if (v88 >= v87 >> 1) {
      id v75 = sub_1BFEF9B68((void *)(v87 > 1), v88 + 1, 1, v75);
    }
    v75[2] = v88 + 1;
    uint64_t v89 = &v75[2 * v88];
    v89[4] = v86;
    v89[5] = v85;
  }
  uint64_t v90 = MEMORY[0x1E4FBB1A0];
  sub_1BFE6CA24(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  uint64_t v104 = v75;
  sub_1BFE6CA24(0, (unint64_t *)&qword_1EB879F20, v90, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v17 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v17;
}

id PuzzleEmbedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PuzzleEmbedViewController.init(nibName:bundle:)()
{
}

id PuzzleEmbedViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0C868A4()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C0C86900(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C0C86964())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0C869C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  *(_WORD *)(v8 + 106) = a8;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 128) = a4;
  *(void *)(v8 + 136) = a5;
  sub_1C00845F4(0, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, MEMORY[0x1E4FBB718]);
  *(void *)(v8 + 160) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for PuzzleData();
  *(void *)(v8 + 168) = v9;
  *(void *)(v8 + 176) = *(void *)(v9 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  sub_1C151EE6C();
  *(void *)(v8 + 192) = sub_1C151EE5C();
  uint64_t v11 = sub_1C151EDBC();
  *(void *)(v8 + 200) = v11;
  *(void *)(v8 + 208) = v10;
  return MEMORY[0x1F4188298](sub_1C0C86B1C, v11, v10);
}

uint64_t sub_1C0C86B1C()
{
  __int16 v1 = *(_WORD *)(v0 + 106);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 144);
  *(_WORD *)(v0 + 104) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C0C86BDC;
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 136);
  return sub_1C02A4B3C(v3, v4, v0 + 88);
}

uint64_t sub_1C0C86BDC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v5 = sub_1C0C86EC8;
  }
  else {
    uint64_t v5 = sub_1C0C86CF0;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C0C86CF0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[16];
  swift_release();
  sub_1BFDF8C74(v1, v4, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  uint64_t v6 = v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData;
  swift_beginAccess();
  sub_1C02B1530(v4, v6);
  swift_endAccess();
  uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  uint64_t v8 = *(void **)(*(void *)(v1 + *(int *)(v2 + 24)) + 16);
  v0[6] = nullsub_1;
  v0[7] = 0;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1BFC9FC68;
  v0[5] = &block_descriptor_37;
  uint64_t v9 = _Block_copy(v0 + 2);
  id v10 = v8;
  objc_msgSend(v7, sel_loadLocalDatastore_forceUpdate_completion_, v10, 1, v9);
  _Block_release(v9);

  sub_1C0C8ADCC(v1, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C0C86EC8()
{
  uint64_t v25 = v0;
  swift_release();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (void *)v0[28];
  uint64_t v3 = sub_1C15198DC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB93C7A8);
  id v4 = v1;
  id v5 = v2;
  id v6 = v4;
  id v7 = v2;
  uint64_t v8 = sub_1C15198AC();
  os_log_type_t v9 = sub_1C151F36C();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[28];
  uint64_t v12 = (char *)v0[16];
  if (v10)
  {
    os_log_type_t type = v9;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v13 = 136315394;
    log = v8;
    uint64_t v15 = *(void *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
    unint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
    swift_bridgeObjectRetain();
    v0[14] = sub_1BFDA76EC(v15, v14, &v24);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    id v16 = v11;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v17;
    sub_1C151FE1C();
    *uint64_t v21 = v17;

    _os_log_impl(&dword_1BFC31000, log, type, "Error fetching puzzle data for puzzleID=%s error= %@", (uint8_t *)v13, 0x16u);
    sub_1C01DA31C();
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v21, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v23, -1, -1);
    MEMORY[0x1C18C9B00](v13, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1C0C871A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int16 a8)
{
  *(_WORD *)(v8 + 106) = a8;
  *(void *)(v8 + 152) = a6;
  *(void *)(v8 + 160) = a7;
  *(void *)(v8 + 136) = a4;
  *(void *)(v8 + 144) = a5;
  sub_1C00845F4(0, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, MEMORY[0x1E4FBB718]);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for PuzzleData();
  *(void *)(v8 + 176) = v9;
  *(void *)(v8 + 184) = *(void *)(v9 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  *(void *)(v8 + 200) = swift_task_alloc();
  sub_1C151EE6C();
  *(void *)(v8 + 208) = sub_1C151EE5C();
  uint64_t v11 = sub_1C151EDBC();
  *(void *)(v8 + 216) = v11;
  *(void *)(v8 + 224) = v10;
  return MEMORY[0x1F4188298](sub_1C0C87310, v11, v10);
}

uint64_t sub_1C0C87310()
{
  __int16 v1 = *(_WORD *)(v0 + 106);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 152);
  *(_WORD *)(v0 + 104) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C0C873D0;
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 144);
  return sub_1C02A4B3C(v3, v4, v0 + 88);
}

uint64_t sub_1C0C873D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 224);
  if (v0) {
    id v5 = sub_1C0C87968;
  }
  else {
    id v5 = sub_1C0C874E4;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C0C874E4()
{
  uint64_t v40 = v0;
  __int16 v1 = v0 + 17;
  uint64_t v2 = v0[17];
  uint64_t aBlock = v0 + 2;
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[4];
  swift_release();
  sub_1BFDF8C74(v3, v6, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v6, 0, 1, v4);
  uint64_t v7 = v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData;
  swift_beginAccess();
  sub_1C02B1530(v6, v7);
  swift_endAccess();
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter + 24);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter), v8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = swift_unknownObjectRetain();
  char v12 = v10(v11, v8, v9);
  swift_unknownObjectRelease();
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController);
  objc_msgSend(v13, sel_setFocusShouldStartInputSession_, v12 & 1);
  id v14 = sub_1C0C85234(v3 + *(int *)(v4 + 20));
  objc_msgSend(v13, sel_setConfiguration_, v14);

  uint64_t v15 = *(void **)(*(void *)(v3 + *(int *)(v4 + 24)) + 16);
  *(v1 - 11) = nullsub_1;
  *(v1 - 10) = 0;
  *(v1 - 15) = MEMORY[0x1E4F143A8];
  *(v1 - 14) = 1107296256;
  *(v1 - 13) = sub_1BFC9FC68;
  *(v1 - 12) = &block_descriptor_65;
  id v16 = _Block_copy(aBlock);
  id v17 = v15;
  objc_msgSend(v13, sel_loadLocalDatastore_forceUpdate_completion_, v17, 1, v16);
  _Block_release(v16);

  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v18 = v38;
  uint64_t v20 = *(void *)(v38 + 192);
  uint64_t v19 = *(void *)(v38 + 200);
  uint64_t v21 = sub_1C15198DC();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EB93C7A8);
  sub_1BFDF8C74(v19, v20, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  unint64_t v22 = sub_1C15198AC();
  os_log_type_t v23 = sub_1C151F38C();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = *(void *)(v38 + 192);
  if (v24)
  {
    aBlocka = v13;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v39 = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v28 = *(void *)(v25 + *(int *)(v4 + 24));
    uint64_t v30 = *(void *)(v28 + 24);
    unint64_t v29 = *(void *)(v28 + 32);
    swift_bridgeObjectRetain();
    *(v1 - 1) = sub_1BFDA76EC(v30, v29, &v39);
    sub_1C151FE1C();
    uint64_t v18 = v38;
    swift_bridgeObjectRelease();
    sub_1C0C8ADCC(v25, (uint64_t (*)(void))type metadata accessor for PuzzleData);
    _os_log_impl(&dword_1BFC31000, v22, v23, "Puzzle Embed loaded with initial puzzle data:\n%s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v27, -1, -1);
    uint64_t v31 = v26;
    uint64_t v13 = aBlocka;
    MEMORY[0x1C18C9B00](v31, -1, -1);
  }
  else
  {
    sub_1C0C8ADCC(*(void *)(v38 + 192), (uint64_t (*)(void))type metadata accessor for PuzzleData);
  }

  uint64_t v32 = *(void *)(v18 + 200);
  uint64_t v33 = (void *)sub_1C1515E9C();
  objc_msgSend(v13, sel_loadURL_, v33);

  sub_1C0C8ADCC(v32, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(void))(v18 + 8);
  return v34();
}

uint64_t sub_1C0C87968()
{
  uint64_t v24 = v0;
  swift_release();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  __int16 v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void **)(v0 + 136);
  uint64_t v3 = sub_1C15198DC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EB93C7A8);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  uint64_t v8 = sub_1C15198AC();
  os_log_type_t v9 = sub_1C151F36C();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void **)(v0 + 240);
  char v12 = *(char **)(v0 + 136);
  if (v10)
  {
    uint64_t v13 = swift_slowAlloc();
    id v14 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = v22;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v15 = *(void *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
    unint64_t v16 = *(void *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 120) = sub_1BFDA76EC(v15, v16, &v23);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    id v17 = v11;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 112) = v18;
    sub_1C151FE1C();
    *id v14 = v18;

    _os_log_impl(&dword_1BFC31000, v8, v9, "Error fetching initial puzzle data for puzzleID=%s error= %@", (uint8_t *)v13, 0x16u);
    sub_1C01DA31C();
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v22, -1, -1);
    MEMORY[0x1C18C9B00](v13, -1, -1);
  }
  else
  {
  }
  *(unsigned char *)(v0 + 108) = 2;
  swift_retain();
  sub_1C15181EC();
  uint64_t v19 = *(void **)(v0 + 240);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1C0C87C8C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t result = sub_1BFC3E5C0(v3);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted) = 0;
  return result;
}

void sub_1C0C87CEC()
{
  sub_1C0C8B534((unint64_t *)&unk_1EA1A5600);
  JUMPOUT(0x1C18C4650);
}

id sub_1C0C87D44()
{
  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager), sel_refresh);
}

void sub_1C0C87EB8(double a1, uint64_t a2, uint64_t a3, const char *a4, SEL *a5)
{
  uint64_t v8 = a3 + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C18C9C60](v8);
  if (v9)
  {
    BOOL v10 = (void *)v9;
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C15198DC();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB93C7A8);
    char v12 = v10;
    uint64_t v13 = sub_1C15198AC();
    os_log_type_t v14 = sub_1C151F38C();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v26 = v16;
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v17 = *(void *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
      unint64_t v18 = *(void *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
      swift_bridgeObjectRetain();
      sub_1BFDA76EC(v17, v18, &v26);
      sub_1C151FE1C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      CFTimeInterval v19 = (CACurrentMediaTime() - a1) * 1000.0;
      sub_1C151E80C();
      sub_1C151EF6C();
      sub_1C151E80C();
      sub_1C00845F4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
      uint64_t v21 = MEMORY[0x1E4FBB460];
      *(void *)(v20 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v20 + 64) = v21;
      *(CFTimeInterval *)(v20 + 32) = v19 / 1000.0;
      uint64_t v22 = sub_1C151E66C();
      uint64_t v23 = a4;
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      sub_1BFDA76EC(v22, v25, &v26);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v13, v14, v23, (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v16, -1, -1);
      MEMORY[0x1C18C9B00](v15, -1, -1);
    }
    else
    {
    }
    [*(id *)&v12[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator] *a5];
  }
}

void sub_1C0C881EC(unsigned __int8 *a1, uint64_t a2, double a3)
{
  int v4 = *a1;
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    if (v4)
    {
      if (v4 != 1)
      {
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_1C15198DC();
        __swift_project_value_buffer(v23, (uint64_t)qword_1EB93C7A8);
        uint64_t v9 = v7;
        unint64_t v24 = sub_1C15198AC();
        os_log_type_t v25 = sub_1C151F38C();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          uint64_t v42 = v27;
          *(_DWORD *)uint64_t v26 = 136315394;
          uint64_t v28 = *(void *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
          unint64_t v29 = *(void *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
          swift_bridgeObjectRetain();
          sub_1BFDA76EC(v28, v29, &v42);
          sub_1C151FE1C();

          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2080;
          CFTimeInterval v30 = (CACurrentMediaTime() - a3) * 1000.0;
          unint64_t v40 = 0xE000000000000000;
          sub_1C151E80C();
          sub_1C151EF6C();
          sub_1C151E80C();
          sub_1C00845F4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
          uint64_t v31 = swift_allocObject();
          *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
          uint64_t v32 = MEMORY[0x1E4FBB460];
          *(void *)(v31 + 56) = MEMORY[0x1E4FBB3D0];
          *(void *)(v31 + 64) = v32;
          *(CFTimeInterval *)(v31 + 32) = v30 / 1000.0;
          uint64_t v33 = sub_1C151E66C();
          unint64_t v35 = v34;
          swift_bridgeObjectRelease();
          uint64_t v38 = sub_1BFDA76EC(v33, v35, &v42);
          sub_1C151FE1C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BFC31000, v24, v25, "Puzzle did enter error state, puzzleID=%s, duration=%s", (uint8_t *)v26, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C18C9B00](v27, -1, -1);
          MEMORY[0x1C18C9B00](v26, -1, -1);
        }
        else
        {
        }
        if (*(unsigned char *)(*(void *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDataManager]
                      + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_configuration) == 1)
          objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView], sel_setHidden_, 0);
        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager], sel_setPresentationState_, 2, v38, v40, v42);
        goto LABEL_21;
      }
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1C15198DC();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EB93C7A8);
      uint64_t v9 = v7;
      BOOL v10 = sub_1C15198AC();
      os_log_type_t v11 = sub_1C151F38C();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v42 = v13;
        *(_DWORD *)uint64_t v12 = 136315394;
        uint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
        unint64_t v15 = *(void *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID + 8];
        swift_bridgeObjectRetain();
        sub_1BFDA76EC(v14, v15, &v42);
        sub_1C151FE1C();

        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        CFTimeInterval v16 = (CACurrentMediaTime() - a3) * 1000.0;
        unint64_t v40 = 0xE000000000000000;
        sub_1C151E80C();
        sub_1C151EF6C();
        sub_1C151E80C();
        sub_1C00845F4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
        uint64_t v18 = MEMORY[0x1E4FBB460];
        *(void *)(v17 + 56) = MEMORY[0x1E4FBB3D0];
        *(void *)(v17 + 64) = v18;
        *(CFTimeInterval *)(v17 + 32) = v16 / 1000.0;
        uint64_t v19 = sub_1C151E66C();
        unint64_t v21 = v20;
        swift_bridgeObjectRelease();
        uint64_t v38 = sub_1BFDA76EC(v19, v21, &v42);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BFC31000, v10, v11, "Puzzle did enter loaded state, puzzle=%s duration=%s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v13, -1, -1);
        MEMORY[0x1C18C9B00](v12, -1, -1);
      }
      else
      {
      }
      id v36 = objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController], sel_view, v38, v40, v42);
      if (v36)
      {
        uint64_t v37 = v36;
        objc_msgSend(v36, sel_setHidden_, 0);

        objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager], sel_setPresentationState_, 1, v39, v41, v42);
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v22 = (char *)objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController), sel_view);
      if (v22)
      {
        uint64_t v9 = v22;
        objc_msgSend(v22, sel_setHidden_, 0);

LABEL_21:
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

id sub_1C0C888A0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  id result = objc_msgSend(v0, sel_setTimeStyle_, 0);
  qword_1EA1A5520 = (uint64_t)v0;
  return result;
}

uint64_t sub_1C0C88904()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0C8893C(uint64_t a1)
{
  sub_1C0C84AD0(a1, v1);
}

void sub_1C0C88944()
{
  sub_1C0C84BFC(v0);
}

uint64_t sub_1C0C8894C(uint64_t a1)
{
  return sub_1C0C84D1C(a1, v1);
}

uint64_t sub_1C0C88954(uint64_t a1, uint64_t a2)
{
  sub_1C00845F4(0, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C889E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unsigned char *a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v22 = type metadata accessor for PuzzleResourceSource();
  uint64_t v64 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v64 + 64);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v69 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C00845F4(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v68 = (char *)&v62 - v26;
  sub_1C00845F4(0, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData, v24);
  MEMORY[0x1F4188790](v27 - 8);
  unint64_t v29 = (char *)&v62 - v28;
  uint64_t v30 = type metadata accessor for PuzzleData();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *(void *)a2;
  uint64_t v66 = *(void *)(a2 + 8);
  int v65 = *(unsigned __int16 *)(a2 + 16);
  uint64_t v70 = a1;
  id v34 = PuzzleResourceSource.identifier.getter();
  unint64_t v35 = &a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *unint64_t v35 = v34;
  v35[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = (double *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  swift_beginAccess();
  *uint64_t v37 = a6;
  v37[1] = a7;
  v37[2] = a8;
  v37[3] = a9;
  uint64_t v38 = (double *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  swift_beginAccess();
  double *v38 = a10;
  v38[1] = a11;
  *(void *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation] = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v39 = *(void **)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration];
  *(void *)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration] = a4;
  id v40 = a4;

  uint64_t v41 = *(void **)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_interactionProvider];
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1C0C8B5E8;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_57;
  unint64_t v43 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v41, sel_setInteractionBlock_, v43);
  _Block_release(v43);
  uint64_t v44 = (uint64_t)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  sub_1C0C88954(v44, (uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    __int16 v45 = v65;
    uint64_t v46 = v66;
    uint64_t v47 = v67;
    uint64_t v48 = v70;
    uint64_t v63 = v23;
    uint64_t v50 = (uint64_t)v68;
    uint64_t v49 = (uint64_t)v69;
    uint64_t result = sub_1C0C8B578((uint64_t)v29, qword_1EB896E10, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleData);
    if (a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] != 1)
    {
      a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 1;
      uint64_t v52 = sub_1C151EE9C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v50, 1, 1, v52);
      sub_1BFDF8C74(v48, v49, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
      sub_1C151EE6C();
      size_t v53 = a5;
      sub_1BFEF9C98(v47, v46);
      uint64_t v54 = sub_1C151EE5C();
      unint64_t v55 = (*(unsigned __int8 *)(v64 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      unint64_t v56 = (v63 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
      id v57 = (void *)swift_allocObject();
      uint64_t v58 = MEMORY[0x1E4FBCFD8];
      v57[2] = v54;
      v57[3] = v58;
      v57[4] = v53;
      sub_1C0C8ABE8(v49, (uint64_t)v57 + v55, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
      unint64_t v59 = (char *)v57 + v56;
      *(void *)unint64_t v59 = v47;
      *((void *)v59 + 1) = v46;
      *((_WORD *)v59 + 8) = v45;
      sub_1C0C833AC(v50, (uint64_t)&unk_1EA1A5618, (uint64_t)v57);
      return swift_release();
    }
  }
  else
  {
    sub_1C0C8ABE8((uint64_t)v29, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for PuzzleData);
    unint64_t v60 = *(void **)&a5[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController];
    id v61 = sub_1C0C85234((uint64_t)&v33[*(int *)(v30 + 20)]);
    objc_msgSend(v60, sel_setConfiguration_, v61);

    return sub_1C0C8ADCC((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for PuzzleData);
  }
  return result;
}

uint64_t sub_1C0C89010()
{
  return sub_1C0C8B534(&qword_1EA1A5590);
}

uint64_t sub_1C0C89044@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C0C890A0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidFinishLoading()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedProcessTerminated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidReceiveAction(action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidReceiveInteractionMessage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PuzzleEmbedViewControllerDelegate.puzzleEmbedDidReceiveProgress(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1C0C89170()
{
  return type metadata accessor for PuzzleEmbedViewController();
}

uint64_t method lookup function for PuzzleEmbedViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleEmbedViewController);
}

uint64_t sub_1C0C89190(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C0C89270;
  return v5(v2 + 32);
}

uint64_t sub_1C0C89270()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

char *sub_1C0C89384(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, char *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v83 = a6;
  uint64_t v80 = a5;
  uint64_t v89 = a4;
  uint64_t v90 = a10;
  uint64_t v81 = a9;
  unint64_t v82 = a11;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = sub_1C1519EBC();
  uint64_t v87 = *(void *)(v18 - 8);
  uint64_t v88 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v84 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  id v86 = (char *)&v79 - v21;
  sub_1C00845F4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v22 - 8);
  unint64_t v24 = (char *)&v79 - v23;
  v93[3] = a13;
  v93[4] = a14;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v93);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(boxed_opaque_existential_0, a8, a13);
  uint64_t v26 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator;
  id v27 = objc_allocWithZone(MEMORY[0x1E4FB1400]);
  uint64_t v28 = a12;
  *(void *)&a12[v26] = objc_msgSend(v27, sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v29 = sub_1C1515FDC();
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v24, 1, 1, v29);
  uint64_t v31 = (void *)sub_1C151E5EC();
  uint64_t v32 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v24, 1, v29) != 1)
  {
    uint64_t v32 = (void *)sub_1C1515E9C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v29);
  }
  uint64_t v33 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation;
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F900]), sel_initWithContext_URL_, v31, v32);

  *(void *)&v28[v33] = v34;
  uint64_t v35 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onReuse;
  sub_1BFE6CA24(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  *(void *)&v28[v35] = objc_msgSend(objc_allocWithZone(v36), sel_init);
  uint64_t v37 = &v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier];
  *(void *)uint64_t v37 = 0;
  *((void *)v37 + 1) = 0;
  v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable] = 0;
  uint64_t v38 = &v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  uint64_t v39 = type metadata accessor for PuzzleData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v40 = &v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *(void *)id v40 = 0;
  *((void *)v40 + 1) = 0xE000000000000000;
  uint64_t v41 = &v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  *(_OWORD *)uint64_t v41 = 0u;
  *((_OWORD *)v41 + 1) = 0u;
  uint64_t v42 = &v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  *(void *)uint64_t v42 = 0;
  *((void *)v42 + 1) = 0;
  uint64_t v43 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration;
  *(void *)&v28[v43] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F8F8]), sel_init);
  uint64_t v44 = (uint64_t *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction];
  *uint64_t v44 = 0;
  v44[1] = 0;
  v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment] = 8;
  v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 0;
  uint64_t v45 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController;
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_webContentViewController] = a1;
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_interactionProvider] = a2;
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_actionProvider] = a3;
  id v46 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v47 = objc_msgSend(v46, sel_errorProvider);
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorProvider] = v47;
  id v48 = objc_msgSend(v46, sel_presentationManager);
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_presentationManager] = v48;
  uint64_t v49 = &v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDataManager];
  uint64_t v50 = v80;
  *(void *)uint64_t v49 = v89;
  *((void *)v49 + 1) = v50;
  sub_1BFC66384((uint64_t)v93, (uint64_t)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter]);
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_bundleSubscriptionManager] = v81;
  LOBYTE(v92[0]) = 0;
  sub_1C0C89E2C();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleLoadingStateMachine] = sub_1C15181FC();
  swift_beginAccess();
  uint64_t v51 = *v44;
  *uint64_t v44 = 0;
  v44[1] = 0;
  sub_1BFC3E5C0(v51);
  uint64_t v52 = v82;
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_textInputTraits] = v82;
  sub_1BFC66384(v90, (uint64_t)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDifficultyDescriptionProvider]);
  size_t v53 = *(void **)&v28[v45];
  sub_1C00845F4(0, (unint64_t *)&qword_1EB861498, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, MEMORY[0x1E4FBBE00]);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1C152A660;
  unint64_t v55 = (void *)*MEMORY[0x1E4FB2CE0];
  unint64_t v56 = (void *)*MEMORY[0x1E4FB2D78];
  *(void *)(v54 + 32) = *MEMORY[0x1E4FB2CE0];
  *(void *)(v54 + 40) = v56;
  id v57 = (void *)*MEMORY[0x1E4FB2DA0];
  uint64_t v58 = (void *)*MEMORY[0x1E4FB2D70];
  *(void *)(v54 + 48) = *MEMORY[0x1E4FB2DA0];
  *(void *)(v54 + 56) = v58;
  type metadata accessor for Identifier(0);
  id v59 = v52;
  id v60 = v53;
  id v61 = v55;
  id v62 = v56;
  id v63 = v57;
  id v64 = v58;
  int v65 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_removeMenusForIdentifiers_, v65);

  id v66 = objc_msgSend(*(id *)&v28[v45], sel_messageHandlerManager);
  uint64_t v67 = v83;
  swift_unknownObjectRetain();
  uint64_t v68 = (void *)sub_1C151E5EC();
  objc_msgSend(v66, sel_addMessageHandler_name_, v67, v68);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  type metadata accessor for PuzzleDataManager();
  if (swift_dynamicCastClass())
  {
    *(void *)(v67 + OBJC_IVAR____TtC8NewsFeed28PuzzleProgressMessageHandler_delegate + 8) = &off_1F1B98C70;
    swift_unknownObjectWeakAssign();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v70 = self;
  id v71 = objc_msgSend(v70, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v72 = objc_msgSend(v70, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  unint64_t v73 = v86;
  sub_1C1519EAC();
  uint64_t v75 = v87;
  uint64_t v74 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v73, v88);
  v92[3] = sub_1C1519FFC();
  v92[4] = MEMORY[0x1E4FABBF0];
  __swift_allocate_boxed_opaque_existential_0(v92);
  sub_1C1519FDC();
  id v76 = objc_allocWithZone((Class)sub_1C151CD1C());
  *(void *)&v28[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_errorView] = sub_1C151CD0C();

  v91.receiver = v28;
  v91.super_class = ObjectType;
  unint64_t v77 = (char *)objc_msgSendSuper2(&v91, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v77[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleDataManager]
            + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_delegate
            + 8) = &off_1F1BF3378;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1(v90);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v74);
  return v77;
}

char *sub_1C0C89CFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  long long v23 = a9;
  uint64_t v17 = *(void *)(a12 - 8);
  MEMORY[0x1F4188790](a11);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a8, a12);
  return sub_1C0C89384(a1, a2, a3, v24, v25, v26, v27, (uint64_t)v19, v23, *((uint64_t *)&v23 + 1), a10, v21, a12, a13);
}

void sub_1C0C89E2C()
{
  if (!qword_1EA1966D8)
  {
    sub_1C00A8C64();
    unint64_t v0 = sub_1C151822C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1966D8);
    }
  }
}

uint64_t sub_1C0C89E90(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C00845F4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v125 = (char *)v112 - v5;
  sub_1C00845F4(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], v3);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v127 = (char *)v112 - v10;
  uint64_t v11 = type metadata accessor for PuzzleResourceSource();
  uint64_t v123 = *(void *)(v11 - 8);
  uint64_t v124 = v11;
  uint64_t v12 = *(void *)(v123 + 64);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v122 = (uint64_t)v112 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v126 = (void *)((char *)v112 - v16);
  uint64_t v128 = v1;
  uint64_t v17 = (void **)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  swift_beginAccess();
  uint64_t v18 = type metadata accessor for PuzzleData();
  uint64_t result = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18);
  if (!result)
  {
    uint64_t v20 = *(void *)(a1 + 16);
    if (v20)
    {
      uint64_t v116 = (void *)((char *)v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v113 = v8;
      uint64_t v21 = *v17;
      uint64_t v118 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation;
      uint64_t v117 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleLoadingStateMachine;
      uint64_t v115 = &v128[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleAccessArbiter];
      uint64_t v120 = v12 + 7;
      swift_unknownObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      char v22 = 0;
      uint64_t v114 = a1;
      long long v23 = (unsigned char *)(a1 + 48);
      uint64_t v24 = 1 - v20;
      long long v119 = xmmword_1C152C800;
      v112[1] = MEMORY[0x1E4FBC848] + 8;
      uint64_t v121 = v21;
      while (1)
      {
        if (v22)
        {
          if (!v24) {
            goto LABEL_53;
          }
          goto LABEL_9;
        }
        int v25 = *v23;
        if (*v23)
        {
          uint64_t v26 = (void *)*((void *)v23 - 2);
          uint64_t v27 = (void *)*((void *)v23 - 1);
          uint64_t v130 = v26;
          if (v25 == 1)
          {
            id v28 = v26;
            swift_unknownObjectRetain_n();
            id v29 = v28;
            uint64_t v129 = (uint64_t)v27;
            id v30 = objc_msgSend(v27, sel_identifier);
            uint64_t v31 = sub_1C151E62C();
            uint64_t v33 = v32;

            id v34 = objc_msgSend(v21, sel_identifier);
            uint64_t v35 = sub_1C151E62C();
            uint64_t v37 = v36;

            if (v31 == v35 && v33 == v37)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v38 = &selRef_setCenter_;
              goto LABEL_19;
            }
            char v49 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v38 = &selRef_setCenter_;
            if (v49)
            {
LABEL_19:
              id v50 = [*(id *)&v128[v118] v38[79]];
              uint64_t v51 = sub_1C151E62C();
              uint64_t v53 = v52;

              uint64_t v54 = sub_1C1515FDC();
              uint64_t v55 = *(void *)(v54 - 8);
              unint64_t v56 = v125;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v125, 1, 1, v54);
              id v57 = (void *)sub_1C151E5EC();
              int v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48))(v56, 1, v54);
              id v59 = 0;
              if (v58 != 1)
              {
                id v60 = v125;
                id v59 = (void *)sub_1C1515E9C();
                id v61 = v60;
                uint64_t v21 = v121;
                (*(void (**)(char *, uint64_t))(v55 + 8))(v61, v54);
              }
              id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F900]), sel_initWithContext_URL_, v57, v59);

              id v63 = [v62 v38[79]];
              uint64_t v64 = sub_1C151E62C();
              uint64_t v66 = v65;

              if (v51 == v64 && v53 == v66)
              {
                swift_bridgeObjectRelease_n();
                uint64_t v67 = v129;
                goto LABEL_28;
              }
              char v80 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v67 = v129;
              if (v80)
              {
LABEL_28:
                swift_retain();
                sub_1C151820C();
                swift_release();
                if (v139 == 2)
                {
                  uint64_t v81 = *((void *)v115 + 3);
                  uint64_t v82 = *((void *)v115 + 4);
                  __swift_project_boxed_opaque_existential_1(v115, v81);
                  if ((*(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 8))(v21, v81, v82))
                  {
                    id v83 = objc_msgSend(v21, sel_identifier);
                    uint64_t v84 = sub_1C151E62C();
                    uint64_t v86 = v85;

                    uint64_t v87 = v116;
                    *uint64_t v116 = v84;
                    v87[1] = v86;
                    swift_storeEnumTagMultiPayload();
                    uint64_t v88 = sub_1C151EE9C();
                    v112[0] = *(void *)(v88 - 8);
                    uint64_t v89 = (uint64_t)v113;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v112[0] + 56))(v113, 1, 1, v88);
                    uint64_t v90 = v122;
                    sub_1BFDF8C74((uint64_t)v87, v122, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
                    sub_1C151EE6C();
                    objc_super v91 = v128;
                    uint64_t v92 = sub_1C151EE5C();
                    unint64_t v93 = (*(unsigned __int8 *)(v123 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
                    unint64_t v94 = (v120 + v93) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v95 = (void *)swift_allocObject();
                    _OWORD v95[2] = v92;
                    v95[3] = MEMORY[0x1E4FBCFD8];
                    v95[4] = v91;
                    uint64_t v96 = v112[0];
                    sub_1C0C8ABE8(v90, (uint64_t)v95 + v93, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
                    uint64_t v97 = (char *)v95 + v94;
                    *(_OWORD *)uint64_t v97 = v119;
                    *((_WORD *)v97 + 8) = 0;
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v89, 1, v88) == 1)
                    {
                      sub_1C0C8B578(v89, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
                    }
                    else
                    {
                      sub_1C151EE8C();
                      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v89, v88);
                    }
                    uint64_t v21 = v121;
                    uint64_t v106 = v129;
                    if (v95[2])
                    {
                      swift_getObjectType();
                      swift_unknownObjectRetain();
                      uint64_t v107 = sub_1C151EDBC();
                      uint64_t v109 = v108;
                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      uint64_t v107 = 0;
                      uint64_t v109 = 0;
                    }
                    uint64_t v110 = swift_allocObject();
                    *(void *)(v110 + 16) = &unk_1EA1A55B8;
                    *(void *)(v110 + 24) = v95;
                    if (v109 | v107)
                    {
                      uint64_t v135 = 0;
                      uint64_t v136 = 0;
                      uint64_t v137 = v107;
                      uint64_t v138 = v109;
                    }
                    swift_task_create();
                    swift_release();
                    char v22 = 1;
                    uint64_t v111 = v130;
                    sub_1C02B137C(v130, v106, 1u);
                    sub_1C02B137C(v111, v106, 1u);
                    uint64_t result = sub_1C0C8ADCC((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
                    if (!v24) {
                      goto LABEL_53;
                    }
                    goto LABEL_6;
                  }
                }
              }
              uint64_t v98 = v130;
            }
            else
            {
              uint64_t v67 = v129;
              uint64_t v98 = v130;
            }
            sub_1C02B137C(v98, v67, 1u);
            uint64_t result = (uint64_t)sub_1C02B137C(v98, v67, 1u);
            if (!v24) {
              goto LABEL_53;
            }
            goto LABEL_5;
          }
          id v39 = v26;
          swift_unknownObjectRetain_n();
          id v40 = v39;
          id v41 = objc_msgSend(v27, sel_identifier);
          uint64_t v42 = sub_1C151E62C();
          uint64_t v44 = v43;

          id v45 = objc_msgSend(v21, sel_identifier);
          uint64_t v46 = sub_1C151E62C();
          uint64_t v48 = v47;

          if (v42 == v46 && v44 == v48)
          {
            swift_bridgeObjectRelease();
LABEL_25:
            uint64_t v129 = (uint64_t)v27;
            uint64_t v69 = v126;
            *uint64_t v126 = v42;
            v69[1] = v44;
            swift_storeEnumTagMultiPayload();
            uint64_t v70 = sub_1C151EE9C();
            uint64_t v71 = *(void *)(v70 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v127, 1, 1, v70);
            uint64_t v72 = v122;
            sub_1BFDF8C74((uint64_t)v69, v122, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
            sub_1C151EE6C();
            unint64_t v73 = v128;
            uint64_t v74 = sub_1C151EE5C();
            unint64_t v75 = (*(unsigned __int8 *)(v123 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
            unint64_t v76 = (v120 + v75) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v77 = (void *)swift_allocObject();
            v77[2] = v74;
            v77[3] = MEMORY[0x1E4FBCFD8];
            v77[4] = v73;
            sub_1C0C8ABE8(v72, (uint64_t)v77 + v75, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
            id v78 = (char *)v77 + v76;
            uint64_t v79 = (uint64_t)v127;
            *(_OWORD *)id v78 = v119;
            *((_WORD *)v78 + 8) = 0;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v79, 1, v70) == 1)
            {
              sub_1C0C8B578(v79, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
            }
            else
            {
              sub_1C151EE8C();
              (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v79, v70);
            }
            uint64_t v21 = v121;
            uint64_t v99 = v129;
            if (v77[2])
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              uint64_t v100 = sub_1C151EDBC();
              uint64_t v102 = v101;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v100 = 0;
              uint64_t v102 = 0;
            }
            uint64_t v103 = swift_allocObject();
            *(void *)(v103 + 16) = &unk_1EA1A55D0;
            *(void *)(v103 + 24) = v77;
            if (v102 | v100)
            {
              uint64_t v131 = 0;
              uint64_t v132 = 0;
              uint64_t v133 = v100;
              uint64_t v134 = v102;
            }
            uint64_t v104 = v130;
            swift_task_create();
            swift_release();
            sub_1C02B137C(v104, v99, 2u);
            sub_1C02B137C(v104, v99, 2u);
            uint64_t result = sub_1C0C8ADCC((uint64_t)v126, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
            if (!v24)
            {
LABEL_53:
              swift_unknownObjectRelease();
              return swift_bridgeObjectRelease();
            }
LABEL_9:
            char v22 = 1;
            goto LABEL_6;
          }
          char v68 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v68) {
            goto LABEL_25;
          }
          swift_bridgeObjectRelease();
          unint64_t v105 = v130;
          sub_1C02B137C(v130, (uint64_t)v27, 2u);
          uint64_t result = (uint64_t)sub_1C02B137C(v105, (uint64_t)v27, 2u);
          if (!v24) {
            goto LABEL_53;
          }
        }
        else if (!v24)
        {
          goto LABEL_53;
        }
LABEL_5:
        char v22 = 0;
LABEL_6:
        v23 += 24;
        if (++v24 == 1)
        {
          __break(1u);
          return result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C0C8ABE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C8AC50(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PuzzleResourceSource() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 1);
  __int16 v13 = *((_WORD *)v10 + 8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_1C005E7F4;
  return sub_1C0C869C4(a1, v6, v7, v8, v9, v11, v12, v13);
}

uint64_t sub_1C0C8AD94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0C8ADCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0C8AE30(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1BFC542F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA1A55E8 + dword_1EA1A55E8);
  return v6(a1, v4);
}

id sub_1C0C8AEE8(double a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *a20)
{
  if (a8)
  {
    id v41 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v41 = 0;
  }
  id v40 = (void *)sub_1C15163DC();
  if (a11)
  {
    id v39 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v39 = 0;
  }
  uint64_t v38 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v42 = a9;
  if (a14)
  {
    sub_1C1515FDC();
    uint64_t v37 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = 0;
  }
  id v29 = (void *)sub_1C1515E9C();
  uint64_t v30 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(a17, 1, v30) != 1)
  {
    uint64_t v32 = (void *)sub_1C1515E9C();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a17, v30);
  }
  LOBYTE(v36) = a19 & 1;
  id v33 = objc_msgSend(a20, sel_initWithStoreFront_locale_contentEnvironment_contentSizeCategory_canvasSize_contentFrame_dataSources_location_sourceURL_activePictureInPictureURL_feedConfiguration_supportsLiveActivities_, v41, v40, v39, v38, v37, a15, a1, a2, a3, a4, a5, a6, v29, v32, a18, v36);

  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a16, v30);
  uint64_t v34 = sub_1C15164AC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v42, v34);
  return v33;
}

void sub_1C0C8B1B8()
{
  uint64_t v1 = v0;
  sub_1C00845F4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - v3;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_activityIndicator;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
  uint64_t v8 = (void *)sub_1C151E5EC();
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    uint64_t v9 = (void *)sub_1C1515E9C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_embedLocation;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F900]), sel_initWithContext_URL_, v8, v9);

  *(void *)&v1[v10] = v11;
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onReuse;
  sub_1BFE6CA24(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  *(void *)&v1[v12] = objc_msgSend(objc_allocWithZone(v13), sel_init);
  uint64_t v14 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier];
  *uint64_t v14 = 0;
  v14[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_isResizable] = 0;
  uint64_t v15 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleData];
  uint64_t v16 = type metadata accessor for PuzzleData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v17 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_puzzleID];
  *uint64_t v17 = 0;
  v17[1] = 0xE000000000000000;
  uint64_t v18 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_contentFrame];
  *uint64_t v18 = 0u;
  v18[1] = 0u;
  uint64_t v19 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_viewportSize];
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_feedConfiguration;
  *(void *)&v1[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F8F8]), sel_init);
  uint64_t v21 = &v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_onEmbedInteraction];
  *uint64_t v21 = 0;
  v21[1] = 0;
  v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController____lazy_storage___contentEnvironment] = 8;
  v1[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_hasPuzzleDataLoadAttempted] = 0;

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0C8B50C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C0C8B534(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PuzzleEmbedViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C8B578(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C00845F4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C0C8B5E8()
{
  sub_1C0C858FC(v0);
}

uint64_t sub_1C0C8B5F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PuzzleResourceSource() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 1);
  __int16 v13 = *((_WORD *)v10 + 8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_1BFC542F4;
  return sub_1C0C871A8(a1, v6, v7, v8, v9, v11, v12, v13);
}

void sub_1C0C8B738()
{
  if (!qword_1EA1A5628)
  {
    sub_1C09866C0();
    sub_1C00A8C64();
    unint64_t v0 = sub_1C1518B9C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A5628);
    }
  }
}

uint64_t sub_1C0C8B7B4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0C8B7EC(uint64_t a1)
{
  sub_1C0C87EB8(*(double *)(v1 + 24), a1, *(void *)(v1 + 16), "Puzzle did enter loading state, puzzle=%s, duration=%s", (SEL *)&selRef_startAnimating);
}

void sub_1C0C8B81C(uint64_t a1)
{
  sub_1C0C87EB8(*(double *)(v1 + 24), a1, *(void *)(v1 + 16), "Puzzle did exit loading state, puzzle=%s, duration=%s", (SEL *)&selRef_stopAnimating);
}

void sub_1C0C8B84C(unsigned __int8 *a1)
{
  sub_1C0C881EC(a1, *(void *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t static FamilySharingError.== infix(_:_:)()
{
  return 1;
}

uint64_t FamilySharingError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FamilySharingError.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0C8B904()
{
  unint64_t result = qword_1EA1A5638;
  if (!qword_1EA1A5638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5638);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FamilySharingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0C8B9F4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FamilySharingError()
{
  return &type metadata for FamilySharingError;
}

uint64_t static FormatAssetURL.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1BFD81AE8(v2, v3);
}

uint64_t FormatAssetURL.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatAssetURL.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAssetURL.parameters.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatAssetURL.parameters.modify())(void)
{
  return nullsub_1;
}

unint64_t sub_1C0C8BB24(uint64_t a1)
{
  unint64_t result = sub_1C0C8BB4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C8BB4C()
{
  unint64_t result = qword_1EA1A5640;
  if (!qword_1EA1A5640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5640);
  }
  return result;
}

uint64_t sub_1C0C8BBA0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return sub_1BFD81AE8(v2, v3);
}

unint64_t sub_1C0C8BC14(void *a1)
{
  a1[1] = sub_1BFDBBFD0();
  a1[2] = sub_1C0905344();
  unint64_t result = sub_1C0C8BC4C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C8BC4C()
{
  unint64_t result = qword_1EA1A5648;
  if (!qword_1EA1A5648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5648);
  }
  return result;
}

uint64_t sub_1C0C8BCA0(void *a1)
{
  return FormatAssetURL.encode(to:)(a1);
}

uint64_t sub_1C0C8BCB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C8BCC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatAssetURL()
{
  return &type metadata for FormatAssetURL;
}

uint64_t sub_1C0C8BD18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v41 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v41;
        uint64_t v42 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v42;
        uint64_t v43 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v43;
        uint64_t v44 = a2 + 6;
        unint64_t v45 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v45 >= 0xF)
        {
          *(void *)(a1 + 48) = *v44;
          *(void *)(a1 + 56) = v45;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)v44;
        }
        uint64_t v83 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v83;
        uint64_t v84 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v84;
        uint64_t v85 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v85;
        *(void *)(a1 + 112) = a2[14];
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        uint64_t v86 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v86;
        uint64_t v87 = a2[19];
        *(void *)(a1 + 144) = a2[18];
        *(void *)(a1 + 152) = v87;
        uint64_t v88 = a2[21];
        *(void *)(a1 + 160) = a2[20];
        *(void *)(a1 + 168) = v88;
        __dsta = a2 + 22;
        unint64_t v89 = a2[23];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89 >= 0xF)
        {
          *(void *)(a1 + 176) = *__dsta;
          *(void *)(a1 + 184) = v89;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 176) = *(_OWORD *)__dsta;
        }
        uint64_t v90 = a2[25];
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = v90;
        uint64_t v91 = a2[27];
        *(void *)(a1 + 208) = a2[26];
        *(void *)(a1 + 216) = v91;
        uint64_t v92 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v92;
        *(void *)(a1 + 240) = a2[30];
        *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v12 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v12;
        uint64_t v13 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v13;
        uint64_t v14 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v14;
        uint64_t v15 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v15;
        *(void *)(a1 + 64) = a2[8];
        uint64_t v16 = type metadata accessor for FormatSlotDefinition();
        uint64_t v17 = *(int *)(v16 + 40);
        long long __dst = (void *)(a1 + v17);
        uint64_t v123 = v16;
        uint64_t v116 = (char *)a2 + v17;
        uint64_t v18 = sub_1C1518CDC();
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v124 = v20;
        uint64_t v115 = v19;
        if (v20(v116, 1, v18))
        {
          sub_1BFF71E30();
          memcpy(__dst, v116, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v19 + 16))(__dst, v116, v18);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        sub_1C0455274();
        uint64_t v94 = *(int *)(v93 + 48);
        uint64_t v95 = (void *)(a1 + v94);
        uint64_t v96 = (uint64_t *)((char *)a2 + v94);
        uint64_t v97 = v96[1];
        *uint64_t v95 = *v96;
        v95[1] = v97;
        uint64_t v98 = v96[3];
        _OWORD v95[2] = v96[2];
        v95[3] = v98;
        uint64_t v99 = v96[5];
        v95[4] = v96[4];
        v95[5] = v99;
        uint64_t v100 = v96[7];
        v95[6] = v96[6];
        v95[7] = v100;
        v95[8] = v96[8];
        uint64_t v101 = *(int *)(v123 + 40);
        uint64_t v102 = (char *)v95 + v101;
        uint64_t v103 = (char *)v96 + v101;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v124(v103, 1, v18))
        {
          sub_1BFF71E30();
          memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v102, v103, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v102, 0, 1, v18);
        }
        break;
      case 3u:
        uint64_t v22 = *a2;
        uint64_t v23 = a2[1];
        *(void *)a1 = v22;
        *(void *)(a1 + 8) = v23;
        swift_retain();
        swift_retain();
        break;
      case 4u:
        uint64_t v24 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v24;
        uint64_t v25 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v25;
        uint64_t v26 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v26;
        uint64_t v27 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v27;
        uint64_t v28 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v28;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        uint64_t v117 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v117;
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        uint64_t v29 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v29;
        uint64_t v30 = a2[17];
        *(void *)(a1 + 128) = a2[16];
        *(void *)(a1 + 136) = v30;
        uint64_t v31 = a2[19];
        *(void *)(a1 + 144) = a2[18];
        *(void *)(a1 + 152) = v31;
        uint64_t v32 = a2[21];
        *(void *)(a1 + 160) = a2[20];
        *(void *)(a1 + 168) = v32;
        uint64_t v33 = a2[23];
        *(void *)(a1 + 176) = a2[22];
        *(void *)(a1 + 184) = v33;
        *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
        uint64_t v34 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v34;
        *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v46 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v46;
        uint64_t v47 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v47;
        uint64_t v48 = a2[4];
        uint64_t v49 = a2[5];
        uint64_t v50 = a2[6];
        uint64_t v51 = a2[7];
        uint64_t v52 = a2[8];
        uint64_t v53 = a2[9];
        unsigned __int8 v54 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v48, v49, v50, v51, v52, v53, v54);
        *(void *)(a1 + 32) = v48;
        *(void *)(a1 + 40) = v49;
        *(void *)(a1 + 48) = v50;
        *(void *)(a1 + 56) = v51;
        *(void *)(a1 + 64) = v52;
        *(void *)(a1 + 72) = v53;
        *(unsigned char *)(a1 + 80) = v54;
        uint64_t v55 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v55;
        uint64_t v56 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v56;
        uint64_t v57 = a2[15];
        uint64_t v58 = a2[16];
        uint64_t v59 = a2[17];
        uint64_t v60 = a2[18];
        uint64_t v61 = a2[19];
        uint64_t v62 = a2[20];
        unsigned __int8 v63 = *((unsigned char *)a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v57, v58, v59, v60, v61, v62, v63);
        *(void *)(a1 + 120) = v57;
        *(void *)(a1 + 128) = v58;
        *(void *)(a1 + 136) = v59;
        *(void *)(a1 + 144) = v60;
        *(void *)(a1 + 152) = v61;
        *(void *)(a1 + 160) = v62;
        *(unsigned char *)(a1 + 168) = v63;
        break;
      case 6u:
        uint64_t v64 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v64;
        uint64_t v65 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v65;
        uint64_t v66 = a2[4];
        uint64_t v67 = a2[5];
        uint64_t v68 = a2[6];
        uint64_t v69 = a2[7];
        uint64_t v70 = a2[8];
        uint64_t v71 = a2[9];
        unsigned __int8 v72 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v66, v67, v68, v69, v70, v71, v72);
        *(void *)(a1 + 32) = v66;
        *(void *)(a1 + 40) = v67;
        *(void *)(a1 + 48) = v68;
        *(void *)(a1 + 56) = v69;
        *(void *)(a1 + 64) = v70;
        *(void *)(a1 + 72) = v71;
        *(unsigned char *)(a1 + 80) = v72;
        uint64_t v73 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v73;
        uint64_t v74 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v74;
        uint64_t v75 = a2[15];
        uint64_t v76 = a2[16];
        uint64_t v77 = a2[17];
        uint64_t v78 = a2[18];
        uint64_t v79 = a2[19];
        uint64_t v80 = a2[20];
        unsigned __int8 v81 = *((unsigned char *)a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v75, v76, v77, v78, v79, v80, v81);
        *(void *)(a1 + 120) = v75;
        *(void *)(a1 + 128) = v76;
        *(void *)(a1 + 136) = v77;
        *(void *)(a1 + 144) = v78;
        *(void *)(a1 + 152) = v79;
        *(void *)(a1 + 160) = v80;
        *(unsigned char *)(a1 + 168) = v81;
        long long v82 = *(_OWORD *)(a2 + 25);
        *(_OWORD *)(a1 + 200) = v82;
        (**(void (***)(uint64_t, uint64_t))(v82 - 8))(a1 + 176, (uint64_t)(a2 + 22));
        break;
      case 7u:
        uint64_t v35 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v35;
        uint64_t v36 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v36;
        uint64_t v37 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v37;
        uint64_t v38 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v38;
        uint64_t v40 = a2[8];
        uint64_t v39 = a2[9];
        *(void *)(a1 + 64) = v40;
        *(void *)(a1 + 72) = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        uint64_t v8 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v8;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        uint64_t v9 = a2 + 8;
        unint64_t v10 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *v9;
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)v9;
          *(void *)(a1 + 72) = v10;
          swift_bridgeObjectRetain();
        }
        uint64_t v105 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v105;
        uint64_t v106 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v106;
        uint64_t v107 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v107;
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        uint64_t v108 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v108;
        uint64_t v109 = a2[20];
        *(void *)(a1 + 152) = a2[19];
        *(void *)(a1 + 160) = v109;
        uint64_t v110 = a2[22];
        *(void *)(a1 + 168) = a2[21];
        *(void *)(a1 + 176) = v110;
        *(void *)(a1 + 184) = a2[23];
        *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
        *(void *)(a1 + 200) = a2[25];
        uint64_t v118 = a2 + 26;
        long long v119 = (_OWORD *)(a1 + 208);
        __dstb = (void *)a2[27];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)__dstb >= 2)
        {
          if (__dstb == (void *)2)
          {
            _OWORD *v119 = *v118;
          }
          else
          {
            *(unsigned char *)(a1 + 208) = *(unsigned char *)v118;
            *(void *)(a1 + 216) = __dstb;
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          _OWORD *v119 = *v118;
        }
        uint64_t v111 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v111;
        uint64_t v112 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v112;
        uint64_t v113 = a2[33];
        *(void *)(a1 + 256) = a2[32];
        *(void *)(a1 + 264) = v113;
        *(unsigned char *)(a1 + 272) = *((unsigned char *)a2 + 272);
        *(void *)(a1 + 280) = a2[35];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C0C8C7C8(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 216) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 184) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FormatSlotDefinition();
      uint64_t v3 = a1 + *(int *)(v2 + 40);
      uint64_t v4 = sub_1C1518CDC();
      uint64_t v17 = *(void *)(v4 - 8);
      int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (!v5(v3, 1, v4)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v4);
      }
      sub_1C0455274();
      uint64_t v7 = a1 + *(int *)(v6 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v7 + *(int *)(v2 + 40);
      if (!v5(v8, 1, v4))
      {
        uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v16(v8, v4);
      }
      return;
    case 3u:
      swift_release();
      swift_release();
      return;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a1 + 120);
      uint64_t v10 = *(void *)(a1 + 128);
      uint64_t v11 = *(void *)(a1 + 136);
      uint64_t v12 = *(void *)(a1 + 144);
      uint64_t v13 = *(void *)(a1 + 152);
      uint64_t v14 = *(void *)(a1 + 160);
      unsigned __int8 v15 = *(unsigned char *)(a1 + 168);
      sub_1BFEC28BC(v9, v10, v11, v12, v13, v14, v15);
      return;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(unsigned char *)(a1 + 168));
      __swift_destroy_boxed_opaque_existential_1(a1 + 176);
      return;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1C0C8CD38(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v11;
      uint64_t v12 = (void *)(a2 + 48);
      unint64_t v13 = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 >= 0xF)
      {
        *(void *)(a1 + 48) = *v12;
        *(void *)(a1 + 56) = v13;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
      }
      uint64_t v78 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v78;
      uint64_t v79 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v79;
      uint64_t v80 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v80;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      uint64_t v81 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v81;
      uint64_t v82 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v82;
      uint64_t v83 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v83;
      uint64_t v121 = (void *)(a2 + 176);
      unint64_t v117 = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v117 >= 0xF)
      {
        *(void *)(a1 + 176) = *v121;
        *(void *)(a1 + 184) = v117;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 176) = *(_OWORD *)v121;
      }
      uint64_t v84 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v84;
      uint64_t v85 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v85;
      uint64_t v86 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v86;
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_30;
    case 2u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v16;
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      uint64_t v18 = type metadata accessor for FormatSlotDefinition();
      uint64_t v19 = *(int *)(v18 + 40);
      long long __dst = (void *)(a1 + v19);
      uint64_t v116 = v18;
      uint64_t v111 = (void *)(a2 + v19);
      uint64_t v20 = sub_1C1518CDC();
      uint64_t v113 = *(void *)(v20 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v118 = v21;
      if (v21((char *)v111, 1, v20))
      {
        sub_1BFF71E30();
        memcpy(__dst, v111, *(void *)(*(void *)(v22 - 8) + 64));
        uint64_t v23 = v113;
      }
      else
      {
        uint64_t v23 = v113;
        (*(void (**)(void *, void *, uint64_t))(v113 + 16))(__dst, v111, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(__dst, 0, 1, v20);
      }
      sub_1C0455274();
      uint64_t v88 = *(int *)(v87 + 48);
      unint64_t v89 = (void *)(a1 + v88);
      uint64_t v90 = (void *)(a2 + v88);
      uint64_t v91 = v90[1];
      *unint64_t v89 = *v90;
      v89[1] = v91;
      uint64_t v92 = v90[3];
      v89[2] = v90[2];
      v89[3] = v92;
      uint64_t v93 = v90[5];
      v89[4] = v90[4];
      v89[5] = v93;
      uint64_t v94 = v90[7];
      v89[6] = v90[6];
      v89[7] = v94;
      v89[8] = v90[8];
      uint64_t v95 = *(int *)(v116 + 40);
      uint64_t v96 = (char *)v89 + v95;
      uint64_t v97 = (char *)v90 + v95;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v118(v97, 1, v20))
      {
        sub_1BFF71E30();
        memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v96, v97, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v96, 0, 1, v20);
      }
      goto LABEL_30;
    case 3u:
      uint64_t v24 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v24;
      swift_retain();
      swift_retain();
      goto LABEL_30;
    case 4u:
      uint64_t v25 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v25;
      uint64_t v26 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v26;
      uint64_t v27 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v27;
      uint64_t v28 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v28;
      uint64_t v29 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v29;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v112 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v112;
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v30 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v30;
      uint64_t v31 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v31;
      uint64_t v32 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v32;
      uint64_t v33 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v33;
      uint64_t v34 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v34;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      uint64_t v120 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v120;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_30;
    case 5u:
      uint64_t v41 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v41;
      uint64_t v42 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v42;
      uint64_t v43 = *(void *)(a2 + 32);
      uint64_t v44 = *(void *)(a2 + 40);
      uint64_t v45 = *(void *)(a2 + 48);
      uint64_t v46 = *(void *)(a2 + 56);
      uint64_t v47 = *(void *)(a2 + 64);
      uint64_t v48 = *(void *)(a2 + 72);
      unsigned __int8 v49 = *(unsigned char *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v43, v44, v45, v46, v47, v48, v49);
      *(void *)(a1 + 32) = v43;
      *(void *)(a1 + 40) = v44;
      *(void *)(a1 + 48) = v45;
      *(void *)(a1 + 56) = v46;
      *(void *)(a1 + 64) = v47;
      *(void *)(a1 + 72) = v48;
      *(unsigned char *)(a1 + 80) = v49;
      uint64_t v50 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v50;
      uint64_t v51 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v51;
      uint64_t v52 = *(void *)(a2 + 120);
      uint64_t v53 = *(void *)(a2 + 128);
      uint64_t v54 = *(void *)(a2 + 136);
      uint64_t v55 = *(void *)(a2 + 144);
      uint64_t v56 = *(void *)(a2 + 152);
      uint64_t v57 = *(void *)(a2 + 160);
      unsigned __int8 v58 = *(unsigned char *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v52, v53, v54, v55, v56, v57, v58);
      *(void *)(a1 + 120) = v52;
      *(void *)(a1 + 128) = v53;
      *(void *)(a1 + 136) = v54;
      *(void *)(a1 + 144) = v55;
      *(void *)(a1 + 152) = v56;
      *(void *)(a1 + 160) = v57;
      *(unsigned char *)(a1 + 168) = v58;
      goto LABEL_30;
    case 6u:
      uint64_t v59 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v59;
      uint64_t v60 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v60;
      uint64_t v61 = *(void *)(a2 + 32);
      uint64_t v62 = *(void *)(a2 + 40);
      uint64_t v63 = *(void *)(a2 + 48);
      uint64_t v64 = *(void *)(a2 + 56);
      uint64_t v65 = *(void *)(a2 + 64);
      uint64_t v66 = *(void *)(a2 + 72);
      unsigned __int8 v67 = *(unsigned char *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v61, v62, v63, v64, v65, v66, v67);
      *(void *)(a1 + 32) = v61;
      *(void *)(a1 + 40) = v62;
      *(void *)(a1 + 48) = v63;
      *(void *)(a1 + 56) = v64;
      *(void *)(a1 + 64) = v65;
      *(void *)(a1 + 72) = v66;
      *(unsigned char *)(a1 + 80) = v67;
      uint64_t v68 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v68;
      uint64_t v69 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v69;
      uint64_t v70 = *(void *)(a2 + 120);
      uint64_t v71 = *(void *)(a2 + 128);
      uint64_t v72 = *(void *)(a2 + 136);
      uint64_t v73 = *(void *)(a2 + 144);
      uint64_t v74 = *(void *)(a2 + 152);
      uint64_t v75 = *(void *)(a2 + 160);
      unsigned __int8 v76 = *(unsigned char *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v70, v71, v72, v73, v74, v75, v76);
      *(void *)(a1 + 120) = v70;
      *(void *)(a1 + 128) = v71;
      *(void *)(a1 + 136) = v72;
      *(void *)(a1 + 144) = v73;
      *(void *)(a1 + 152) = v74;
      *(void *)(a1 + 160) = v75;
      *(unsigned char *)(a1 + 168) = v76;
      long long v77 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 200) = v77;
      (**(void (***)(uint64_t, uint64_t))(v77 - 8))(a1 + 176, a2 + 176);
      goto LABEL_30;
    case 7u:
      uint64_t v35 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v35;
      uint64_t v36 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v36;
      uint64_t v37 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v37;
      uint64_t v38 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v38;
      uint64_t v40 = *(void *)(a2 + 64);
      uint64_t v39 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v40;
      *(void *)(a1 + 72) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_30:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v7 = (_OWORD *)(a2 + 64);
      unint64_t v8 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *v7;
      }
      else
      {
        *(unsigned char *)(a1 + 64) = *(unsigned char *)v7;
        *(void *)(a1 + 72) = v8;
        swift_bridgeObjectRetain();
      }
      uint64_t v99 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v99;
      uint64_t v100 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v100;
      uint64_t v101 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v101;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      uint64_t v102 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v102;
      uint64_t v103 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v103;
      uint64_t v104 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v104;
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      long long v119 = (unsigned char *)(a2 + 208);
      unint64_t v114 = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v114 >= 2)
      {
        uint64_t v106 = (_OWORD *)(a1 + 208);
        if (v114 != 2)
        {
          *(unsigned char *)(a1 + 208) = *v119;
          *(void *)(a1 + 216) = v114;
          swift_bridgeObjectRetain();
LABEL_29:
          uint64_t v107 = *(void *)(a2 + 232);
          *(void *)(a1 + 224) = *(void *)(a2 + 224);
          *(void *)(a1 + 232) = v107;
          uint64_t v108 = *(void *)(a2 + 248);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          *(void *)(a1 + 248) = v108;
          uint64_t v109 = *(void *)(a2 + 264);
          *(void *)(a1 + 256) = *(void *)(a2 + 256);
          *(void *)(a1 + 264) = v109;
          *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
          *(void *)(a1 + 280) = *(void *)(a2 + 280);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_30;
        }
        long long v105 = *(_OWORD *)v119;
      }
      else
      {
        long long v105 = *(_OWORD *)v119;
        uint64_t v106 = (_OWORD *)(a1 + 208);
      }
      *uint64_t v106 = v105;
      goto LABEL_29;
  }
}

uint64_t sub_1C0C8D780(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0C8E3A0(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        unint64_t v11 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v11 >= 0xF)
        {
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        }
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        unint64_t v55 = *(void *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >= 0xF)
        {
          *(void *)(a1 + 176) = *(void *)(a2 + 176);
          *(void *)(a1 + 184) = *(void *)(a2 + 184);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
        }
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        uint64_t v5 = type metadata accessor for FormatSlotDefinition();
        uint64_t v6 = *(int *)(v5 + 40);
        long long __dst = (void *)(a1 + v6);
        uint64_t v53 = v5;
        uint64_t v50 = (const void *)(a2 + v6);
        uint64_t v7 = sub_1C1518CDC();
        uint64_t v51 = *(void *)(v7 - 8);
        unint64_t v8 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v8(v50, 1, v7))
        {
          sub_1BFF71E30();
          memcpy(__dst, v50, *(void *)(*(void *)(v9 - 8) + 64));
          uint64_t v10 = v51;
        }
        else
        {
          uint64_t v10 = v51;
          (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(__dst, v50, v7);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v7);
        }
        sub_1C0455274();
        uint64_t v42 = *(int *)(v41 + 48);
        uint64_t v43 = (void *)(a1 + v42);
        uint64_t v44 = (void *)(a2 + v42);
        *uint64_t v43 = *v44;
        v43[1] = v44[1];
        v43[2] = v44[2];
        v43[3] = v44[3];
        v43[4] = v44[4];
        v43[5] = v44[5];
        v43[6] = v44[6];
        void v43[7] = v44[7];
        v43[8] = v44[8];
        uint64_t v45 = *(int *)(v53 + 40);
        uint64_t v46 = (char *)v43 + v45;
        uint64_t v47 = (char *)v44 + v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v8(v47, 1, v7))
        {
          sub_1BFF71E30();
          memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v46, v47, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v7);
        }
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_retain();
        swift_retain();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v12 = *(void *)(a2 + 32);
        uint64_t v13 = *(void *)(a2 + 40);
        uint64_t v14 = *(void *)(a2 + 48);
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(a2 + 64);
        uint64_t v17 = *(void *)(a2 + 72);
        unsigned __int8 v18 = *(unsigned char *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v12, v13, v14, v15, v16, v17, v18);
        *(void *)(a1 + 32) = v12;
        *(void *)(a1 + 40) = v13;
        *(void *)(a1 + 48) = v14;
        *(void *)(a1 + 56) = v15;
        *(void *)(a1 + 64) = v16;
        *(void *)(a1 + 72) = v17;
        *(unsigned char *)(a1 + 80) = v18;
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        uint64_t v19 = *(void *)(a2 + 120);
        uint64_t v20 = *(void *)(a2 + 128);
        uint64_t v21 = *(void *)(a2 + 136);
        uint64_t v22 = *(void *)(a2 + 144);
        uint64_t v23 = *(void *)(a2 + 152);
        uint64_t v24 = *(void *)(a2 + 160);
        unsigned __int8 v25 = *(unsigned char *)(a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v19, v20, v21, v22, v23, v24, v25);
        *(void *)(a1 + 120) = v19;
        *(void *)(a1 + 128) = v20;
        *(void *)(a1 + 136) = v21;
        *(void *)(a1 + 144) = v22;
        *(void *)(a1 + 152) = v23;
        *(void *)(a1 + 160) = v24;
        *(unsigned char *)(a1 + 168) = v25;
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v26 = *(void *)(a2 + 32);
        uint64_t v27 = *(void *)(a2 + 40);
        uint64_t v28 = *(void *)(a2 + 48);
        uint64_t v29 = *(void *)(a2 + 56);
        uint64_t v30 = *(void *)(a2 + 64);
        uint64_t v31 = *(void *)(a2 + 72);
        unsigned __int8 v32 = *(unsigned char *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v26, v27, v28, v29, v30, v31, v32);
        *(void *)(a1 + 32) = v26;
        *(void *)(a1 + 40) = v27;
        *(void *)(a1 + 48) = v28;
        *(void *)(a1 + 56) = v29;
        *(void *)(a1 + 64) = v30;
        *(void *)(a1 + 72) = v31;
        *(unsigned char *)(a1 + 80) = v32;
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        uint64_t v33 = *(void *)(a2 + 120);
        uint64_t v34 = *(void *)(a2 + 128);
        uint64_t v35 = *(void *)(a2 + 136);
        uint64_t v36 = *(void *)(a2 + 144);
        uint64_t v37 = *(void *)(a2 + 152);
        uint64_t v38 = *(void *)(a2 + 160);
        unsigned __int8 v39 = *(unsigned char *)(a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v33, v34, v35, v36, v37, v38, v39);
        *(void *)(a1 + 120) = v33;
        *(void *)(a1 + 128) = v34;
        *(void *)(a1 + 136) = v35;
        *(void *)(a1 + 144) = v36;
        *(void *)(a1 + 152) = v37;
        *(void *)(a1 + 160) = v38;
        *(unsigned char *)(a1 + 168) = v39;
        uint64_t v40 = *(void *)(a2 + 200);
        *(void *)(a1 + 200) = v40;
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        (**(void (***)(uint64_t, uint64_t))(v40 - 8))(a1 + 176, a2 + 176);
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v4 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v4 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
        }
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        unint64_t v54 = *(void *)(a2 + 216);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v54 <= 2)
        {
          *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
        }
        else
        {
          *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
          *(void *)(a1 + 216) = *(void *)(a2 + 216);
          swift_bridgeObjectRetain();
        }
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
        *(void *)(a1 + 280) = *(void *)(a2 + 280);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0C8E3A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatPackageError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatPackageError()
{
  uint64_t result = qword_1EA1A5650;
  if (!qword_1EA1A5650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C0C8E448(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    *((void *)a1 + 8) = *((void *)a2 + 8);
    uint64_t v8 = type metadata accessor for FormatSlotDefinition();
    uint64_t v9 = *(int *)(v8 + 40);
    uint64_t v10 = (char *)a1 + v9;
    unint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C1518CDC();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      sub_1BFF71E30();
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    sub_1C0455274();
    uint64_t v17 = *(int *)(v16 + 48);
    unsigned __int8 v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    long long v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)unsigned __int8 v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    long long v21 = *((_OWORD *)v19 + 3);
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    *((_OWORD *)v18 + 3) = v21;
    *((void *)v18 + 8) = *((void *)v19 + 8);
    uint64_t v22 = *(int *)(v8 + 40);
    uint64_t v23 = &v18[v22];
    uint64_t v24 = &v19[v22];
    if (v14(&v19[v22], 1, v12))
    {
      sub_1BFF71E30();
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v24, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1C0C8E698(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0C8E3A0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v8 = type metadata accessor for FormatSlotDefinition();
      uint64_t v9 = *(int *)(v8 + 40);
      uint64_t v10 = (char *)a1 + v9;
      unint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1C1518CDC();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (v14(v11, 1, v12))
      {
        sub_1BFF71E30();
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      sub_1C0455274();
      uint64_t v17 = *(int *)(v16 + 48);
      unsigned __int8 v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      long long v20 = *((_OWORD *)v19 + 1);
      *(_OWORD *)unsigned __int8 v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v20;
      long long v21 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v21;
      *((void *)v18 + 8) = *((void *)v19 + 8);
      uint64_t v22 = *(int *)(v8 + 40);
      uint64_t v23 = &v18[v22];
      uint64_t v24 = &v19[v22];
      if (v14(&v19[v22], 1, v12))
      {
        sub_1BFF71E30();
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v24, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C0C8E8F8()
{
  v2[4] = &unk_1C159C9D8;
  v2[5] = &unk_1C159C9F0;
  uint64_t result = type metadata accessor for FormatSlotDefinition();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[6] = v2;
    v2[7] = &unk_1C159CA08;
    v2[8] = &unk_1C159CA20;
    v2[9] = &unk_1C159CA38;
    v2[10] = &unk_1C159CA50;
    v2[11] = &unk_1C159CA68;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FeedSectionPositionProviderType.strictSectionPosition<A, B>(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 8))(a1, a2, a3, a5, a6, a8, a9, a4, a7);
  if (v9 == sub_1C15151CC()) {
    return -1;
  }
  else {
    return v9;
  }
}

uint64_t FeedSectionPositionProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FeedSectionPositionProvider.deinit()
{
  return v0;
}

uint64_t FeedSectionPositionProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedSectionPositionProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedSectionPositionProvider);
}

uint64_t dispatch thunk of FeedSectionPositionProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

ValueMetadata *type metadata accessor for DebugFormatCompilerSection()
{
  return &type metadata for DebugFormatCompilerSection;
}

uint64_t sub_1C0C8EAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for DebugFormatCompilingPackage() + 20);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, v3, v4);
}

uint64_t sub_1C0C8EB20@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, void *a3@<X8>)
{
  return sub_1C0C8F354(a1, a2, (uint64_t (*)(uint64_t, __n128))sub_1C0ED0F90, 0x2073726F72724520, 0xE900000000000028, a3);
}

uint64_t sub_1C0C8EB50@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, void *a3@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v5 = type metadata accessor for DebugFormatCompilerItem();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v46 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v48 = (uint64_t)&v40 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v40 - v13);
  uint64_t v47 = *a2;
  uint64_t v15 = sub_1C0ED13AC(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v43 = *(void *)(v15 + 16);
  if (v43)
  {
    unint64_t v17 = 0;
    while (2)
    {
      if (v17 >= *(void *)(v15 + 16))
      {
        __break(1u);
        JUMPOUT(0x1C0C8F2D0);
      }
      unint64_t v18 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v19 = *(void *)(v46 + 72);
      unint64_t v20 = v17 + 1;
      sub_1C0C8FE8C(v15 + v18 + v19 * v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      unint64_t v21 = 0xE600000000000000;
      uint64_t v22 = 0x74756F79616CLL;
      switch(*(unsigned char *)(*v14 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role))
      {
        case 1:
          uint64_t v22 = 0x726564616568;
          break;
        case 2:
          uint64_t v22 = 0x7265746F6F66;
          break;
        case 3:
          unint64_t v21 = 0xE700000000000000;
          uint64_t v22 = 0x6C6C6177796170;
          break;
        case 4:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v22 = 0x656D656874;
          break;
        case 5:
          unint64_t v21 = 0xE700000000000000;
          uint64_t v22 = 0x7972617262696CLL;
          break;
        case 6:
          uint64_t v22 = 0x756F72676B636162;
          unint64_t v21 = 0xEA0000000000646ELL;
          break;
        default:
          break;
      }
      unint64_t v23 = 0xE600000000000000;
      uint64_t v24 = 0x74756F79616CLL;
      switch(v47)
      {
        case 1:
          uint64_t v25 = 1684104552;
          goto LABEL_16;
        case 2:
          uint64_t v25 = 1953460070;
LABEL_16:
          if (v22 != (v25 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 3:
          unint64_t v23 = 0xE700000000000000;
          if (v22 != 0x6C6C6177796170) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 4:
          unint64_t v23 = 0xE500000000000000;
          if (v22 != 0x656D656874) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 5:
          unint64_t v23 = 0xE700000000000000;
          uint64_t v24 = 0x7972617262696CLL;
          goto LABEL_23;
        case 6:
          unint64_t v23 = 0xEA0000000000646ELL;
          if (v22 != 0x756F72676B636162) {
            goto LABEL_27;
          }
          goto LABEL_24;
        default:
LABEL_23:
          if (v22 != v24) {
            goto LABEL_27;
          }
LABEL_24:
          if (v21 == v23)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_27:
            char v26 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v26 & 1) == 0)
            {
              sub_1C0C8FEF4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
              goto LABEL_4;
            }
          }
          sub_1C0C8FB0C((uint64_t)v14, v48, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C05F79A8(0, *(void *)(v16 + 16) + 1, 1);
          }
          uint64_t v16 = v50;
          unint64_t v28 = *(void *)(v50 + 16);
          unint64_t v27 = *(void *)(v50 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_1C05F79A8(v27 > 1, v28 + 1, 1);
            uint64_t v16 = v50;
          }
          *(void *)(v16 + 16) = v28 + 1;
          sub_1C0C8FB0C(v48, v16 + v18 + v28 * v19, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
LABEL_4:
          unint64_t v17 = v20;
          if (v43 != v20) {
            continue;
          }
          uint64_t v29 = v50;
          uint64_t v16 = MEMORY[0x1E4FBC860];
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  int64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    uint64_t v50 = v16;
    sub_1C05F7C70(0, v30, 0);
    uint64_t v31 = v29 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
    uint64_t v32 = *(void *)(v46 + 72);
    uint64_t v33 = (uint64_t)v42;
    do
    {
      sub_1C0C8FE8C(v31, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1C0C8FE8C((uint64_t)v9, v33, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      swift_storeEnumTagMultiPayload();
      sub_1C0C8FEF4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      uint64_t v34 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7C70(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v33 = (uint64_t)v42;
        uint64_t v34 = v50;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1C05F7C70(v35 > 1, v36 + 1, 1);
        uint64_t v33 = (uint64_t)v42;
        uint64_t v34 = v50;
      }
      *(void *)(v34 + 16) = v36 + 1;
      sub_1C0C8FB0C(v33, v34+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v36, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerItem);
      v31 += v32;
      --v30;
    }
    while (v30);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v49 = *(void *)(v34 + 16);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C151E80C();
  unint64_t v38 = v51;
  unsigned __int8 v39 = v41;
  *uint64_t v41 = v50;
  v39[1] = v38;
  v39[2] = 0;
  v39[3] = 0;
  v39[4] = v34;
  return result;
}

uint64_t sub_1C0C8F324@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, void *a3@<X8>)
{
  return sub_1C0C8F354(a1, a2, (uint64_t (*)(uint64_t, __n128))sub_1C0ED16A4, 0x7373656363755320, 0xEA00000000002820, a3);
}

uint64_t sub_1C0C8F354@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t (*a3)(uint64_t, __n128)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  v45[1] = a4;
  v45[2] = a5;
  uint64_t v46 = a6;
  uint64_t v9 = type metadata accessor for DebugFormatCompilerItem();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v50 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DebugFormatCompilerResultEntry();
  uint64_t v51 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v53 = (uint64_t)v45 - v15;
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (void *)((char *)v45 - v18);
  uint64_t v52 = *a2;
  uint64_t v20 = a3(a1, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v55 = MEMORY[0x1E4FBC860];
  uint64_t v48 = *(void *)(v20 + 16);
  if (v48)
  {
    unint64_t v22 = 0;
    while (2)
    {
      if (v22 >= *(void *)(v20 + 16))
      {
        __break(1u);
        JUMPOUT(0x1C0C8FAB8);
      }
      unint64_t v23 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v24 = *(void *)(v51 + 72);
      unint64_t v25 = v22 + 1;
      sub_1C0C8FE8C(v20 + v23 + v24 * v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      unint64_t v26 = 0xE600000000000000;
      uint64_t v27 = 0x74756F79616CLL;
      switch(*(unsigned char *)(*v19 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role))
      {
        case 1:
          uint64_t v27 = 0x726564616568;
          break;
        case 2:
          uint64_t v27 = 0x7265746F6F66;
          break;
        case 3:
          unint64_t v26 = 0xE700000000000000;
          uint64_t v27 = 0x6C6C6177796170;
          break;
        case 4:
          unint64_t v26 = 0xE500000000000000;
          uint64_t v27 = 0x656D656874;
          break;
        case 5:
          unint64_t v26 = 0xE700000000000000;
          uint64_t v27 = 0x7972617262696CLL;
          break;
        case 6:
          uint64_t v27 = 0x756F72676B636162;
          unint64_t v26 = 0xEA0000000000646ELL;
          break;
        default:
          break;
      }
      unint64_t v28 = 0xE600000000000000;
      uint64_t v29 = 0x74756F79616CLL;
      switch(v52)
      {
        case 1:
          uint64_t v30 = 1684104552;
          goto LABEL_16;
        case 2:
          uint64_t v30 = 1953460070;
LABEL_16:
          if (v27 != (v30 & 0xFFFF0000FFFFFFFFLL | 0x726500000000)) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 3:
          unint64_t v28 = 0xE700000000000000;
          if (v27 != 0x6C6C6177796170) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 4:
          unint64_t v28 = 0xE500000000000000;
          if (v27 != 0x656D656874) {
            goto LABEL_27;
          }
          goto LABEL_24;
        case 5:
          unint64_t v28 = 0xE700000000000000;
          uint64_t v29 = 0x7972617262696CLL;
          goto LABEL_23;
        case 6:
          unint64_t v28 = 0xEA0000000000646ELL;
          if (v27 != 0x756F72676B636162) {
            goto LABEL_27;
          }
          goto LABEL_24;
        default:
LABEL_23:
          if (v27 != v29) {
            goto LABEL_27;
          }
LABEL_24:
          if (v26 == v28)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_27:
            char v31 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v31 & 1) == 0)
            {
              sub_1C0C8FEF4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
              goto LABEL_4;
            }
          }
          sub_1C0C8FB0C((uint64_t)v19, v53, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C05F79A8(0, *(void *)(v21 + 16) + 1, 1);
          }
          uint64_t v21 = v55;
          unint64_t v33 = *(void *)(v55 + 16);
          unint64_t v32 = *(void *)(v55 + 24);
          if (v33 >= v32 >> 1)
          {
            sub_1C05F79A8(v32 > 1, v33 + 1, 1);
            uint64_t v21 = v55;
          }
          *(void *)(v21 + 16) = v33 + 1;
          sub_1C0C8FB0C(v53, v21 + v23 + v33 * v24, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
LABEL_4:
          unint64_t v22 = v25;
          if (v48 != v25) {
            continue;
          }
          uint64_t v34 = v55;
          uint64_t v21 = MEMORY[0x1E4FBC860];
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  int64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    uint64_t v55 = v21;
    sub_1C05F7C70(0, v35, 0);
    uint64_t v36 = v34 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
    uint64_t v37 = *(void *)(v51 + 72);
    uint64_t v38 = (uint64_t)v47;
    do
    {
      sub_1C0C8FE8C(v36, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      sub_1C0C8FE8C((uint64_t)v13, v38, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      swift_storeEnumTagMultiPayload();
      sub_1C0C8FEF4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerResultEntry);
      uint64_t v39 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7C70(0, *(void *)(v39 + 16) + 1, 1);
        uint64_t v38 = (uint64_t)v47;
        uint64_t v39 = v55;
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_1C05F7C70(v40 > 1, v41 + 1, 1);
        uint64_t v38 = (uint64_t)v47;
        uint64_t v39 = v55;
      }
      *(void *)(v39 + 16) = v41 + 1;
      sub_1C0C8FB0C(v38, v39+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v41, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerItem);
      v36 += v37;
      --v35;
    }
    while (v35);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v39 = MEMORY[0x1E4FBC860];
  }
  uint64_t v55 = 0;
  unint64_t v56 = 0xE000000000000000;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v54 = *(void *)(v39 + 16);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C151E80C();
  unint64_t v43 = v56;
  uint64_t v44 = v46;
  *uint64_t v46 = v55;
  v44[1] = v43;
  v44[2] = 0;
  uint64_t v44[3] = 0;
  v44[4] = v39;
  return result;
}

uint64_t sub_1C0C8FB0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C8FB74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DebugFormatCompilingPackage();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DebugFormatCompilerItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void *)((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00B3B90(a1);
  swift_bridgeObjectRelease();
  sub_1C151631C();
  sub_1C0AF4E68();
  uint64_t v12 = sub_1C151EC4C();
  swift_release();
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    unint64_t v22 = a2;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C05F7C70(0, v13, 0);
    uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
    v21[1] = v12;
    uint64_t v15 = v12 + ((v14 + 32) & ~v14);
    uint64_t v16 = *(void *)(v5 + 72);
    do
    {
      sub_1C0C8FE8C(v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage);
      *uint64_t v11 = *v7;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      sub_1C0C8FEF4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage);
      uint64_t v17 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7C70(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v23;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C05F7C70(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v23;
      }
      *(void *)(v17 + 16) = v19 + 1;
      sub_1C0C8FB0C((uint64_t)v11, v17+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v19, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilerItem);
      v15 += v16;
      --v13;
    }
    while (v13);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v22;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  *a2 = 0x6E696C69706D6F43;
  a2[1] = 0xAC000000A680E267;
  a2[2] = 0;
  a2[3] = 0;
  a2[4] = v17;
  return result;
}

uint64_t sub_1C0C8FE8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C8FEF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL FeedOfflineProviding.isOnline.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() == 0;
}

uint64_t dispatch thunk of FeedOfflineProviding.offlineReason.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FormatMediaTimingFillMode.rawValue.getter()
{
  uint64_t result = 0x7364726177726F66;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x647261776B636162;
      break;
    case 2:
      uint64_t result = 1752461154;
      break;
    case 3:
      uint64_t result = 0x6465766F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatMediaTimingFillMode_optional __swiftcall FormatMediaTimingFillMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0C90080(unsigned __int8 *a1, char *a2)
{
  return sub_1C149507C(*a1, *a2);
}

uint64_t sub_1C0C9008C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0C90164()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C90224()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatMediaTimingFillMode_optional sub_1C0C902F8(Swift::String *a1)
{
  return FormatMediaTimingFillMode.init(rawValue:)(*a1);
}

void sub_1C0C90304(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x7364726177726F66;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000073;
      uint64_t v3 = 0x647261776B636162;
      goto LABEL_3;
    case 2:
      *a1 = 1752461154;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6465766F6D6572;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C0C9039C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0C903FC(void *a1)
{
  return FormatMediaTimingFillMode.encode(to:)(a1);
}

uint64_t CAMediaTimingFillMode.description.getter()
{
  uint64_t v0 = 0x647261776B636142;
  uint64_t v1 = sub_1C151E62C();
  uint64_t v3 = v2;
  if (v1 == sub_1C151E62C() && v3 == v4) {
    goto LABEL_12;
  }
  char v6 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6) {
    return v0;
  }
  uint64_t v0 = 1752461122;
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;
  if (v7 == sub_1C151E62C() && v9 == v10) {
    goto LABEL_12;
  }
  char v12 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12) {
    return v0;
  }
  uint64_t v0 = 0x7364726177726F46;
  uint64_t v14 = sub_1C151E62C();
  uint64_t v16 = v15;
  if (v14 == sub_1C151E62C() && v16 == v17) {
    goto LABEL_12;
  }
  char v18 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18) {
    return v0;
  }
  uint64_t v0 = 0x6465766F6D6552;
  uint64_t v19 = sub_1C151E62C();
  uint64_t v21 = v20;
  if (v19 == sub_1C151E62C() && v21 == v22)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return v0;
  }
  char v23 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    return 0x6E776F6E6B6E55;
  }
  return v0;
}

uint64_t sub_1C0C90684()
{
  return CAMediaTimingFillMode.description.getter();
}

unint64_t sub_1C0C90690()
{
  unint64_t result = qword_1EA1A5660;
  if (!qword_1EA1A5660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5660);
  }
  return result;
}

unint64_t sub_1C0C906E4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0C90714();
  unint64_t result = sub_1C0C90768();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0C90714()
{
  unint64_t result = qword_1EA1A5668;
  if (!qword_1EA1A5668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5668);
  }
  return result;
}

unint64_t sub_1C0C90768()
{
  unint64_t result = qword_1EA1A5670;
  if (!qword_1EA1A5670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5670);
  }
  return result;
}

unint64_t sub_1C0C907BC(uint64_t a1)
{
  unint64_t result = sub_1C0C907E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C907E4()
{
  unint64_t result = qword_1EA1A5678;
  if (!qword_1EA1A5678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5678);
  }
  return result;
}

unint64_t sub_1C0C90838(void *a1)
{
  a1[1] = sub_1BFCAF09C();
  a1[2] = sub_1C08F615C();
  unint64_t result = sub_1C0C90690();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFillMode()
{
  return &type metadata for FormatMediaTimingFillMode;
}

id sub_1C0C908AC(void *a1, id a2, char a3)
{
  if (a3) {
    return (id)swift_retain();
  }
  else {
    return a1;
  }
}

void destroy for FormatAccessibilityCustomAction(uint64_t a1)
{
}

void sub_1C0C908CC(void *a1, id a2, char a3)
{
  if (a3) {
    swift_release();
  }
  else {
}
  }

uint64_t _s8NewsFeed31FormatAccessibilityCustomActionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0C908AC(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatAccessibilityCustomAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C0C908AC(*(void **)a2, v4, v5);
  char v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0C908CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatAccessibilityCustomAction(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0C908CC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAccessibilityCustomAction()
{
  return &type metadata for FormatAccessibilityCustomAction;
}

uint64_t FormatText.string.getter()
{
  return swift_retain();
}

uint64_t FormatText.link.getter()
{
  return swift_retain();
}

uint64_t FormatText.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t method lookup function for FormatText(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatText);
}

id IssueCoverColorPalette.lightPlaceholderColor.getter()
{
  return *v0;
}

id IssueCoverColorPalette.darkPlaceholderColor.getter()
{
  return *(id *)(v0 + 8);
}

id IssueCoverColorPalette.shadowColor.getter()
{
  return *(id *)(v0 + 16);
}

id IssueCoverColorPalette.borderColor.getter()
{
  return *(id *)(v0 + 24);
}

id static IssueCoverColorPalette.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB87B0D8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EB877AB8;
  char v3 = (void *)unk_1EB877AC0;
  char v5 = (void *)qword_1EB877AC8;
  uint64_t v4 = unk_1EB877AD0;
  id v10 = (id)unk_1EB877AD0;
  *a1 = qword_1EB877AB8;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;
  return v10;
}

UIColor __swiftcall IssueCoverColorPalette.placeholderColor(on:)(UIColor on)
{
  char v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = (UIColor *)swift_allocObject();
  v5[2].super.Class isa = on.super.isa;
  v5[3].super.Class isa = v3;
  v5[4].super.Class isa = v4;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v15[4] = sub_1C0C90CE8;
  v15[5] = v5;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  uint64_t v15[2] = sub_1BFDF2404;
  v15[3] = &block_descriptor_53;
  id v7 = _Block_copy(v15);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v8;
  uint64_t v11 = v9;
  char v12 = on.super.isa;
  id v13 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  swift_release();
  return (UIColor)v13;
}

id sub_1C0C90C10(uint64_t a1, id a2, void *a3, void *a4)
{
  id v6 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  objc_msgSend(v6, sel_ts_luminance);
  double v8 = v7;

  if (v8 <= 0.7) {
    uint64_t v9 = a4;
  }
  else {
    uint64_t v9 = a3;
  }
  return v9;
}

uint64_t sub_1C0C90CA0()
{
  return swift_deallocObject();
}

id sub_1C0C90CE8(uint64_t a1)
{
  return sub_1C0C90C10(a1, v1[2], v1[3], v1[4]);
}

ValueMetadata *type metadata accessor for IssueCoverColorPalette()
{
  return &type metadata for IssueCoverColorPalette;
}

double IssueCoverViewLayoutOptions.origin.getter()
{
  return *(double *)v0;
}

__n128 IssueCoverViewLayoutOptions.sizeConstraint.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[2].n128_u8[0];
  __n128 result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

double IssueCoverViewLayoutOptions.shadowRadius.getter()
{
  return *(double *)(v0 + 40);
}

double IssueCoverViewLayoutOptions.cornerRadius.getter()
{
  return *(double *)(v0 + 48);
}

uint64_t IssueCoverViewLayoutOptions.uiRectCorner.getter()
{
  return *(void *)(v0 + 56);
}

double IssueCoverViewLayoutOptions.borderWidth.getter()
{
  return *(double *)(v0 + 64);
}

__n128 IssueCoverViewLayoutOptions.init(origin:sizeConstraint:shadowRadius:cornerRadius:uiRectCorner:borderWidth:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>)
{
  unsigned __int8 v8 = a1[1].n128_u8[0];
  a3->n128_f64[0] = a4;
  a3->n128_f64[1] = a5;
  __n128 result = *a1;
  a3[1] = *a1;
  a3[2].n128_u8[0] = v8;
  a3[2].n128_f64[1] = a6;
  a3[3].n128_f64[0] = a7;
  a3[3].n128_u64[1] = a2;
  a3[4].n128_f64[0] = a8;
  return result;
}

uint64_t getEnumTagSinglePayload for IssueCoverViewLayoutOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueCoverViewLayoutOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutOptions()
{
  return &type metadata for IssueCoverViewLayoutOptions;
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutOptions.SizeConstraint()
{
  return &type metadata for IssueCoverViewLayoutOptions.SizeConstraint;
}

uint64_t sub_1C0C90E20@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v179 = a1;
  uint64_t v173 = a2;
  sub_1BFEE9FE4(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v168 = (char *)&v154 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v171 = (uint64_t)&v154 - v5;
  sub_1BFEE9FE4(0, &qword_1EB8711A8, MEMORY[0x1E4F27DE8]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v164 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v169 = (char *)&v154 - v9;
  uint64_t v172 = sub_1C151677C();
  uint64_t v170 = *(void *)(v172 - 8);
  MEMORY[0x1F4188790](v172);
  long long v162 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v157 = (char *)&v154 - v12;
  uint64_t v198 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v208 = *(void (**)(char *))(v198 - 8);
  MEMORY[0x1F4188790](v198);
  uint64_t v192 = (unint64_t *)((char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEE9FE4(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v201 = (uint64_t)&v154 - v15;
  uint64_t v16 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v204 = (uint64_t)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v154 - v19;
  uint64_t v205 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v205);
  uint64_t v160 = (uint64_t)&v154 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v163 = (uint64_t)&v154 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v211 = (uint64_t)&v154 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v216 = (uint64_t)&v154 - v27;
  sub_1C00BE41C();
  uint64_t v209 = v28;
  uint64_t v207 = *(char **)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v210 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v200 = (char *)&v154 - v31;
  sub_1C0C92880();
  uint64_t v190 = v32;
  MEMORY[0x1F4188790](v32);
  uint64_t v189 = (char *)&v154 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v154 - v35;
  uint64_t v215 = (char *)MEMORY[0x1E4FAD830];
  sub_1C0C929C0(0, &qword_1EB864568, MEMORY[0x1E4FAD830]);
  uint64_t v38 = v37;
  uint64_t v212 = *(void **)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v188 = (char *)&v154 - v39;
  sub_1C0C929C0(0, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
  uint64_t v41 = v40;
  uint64_t v197 = *(void (***)(char *))(v40 - 8);
  MEMORY[0x1F4188790](v40);
  unint64_t v199 = (char *)&v154 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  uint64_t v187 = (char *)&v154 - v44;
  sub_1C0C92AB4();
  uint64_t v46 = v45 - 8;
  MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v154 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v154 - v50;
  uint64_t v180 = sub_1C151631C();
  uint64_t v177 = *(void *)(v180 - 8);
  MEMORY[0x1F4188790](v180);
  unint64_t v166 = (char *)&v154 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v154 - v54;
  sub_1BFEE9FE4(0, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1F4188790](v56 - 8);
  id v161 = (char *)&v154 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v58);
  uint64_t v60 = (char *)&v154 - v59;
  MEMORY[0x1F4188790](v61);
  uint64_t v63 = (char *)&v154 - v62;
  uint64_t v64 = type metadata accessor for FeedWebEmbed();
  uint64_t v176 = *(void *)(v64 - 8);
  uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v176 + 56);
  unint64_t v174 = v63;
  uint64_t v206 = v64;
  v202 = v65;
  uint64_t v203 = v176 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v65)(v63, 1, 1);
  uint64_t v175 = v55;
  sub_1C15162CC();
  uint64_t v66 = (void (*)(char *, uint64_t, uint64_t))v212[2];
  uint64_t v186 = v212 + 2;
  uint64_t v185 = v66;
  v66(v48, v179, v38);
  uint64_t v67 = sub_1C0C9297C(&qword_1EB864560, &qword_1EB864568, (uint64_t (*)(uint64_t, void *))v215);
  sub_1C151F09C();
  *(void *)&v48[*(int *)(v46 + 44)] = v217;
  sub_1C0C92D6C((uint64_t)v48, (uint64_t)v51, (uint64_t (*)(void))sub_1C0C92AB4);
  uint64_t v68 = *(int *)(v46 + 44);
  uint64_t v69 = v67;
  uint64_t v70 = &v51[v68];
  uint64_t v71 = *(void *)&v51[v68];
  sub_1C151F0EC();
  uint64_t v72 = (uint64_t)v51;
  if (v71 == v217) {
    goto LABEL_53;
  }
  uint64_t v213 = v197 + 2;
  uint64_t v184 = (void (**)(char *, uint64_t))(v212 + 1);
  uint64_t v212 = v197 + 1;
  uint64_t v197 = (void (**)(char *))(v207 + 16);
  long long v196 = (void (**)(char *, char *, uint64_t))(v207 + 32);
  unint64_t v195 = (unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48);
  id v193 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)v208 + 48);
  uint64_t v194 = (void (**)(char *, uint64_t))(v207 + 8);
  id v159 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48);
  uint64_t v167 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56);
  uint64_t v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48);
  uint64_t v155 = (void (**)(char *, uint64_t, uint64_t))(v177 + 32);
  uint64_t v156 = (void (**)(char *, uint64_t))(v177 + 8);
  double v73 = 1.79769313e308;
  uint64_t v191 = v38;
  uint64_t v214 = v36;
  uint64_t v183 = v51;
  uint64_t v182 = v69;
  uint64_t v215 = v70;
  uint64_t v181 = v20;
  do
  {
    uint64_t v74 = v72;
    uint64_t v75 = (void (*)(uint64_t *, void))sub_1C151F19C();
    unsigned __int8 v76 = *v213;
    long long v77 = v187;
    (*v213)(v187);
    v75(&v217, 0);
    uint64_t v78 = v188;
    v185(v188, v74, v38);
    sub_1C151F0FC();
    (*v184)(v78, v38);
    uint64_t v79 = (uint64_t)v189;
    ((void (*)(char *, char *, uint64_t))v76)(v189, v77, v41);
    sub_1C0C9297C((unint64_t *)&unk_1EB8629E0, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
    sub_1C151F09C();
    uint64_t v80 = v77;
    uint64_t v81 = (char *)*v212;
    ((void (*)(char *, uint64_t))*v212)(v80, v41);
    uint64_t v82 = v190;
    *(void *)(v79 + *(int *)(v190 + 36)) = v217;
    uint64_t v83 = (uint64_t)v214;
    sub_1C0C92D6C(v79, (uint64_t)v214, (uint64_t (*)(void))sub_1C0C92880);
    uint64_t v84 = (uint64_t *)(v83 + *(int *)(v82 + 36));
    uint64_t v85 = *v84;
    sub_1C151F0EC();
    if (v85 == v217)
    {
      double v86 = v73;
      uint64_t v87 = v215;
LABEL_51:
      uint64_t v38 = v191;
      goto LABEL_52;
    }
    uint64_t v207 = v81;
    uint64_t v208 = v76;
    uint64_t v88 = (uint64_t)v181;
    while (2)
    {
      uint64_t v90 = v209;
      unint64_t v89 = v210;
      uint64_t v91 = (uint64_t)v214;
      while (1)
      {
        uint64_t v93 = (void (*)(uint64_t *, void))sub_1C151F19C();
        uint64_t v94 = v200;
        (*v197)(v200);
        v93(&v217, 0);
        uint64_t v95 = v199;
        ((void (*)(char *, uint64_t, uint64_t))v208)(v199, v91, v41);
        sub_1C151F0FC();
        ((void (*)(char *, uint64_t))v207)(v95, v41);
        (*v196)(v89, v94, v90);
        sub_1C151A30C();
        uint64_t v96 = v204;
        sub_1C0C92C28(v88, v204, (uint64_t (*)(void))type metadata accessor for FormatModel);
        sub_1C0C92B68();
        uint64_t v98 = v97;
        uint64_t v99 = v96 + *(int *)(v97 + 48);
        uint64_t v100 = v216;
        sub_1C0C92D6C(v96, v216, type metadata accessor for FeedItem);
        sub_1C0C92BD4(v99);
        sub_1C0C92DD4(v88, (uint64_t (*)(void))type metadata accessor for FormatModel);
        uint64_t v101 = v211;
        sub_1C0C92C28(v100, v211, type metadata accessor for FeedItem);
        unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload - 5 < 0xC) {
          goto LABEL_11;
        }
        if (EnumCaseMultiPayload >= 4)
        {
          uint64_t v104 = v198;
          uint64_t v105 = v206;
          if (EnumCaseMultiPayload == 4)
          {
            sub_1C0C92D6C(v211, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
            uint64_t v103 = 0;
          }
          else
          {
            uint64_t v103 = 1;
          }
        }
        else
        {
LABEL_11:
          sub_1C0C92DD4(v101, type metadata accessor for FeedItem);
          uint64_t v103 = 1;
          uint64_t v104 = v198;
          uint64_t v105 = v206;
        }
        uint64_t v87 = v215;
        v202(v60, v103, 1, v105);
        sub_1C0C92DD4(v216, type metadata accessor for FeedItem);
        if ((*v195)(v60, 1, v105) != 1) {
          break;
        }
        sub_1C0C92C90((uint64_t)v60, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
LABEL_8:
        uint64_t v90 = v209;
        unint64_t v89 = v210;
        (*v194)(v210, v209);
        uint64_t v92 = *v84;
        uint64_t v91 = (uint64_t)v214;
        sub_1C151F0EC();
        if (v92 == v217)
        {
          double v86 = v73;
          goto LABEL_51;
        }
      }
      uint64_t v106 = (uint64_t)&v60[*(int *)(v105 + 52)];
      uint64_t v107 = v201;
      sub_1C0AB2C18(v106, v201);
      if ((*v193)(v107, 1, v104) == 1)
      {
        sub_1C0C92C90(v201, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_20:
        sub_1C0C92DD4((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        goto LABEL_8;
      }
      uint64_t v108 = v201;
      uint64_t v109 = v192;
      sub_1C0C92C28(v201, (uint64_t)v192, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C0C92DD4((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1C0C92DD4(v108, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_19:
        uint64_t v87 = v215;
        goto LABEL_20;
      }
      unint64_t v110 = *v109;
      sub_1C0C92DD4(v108, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (v110 >> 61)
      {
        swift_release();
        goto LABEL_19;
      }
      uint64_t v111 = *(void *)(v110 + 16);
      swift_retain();
      swift_release();
      sub_1C0C92DD4((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v178 = v111;
      unint64_t v112 = *(void *)(v111 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_eventStatus);
      uint64_t v87 = v215;
      switch(v112 >> 60)
      {
        case 2uLL:
        case 3uLL:
        case 7uLL:
          swift_bridgeObjectRelease();
          uint64_t v38 = v191;
          goto LABEL_29;
        case 0xAuLL:
          uint64_t v165 = v112 & 0xFFFFFFFFFFFFFFFLL;
          break;
        default:
          uint64_t v165 = v112 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          break;
      }
      uint64_t v38 = v191;
      char v113 = sub_1C1520A9C();
      swift_release();
      swift_bridgeObjectRelease();
      if (v113)
      {
LABEL_29:
        uint64_t v114 = (uint64_t)v169;
        sub_1C151CC8C();
        uint64_t v115 = v114;
        if ((*v159)(v114, 1, v172) == 1)
        {
          sub_1C0C92C90(v114, &qword_1EB8711A8, MEMORY[0x1E4F27DE8]);
          goto LABEL_31;
        }
        swift_release();
        (*v194)(v210, v209);
        sub_1C0C92DD4((uint64_t)v214, (uint64_t (*)(void))sub_1C0C92880);
        sub_1C0C92DD4((uint64_t)v183, (uint64_t (*)(void))sub_1C0C92AB4);
        (*v156)(v175, v180);
        uint64_t v149 = *(void (**)(char *, uint64_t, uint64_t))(v170 + 32);
        uint64_t v150 = v157;
        uint64_t v151 = v172;
        v149(v157, v115, v172);
        unint64_t v152 = v173;
        v149(v173, (uint64_t)v150, v151);
        uint64_t v153 = type metadata accessor for FormatAutoscrollPivotPoint();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v152, 0, 1, v153);
        uint64_t v139 = (uint64_t)v174;
        return sub_1C0C92C90(v139, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
      }
LABEL_31:
      uint64_t v116 = *(void **)(v178 + 56);
      if (!v116)
      {
        uint64_t v122 = v171;
        (*v167)(v171, 1, 1, v180);
        goto LABEL_37;
      }
      id v117 = objc_msgSend(v116, sel_sportsEventStartTime);
      if (v117)
      {
        uint64_t v118 = v117;
        long long v119 = v168;
        sub_1C15162BC();

        uint64_t v120 = v119;
        uint64_t v121 = 0;
      }
      else
      {
        uint64_t v121 = 1;
        uint64_t v120 = v168;
      }
      uint64_t v123 = v180;
      (*v167)((uint64_t)v120, v121, 1, v180);
      uint64_t v124 = (uint64_t)v120;
      uint64_t v122 = v171;
      sub_1BFCB311C(v124, v171);
      if ((*v158)(v122, 1, v123) == 1)
      {
LABEL_37:
        swift_release();
        (*v194)(v210, v209);
        sub_1C0C92C90(v122, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        double v86 = v73;
      }
      else
      {
        uint64_t v126 = v166;
        (*v155)(v166, v122, v180);
        sub_1C15161FC();
        double v86 = fabs(v127);
        if (v86 >= v73)
        {
          swift_release();
          (*v156)(v126, v180);
          (*v194)(v210, v209);
          double v86 = v73;
          uint64_t v87 = v215;
        }
        else
        {
          sub_1C151A30C();
          uint64_t v128 = v204;
          sub_1C0C92C28(v88, v204, (uint64_t (*)(void))type metadata accessor for FormatModel);
          uint64_t v129 = v128 + *(int *)(v98 + 48);
          uint64_t v130 = v163;
          sub_1C0C92D6C(v128, v163, type metadata accessor for FeedItem);
          sub_1C0C92BD4(v129);
          sub_1C0C92DD4(v88, (uint64_t (*)(void))type metadata accessor for FormatModel);
          uint64_t v131 = v160;
          sub_1C0C92C28(v130, v160, type metadata accessor for FeedItem);
          unsigned int v132 = swift_getEnumCaseMultiPayload();
          if (v132 - 5 >= 0xC && v132 >= 4)
          {
            uint64_t v135 = v166;
            uint64_t v87 = v215;
            if (v132 == 4)
            {
              sub_1C0C92D6C(v131, (uint64_t)v161, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
              uint64_t v133 = 0;
            }
            else
            {
              uint64_t v133 = 1;
            }
            uint64_t v134 = v180;
          }
          else
          {
            sub_1C0C92DD4(v131, type metadata accessor for FeedItem);
            uint64_t v133 = 1;
            uint64_t v134 = v180;
            uint64_t v135 = v166;
            uint64_t v87 = v215;
          }
          uint64_t v136 = (uint64_t)v161;
          v202(v161, v133, 1, v206);
          swift_release();
          sub_1C0C92DD4(v163, type metadata accessor for FeedItem);
          (*v156)(v135, v134);
          (*v194)(v210, v209);
          sub_1C0C92CEC(v136, (uint64_t)v174);
        }
      }
      uint64_t v125 = *v84;
      sub_1C151F0EC();
      double v73 = v86;
      if (v125 != v217) {
        continue;
      }
      break;
    }
LABEL_52:
    sub_1C0C92DD4((uint64_t)v214, (uint64_t (*)(void))sub_1C0C92880);
    uint64_t v137 = *(void *)v87;
    uint64_t v138 = (uint64_t)v183;
    sub_1C151F0EC();
    uint64_t v72 = v138;
    double v73 = v86;
  }
  while (v137 != v217);
LABEL_53:
  sub_1C0C92DD4(v72, (uint64_t (*)(void))sub_1C0C92AB4);
  uint64_t v139 = (uint64_t)v174;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v174, 1, v206))
  {
    (*(void (**)(char *, uint64_t))(v177 + 8))(v175, v180);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v140 = (uint64_t)v164;
    sub_1C151CC7C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v175, v180);
    uint64_t v141 = v170;
    uint64_t v142 = v172;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v140, 1, v172) != 1)
    {
      id v145 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 32);
      uint64_t v146 = v162;
      v145(v162, v140, v142);
      uint64_t v147 = v173;
      v145(v173, (uint64_t)v146, v142);
      uint64_t v148 = type metadata accessor for FormatAutoscrollPivotPoint();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v147, 0, 1, v148);
      return sub_1C0C92C90(v139, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
    }
    sub_1C0C92C90(v140, &qword_1EB8711A8, MEMORY[0x1E4F27DE8]);
  }
  uint64_t v143 = type metadata accessor for FormatAutoscrollPivotPoint();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v173, 1, 1, v143);
  return sub_1C0C92C90(v139, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

uint64_t type metadata accessor for FormatAutoscrollPointFactory()
{
  return self;
}

void sub_1C0C92880()
{
  if (!qword_1EB863420)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAC180];
    sub_1C0C929C0(255, &qword_1EB8641A0, MEMORY[0x1E4FAC180]);
    sub_1C0C9297C((unint64_t *)&unk_1EB8629E0, &qword_1EB8641A0, v0);
    unint64_t v1 = sub_1C152037C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB863420);
    }
  }
}

uint64_t sub_1C0C92934(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C9297C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0C929C0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0C929C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatSectionDescriptor();
    v8[1] = type metadata accessor for FormatModel();
    v8[2] = sub_1C0C92934((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    _OWORD v8[3] = sub_1C0C92934((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0C92AB4()
{
  if (!qword_1EB86B4C0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAD830];
    sub_1C0C929C0(255, &qword_1EB864568, MEMORY[0x1E4FAD830]);
    sub_1C0C9297C(&qword_1EB864560, &qword_1EB864568, v0);
    unint64_t v1 = sub_1C152037C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB86B4C0);
    }
  }
}

void sub_1C0C92B68()
{
  if (!qword_1EB865548)
  {
    type metadata accessor for FeedItem(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB865548);
    }
  }
}

uint64_t sub_1C0C92BD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0C92C28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C92C90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE9FE4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0C92CEC(uint64_t a1, uint64_t a2)
{
  sub_1BFEE9FE4(0, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C92D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0C92DD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatAutoscrollPivotPoint()
{
  uint64_t result = qword_1EB86D1B8;
  if (!qword_1EB86D1B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C92E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1C0C92EEC(uint64_t a1)
{
  uint64_t v2 = sub_1C151677C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1C0C92F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0C92FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0C93018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0C9307C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0C930E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C930F4);
}

uint64_t sub_1C0C930F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C0C93160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C93174);
}

uint64_t sub_1C0C93174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151677C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C0C931E4()
{
  uint64_t result = sub_1C151677C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestCaseMultiResultSection()
{
  return &type metadata for DebugFormatTestCaseMultiResultSection;
}

uint64_t LegacyFeedGroupEmitterInitialCursorContext.feedPool.getter()
{
  return swift_retain();
}

uint64_t LegacyFeedGroupEmitterInitialCursorContext.feedContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C019CC1C(v2 + *(int *)(a1 + 36), a2);
}

uint64_t LegacyFeedGroupEmitterInitialCursorContext.serviceConfig.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t LegacyFeedGroupEmitterInitialCursorContext.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - v10;
  sub_1C151917C();
  uint64_t v12 = type metadata accessor for ModernFeedGroupEmitterInitialCursorContext();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + *(int *)(v12 + 40), v8);
  uint64_t v13 = sub_1C151907C();
  uint64_t v14 = v18;
  *uint64_t v18 = v13;
  uint64_t v15 = type metadata accessor for LegacyFeedGroupEmitterInitialCursorContext();
  sub_1C019CC1C(a1, (uint64_t)v14 + *(int *)(v15 + 36));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v12 + 36), a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))((char *)v14 + *(int *)(v15 + 40), v7, a2);
}

uint64_t type metadata accessor for ModernFeedGroupEmitterInitialCursorContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for LegacyFeedGroupEmitterInitialCursorContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t LegacyFeedGroupEmitterInitialCursorContext.unwrappedPool.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  sub_1C151FD8C();
  sub_1C151932C();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)sub_1C1518E7C();
  uint64_t v5 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1C0C93640(uint64_t a1)
{
  uint64_t result = sub_1C0AC5770(a1);
  if (!v1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C0C93668()
{
  return sub_1C0C93640(*(void *)(v0 + 32));
}

uint64_t sub_1C0C93688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)v13 - v8, a1, v5, v7);
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v9, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_1C0C93B9C();
  swift_allocError();
  *(void *)uint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 5;
  return swift_willThrow();
}

uint64_t sub_1C0C93850()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C93860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0C93688(a1, a2);
}

uint64_t ModernFeedGroupEmitterInitialCursorContext.feedContext.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C019CC1C(v1, a1);
}

uint64_t ModernFeedGroupEmitterInitialCursorContext.serviceConfig.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ModernFeedGroupEmitterInitialCursorContext.init(feedPool:feedContext:serviceConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for ModernFeedGroupEmitterInitialCursorContext();
  uint64_t v11 = a5 + *(int *)(v10 + 40);
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C151FD8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a1, v12);
  sub_1C019CBB8(a2, a5);
  uint64_t v13 = a5 + *(int *)(v10 + 36);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  return v14(v13, a3, a4);
}

uint64_t ModernFeedGroupEmitterInitialCursorContext.feedPool.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C151FD8C();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v14 - v9, v2 + *(int *)(a1 + 40), v6, v8);
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v10, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_1C0C93B9C();
  swift_allocError();
  *(void *)uint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  *(unsigned char *)(v12 + 16) = 5;
  return swift_willThrow();
}

unint64_t sub_1C0C93B9C()
{
  unint64_t result = qword_1EB872838;
  if (!qword_1EB872838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB872838);
  }
  return result;
}

uint64_t sub_1C0C93BF0()
{
  uint64_t result = type metadata accessor for FeedContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0C93CCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = v9 | 7;
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  int v16 = (*(_DWORD *)(v13 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000;
  uint64_t v17 = *a2;
  *a1 = *a2;
  BOOL v18 = (v9 | 7 | v14) == 7 && v16 == 0;
  if (!v18
    || (uint64_t v19 = v9 + 8,
        uint64_t v20 = (v9 + 8) & ~v10,
        uint64_t v21 = v11 + 9,
        unint64_t v22 = ((((v11 + 9 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10,
        ((((((((((v20 + v22 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + v14
        + 16
        + v20) & ~v14)
      + v15 > 0x18))
  {
    uint64_t v34 = v17 + (((v9 | 7 | v14) + 16) & ~(v9 | 7 | v14));
    swift_retain();
    return (uint64_t *)v34;
  }
  uint64_t v59 = v11;
  size_t __n = ((((v11 + 9 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  unint64_t v63 = ((((((((v20 + v22 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + v14
      + 16;
  uint64_t v64 = v13;
  uint64_t v65 = v12;
  uint64_t v66 = a1;
  uint64_t v23 = ~v9;
  uint64_t v24 = (void *)(((unint64_t)a1 + v10 + 8) & ~v10);
  uint64_t v25 = (void **)(((unint64_t)a2 + v10 + 8) & ~v10);
  uint64_t v26 = *v25;
  *uint64_t v24 = *v25;
  uint64_t v61 = v25;
  uint64_t v62 = v24;
  uint64_t v27 = (void *)(((unint64_t)v24 + v19) & ~v10);
  uint64_t v28 = (void *)(((unint64_t)v25 + v19) & ~v10);
  uint64_t v58 = v23;
  unint64_t v29 = ((unint64_t)v28 + v19) & v23;
  swift_retain();
  id v30 = v26;
  if (v8 < 0x7FFFFFFF)
  {
    uint64_t v32 = v27;
    size_t v33 = __n;
    if ((*(void *)((v21 + v29) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
    {
LABEL_13:
      *uint64_t v32 = *v28;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v32 + v19) & v58, v29, v6);
      uint64_t v35 = (unsigned char *)((((unint64_t)v32 + v19) & v58) + v59);
      *uint64_t v35 = *(unsigned char *)(v29 + v59);
      v35[1] = *(unsigned char *)(v29 + v59 + 1);
      uint64_t v36 = (_OWORD *)((unint64_t)(v35 + 9) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v37 = (_OWORD *)((v29 + v59 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v36 = *v37;
      unint64_t v38 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
      *(unsigned char *)(v38 + 9) = *(unsigned char *)(v39 + 9);
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
  }
  else
  {
    int v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v29, v8, v6);
    uint64_t v32 = v27;
    size_t v33 = __n;
    if (!v31) {
      goto LABEL_13;
    }
  }
  memcpy(v32, v28, v33);
LABEL_14:
  uint64_t v40 = ~v14;
  uint64_t v41 = (char *)v32 + v33;
  *uint64_t v41 = *((unsigned char *)v28 + v33);
  *(unsigned char *)(((unint64_t)v32 + v33) | 1) = *(unsigned char *)(((unint64_t)v28 + v33) | 1);
  v41[2] = *((unsigned char *)v28 + v33 + 2);
  v41[3] = *((unsigned char *)v28 + v33 + 3);
  uint64_t v42 = (void *)(((unint64_t)v28 + v33 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v43 = (void *)(((unint64_t)v32 + v33 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v43 = *v42;
  uint64_t v44 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v44 = *v45;
  unint64_t v46 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = *(void *)(v47 + 8);
  if (v48 >= 0xFFFFFFFF) {
    LODWORD(v48) = -1;
  }
  unsigned int v49 = v48 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49 > 1)
  {
    *(_OWORD *)unint64_t v46 = *(_OWORD *)v47;
  }
  else
  {
    *(void *)unint64_t v46 = *(void *)v47;
    *(void *)(v46 + 8) = *(void *)(v47 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  uint64_t v50 = (void *)(((unint64_t)v44 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v51 = (void **)(((unint64_t)v45 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v52 = *v51;
  void *v50 = *v51;
  uint64_t v53 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  uint64_t v55 = *(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 16);
  id v56 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(((unint64_t)v62 + v63) & v40, ((unint64_t)v61 + v63) & v40, v65);
  return v66;
}

uint64_t sub_1C0C94100(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (id *)(((v5 | 7) + a1 + 8) & ~(v5 | 7));

  uint64_t v7 = ((unint64_t)v6 + v5 + 8) & ~(v5 | 7);
  uint64_t v8 = *(void *)(v4 + 64) + 9;
  unint64_t v9 = (((v8 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_DWORD *)(v4 + 84) < 0x7FFFFFFFu)
  {
    if ((*(void *)((v8 + ((v5 + 8 + v7) & ~v5)) & 0xFFFFFFFFFFFFFFF8) >> 1) >= 0x80000001) {
      goto LABEL_6;
    }
  }
  else if ((*(unsigned int (**)(uint64_t))(v4 + 48))((v5 + 8 + v7) & ~v5))
  {
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))((v5 + 8 + v7) & ~v5, v3);
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = ((((v9 + v7 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15;
  LODWORD(v11) = -1;
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  if ((v11 + 1) <= 1) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v13 = *(uint64_t (**)(unint64_t))(v12 + 8);
  unint64_t v14 = ((unint64_t)v6
       + *(unsigned __int8 *)(v12 + 80)
       + ((((((((((v5 + 8) & ~(v5 | 7)) + v9 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return v13(v14);
}

void *sub_1C0C94360(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v7 | 7;
  uint64_t v9 = (v7 | 7) + 8;
  uint64_t v60 = a1;
  unint64_t v10 = (void *)(((unint64_t)a1 + v9) & ~(v7 | 7));
  uint64_t v11 = (void **)(((unint64_t)a2 + v9) & ~(v7 | 7));
  uint64_t v12 = *v11;
  *unint64_t v10 = *v11;
  uint64_t v57 = v11;
  uint64_t v58 = v10;
  long long __dst = (void *)(((unint64_t)v10 + v7 + 8) & ~(v7 | 7));
  uint64_t v13 = *(unsigned int *)(v6 + 84);
  uint64_t v53 = *(void *)(v6 + 64);
  __src = (void *)(((unint64_t)v11 + v7 + 8) & ~(v7 | 7));
  uint64_t v14 = ((unint64_t)__src + v7 + 8) & ~v7;
  swift_retain();
  id v15 = v12;
  uint64_t v54 = v7 + 8;
  if (v13 >= 0x7FFFFFFF)
  {
    int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v14, v13, v5);
    size_t v17 = ((((v53 + 9 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
    uint64_t v18 = v7 + 8;
    uint64_t v19 = __dst;
    if (!v16) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v20 = __src;
    memcpy(v19, __src, v17);
    goto LABEL_7;
  }
  size_t v17 = ((((v53 + 9 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v18 = v7 + 8;
  uint64_t v19 = __dst;
  if ((*(void *)((v53 + 9 + v14) & 0xFFFFFFFFFFFFFFF8) >> 1) >= 0x80000001) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v21 = ~v7;
  uint64_t v20 = __src;
  *uint64_t v19 = *__src;
  unint64_t v22 = ((unint64_t)v19 + v18) & v21;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v22, v14, v5);
  uint64_t v23 = (unsigned char *)(v22 + v53);
  *uint64_t v23 = *(unsigned char *)(v14 + v53);
  v23[1] = *(unsigned char *)(v14 + v53 + 1);
  uint64_t v24 = (_OWORD *)((v22 + v53 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (_OWORD *)((v14 + v53 + 9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  unint64_t v26 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(unsigned char *)(v26 + 9) = *(unsigned char *)(v27 + 9);
  swift_bridgeObjectRetain();
LABEL_7:
  uint64_t v28 = ~v8;
  unint64_t v29 = (char *)v19 + v17;
  *unint64_t v29 = *((unsigned char *)v20 + v17);
  *(unsigned char *)(((unint64_t)v19 + v17) | 1) = *(unsigned char *)(((unint64_t)v20 + v17) | 1);
  _OWORD v29[2] = *((unsigned char *)v20 + v17 + 2);
  v29[3] = *((unsigned char *)v20 + v17 + 3);
  id v30 = (void *)(((unint64_t)v20 + v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  int v31 = (void *)(((unint64_t)v19 + v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  *int v31 = *v30;
  uint64_t v32 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v33 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  unint64_t v34 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = *(void *)(v35 + 8);
  if (v36 >= 0xFFFFFFFF) {
    LODWORD(v36) = -1;
  }
  unsigned int v37 = v36 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37 > 1)
  {
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    *(void *)unint64_t v34 = *(void *)v35;
    *(void *)(v34 + 8) = *(void *)(v35 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  unint64_t v38 = (void *)(((unint64_t)v32 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = (void **)(((unint64_t)v33 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = *v39;
  void *v38 = *v39;
  uint64_t v41 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v42 = (void *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  unint64_t v43 = ((((((((v54 & v28) + v17 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = *(void *)(a3 + 16);
  uint64_t v45 = *(void *)(v44 - 8);
  unint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  uint64_t v47 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v48 = v43 + v47 + 16;
  uint64_t v49 = ((unint64_t)v58 + v48) & ~v47;
  uint64_t v50 = ((unint64_t)v57 + v48) & ~v47;
  id v51 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v49, v50, v44);
  return v60;
}

void *sub_1C0C94730(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (v9 | 7) + 8;
  unsigned __int8 v76 = a1;
  uint64_t v11 = (void **)(((unint64_t)a1 + v10) & ~(v9 | 7));
  uint64_t v12 = (void **)(((unint64_t)a2 + v10) & ~(v9 | 7));
  uint64_t v13 = *v12;
  uint64_t v14 = *v11;
  *uint64_t v11 = *v12;
  id v15 = v13;

  uint64_t v16 = v7;
  size_t v17 = (void *)(((unint64_t)v11 + v9 + 8) & ~(v9 | 7));
  uint64_t v75 = v12;
  uint64_t v70 = v9 | 7;
  uint64_t v18 = ((unint64_t)v12 + v9 + 8) & ~(v9 | 7);
  uint64_t v19 = *(unsigned int *)(v8 + 84);
  uint64_t v69 = *(void *)(v16 + 64);
  uint64_t v20 = v69 + 9;
  size_t v21 = ((((v69 + 9 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v22 = ((unint64_t)v17 + v9 + 8) & ~v9;
  uint64_t v73 = a3;
  uint64_t v74 = v9 + 8;
  __src = (void *)v18;
  uint64_t v72 = v11;
  uint64_t v23 = (v9 + 8 + v18) & ~v9;
  if (v19 <= 0x7FFFFFFE)
  {
    uint64_t v29 = *(void *)((v20 + v23) & 0xFFFFFFFFFFFFFFF8) >> 1;
    int v27 = -(int)v29;
    if ((*(void *)((v20 + v22) & 0xFFFFFFFFFFFFFFF8) >> 1) <= 0x80000000)
    {
      uint64_t v28 = v6;
      if (v29 < 0x80000001) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    uint64_t v28 = v6;
    if (v29 < 0x80000001)
    {
LABEL_7:
      id v30 = __src;
      *size_t v17 = *__src;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v22, v23, v28);
      int v31 = (unsigned char *)(v22 + v69);
      *int v31 = *(unsigned char *)(v23 + v69);
      v31[1] = *(unsigned char *)(v23 + v69 + 1);
      uint64_t v32 = (_OWORD *)((v22 + v69 + 9) & 0xFFFFFFFFFFFFFFF8);
      size_t v33 = (_OWORD *)((v23 + v69 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v32 = *v33;
      unint64_t v34 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v35 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
      *(unsigned char *)(v34 + 9) = *(unsigned char *)(v35 + 9);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_6:
    if (v27)
    {
LABEL_11:
      id v30 = __src;
      memcpy(v17, __src, v21);
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  long long __dst = v17;
  size_t v24 = v21;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  int v26 = v25(v22, v19, v6);
  int v27 = v25(v23, v19, v6);
  size_t v21 = v24;
  size_t v17 = __dst;
  uint64_t v28 = v6;
  if (v26) {
    goto LABEL_6;
  }
LABEL_9:
  if (v27)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_12:
  *size_t v17 = *__src;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v22, v23, v28);
  unint64_t v36 = (unsigned char *)(v22 + v69);
  *unint64_t v36 = *(unsigned char *)(v23 + v69);
  v36[1] = *(unsigned char *)(v23 + v69 + 1);
  unsigned int v37 = (_OWORD *)((v22 + v69 + 9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v38 = (_OWORD *)((v23 + v69 + 9) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v37 = *v38;
  unint64_t v39 = v17;
  size_t v40 = v21;
  unint64_t v41 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = ((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v41 = *(void *)v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  char v43 = *(unsigned char *)(v42 + 9);
  id v30 = __src;
  *(unsigned char *)(v41 + 9) = v43;
  size_t v21 = v40;
  size_t v17 = v39;
LABEL_13:
  uint64_t v44 = (char *)v17 + v21;
  size_t v45 = v21;
  size_t v46 = (size_t)v30 + v21;
  *uint64_t v44 = *((unsigned char *)v30 + v21);
  *(unsigned char *)(((unint64_t)v17 + v21) | 1) = *(unsigned char *)(((unint64_t)v30 + v21) | 1);
  v44[2] = *((unsigned char *)v30 + v21 + 2);
  uint64_t v44[3] = *((unsigned char *)v30 + v21 + 3);
  uint64_t v47 = (void *)(((unint64_t)v17 + v21 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (void *)((v46 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v47 = *v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v50 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v49 = *v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v53) = -1;
  if (*(void *)(v51 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v54) = -1;
  }
  else {
    uint64_t v54 = *(void *)(v51 + 8);
  }
  unsigned int v55 = v54 + 1;
  if (*(void *)(v52 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v53 = *(void *)(v52 + 8);
  }
  unsigned int v56 = v53 + 1;
  if (v55 > 1)
  {
    if (v56 <= 1)
    {
      *(void *)unint64_t v51 = *(void *)v52;
      *(void *)(v51 + 8) = *(void *)(v52 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
LABEL_24:
    *(_OWORD *)unint64_t v51 = *(_OWORD *)v52;
    goto LABEL_25;
  }
  if (v56 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  *(void *)unint64_t v51 = *(void *)v52;
  *(void *)(v51 + 8) = *(void *)(v52 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_25:
  *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
  uint64_t v57 = (void **)(((unint64_t)v49 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v58 = (void **)(((unint64_t)v50 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v59 = *v58;
  uint64_t v60 = *v57;
  void *v57 = *v58;
  id v61 = v59;

  uint64_t v62 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v63 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v62 = *v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = *(void *)(*(void *)(v73 + 16) - 8);
  uint64_t v65 = *(unsigned __int8 *)(v64 + 80);
  unint64_t v66 = (((((((((v74 & ~v70) + v45 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v65
      + 16;
  (*(void (**)(unint64_t, unint64_t))(v64 + 24))(((unint64_t)v72 + v66) & ~v65, ((unint64_t)v75 + v66) & ~v65);
  return v76;
}

void *sub_1C0C94C98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 | 7) + 8;
  unint64_t v41 = a1;
  uint64_t v10 = ~(v8 | 7);
  uint64_t v11 = (void *)(((unint64_t)a1 + v9) & v10);
  uint64_t v12 = (void *)(((unint64_t)a2 + v9) & v10);
  *uint64_t v11 = *v12;
  uint64_t v13 = v8 + 8;
  uint64_t v38 = v10;
  unint64_t v39 = v11;
  uint64_t v14 = (void *)(((unint64_t)v11 + v8 + 8) & v10);
  id v15 = (void *)(((unint64_t)v12 + v8 + 8) & v10);
  uint64_t v16 = *(void *)(v6 + 64);
  unint64_t v17 = ((((v16 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v18 = ((unint64_t)v15 + v8 + 8) & ~v8;
  if (*(_DWORD *)(v6 + 84) < 0x7FFFFFFFu)
  {
    if ((*(void *)((v16 + 9 + v18) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
    {
LABEL_6:
      *uint64_t v14 = *v15;
      unint64_t v19 = ((unint64_t)v14 + v13) & ~v8;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v19, v18, v5);
      uint64_t v20 = (unsigned char *)(v19 + v16);
      *uint64_t v20 = *(unsigned char *)(v18 + v16);
      v20[1] = *(unsigned char *)(v18 + v16 + 1);
      size_t v21 = (_OWORD *)((v19 + v16 + 9) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v22 = (_OWORD *)((v18 + v16 + 9) & 0xFFFFFFFFFFFFFFF8);
      *size_t v21 = *v22;
      unint64_t v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v24 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v23 = *(void *)v24;
      *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
      *(unsigned char *)(v23 + 9) = *(unsigned char *)(v24 + 9);
      goto LABEL_7;
    }
  }
  else if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v15 + v8 + 8) & ~v8))
  {
    goto LABEL_6;
  }
  memcpy(v14, v15, ((((v16 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10);
LABEL_7:
  uint64_t v25 = (char *)v14 + v17;
  *uint64_t v25 = *((unsigned char *)v15 + v17);
  *(unsigned char *)(((unint64_t)v14 + v17) | 1) = *(unsigned char *)(((unint64_t)v15 + v17) | 1);
  void v25[2] = *((unsigned char *)v15 + v17 + 2);
  v25[3] = *((unsigned char *)v15 + v17 + 3);
  int v26 = (void *)(((unint64_t)v14 + v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  int v27 = (void *)(((unint64_t)v15 + v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  *int v26 = *v27;
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  uint64_t v32 = (void *)(((unint64_t)v28 + 39) & 0xFFFFFFFFFFFFFFF8);
  size_t v33 = (void *)(((unint64_t)v29 + 39) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  *(_OWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v35 = *(unsigned __int8 *)(v34 + 80);
  unint64_t v36 = (((((((((v13 & v38) + v17 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v35
      + 16;
  (*(void (**)(unint64_t, unint64_t))(v34 + 32))(((unint64_t)v39 + v36) & ~v35, ((unint64_t)v12 + v36) & ~v35);
  return v41;
}

void *sub_1C0C94FA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = (v8 | 7) + 8;
  id v61 = a1;
  uint64_t v11 = (void **)(((unint64_t)a1 + v10) & ~(v8 | 7));
  uint64_t v12 = (void **)(((unint64_t)a2 + v10) & ~(v8 | 7));
  uint64_t v13 = *v11;
  *uint64_t v11 = *v12;

  uint64_t v14 = *(unsigned int *)(v6 + 84);
  uint64_t v55 = *(void *)(v6 + 64);
  unsigned int v56 = v12;
  uint64_t v15 = v55 + 9;
  size_t v16 = ((((v55 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  long long __dst = (void *)(((unint64_t)v11 + v8 + 8) & ~(v8 | 7));
  uint64_t v17 = ((unint64_t)__dst + v8 + 8) & ~v8;
  __src = (void *)(((unint64_t)v12 + v8 + 8) & ~(v8 | 7));
  uint64_t v60 = v8 + 8;
  uint64_t v18 = ((unint64_t)__src + v8 + 8) & ~v8;
  uint64_t v57 = v11;
  if (v14 <= 0x7FFFFFFE)
  {
    uint64_t v23 = *(void *)((v15 + v18) & 0xFFFFFFFFFFFFFFF8) >> 1;
    int v21 = -(int)v23;
    if ((*(void *)((v15 + v17) & 0xFFFFFFFFFFFFFFF8) >> 1) <= 0x80000000)
    {
      uint64_t v22 = __src;
      if (v23 < 0x80000001) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    uint64_t v22 = __src;
    if (v23 < 0x80000001)
    {
LABEL_7:
      void *__dst = *v22;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v17, v18, v5);
      unint64_t v24 = (unsigned char *)(v17 + v55);
      *unint64_t v24 = *(unsigned char *)(v18 + v55);
      v24[1] = *(unsigned char *)(v18 + v55 + 1);
      uint64_t v25 = (_OWORD *)((v17 + v55 + 9) & 0xFFFFFFFFFFFFFFF8);
      int v26 = (_OWORD *)((v18 + v55 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v25 = *v26;
      unint64_t v27 = ((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
      *(unsigned char *)(v27 + 9) = *(unsigned char *)(v28 + 9);
      goto LABEL_13;
    }
LABEL_6:
    if (v21)
    {
LABEL_11:
      memcpy(__dst, v22, v16);
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  size_t __n = v16;
  unint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v20 = v19(v17, v14, v5);
  int v21 = v19(v18, v14, v5);
  size_t v16 = __n;
  uint64_t v22 = __src;
  if (v20) {
    goto LABEL_6;
  }
LABEL_9:
  if (v21)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v5);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_12:
  void *__dst = *v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v17, v18, v5);
  uint64_t v29 = (unsigned char *)(v17 + v55);
  *uint64_t v29 = *(unsigned char *)(v18 + v55);
  v29[1] = *(unsigned char *)(v18 + v55 + 1);
  unint64_t v30 = (_OWORD *)((v17 + v55 + 9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = (_OWORD *)((v18 + v55 + 9) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v30 = *v31;
  unint64_t v32 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v32 = *(void *)v33;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(unsigned char *)(v32 + 9) = *(unsigned char *)(v33 + 9);
LABEL_13:
  uint64_t v34 = ~v9;
  unint64_t v35 = (unint64_t)__dst + v16;
  size_t v36 = v16;
  *(unsigned char *)unint64_t v35 = *((unsigned char *)v22 + v16);
  *(unsigned char *)(v35 | 1) = *(unsigned char *)(((unint64_t)v22 + v16) | 1);
  *(unsigned char *)(v35 + 2) = *((unsigned char *)v22 + v16 + 2);
  *(unsigned char *)(v35 + 3) = *((unsigned char *)v22 + v16 + 3);
  unsigned int v37 = (void *)(((unint64_t)__dst + v16 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = (void *)(((unint64_t)v22 + v16 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v37 = *v38;
  swift_bridgeObjectRelease();
  unint64_t v39 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v40 = (void *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v39 = *v40;
  swift_bridgeObjectRelease();
  unint64_t v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v43) = -1;
  if (*(void *)(v41 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v43 = *(void *)(v41 + 8);
  }
  if ((v43 + 1) > 1) {
    goto LABEL_21;
  }
  unint64_t v44 = *(void *)(v42 + 8);
  if (v44 >= 0xFFFFFFFF) {
    LODWORD(v44) = -1;
  }
  if ((v44 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
    goto LABEL_22;
  }
  *(void *)unint64_t v41 = *(void *)v42;
  *(void *)(v41 + 8) = *(void *)(v42 + 8);
  swift_bridgeObjectRelease();
LABEL_22:
  *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
  size_t v45 = (void **)(((unint64_t)v39 + 39) & 0xFFFFFFFFFFFFFFF8);
  size_t v46 = (void **)(((unint64_t)v40 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v47 = *v45;
  *size_t v45 = *v46;

  uint64_t v48 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v49 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v49;
  swift_bridgeObjectRelease();
  v48[1] = v49[1];
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v51 = *(unsigned __int8 *)(v50 + 80);
  unint64_t v52 = (((((((((v60 & v34) + v36 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v51
      + 16;
  (*(void (**)(unint64_t, unint64_t))(v50 + 40))(((unint64_t)v57 + v52) & ~v51, ((unint64_t)v56 + v52) & ~v51);
  return v61;
}

uint64_t sub_1C0C9548C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1C151631C() - 8);
  uint64_t v7 = v6;
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  if (v8 <= 0x7FFFFFFF) {
    int v9 = 0x7FFFFFFF;
  }
  else {
    int v9 = *(_DWORD *)(v6 + 84);
  }
  int v10 = v9 - 1;
  if (v10 <= 0x7FFFFFFF) {
    int v11 = 0x7FFFFFFF;
  }
  else {
    int v11 = v10;
  }
  if (v10 >= 0) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v13 + 80);
  if (v14 <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v13 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v15 | 7;
  uint64_t v20 = (v15 + 8) & ~(v15 | 7);
  uint64_t v21 = v16 + 9;
  unint64_t v22 = ((((((((v20 + ((((v16 + 9 + ((v15 + 8) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 21) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (a2 <= v18) {
    goto LABEL_34;
  }
  unint64_t v23 = ((v22 + v17 + v20) & ~v17) + *(void *)(v13 + 64);
  char v24 = 8 * v23;
  if (v23 <= 3)
  {
    unsigned int v27 = ((a2 - v18 + ~(-1 << v24)) >> v24) + 1;
    if (HIWORD(v27))
    {
      int v25 = *(_DWORD *)((char *)a1 + v23);
      if (!v25) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v27 > 0xFF)
    {
      int v25 = *(unsigned __int16 *)((char *)a1 + v23);
      if (!*(unsigned __int16 *)((char *)a1 + v23)) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v27 < 2)
    {
LABEL_34:
      if (v18 == 0x7FFFFFFF)
      {
        uint64_t v31 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v31) = -1;
        }
        return (v31 + 1);
      }
      else
      {
        uint64_t v32 = ~v19;
        uint64_t v33 = ((unint64_t)a1 + v19 + 8) & ~v19;
        if (v11 == v18)
        {
          uint64_t v34 = (v15 + 8 + ((v15 + 8 + v33) & v32)) & ~v15;
          if (v8 < 0x7FFFFFFF)
          {
            uint64_t v38 = *(void *)((v21 + v34) & 0xFFFFFFFFFFFFFFF8) >> 1;
            if (v38 > 0x80000000) {
              unsigned int v35 = -(int)v38;
            }
            else {
              unsigned int v35 = 0;
            }
          }
          else
          {
            unsigned int v35 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v34);
          }
          if (v35 >= 2) {
            return v35 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          unint64_t v36 = (v33 + v17 + v22) & ~v17;
          unsigned int v37 = *(uint64_t (**)(unint64_t, uint64_t))(v13 + 48);
          return v37(v36, v14);
        }
      }
    }
  }
  int v25 = *((unsigned __int8 *)a1 + v23);
  if (!*((unsigned char *)a1 + v23)) {
    goto LABEL_34;
  }
LABEL_24:
  int v28 = (v25 - 1) << v24;
  if (v23 > 3) {
    int v28 = 0;
  }
  if (v23)
  {
    if (v23 <= 3) {
      int v29 = v23;
    }
    else {
      int v29 = 4;
    }
    switch(v29)
    {
      case 2:
        int v30 = *a1;
        break;
      case 3:
        int v30 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v30 = *(_DWORD *)a1;
        break;
      default:
        int v30 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v30 = 0;
  }
  return v18 + (v30 | v28) + 1;
}

void sub_1C0C957C4(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_1C151631C() - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  int v12 = v11 - 1;
  if (v11 - 1 <= 0x7FFFFFFF) {
    int v13 = 0x7FFFFFFF;
  }
  else {
    int v13 = v11 - 1;
  }
  if (v12 >= 0) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = *(void *)(v8 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v15 + 80);
  if (v16 > v14) {
    unsigned int v14 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v20 = v17 | 7;
  uint64_t v21 = v17 + 8;
  uint64_t v22 = (v17 + 8) & ~(v17 | 7);
  uint64_t v23 = v18 + 9;
  size_t v24 = ((((v23 + ((v17 + 8) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  unint64_t v25 = ((((((((v24 + v22 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t v26 = ((v25 + v19 + v22) & ~v19) + *(void *)(v15 + 64);
  if (a3 <= v14)
  {
    int v27 = 0;
  }
  else if (v26 <= 3)
  {
    unsigned int v31 = ((a3 - v14 + ~(-1 << (8 * v26))) >> (8 * v26)) + 1;
    if (HIWORD(v31))
    {
      int v27 = 4;
    }
    else if (v31 >= 0x100)
    {
      int v27 = 2;
    }
    else
    {
      int v27 = v31 > 1;
    }
  }
  else
  {
    int v27 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v28 = ~v14 + a2;
    if (v26 < 4)
    {
      int v29 = (v28 >> (8 * v26)) + 1;
      if (v26)
      {
        int v32 = v28 & ~(-1 << (8 * v26));
        bzero(a1, v26);
        if (v26 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if (v26 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v26);
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        a1[v26] = v29;
        return;
      case 2:
        *(_WORD *)&a1[v26] = v29;
        return;
      case 3:
        goto LABEL_65;
      case 4:
        *(_DWORD *)&a1[v26] = v29;
        return;
      default:
        return;
    }
  }
  uint64_t v30 = ~v20;
  switch(v27)
  {
    case 1:
      a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_65:
      __break(1u);
      JUMPOUT(0x1C0C95BE8);
    case 4:
      *(_DWORD *)&a1[v26] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v14 == 0x7FFFFFFF)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v33 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v33 = (a2 - 1);
          }
          *(void *)a1 = v33;
        }
        else
        {
          uint64_t v34 = (unint64_t)&a1[v20 + 8] & v30;
          if (v13 == v14)
          {
            unsigned int v35 = (_WORD *)((v21 + v34) & v30);
            if (v12 >= a2 && (int)a2 + 1 <= v11)
            {
              if (a2 != -1)
              {
                unint64_t v38 = ((unint64_t)v35 + v21) & ~v17;
                if (v10 < 0x7FFFFFFF)
                {
                  size_t v40 = (void *)((v23 + v38) & 0xFFFFFFFFFFFFFFF8);
                  if (a2 + 1 < 0) {
                    uint64_t v41 = (a2 - 0x7FFFFFFF);
                  }
                  else {
                    uint64_t v41 = 2 * ~a2;
                  }
                  *size_t v40 = v41;
                  v40[1] = 0;
                }
                else
                {
                  unint64_t v39 = *(void (**)(unint64_t))(v9 + 56);
                  v39(v38);
                }
              }
            }
            else
            {
              int v36 = a2 - v11;
              bzero((void *)((v21 + v34) & v30), v24);
              if (v24 <= 3) {
                *unsigned int v35 = v36;
              }
              else {
                *(_DWORD *)unsigned int v35 = v36;
              }
            }
          }
          else
          {
            unsigned int v37 = *(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 56);
            v37((v34 + v19 + v25) & ~v19, a2, v16);
          }
        }
      }
      return;
  }
}

uint64_t sub_1C0C95C10()
{
  uint64_t v0 = type metadata accessor for FeedContext();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      uint64_t v0 = sub_1C151FD8C();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

void **sub_1C0C95D4C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v69 = sub_1C151631C();
  uint64_t v6 = *(void *)(v69 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  unsigned int v68 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = v7;
  uint64_t v9 = v7 | 7;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v70 = *(void *)(*(void *)(a3 + 16) - 8);
  int v11 = *(_DWORD *)(v70 + 80);
  uint64_t v12 = v11;
  uint64_t v72 = *(void *)(v70 + 64);
  uint64_t v71 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = v10;
  uint64_t v15 = AssociatedTypeWitness;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  int v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = v17;
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v19 = *(void *)(v16 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v16 + 64) + 1;
  }
  uint64_t v20 = v9 | v11 | v17;
  uint64_t v74 = a2;
  uint64_t v75 = a1;
  uint64_t v21 = (char *)*a2;
  *a1 = *a2;
  BOOL v22 = v20 == 7 && ((v11 | v7 | v17) & 0x100000) == 0;
  if (!v22
    || (uint64_t v23 = v7 + 8,
        uint64_t v24 = v14 + 9,
        size_t v25 = ((((v14 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10,
        ((v72
        + v17
        + ((((((((((((v8 + 8) & ~v9) + v25 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + v12
          + 16) & ~v12)) & ~(unint64_t)v17)
      + v19 > 0x18))
  {
    int v32 = (void **)&v21[(v20 + 16) & ~v20];
    swift_retain();
    return v32;
  }
  uint64_t v63 = v14;
  size_t __n = v19;
  unint64_t v65 = ((((((((((v8 + 8) & ~v9) + v25 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v12
      + 16;
  uint64_t v66 = v72 + v17;
  uint64_t v67 = v16;
  uint64_t v73 = v15;
  uint64_t v26 = ~v8;
  int v27 = (void *)(((unint64_t)v75 + v9 + 8) & ~v9);
  unsigned int v28 = (void *)(((unint64_t)a2 + v9 + 8) & ~v9);
  unint64_t v29 = ((unint64_t)v28 + v23) & v26;
  uint64_t v30 = v21;
  if (v68 < 0x7FFFFFFF)
  {
    uint64_t v33 = *(void *)((v24 + v29) & 0xFFFFFFFFFFFFFFF8) >> 1;
    uint64_t v31 = v69;
    if (v33 < 0x80000001)
    {
LABEL_16:
      *int v27 = *v28;
      unint64_t v34 = ((unint64_t)v27 + v23) & v26;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v34, v29, v31);
      unsigned int v35 = (unsigned char *)(v34 + v63);
      *unsigned int v35 = *(unsigned char *)(v29 + v63);
      v35[1] = *(unsigned char *)(v29 + v63 + 1);
      int v36 = (_OWORD *)((v34 + v63 + 9) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v37 = (_OWORD *)((v29 + v63 + 9) & 0xFFFFFFFFFFFFFFF8);
      *int v36 = *v37;
      unint64_t v38 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
      *(unsigned char *)(v38 + 9) = *(unsigned char *)(v39 + 9);
      swift_bridgeObjectRetain();
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v31 = v69;
    if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v28 + v23) & v26)) {
      goto LABEL_16;
    }
  }
  memcpy(v27, v28, v25);
LABEL_17:
  uint64_t v40 = ~v12;
  uint64_t v41 = ~v18;
  unint64_t v42 = (char *)v27 + v25;
  unsigned char *v42 = *((unsigned char *)v28 + v25);
  *(unsigned char *)(((unint64_t)v27 + v25) | 1) = *(unsigned char *)(((unint64_t)v28 + v25) | 1);
  _OWORD v42[2] = *((unsigned char *)v28 + v25 + 2);
  v42[3] = *((unsigned char *)v28 + v25 + 3);
  uint64_t v43 = (void *)(((unint64_t)v28 + v25 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v44 = (void *)(((unint64_t)v27 + v25 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v44 = *v43;
  size_t v45 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v46 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *size_t v45 = *v46;
  unint64_t v47 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = ((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = *(void *)(v48 + 8);
  if (v49 >= 0xFFFFFFFF) {
    LODWORD(v49) = -1;
  }
  unsigned int v50 = v49 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50 > 1)
  {
    *(_OWORD *)unint64_t v47 = *(_OWORD *)v48;
  }
  else
  {
    *(void *)unint64_t v47 = *(void *)v48;
    *(void *)(v47 + 8) = *(void *)(v48 + 8);
    swift_bridgeObjectRetain();
  }
  int v32 = v75;
  *(unsigned char *)(v47 + 16) = *(unsigned char *)(v48 + 16);
  uint64_t v51 = (void *)(((unint64_t)v45 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = (void **)(((unint64_t)v46 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v53 = *v52;
  void *v51 = *v52;
  uint64_t v54 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v54 = *v55;
  v54[1] = v55[1];
  unint64_t v56 = ((unint64_t)v75 + v65) & v40;
  unint64_t v57 = ((unint64_t)v74 + v65) & v40;
  uint64_t v58 = *(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 16);
  id v59 = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58(v56, v57, v71);
  uint64_t v60 = (void *)((v66 + v56) & v41);
  id v61 = (const void *)((v66 + v57) & v41);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48))(v61, 1, v73))
  {
    memcpy(v60, v61, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v60, v61, v73);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v60, 0, 1, v73);
  }
  return v32;
}

uint64_t sub_1C0C96284(id *a1, uint64_t a2)
{
  uint64_t v3 = sub_1C151631C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v5 | 7;
  uint64_t v7 = ((unint64_t)a1 + (v5 | 7) + 8) & ~(v5 | 7);
  uint64_t v8 = v5 + 8;
  uint64_t v9 = *(void *)(v4 + 64) + 9;
  unint64_t v10 = (((v9 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = (v5 + 8 + v7) & ~v5;
  if (*(_DWORD *)(v4 + 84) < 0x7FFFFFFFu)
  {
    if ((*(void *)((v9 + v11) & 0xFFFFFFFFFFFFFFF8) >> 1) >= 0x80000001) {
      goto LABEL_6;
    }
  }
  else if ((*(unsigned int (**)(uint64_t))(v4 + 48))(v11))
  {
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v3);
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = ((((v10 + v7 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15;
  LODWORD(v13) = -1;
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  if ((v13 + 1) <= 1) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = ((unint64_t)a1
       + *(unsigned __int8 *)(v14 + 80)
       + (((((((((v8 & ~v6) + v10 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t, void))(v14 + 8))(v16, *(void *)(a2 + 16));
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v24 = v19;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, AssociatedTypeWitness);
  if (!result)
  {
    BOOL v22 = *(uint64_t (**)(unint64_t, uint64_t))(v24 + 8);
    return v22(v20, AssociatedTypeWitness);
  }
  return result;
}

void **sub_1C0C965A0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = (v8 | 7) + 8;
  uint64_t v60 = (void *)(((unint64_t)a1 + v10) & ~(v8 | 7));
  uint64_t v62 = a2;
  uint64_t v11 = (void *)(((unint64_t)a2 + v10) & ~(v8 | 7));
  uint64_t v12 = *(unsigned int *)(v7 + 84);
  uint64_t v13 = *(void *)(v7 + 64);
  size_t v61 = ((((v13 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v64 = v8 + 8;
  uint64_t v14 = ((unint64_t)v11 + v8 + 8) & ~v8;
  id v15 = v5;
  if (v12 >= 0x7FFFFFFF)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)v11 + v8 + 8) & ~v8, v12, v6))goto LABEL_6; {
LABEL_5:
    }
    unint64_t v16 = v60;
    size_t v17 = v61;
    memcpy(v60, v11, v61);
    uint64_t v18 = a1;
    goto LABEL_7;
  }
  if ((*(void *)((v13 + 9 + v14) & 0xFFFFFFFFFFFFFFF8) >> 1) >= 0x80000001) {
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v19 = ~v8;
  unint64_t v16 = v60;
  *uint64_t v60 = *v11;
  unint64_t v20 = ((unint64_t)v60 + v64) & v19;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v20, v14, v6);
  uint64_t v21 = (unsigned char *)(v20 + v13);
  *uint64_t v21 = *(unsigned char *)(v14 + v13);
  v21[1] = *(unsigned char *)(v14 + v13 + 1);
  BOOL v22 = (_OWORD *)((v20 + v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (_OWORD *)((v14 + v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  *BOOL v22 = *v23;
  unint64_t v24 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(unsigned char *)(v24 + 9) = *(unsigned char *)(v25 + 9);
  swift_bridgeObjectRetain();
  uint64_t v18 = a1;
  size_t v17 = v61;
LABEL_7:
  uint64_t v26 = ~v9;
  int v27 = (char *)v16 + v17;
  *int v27 = *((unsigned char *)v11 + v17);
  *(unsigned char *)(((unint64_t)v16 + v17) | 1) = *(unsigned char *)(((unint64_t)v11 + v17) | 1);
  _OWORD v27[2] = *((unsigned char *)v11 + v17 + 2);
  v27[3] = *((unsigned char *)v11 + v17 + 3);
  unsigned int v28 = (void *)(((unint64_t)v11 + v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void *)(((unint64_t)v16 + v17 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v29 = *v28;
  uint64_t v30 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  unint64_t v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = *(void *)(v33 + 8);
  if (v34 >= 0xFFFFFFFF) {
    LODWORD(v34) = -1;
  }
  unsigned int v35 = v34 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35 > 1)
  {
    *(_OWORD *)unint64_t v32 = *(_OWORD *)v33;
  }
  else
  {
    *(void *)unint64_t v32 = *(void *)v33;
    *(void *)(v32 + 8) = *(void *)(v33 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  int v36 = (void *)(((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v37 = (void **)(((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v38 = *v37;
  *int v36 = *v37;
  unint64_t v39 = (void *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v39 = *v40;
  v39[1] = v40[1];
  unint64_t v41 = ((((((((v64 & v26) + v17 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = *(void *)(a3 + 16);
  uint64_t v43 = *(void *)(v42 - 8);
  unint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
  uint64_t v45 = v43 + 16;
  uint64_t v46 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v47 = v41 + v46 + 16;
  uint64_t v48 = ((unint64_t)v18 + v47) & ~v46;
  uint64_t v49 = ((unint64_t)v62 + v47) & ~v46;
  id v50 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v48, v49, v42);
  uint64_t v51 = *(void *)(v45 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v54 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = v51 + v54;
  unint64_t v56 = (void *)((v51 + v54 + v48) & ~v54);
  unint64_t v57 = (const void *)((v55 + v49) & ~v54);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48))(v57, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v53 + 84)) {
      size_t v58 = *(void *)(v53 + 64);
    }
    else {
      size_t v58 = *(void *)(v53 + 64) + 1;
    }
    memcpy(v56, v57, v58);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v53 + 16))(v56, v57, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v56, 0, 1, AssociatedTypeWitness);
  }
  return v18;
}

void **sub_1C0C96A2C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *a1;
  *a1 = *a2;
  id v7 = v5;

  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = (v10 | 7) + 8;
  uint64_t v84 = a1;
  uint64_t v82 = a2;
  uint64_t v13 = (void *)(((unint64_t)a2 + v12) & ~(v10 | 7));
  uint64_t v14 = *(unsigned int *)(v9 + 84);
  uint64_t v15 = *(void *)(v9 + 64);
  uint64_t v16 = v15 + 9;
  size_t __n = ((((v15 + 9 + ((v10 + 8) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v86 = v10 + 8;
  long long __dst = (void *)(((unint64_t)a1 + v12) & ~(v10 | 7));
  uint64_t v17 = ((unint64_t)__dst + v10 + 8) & ~v10;
  uint64_t v18 = ((unint64_t)v13 + v10 + 8) & ~v10;
  if (v14 <= 0x7FFFFFFE)
  {
    uint64_t v24 = *(void *)((v16 + v18) & 0xFFFFFFFFFFFFFFF8) >> 1;
    int v22 = -(int)v24;
    if ((*(void *)((v16 + v17) & 0xFFFFFFFFFFFFFFF8) >> 1) <= 0x80000000)
    {
      size_t v23 = __n;
      if (v24 < 0x80000001) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    size_t v23 = __n;
    if (v24 < 0x80000001)
    {
LABEL_7:
      unint64_t v25 = __dst;
      void *__dst = *v13;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v17, v18, v8);
      uint64_t v26 = (unsigned char *)(v17 + v15);
      *uint64_t v26 = *(unsigned char *)(v18 + v15);
      v26[1] = *(unsigned char *)(v18 + v15 + 1);
      int v27 = (_OWORD *)((v17 + v15 + 9) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v28 = (_OWORD *)((v18 + v15 + 9) & 0xFFFFFFFFFFFFFFF8);
      *int v27 = *v28;
      unint64_t v29 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v30 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v29 = *(void *)v30;
      *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
      *(unsigned char *)(v29 + 9) = *(unsigned char *)(v30 + 9);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
LABEL_6:
    if (v22)
    {
LABEL_11:
      unint64_t v25 = __dst;
      memcpy(__dst, v13, v23);
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  uint64_t v80 = v13;
  uint64_t v19 = *(void *)(*(void *)(v8 - 8) + 64);
  unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  int v21 = v20(v17, v14, v8);
  int v22 = v20(v18, v14, v8);
  uint64_t v15 = v19;
  uint64_t v13 = v80;
  size_t v23 = __n;
  if (v21) {
    goto LABEL_6;
  }
LABEL_9:
  if (v22)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_12:
  unint64_t v25 = __dst;
  void *__dst = *v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v17, v18, v8);
  uint64_t v31 = (unsigned char *)(v17 + v15);
  *uint64_t v31 = *(unsigned char *)(v18 + v15);
  v31[1] = *(unsigned char *)(v18 + v15 + 1);
  unint64_t v32 = (_OWORD *)((v17 + v15 + 9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v33 = (_OWORD *)((v18 + v15 + 9) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v32 = *v33;
  unint64_t v34 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v35 = v13;
  unint64_t v36 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v34 = *(void *)v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v36 + 8);
  char v37 = *(unsigned char *)(v36 + 9);
  uint64_t v13 = v35;
  *(unsigned char *)(v34 + 9) = v37;
LABEL_13:
  uint64_t v38 = ~v11;
  unint64_t v39 = (char *)v25 + v23;
  uint64_t v40 = (char *)v13 + v23;
  *unint64_t v39 = *((unsigned char *)v13 + v23);
  *(unsigned char *)(((unint64_t)v25 + v23) | 1) = *(unsigned char *)(((unint64_t)v13 + v23) | 1);
  v39[2] = *((unsigned char *)v13 + v23 + 2);
  v39[3] = *((unsigned char *)v13 + v23 + 3);
  unint64_t v41 = (void *)(((unint64_t)v25 + v23 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v42 = (void *)((unint64_t)(v40 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v41 = *v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v43 = *v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v45 = ((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v47) = -1;
  if (*(void *)(v45 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v48) = -1;
  }
  else {
    uint64_t v48 = *(void *)(v45 + 8);
  }
  unsigned int v49 = v48 + 1;
  if (*(void *)(v46 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v47 = *(void *)(v46 + 8);
  }
  unsigned int v50 = v47 + 1;
  if (v49 > 1)
  {
    if (v50 <= 1)
    {
      *(void *)unint64_t v45 = *(void *)v46;
      *(void *)(v45 + 8) = *(void *)(v46 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
  }
  else
  {
    if (v50 <= 1)
    {
      *(void *)unint64_t v45 = *(void *)v46;
      *(void *)(v45 + 8) = *(void *)(v46 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)unint64_t v45 = *(_OWORD *)v46;
LABEL_25:
  *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
  uint64_t v51 = (void **)(((unint64_t)v43 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = (void **)(((unint64_t)v44 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v53 = *v52;
  uint64_t v54 = *v51;
  void *v51 = *v52;
  id v55 = v53;

  unint64_t v56 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v57 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v56 = *v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v58 = ((((((((v86 & v38) + v23 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v59 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v60 = v59 + 24;
  uint64_t v61 = *(unsigned __int8 *)(v59 + 80);
  uint64_t v62 = v58 + v61 + 16;
  uint64_t v63 = ((unint64_t)v84 + v62) & ~v61;
  uint64_t v64 = ((unint64_t)v82 + v62) & ~v61;
  (*(void (**)(uint64_t, uint64_t, void))(v59 + 24))(v63, v64, *(void *)(a3 + 16));
  uint64_t v65 = *(void *)(v60 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v67 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v68 = *(unsigned __int8 *)(v67 + 80);
  uint64_t v69 = v65 + v68;
  uint64_t v70 = (void *)((v65 + v68 + v63) & ~v68);
  uint64_t v71 = (void *)((v69 + v64) & ~v68);
  uint64_t v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v67 + 48);
  LODWORD(v64) = v72(v70, 1, AssociatedTypeWitness);
  int v73 = v72(v71, 1, AssociatedTypeWitness);
  if (v64)
  {
    if (!v73)
    {
      (*(void (**)(void *, void *, uint64_t))(v67 + 16))(v70, v71, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v70, 0, 1, AssociatedTypeWitness);
      return v84;
    }
    int v74 = *(_DWORD *)(v67 + 84);
    size_t v75 = *(void *)(v67 + 64);
  }
  else
  {
    if (!v73)
    {
      (*(void (**)(void *, void *, uint64_t))(v67 + 24))(v70, v71, AssociatedTypeWitness);
      return v84;
    }
    long long v77 = *(void (**)(void *, uint64_t))(v67 + 8);
    uint64_t v76 = v67 + 8;
    v77(v70, AssociatedTypeWitness);
    int v74 = *(_DWORD *)(v76 + 76);
    size_t v75 = *(void *)(v76 + 56);
  }
  if (v74) {
    size_t v78 = v75;
  }
  else {
    size_t v78 = v75 + 1;
  }
  memcpy(v70, v71, v78);
  return v84;
}

void *sub_1C0C970B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 | 7) + 8;
  uint64_t v47 = a1;
  uint64_t v45 = ~(v7 | 7);
  uint64_t v9 = (void *)(((unint64_t)a1 + v8) & v45);
  uint64_t v10 = (void *)(((unint64_t)a2 + v8) & v45);
  uint64_t v11 = v7 + 8;
  uint64_t v12 = *(void *)(v6 + 64);
  unint64_t v13 = ((((v12 + 9 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v14 = ((unint64_t)v10 + v7 + 8) & ~v7;
  if (*(_DWORD *)(v6 + 84) >= 0x7FFFFFFFu)
  {
    if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v10 + v7 + 8) & ~v7)) {
      goto LABEL_6;
    }
LABEL_5:
    memcpy(v9, v10, ((((v12 + 9 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10);
    goto LABEL_7;
  }
  if ((*(void *)((v12 + 9 + v14) & 0xFFFFFFFFFFFFFFF8) >> 1) >= 0x80000001) {
    goto LABEL_5;
  }
LABEL_6:
  void *v9 = *v10;
  unint64_t v15 = ((unint64_t)v9 + v11) & ~v7;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v15, v14, v5);
  uint64_t v16 = (unsigned char *)(v15 + v12);
  *uint64_t v16 = *(unsigned char *)(v14 + v12);
  v16[1] = *(unsigned char *)(v14 + v12 + 1);
  uint64_t v17 = (_OWORD *)((v15 + v12 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (_OWORD *)((v14 + v12 + 9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v17 = *v18;
  unint64_t v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(unsigned char *)(v19 + 9) = *(unsigned char *)(v20 + 9);
LABEL_7:
  int v21 = (char *)v9 + v13;
  *int v21 = *((unsigned char *)v10 + v13);
  *(unsigned char *)(((unint64_t)v9 + v13) | 1) = *(unsigned char *)(((unint64_t)v10 + v13) | 1);
  void v21[2] = *((unsigned char *)v10 + v13 + 2);
  v21[3] = *((unsigned char *)v10 + v13 + 3);
  int v22 = (void *)(((unint64_t)v9 + v13 + 11) & 0xFFFFFFFFFFFFFFF8);
  size_t v23 = (void *)(((unint64_t)v10 + v13 + 11) & 0xFFFFFFFFFFFFFFF8);
  *int v22 = *v23;
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
  *(unsigned char *)(v26 + 16) = *(unsigned char *)(v27 + 16);
  unsigned int v28 = (void *)(((unint64_t)v24 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void *)(((unint64_t)v25 + 39) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v28 = *v29;
  *(_OWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v31 = v30 + 32;
  uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
  unint64_t v33 = (((((((((v11 & v45) + v13 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v32
      + 16;
  unint64_t v34 = ((unint64_t)v47 + v33) & ~v32;
  unint64_t v35 = ((unint64_t)a2 + v33) & ~v32;
  (*(void (**)(unint64_t, unint64_t, void))(v30 + 32))(v34, v35, *(void *)(a3 + 16));
  uint64_t v36 = *(void *)(v31 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v40 = v36 + v39;
  unint64_t v41 = (void *)((v36 + v39 + v34) & ~v39);
  uint64_t v42 = (const void *)((v40 + v35) & ~v39);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v42, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v38 + 84)) {
      size_t v43 = *(void *)(v38 + 64);
    }
    else {
      size_t v43 = *(void *)(v38 + 64) + 1;
    }
    memcpy(v41, v42, v43);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v41, v42, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, AssociatedTypeWitness);
  }
  return v47;
}

void **sub_1C0C974A4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  *a1 = *a2;

  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = (v8 | 7) + 8;
  uint64_t v76 = a1;
  uint64_t v11 = (void *)(((unint64_t)a1 + v10) & ~(v8 | 7));
  int v74 = a2;
  uint64_t v12 = *(unsigned int *)(v7 + 84);
  uint64_t v13 = *(void *)(v7 + 64);
  uint64_t v14 = v13 + 9;
  size_t __n = ((((v13 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v15 = ((unint64_t)v11 + v8 + 8) & ~v8;
  __src = (void *)(((unint64_t)a2 + v10) & ~(v8 | 7));
  uint64_t v73 = v8 + 8;
  uint64_t v16 = ((unint64_t)__src + v8 + 8) & ~v8;
  if (v12 <= 0x7FFFFFFE)
  {
    uint64_t v22 = *(void *)((v14 + v16) & 0xFFFFFFFFFFFFFFF8) >> 1;
    int v20 = -(int)v22;
    if ((*(void *)((v14 + v15) & 0xFFFFFFFFFFFFFFF8) >> 1) <= 0x80000000)
    {
      size_t v21 = __n;
      if (v22 < 0x80000001) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    size_t v21 = __n;
    if (v22 < 0x80000001)
    {
LABEL_7:
      size_t v23 = __src;
      *uint64_t v11 = *__src;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v15, v16, v6);
      uint64_t v24 = (unsigned char *)(v15 + v13);
      *uint64_t v24 = *(unsigned char *)(v16 + v13);
      v24[1] = *(unsigned char *)(v16 + v13 + 1);
      unint64_t v25 = (_OWORD *)((v15 + v13 + 9) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v26 = (_OWORD *)((v16 + v13 + 9) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v25 = *v26;
      unint64_t v27 = ((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
      *(unsigned char *)(v27 + 9) = *(unsigned char *)(v28 + 9);
      goto LABEL_13;
    }
LABEL_6:
    if (v20)
    {
LABEL_11:
      size_t v23 = __src;
      memcpy(v11, __src, v21);
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  uint64_t v71 = v11;
  uint64_t v17 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v19 = v18(v15, v12, v6);
  int v20 = v18(v16, v12, v6);
  uint64_t v13 = v17;
  uint64_t v11 = v71;
  size_t v21 = __n;
  if (v19) {
    goto LABEL_6;
  }
LABEL_9:
  if (v20)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_12:
  size_t v23 = __src;
  *uint64_t v11 = *__src;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v15, v16, v6);
  unint64_t v29 = (unsigned char *)(v15 + v13);
  *unint64_t v29 = *(unsigned char *)(v16 + v13);
  v29[1] = *(unsigned char *)(v16 + v13 + 1);
  uint64_t v30 = (_OWORD *)((v15 + v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (_OWORD *)((v16 + v13 + 9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  unint64_t v32 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v32 = *(void *)v33;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(unsigned char *)(v32 + 9) = *(unsigned char *)(v33 + 9);
LABEL_13:
  uint64_t v34 = ~v9;
  unint64_t v35 = (char *)v11 + v21;
  *unint64_t v35 = *((unsigned char *)v23 + v21);
  *(unsigned char *)(((unint64_t)v11 + v21) | 1) = *(unsigned char *)(((unint64_t)v23 + v21) | 1);
  long long v35[2] = *((unsigned char *)v23 + v21 + 2);
  v35[3] = *((unsigned char *)v23 + v21 + 3);
  uint64_t v36 = (void *)(((unint64_t)v11 + v21 + 11) & 0xFFFFFFFFFFFFFFF8);
  char v37 = (void *)(((unint64_t)v23 + v21 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v36 = *v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = (void *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v39 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v38 = *v39;
  swift_bridgeObjectRelease();
  unint64_t v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v42) = -1;
  if (*(void *)(v40 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v42 = *(void *)(v40 + 8);
  }
  if ((v42 + 1) <= 1)
  {
    unint64_t v43 = *(void *)(v41 + 8);
    if (v43 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    if ((v43 + 1) <= 1)
    {
      *(void *)unint64_t v40 = *(void *)v41;
      *(void *)(v40 + 8) = *(void *)(v41 + 8);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
LABEL_22:
  *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
  unint64_t v44 = (void **)(((unint64_t)v38 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (void **)(((unint64_t)v39 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = *v44;
  *unint64_t v44 = *v45;

  uint64_t v47 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v47 = *v48;
  swift_bridgeObjectRelease();
  v47[1] = v48[1];
  swift_bridgeObjectRelease();
  unint64_t v49 = ((((((((v73 & v34) + v21 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v51 = v50 + 40;
  uint64_t v52 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v53 = v49 + v52 + 16;
  uint64_t v54 = ((unint64_t)v76 + v53) & ~v52;
  uint64_t v55 = ((unint64_t)v74 + v53) & ~v52;
  (*(void (**)(uint64_t, uint64_t, void))(v50 + 40))(v54, v55, *(void *)(a3 + 16));
  uint64_t v56 = *(void *)(v51 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v59 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v60 = v56 + v59;
  uint64_t v61 = (void *)((v56 + v59 + v54) & ~v59);
  uint64_t v62 = (void *)((v60 + v55) & ~v59);
  uint64_t v63 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
  LODWORD(v55) = v63(v61, 1, AssociatedTypeWitness);
  int v64 = v63(v62, 1, AssociatedTypeWitness);
  if (v55)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v58 + 32))(v61, v62, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v61, 0, 1, AssociatedTypeWitness);
      return v76;
    }
    int v65 = *(_DWORD *)(v58 + 84);
    size_t v66 = *(void *)(v58 + 64);
  }
  else
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v58 + 40))(v61, v62, AssociatedTypeWitness);
      return v76;
    }
    uint64_t v68 = *(void (**)(void *, uint64_t))(v58 + 8);
    uint64_t v67 = v58 + 8;
    v68(v61, AssociatedTypeWitness);
    int v65 = *(_DWORD *)(v67 + 76);
    size_t v66 = *(void *)(v67 + 56);
  }
  if (v65) {
    size_t v69 = v66;
  }
  else {
    size_t v69 = v66 + 1;
  }
  memcpy(v61, v62, v69);
  return v76;
}

uint64_t sub_1C0C97AC0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(sub_1C151631C() - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v40 = v6;
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  unsigned int v7 = v6 - 1;
  unsigned int v41 = v7;
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8) {
    unsigned int v11 = v8;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v14 = v13;
  unsigned int v15 = *(_DWORD *)(v13 + 84);
  unsigned int v16 = v15 - 1;
  if (!v15) {
    unsigned int v16 = 0;
  }
  if (v16 <= v11) {
    unsigned int v16 = v11;
  }
  uint64_t v17 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = *(void *)(v5 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v21 = *(void *)(v13 + 64);
  if (v15) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v18 + 9;
  unint64_t v24 = ((((((((((v17 + 8) & ~(v17 | 7))
              + ((((v18 + 9 + ((v17 + 8) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
              + 21) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v19
      + 16;
  uint64_t v25 = *(void *)(v9 + 64) + v20;
  if (a2 <= v16) {
    goto LABEL_36;
  }
  uint64_t v26 = v22 + ((v25 + (v24 & ~v19)) & ~v20);
  char v27 = 8 * v26;
  if (v26 > 3) {
    goto LABEL_19;
  }
  unsigned int v29 = ((a2 - v16 + ~(-1 << v27)) >> v27) + 1;
  if (HIWORD(v29))
  {
    int v28 = *(_DWORD *)((char *)a1 + v26);
    if (v28) {
      goto LABEL_26;
    }
LABEL_36:
    if (v8 == v16)
    {
      if ((v41 & 0x80000000) == 0)
      {
        uint64_t v33 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v33) = -1;
        }
        return (v33 + 1);
      }
      uint64_t v37 = (v17 + 8 + (((unint64_t)a1 + (v17 | 7) + 8) & ~(v17 | 7))) & ~v17;
      if (v40 < 0x7FFFFFFF)
      {
        uint64_t v39 = *(void *)((v23 + v37) & 0xFFFFFFFFFFFFFFF8) >> 1;
        if (v39 > 0x80000000) {
          unsigned int v38 = -(int)v39;
        }
        else {
          unsigned int v38 = 0;
        }
      }
      else
      {
        unsigned int v38 = (*(uint64_t (**)(uint64_t))(v5 + 48))(v37);
      }
LABEL_53:
      if (v38 >= 2) {
        return v38 - 1;
      }
      else {
        return 0;
      }
    }
    unint64_t v35 = ((unint64_t)a1 + v24) & ~v19;
    if (v10 == v16)
    {
      uint64_t v36 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
      return v36(v35, v10, v12);
    }
    if (v15 >= 2)
    {
      unsigned int v38 = (*(uint64_t (**)(unint64_t))(v14 + 48))((v25 + v35) & ~v20);
      goto LABEL_53;
    }
    return 0;
  }
  if (v29 > 0xFF)
  {
    int v28 = *(unsigned __int16 *)((char *)a1 + v26);
    if (*(unsigned __int16 *)((char *)a1 + v26)) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
  if (v29 < 2) {
    goto LABEL_36;
  }
LABEL_19:
  int v28 = *((unsigned __int8 *)a1 + v26);
  if (!*((unsigned char *)a1 + v26)) {
    goto LABEL_36;
  }
LABEL_26:
  int v30 = (v28 - 1) << v27;
  if (v26 > 3) {
    int v30 = 0;
  }
  if (v26)
  {
    if (v26 <= 3) {
      int v31 = v26;
    }
    else {
      int v31 = 4;
    }
    switch(v31)
    {
      case 2:
        int v32 = *a1;
        break;
      case 3:
        int v32 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v32 = *(_DWORD *)a1;
        break;
      default:
        int v32 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v32 = 0;
  }
  return v16 + (v32 | v30) + 1;
}

void sub_1C0C97EEC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v53 = sub_1C151631C();
  uint64_t v6 = *(void *)(v53 - 8);
  uint64_t v59 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v54 = v7;
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  unsigned int v55 = v7;
  unsigned int v8 = v7 - 1;
  if (v7 - 1 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v7 - 1;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v60 = v10;
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9) {
    unsigned int v12 = v9;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v56 = *(void *)(a4 + 16);
  int v13 = 0;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = v14;
  int v16 = *(_DWORD *)(v14 + 84);
  unsigned int v17 = v16 - 1;
  if (!v16) {
    unsigned int v17 = 0;
  }
  if (v17 <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = v17;
  }
  uint64_t v19 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = v19 | 7;
  uint64_t v21 = v19 + 8;
  uint64_t v22 = *(void *)(v6 + 64) + 9;
  size_t v23 = ((((v22 + ((v19 + 8) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v24 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v25 = ((((((((v23 + ((v19 + 8) & ~(v19 | 7)) + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v24
      + 16;
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = *(void *)(v10 + 64) + v26;
  unint64_t v28 = (v27 + (v25 & ~v24)) & ~v26;
  size_t v29 = *(void *)(v14 + 64);
  if (v16) {
    size_t v30 = v29;
  }
  else {
    size_t v30 = v29 + 1;
  }
  unint64_t v31 = v28 + v30;
  if (a3 > v18)
  {
    if (v31 <= 3)
    {
      unsigned int v32 = ((a3 - v18 + ~(-1 << (8 * v31))) >> (8 * v31)) + 1;
      if (HIWORD(v32))
      {
        int v13 = 4;
      }
      else if (v32 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v32 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  if (v18 < a2)
  {
    unsigned int v33 = ~v18 + a2;
    if (v31 < 4)
    {
      int v34 = (v33 >> (8 * v31)) + 1;
      if (v31)
      {
        int v39 = v33 & ~(-1 << (8 * v31));
        bzero(a1, v28 + v30);
        if (v31 == 3)
        {
          *(_WORD *)a1 = v39;
          a1[2] = BYTE2(v39);
        }
        else if (v31 == 2)
        {
          *(_WORD *)a1 = v39;
        }
        else
        {
          *a1 = v39;
        }
      }
    }
    else
    {
      bzero(a1, v28 + v30);
      *(_DWORD *)a1 = v33;
      int v34 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v31] = v34;
        return;
      case 2:
        *(_WORD *)&a1[v31] = v34;
        return;
      case 3:
        goto LABEL_85;
      case 4:
        *(_DWORD *)&a1[v31] = v34;
        return;
      default:
        return;
    }
  }
  uint64_t v35 = ~v20;
  uint64_t v36 = ~v19;
  uint64_t v37 = ~v24;
  uint64_t v38 = ~v26;
  switch(v13)
  {
    case 1:
      a1[v31] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v31] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_85:
      __break(1u);
      JUMPOUT(0x1C0C98478);
    case 4:
      *(_DWORD *)&a1[v31] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return;
      }
LABEL_37:
      if (v9 == v18)
      {
        if ((v8 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v40 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v40 = a2 - 1;
          }
          *(void *)a1 = v40;
          return;
        }
        uint64_t v46 = (unint64_t)&a1[v20 + 8] & v35;
        if (v8 < a2)
        {
          int v48 = a2 - v55;
          goto LABEL_73;
        }
        uint64_t v43 = a2 + 1;
        if (v43 > v55)
        {
          int v48 = a2 - v55;
LABEL_73:
          bzero((void *)((unint64_t)&a1[v20 + 8] & v35), v23);
          if (v23 <= 3) {
LABEL_75:
          }
            *(_WORD *)uint64_t v46 = v48;
          else {
LABEL_74:
          }
            *(_DWORD *)uint64_t v46 = v48;
          return;
        }
        if (a2 == -1) {
          return;
        }
        unint64_t v41 = (v21 + v46) & v36;
        uint64_t v44 = v54;
        if (v54 < 0x7FFFFFFF)
        {
          uint64_t v51 = (void *)((v22 + v41) & 0xFFFFFFFFFFFFFFF8);
          if ((v43 & 0x80000000) != 0) {
            uint64_t v52 = a2 - 0x7FFFFFFF;
          }
          else {
            uint64_t v52 = 2 * ~a2;
          }
          void *v51 = v52;
          v51[1] = 0;
          return;
        }
        uint64_t v42 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
        uint64_t v45 = v53;
LABEL_43:
        v42(v41, v43, v44, v45);
        return;
      }
      unint64_t v41 = (unint64_t)&a1[v25] & v37;
      if (v11 == v18)
      {
        uint64_t v42 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
        uint64_t v43 = a2;
        uint64_t v44 = v11;
        uint64_t v45 = v56;
        goto LABEL_43;
      }
      uint64_t v46 = (v27 + v41) & v38;
      if (v17 >= a2)
      {
        uint64_t v50 = *(void (**)(uint64_t, void))(v15 + 56);
        v50(v46, a2 + 1);
      }
      else
      {
        if (v30 <= 3) {
          int v47 = ~(-1 << (8 * v30));
        }
        else {
          int v47 = -1;
        }
        if (v30)
        {
          int v48 = v47 & (~v17 + a2);
          if (v30 <= 3) {
            int v49 = v30;
          }
          else {
            int v49 = 4;
          }
          bzero((void *)((v27 + v41) & v38), v30);
          switch(v49)
          {
            case 2:
              goto LABEL_75;
            case 3:
              *(_WORD *)uint64_t v46 = v48;
              *(unsigned char *)(v46 + 2) = BYTE2(v48);
              break;
            case 4:
              goto LABEL_74;
            default:
              *(unsigned char *)uint64_t v46 = v48;
              break;
          }
        }
      }
      return;
  }
}

uint64_t FormatFeedGroup.revision.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*FormatFeedGroup.revision.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatFeedGroup.kindIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FormatFeedGroup() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FormatFeedGroup.kindIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FormatFeedGroup.paidVisibility.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatFeedGroup();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FormatFeedGroup.paidVisibilityInForYou.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatFeedGroup();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

double FormatFeedGroup.rankMultiplier.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 36));
}

double FormatFeedGroup.baseScore.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 40));
}

double FormatFeedGroup.scoreThreshold.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 44));
}

uint64_t FormatFeedGroup.softMaxPaidArticlesForFreeUsersSmall.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 48));
}

uint64_t FormatFeedGroup.softMaxPaidArticlesForFreeUsersLarge.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 52));
}

uint64_t FormatFeedGroup.softMinPaidArticlesForFreeUsersSmall.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 56));
}

uint64_t FormatFeedGroup.softMinPaidArticlesForFreeUsersLarge.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 60));
}

uint64_t FormatFeedGroup.repooling.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatFeedGroup();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t FormatFeedGroup.personalizingScoreProfiles.getter()
{
  type metadata accessor for FormatFeedGroup();
  return swift_bridgeObjectRetain();
}

uint64_t FormatFeedGroup.debugCandidates.getter()
{
  type metadata accessor for FormatFeedGroup();
  return swift_retain();
}

uint64_t FormatFeedGroup.init(result:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:debugFilterJournals:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, double a6@<X5>, char a7@<W6>, double a8@<X7>, void *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, char *a20,uint64_t a21,uint64_t a22)
{
  uint64_t v26 = a9;
  char v27 = *a4;
  char v28 = *a5;
  char v81 = *a20;
  *a9 = 0;
  size_t v29 = (int *)type metadata accessor for FormatFeedGroup();
  size_t v30 = &v26[v29[6]];
  uint64_t v31 = a1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent;
  sub_1BFECA6EC(v31, (uint64_t)&v26[v29[5]], (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  *size_t v30 = a2;
  v30[1] = a3;
  v26[v29[7]] = v27;
  v26[v29[8]] = v28;
  *(double *)&v26[v29[9]] = a10;
  double v32 = a6;
  if (a7) {
    double v32 = 0.0;
  }
  *(double *)&v26[v29[10]] = v32;
  double v33 = a8;
  if (a11) {
    double v33 = 0.0;
  }
  *(double *)&v26[v29[11]] = v33;
  int v34 = &v26[v29[12]];
  *(void *)int v34 = a12;
  v34[8] = a13 & 1;
  uint64_t v35 = &v26[v29[13]];
  *(void *)uint64_t v35 = a14;
  v35[8] = a15 & 1;
  uint64_t v36 = &v26[v29[14]];
  *(void *)uint64_t v36 = a16;
  v36[8] = a17 & 1;
  uint64_t v37 = &v26[v29[15]];
  *(void *)uint64_t v37 = a18;
  v37[8] = a19 & 1;
  uint64_t v83 = v29;
  v26[v29[16]] = v81;
  uint64_t v38 = *(void *)(v31 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  unint64_t isUniquelyReferenced_nonNull_native = MEMORY[0x1E4FBC860];
  unint64_t v87 = MEMORY[0x1E4FBC860];
  uint64_t v40 = *(void *)(v38 + 16);
  if (v40)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = v38 + 96;
    do
    {
      v41 += 80;
      unint64_t v42 = FormatContentSubgroup.ResolvedContainer.headlines.getter();
      sub_1BFE52C14(v42);
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
    unint64_t isUniquelyReferenced_nonNull_native = v87;
  }
  size_t v78 = v26;
  if (isUniquelyReferenced_nonNull_native >> 62) {
    goto LABEL_48;
  }
  uint64_t v43 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  sub_1C1520B5C();
  sub_1BFC9DBE8(0, &qword_1EB880D78);
  if (swift_dynamicCastMetatype()
    || (uint64_t v44 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
  {
    *(void *)&v26[v83[17]] = isUniquelyReferenced_nonNull_native;
  }
  else
  {
    uint64_t v45 = v43 + 32;
    while (swift_dynamicCastObjCProtocolConditional())
    {
      v45 += 8;
      if (!--v44)
      {
        uint64_t v46 = isUniquelyReferenced_nonNull_native;
        goto LABEL_18;
      }
    }
    uint64_t v46 = v43 | 1;
LABEL_18:
    *(void *)&v26[v83[17]] = v46;
  }
  int v47 = (void *)sub_1BFE52C2C(MEMORY[0x1E4FBC860]);
  uint64_t v48 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v48) {
    goto LABEL_49;
  }
  do
  {
    uint64_t v84 = v48;
    unint64_t v85 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    uint64_t v49 = 4;
    while (1)
    {
      uint64_t v51 = v49 - 4;
      if (!v85) {
        break;
      }
      uint64_t v26 = (unsigned char *)MEMORY[0x1C18C7CB0](v49 - 4, isUniquelyReferenced_nonNull_native);
      uint64_t v52 = (unsigned char *)(v49 - 3);
      if (__OFADD__(v51, 1)) {
        goto LABEL_45;
      }
LABEL_29:
      id v53 = objc_msgSend(v26, sel_identifier);
      uint64_t v54 = sub_1C151E62C();
      uint64_t v56 = v55;

      id v57 = objc_msgSend(v26, sel_scoreProfile);
      if (v57)
      {
        id v86 = v57;
        uint64_t v26 = v52;
        unint64_t v58 = isUniquelyReferenced_nonNull_native;
        unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v60 = sub_1BFEF2D8C(v54, v56);
        uint64_t v61 = v47[2];
        BOOL v62 = (v59 & 1) == 0;
        uint64_t v63 = v61 + v62;
        if (__OFADD__(v61, v62)) {
          goto LABEL_46;
        }
        char v64 = v59;
        if (v47[3] >= v63)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1C1070908();
          }
        }
        else
        {
          sub_1C105D2EC(v63, isUniquelyReferenced_nonNull_native);
          unint64_t v65 = sub_1BFEF2D8C(v54, v56);
          if ((v64 & 1) != (v66 & 1))
          {
            sub_1C1520CFC();
            __break(1u);
            JUMPOUT(0x1C0C98EB0);
          }
          unint64_t v60 = v65;
        }
        unint64_t isUniquelyReferenced_nonNull_native = v58;
        uint64_t v52 = v26;
        if (v64)
        {
          uint64_t v50 = v47[7];

          *(void *)(v50 + 8 * v60) = v86;
        }
        else
        {
          v47[(v60 >> 6) + 8] |= 1 << v60;
          uint64_t v71 = (uint64_t *)(v47[6] + 16 * v60);
          *uint64_t v71 = v54;
          v71[1] = v56;
          *(void *)(v47[7] + 8 * v60) = v86;
          uint64_t v72 = v47[2];
          BOOL v73 = __OFADD__(v72, 1);
          uint64_t v74 = v72 + 1;
          if (v73) {
            goto LABEL_47;
          }
          v47[2] = v74;
          swift_bridgeObjectRetain();
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = v84;
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v67 = sub_1BFEF2D8C(v54, v56);
        char v69 = v68;
        swift_bridgeObjectRelease();
        if (v69)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C1070908();
          }
          swift_bridgeObjectRelease();
          uint64_t v70 = *(void **)(v47[7] + 8 * v67);
          sub_1C091D59C(v67, v47);
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      ++v49;
      if (v52 == (unsigned char *)v48) {
        goto LABEL_49;
      }
    }
    uint64_t v26 = *(unsigned char **)(isUniquelyReferenced_nonNull_native + 8 * v49);
    swift_unknownObjectRetain();
    uint64_t v52 = (unsigned char *)(v49 - 3);
    if (!__OFADD__(v51, 1)) {
      goto LABEL_29;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    sub_1BFC9DBE8(0, &qword_1EB880D78);
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_1C152041C();
    swift_bridgeObjectRelease();
    *(void *)&v26[v83[17]] = v75;
    int v47 = (void *)sub_1BFE52C2C(MEMORY[0x1E4FBC860]);
    swift_bridgeObjectRetain_n();
    uint64_t v48 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  while (v48);
LABEL_49:
  swift_bridgeObjectRelease_n();
  *(void *)&v78[v83[18]] = v47;
  sub_1C15180CC();
  if (sub_1C151809C())
  {
    if (!a21 && !sub_1C12EAC4C())
    {
      if (qword_1EA194CB8 != -1) {
        swift_once();
      }
      swift_retain();
    }
    swift_retain();
    long long v77 = FeedGroupDebugCandidates.append(filterJournals:)(a22);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
    long long v77 = 0;
  }
  *(void *)&v78[v83[19]] = v77;
  return result;
}

uint64_t FormatFeedGroup.init(result:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, double a4@<X3>, char a5@<W4>, double a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, char *a18, uint64_t a19)
{
  char v19 = *a3;
  char v20 = *a18;
  char v24 = *a2;
  char v23 = v19;
  char v22 = v20;
  return FormatFeedGroup.init(result:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:debugFilterJournals:)(a1, 0, 0, &v24, &v23, a4, a5 & 1, a6, a9, a10, a7 & 1, a8, a11 & 1, a12, a13 & 1, a14, a15 & 1, a16, a17 & 1,
           &v22,
           a19,
           MEMORY[0x1E4FBC860]);
}

uint64_t FormatFeedGroup.init(content:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X2>, double a4@<X3>, char a5@<W4>, double a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, char a13, uint64_t a14, char a15, unint64_t a16, char a17, char *a18, uint64_t a19)
{
  uint64_t v35 = a8;
  double v36 = a6;
  double v33 = a9;
  double v34 = a4;
  uint64_t v32 = a12;
  int v31 = a5 & 1;
  int v30 = a7 & 1;
  int v28 = a13 & 1;
  int v29 = a11 & 1;
  uint64_t v23 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v23 - 8);
  unint64_t v25 = (char *)&v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  LOBYTE(a3) = *a3;
  char v26 = *a18;
  sub_1BFECA6EC(a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  char v39 = (char)a2;
  char v38 = (char)a3;
  char v37 = v26;
  FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)((uint64_t)v25, 0, 0, &v39, &v38, v34, v31, v36, v33, a10, v30, v35, v29, v32, v28, a14, a15 & 1, a16, a17 & 1,
    &v37,
    a19);
  return sub_1BFD21818(a1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
}

uint64_t FormatFeedGroup.copy(content:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  char v39 = a2;
  uint64_t v4 = (int *)type metadata accessor for FormatFeedGroup();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECFA84(0, &qword_1EB85FD48, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  MEMORY[0x1F4188790](v7 - 8);
  unsigned int v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for FormatContent.Resolved();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C9A2FC(a1, (uint64_t)v9, &qword_1EB85FD48, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  sub_1BFECA6EC(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFeedGroup);
  int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  char v38 = v13;
  if (v14 == 1)
  {
    sub_1BFECA6EC((uint64_t)&v6[v4[5]], (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    sub_1BFD21818((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFeedGroup);
    sub_1C009126C((uint64_t)v9, &qword_1EB85FD48, (void (*)(uint64_t))type metadata accessor for FormatContent.Resolved);
  }
  else
  {
    sub_1BFD21818((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatFeedGroup);
    sub_1BFEADF80((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  }
  uint64_t v15 = (uint64_t *)(v2 + v4[6]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  char v42 = *(unsigned char *)(v2 + v4[7]);
  LOBYTE(v15) = *(unsigned char *)(v2 + v4[8]);
  double v18 = *(double *)(v2 + v4[9]);
  uint64_t v19 = v4[11];
  double v35 = *(double *)(v2 + v4[10]);
  double v36 = *(double *)(v2 + v19);
  uint64_t v37 = v16;
  char v41 = (char)v15;
  uint64_t v20 = v4[13];
  uint64_t v21 = v2 + v4[12];
  uint64_t v34 = *(void *)v21;
  unsigned __int8 v22 = *(unsigned char *)(v21 + 8);
  uint64_t v23 = *(void *)(v2 + v20);
  unsigned __int8 v24 = *(unsigned char *)(v2 + v20 + 8);
  uint64_t v25 = v4[15];
  uint64_t v26 = v2 + v4[14];
  uint64_t v27 = *(void *)v26;
  unsigned __int8 v28 = *(unsigned char *)(v26 + 8);
  unint64_t v29 = *(void *)(v2 + v25);
  char v30 = *(unsigned char *)(v2 + v25 + 8);
  char v40 = *(unsigned char *)(v2 + v4[16]);
  uint64_t v31 = *(void *)(v2 + v4[19]);
  swift_bridgeObjectRetain();
  swift_retain();
  return FormatFeedGroup.init(content:kindIdentifier:paidVisibility:paidVisibilityInForYou:rankMultiplier:baseScore:scoreThreshold:softMaxPaidArticlesForFreeUsersSmall:softMaxPaidArticlesForFreeUsersLarge:softMinPaidArticlesForFreeUsersSmall:softMinPaidArticlesForFreeUsersLarge:repooling:debugCandidates:)((uint64_t)v38, v37, v17, &v42, &v41, v35, 0, v36, v39, v18, 0, v34, v22, v23, v24, v27, v28, v29, v30,
           &v40,
           v31);
}

uint64_t sub_1C0C994C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0C994D4()
{
  return swift_bridgeObjectRetain();
}

double sub_1C0C994E0(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 36));
}

double sub_1C0C994EC(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 40));
}

double sub_1C0C994F8(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_1C0C99508(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C0C99540()
{
  return 0x74616D726F46;
}

uint64_t FormatFeedGroup.debugName.getter()
{
  return 0x74616D726F46;
}

uint64_t FormatFeedGroup.debugTitle.getter()
{
  uint64_t v1 = type metadata accessor for FormatOption();
  uint64_t v92 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v69 - v5);
  uint64_t v7 = v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 20);
  uint64_t v8 = type metadata accessor for FormatContent.Resolved();
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  uint64_t v11 = *(void *)(v7 + *(int *)(v8 + 32));
  uint64_t v73 = *(void *)(v11 + 16);
  if (!v73) {
    goto LABEL_61;
  }
  uint64_t v70 = v10;
  uint64_t v71 = v7;
  uint64_t v75 = v11 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v13 = 0;
  uint64_t v88 = v6;
  uint64_t v74 = result;
  while (1)
  {
    if (v13 >= *(void *)(result + 16)) {
      goto LABEL_71;
    }
    unint64_t v72 = v13;
    int v14 = (uint64_t *)(v75 + 80 * v13);
    uint64_t v15 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v16 = v14[3];
    uint64_t v86 = *v14;
    uint64_t v87 = v16;
    uint64_t v19 = v14[4];
    uint64_t v18 = v14[5];
    uint64_t v21 = v14[6];
    uint64_t v20 = v14[7];
    uint64_t v23 = v14[8];
    uint64_t v22 = v14[9];
    uint64_t v90 = v19 & 0x7FFFFFFFFFFFFFFFLL;
    sub_1BFEE0A78();
    uint64_t v81 = v17;
    uint64_t v82 = v19;
    sub_1BFEE0A78();
    uint64_t v78 = v22;
    swift_bridgeObjectRelease();
    uint64_t v79 = v23;
    swift_bridgeObjectRelease();
    uint64_t v85 = v20;
    swift_bridgeObjectRelease();
    uint64_t v83 = v21;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v80 = v15;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(v18 + 16);
    uint64_t v89 = v18;
    if (v24)
    {
      unint64_t v25 = 0;
      uint64_t v91 = v18 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
      while (1)
      {
        if (v25 >= *(void *)(v18 + 16)) {
          goto LABEL_69;
        }
        sub_1BFECA6EC(v91 + *(void *)(v92 + 72) * v25, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
        if (qword_1EB894240 != -1) {
          swift_once();
        }
        uint64_t v26 = off_1EB894230;
        if (!*((void *)off_1EB894230 + 2)) {
          goto LABEL_7;
        }
        uint64_t v27 = *v6;
        uint64_t v28 = v6[1];
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v29 = sub_1C1520E0C();
        uint64_t v30 = -1 << v26[32];
        unint64_t v31 = v29 & ~v30;
        uint64_t v32 = v26 + 56;
        if (((*(void *)&v26[((v31 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v31) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v33 = *((void *)v26 + 6);
        uint64_t v34 = (void *)(v33 + 16 * v31);
        BOOL v35 = *v34 == v27 && v34[1] == v28;
        if (!v35 && (sub_1C1520A9C() & 1) == 0) {
          break;
        }
LABEL_19:
        swift_bridgeObjectRelease();
        uint64_t v6 = v88;
        unint64_t v36 = v88[2];
        uint64_t v37 = v36 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_1BFD21818((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
        if (v36 >> 60 == 5)
        {
          sub_1C0033494();
          swift_bridgeObjectRelease();
LABEL_65:
          swift_bridgeObjectRelease();
          uint64_t v68 = *(void *)(v37 + 16);
          swift_bridgeObjectRetain();
          swift_release();
          return v68;
        }
        uint64_t result = swift_release();
        uint64_t v18 = v89;
LABEL_8:
        if (++v25 == v24) {
          goto LABEL_29;
        }
      }
      uint64_t v38 = ~v30;
      for (unint64_t i = v31 + 1; ; unint64_t i = v40 + 1)
      {
        uint64_t v40 = i & v38;
        if (((*(void *)&v32[((i & v38) >> 3) & 0xFFFFFFFFFFFFFF8] >> (i & v38)) & 1) == 0) {
          break;
        }
        char v41 = (void *)(v33 + 16 * v40);
        BOOL v42 = *v41 == v27 && v41[1] == v28;
        if (v42 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_19;
        }
      }
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v6 = v88;
      uint64_t v18 = v89;
LABEL_7:
      uint64_t result = sub_1BFD21818((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
      goto LABEL_8;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v43 = v85;
    sub_1BFEE0A78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v44 = *(void *)(v43 + 16);
    if (v44) {
      break;
    }
LABEL_59:
    swift_bridgeObjectRelease();
    unint64_t v65 = v72 + 1;
    sub_1C0033494();
    unint64_t v13 = v65;
    uint64_t result = v74;
    if (v65 == v73)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v71;
      uint64_t v10 = v70;
LABEL_61:
      char v66 = *(void **)(v9 + *(int *)(v10 + 44));
      if (!v66) {
        return 0;
      }
      id v67 = objc_msgSend(v66, sel_name);
      uint64_t v68 = sub_1C151E62C();

      return v68;
    }
  }
  unint64_t v45 = 0;
  uint64_t v46 = v43 + 32;
  uint64_t v77 = *(void *)(v43 + 16);
  uint64_t v76 = v43 + 32;
  while (1)
  {
    if (v45 >= *(void *)(v43 + 16)) {
      goto LABEL_70;
    }
    uint64_t v47 = *(void *)(v46 + (v45 << 6) + 16);
    uint64_t v91 = *(void *)(v47 + 16);
    if (v91) {
      break;
    }
LABEL_32:
    ++v45;
    uint64_t v6 = v88;
    if (v45 == v44) {
      goto LABEL_59;
    }
  }
  unint64_t v84 = v45;
  uint64_t v90 = v47 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v48 = 0;
  while (2)
  {
    if (v48 < *(void *)(v47 + 16))
    {
      sub_1BFECA6EC(v90 + *(void *)(v92 + 72) * v48, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if (qword_1EB894240 != -1) {
        swift_once();
      }
      uint64_t v49 = off_1EB894230;
      if (*((void *)off_1EB894230 + 2))
      {
        uint64_t v51 = *v3;
        uint64_t v50 = v3[1];
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v52 = sub_1C1520E0C();
        uint64_t v53 = -1 << v49[32];
        unint64_t v54 = v52 & ~v53;
        uint64_t v55 = v49 + 56;
        if ((*(void *)&v49[((v54 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v54))
        {
          uint64_t v56 = *((void *)v49 + 6);
          id v57 = (void *)(v56 + 16 * v54);
          BOOL v58 = *v57 == v51 && v57[1] == v50;
          if (v58 || (sub_1C1520A9C() & 1) != 0)
          {
LABEL_49:
            swift_bridgeObjectRelease();
            unint64_t v59 = v3[2];
            uint64_t v37 = v59 & 0xFFFFFFFFFFFFFFFLL;
            swift_retain();
            sub_1BFD21818((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatOption);
            if (v59 >> 60 == 5)
            {
              sub_1C0033494();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_65;
            }
            uint64_t result = swift_release();
            goto LABEL_38;
          }
          uint64_t v60 = ~v53;
          for (unint64_t j = v54 + 1; ; unint64_t j = v62 + 1)
          {
            uint64_t v62 = j & v60;
            if (((*(void *)&v55[((j & v60) >> 3) & 0xFFFFFFFFFFFFFF8] >> (j & v60)) & 1) == 0) {
              break;
            }
            uint64_t v63 = (void *)(v56 + 16 * v62);
            BOOL v64 = *v63 == v51 && v63[1] == v50;
            if (v64 || (sub_1C1520A9C() & 1) != 0) {
              goto LABEL_49;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_1BFD21818((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatOption);
LABEL_38:
      if (++v48 == v91)
      {
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v45 = v84;
        uint64_t v43 = v85;
        uint64_t v44 = v77;
        uint64_t v46 = v76;
        goto LABEL_32;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1C0C99E3C()
{
  return swift_retain();
}

unint64_t sub_1C0C99E48(char a1)
{
  unint64_t result = 0x746E65746E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656449646E696BLL;
      break;
    case 2:
      unint64_t result = 0x6973695664696170;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x746C754D6B6E6172;
      break;
    case 5:
      unint64_t result = 0x726F635365736162;
      break;
    case 6:
    case 7:
    case 8:
    case 9:
      unint64_t result = 0xD000000000000024;
      break;
    case 10:
      unint64_t result = 0x6E696C6F6F706572;
      break;
    case 11:
      unint64_t result = 0x72685465726F6373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0C9A010(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C0C99E48(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0C99E48(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0C9A09C()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0C99E48(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0C9A100()
{
  sub_1C0C99E48(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C9A154()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0C99E48(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0C9A1B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0C9D13C();
  *a1 = result;
  return result;
}

unint64_t sub_1C0C9A1E4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0C99E48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0C9A210@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0C9D13C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C9A238(uint64_t a1)
{
  unint64_t v2 = sub_1BFE51A7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C9A274(uint64_t a1)
{
  unint64_t v2 = sub_1BFE51A7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C9A2B0()
{
  uint64_t v0 = (void *)sub_1BFEF4060((uint64_t)&unk_1F1B81B28);
  uint64_t result = swift_arrayDestroy();
  off_1EB894230 = v0;
  return result;
}

uint64_t sub_1C0C9A2FC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFECFA84(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0C9A368(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1BFE51B34(&qword_1EA1A5688, (void (*)(uint64_t))type metadata accessor for FormatFeedGroup);
  uint64_t result = sub_1BFE51B34((unint64_t *)&unk_1EA1A5690, (void (*)(uint64_t))type metadata accessor for FormatFeedGroup);
  *(void *)(a1 + 24) = result;
  return result;
}

void *assignWithCopy for FormatFeedGroup(void *a1, void *a2, int *a3)
{
  unint64_t v3 = a3;
  unint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  char v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v10 = v9[5];
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)v7 + v9[6]) = *(void *)&v8[v9[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[7]) = *(void *)&v8[v9[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[8]) = *(void *)&v8[v9[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[9]) = *(void *)&v8[v9[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[10]) = *(void *)&v8[v9[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v7 + v9[11]) = *(void *)&v8[v9[11]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v14 = v9[12];
  uint64_t v15 = *(void **)((char *)v7 + v14);
  uint64_t v16 = *(void **)&v8[v14];
  *(void *)((char *)v7 + v14) = v16;
  id v17 = v16;

  *(void *)((char *)v7 + v9[13]) = *(void *)&v8[v9[13]];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v175 = v8;
  uint64_t v176 = v9;
  uint64_t v18 = v9[14];
  uint64_t v19 = (char *)v7 + v18;
  uint64_t v20 = &v8[v18];
  uint64_t v21 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v171 = *(void *)(v21 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v171 + 48);
  int v23 = v22(v19, 1, v21);
  uint64_t v177 = (int *)v21;
  uint64_t v179 = v20;
  int v24 = v22(v20, 1, v21);
  if (!v23)
  {
    if (v24)
    {
      sub_1BFD21818((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    unint64_t v166 = v3;
    unint64_t v168 = v4;
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = *((void *)v20 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(int *)(v21 + 20);
    uint64_t v170 = v19;
    uint64_t v40 = &v19[v39];
    char v41 = &v20[v39];
    *(void *)uint64_t v40 = *(void *)&v20[v39];
    *((void *)v40 + 1) = *(void *)&v20[v39 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v42 = type metadata accessor for FormatWebEmbed();
    uint64_t v43 = *(int *)(v42 + 20);
    uint64_t v44 = &v40[v43];
    unint64_t v45 = &v41[v43];
    uint64_t v46 = sub_1C1515FDC();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v47 + 24);
    v151(v44, v45, v46);
    uint64_t v172 = (int *)v42;
    uint64_t v48 = *(int *)(v42 + 24);
    uint64_t v155 = v41;
    uint64_t v49 = &v41[v48];
    uint64_t v50 = *(uint64_t (**)(void))(v47 + 48);
    __dsta = &v40[v48];
    LODWORD(v45) = v50();
    int v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v50)(v49, 1, v46);
    uint64_t v148 = v47;
    uint64_t v149 = (void *)v46;
    if (v45)
    {
      if (v51)
      {
        sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        size_t v53 = *(void *)(*(void *)(v52 - 8) + 64);
        unint64_t v54 = __dsta;
LABEL_18:
        memcpy(v54, v49, v53);
        goto LABEL_27;
      }
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dsta, v49, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dsta, 0, 1, v46);
    }
    else
    {
      if (v51)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(__dsta, v46);
        sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        size_t v53 = *(void *)(*(void *)(v72 - 8) + 64);
        unint64_t v54 = __dsta;
        goto LABEL_18;
      }
      v151(__dsta, v49, v46);
    }
LABEL_27:
    *(void *)&v40[v172[7]] = *(void *)&v155[v172[7]];
    swift_retain();
    swift_release();
    uint64_t v80 = v172[8];
    uint64_t v81 = &v40[v80];
    uint64_t v82 = &v155[v80];
    *uint64_t v81 = *(void *)v82;
    v81[1] = *((void *)v82 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v83 = v172[9];
    unint64_t v84 = &v40[v83];
    uint64_t v85 = &v155[v83];
    *unint64_t v84 = *(void *)v85;
    v84[1] = *((void *)v85 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v40[v172[10]] = *(void *)&v155[v172[10]];
    *(void *)&v40[v172[11]] = *(void *)&v155[v172[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v40[v172[12]] = *(void *)&v155[v172[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v170 + v177[6]) = *(void *)((char *)v179 + v177[6]);
    swift_retain();
    swift_release();
    *(void *)((char *)v170 + v177[7]) = *(void *)((char *)v179 + v177[7]);
    swift_retain();
    swift_release();
    uint64_t v86 = v177[8];
    uint64_t v87 = (void *)((char *)v170 + v86);
    uint64_t v88 = (void *)((char *)v179 + v86);
    uint64_t v89 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v90 = *(void *)(v89 - 8);
    uint64_t v91 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v90 + 48);
    int v92 = v91(v87, 1, v89);
    int v93 = v91(v88, 1, v89);
    if (v92)
    {
      if (!v93)
      {
        uint64_t v94 = v87;
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v96 = v170;
        uint64_t v37 = v175;
        uint64_t v38 = v176;
        *uint64_t v94 = *v88;
        if (EnumCaseMultiPayload == 1)
        {
          v94[1] = v88[1];
          uint64_t v173 = type metadata accessor for GenericDataVisualization();
          uint64_t v97 = *(int *)(v173 + 20);
          uint64_t v156 = (char *)v88 + v97;
          __srca = (char *)v94 + v97;
          uint64_t v153 = *(void (**)(char *, char *, void *))(v148 + 16);
          swift_bridgeObjectRetain();
          v153(__srca, v156, v149);
          *(void *)((char *)v94 + *(int *)(v173 + 24)) = *(void *)((char *)v88 + *(int *)(v173 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56))(v94, 0, 1, v89);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v93)
      {
        uint64_t v99 = v87;
        uint64_t v96 = v170;
        uint64_t v37 = v175;
        uint64_t v38 = v176;
        if (a1 != v168)
        {
          sub_1BFD21818((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          int v100 = swift_getEnumCaseMultiPayload();
          *uint64_t v99 = *v88;
          if (v100 == 1)
          {
            v99[1] = v88[1];
            uint64_t v174 = type metadata accessor for GenericDataVisualization();
            uint64_t v101 = *(int *)(v174 + 20);
            __srcb = (char *)v88 + v101;
            __dstc = (char *)v99 + v101;
            id v157 = *(void (**)(char *, char *, void *))(v148 + 16);
            swift_bridgeObjectRetain();
            v157(__dstc, __srcb, v149);
            *(void *)((char *)v99 + *(int *)(v174 + 24)) = *(void *)((char *)v88 + *(int *)(v174 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_40:
        uint64_t v102 = v177[9];
        uint64_t v103 = (char *)v96 + v102;
        uint64_t v104 = (char *)v179 + v102;
        sub_1BFEC84E0();
        uint64_t v106 = v105;
        uint64_t v107 = *(void *)(v105 - 8);
        uint64_t v108 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48);
        uint64_t v178 = v103;
        LODWORD(v103) = v108(v103, 1, v105);
        int v109 = v108(v104, 1, v106);
        if (v103)
        {
          if (!v109)
          {
            (*(void (**)(void *, char *, uint64_t))(v107 + 16))(v178, v104, v106);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v107 + 56))(v178, 0, 1, v106);
            goto LABEL_48;
          }
          sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
          size_t v111 = *(void *)(*(void *)(v110 - 8) + 64);
          unint64_t v112 = v178;
        }
        else
        {
          if (!v109)
          {
            (*(void (**)(void *, char *, uint64_t))(v107 + 24))(v178, v104, v106);
            goto LABEL_48;
          }
          (*(void (**)(void *, uint64_t))(v107 + 8))(v178, v106);
          sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
          size_t v111 = *(void *)(*(void *)(v113 - 8) + 64);
          unint64_t v112 = v178;
        }
        memcpy(v112, v104, v111);
LABEL_48:
        unint64_t v3 = v166;
        unint64_t v4 = v168;
        goto LABEL_49;
      }
      sub_1BFD21818((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1BFECFA84(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    memcpy(v87, v88, *(void *)(*(void *)(v98 - 8) + 64));
    uint64_t v96 = v170;
    uint64_t v37 = v175;
    uint64_t v38 = v176;
    goto LABEL_40;
  }
  if (v24)
  {
LABEL_7:
    sub_1BFECFA84(0, &qword_1EB896EE0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
    memcpy(v19, v20, *(void *)(*(void *)(v36 - 8) + 64));
    uint64_t v37 = v175;
    uint64_t v38 = v176;
    goto LABEL_49;
  }
  uint64_t v165 = v3;
  uint64_t v167 = v4;
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  uint64_t v25 = *(int *)(v21 + 20);
  uint64_t v169 = v19;
  uint64_t v26 = &v19[v25];
  uint64_t v27 = &v20[v25];
  *(void *)uint64_t v26 = *(void *)&v20[v25];
  *((void *)v26 + 1) = *(void *)&v20[v25 + 8];
  uint64_t v28 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v29 = v28[5];
  uint64_t v154 = &v27[v29];
  __src = &v26[v29];
  uint64_t v30 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(__src, v154, v30);
  uint64_t v33 = v28[6];
  long long __dst = &v26[v33];
  uint64_t v34 = &v27[v33];
  uint64_t v147 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v27[v33], 1, v30))
  {
    sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(__dst, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v32(__dst, v34, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
  }
  *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
  uint64_t v55 = v28[8];
  uint64_t v56 = &v26[v55];
  id v57 = &v27[v55];
  *uint64_t v56 = *(void *)v57;
  v56[1] = *((void *)v57 + 1);
  uint64_t v58 = v28[9];
  unint64_t v59 = &v26[v58];
  uint64_t v60 = &v27[v58];
  *unint64_t v59 = *(void *)v60;
  v59[1] = *((void *)v60 + 1);
  *(void *)&v26[v28[10]] = *(void *)&v27[v28[10]];
  *(void *)&v26[v28[11]] = *(void *)&v27[v28[11]];
  *(void *)&v26[v28[12]] = *(void *)&v27[v28[12]];
  *(void *)((char *)v169 + v177[6]) = *(void *)((char *)v179 + v177[6]);
  *(void *)((char *)v169 + v177[7]) = *(void *)((char *)v179 + v177[7]);
  uint64_t v61 = v177[8];
  uint64_t v150 = (void *)((char *)v169 + v61);
  unint64_t v152 = (void *)((char *)v179 + v61);
  uint64_t v62 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v63 = *(void **)(v62 - 8);
  BOOL v64 = (unsigned int (*)(void *, uint64_t, uint64_t))v63[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v64(v152, 1, v62))
  {
    sub_1BFECFA84(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    memcpy(v150, v152, *(void *)(*(void *)(v65 - 8) + 64));
    unint64_t v4 = v167;
    char v66 = v169;
    uint64_t v37 = v175;
    uint64_t v38 = v176;
  }
  else
  {
    __dstb = v63;
    int v67 = swift_getEnumCaseMultiPayload();
    void *v150 = *v152;
    if (v67 == 1)
    {
      v150[1] = v152[1];
      uint64_t v68 = type metadata accessor for GenericDataVisualization();
      uint64_t v69 = *(int *)(v68 + 20);
      uint64_t v70 = (char *)v150 + v69;
      uint64_t v71 = (char *)v152 + v69;
      swift_bridgeObjectRetain();
      v32(v70, v71, v147);
      *(void *)((char *)v150 + *(int *)(v68 + 24)) = *(void *)((char *)v152 + *(int *)(v68 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    unint64_t v4 = v167;
    char v66 = v169;
    uint64_t v38 = v176;
    uint64_t v37 = v175;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(void *, void, uint64_t, uint64_t))__dstb + 7))(v150, 0, 1, v62);
  }
  uint64_t v73 = v177[9];
  uint64_t v74 = (char *)v66 + v73;
  uint64_t v75 = (char *)v179 + v73;
  sub_1BFEC84E0();
  uint64_t v77 = v76;
  uint64_t v78 = *(void *)(v76 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v75, 1, v76))
  {
    sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
    memcpy(v74, v75, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v74, v75, v77);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v74, 0, 1, v77);
  }
  unint64_t v3 = v165;
  (*(void (**)(void *, void, uint64_t, int *))(v171 + 56))(v66, 0, 1, v177);
LABEL_49:
  uint64_t v114 = v38[15];
  uint64_t v115 = *(void **)((char *)v7 + v114);
  uint64_t v116 = *(void **)&v37[v114];
  *(void *)((char *)v7 + v114) = v116;
  id v117 = v116;

  *((unsigned char *)v7 + v38[16]) = v37[v38[16]];
  *(void *)((char *)v7 + v38[17]) = *(void *)&v37[v38[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v118 = v38[18];
  long long v119 = (char *)v7 + v118;
  uint64_t v120 = &v37[v118];
  uint64_t v121 = sub_1C151D6DC();
  uint64_t v122 = *(void *)(v121 - 8);
  uint64_t v123 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 48);
  int v124 = v123(v119, 1, v121);
  int v125 = v123(v120, 1, v121);
  if (!v124)
  {
    if (!v125)
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 24))(v119, v120, v121);
      goto LABEL_55;
    }
    (*(void (**)(char *, uint64_t))(v122 + 8))(v119, v121);
    goto LABEL_54;
  }
  if (v125)
  {
LABEL_54:
    sub_1BFECFA84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(v119, v120, *(void *)(*(void *)(v126 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v119, v120, v121);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
LABEL_55:
  uint64_t v127 = v3[6];
  uint64_t v128 = (void *)((char *)a1 + v127);
  uint64_t v129 = (void *)((char *)v4 + v127);
  *uint64_t v128 = *v129;
  v128[1] = v129[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v3[7]) = *((unsigned char *)v4 + v3[7]);
  *((unsigned char *)a1 + v3[8]) = *((unsigned char *)v4 + v3[8]);
  *(void *)((char *)a1 + v3[9]) = *(void *)((char *)v4 + v3[9]);
  *(void *)((char *)a1 + v3[10]) = *(void *)((char *)v4 + v3[10]);
  *(void *)((char *)a1 + v3[11]) = *(void *)((char *)v4 + v3[11]);
  uint64_t v130 = v3[12];
  uint64_t v131 = (char *)a1 + v130;
  unsigned int v132 = (char *)v4 + v130;
  uint64_t v133 = *(void *)v132;
  v131[8] = v132[8];
  *(void *)uint64_t v131 = v133;
  uint64_t v134 = v3[13];
  uint64_t v135 = (char *)a1 + v134;
  uint64_t v136 = (char *)v4 + v134;
  uint64_t v137 = *(void *)v136;
  v135[8] = v136[8];
  *(void *)uint64_t v135 = v137;
  uint64_t v138 = v3[14];
  uint64_t v139 = (char *)a1 + v138;
  uint64_t v140 = (char *)v4 + v138;
  uint64_t v141 = *(void *)v140;
  v139[8] = v140[8];
  *(void *)uint64_t v139 = v141;
  uint64_t v142 = v3[15];
  uint64_t v143 = (char *)a1 + v142;
  uint64_t v144 = (char *)v4 + v142;
  uint64_t v145 = *(void *)v144;
  v143[8] = v144[8];
  *(void *)uint64_t v143 = v145;
  *((unsigned char *)a1 + v3[16]) = *((unsigned char *)v4 + v3[16]);
  *(void *)((char *)a1 + v3[17]) = *(void *)((char *)v4 + v3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v3[18]) = *(void *)((char *)v4 + v3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v3[19]) = *(void *)((char *)v4 + v3[19]);
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for FormatFeedGroup(void *a1, void *a2, int *a3)
{
  unint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  *(void *)&v7[v9[8]] = *(void *)&v8[v9[8]];
  *(void *)&v7[v9[9]] = *(void *)&v8[v9[9]];
  *(void *)&v7[v9[10]] = *(void *)&v8[v9[10]];
  *(void *)&v7[v9[11]] = *(void *)&v8[v9[11]];
  *(void *)&v7[v9[12]] = *(void *)&v8[v9[12]];
  *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
  uint64_t v14 = v9[14];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BFECFA84(0, &qword_1EB896EE0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v77 = v3;
    uint64_t v78 = v18;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    uint64_t v86 = v15;
    uint64_t v87 = (int *)v17;
    uint64_t v20 = *(int *)(v17 + 20);
    uint64_t v21 = &v15[v20];
    uint64_t v22 = &v16[v20];
    long long __dst = &v16[v20];
    uint64_t v85 = v16;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)&v16[v20];
    int v23 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v24 = v23[5];
    uint64_t v79 = &v22[v24];
    uint64_t v80 = &v21[v24];
    uint64_t v25 = sub_1C1515FDC();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v76(v80, v79, v25);
    uint64_t v81 = v21;
    uint64_t v27 = v23[6];
    uint64_t v28 = &v21[v27];
    uint64_t v29 = &__dst[v27];
    uint64_t v75 = v26;
    uint64_t v30 = v26;
    uint64_t v31 = v29;
    uint64_t v74 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v25))
    {
      sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      memcpy(v28, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v76(v28, v31, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v28, 0, 1, v25);
    }
    unint64_t v3 = v77;
    *(void *)((char *)v81 + v23[7]) = *(void *)&__dst[v23[7]];
    *(_OWORD *)((char *)v81 + v23[8]) = *(_OWORD *)&__dst[v23[8]];
    *(_OWORD *)((char *)v81 + v23[9]) = *(_OWORD *)&__dst[v23[9]];
    *(void *)((char *)v81 + v23[10]) = *(void *)&__dst[v23[10]];
    *(void *)((char *)v81 + v23[11]) = *(void *)&__dst[v23[11]];
    *(void *)((char *)v81 + v23[12]) = *(void *)&__dst[v23[12]];
    uint64_t v33 = v86;
    *(void *)((char *)v86 + v87[6]) = *(void *)&v16[v87[6]];
    *(void *)((char *)v86 + v87[7]) = *(void *)&v16[v87[7]];
    uint64_t v34 = v87[8];
    __dsta = (_OWORD *)((char *)v86 + v34);
    uint64_t v35 = &v16[v34];
    uint64_t v36 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      sub_1BFECFA84(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      memcpy(__dsta, v35, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        _OWORD *__dsta = *(_OWORD *)v35;
        uint64_t v82 = type metadata accessor for GenericDataVisualization();
        v76((char *)__dsta + *(int *)(v82 + 20), &v35[*(int *)(v82 + 20)], v74);
        uint64_t v39 = *(int *)(v82 + 24);
        uint64_t v33 = v86;
        uint64_t v40 = *(void *)&v35[v39];
        char v41 = __dsta;
        *(void *)((char *)__dsta + v39) = v40;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        uint64_t v42 = v35;
        char v41 = __dsta;
        memcpy(__dsta, v42, *(void *)(v37 + 64));
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v37 + 56))(v41, 0, 1, v36);
    }
    uint64_t v43 = v87[9];
    uint64_t v44 = (char *)v33 + v43;
    unint64_t v45 = (char *)v85 + v43;
    sub_1BFEC84E0();
    uint64_t v47 = v46;
    uint64_t v48 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v45, 1, v46))
    {
      sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
      memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v44, v45, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v78 + 56))(v86, 0, 1, v87);
  }
  *(void *)&v7[v9[15]] = *(void *)&v8[v9[15]];
  v7[v9[16]] = v8[v9[16]];
  *(void *)&v7[v9[17]] = *(void *)&v8[v9[17]];
  uint64_t v50 = v9[18];
  int v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  uint64_t v53 = sub_1C151D6DC();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    sub_1BFECFA84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  uint64_t v56 = v3[7];
  *(_OWORD *)((char *)a1 + v3[6]) = *(_OWORD *)((char *)a2 + v3[6]);
  *((unsigned char *)a1 + v56) = *((unsigned char *)a2 + v56);
  uint64_t v57 = v3[9];
  *((unsigned char *)a1 + v3[8]) = *((unsigned char *)a2 + v3[8]);
  *(void *)((char *)a1 + v57) = *(void *)((char *)a2 + v57);
  uint64_t v58 = v3[11];
  *(void *)((char *)a1 + v3[10]) = *(void *)((char *)a2 + v3[10]);
  *(void *)((char *)a1 + v58) = *(void *)((char *)a2 + v58);
  uint64_t v59 = v3[12];
  uint64_t v60 = v3[13];
  uint64_t v61 = (char *)a1 + v59;
  uint64_t v62 = (char *)a2 + v59;
  *(void *)uint64_t v61 = *(void *)v62;
  v61[8] = v62[8];
  uint64_t v63 = (char *)a1 + v60;
  BOOL v64 = (char *)a2 + v60;
  *(void *)uint64_t v63 = *(void *)v64;
  v63[8] = v64[8];
  uint64_t v65 = v3[14];
  uint64_t v66 = v3[15];
  int v67 = (char *)a1 + v65;
  uint64_t v68 = (char *)a2 + v65;
  *(void *)int v67 = *(void *)v68;
  v67[8] = v68[8];
  uint64_t v69 = (char *)a1 + v66;
  uint64_t v70 = (char *)a2 + v66;
  *(void *)uint64_t v69 = *(void *)v70;
  v69[8] = v70[8];
  uint64_t v71 = v3[17];
  *((unsigned char *)a1 + v3[16]) = *((unsigned char *)a2 + v3[16]);
  *(void *)((char *)a1 + v71) = *(void *)((char *)a2 + v71);
  uint64_t v72 = v3[19];
  *(void *)((char *)a1 + v3[18]) = *(void *)((char *)a2 + v3[18]);
  *(void *)((char *)a1 + v72) = *(void *)((char *)a2 + v72);
  return a1;
}

void *assignWithTake for FormatFeedGroup(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(void *)((char *)a2 + v4 + 8);
  *uint64_t v5 = *(void *)((char *)a2 + v4);
  v5[1] = v7;
  swift_bridgeObjectRelease();
  char v8 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v9 = v8[5];
  uint64_t v10 = (char *)v5 + v9;
  uint64_t v11 = &v6[v9];
  uint64_t v12 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(void *)((char *)v5 + v8[6]) = *(void *)&v6[v8[6]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v8[7]) = *(void *)&v6[v8[7]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v8[8]) = *(void *)&v6[v8[8]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v8[9]) = *(void *)&v6[v8[9]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v8[10]) = *(void *)&v6[v8[10]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v5 + v8[11]) = *(void *)&v6[v8[11]];
  swift_unknownObjectRelease();
  uint64_t v13 = v8[12];
  uint64_t v14 = *(void **)((char *)v5 + v13);
  *(void *)((char *)v5 + v13) = *(void *)&v6[v13];

  *(void *)((char *)v5 + v8[13]) = *(void *)&v6[v8[13]];
  swift_unknownObjectRelease();
  uint64_t v15 = v8[14];
  uint64_t v16 = (void *)((char *)v5 + v15);
  uint64_t v17 = &v6[v15];
  uint64_t v18 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v151 = *(void *)(v18 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v151 + 48);
  int v20 = v19((char *)v16, 1, v18);
  id v161 = v17;
  id v159 = (int *)v18;
  int v21 = v19(v17, 1, v18);
  if (!v20)
  {
    if (v21)
    {
      sub_1BFD21818((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    uint64_t v35 = *((void *)v17 + 1);
    *uint64_t v16 = *(void *)v17;
    v16[1] = v35;
    swift_bridgeObjectRelease();
    uint64_t v36 = *(int *)(v18 + 20);
    uint64_t v155 = v16;
    uint64_t v37 = (void *)((char *)v16 + v36);
    uint64_t v38 = &v17[v36];
    uint64_t v39 = *(void *)&v17[v36 + 8];
    *uint64_t v37 = *(void *)&v17[v36];
    v37[1] = v39;
    swift_bridgeObjectRelease();
    uint64_t v40 = type metadata accessor for FormatWebEmbed();
    uint64_t v41 = *(int *)(v40 + 20);
    uint64_t v149 = &v38[v41];
    unint64_t v152 = (char *)v37 + v41;
    uint64_t v42 = sub_1C1515FDC();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v139 = *(void (**)(char *, char *, uint64_t))(v43 + 40);
    v139(v152, v149, v42);
    uint64_t v150 = (int *)v40;
    uint64_t v44 = *(int *)(v40 + 24);
    uint64_t v140 = v43;
    uint64_t v142 = v37;
    unint64_t v45 = (char *)v37 + v44;
    uint64_t v46 = &v38[v44];
    uint64_t v47 = *(uint64_t (**)(void))(v43 + 48);
    uint64_t v146 = v45;
    LODWORD(v43) = v47();
    int v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v46, 1, v42);
    uint64_t v138 = v42;
    if (v43)
    {
      if (v48)
      {
        sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        size_t v50 = *(void *)(*(void *)(v49 - 8) + 64);
        int v51 = v146;
LABEL_18:
        memcpy(v51, v46, v50);
        goto LABEL_27;
      }
      (*(void (**)(void *, char *, uint64_t))(v140 + 32))(v146, v46, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56))(v146, 0, 1, v42);
    }
    else
    {
      if (v48)
      {
        (*(void (**)(void *, uint64_t))(v140 + 8))(v146, v42);
        sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        size_t v50 = *(void *)(*(void *)(v63 - 8) + 64);
        int v51 = v146;
        goto LABEL_18;
      }
      v139((char *)v146, v46, v42);
    }
LABEL_27:
    *(void *)((char *)v142 + v150[7]) = *(void *)&v38[v150[7]];
    swift_release();
    uint64_t v71 = v150[8];
    uint64_t v72 = (void *)((char *)v142 + v71);
    uint64_t v73 = &v38[v71];
    uint64_t v75 = *(void *)v73;
    uint64_t v74 = *((void *)v73 + 1);
    *uint64_t v72 = v75;
    v72[1] = v74;
    swift_bridgeObjectRelease();
    uint64_t v76 = v150[9];
    uint64_t v77 = (void *)((char *)v142 + v76);
    uint64_t v78 = &v38[v76];
    uint64_t v80 = *(void *)v78;
    uint64_t v79 = *((void *)v78 + 1);
    *uint64_t v77 = v80;
    v77[1] = v79;
    swift_bridgeObjectRelease();
    *(void *)((char *)v142 + v150[10]) = *(void *)&v38[v150[10]];
    *(void *)((char *)v142 + v150[11]) = *(void *)&v38[v150[11]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v142 + v150[12]) = *(void *)&v38[v150[12]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v16 + v159[6]) = *(void *)((char *)v161 + v159[6]);
    swift_release();
    *(void *)((char *)v16 + v159[7]) = *(void *)((char *)v161 + v159[7]);
    swift_release();
    uint64_t v81 = v159[8];
    uint64_t v82 = (char *)v16 + v81;
    uint64_t v83 = (char *)v161 + v81;
    uint64_t v84 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v153 = *(void *)(v84 - 8);
    uint64_t v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v153 + 48);
    int v86 = v85(v82, 1, v84);
    int v87 = v85(v83, 1, v84);
    if (v86)
    {
      if (!v87)
      {
        uint64_t v88 = v82;
        uint64_t v89 = v83;
        uint64_t v33 = a2;
        uint64_t v34 = a3;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
          uint64_t v90 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v140 + 32))(&v88[*(int *)(v90 + 20)], &v89[*(int *)(v90 + 20)], v138);
          *(void *)&v88[*(int *)(v90 + 24)] = *(void *)&v89[*(int *)(v90 + 24)];
          swift_storeEnumTagMultiPayload();
          uint64_t v91 = v153;
        }
        else
        {
          uint64_t v91 = v153;
          memcpy(v88, v89, *(void *)(v153 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v84);
        goto LABEL_39;
      }
    }
    else
    {
      if (!v87)
      {
        int v93 = v83;
        uint64_t v94 = v82;
        uint64_t v33 = a2;
        uint64_t v34 = a3;
        if (a1 != a2)
        {
          sub_1BFD21818((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)uint64_t v94 = *(_OWORD *)v93;
            uint64_t v95 = type metadata accessor for GenericDataVisualization();
            (*(void (**)(char *, char *, uint64_t))(v140 + 32))(&v94[*(int *)(v95 + 20)], &v93[*(int *)(v95 + 20)], v138);
            *(void *)&v94[*(int *)(v95 + 24)] = *(void *)&v93[*(int *)(v95 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v94, v93, *(void *)(v153 + 64));
          }
        }
LABEL_39:
        uint64_t v96 = v159[9];
        uint64_t v97 = (char *)v155 + v96;
        long long v162 = (char *)v161 + v96;
        sub_1BFEC84E0();
        uint64_t v99 = v98;
        uint64_t v158 = *(void *)(v98 - 8);
        int v100 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v158 + 48);
        uint64_t v160 = v97;
        LODWORD(v97) = v100(v97, 1, v98);
        int v101 = v100(v162, 1, v99);
        if (v97)
        {
          if (!v101)
          {
            (*(void (**)(void *, char *, uint64_t))(v158 + 32))(v160, v162, v99);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v158 + 56))(v160, 0, 1, v99);
            goto LABEL_47;
          }
          sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
          size_t v103 = *(void *)(*(void *)(v102 - 8) + 64);
          uint64_t v104 = v160;
        }
        else
        {
          if (!v101)
          {
            (*(void (**)(void *, char *, uint64_t))(v158 + 40))(v160, v162, v99);
            goto LABEL_47;
          }
          (*(void (**)(void *, uint64_t))(v158 + 8))(v160, v99);
          sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
          size_t v103 = *(void *)(*(void *)(v105 - 8) + 64);
          uint64_t v104 = v160;
        }
        memcpy(v104, v162, v103);
        goto LABEL_47;
      }
      sub_1BFD21818((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1BFECFA84(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    memcpy(v82, v83, *(void *)(*(void *)(v92 - 8) + 64));
    uint64_t v33 = a2;
    uint64_t v34 = a3;
    goto LABEL_39;
  }
  if (v21)
  {
LABEL_7:
    sub_1BFECFA84(0, &qword_1EB896EE0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
    memcpy(v16, v17, *(void *)(*(void *)(v32 - 8) + 64));
    uint64_t v33 = a2;
    uint64_t v34 = a3;
    goto LABEL_47;
  }
  __src = v8;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v22 = *(int *)(v18 + 20);
  uint64_t v154 = v16;
  int v23 = (char *)v16 + v22;
  uint64_t v24 = &v17[v22];
  *(_OWORD *)((char *)v16 + v22) = *(_OWORD *)&v17[v22];
  uint64_t v25 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v26 = v25[5];
  uint64_t v144 = &v24[v26];
  uint64_t v147 = &v23[v26];
  uint64_t v27 = sub_1C1515FDC();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v29(v147, v144, v27);
  uint64_t v30 = v25[6];
  uint64_t v148 = &v23[v30];
  uint64_t v145 = &v24[v30];
  uint64_t v141 = v29;
  if ((*(unsigned int (**)(void))(v28 + 48))())
  {
    sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    memcpy(v148, v145, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v29(v148, v145, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v148, 0, 1, v27);
  }
  uint64_t v52 = v27;
  char v8 = __src;
  *(void *)&v23[v25[7]] = *(void *)&v24[v25[7]];
  *(_OWORD *)&v23[v25[8]] = *(_OWORD *)&v24[v25[8]];
  *(_OWORD *)&v23[v25[9]] = *(_OWORD *)&v24[v25[9]];
  *(void *)&v23[v25[10]] = *(void *)&v24[v25[10]];
  *(void *)&v23[v25[11]] = *(void *)&v24[v25[11]];
  *(void *)&v23[v25[12]] = *(void *)&v24[v25[12]];
  *(void *)((char *)v154 + v159[6]) = *(void *)((char *)v161 + v159[6]);
  *(void *)((char *)v154 + v159[7]) = *(void *)((char *)v161 + v159[7]);
  uint64_t v53 = v159[8];
  uint64_t v54 = (char *)v154 + v53;
  uint64_t v55 = (_OWORD *)((char *)v161 + v53);
  uint64_t v56 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    sub_1BFECFA84(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    uint64_t v59 = v154;
    uint64_t v33 = a2;
    uint64_t v34 = a3;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v54 = *v55;
      uint64_t v60 = v54;
      uint64_t v61 = type metadata accessor for GenericDataVisualization();
      v141(&v60[*(int *)(v61 + 20)], (char *)v55 + *(int *)(v61 + 20), v52);
      uint64_t v62 = *(int *)(v61 + 24);
      uint64_t v54 = v60;
      *(void *)&v60[v62] = *(void *)((char *)v55 + v62);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(void *)(v57 + 64));
    }
    uint64_t v33 = a2;
    uint64_t v34 = a3;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    uint64_t v59 = v154;
  }
  uint64_t v64 = v159[9];
  uint64_t v65 = (char *)v59 + v64;
  uint64_t v66 = (char *)v161 + v64;
  sub_1BFEC84E0();
  uint64_t v68 = v67;
  uint64_t v69 = *(void *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v66, 1, v67))
  {
    sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
    memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v65, v66, v68);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v65, 0, 1, v68);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v151 + 56))(v154, 0, 1, v159);
LABEL_47:
  uint64_t v106 = v8[15];
  uint64_t v107 = *(void **)((char *)v5 + v106);
  *(void *)((char *)v5 + v106) = *(void *)&v6[v106];

  *((unsigned char *)v5 + v8[16]) = v6[v8[16]];
  *(void *)((char *)v5 + v8[17]) = *(void *)&v6[v8[17]];
  swift_bridgeObjectRelease();
  uint64_t v108 = v8[18];
  int v109 = (char *)v5 + v108;
  uint64_t v110 = &v6[v108];
  uint64_t v111 = sub_1C151D6DC();
  uint64_t v112 = *(void *)(v111 - 8);
  uint64_t v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
  int v114 = v113(v109, 1, v111);
  int v115 = v113(v110, 1, v111);
  if (!v114)
  {
    if (!v115)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 40))(v109, v110, v111);
      goto LABEL_53;
    }
    (*(void (**)(char *, uint64_t))(v112 + 8))(v109, v111);
    goto LABEL_52;
  }
  if (v115)
  {
LABEL_52:
    sub_1BFECFA84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(v109, v110, *(void *)(*(void *)(v116 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v109, v110, v111);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
LABEL_53:
  uint64_t v117 = v34[6];
  uint64_t v118 = (void *)((char *)a1 + v117);
  long long v119 = (void *)((char *)v33 + v117);
  uint64_t v121 = *v119;
  uint64_t v120 = v119[1];
  void *v118 = v121;
  v118[1] = v120;
  swift_bridgeObjectRelease();
  uint64_t v122 = v34[8];
  *((unsigned char *)a1 + v34[7]) = *((unsigned char *)v33 + v34[7]);
  *((unsigned char *)a1 + v122) = *((unsigned char *)v33 + v122);
  uint64_t v123 = v34[10];
  *(void *)((char *)a1 + v34[9]) = *(void *)((char *)v33 + v34[9]);
  *(void *)((char *)a1 + v123) = *(void *)((char *)v33 + v123);
  uint64_t v124 = v34[12];
  *(void *)((char *)a1 + v34[11]) = *(void *)((char *)v33 + v34[11]);
  int v125 = (char *)a1 + v124;
  uint64_t v126 = (char *)v33 + v124;
  *(void *)int v125 = *(void *)v126;
  v125[8] = v126[8];
  uint64_t v127 = v34[13];
  uint64_t v128 = v34[14];
  uint64_t v129 = (char *)a1 + v127;
  uint64_t v130 = (char *)v33 + v127;
  *(void *)uint64_t v129 = *(void *)v130;
  v129[8] = v130[8];
  uint64_t v131 = (char *)a1 + v128;
  unsigned int v132 = (char *)v33 + v128;
  *(void *)uint64_t v131 = *(void *)v132;
  v131[8] = v132[8];
  uint64_t v133 = v34[15];
  uint64_t v134 = v34[16];
  uint64_t v135 = (char *)a1 + v133;
  uint64_t v136 = (char *)v33 + v133;
  *(void *)uint64_t v135 = *(void *)v136;
  v135[8] = v136[8];
  *((unsigned char *)a1 + v134) = *((unsigned char *)v33 + v134);
  *(void *)((char *)a1 + v34[17]) = *(void *)((char *)v33 + v34[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v34[18]) = *(void *)((char *)v33 + v34[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v34[19]) = *(void *)((char *)v33 + v34[19]);
  swift_release();
  return a1;
}

uint64_t sub_1C0C9CE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatContent.Resolved();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 68));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1C0C9CF20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatContent.Resolved();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 68)) = (a2 - 1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatFeedGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    void *result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C9D0ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFeedGroup.CodingKeys()
{
  return &type metadata for FormatFeedGroup.CodingKeys;
}

unint64_t sub_1C0C9D0E8()
{
  unint64_t result = qword_1EA1A56A0;
  if (!qword_1EA1A56A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A56A0);
  }
  return result;
}

uint64_t sub_1C0C9D13C()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t _s8NewsFeed16FormatStyleImageV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v9 = *a2;
  uint64_t v10 = v2;
  if ((static FormatAsyncImageContent.== infix(_:_:)(&v10, &v9) & 1) == 0
    || (_s8NewsFeed20FormatImageNodeStyleC2eeoiySbAC_ACtFZ_0(v3, v5) & 1) == 0)
  {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v7 = sub_1BFEFAE14(v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_1C0C9D22C(uint64_t a1)
{
  unint64_t result = sub_1C0C9D254();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C9D254()
{
  unint64_t result = qword_1EA1A56A8;
  if (!qword_1EA1A56A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A56A8);
  }
  return result;
}

unint64_t sub_1C0C9D2A8(void *a1)
{
  a1[1] = sub_1BFDC1D9C();
  a1[2] = sub_1BFD84E24();
  unint64_t result = sub_1C0C9D2E0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0C9D2E0()
{
  unint64_t result = qword_1EA1A56B0[0];
  if (!qword_1EA1A56B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A56B0);
  }
  return result;
}

uint64_t destroy for FormatStyleImage()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed16FormatStyleImageVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatStyleImage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatStyleImage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatStyleImage()
{
  return &type metadata for FormatStyleImage;
}

uint64_t dispatch thunk of MediaViewLayoutAttributesType.mediaViewFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MediaViewLayoutAttributesType.mediaViewRoundedCorners.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MediaViewLayoutAttributesType.mediaViewRoundedCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t FeedItemFilterCustomMatcher.description.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedItemFilterCustomMatcher.description.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FeedItemFilterCustomMatcher.description.modify())()
{
  return j__swift_endAccess;
}

void *FeedItemFilterCustomMatcher.__allocating_init(description:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

void *FeedItemFilterCustomMatcher.init(description:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t FeedItemFilterCustomMatcher.createApplicator()@<X0>(void *a1@<X8>)
{
  sub_1C11A85EC((uint64_t)sub_1C0C9D6A4, v1, a1);
  return swift_retain();
}

uint64_t sub_1C0C9D6A4()
{
  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t FeedItemFilterCustomMatcher.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedItemFilterCustomMatcher.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C9D738()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedItemFilterCustomMatcher()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FeedItemFilterCustomMatcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedItemFilterCustomMatcher);
}

uint64_t dispatch thunk of FeedItemFilterCustomMatcher.__allocating_init(description:block:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t FormatBackgroundLayout.deinit()
{
  swift_release();

  return v0;
}

uint64_t FormatBackgroundLayout.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatBackgroundLayout()
{
  return self;
}

uint64_t method lookup function for FormatBackgroundLayout(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBackgroundLayout);
}

uint64_t sub_1C0C9D870(uint64_t a1)
{
  uint64_t v2 = sub_1C151BBCC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA0EDC();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA11DC(0, (unint64_t *)&unk_1EB8642F0, MEMORY[0x1E4FACB80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v26 - v17;
  if (a1)
  {
    sub_1C151B74C();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v19(v18, 0, 1, v2);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v19((char *)&v26 - v17, 1, 1, v2);
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v15, *MEMORY[0x1E4FACB78], v2);
  v19(v15, 0, 1, v2);
  uint64_t v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1C0CA0F70((uint64_t)v18, (uint64_t)v9);
  sub_1C0CA0F70((uint64_t)v15, v20);
  int v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v21((uint64_t)v9, 1, v2) != 1)
  {
    sub_1C0CA0F70((uint64_t)v9, (uint64_t)v12);
    if (v21(v20, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v20, v2);
      sub_1C0CA10EC();
      char v23 = sub_1C151E5CC();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v3 + 8);
      v24(v5, v2);
      sub_1C0CA1004((uint64_t)v15);
      sub_1C0CA1004((uint64_t)v18);
      v24(v12, v2);
      sub_1C0CA1004((uint64_t)v9);
      char v22 = v23 ^ 1;
      return v22 & 1;
    }
    sub_1C0CA1004((uint64_t)v15);
    sub_1C0CA1004((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    goto LABEL_9;
  }
  sub_1C0CA1004((uint64_t)v15);
  sub_1C0CA1004((uint64_t)v18);
  if (v21(v20, 1, v2) != 1)
  {
LABEL_9:
    sub_1C0CA1090((uint64_t)v9);
    char v22 = 1;
    return v22 & 1;
  }
  sub_1C0CA1004((uint64_t)v9);
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_1C0C9DC34(uint64_t a1, id a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController);
  id v3 = objc_msgSend(a2, sel_identifier);
  if (!v3)
  {
    sub_1C151E62C();
    id v3 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v2, sel_addMutedSubscriptionForTagID_, v3);

  swift_getObjectType();
  if (qword_1EB87B180 != -1) {
    swift_once();
  }
  sub_1BFFB52BC();
  swift_unknownObjectRetain();
  sub_1C151AD8C();
  return swift_unknownObjectRelease();
}

void sub_1C0C9DE08(uint64_t a1, uint64_t a2, uint64_t a3, id *a4, char *a5, uint64_t a6)
{
}

uint64_t sub_1C0C9DE38@<X0>(void **a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C0CA0630(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C0C9DE6C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, uint64_t a5)
{
  return sub_1C0CA06B4(*a4, a5);
}

uint64_t sub_1C0C9E03C(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(a2, sel_shortcutsTagID);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1C151E62C();
    uint64_t v12 = v11;

    if (v5 == v10 && v7 == v12)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_11;
    }
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  objc_msgSend(a1, sel_isMySports);
LABEL_11:
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C0CA11DC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
  id v18 = objc_msgSend(a1, sel_name, 0x80000001C1622860);
  uint64_t v19 = sub_1C151E62C();
  uint64_t v21 = v20;

  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 64) = sub_1BFE9C558();
  *(void *)(v17 + 32) = v19;
  *(void *)(v17 + 40) = v21;
  uint64_t v22 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1C0C9E388(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  id v5 = objc_msgSend(a1, sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a2, sel_featuredStoriesTagID);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v12;

    if (v6 == v11 && v8 == v13) {
      goto LABEL_12;
    }
    char v15 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_47;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v16 = objc_msgSend(a1, sel_identifier);
  uint64_t v17 = sub_1C151E62C();
  uint64_t v19 = v18;

  id v20 = objc_msgSend(a2, sel_trendingTagID);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = sub_1C151E62C();
    uint64_t v24 = v23;

    if (v17 == v22 && v19 == v24)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      goto LABEL_47;
    }
    char v25 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_47;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v26 = objc_msgSend(a1, sel_identifier);
  uint64_t v27 = sub_1C151E62C();
  uint64_t v29 = v28;

  id v30 = objc_msgSend(a2, sel_briefingsTagID);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = sub_1C151E62C();
    uint64_t v34 = v33;

    if (v27 == v32 && v29 == v34) {
      goto LABEL_43;
    }
    char v35 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_47;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v36 = objc_msgSend(a1, sel_identifier);
  uint64_t v37 = sub_1C151E62C();
  uint64_t v39 = v38;

  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_spotlightChannelID) & 1) != 0
    && (id v40 = objc_msgSend(a2, sel_spotlightChannelID)) != 0)
  {
    uint64_t v41 = v40;
    uint64_t v42 = sub_1C151E62C();
    uint64_t v44 = v43;

    if (v37 == v42 && v39 == v44) {
      goto LABEL_43;
    }
    char v72 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v72) {
      goto LABEL_47;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v45 = objc_msgSend(a1, sel_identifier);
  uint64_t v46 = sub_1C151E62C();
  uint64_t v48 = v47;

  id v49 = objc_msgSend(a2, sel_myMagazinesTagID);
  if (v49)
  {
    size_t v50 = v49;
    uint64_t v51 = sub_1C151E62C();
    uint64_t v53 = v52;

    if (v46 == v51 && v48 == v53) {
      goto LABEL_43;
    }
    char v54 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v54) {
      goto LABEL_47;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v55 = objc_msgSend(a1, sel_identifier);
  uint64_t v56 = sub_1C151E62C();
  uint64_t v58 = v57;

  if (objc_msgSend(a2, sel_respondsToSelector_, sel_sharedWithYouTagID))
  {
    id v59 = objc_msgSend(a2, sel_sharedWithYouTagID);
    uint64_t v60 = sub_1C151E62C();
    uint64_t v62 = v61;

    if (v56 == v60 && v58 == v62) {
      goto LABEL_43;
    }
    char v73 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v73) {
      goto LABEL_47;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v63 = objc_msgSend(a1, sel_identifier);
  uint64_t v64 = sub_1C151E62C();
  uint64_t v66 = v65;

  id v67 = objc_msgSend(a2, sel_shortcutsTagID);
  if (v67)
  {
    uint64_t v68 = v67;
    uint64_t v69 = sub_1C151E62C();
    uint64_t v71 = v70;

    if (v64 == v69 && v66 == v71)
    {
LABEL_43:
      swift_bridgeObjectRelease_n();
LABEL_47:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v75 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v76 = sub_1C1515B8C();

      return v76;
    }
    char v78 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v78) {
      goto LABEL_47;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v79 = objc_msgSend(a1, sel_identifier);
  uint64_t v80 = sub_1C151E62C();
  uint64_t v82 = v81;

  id v83 = objc_msgSend(a2, sel_sportsTopStoriesTagID);
  if (v83)
  {
    uint64_t v84 = v83;
    uint64_t v85 = sub_1C151E62C();
    uint64_t v87 = v86;

    if (v80 == v85 && v82 == v87)
    {
      swift_bridgeObjectRelease_n();
LABEL_57:
      type metadata accessor for Localized();
      uint64_t v89 = swift_getObjCClassFromMetadata();
      id v90 = objc_msgSend(self, sel_bundleForClass_, v89);
      sub_1C1515B8C();

      sub_1C0CA11DC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1C1529AE0;
      id v92 = objc_msgSend(a1, sel_name, 0x80000001C1621E90);
LABEL_60:
      id v95 = v92;
      uint64_t v96 = sub_1C151E62C();
      uint64_t v98 = v97;

      *(void *)(v91 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v91 + 64) = sub_1BFE9C558();
      *(void *)(v91 + 32) = v96;
      *(void *)(v91 + 40) = v98;
      uint64_t v76 = sub_1C151E66C();
      swift_bridgeObjectRelease();
      return v76;
    }
    char v88 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v88) {
      goto LABEL_57;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(a1, sel_isMySports))
  {
    type metadata accessor for Localized();
    uint64_t v93 = swift_getObjCClassFromMetadata();
    id v94 = objc_msgSend(self, sel_bundleForClass_, v93);
    sub_1C1515B8C();

    sub_1C0CA11DC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_1C1529AE0;
    id v92 = objc_msgSend(a1, sel_name, 0x80000001C1621DF0);
    goto LABEL_60;
  }
  if (objc_msgSend(a1, sel_isPuzzleHub)) {
    goto LABEL_47;
  }
  id v99 = objc_msgSend(a1, sel_asSports);
  if (!v99)
  {
    if (FCTagProviding.isTopic.getter(ObjectType) || objc_msgSend(a1, sel_isLocal))
    {
      type metadata accessor for Localized();
      uint64_t v101 = swift_getObjCClassFromMetadata();
      id v102 = objc_msgSend(self, sel_bundleForClass_, v101);
      sub_1C1515B8C();

      sub_1C0CA11DC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1C1529AE0;
      id v92 = objc_msgSend(a1, sel_name, 0x80000001C1621CB0);
    }
    else
    {
      type metadata accessor for Localized();
      uint64_t v103 = swift_getObjCClassFromMetadata();
      id v104 = objc_msgSend(self, sel_bundleForClass_, v103);
      sub_1C1515B8C();

      sub_1C0CA11DC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1C1529AE0;
      id v92 = objc_msgSend(a1, sel_name, 0x80000001C1621C10);
    }
    goto LABEL_60;
  }
  uint64_t v100 = sub_1C0C9F1E4(v99);
  swift_unknownObjectRelease();
  return v100;
}

uint64_t sub_1C0C9F1E4(void *a1)
{
  switch((unint64_t)objc_msgSend(a1, sel_sportsType))
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1C1515B8C();

      sub_1C0CA11DC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
      id v5 = objc_msgSend(a1, sel_name, 0x80000001C16223D0);
      break;
    default:
      type metadata accessor for Localized();
      uint64_t v6 = swift_getObjCClassFromMetadata();
      id v7 = objc_msgSend(self, sel_bundleForClass_, v6);
      sub_1C1515B8C();

      sub_1C0CA11DC(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
      id v5 = objc_msgSend(a1, sel_name, 0x80000001C1622320);
      break;
  }
  id v8 = v5;
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1BFE9C558();
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v11;
  uint64_t v12 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1C0C9FF70(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9E03C(a1, a2);
  sub_1C0C9E388(a1, a2);
  id v8 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1);

  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  swift_retain();
  char v15 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1BFC81770;
  uint64_t v29 = v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  id v26 = sub_1BFD34E78;
  uint64_t v27 = &block_descriptor_54;
  id v16 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_actionWithTitle_style_handler_, v15, 2, v16, 0x80000001C1621B00);
  _Block_release(v16);

  id v19 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v20 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v28 = nullsub_1;
  uint64_t v29 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  id v26 = sub_1BFD34E78;
  uint64_t v27 = &block_descriptor_7;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = objc_msgSend(v17, sel_actionWithTitle_style_handler_, v20, 1, v21, 0x80000001C1621B30);
  _Block_release(v21);

  objc_msgSend(v10, sel_addAction_, v18);
  objc_msgSend(v10, sel_addAction_, v22);

  return v10;
}

void sub_1C0CA0310(uint64_t a1, uint64_t a2, id a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if ((a4 & 1) == 0)
  {
    uint64_t v11 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController];
    id v12 = objc_msgSend(a3, sel_identifier);
    if (!v12)
    {
      sub_1C151E62C();
      id v12 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v11, sel_removeSubscriptionForTagID_type_, v12, 2);
LABEL_16:

    swift_getObjectType();
    if (qword_1EB87B180 != -1) {
      swift_once();
    }
    sub_1BFFB52BC();
    swift_unknownObjectRetain();
    sub_1C151AD8C();
    swift_unknownObjectRelease();
    return;
  }
  if ((sub_1C0C9D870(a5) & 1) == 0)
  {
    id v20 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController];
    id v21 = objc_msgSend(a3, sel_identifier);
LABEL_13:
    id v12 = v21;
    if (!v12)
    {
      sub_1C151E62C();
      id v12 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v20, sel_addMutedSubscriptionForTagID_, v12);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_sceneProvider], *(void *)&v5[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_sceneProvider + 24]);
  id v13 = (void *)sub_1C151AE2C();
  if (!v13
    || (uint64_t v14 = v13,
        id v15 = objc_msgSend(v13, sel_rootViewController),
        v14,
        !v15))
  {
    id v20 = *(void **)&v6[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController];
    id v21 = objc_msgSend(a3, sel_identifier);
    goto LABEL_13;
  }
  id v16 = (void *)sub_1C151F49C();

  id v17 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_appConfigManager], sel_appConfiguration);
  id v18 = (void *)swift_allocObject();
  void v18[2] = v6;
  v18[3] = a3;
  void v18[4] = a1;
  v18[5] = a2;
  v18[6] = a5;
  swift_retain();
  swift_unknownObjectRetain();
  id v19 = v6;
  swift_unknownObjectRetain();
  id v22 = sub_1C0C9FF70(a3, v17, (uint64_t)sub_1C0CA1194, (uint64_t)v18);
  swift_unknownObjectRelease();
  swift_release();
  objc_msgSend(v16, sel_presentViewController_animated_completion_, v22, 1, 0);
}

uint64_t sub_1C0CA0630(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed22BlockingCommandHandler_subscriptionController);
  id v3 = objc_msgSend(a1, sel_identifier);
  if (!v3)
  {
    sub_1C151E62C();
    id v3 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  unsigned int v4 = objc_msgSend(v2, sel_hasMutedSubscriptionForTagID_, v3);

  return v4 ^ 1;
}

uint64_t sub_1C0CA06B4(void *a1, uint64_t a2)
{
  uint64_t v74 = a2;
  uint64_t v3 = sub_1C151BBCC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA0EDC();
  uint64_t v73 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v70 = (uint64_t)&v63 - v11;
  sub_1C0CA11DC(0, (unint64_t *)&unk_1EB8642F0, MEMORY[0x1E4FACB80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v63 - v16;
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v63 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v69 = (uint64_t)&v63 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v71 = (uint64_t)&v63 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v72 = (uint64_t)&v63 - v26;
  id v27 = objc_msgSend(self, sel_mainBundle);
  id v28 = objc_msgSend(v27, sel_bundleIdentifier);

  if (!v28) {
    return 0;
  }
  id v67 = v6;
  uint64_t v68 = v17;
  uint64_t v66 = v14;
  uint64_t v29 = v9;
  uint64_t v30 = v4;
  uint64_t v31 = a1;
  uint64_t v32 = sub_1C151E62C();
  uint64_t v34 = v33;

  if (v32 != 0x6C7070612E6D6F63) {
    goto LABEL_5;
  }
  if (v34 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    char v35 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v35 & 1) == 0) {
      return result;
    }
  }
  uint64_t ObjectType = swift_getObjectType();
  if (objc_msgSend(v31, sel_isPuzzleType)) {
    return 0;
  }
  unsigned int v38 = objc_msgSend(v31, sel_isPuzzleHub);
  uint64_t v39 = v30;
  uint64_t v40 = (uint64_t)v29;
  uint64_t v65 = v20;
  uint64_t v41 = v74;
  if (v38)
  {
    uint64_t v63 = ObjectType;
    uint64_t v64 = (uint64_t)v29;
    if (v74)
    {
      uint64_t v42 = v72;
      sub_1C151B74C();
      uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
      v43(v42, 0, 1, v3);
    }
    else
    {
      uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
      uint64_t v42 = v72;
      v43(v72, 1, 1, v3);
    }
    uint64_t v44 = v70;
    uint64_t v45 = v71;
    (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))(v71, *MEMORY[0x1E4FACB48], v3);
    v43(v45, 0, 1, v3);
    uint64_t v46 = v44 + *(int *)(v73 + 48);
    sub_1C0CA0F70(v42, v44);
    sub_1C0CA0F70(v45, v46);
    uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
    if (v47(v44, 1, v3) == 1)
    {
      sub_1C0CA1004(v45);
      sub_1C0CA1004(v42);
      if (v47(v46, 1, v3) == 1)
      {
        sub_1C0CA1004(v44);
        uint64_t ObjectType = v63;
        uint64_t v40 = v64;
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v48 = v69;
      sub_1C0CA0F70(v44, v69);
      unsigned int v49 = v47(v46, 1, v3);
      uint64_t v40 = v64;
      if (v49 != 1)
      {
        uint64_t v51 = v67;
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v67, v46, v3);
        sub_1C0CA10EC();
        char v52 = sub_1C151E5CC();
        uint64_t v53 = *(void (**)(char *, uint64_t))(v39 + 8);
        v53(v51, v3);
        sub_1C0CA1004(v71);
        sub_1C0CA1004(v72);
        v53((char *)v48, v3);
        sub_1C0CA1004(v70);
        uint64_t ObjectType = v63;
        if ((v52 & 1) == 0) {
          return 0;
        }
        goto LABEL_18;
      }
      sub_1C0CA1004(v71);
      sub_1C0CA1004(v72);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v48, v3);
    }
    uint64_t v50 = v44;
LABEL_28:
    sub_1C0CA1090(v50);
    return 0;
  }
LABEL_18:
  if (!objc_msgSend(v31, sel_isMySports, v63))
  {
LABEL_30:
    if (!FCTagProviding.isSection.getter(ObjectType) && (objc_msgSend(v31, sel_isSportsEvent) & 1) == 0) {
      return objc_msgSend(v31, sel_disableBlock) ^ 1;
    }
    return 0;
  }
  if (v41)
  {
    uint64_t v54 = (uint64_t)v65;
    sub_1C151B74C();
    id v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
    v55(v54, 0, 1, v3);
  }
  else
  {
    id v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
    v55((uint64_t)v65, 1, 1, v3);
  }
  uint64_t v56 = (uint64_t)v68;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v68, *MEMORY[0x1E4FACB48], v3);
  v55(v56, 0, 1, v3);
  uint64_t v57 = v40 + *(int *)(v73 + 48);
  sub_1C0CA0F70((uint64_t)v65, v40);
  sub_1C0CA0F70(v56, v57);
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v58(v40, 1, v3) == 1)
  {
    sub_1C0CA1004(v56);
    sub_1C0CA1004((uint64_t)v65);
    if (v58(v57, 1, v3) == 1)
    {
      sub_1C0CA1004(v40);
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  uint64_t v59 = (uint64_t)v66;
  sub_1C0CA0F70(v40, (uint64_t)v66);
  if (v58(v57, 1, v3) == 1)
  {
    sub_1C0CA1004((uint64_t)v68);
    sub_1C0CA1004((uint64_t)v65);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v59, v3);
LABEL_27:
    uint64_t v50 = v40;
    goto LABEL_28;
  }
  uint64_t v60 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v67, v57, v3);
  sub_1C0CA10EC();
  char v61 = sub_1C151E5CC();
  uint64_t v62 = *(void (**)(char *, uint64_t))(v39 + 8);
  v62(v60, v3);
  sub_1C0CA1004((uint64_t)v68);
  sub_1C0CA1004((uint64_t)v65);
  v62((char *)v59, v3);
  sub_1C0CA1004(v40);
  if (v61) {
    goto LABEL_30;
  }
  return 0;
}

void sub_1C0CA0EDC()
{
  if (!qword_1EB864300)
  {
    sub_1C0CA11DC(255, (unint64_t *)&unk_1EB8642F0, MEMORY[0x1E4FACB80], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB864300);
    }
  }
}

uint64_t sub_1C0CA0F70(uint64_t a1, uint64_t a2)
{
  sub_1C0CA11DC(0, (unint64_t *)&unk_1EB8642F0, MEMORY[0x1E4FACB80], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CA1004(uint64_t a1)
{
  sub_1C0CA11DC(0, (unint64_t *)&unk_1EB8642F0, MEMORY[0x1E4FACB80], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CA1090(uint64_t a1)
{
  sub_1C0CA0EDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0CA10EC()
{
  unint64_t result = qword_1EA1A57D0;
  if (!qword_1EA1A57D0)
  {
    sub_1C151BBCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A57D0);
  }
  return result;
}

uint64_t sub_1C0CA1144()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0CA1194()
{
  return sub_1C0C9DC34(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1C0CA11A4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0CA11DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t FormatModel.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0CA12BC()
{
  uint64_t v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v0, (uint64_t)v6);
  sub_1C0C92B68();
  uint64_t v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BFEE4958((uint64_t)v6, (uint64_t)v3);
  uint64_t v9 = FeedItem.identifier.getter();
  sub_1BFEE6798((uint64_t)v3);
  sub_1C0C92BD4(v8);
  return v9;
}

uint64_t FormatModel.identifier.getter()
{
  uint64_t v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v0, (uint64_t)v6);
  sub_1C0C92B68();
  uint64_t v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BFEE4958((uint64_t)v6, (uint64_t)v3);
  uint64_t v9 = FeedItem.identifier.getter();
  sub_1BFEE6798((uint64_t)v3);
  sub_1C0C92BD4(v8);
  return v9;
}

uint64_t sub_1C0CA14B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C0CA22A0(&qword_1EB8656C0);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t type metadata accessor for FormatModel()
{
  uint64_t result = qword_1EB8656E8;
  if (!qword_1EB8656E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0CA156C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatModel.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v1, (uint64_t)v5);
  sub_1C0C92B68();
  uint64_t v7 = (uint64_t)&v5[*(int *)(v6 + 48)];
  sub_1BFEE4958((uint64_t)v5, a1);
  return sub_1C0C92BD4(v7);
}

uint64_t FormatModel.feedContextIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v0, (uint64_t)v6);
  sub_1C0C92B68();
  uint64_t v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BFEE4958((uint64_t)v6, (uint64_t)v3);
  uint64_t v9 = FeedItem.externalContentCacheIdentifier.getter();
  sub_1BFEE6798((uint64_t)v3);
  sub_1C0C92BD4(v8);
  return v9;
}

uint64_t sub_1C0CA1778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v2, (uint64_t)v5);
  sub_1C0C92B68();
  uint64_t v7 = (uint64_t)&v5[*(int *)(v6 + 48)];
  sub_1BFEE4958((uint64_t)v5, a2);
  return sub_1C0C92BD4(v7);
}

uint64_t sub_1C0CA1810()
{
  uint64_t v1 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v0, (uint64_t)v6);
  sub_1C0C92B68();
  uint64_t v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BFEE4958((uint64_t)v6, (uint64_t)v3);
  uint64_t v9 = FeedItem.externalContentCacheIdentifier.getter();
  sub_1BFEE6798((uint64_t)v3);
  sub_1C0C92BD4(v8);
  return v9;
}

uint64_t FormatModel.dragItem.getter()
{
  return sub_1C0CA1B1C((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.dragItem.getter);
}

uint64_t sub_1C0CA1924(uint64_t a1, uint64_t a2)
{
  return sub_1C0CA1BF0(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.dragItem.getter);
}

uint64_t FormatModel.rankValue.getter()
{
  return sub_1C0CA1CBC((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.rankValue.getter);
}

uint64_t sub_1C0CA1954(uint64_t a1, uint64_t a2)
{
  return sub_1C0CA1F14(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.rankValue.getter);
}

uint64_t FormatModel.isImpressionable.getter()
{
  uint64_t v1 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v0, (uint64_t)v3);
  sub_1C0C92B68();
  uint64_t v5 = &v3[*(int *)(v4 + 48)];
  long long v6 = *((_OWORD *)v5 + 1);
  v9[0] = *(_OWORD *)v5;
  v9[1] = v6;
  char v7 = FormatModelContext.isImpressionable.getter();
  sub_1C0C92BD4((uint64_t)v9);
  sub_1BFEE6798((uint64_t)v3);
  return v7 & 1;
}

uint64_t sub_1C0CA1A28(uint64_t a1)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v1, (uint64_t)v3);
  sub_1C0C92B68();
  uint64_t v5 = &v3[*(int *)(v4 + 48)];
  long long v6 = *((_OWORD *)v5 + 1);
  v9[0] = *(_OWORD *)v5;
  v9[1] = v6;
  char v7 = FormatModelContext.isImpressionable.getter();
  sub_1C0C92BD4((uint64_t)v9);
  sub_1BFEE6798((uint64_t)v3);
  return v7 & 1;
}

uint64_t FormatModel.selectionStyle.getter()
{
  return sub_1C0CA1B1C((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.selectionStyle.getter);
}

uint64_t sub_1C0CA1AEC(uint64_t a1, uint64_t a2)
{
  return sub_1C0CA1BF0(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.selectionStyle.getter);
}

uint64_t FormatModel.highlightStyle.getter()
{
  return sub_1C0CA1B1C((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.highlightStyle.getter);
}

uint64_t sub_1C0CA1B1C(void (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v1, (uint64_t)v5);
  sub_1C0C92B68();
  char v7 = &v5[*(int *)(v6 + 48)];
  long long v8 = *((_OWORD *)v7 + 1);
  v13[0] = *(_OWORD *)v7;
  v13[1] = v8;
  a1(v6, v9, v10, v11);
  sub_1C0C92BD4((uint64_t)v13);
  return sub_1BFEE6798((uint64_t)v5);
}

uint64_t sub_1C0CA1BD8(uint64_t a1, uint64_t a2)
{
  return sub_1C0CA1BF0(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.highlightStyle.getter);
}

uint64_t sub_1C0CA1BF0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v3, (uint64_t)v6);
  sub_1C0C92B68();
  long long v8 = &v6[*(int *)(v7 + 48)];
  long long v9 = *((_OWORD *)v8 + 1);
  v14[0] = *(_OWORD *)v8;
  v14[1] = v9;
  a3(v7, v10, v11, v12);
  sub_1C0C92BD4((uint64_t)v14);
  return sub_1BFEE6798((uint64_t)v6);
}

uint64_t FormatModel.contextMenu.getter()
{
  return sub_1C0CA1CBC((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.contextMenu.getter);
}

uint64_t sub_1C0CA1CBC(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v1, (uint64_t)v5);
  sub_1C0C92B68();
  uint64_t v7 = &v5[*(int *)(v6 + 48)];
  long long v8 = *((_OWORD *)v7 + 1);
  v14[0] = *(_OWORD *)v7;
  v14[1] = v8;
  uint64_t v12 = a1(v6, v9, v10, v11);
  sub_1C0C92BD4((uint64_t)v14);
  sub_1BFEE6798((uint64_t)v5);
  return v12;
}

uint64_t FormatModel.contextMenuWithContext<A, B, C, D>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1C0CA1DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, FormatModelContext.contextMenuWithContext<A, B, C, D>(_:));
}

uint64_t FormatModel.debugContextMenuWithContext<A, B, C, D>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1C0CA1DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, FormatModelContext.debugContextMenuWithContext<A, B, C, D>(_:));
}

uint64_t sub_1C0CA1DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v17 = type metadata accessor for FormatModel();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v10, (uint64_t)v19);
  sub_1C0C92B68();
  uint64_t v21 = &v19[*(int *)(v20 + 48)];
  long long v22 = *((_OWORD *)v21 + 1);
  v27[0] = *(_OWORD *)v21;
  v27[1] = v22;
  uint64_t v23 = a10(a1, a2, a3, a4, a5, a6, v25, v26, a9);
  sub_1C0C92BD4((uint64_t)v27);
  sub_1BFEE6798((uint64_t)v19);
  return v23;
}

uint64_t sub_1C0CA1EFC(uint64_t a1, uint64_t a2)
{
  return sub_1C0CA1F14(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))FormatModelContext.contextMenu.getter);
}

uint64_t sub_1C0CA1F14(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CA156C(v3, (uint64_t)v6);
  sub_1C0C92B68();
  long long v8 = &v6[*(int *)(v7 + 48)];
  long long v9 = *((_OWORD *)v8 + 1);
  v15[0] = *(_OWORD *)v8;
  v15[1] = v9;
  uint64_t v13 = a3(v7, v10, v11, v12);
  sub_1C0C92BD4((uint64_t)v15);
  sub_1BFEE6798((uint64_t)v6);
  return v13;
}

uint64_t sub_1C0CA1FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return FormatModel.contextMenuWithContext<A, B, C, D>(_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1C0CA1FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return FormatModel.debugContextMenuWithContext<A, B, C, D>(_:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t _s8NewsFeed11FormatModelO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v26 - v8;
  sub_1C0CAF028();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v12[*(int *)(v13 + 56)];
  sub_1C0CA156C(a1, (uint64_t)v12);
  sub_1C0CA156C(a2, v14);
  sub_1BFEE4958((uint64_t)v12, (uint64_t)v9);
  sub_1BFEE4958(v14, (uint64_t)v6);
  uint64_t v15 = FeedItem.identifier.getter();
  uint64_t v17 = v16;
  if (v15 == FeedItem.identifier.getter() && v17 == v18) {
    char v20 = 1;
  }
  else {
    char v20 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0C92B68();
  uint64_t v22 = *(int *)(v21 + 48);
  uint64_t v23 = (uint64_t)&v12[v22];
  uint64_t v24 = v14 + v22;
  sub_1BFEE6798((uint64_t)v6);
  sub_1BFEE6798((uint64_t)v9);
  sub_1C0C92BD4(v24);
  sub_1C0C92BD4(v23);
  return v20 & 1;
}

uint64_t sub_1C0CA219C()
{
  return sub_1C0CA22A0(&qword_1EB8656C0);
}

uint64_t sub_1C0CA21D0()
{
  return sub_1C0CA22A0(&qword_1EB8656C8);
}

uint64_t sub_1C0CA2204()
{
  return sub_1C0CA22A0(&qword_1EB8656D8);
}

uint64_t sub_1C0CA2238()
{
  return sub_1C0CA22A0(&qword_1EB8656B8);
}

uint64_t sub_1C0CA226C()
{
  return sub_1C0CA22A0(&qword_1EB8656E0);
}

uint64_t sub_1C0CA22A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatModel(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      long long v9 = a2 + 5;
      unint64_t v10 = a2[6];
      swift_bridgeObjectRetain();
      if (v10 >= 0x11)
      {
        a1[5] = *v9;
        a1[6] = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 5) = *(_OWORD *)v9;
      }
      goto LABEL_197;
    case 1u:
      uint64_t v49 = a2[1];
      *a1 = *a2;
      a1[1] = v49;
      uint64_t v50 = a2[3];
      a1[2] = a2[2];
      a1[3] = v50;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v51 = a2[6];
      a1[5] = a2[5];
      a1[6] = v51;
      uint64_t v52 = a2[8];
      a1[7] = a2[7];
      a1[8] = v52;
      uint64_t v53 = a2 + 9;
      unint64_t v54 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54 >= 0x11)
      {
        a1[9] = *v53;
        a1[10] = v54;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 9) = *(_OWORD *)v53;
      }
      goto LABEL_197;
    case 2u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v14 = v13[5];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1C151DBAC();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      *(void *)((char *)a1 + v13[6]) = *(void *)((char *)a2 + v13[6]);
      uint64_t v19 = v13[7];
      char v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(void *)char v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v13[8];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      unint64_t v25 = *((void *)v24 + 1);
      if (v25 >= 0x11) {
        goto LABEL_39;
      }
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      goto LABEL_197;
    case 3u:
      uint64_t v55 = a2[1];
      *a1 = *a2;
      a1[1] = v55;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v56 = a2[5];
      a1[4] = a2[4];
      a1[5] = v56;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      v394 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v57 = v394[10];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      *uint64_t v58 = *((unsigned char *)a2 + v57);
      v58[1] = *((unsigned char *)a2 + v57 + 1);
      uint64_t v60 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v61 = v60[6];
      long long __dst = &v58[v61];
      uint64_t v62 = &v59[v61];
      uint64_t v63 = (int *)type metadata accessor for SharedItem();
      uint64_t v388 = *((void *)v63 - 1);
      uint64_t v64 = *(unsigned int (**)(char *, uint64_t, int *))(v388 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v64(v62, 1, v63))
      {
        uint64_t v65 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v62, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        uint64_t v185 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(__dst, v62, v185);
        __dst[v63[5]] = v62[v63[5]];
        uint64_t v186 = v63[6];
        uint64_t v187 = *(void **)&v62[v186];
        *(void *)&__dst[v186] = v187;
        uint64_t v188 = v63[7];
        v398 = &v62[v188];
        v400 = &__dst[v188];
        uint64_t v189 = sub_1C1515FDC();
        v387 = *(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16);
        id v190 = v187;
        v387(v400, v398, v189);
        (*(void (**)(char *, void, uint64_t, int *))(v388 + 56))(__dst, 0, 1, v63);
      }
      v58[v60[7]] = v59[v60[7]];
      v58[v60[8]] = v59[v60[8]];
      v58[v60[9]] = v59[v60[9]];
      v58[v60[10]] = v59[v60[10]];
      uint64_t v191 = v394[11];
      uint64_t v192 = (char *)a1 + v191;
      id v193 = (char *)a2 + v191;
      uint64_t v194 = sub_1C151D2DC();
      uint64_t v195 = *(void *)(v194 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v193, v194);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
      }
      uint64_t v203 = v394[12];
      uint64_t v204 = (void *)((char *)a1 + v203);
      uint64_t v205 = (void *)((char *)a2 + v203);
      unint64_t v206 = v205[1];
      if (v206 >= 0x11)
      {
        *uint64_t v204 = *v205;
        v204[1] = v206;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
      }
      uint64_t v207 = v394[13];
      unint64_t v208 = *(void *)((char *)a2 + v207);
      if (v208 >= 2)
      {
        if (v208 == 2)
        {
          *(void *)((char *)a1 + v207) = 2;
        }
        else
        {
          *(void *)((char *)a1 + v207) = v208;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)a1 + v207) = v208;
      }
      uint64_t v247 = v394[14];
      v248 = *(void **)((char *)a2 + v247);
      *(void *)((char *)a1 + v247) = v248;
      id v249 = v248;
      goto LABEL_197;
    case 4u:
      uint64_t v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      id v27 = a2 + 3;
      unint64_t v28 = a2[4];
      if (v28 >= 0x11)
      {
        a1[3] = *v27;
        a1[4] = v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v27;
      }
      uint64_t v116 = a2[6];
      a1[5] = a2[5];
      a1[6] = v116;
      uint64_t v117 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v118 = v117[8];
      long long v119 = (char *)a1 + v118;
      uint64_t v120 = (char *)a2 + v118;
      uint64_t v121 = sub_1C1515FDC();
      uint64_t v122 = *(void *)(v121 - 8);
      uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
      swift_bridgeObjectRetain();
      v123(v119, v120, v121);
      uint64_t v124 = v117[9];
      int v125 = (char *)a1 + v124;
      uint64_t v126 = (char *)a2 + v124;
      uint64_t v397 = v121;
      __dstb = v123;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))((char *)a2 + v124, 1, v121))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
      }
      else
      {
        v123(v125, v126, v121);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v125, 0, 1, v121);
      }
      *(void *)((char *)a1 + v117[10]) = *(void *)((char *)a2 + v117[10]);
      *(void *)((char *)a1 + v117[11]) = *(void *)((char *)a2 + v117[11]);
      uint64_t v159 = v117[12];
      uint64_t v160 = (void *)((char *)a1 + v159);
      v399 = v117;
      id v161 = (void *)((char *)a2 + v159);
      uint64_t v162 = type metadata accessor for FeedHeadline(0);
      uint64_t v163 = *(void *)(v162 - 8);
      unint64_t v164 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v163 + 48);
      swift_retain();
      swift_retain();
      if (v164(v161, 1, v162))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v160, v161, *(void *)(*(void *)(v165 - 8) + 64));
        unint64_t v166 = v399;
      }
      else
      {
        uint64_t v386 = v163;
        v389 = (int *)v162;
        uint64_t v172 = v161[1];
        *uint64_t v160 = *v161;
        v160[1] = v172;
        v160[2] = v161[2];
        *((unsigned char *)v160 + 24) = *((unsigned char *)v161 + 24);
        uint64_t v173 = v161[5];
        v160[4] = v161[4];
        v160[5] = v173;
        v160[6] = v161[6];
        *((unsigned char *)v160 + 56) = *((unsigned char *)v161 + 56);
        uint64_t v174 = *(int *)(v162 + 40);
        v385 = v160;
        uint64_t v175 = (char *)v160 + v174;
        uint64_t v176 = (char *)v161 + v174;
        *uint64_t v175 = *((unsigned char *)v161 + v174);
        v175[1] = *((unsigned char *)v161 + v174 + 1);
        uint64_t v177 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v178 = *(int *)(v177 + 24);
        v383 = &v175[v178];
        v384 = (int *)v177;
        uint64_t v179 = &v176[v178];
        uint64_t v180 = (int *)type metadata accessor for SharedItem();
        uint64_t v382 = *((void *)v180 - 1);
        uint64_t v181 = *(unsigned int (**)(char *, uint64_t, int *))(v382 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v182 = v161;
        if (v181(v179, 1, v180))
        {
          uint64_t v183 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v383, v179, *(void *)(*(void *)(v183 - 8) + 64));
        }
        else
        {
          uint64_t v273 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v383, v179, v273);
          v383[v180[5]] = v179[v180[5]];
          uint64_t v274 = v180[6];
          uint64_t v275 = *(void **)&v179[v274];
          *(void *)&v383[v274] = v275;
          uint64_t v276 = v180[7];
          v277 = &v383[v276];
          v278 = &v179[v276];
          id v279 = v275;
          __dstb(v277, v278, v397);
          (*(void (**)(char *, void, uint64_t, int *))(v382 + 56))(v383, 0, 1, v180);
        }
        v175[v384[7]] = v176[v384[7]];
        v175[v384[8]] = v176[v384[8]];
        v175[v384[9]] = v176[v384[9]];
        v175[v384[10]] = v176[v384[10]];
        uint64_t v280 = v389[11];
        v281 = (char *)v385 + v280;
        v282 = (char *)v161 + v280;
        uint64_t v283 = sub_1C151D2DC();
        uint64_t v284 = *(void *)(v283 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v281, v282, *(void *)(*(void *)(v285 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v281, v282, v283);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
        }
        uint64_t v286 = v389[12];
        uint64_t v287 = (void *)((char *)v385 + v286);
        char v288 = (void *)((char *)v182 + v286);
        unint64_t v289 = v288[1];
        unint64_t v166 = v399;
        if (v289 >= 0x11)
        {
          *uint64_t v287 = *v288;
          v287[1] = v289;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v287 = *(_OWORD *)v288;
        }
        uint64_t v290 = v389[13];
        unint64_t v291 = *(void *)((char *)v182 + v290);
        if (v291 >= 2)
        {
          if (v291 == 2)
          {
            *(void *)((char *)v385 + v290) = 2;
          }
          else
          {
            *(void *)((char *)v385 + v290) = v291;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v385 + v290) = v291;
        }
        uint64_t v314 = v389[14];
        v315 = *(void **)((char *)v182 + v314);
        *(void *)((char *)v385 + v314) = v315;
        v316 = *(void (**)(void *, void, uint64_t, int *))(v386 + 56);
        id v317 = v315;
        v316(v385, 0, 1, v389);
      }
      uint64_t v318 = v166[13];
      v319 = (void *)((char *)a1 + v318);
      v320 = (void *)((char *)a2 + v318);
      uint64_t v321 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v322 = *(void *)(v321 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v322 + 48))(v320, 1, v321))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v319, v320, *(void *)(*(void *)(v323 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v325 = *v320;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v326 = v320[1];
          void *v319 = v325;
          v319[1] = v326;
          uint64_t v327 = type metadata accessor for GenericDataVisualization();
          uint64_t v328 = *(int *)(v327 + 20);
          v329 = (char *)v319 + v328;
          v330 = (char *)v320 + v328;
          swift_bridgeObjectRetain();
          v331 = v330;
          unint64_t v166 = v399;
          __dstb(v329, v331, v397);
          *(void *)((char *)v319 + *(int *)(v327 + 24)) = *(uint64_t *)((char *)v320 + *(int *)(v327 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v319 = v325;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v322 + 56))(v319, 0, 1, v321);
      }
      *((unsigned char *)a1 + v166[14]) = *((unsigned char *)a2 + v166[14]);
      goto LABEL_197;
    case 5u:
      uint64_t v66 = (void *)*a2;
      uint64_t v67 = a2[1];
      *a1 = *a2;
      a1[1] = v67;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v68 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v68;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v69 = a2[10];
      id v70 = v66;
      swift_bridgeObjectRetain();
      id v71 = v68;
      if (v69 == 1)
      {
        long long v72 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v72;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v69;
        uint64_t v129 = a2[12];
        a1[11] = a2[11];
        a1[12] = v129;
        uint64_t v131 = (void *)a2[13];
        uint64_t v130 = a2[14];
        a1[13] = v131;
        a1[14] = v130;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v132 = v131;
      }
      uint64_t v133 = a2 + 15;
      unint64_t v134 = a2[16];
      if (v134 >= 0x11)
      {
        a1[15] = *v133;
        a1[16] = v134;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v133;
      }
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      goto LABEL_197;
    case 6u:
      int v73 = *((unsigned __int8 *)a2 + 281);
      if (v73 == 2)
      {
        uint64_t v215 = a2[1];
        *a1 = *a2;
        a1[1] = v215;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v216 = a2[7];
        a1[6] = a2[6];
        a1[7] = v216;
        uint64_t v217 = a2[9];
        a1[8] = a2[8];
        a1[9] = v217;
        uint64_t v218 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v218 != 1)
        {
          a1[10] = a2[10];
          a1[11] = v218;
          uint64_t v257 = a2[15];
          swift_bridgeObjectRetain();
          if (v257)
          {
            uint64_t v258 = a2[16];
            a1[15] = v257;
            a1[16] = v258;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v257 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v257);
            a1[17] = a2[17];
          }
          else
          {
            long long v351 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v351;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          goto LABEL_170;
        }
        uint64_t v219 = a1 + 10;
        uint64_t v220 = a2 + 10;
        long long v221 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v221;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      }
      else
      {
        if (v73 != 1)
        {
          v222 = (void *)*a2;
          uint64_t v223 = a2[1];
          *a1 = *a2;
          a1[1] = v223;
          a1[2] = a2[2];
          *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v224 = (void *)a2[7];
          a1[6] = a2[6];
          a1[7] = v224;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v225 = a2[10];
          id v226 = v222;
          swift_bridgeObjectRetain();
          id v227 = v224;
          if (v225 == 1)
          {
            long long v228 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 11) = v228;
            *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = v225;
            uint64_t v259 = a2[12];
            a1[11] = a2[11];
            a1[12] = v259;
            v261 = (void *)a2[13];
            uint64_t v260 = a2[14];
            a1[13] = v261;
            a1[14] = v260;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v262 = v261;
          }
          uint64_t v263 = a2 + 15;
          unint64_t v264 = a2[16];
          if (v264 >= 0x11)
          {
            a1[15] = *v263;
            a1[16] = v264;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)v263;
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          goto LABEL_170;
        }
        uint64_t v74 = (void *)*a2;
        uint64_t v75 = a2[1];
        *a1 = *a2;
        a1[1] = v75;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v76 = (void *)a2[7];
        a1[6] = a2[6];
        a1[7] = v76;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v77 = a2[10];
        id v78 = v74;
        swift_bridgeObjectRetain();
        id v79 = v76;
        if (v77 == 1)
        {
          long long v80 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 11) = v80;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = v77;
          uint64_t v251 = a2[12];
          a1[11] = a2[11];
          a1[12] = v251;
          uint64_t v253 = (void *)a2[13];
          uint64_t v252 = a2[14];
          a1[13] = v253;
          a1[14] = v252;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v254 = v253;
        }
        long long v255 = a2 + 15;
        unint64_t v256 = a2[16];
        if (v256 >= 0x11)
        {
          a1[15] = *v255;
          a1[16] = v256;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v255;
        }
        uint64_t v220 = a2 + 18;
        uint64_t v265 = (void *)a2[18];
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        if (v265)
        {
          uint64_t v266 = a2[19];
          uint64_t v267 = a2[20];
          a1[18] = v265;
          a1[19] = v266;
          a1[20] = v267;
          *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
          a1[22] = a2[22];
          *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
          uint64_t v268 = (void *)a2[25];
          a1[24] = a2[24];
          a1[25] = v268;
          *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
          uint64_t v269 = a2[28];
          id v270 = v265;
          swift_bridgeObjectRetain();
          id v271 = v268;
          if (v269 == 1)
          {
            long long v272 = *(_OWORD *)(a2 + 29);
            *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
            *(_OWORD *)(a1 + 29) = v272;
            *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
          }
          else
          {
            a1[27] = a2[27];
            a1[28] = v269;
            uint64_t v296 = a2[30];
            a1[29] = a2[29];
            a1[30] = v296;
            long long v298 = (void *)a2[31];
            uint64_t v297 = a2[32];
            a1[31] = v298;
            a1[32] = v297;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v299 = v298;
          }
          long long v300 = a2 + 33;
          unint64_t v301 = a2[34];
          if (v301 >= 0x11)
          {
            a1[33] = *v300;
            a1[34] = v301;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 33) = *(_OWORD *)v300;
          }
          *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_170:
          *((unsigned char *)a1 + 281) = v73;
          goto LABEL_197;
        }
        uint64_t v219 = a1 + 18;
        long long v292 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v292;
        *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
        long long v293 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v293;
        long long v294 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v294;
      }
      long long v295 = v220[1];
      *uint64_t v219 = *v220;
      v219[1] = v295;
      goto LABEL_170;
    case 7u:
      uint64_t v81 = a2[1];
      *a1 = *a2;
      a1[1] = v81;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v82 = a2[7];
      a1[6] = a2[6];
      a1[7] = v82;
      uint64_t v83 = a2[9];
      a1[8] = a2[8];
      a1[9] = v83;
      uint64_t v84 = a2[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v84 == 1)
      {
        long long v85 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v85;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        long long v86 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v86;
      }
      else
      {
        a1[10] = a2[10];
        a1[11] = v84;
        uint64_t v135 = a2[15];
        swift_bridgeObjectRetain();
        if (v135)
        {
          uint64_t v136 = a2[16];
          a1[15] = v135;
          a1[16] = v136;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v135 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v135);
          a1[17] = a2[17];
        }
        else
        {
          long long v250 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v250;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      }
      goto LABEL_197;
    case 8u:
      uint64_t v87 = a2[1];
      *a1 = *a2;
      a1[1] = v87;
      uint64_t v88 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v89 = (void *)((char *)a1 + v88);
      id v90 = (char *)a2 + v88;
      uint64_t v91 = *(void *)((char *)a2 + v88 + 8);
      *uint64_t v89 = *(void *)((char *)a2 + v88);
      v89[1] = v91;
      uint64_t v92 = *(void *)((char *)a2 + v88 + 24);
      v89[2] = *(void *)((char *)a2 + v88 + 16);
      v89[3] = v92;
      uint64_t v93 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v94 = *(int *)(v93 + 24);
      v395 = (char *)v89 + v94;
      uint64_t v396 = v93;
      id v95 = &v90[v94];
      uint64_t v96 = type metadata accessor for FormatCustomItem.Action();
      __dsta = *(void **)(v96 - 8);
      uint64_t v97 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v97(v95, 1, v96))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v395, v95, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        uint64_t v197 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v395, v95, v197);
        ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v395, 0, 1, v96);
      }
      *(void *)((char *)v89 + *(int *)(v396 + 28)) = *(void *)&v90[*(int *)(v396 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_197;
    case 9u:
      uint64_t v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      uint64_t v30 = a2[3];
      a1[2] = a2[2];
      a1[3] = v30;
      uint64_t v31 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31)
      {
        uint64_t v32 = a2[8];
        a1[7] = v31;
        a1[8] = v32;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v31);
      }
      else
      {
        long long v154 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v154;
        a1[8] = a2[8];
      }
      uint64_t v155 = a1 + 9;
      uint64_t v156 = a2 + 9;
      uint64_t v157 = a2[12];
      if (v157)
      {
        uint64_t v158 = a2[13];
        a1[12] = v157;
        a1[13] = v158;
        (**(void (***)(_OWORD *, _OWORD *))(v157 - 8))(v155, v156);
      }
      else
      {
        long long v167 = *(_OWORD *)(a2 + 11);
        *uint64_t v155 = *v156;
        *(_OWORD *)(a1 + 11) = v167;
        a1[13] = a2[13];
      }
      unint64_t v168 = a1 + 14;
      uint64_t v169 = a2 + 14;
      uint64_t v170 = a2[17];
      if (v170)
      {
        uint64_t v171 = a2[18];
        a1[17] = v170;
        a1[18] = v171;
        (**(void (***)(_OWORD *, _OWORD *))(v170 - 8))(v168, v169);
      }
      else
      {
        long long v184 = *((_OWORD *)a2 + 8);
        *unint64_t v168 = *v169;
        *((_OWORD *)a1 + 8) = v184;
        a1[18] = a2[18];
      }
      goto LABEL_197;
    case 0xAu:
      uint64_t v99 = a2[1];
      *a1 = *a2;
      a1[1] = v99;
      uint64_t v100 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v101 = v100[5];
      id v102 = (char *)a1 + v101;
      uint64_t v103 = (char *)a2 + v101;
      uint64_t v104 = sub_1C151959C();
      uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
      swift_bridgeObjectRetain();
      v105(v102, v103, v104);
      *(void *)((char *)a1 + v100[6]) = *(void *)((char *)a2 + v100[6]);
      uint64_t v106 = v100[7];
      uint64_t v107 = (char *)a1 + v106;
      uint64_t v108 = (char *)a2 + v106;
      *(void *)uint64_t v107 = *(void *)v108;
      v107[8] = v108[8];
      uint64_t v109 = v100[8];
      uint64_t v23 = (char *)a1 + v109;
      uint64_t v24 = (char *)a2 + v109;
      unint64_t v25 = *((void *)v24 + 1);
      if (v25 >= 0x11)
      {
LABEL_39:
        *(void *)uint64_t v23 = *(void *)v24;
        *((void *)v23 + 1) = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      }
      goto LABEL_197;
    case 0xBu:
      *a1 = *a2;
      swift_retain();
      goto LABEL_197;
    case 0xCu:
      uint64_t v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      uint64_t v34 = a2[3];
      a1[2] = a2[2];
      a1[3] = v34;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_197;
    case 0xDu:
      uint64_t v110 = a2[1];
      *a1 = *a2;
      a1[1] = v110;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v111 = a2 + 3;
      unint64_t v112 = a2[4];
      if (v112 >= 0x11)
      {
        a1[3] = *v111;
        a1[4] = v112;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v111;
      }
      uint64_t v137 = a2[6];
      a1[5] = a2[5];
      a1[6] = v137;
      uint64_t v138 = (void *)a2[8];
      a1[7] = a2[7];
      a1[8] = v138;
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      a1[10] = a2[10];
      uint64_t v139 = a2[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v140 = v138;
      swift_bridgeObjectRetain();
      if (v139)
      {
        uint64_t v141 = a2[15];
        a1[14] = v139;
        a1[15] = v141;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v139 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v139);
      }
      else
      {
        long long v198 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 13) = v198;
        a1[15] = a2[15];
      }
      unint64_t v199 = a1 + 16;
      uint64_t v200 = a2 + 16;
      uint64_t v201 = a2[19];
      if (v201)
      {
        uint64_t v202 = a2[20];
        a1[19] = v201;
        a1[20] = v202;
        (**(void (***)(_OWORD *, _OWORD *))(v201 - 8))(v199, v200);
      }
      else
      {
        long long v209 = *((_OWORD *)a2 + 9);
        *unint64_t v199 = *v200;
        *((_OWORD *)a1 + 9) = v209;
        a1[20] = a2[20];
      }
      uint64_t v210 = a1 + 21;
      uint64_t v211 = a2 + 21;
      uint64_t v212 = a2[24];
      if (v212)
      {
        uint64_t v213 = a2[25];
        a1[24] = v212;
        a1[25] = v213;
        (**(void (***)(_OWORD *, _OWORD *))(v212 - 8))(v210, v211);
      }
      else
      {
        long long v214 = *(_OWORD *)(a2 + 23);
        _OWORD *v210 = *v211;
        *(_OWORD *)(a1 + 23) = v214;
        a1[25] = a2[25];
      }
      goto LABEL_197;
    case 0xEu:
      uint64_t v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      id v36 = a2 + 3;
      unint64_t v37 = a2[4];
      if (v37 >= 0x11)
      {
        a1[3] = *v36;
        a1[4] = v37;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v36;
      }
      uint64_t v128 = a2[6];
      a1[5] = a2[5];
      a1[6] = v128;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_197;
    case 0xFu:
      uint64_t v113 = a2[1];
      *a1 = *a2;
      a1[1] = v113;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      int v114 = a2 + 3;
      unint64_t v115 = a2[4];
      if (v115 >= 0x11)
      {
        a1[3] = *v114;
        a1[4] = v115;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v114;
      }
      break;
    case 0x10u:
      uint64_t v38 = a2[1];
      *a1 = *a2;
      a1[1] = v38;
      uint64_t v39 = a2[3];
      a1[2] = a2[2];
      a1[3] = v39;
      uint64_t v40 = a2[5];
      a1[4] = a2[4];
      a1[5] = v40;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
      uint64_t v41 = a2[10];
      a1[9] = a2[9];
      a1[10] = v41;
      uint64_t v42 = a2[12];
      a1[11] = a2[11];
      a1[12] = v42;
      a1[13] = a2[13];
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      uint64_t v43 = a2[16];
      a1[15] = a2[15];
      a1[16] = v43;
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      uint64_t v44 = a2[19];
      a1[18] = a2[18];
      a1[19] = v44;
      uint64_t v45 = a2[21];
      a1[20] = a2[20];
      a1[21] = v45;
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      a1[22] = a2[22];
      uint64_t v46 = a2[25];
      a1[24] = a2[24];
      a1[25] = v46;
      *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
      uint64_t v47 = a2[27];
      a1[26] = a2[26];
      a1[27] = v47;
      v393 = a2 + 29;
      unint64_t v48 = a2[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48 >= 0x11)
      {
        a1[29] = *v393;
        a1[30] = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 29) = *(_OWORD *)v393;
      }
      goto LABEL_197;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_198;
  }
  uint64_t v142 = a2[6];
  a1[5] = a2[5];
  a1[6] = v142;
  uint64_t v143 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v144 = (char *)a1 + v143;
  uint64_t v145 = (char *)a2 + v143;
  *(void *)((char *)a1 + v143) = *(void *)((char *)a2 + v143);
  uint64_t v146 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v147 = &v144[v146];
  uint64_t v148 = &v145[v146];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v233 = type metadata accessor for PuzzleStatisticValue(0);
      int v234 = swift_getEnumCaseMultiPayload();
      if (v234 == 5)
      {
        uint64_t v235 = type metadata accessor for PuzzleStreak();
        uint64_t v236 = *(void *)(v235 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v148, 1, v235))
        {
LABEL_107:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v147, v148, *(void *)(*(void *)(v237 - 8) + 64));
          goto LABEL_177;
        }
      }
      else
      {
        if (v234 != 4)
        {
          memcpy(v147, v148, *(void *)(*(void *)(v233 - 8) + 64));
          goto LABEL_178;
        }
        uint64_t v235 = type metadata accessor for PuzzleStreak();
        uint64_t v236 = *(void *)(v235 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v148, 1, v235)) {
          goto LABEL_107;
        }
      }
      uint64_t v359 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 16))(v147, v148, v359);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v236 + 56))(v147, 0, 1, v235);
LABEL_177:
      swift_storeEnumTagMultiPayload();
LABEL_178:
      v360 = v147;
      uint64_t v361 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v362 = *(int *)(v361 + 20);
      v403 = v360;
      v363 = (char *)v360 + v362;
      v364 = &v148[v362];
      int v365 = swift_getEnumCaseMultiPayload();
      if (v365 == 5)
      {
        uint64_t v366 = type metadata accessor for PuzzleStreak();
        uint64_t v367 = *(void *)(v366 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v364, 1, v366))
        {
LABEL_183:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v363, v364, *(void *)(*(void *)(v368 - 8) + 64));
          goto LABEL_186;
        }
      }
      else
      {
        if (v365 != 4)
        {
          memcpy(v363, v364, *(void *)(*(void *)(v233 - 8) + 64));
          goto LABEL_187;
        }
        uint64_t v366 = type metadata accessor for PuzzleStreak();
        uint64_t v367 = *(void *)(v366 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v364, 1, v366)) {
          goto LABEL_183;
        }
      }
      uint64_t v369 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v369 - 8) + 16))(v363, v364, v369);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v367 + 56))(v363, 0, 1, v366);
LABEL_186:
      swift_storeEnumTagMultiPayload();
LABEL_187:
      uint64_t v370 = *(int *)(v361 + 24);
      v371 = (char *)v403 + v370;
      v372 = &v148[v370];
      int v373 = swift_getEnumCaseMultiPayload();
      if (v373 == 5)
      {
        uint64_t v374 = type metadata accessor for PuzzleStreak();
        uint64_t v375 = *(void *)(v374 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v375 + 48))(v372, 1, v374))
        {
LABEL_192:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v371, v372, *(void *)(*(void *)(v376 - 8) + 64));
          goto LABEL_195;
        }
      }
      else
      {
        if (v373 != 4)
        {
          memcpy(v371, v372, *(void *)(*(void *)(v233 - 8) + 64));
          goto LABEL_196;
        }
        uint64_t v374 = type metadata accessor for PuzzleStreak();
        uint64_t v375 = *(void *)(v374 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v375 + 48))(v372, 1, v374)) {
          goto LABEL_192;
        }
      }
      uint64_t v377 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v377 - 8) + 16))(v371, v372, v377);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v375 + 56))(v371, 0, 1, v374);
      goto LABEL_195;
    case 2u:
      uint64_t v229 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v230 = *((void *)v229 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v230 + 48))(v148, 1, v229))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        size_t v232 = *(void *)(*(void *)(v231 - 8) + 64);
        goto LABEL_165;
      }
      uint64_t v402 = v230;
      uint64_t v302 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(v147, v148, v302);
      v303 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v304 = v303[5];
      v305 = &v147[v304];
      v306 = &v148[v304];
      uint64_t v307 = *((void *)v306 + 1);
      *(void *)v305 = *(void *)v306;
      *((void *)v305 + 1) = v307;
      uint64_t v308 = v303[6];
      v309 = &v147[v308];
      v310 = &v148[v308];
      uint64_t v311 = *((void *)v310 + 1);
      *(void *)v309 = *(void *)v310;
      *((void *)v309 + 1) = v311;
      v312 = (uint64_t *)(v310 + 16);
      unint64_t v313 = *((void *)v310 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v313 >> 60 == 15)
      {
        *((_OWORD *)v309 + 1) = *(_OWORD *)v312;
      }
      else
      {
        uint64_t v352 = *v312;
        sub_1BFE95820(*v312, v313);
        *((void *)v309 + 2) = v352;
        *((void *)v309 + 3) = v313;
      }
      *(void *)&v147[v303[7]] = *(void *)&v148[v303[7]];
      *(void *)&v147[v303[8]] = *(void *)&v148[v303[8]];
      *(void *)&v147[v229[5]] = *(void *)&v148[v229[5]];
      *(void *)&v147[v229[6]] = *(void *)&v148[v229[6]];
      uint64_t v353 = v229[7];
      v354 = &v147[v353];
      v355 = &v148[v353];
      uint64_t v356 = *((void *)v355 + 1);
      *(void *)v354 = *(void *)v355;
      *((void *)v354 + 1) = v356;
      v357 = *(void (**)(char *, void, uint64_t, int *))(v402 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v357(v147, 0, 1, v229);
      goto LABEL_196;
    case 3u:
      uint64_t v238 = *((void *)v148 + 1);
      *(void *)uint64_t v147 = *(void *)v148;
      *((void *)v147 + 1) = v238;
      v147[16] = v148[16];
      uint64_t v239 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v240 = v239[6];
      v401 = v147;
      long long v241 = &v147[v240];
      uint64_t v242 = &v148[v240];
      uint64_t v243 = type metadata accessor for PuzzleStreak();
      uint64_t v244 = *(void *)(v243 - 8);
      uint64_t v245 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v244 + 48);
      if (v245(v242, 1, v243))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v241, v242, *(void *)(*(void *)(v246 - 8) + 64));
      }
      else
      {
        uint64_t v332 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 16))(v241, v242, v332);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v241, 0, 1, v243);
      }
      v333 = v245;
      uint64_t v334 = v239[7];
      v335 = (char *)v401 + v334;
      v336 = &v148[v334];
      if (v333(&v148[v334], 1, v243))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v335, v336, *(void *)(*(void *)(v337 - 8) + 64));
      }
      else
      {
        uint64_t v338 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 16))(v335, v336, v338);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v244 + 56))(v335, 0, 1, v243);
      }
      uint64_t v339 = v239[8];
      v340 = (_OWORD *)((char *)v401 + v339);
      v341 = &v148[v339];
      long long v342 = *((_OWORD *)v341 + 1);
      _OWORD *v340 = *(_OWORD *)v341;
      v340[1] = v342;
      *(_OWORD *)((char *)v340 + 25) = *(_OWORD *)(v341 + 25);
      uint64_t v343 = v239[9];
      v344 = (_OWORD *)((char *)v401 + v343);
      v345 = &v148[v343];
      *(_OWORD *)((char *)v344 + 25) = *(_OWORD *)(v345 + 25);
      long long v346 = *((_OWORD *)v345 + 1);
      _OWORD *v344 = *(_OWORD *)v345;
      v344[1] = v346;
      uint64_t v347 = v239[10];
      v348 = (_OWORD *)((char *)v401 + v347);
      v349 = &v148[v347];
      long long v350 = *((_OWORD *)v349 + 1);
      _OWORD *v348 = *(_OWORD *)v349;
      v348[1] = v350;
      *(_OWORD *)((char *)v348 + 25) = *(_OWORD *)(v349 + 25);
      goto LABEL_196;
    default:
      uint64_t v149 = type metadata accessor for PuzzleStatisticValue(0);
      int v150 = swift_getEnumCaseMultiPayload();
      if (v150 == 5)
      {
        uint64_t v151 = type metadata accessor for PuzzleStreak();
        uint64_t v152 = *(void *)(v151 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v148, 1, v151)) {
          goto LABEL_62;
        }
      }
      else
      {
        if (v150 != 4)
        {
          size_t v232 = *(void *)(*(void *)(v149 - 8) + 64);
LABEL_165:
          memcpy(v147, v148, v232);
          goto LABEL_196;
        }
        uint64_t v151 = type metadata accessor for PuzzleStreak();
        uint64_t v152 = *(void *)(v151 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v148, 1, v151))
        {
LABEL_62:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v147, v148, *(void *)(*(void *)(v153 - 8) + 64));
          goto LABEL_195;
        }
      }
      uint64_t v358 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16))(v147, v148, v358);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v152 + 56))(v147, 0, 1, v151);
LABEL_195:
      swift_storeEnumTagMultiPayload();
LABEL_196:
      swift_storeEnumTagMultiPayload();
LABEL_197:
      swift_storeEnumTagMultiPayload();
LABEL_198:
      sub_1C0C92B68();
      uint64_t v379 = *(int *)(v378 + 48);
      uint64_t v380 = *(void *)((char *)a2 + v379 + 24);
      *(void *)((char *)a1 + v379 + 24) = v380;
      (**(void (***)(void))(v380 - 8))();
      return a1;
  }
}

uint64_t destroy for FormatModel(uint64_t a1)
{
  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 48) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FeedBannerAd();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151DBAC();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      int v5 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v6 = a1 + v5[10];
      uint64_t v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v8 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        uint64_t v9 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);

        uint64_t v10 = v7 + *(int *)(v8 + 28);
        uint64_t v11 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = a1 + v5[11];
      uint64_t v13 = sub_1C151D2DC();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
      if (*(void *)(a1 + v5[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + v5[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }

      goto LABEL_73;
    case 4u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v16 = a1 + v15[8];
      uint64_t v17 = sub_1C1515FDC();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v19(v16, v17);
      uint64_t v20 = a1 + v15[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17)) {
        v19(v20, v17);
      }
      swift_release();
      swift_release();
      uint64_t v21 = a1 + v15[12];
      uint64_t v22 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v22 - 1) + 48))(v21, 1, v22))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v23 = v22[10];
        uint64_t v24 = v21 + v23 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v25 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25))
        {
          uint64_t v26 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);

          v19(v24 + *(int *)(v25 + 28), v17);
        }
        uint64_t v27 = v21 + v22[11];
        uint64_t v28 = sub_1C151D2DC();
        uint64_t v29 = *(void *)(v28 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
        }
        if (*(void *)(v21 + v22[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v21 + v22[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v30 = a1 + v15[13];
      uint64_t v31 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31)) {
        goto LABEL_73;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_55;
      }
      swift_bridgeObjectRelease();
      uint64_t v32 = type metadata accessor for GenericDataVisualization();
      v19(v30 + *(int *)(v32 + 20), v17);
      goto LABEL_72;
    case 5u:
      goto LABEL_36;
    case 6u:
      int v33 = *(unsigned __int8 *)(a1 + 281);
      if (v33 == 2) {
        goto LABEL_40;
      }
      if (v33 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 128) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v42 = *(void **)(a1 + 144);
        if (!v42) {
          goto LABEL_73;
        }

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 272) < 0x11uLL) {
          goto LABEL_73;
        }
LABEL_72:
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      if (*(unsigned char *)(a1 + 281)) {
        goto LABEL_73;
      }
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 128) >= 0x11uLL) {
        goto LABEL_72;
      }
LABEL_73:
      sub_1C0C92B68();
      return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v40 + 48));
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 120)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 96);
        }
      }
      goto LABEL_73;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v34 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v34 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v36 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
      {
        uint64_t v37 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v35, v37);
      }
      goto LABEL_72;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      }
      if (*(void *)(a1 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      }
      if (*(void *)(a1 + 136)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 112);
      }
      goto LABEL_73;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FeedEngagementBanner();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151959C();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      if (*(void *)(a1 + *(int *)(v2 + 32) + 8) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_73;
    case 0xCu:
      goto LABEL_66;
    case 0xDu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      }
      if (*(void *)(a1 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      }
      if (*(void *)(a1 + 192)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 168);
      }
      goto LABEL_73;
    case 0xEu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_66:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_73;
    case 0xFu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v39 = v38 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_92;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v44 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v39, 1, v44))
            {
              uint64_t v45 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v39, v45);
            }
          }
          uint64_t v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v47 = v39 + *(int *)(v46 + 20);
          int v48 = swift_getEnumCaseMultiPayload();
          if (v48 == 5 || v48 == 4)
          {
            uint64_t v49 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v47, 1, v49))
            {
              uint64_t v50 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v47, v50);
            }
          }
          v39 += *(int *)(v46 + 24);
LABEL_92:
          int v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 5 || v51 == 4)
          {
            uint64_t v52 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v39, 1, v52))goto LABEL_103; {
          }
            }
          goto LABEL_73;
        case 2u:
          uint64_t v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v39, 1, v53)) {
            goto LABEL_73;
          }
          uint64_t v54 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v39, v54);
          uint64_t v55 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v56 = v39 + *(int *)(v55 + 24);
          swift_bridgeObjectRelease();
          unint64_t v57 = *(void *)(v56 + 24);
          if (v57 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v56 + 16), v57);
          }
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 3u:
          uint64_t v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v59 = v39 + *(int *)(v58 + 24);
          uint64_t v60 = type metadata accessor for PuzzleStreak();
          uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48);
          if (!v61(v59, 1, v60))
          {
            uint64_t v62 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v59, v62);
          }
          v39 += *(int *)(v58 + 28);
          if (!v61(v39, 1, v60))
          {
LABEL_103:
            uint64_t v63 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v39, v63);
          }
          goto LABEL_73;
        default:
          goto LABEL_73;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 240) >= 0x11uLL) {
        goto LABEL_72;
      }
      goto LABEL_73;
    default:
      goto LABEL_73;
  }
}

void *initializeWithCopy for FormatModel(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v7 = a2 + 5;
      unint64_t v8 = a2[6];
      swift_bridgeObjectRetain();
      if (v8 >= 0x11)
      {
        a1[5] = *v7;
        a1[6] = v8;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 5) = *(_OWORD *)v7;
      }
      goto LABEL_195;
    case 1u:
      uint64_t v46 = a2[1];
      *a1 = *a2;
      a1[1] = v46;
      uint64_t v47 = a2[3];
      a1[2] = a2[2];
      a1[3] = v47;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v48 = a2[6];
      a1[5] = a2[5];
      a1[6] = v48;
      uint64_t v49 = a2[8];
      a1[7] = a2[7];
      a1[8] = v49;
      uint64_t v50 = a2 + 9;
      unint64_t v51 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v51 >= 0x11)
      {
        a1[9] = *v50;
        a1[10] = v51;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 9) = *(_OWORD *)v50;
      }
      goto LABEL_195;
    case 2u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1C151DBAC();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      *(void *)((char *)a1 + v10[6]) = *(void *)((char *)a2 + v10[6]);
      uint64_t v16 = v10[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v10[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      unint64_t v22 = *((void *)v21 + 1);
      if (v22 >= 0x11) {
        goto LABEL_37;
      }
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      goto LABEL_195;
    case 3u:
      uint64_t v52 = a2[1];
      *a1 = *a2;
      a1[1] = v52;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v53 = a2[5];
      a1[4] = a2[4];
      a1[5] = v53;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      v391 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v54 = v391[10];
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      *uint64_t v55 = *((unsigned char *)a2 + v54);
      v55[1] = *((unsigned char *)a2 + v54 + 1);
      unint64_t v57 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v58 = v57[6];
      long long __dst = &v55[v58];
      uint64_t v59 = &v56[v58];
      uint64_t v60 = (int *)type metadata accessor for SharedItem();
      uint64_t v385 = *((void *)v60 - 1);
      uint64_t v61 = *(unsigned int (**)(char *, uint64_t, int *))(v385 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v61(v59, 1, v60))
      {
        uint64_t v62 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v59, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        uint64_t v182 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(__dst, v59, v182);
        __dst[v60[5]] = v59[v60[5]];
        uint64_t v183 = v60[6];
        long long v184 = *(void **)&v59[v183];
        *(void *)&__dst[v183] = v184;
        uint64_t v185 = v60[7];
        v395 = &v59[v185];
        uint64_t v397 = &__dst[v185];
        uint64_t v186 = sub_1C1515FDC();
        v384 = *(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16);
        id v187 = v184;
        v384(v397, v395, v186);
        (*(void (**)(char *, void, uint64_t, int *))(v385 + 56))(__dst, 0, 1, v60);
      }
      v55[v57[7]] = v56[v57[7]];
      v55[v57[8]] = v56[v57[8]];
      v55[v57[9]] = v56[v57[9]];
      v55[v57[10]] = v56[v57[10]];
      uint64_t v188 = v391[11];
      uint64_t v189 = (char *)a1 + v188;
      id v190 = (char *)a2 + v188;
      uint64_t v191 = sub_1C151D2DC();
      uint64_t v192 = *(void *)(v191 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v190, 1, v191))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v189, v190, *(void *)(*(void *)(v193 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v189, v190, v191);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v192 + 56))(v189, 0, 1, v191);
      }
      uint64_t v200 = v391[12];
      uint64_t v201 = (void *)((char *)a1 + v200);
      uint64_t v202 = (void *)((char *)a2 + v200);
      unint64_t v203 = v202[1];
      if (v203 >= 0x11)
      {
        void *v201 = *v202;
        v201[1] = v203;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v201 = *(_OWORD *)v202;
      }
      uint64_t v204 = v391[13];
      unint64_t v205 = *(void *)((char *)a2 + v204);
      if (v205 >= 2)
      {
        if (v205 == 2)
        {
          *(void *)((char *)a1 + v204) = 2;
        }
        else
        {
          *(void *)((char *)a1 + v204) = v205;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)a1 + v204) = v205;
      }
      uint64_t v244 = v391[14];
      uint64_t v245 = *(void **)((char *)a2 + v244);
      *(void *)((char *)a1 + v244) = v245;
      id v246 = v245;
      goto LABEL_195;
    case 4u:
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v24 = a2 + 3;
      unint64_t v25 = a2[4];
      if (v25 >= 0x11)
      {
        a1[3] = *v24;
        a1[4] = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v24;
      }
      uint64_t v113 = a2[6];
      a1[5] = a2[5];
      a1[6] = v113;
      int v114 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v115 = v114[8];
      uint64_t v116 = (char *)a1 + v115;
      uint64_t v117 = (char *)a2 + v115;
      uint64_t v118 = sub_1C1515FDC();
      uint64_t v119 = *(void *)(v118 - 8);
      uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
      swift_bridgeObjectRetain();
      v120(v116, v117, v118);
      uint64_t v121 = v114[9];
      uint64_t v122 = (char *)a1 + v121;
      uint64_t v123 = (char *)a2 + v121;
      uint64_t v394 = v118;
      __dstb = v120;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))((char *)a2 + v121, 1, v118))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        v120(v122, v123, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v122, 0, 1, v118);
      }
      *(void *)((char *)a1 + v114[10]) = *(void *)((char *)a2 + v114[10]);
      *(void *)((char *)a1 + v114[11]) = *(void *)((char *)a2 + v114[11]);
      uint64_t v156 = v114[12];
      uint64_t v157 = (void *)((char *)a1 + v156);
      uint64_t v396 = v114;
      uint64_t v158 = (void *)((char *)a2 + v156);
      uint64_t v159 = type metadata accessor for FeedHeadline(0);
      uint64_t v160 = *(void *)(v159 - 8);
      id v161 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v160 + 48);
      swift_retain();
      swift_retain();
      if (v161(v158, 1, v159))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v157, v158, *(void *)(*(void *)(v162 - 8) + 64));
        uint64_t v163 = v396;
      }
      else
      {
        uint64_t v383 = v160;
        uint64_t v386 = (int *)v159;
        uint64_t v169 = v158[1];
        *uint64_t v157 = *v158;
        v157[1] = v169;
        v157[2] = v158[2];
        *((unsigned char *)v157 + 24) = *((unsigned char *)v158 + 24);
        uint64_t v170 = v158[5];
        v157[4] = v158[4];
        v157[5] = v170;
        v157[6] = v158[6];
        *((unsigned char *)v157 + 56) = *((unsigned char *)v158 + 56);
        uint64_t v171 = *(int *)(v159 + 40);
        uint64_t v382 = v157;
        uint64_t v172 = (char *)v157 + v171;
        uint64_t v173 = (char *)v158 + v171;
        *uint64_t v172 = *((unsigned char *)v158 + v171);
        v172[1] = *((unsigned char *)v158 + v171 + 1);
        uint64_t v174 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v175 = *(int *)(v174 + 24);
        uint64_t v380 = &v172[v175];
        v381 = (int *)v174;
        uint64_t v176 = &v173[v175];
        uint64_t v177 = (int *)type metadata accessor for SharedItem();
        uint64_t v379 = *((void *)v177 - 1);
        uint64_t v178 = *(unsigned int (**)(char *, uint64_t, int *))(v379 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v179 = v158;
        if (v178(v176, 1, v177))
        {
          uint64_t v180 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v380, v176, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          uint64_t v270 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v380, v176, v270);
          v380[v177[5]] = v176[v177[5]];
          uint64_t v271 = v177[6];
          long long v272 = *(void **)&v176[v271];
          *(void *)&v380[v271] = v272;
          uint64_t v273 = v177[7];
          uint64_t v274 = &v380[v273];
          uint64_t v275 = &v176[v273];
          id v276 = v272;
          __dstb(v274, v275, v394);
          (*(void (**)(char *, void, uint64_t, int *))(v379 + 56))(v380, 0, 1, v177);
        }
        v172[v381[7]] = v173[v381[7]];
        v172[v381[8]] = v173[v381[8]];
        v172[v381[9]] = v173[v381[9]];
        v172[v381[10]] = v173[v381[10]];
        uint64_t v277 = v386[11];
        v278 = (char *)v382 + v277;
        id v279 = (char *)v158 + v277;
        uint64_t v280 = sub_1C151D2DC();
        uint64_t v281 = *(void *)(v280 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v281 + 48))(v279, 1, v280))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v278, v279, *(void *)(*(void *)(v282 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v278, v279, v280);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
        }
        uint64_t v283 = v386[12];
        uint64_t v284 = (void *)((char *)v382 + v283);
        uint64_t v285 = (void *)((char *)v179 + v283);
        unint64_t v286 = v285[1];
        uint64_t v163 = v396;
        if (v286 >= 0x11)
        {
          *uint64_t v284 = *v285;
          v284[1] = v286;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v284 = *(_OWORD *)v285;
        }
        uint64_t v287 = v386[13];
        unint64_t v288 = *(void *)((char *)v179 + v287);
        if (v288 >= 2)
        {
          if (v288 == 2)
          {
            *(void *)((char *)v382 + v287) = 2;
          }
          else
          {
            *(void *)((char *)v382 + v287) = v288;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v382 + v287) = v288;
        }
        uint64_t v311 = v386[14];
        v312 = *(void **)((char *)v179 + v311);
        *(void *)((char *)v382 + v311) = v312;
        unint64_t v313 = *(void (**)(void *, void, uint64_t, int *))(v383 + 56);
        id v314 = v312;
        v313(v382, 0, 1, v386);
      }
      uint64_t v315 = v163[13];
      v316 = (void *)((char *)a1 + v315);
      id v317 = (void *)((char *)a2 + v315);
      uint64_t v318 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v319 = *(void *)(v318 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v319 + 48))(v317, 1, v318))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v316, v317, *(void *)(*(void *)(v320 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v322 = *v317;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v323 = v317[1];
          void *v316 = v322;
          v316[1] = v323;
          uint64_t v324 = type metadata accessor for GenericDataVisualization();
          uint64_t v325 = *(int *)(v324 + 20);
          uint64_t v326 = (char *)v316 + v325;
          uint64_t v327 = (char *)v317 + v325;
          swift_bridgeObjectRetain();
          uint64_t v328 = v327;
          uint64_t v163 = v396;
          __dstb(v326, v328, v394);
          *(void *)((char *)v316 + *(int *)(v324 + 24)) = *(uint64_t *)((char *)v317 + *(int *)(v324 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v316 = v322;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v319 + 56))(v316, 0, 1, v318);
      }
      *((unsigned char *)a1 + v163[14]) = *((unsigned char *)a2 + v163[14]);
      goto LABEL_195;
    case 5u:
      uint64_t v63 = (void *)*a2;
      uint64_t v64 = a2[1];
      *a1 = *a2;
      a1[1] = v64;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v65 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v65;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v66 = a2[10];
      id v67 = v63;
      swift_bridgeObjectRetain();
      id v68 = v65;
      if (v66 == 1)
      {
        long long v69 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v69;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v66;
        uint64_t v126 = a2[12];
        a1[11] = a2[11];
        a1[12] = v126;
        uint64_t v128 = (void *)a2[13];
        uint64_t v127 = a2[14];
        a1[13] = v128;
        a1[14] = v127;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v129 = v128;
      }
      uint64_t v130 = a2 + 15;
      unint64_t v131 = a2[16];
      if (v131 >= 0x11)
      {
        a1[15] = *v130;
        a1[16] = v131;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v130;
      }
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      goto LABEL_195;
    case 6u:
      int v70 = *((unsigned __int8 *)a2 + 281);
      if (v70 == 2)
      {
        uint64_t v212 = a2[1];
        *a1 = *a2;
        a1[1] = v212;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v213 = a2[7];
        a1[6] = a2[6];
        a1[7] = v213;
        uint64_t v214 = a2[9];
        a1[8] = a2[8];
        a1[9] = v214;
        uint64_t v215 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v215 != 1)
        {
          a1[10] = a2[10];
          a1[11] = v215;
          uint64_t v254 = a2[15];
          swift_bridgeObjectRetain();
          if (v254)
          {
            uint64_t v255 = a2[16];
            a1[15] = v254;
            a1[16] = v255;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v254 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v254);
            a1[17] = a2[17];
          }
          else
          {
            long long v348 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v348;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          goto LABEL_168;
        }
        uint64_t v216 = a1 + 10;
        uint64_t v217 = a2 + 10;
        long long v218 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v218;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
LABEL_139:
        long long v292 = v217[1];
        _OWORD *v216 = *v217;
        v216[1] = v292;
        goto LABEL_168;
      }
      if (v70 != 1)
      {
        uint64_t v219 = (void *)*a2;
        uint64_t v220 = a2[1];
        *a1 = *a2;
        a1[1] = v220;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        long long v221 = (void *)a2[7];
        a1[6] = a2[6];
        a1[7] = v221;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v222 = a2[10];
        id v223 = v219;
        swift_bridgeObjectRetain();
        id v224 = v221;
        if (v222 == 1)
        {
          long long v225 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 11) = v225;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = v222;
          uint64_t v256 = a2[12];
          a1[11] = a2[11];
          a1[12] = v256;
          uint64_t v258 = (void *)a2[13];
          uint64_t v257 = a2[14];
          a1[13] = v258;
          a1[14] = v257;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v259 = v258;
        }
        uint64_t v260 = a2 + 15;
        unint64_t v261 = a2[16];
        if (v261 >= 0x11)
        {
          a1[15] = *v260;
          a1[16] = v261;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v260;
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_168;
      }
      id v71 = (void *)*a2;
      uint64_t v72 = a2[1];
      *a1 = *a2;
      a1[1] = v72;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      int v73 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v73;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v74 = a2[10];
      id v75 = v71;
      swift_bridgeObjectRetain();
      id v76 = v73;
      if (v74 == 1)
      {
        long long v77 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v77;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v74;
        uint64_t v248 = a2[12];
        a1[11] = a2[11];
        a1[12] = v248;
        long long v250 = (void *)a2[13];
        uint64_t v249 = a2[14];
        a1[13] = v250;
        a1[14] = v249;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v251 = v250;
      }
      uint64_t v252 = a2 + 15;
      unint64_t v253 = a2[16];
      if (v253 >= 0x11)
      {
        a1[15] = *v252;
        a1[16] = v253;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v252;
      }
      uint64_t v217 = a2 + 18;
      id v262 = (void *)a2[18];
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      if (!v262)
      {
        uint64_t v216 = a1 + 18;
        long long v289 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v289;
        *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
        long long v290 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v290;
        long long v291 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v291;
        goto LABEL_139;
      }
      uint64_t v263 = a2[19];
      uint64_t v264 = a2[20];
      a1[18] = v262;
      a1[19] = v263;
      a1[20] = v264;
      *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
      a1[22] = a2[22];
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      uint64_t v265 = (void *)a2[25];
      a1[24] = a2[24];
      a1[25] = v265;
      *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
      uint64_t v266 = a2[28];
      id v267 = v262;
      swift_bridgeObjectRetain();
      id v268 = v265;
      if (v266 == 1)
      {
        long long v269 = *(_OWORD *)(a2 + 29);
        *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
        *(_OWORD *)(a1 + 29) = v269;
        *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
      }
      else
      {
        a1[27] = a2[27];
        a1[28] = v266;
        uint64_t v293 = a2[30];
        a1[29] = a2[29];
        a1[30] = v293;
        long long v295 = (void *)a2[31];
        uint64_t v294 = a2[32];
        a1[31] = v295;
        a1[32] = v294;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v296 = v295;
      }
      uint64_t v297 = a2 + 33;
      unint64_t v298 = a2[34];
      if (v298 >= 0x11)
      {
        a1[33] = *v297;
        a1[34] = v298;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 33) = *(_OWORD *)v297;
      }
      *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_168:
      *((unsigned char *)a1 + 281) = v70;
LABEL_195:
      swift_storeEnumTagMultiPayload();
LABEL_196:
      sub_1C0C92B68();
      uint64_t v376 = *(int *)(v375 + 48);
      uint64_t v377 = *(void *)((char *)a2 + v376 + 24);
      *(void *)((char *)a1 + v376 + 24) = v377;
      (**(void (***)(void))(v377 - 8))();
      return a1;
    case 7u:
      uint64_t v78 = a2[1];
      *a1 = *a2;
      a1[1] = v78;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v79 = a2[7];
      a1[6] = a2[6];
      a1[7] = v79;
      uint64_t v80 = a2[9];
      a1[8] = a2[8];
      a1[9] = v80;
      uint64_t v81 = a2[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v81 == 1)
      {
        long long v82 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v82;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        long long v83 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v83;
      }
      else
      {
        a1[10] = a2[10];
        a1[11] = v81;
        uint64_t v132 = a2[15];
        swift_bridgeObjectRetain();
        if (v132)
        {
          uint64_t v133 = a2[16];
          a1[15] = v132;
          a1[16] = v133;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v132 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v132);
          a1[17] = a2[17];
        }
        else
        {
          long long v247 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v247;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      }
      goto LABEL_195;
    case 8u:
      uint64_t v84 = a2[1];
      *a1 = *a2;
      a1[1] = v84;
      uint64_t v85 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      long long v86 = (void *)((char *)a1 + v85);
      uint64_t v87 = (char *)a2 + v85;
      uint64_t v88 = *(void *)((char *)a2 + v85 + 8);
      *long long v86 = *(void *)((char *)a2 + v85);
      v86[1] = v88;
      uint64_t v89 = *(void *)((char *)a2 + v85 + 24);
      v86[2] = *(void *)((char *)a2 + v85 + 16);
      v86[3] = v89;
      uint64_t v90 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v91 = *(int *)(v90 + 24);
      v392 = (char *)v86 + v91;
      uint64_t v393 = v90;
      uint64_t v92 = &v87[v91];
      uint64_t v93 = type metadata accessor for FormatCustomItem.Action();
      __dsta = *(void **)(v93 - 8);
      uint64_t v94 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v94(v92, 1, v93))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v392, v92, *(void *)(*(void *)(v95 - 8) + 64));
      }
      else
      {
        uint64_t v194 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16))(v392, v92, v194);
        ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v392, 0, 1, v93);
      }
      *(void *)((char *)v86 + *(int *)(v393 + 28)) = *(void *)&v87[*(int *)(v393 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_195;
    case 9u:
      uint64_t v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      uint64_t v27 = a2[3];
      a1[2] = a2[2];
      a1[3] = v27;
      uint64_t v28 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28)
      {
        uint64_t v29 = a2[8];
        a1[7] = v28;
        a1[8] = v29;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v28 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v28);
      }
      else
      {
        long long v151 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v151;
        a1[8] = a2[8];
      }
      uint64_t v152 = a1 + 9;
      uint64_t v153 = a2 + 9;
      uint64_t v154 = a2[12];
      if (v154)
      {
        uint64_t v155 = a2[13];
        a1[12] = v154;
        a1[13] = v155;
        (**(void (***)(_OWORD *, _OWORD *))(v154 - 8))(v152, v153);
      }
      else
      {
        long long v164 = *(_OWORD *)(a2 + 11);
        *uint64_t v152 = *v153;
        *(_OWORD *)(a1 + 11) = v164;
        a1[13] = a2[13];
      }
      uint64_t v165 = a1 + 14;
      unint64_t v166 = a2 + 14;
      uint64_t v167 = a2[17];
      if (v167)
      {
        uint64_t v168 = a2[18];
        a1[17] = v167;
        a1[18] = v168;
        (**(void (***)(_OWORD *, _OWORD *))(v167 - 8))(v165, v166);
      }
      else
      {
        long long v181 = *((_OWORD *)a2 + 8);
        *uint64_t v165 = *v166;
        *((_OWORD *)a1 + 8) = v181;
        a1[18] = a2[18];
      }
      goto LABEL_195;
    case 0xAu:
      uint64_t v96 = a2[1];
      *a1 = *a2;
      a1[1] = v96;
      uint64_t v97 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v98 = v97[5];
      uint64_t v99 = (char *)a1 + v98;
      uint64_t v100 = (char *)a2 + v98;
      uint64_t v101 = sub_1C151959C();
      id v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
      swift_bridgeObjectRetain();
      v102(v99, v100, v101);
      *(void *)((char *)a1 + v97[6]) = *(void *)((char *)a2 + v97[6]);
      uint64_t v103 = v97[7];
      uint64_t v104 = (char *)a1 + v103;
      uint64_t v105 = (char *)a2 + v103;
      *(void *)uint64_t v104 = *(void *)v105;
      v104[8] = v105[8];
      uint64_t v106 = v97[8];
      uint64_t v20 = (char *)a1 + v106;
      uint64_t v21 = (char *)a2 + v106;
      unint64_t v22 = *((void *)v21 + 1);
      if (v22 >= 0x11)
      {
LABEL_37:
        *(void *)uint64_t v20 = *(void *)v21;
        *((void *)v20 + 1) = v22;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      }
      goto LABEL_195;
    case 0xBu:
      *a1 = *a2;
      swift_retain();
      goto LABEL_195;
    case 0xCu:
      uint64_t v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      uint64_t v31 = a2[3];
      a1[2] = a2[2];
      a1[3] = v31;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_195;
    case 0xDu:
      uint64_t v107 = a2[1];
      *a1 = *a2;
      a1[1] = v107;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v108 = a2 + 3;
      unint64_t v109 = a2[4];
      if (v109 >= 0x11)
      {
        a1[3] = *v108;
        a1[4] = v109;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v108;
      }
      uint64_t v134 = a2[6];
      a1[5] = a2[5];
      a1[6] = v134;
      uint64_t v135 = (void *)a2[8];
      a1[7] = a2[7];
      a1[8] = v135;
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      a1[10] = a2[10];
      uint64_t v136 = a2[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v137 = v135;
      swift_bridgeObjectRetain();
      if (v136)
      {
        uint64_t v138 = a2[15];
        a1[14] = v136;
        a1[15] = v138;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v136 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v136);
      }
      else
      {
        long long v195 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 13) = v195;
        a1[15] = a2[15];
      }
      uint64_t v196 = a1 + 16;
      uint64_t v197 = a2 + 16;
      uint64_t v198 = a2[19];
      if (v198)
      {
        uint64_t v199 = a2[20];
        a1[19] = v198;
        a1[20] = v199;
        (**(void (***)(_OWORD *, _OWORD *))(v198 - 8))(v196, v197);
      }
      else
      {
        long long v206 = *((_OWORD *)a2 + 9);
        *uint64_t v196 = *v197;
        *((_OWORD *)a1 + 9) = v206;
        a1[20] = a2[20];
      }
      uint64_t v207 = a1 + 21;
      unint64_t v208 = a2 + 21;
      uint64_t v209 = a2[24];
      if (v209)
      {
        uint64_t v210 = a2[25];
        a1[24] = v209;
        a1[25] = v210;
        (**(void (***)(_OWORD *, _OWORD *))(v209 - 8))(v207, v208);
      }
      else
      {
        long long v211 = *(_OWORD *)(a2 + 23);
        *uint64_t v207 = *v208;
        *(_OWORD *)(a1 + 23) = v211;
        a1[25] = a2[25];
      }
      goto LABEL_195;
    case 0xEu:
      uint64_t v32 = a2[1];
      *a1 = *a2;
      a1[1] = v32;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      int v33 = a2 + 3;
      unint64_t v34 = a2[4];
      if (v34 >= 0x11)
      {
        a1[3] = *v33;
        a1[4] = v34;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v33;
      }
      uint64_t v125 = a2[6];
      a1[5] = a2[5];
      a1[6] = v125;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_195;
    case 0xFu:
      uint64_t v110 = a2[1];
      *a1 = *a2;
      a1[1] = v110;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v111 = a2 + 3;
      unint64_t v112 = a2[4];
      if (v112 >= 0x11)
      {
        a1[3] = *v111;
        a1[4] = v112;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v111;
      }
      break;
    case 0x10u:
      uint64_t v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      uint64_t v36 = a2[3];
      a1[2] = a2[2];
      a1[3] = v36;
      uint64_t v37 = a2[5];
      a1[4] = a2[4];
      a1[5] = v37;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
      uint64_t v38 = a2[10];
      a1[9] = a2[9];
      a1[10] = v38;
      uint64_t v39 = a2[12];
      a1[11] = a2[11];
      a1[12] = v39;
      a1[13] = a2[13];
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      uint64_t v40 = a2[16];
      a1[15] = a2[15];
      a1[16] = v40;
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      uint64_t v41 = a2[19];
      a1[18] = a2[18];
      a1[19] = v41;
      uint64_t v42 = a2[21];
      a1[20] = a2[20];
      a1[21] = v42;
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      a1[22] = a2[22];
      uint64_t v43 = a2[25];
      a1[24] = a2[24];
      a1[25] = v43;
      *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
      uint64_t v44 = a2[27];
      a1[26] = a2[26];
      a1[27] = v44;
      v390 = a2 + 29;
      unint64_t v45 = a2[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45 >= 0x11)
      {
        a1[29] = *v390;
        a1[30] = v45;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 29) = *(_OWORD *)v390;
      }
      goto LABEL_195;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      goto LABEL_196;
  }
  uint64_t v139 = a2[6];
  a1[5] = a2[5];
  a1[6] = v139;
  uint64_t v140 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v141 = (char *)a1 + v140;
  uint64_t v142 = (char *)a2 + v140;
  *(void *)((char *)a1 + v140) = *(void *)((char *)a2 + v140);
  uint64_t v143 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v144 = &v141[v143];
  uint64_t v145 = &v142[v143];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v230 = type metadata accessor for PuzzleStatisticValue(0);
      int v231 = swift_getEnumCaseMultiPayload();
      if (v231 == 5)
      {
        uint64_t v232 = type metadata accessor for PuzzleStreak();
        uint64_t v233 = *(void *)(v232 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v233 + 48))(v145, 1, v232))
        {
LABEL_105:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v144, v145, *(void *)(*(void *)(v234 - 8) + 64));
          goto LABEL_175;
        }
      }
      else
      {
        if (v231 != 4)
        {
          memcpy(v144, v145, *(void *)(*(void *)(v230 - 8) + 64));
          goto LABEL_176;
        }
        uint64_t v232 = type metadata accessor for PuzzleStreak();
        uint64_t v233 = *(void *)(v232 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v233 + 48))(v145, 1, v232)) {
          goto LABEL_105;
        }
      }
      uint64_t v356 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v144, v145, v356);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v233 + 56))(v144, 0, 1, v232);
LABEL_175:
      swift_storeEnumTagMultiPayload();
LABEL_176:
      v357 = v144;
      uint64_t v358 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v359 = *(int *)(v358 + 20);
      v400 = v357;
      v360 = (char *)v357 + v359;
      uint64_t v361 = &v145[v359];
      int v362 = swift_getEnumCaseMultiPayload();
      if (v362 == 5)
      {
        uint64_t v363 = type metadata accessor for PuzzleStreak();
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v361, 1, v363))
        {
LABEL_181:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v360, v361, *(void *)(*(void *)(v365 - 8) + 64));
LABEL_184:
          swift_storeEnumTagMultiPayload();
          goto LABEL_185;
        }
      }
      else
      {
        if (v362 != 4)
        {
          memcpy(v360, v361, *(void *)(*(void *)(v230 - 8) + 64));
LABEL_185:
          uint64_t v367 = *(int *)(v358 + 24);
          uint64_t v368 = (char *)v400 + v367;
          uint64_t v369 = &v145[v367];
          int v370 = swift_getEnumCaseMultiPayload();
          if (v370 == 5)
          {
            uint64_t v371 = type metadata accessor for PuzzleStreak();
            uint64_t v372 = *(void *)(v371 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v372 + 48))(v369, 1, v371))
            {
LABEL_190:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v368, v369, *(void *)(*(void *)(v373 - 8) + 64));
              goto LABEL_193;
            }
          }
          else
          {
            if (v370 != 4)
            {
              memcpy(v368, v369, *(void *)(*(void *)(v230 - 8) + 64));
LABEL_194:
              swift_storeEnumTagMultiPayload();
              goto LABEL_195;
            }
            uint64_t v371 = type metadata accessor for PuzzleStreak();
            uint64_t v372 = *(void *)(v371 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v372 + 48))(v369, 1, v371)) {
              goto LABEL_190;
            }
          }
          uint64_t v374 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 16))(v368, v369, v374);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v372 + 56))(v368, 0, 1, v371);
LABEL_193:
          swift_storeEnumTagMultiPayload();
          goto LABEL_194;
        }
        uint64_t v363 = type metadata accessor for PuzzleStreak();
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v361, 1, v363)) {
          goto LABEL_181;
        }
      }
      uint64_t v366 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 16))(v360, v361, v366);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v364 + 56))(v360, 0, 1, v363);
      goto LABEL_184;
    case 2u:
      id v226 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v227 = *((void *)v226 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v227 + 48))(v145, 1, v226))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        size_t v229 = *(void *)(*(void *)(v228 - 8) + 64);
        goto LABEL_163;
      }
      uint64_t v399 = v227;
      uint64_t v299 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 16))(v144, v145, v299);
      long long v300 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v301 = v300[5];
      uint64_t v302 = &v144[v301];
      v303 = &v145[v301];
      uint64_t v304 = *((void *)v303 + 1);
      *(void *)uint64_t v302 = *(void *)v303;
      *((void *)v302 + 1) = v304;
      uint64_t v305 = v300[6];
      v306 = &v144[v305];
      uint64_t v307 = &v145[v305];
      uint64_t v308 = *((void *)v307 + 1);
      *(void *)v306 = *(void *)v307;
      *((void *)v306 + 1) = v308;
      v309 = (uint64_t *)(v307 + 16);
      unint64_t v310 = *((void *)v307 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v310 >> 60 == 15)
      {
        *((_OWORD *)v306 + 1) = *(_OWORD *)v309;
      }
      else
      {
        uint64_t v349 = *v309;
        sub_1BFE95820(*v309, v310);
        *((void *)v306 + 2) = v349;
        *((void *)v306 + 3) = v310;
      }
      *(void *)&v144[v300[7]] = *(void *)&v145[v300[7]];
      *(void *)&v144[v300[8]] = *(void *)&v145[v300[8]];
      *(void *)&v144[v226[5]] = *(void *)&v145[v226[5]];
      *(void *)&v144[v226[6]] = *(void *)&v145[v226[6]];
      uint64_t v350 = v226[7];
      long long v351 = &v144[v350];
      uint64_t v352 = &v145[v350];
      uint64_t v353 = *((void *)v352 + 1);
      *(void *)long long v351 = *(void *)v352;
      *((void *)v351 + 1) = v353;
      v354 = *(void (**)(char *, void, uint64_t, int *))(v399 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v354(v144, 0, 1, v226);
      goto LABEL_194;
    case 3u:
      uint64_t v235 = *((void *)v145 + 1);
      *(void *)uint64_t v144 = *(void *)v145;
      *((void *)v144 + 1) = v235;
      v144[16] = v145[16];
      uint64_t v236 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v237 = v236[6];
      v398 = v144;
      uint64_t v238 = &v144[v237];
      uint64_t v239 = &v145[v237];
      uint64_t v240 = type metadata accessor for PuzzleStreak();
      uint64_t v241 = *(void *)(v240 - 8);
      uint64_t v242 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v241 + 48);
      if (v242(v239, 1, v240))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v238, v239, *(void *)(*(void *)(v243 - 8) + 64));
      }
      else
      {
        uint64_t v329 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16))(v238, v239, v329);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v241 + 56))(v238, 0, 1, v240);
      }
      v330 = v242;
      uint64_t v331 = v236[7];
      uint64_t v332 = (char *)v398 + v331;
      v333 = &v145[v331];
      if (v330(&v145[v331], 1, v240))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v332, v333, *(void *)(*(void *)(v334 - 8) + 64));
      }
      else
      {
        uint64_t v335 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v332, v333, v335);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v241 + 56))(v332, 0, 1, v240);
      }
      uint64_t v336 = v236[8];
      uint64_t v337 = (_OWORD *)((char *)v398 + v336);
      uint64_t v338 = &v145[v336];
      long long v339 = *((_OWORD *)v338 + 1);
      *uint64_t v337 = *(_OWORD *)v338;
      v337[1] = v339;
      *(_OWORD *)((char *)v337 + 25) = *(_OWORD *)(v338 + 25);
      uint64_t v340 = v236[9];
      v341 = (_OWORD *)((char *)v398 + v340);
      long long v342 = &v145[v340];
      *(_OWORD *)((char *)v341 + 25) = *(_OWORD *)(v342 + 25);
      long long v343 = *((_OWORD *)v342 + 1);
      _OWORD *v341 = *(_OWORD *)v342;
      v341[1] = v343;
      uint64_t v344 = v236[10];
      v345 = (_OWORD *)((char *)v398 + v344);
      long long v346 = &v145[v344];
      long long v347 = *((_OWORD *)v346 + 1);
      _OWORD *v345 = *(_OWORD *)v346;
      v345[1] = v347;
      *(_OWORD *)((char *)v345 + 25) = *(_OWORD *)(v346 + 25);
      goto LABEL_194;
    default:
      uint64_t v146 = type metadata accessor for PuzzleStatisticValue(0);
      int v147 = swift_getEnumCaseMultiPayload();
      if (v147 == 5)
      {
        uint64_t v148 = type metadata accessor for PuzzleStreak();
        uint64_t v149 = *(void *)(v148 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v145, 1, v148)) {
          goto LABEL_60;
        }
      }
      else
      {
        if (v147 != 4)
        {
          size_t v229 = *(void *)(*(void *)(v146 - 8) + 64);
LABEL_163:
          memcpy(v144, v145, v229);
          goto LABEL_194;
        }
        uint64_t v148 = type metadata accessor for PuzzleStreak();
        uint64_t v149 = *(void *)(v148 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v145, 1, v148))
        {
LABEL_60:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v144, v145, *(void *)(*(void *)(v150 - 8) + 64));
          goto LABEL_193;
        }
      }
      uint64_t v355 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 16))(v144, v145, v355);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v144, 0, 1, v148);
      goto LABEL_193;
  }
}

void *assignWithCopy for FormatModel(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1BFEE6798((uint64_t)a1);
    uint64_t v4 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v5 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v5;
        unint64_t v6 = a2[6];
        swift_bridgeObjectRetain();
        if (v6 >= 0x11)
        {
          a1[5] = a2[5];
          a1[6] = a2[6];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        }
        goto LABEL_193;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v26 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v26;
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        unint64_t v27 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 >= 0x11)
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        }
        goto LABEL_193;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C151DBAC();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
        uint64_t v13 = v7[7];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        char v16 = v15[8];
        *(void *)uint64_t v14 = *(void *)v15;
        unsigned char v14[8] = v16;
        uint64_t v17 = v7[8];
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        if (*((void *)v19 + 1) >= 0x11uLL) {
          goto LABEL_38;
        }
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        goto LABEL_193;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v28 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v28;
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v340 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v29 = v340[10];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        *uint64_t v30 = *((unsigned char *)a2 + v29);
        v30[1] = *((unsigned char *)a2 + v29 + 1);
        uint64_t v32 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v33 = *(int *)(v32 + 24);
        long long __dst = &v30[v33];
        uint64_t v337 = (int *)v32;
        unint64_t v34 = &v31[v33];
        uint64_t v35 = (int *)type metadata accessor for SharedItem();
        uint64_t v332 = *((void *)v35 - 1);
        uint64_t v36 = *(unsigned int (**)(char *, uint64_t, int *))(v332 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v36(v34, 1, v35))
        {
          uint64_t v37 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          uint64_t v141 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(__dst, v34, v141);
          __dst[v35[5]] = v34[v35[5]];
          uint64_t v142 = v35[6];
          uint64_t v143 = *(void **)&v34[v142];
          *(void *)&__dst[v142] = v143;
          uint64_t v144 = v35[7];
          uint64_t v344 = &__dst[v144];
          uint64_t v331 = &v34[v144];
          uint64_t v145 = sub_1C1515FDC();
          uint64_t v146 = *(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16);
          id v147 = v143;
          v146(v344, v331, v145);
          (*(void (**)(char *, void, uint64_t, int *))(v332 + 56))(__dst, 0, 1, v35);
        }
        v30[v337[7]] = v31[v337[7]];
        v30[v337[8]] = v31[v337[8]];
        v30[v337[9]] = v31[v337[9]];
        v30[v337[10]] = v31[v337[10]];
        uint64_t v148 = v340[11];
        uint64_t v149 = (char *)a1 + v148;
        uint64_t v150 = (char *)a2 + v148;
        uint64_t v151 = sub_1C151D2DC();
        uint64_t v152 = *(void *)(v151 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v149, v150, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v149, v150, v151);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
        }
        uint64_t v160 = v340[12];
        id v161 = (void *)((char *)a1 + v160);
        uint64_t v162 = (void *)((char *)a2 + v160);
        if (v162[1] >= 0x11uLL)
        {
          *id v161 = *v162;
          v161[1] = v162[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)id v161 = *(_OWORD *)v162;
        }
        uint64_t v163 = v340[13];
        unint64_t v164 = *(void *)((char *)a2 + v163);
        if (v164 >= 2)
        {
          if (v164 == 2)
          {
            *(void *)((char *)a1 + v163) = 2;
          }
          else
          {
            *(void *)((char *)a1 + v163) = v164;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)a1 + v163) = v164;
        }
        uint64_t v203 = v340[14];
        uint64_t v204 = *(void **)((char *)a2 + v203);
        *(void *)((char *)a1 + v203) = v204;
        id v205 = v204;
        goto LABEL_193;
      case 4u:
        *a1 = *a2;
        uint64_t v20 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v20;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        long long v82 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v83 = v82[8];
        uint64_t v84 = (char *)a1 + v83;
        uint64_t v85 = (char *)a2 + v83;
        uint64_t v86 = sub_1C1515FDC();
        uint64_t v87 = *(void *)(v86 - 8);
        uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
        swift_bridgeObjectRetain();
        v88(v84, v85, v86);
        uint64_t v89 = v82[9];
        uint64_t v90 = (char *)a1 + v89;
        uint64_t v91 = (char *)a2 + v89;
        uint64_t v342 = v86;
        __dstb = v88;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))((char *)a2 + v89, 1, v86))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          v88(v90, v91, v86);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v90, 0, 1, v86);
        }
        *(void *)((char *)a1 + v82[10]) = *(void *)((char *)a2 + v82[10]);
        *(void *)((char *)a1 + v82[11]) = *(void *)((char *)a2 + v82[11]);
        uint64_t v116 = v82[12];
        uint64_t v117 = (void *)((char *)a1 + v116);
        long long v343 = v82;
        uint64_t v118 = (void *)((char *)a2 + v116);
        uint64_t v119 = type metadata accessor for FeedHeadline(0);
        uint64_t v120 = *(void *)(v119 - 8);
        uint64_t v121 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v120 + 48);
        swift_retain();
        swift_retain();
        if (v121(v118, 1, v119))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v117, v118, *(void *)(*(void *)(v122 - 8) + 64));
          uint64_t v123 = v343;
        }
        else
        {
          *uint64_t v117 = *v118;
          v117[1] = v118[1];
          uint64_t v129 = v118[2];
          *((unsigned char *)v117 + 24) = *((unsigned char *)v118 + 24);
          v117[2] = v129;
          v117[4] = v118[4];
          v117[5] = v118[5];
          v117[6] = v118[6];
          *((unsigned char *)v117 + 56) = *((unsigned char *)v118 + 56);
          v333 = (int *)v119;
          uint64_t v130 = *(int *)(v119 + 40);
          uint64_t v329 = v117;
          unint64_t v131 = (char *)v117 + v130;
          uint64_t v132 = (char *)v118 + v130;
          *unint64_t v131 = *((unsigned char *)v118 + v130);
          v131[1] = *((unsigned char *)v118 + v130 + 1);
          uint64_t v328 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v133 = v328[6];
          v330 = &v131[v133];
          uint64_t v134 = &v132[v133];
          uint64_t v135 = (int *)type metadata accessor for SharedItem();
          uint64_t v327 = *((void *)v135 - 1);
          uint64_t v136 = *(unsigned int (**)(char *, uint64_t, int *))(v327 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          id v137 = v118;
          if (v136(v134, 1, v135))
          {
            uint64_t v138 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v330, v134, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            uint64_t v223 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v330, v134, v223);
            v330[v135[5]] = v134[v135[5]];
            uint64_t v224 = v135[6];
            long long v225 = *(void **)&v134[v224];
            *(void *)&v330[v224] = v225;
            uint64_t v226 = v135[7];
            uint64_t v227 = &v330[v226];
            uint64_t v228 = &v134[v226];
            id v229 = v225;
            __dstb(v227, v228, v342);
            (*(void (**)(char *, void, uint64_t, int *))(v327 + 56))(v330, 0, 1, v135);
          }
          v131[v328[7]] = v132[v328[7]];
          v131[v328[8]] = v132[v328[8]];
          v131[v328[9]] = v132[v328[9]];
          v131[v328[10]] = v132[v328[10]];
          uint64_t v230 = v333[11];
          int v231 = (char *)v329 + v230;
          uint64_t v232 = (char *)v118 + v230;
          uint64_t v233 = sub_1C151D2DC();
          uint64_t v234 = *(void *)(v233 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48))(v232, 1, v233))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v231, v232, *(void *)(*(void *)(v235 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v231, v232, v233);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
          }
          uint64_t v236 = v333[12];
          uint64_t v237 = (void *)((char *)v329 + v236);
          uint64_t v238 = (void *)((char *)v137 + v236);
          uint64_t v123 = v343;
          if (v238[1] >= 0x11uLL)
          {
            void *v237 = *v238;
            v237[1] = v238[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v237 = *(_OWORD *)v238;
          }
          uint64_t v239 = v333[13];
          unint64_t v240 = *(void *)((char *)v137 + v239);
          if (v240 >= 2)
          {
            if (v240 == 2)
            {
              *(void *)((char *)v329 + v239) = 2;
            }
            else
            {
              *(void *)((char *)v329 + v239) = v240;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v329 + v239) = v240;
          }
          uint64_t v259 = v333[14];
          uint64_t v260 = *(void **)((char *)v137 + v259);
          *(void *)((char *)v329 + v259) = v260;
          unint64_t v261 = *(void (**)(void *, void, uint64_t, int *))(v120 + 56);
          id v262 = v260;
          v261(v329, 0, 1, v333);
        }
        uint64_t v263 = v123[13];
        uint64_t v264 = (void *)((char *)a1 + v263);
        uint64_t v265 = (void *)((char *)a2 + v263);
        uint64_t v266 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v267 = *(void *)(v266 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v267 + 48))(v265, 1, v266))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v264, v265, *(void *)(*(void *)(v268 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *uint64_t v264 = *v265;
          if (EnumCaseMultiPayload == 1)
          {
            v264[1] = v265[1];
            uint64_t v270 = type metadata accessor for GenericDataVisualization();
            uint64_t v271 = *(int *)(v270 + 20);
            long long v272 = (char *)v264 + v271;
            uint64_t v273 = (char *)v265 + v271;
            swift_bridgeObjectRetain();
            uint64_t v274 = v273;
            uint64_t v123 = v343;
            __dstb(v272, v274, v342);
            *(void *)((char *)v264 + *(int *)(v270 + 24)) = *(void *)((char *)v265 + *(int *)(v270 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v267 + 56))(v264, 0, 1, v266);
        }
        *((unsigned char *)a1 + v123[14]) = *((unsigned char *)a2 + v123[14]);
        goto LABEL_193;
      case 5u:
        uint64_t v38 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
        uint64_t v39 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v39;
        a1[6] = a2[6];
        uint64_t v40 = (void *)a2[7];
        a1[7] = v40;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v41 = a2[10];
        id v42 = v38;
        swift_bridgeObjectRetain();
        id v43 = v40;
        if (v41 == 1)
        {
          long long v44 = *(_OWORD *)(a2 + 9);
          long long v45 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 13) = v45;
          *(_OWORD *)(a1 + 9) = v44;
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = a2[10];
          a1[11] = a2[11];
          a1[12] = a2[12];
          uint64_t v93 = (void *)a2[13];
          a1[13] = v93;
          a1[14] = a2[14];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v94 = v93;
        }
        if (a2[16] >= 0x11uLL)
        {
          a1[15] = a2[15];
          a1[16] = a2[16];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_193;
      case 6u:
        int v46 = *((unsigned __int8 *)a2 + 281);
        if (v46 == 2)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v172 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v172;
          a1[6] = a2[6];
          a1[7] = a2[7];
          a1[8] = a2[8];
          a1[9] = a2[9];
          uint64_t v173 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v173 == 1)
          {
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            long long v174 = *((_OWORD *)a2 + 6);
            long long v175 = *((_OWORD *)a2 + 7);
            long long v176 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v175;
            *((_OWORD *)a1 + 8) = v176;
            *((_OWORD *)a1 + 6) = v174;
          }
          else
          {
            a1[10] = a2[10];
            a1[11] = a2[11];
            uint64_t v211 = a2[15];
            swift_bridgeObjectRetain();
            if (v211)
            {
              a1[15] = v211;
              a1[16] = a2[16];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v211 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v211);
              char v212 = *((unsigned char *)a2 + 144);
              a1[17] = a2[17];
              *((unsigned char *)a1 + 144) = v212;
            }
            else
            {
              long long v297 = *((_OWORD *)a2 + 6);
              long long v298 = *((_OWORD *)a2 + 7);
              long long v299 = *((_OWORD *)a2 + 8);
              *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
              *((_OWORD *)a1 + 7) = v298;
              *((_OWORD *)a1 + 8) = v299;
              *((_OWORD *)a1 + 6) = v297;
            }
          }
        }
        else if (v46 == 1)
        {
          uint64_t v47 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v48 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v48;
          a1[6] = a2[6];
          uint64_t v49 = (void *)a2[7];
          a1[7] = v49;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v50 = a2[10];
          id v51 = v47;
          swift_bridgeObjectRetain();
          id v52 = v49;
          if (v50 == 1)
          {
            long long v53 = *(_OWORD *)(a2 + 9);
            long long v54 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v54;
            *(_OWORD *)(a1 + 9) = v53;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            uint64_t v209 = (void *)a2[13];
            a1[13] = v209;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v210 = v209;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
          uint64_t v215 = (void *)a2[18];
          if (v215)
          {
            a1[18] = v215;
            a1[19] = a2[19];
            a1[20] = a2[20];
            *((unsigned char *)a1 + 168) = *((unsigned char *)a2 + 168);
            *((unsigned char *)a1 + 169) = *((unsigned char *)a2 + 169);
            uint64_t v216 = a2[22];
            *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
            a1[22] = v216;
            a1[24] = a2[24];
            uint64_t v217 = (void *)a2[25];
            a1[25] = v217;
            *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
            uint64_t v218 = a2[28];
            id v219 = v215;
            swift_bridgeObjectRetain();
            id v220 = v217;
            if (v218 == 1)
            {
              long long v221 = *(_OWORD *)(a2 + 27);
              long long v222 = *(_OWORD *)(a2 + 31);
              *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
              *(_OWORD *)(a1 + 31) = v222;
              *(_OWORD *)(a1 + 27) = v221;
            }
            else
            {
              a1[27] = a2[27];
              a1[28] = a2[28];
              a1[29] = a2[29];
              a1[30] = a2[30];
              long long v247 = (void *)a2[31];
              a1[31] = v247;
              a1[32] = a2[32];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v248 = v247;
            }
            if (a2[34] >= 0x11uLL)
            {
              a1[33] = a2[33];
              a1[34] = a2[34];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
            }
            *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
          }
          else
          {
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            long long v241 = *((_OWORD *)a2 + 10);
            long long v242 = *((_OWORD *)a2 + 11);
            long long v243 = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 13) = v243;
            *((_OWORD *)a1 + 10) = v241;
            *((_OWORD *)a1 + 11) = v242;
            long long v244 = *((_OWORD *)a2 + 14);
            long long v245 = *((_OWORD *)a2 + 15);
            long long v246 = *((_OWORD *)a2 + 16);
            *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            *((_OWORD *)a1 + 15) = v245;
            *((_OWORD *)a1 + 16) = v246;
            *((_OWORD *)a1 + 14) = v244;
          }
        }
        else
        {
          uint64_t v177 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          *((unsigned char *)a1 + 25) = *((unsigned char *)a2 + 25);
          uint64_t v178 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v178;
          a1[6] = a2[6];
          uint64_t v179 = (void *)a2[7];
          a1[7] = v179;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v180 = a2[10];
          id v181 = v177;
          swift_bridgeObjectRetain();
          id v182 = v179;
          if (v180 == 1)
          {
            long long v183 = *(_OWORD *)(a2 + 9);
            long long v184 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 13) = v184;
            *(_OWORD *)(a1 + 9) = v183;
          }
          else
          {
            a1[9] = a2[9];
            a1[10] = a2[10];
            a1[11] = a2[11];
            a1[12] = a2[12];
            uint64_t v213 = (void *)a2[13];
            a1[13] = v213;
            a1[14] = a2[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v214 = v213;
          }
          if (a2[16] >= 0x11uLL)
          {
            a1[15] = a2[15];
            a1[16] = a2[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 15) = *(_OWORD *)(a2 + 15);
          }
          *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        }
        *((unsigned char *)a1 + 281) = v46;
        goto LABEL_193;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v55 = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[4] = v55;
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        uint64_t v56 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56 == 1)
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          long long v57 = *((_OWORD *)a2 + 6);
          long long v58 = *((_OWORD *)a2 + 7);
          long long v59 = *((_OWORD *)a2 + 8);
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          *((_OWORD *)a1 + 7) = v58;
          *((_OWORD *)a1 + 8) = v59;
          *((_OWORD *)a1 + 6) = v57;
        }
        else
        {
          a1[10] = a2[10];
          a1[11] = a2[11];
          uint64_t v95 = a2[15];
          swift_bridgeObjectRetain();
          if (v95)
          {
            a1[15] = v95;
            a1[16] = a2[16];
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v95 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v95);
            char v96 = *((unsigned char *)a2 + 144);
            a1[17] = a2[17];
            *((unsigned char *)a1 + 144) = v96;
          }
          else
          {
            long long v206 = *((_OWORD *)a2 + 6);
            long long v207 = *((_OWORD *)a2 + 7);
            long long v208 = *((_OWORD *)a2 + 8);
            *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
            *((_OWORD *)a1 + 7) = v207;
            *((_OWORD *)a1 + 8) = v208;
            *((_OWORD *)a1 + 6) = v206;
          }
        }
        goto LABEL_193;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v60 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v61 = (void *)((char *)a1 + v60);
        uint64_t v62 = (char *)a2 + v60;
        *uint64_t v61 = *(void *)((char *)a2 + v60);
        v61[1] = *(void *)((char *)a2 + v60 + 8);
        v61[2] = *(void *)((char *)a2 + v60 + 16);
        v61[3] = *(void *)((char *)a2 + v60 + 24);
        uint64_t v63 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v64 = *(int *)(v63 + 24);
        uint64_t v338 = (char *)v61 + v64;
        uint64_t v341 = v63;
        uint64_t v65 = &v62[v64];
        uint64_t v66 = type metadata accessor for FormatCustomItem.Action();
        __dsta = *(void **)(v66 - 8);
        id v67 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v67(v65, 1, v66))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v338, v65, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          uint64_t v154 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v338, v65, v154);
          ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v338, 0, 1, v66);
        }
        *(void *)((char *)v61 + *(int *)(v341 + 28)) = *(void *)&v62[*(int *)(v341 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_193;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v21 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21)
        {
          a1[7] = v21;
          a1[8] = a2[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v21);
        }
        else
        {
          long long v111 = *((_OWORD *)a2 + 2);
          long long v112 = *((_OWORD *)a2 + 3);
          a1[8] = a2[8];
          *((_OWORD *)a1 + 2) = v111;
          *((_OWORD *)a1 + 3) = v112;
        }
        uint64_t v113 = a1 + 9;
        int v114 = (long long *)(a2 + 9);
        uint64_t v115 = a2[12];
        if (v115)
        {
          a1[12] = v115;
          a1[13] = a2[13];
          (**(void (***)(_OWORD *, long long *))(v115 - 8))(v113, v114);
        }
        else
        {
          long long v124 = *v114;
          long long v125 = *(_OWORD *)(a2 + 11);
          a1[13] = a2[13];
          _OWORD *v113 = v124;
          *(_OWORD *)(a1 + 11) = v125;
        }
        uint64_t v126 = a1 + 14;
        uint64_t v127 = (long long *)(a2 + 14);
        uint64_t v128 = a2[17];
        if (v128)
        {
          a1[17] = v128;
          a1[18] = a2[18];
          (**(void (***)(_OWORD *, long long *))(v128 - 8))(v126, v127);
        }
        else
        {
          long long v139 = *v127;
          long long v140 = *((_OWORD *)a2 + 8);
          a1[18] = a2[18];
          *uint64_t v126 = v139;
          *((_OWORD *)a1 + 8) = v140;
        }
        goto LABEL_193;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        long long v69 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v70 = v69[5];
        id v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = sub_1C151959C();
        uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v71, v72, v73);
        *(void *)((char *)a1 + v69[6]) = *(void *)((char *)a2 + v69[6]);
        uint64_t v75 = v69[7];
        id v76 = (char *)a1 + v75;
        long long v77 = (char *)a2 + v75;
        char v78 = v77[8];
        *(void *)id v76 = *(void *)v77;
        v76[8] = v78;
        uint64_t v79 = v69[8];
        uint64_t v18 = (char *)a1 + v79;
        uint64_t v19 = (char *)a2 + v79;
        if (*((void *)v19 + 1) >= 0x11uLL)
        {
LABEL_38:
          *(void *)uint64_t v18 = *(void *)v19;
          *((void *)v18 + 1) = *((void *)v19 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        }
        goto LABEL_193;
      case 0xBu:
        *a1 = *a2;
        swift_retain();
        goto LABEL_193;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v22 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v22;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_193;
      case 0xDu:
        *a1 = *a2;
        uint64_t v80 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v80;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        uint64_t v97 = (void *)a2[8];
        a1[8] = v97;
        *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
        a1[10] = a2[10];
        uint64_t v98 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v99 = v97;
        swift_bridgeObjectRetain();
        if (v98)
        {
          a1[14] = v98;
          a1[15] = a2[15];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v98 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v98);
        }
        else
        {
          long long v155 = *(_OWORD *)(a2 + 11);
          long long v156 = *(_OWORD *)(a2 + 13);
          a1[15] = a2[15];
          *(_OWORD *)(a1 + 11) = v155;
          *(_OWORD *)(a1 + 13) = v156;
        }
        uint64_t v157 = a1 + 16;
        uint64_t v158 = (long long *)(a2 + 16);
        uint64_t v159 = a2[19];
        if (v159)
        {
          a1[19] = v159;
          a1[20] = a2[20];
          (**(void (***)(_OWORD *, long long *))(v159 - 8))(v157, v158);
        }
        else
        {
          long long v165 = *v158;
          long long v166 = *((_OWORD *)a2 + 9);
          a1[20] = a2[20];
          *uint64_t v157 = v165;
          *((_OWORD *)a1 + 9) = v166;
        }
        uint64_t v167 = a1 + 21;
        uint64_t v168 = (long long *)(a2 + 21);
        uint64_t v169 = a2[24];
        if (v169)
        {
          a1[24] = v169;
          a1[25] = a2[25];
          (**(void (***)(_OWORD *, long long *))(v169 - 8))(v167, v168);
        }
        else
        {
          long long v170 = *v168;
          long long v171 = *(_OWORD *)(a2 + 23);
          a1[25] = a2[25];
          _OWORD *v167 = v170;
          *(_OWORD *)(a1 + 23) = v171;
        }
        goto LABEL_193;
      case 0xEu:
        *a1 = *a2;
        uint64_t v23 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v23;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_193;
      case 0xFu:
        *a1 = *a2;
        uint64_t v81 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v81;
        if (a2[4] >= 0x11uLL)
        {
          a1[3] = a2[3];
          a1[4] = a2[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        }
        break;
      case 0x10u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        *((unsigned char *)a1 + 49) = *((unsigned char *)a2 + 49);
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[15] = a2[15];
        a1[16] = a2[16];
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        uint64_t v24 = a2[22];
        *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
        a1[22] = v24;
        a1[24] = a2[24];
        a1[25] = a2[25];
        a1[26] = a2[26];
        uint64_t v25 = a2[27];
        *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
        a1[27] = v25;
        unint64_t v339 = a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v339 >= 0x11)
        {
          a1[29] = a2[29];
          a1[30] = a2[30];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
        }
        goto LABEL_193;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        goto LABEL_194;
    }
    a1[5] = a2[5];
    a1[6] = a2[6];
    uint64_t v100 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v101 = (char *)a1 + v100;
    id v102 = (char *)a2 + v100;
    *(void *)((char *)a1 + v100) = *(void *)((char *)a2 + v100);
    uint64_t v103 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v104 = &v101[v103];
    uint64_t v105 = &v102[v103];
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v189 = type metadata accessor for PuzzleStatisticValue(0);
        int v190 = swift_getEnumCaseMultiPayload();
        if (v190 == 5)
        {
          uint64_t v191 = type metadata accessor for PuzzleStreak();
          uint64_t v192 = *(void *)(v191 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v105, 1, v191))
          {
LABEL_106:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v104, v105, *(void *)(*(void *)(v193 - 8) + 64));
            goto LABEL_173;
          }
        }
        else
        {
          if (v190 != 4)
          {
            memcpy(v104, v105, *(void *)(*(void *)(v189 - 8) + 64));
            goto LABEL_174;
          }
          uint64_t v191 = type metadata accessor for PuzzleStreak();
          uint64_t v192 = *(void *)(v191 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v105, 1, v191)) {
            goto LABEL_106;
          }
        }
        uint64_t v306 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 16))(v104, v105, v306);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v192 + 56))(v104, 0, 1, v191);
LABEL_173:
        swift_storeEnumTagMultiPayload();
LABEL_174:
        uint64_t v307 = v104;
        uint64_t v308 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v309 = *(int *)(v308 + 20);
        long long v347 = v307;
        unint64_t v310 = (char *)v307 + v309;
        uint64_t v311 = &v105[v309];
        int v312 = swift_getEnumCaseMultiPayload();
        if (v312 == 5)
        {
          uint64_t v313 = type metadata accessor for PuzzleStreak();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313))
          {
LABEL_179:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v310, v311, *(void *)(*(void *)(v315 - 8) + 64));
            goto LABEL_182;
          }
        }
        else
        {
          if (v312 != 4)
          {
            memcpy(v310, v311, *(void *)(*(void *)(v189 - 8) + 64));
            goto LABEL_183;
          }
          uint64_t v313 = type metadata accessor for PuzzleStreak();
          uint64_t v314 = *(void *)(v313 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313)) {
            goto LABEL_179;
          }
        }
        uint64_t v316 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 16))(v310, v311, v316);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v310, 0, 1, v313);
LABEL_182:
        swift_storeEnumTagMultiPayload();
LABEL_183:
        uint64_t v317 = *(int *)(v308 + 24);
        uint64_t v318 = (char *)v347 + v317;
        uint64_t v319 = &v105[v317];
        int v320 = swift_getEnumCaseMultiPayload();
        if (v320 == 5)
        {
          uint64_t v321 = type metadata accessor for PuzzleStreak();
          uint64_t v322 = *(void *)(v321 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v322 + 48))(v319, 1, v321))
          {
LABEL_188:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v318, v319, *(void *)(*(void *)(v323 - 8) + 64));
            goto LABEL_191;
          }
        }
        else
        {
          if (v320 != 4)
          {
            memcpy(v318, v319, *(void *)(*(void *)(v189 - 8) + 64));
            goto LABEL_192;
          }
          uint64_t v321 = type metadata accessor for PuzzleStreak();
          uint64_t v322 = *(void *)(v321 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v322 + 48))(v319, 1, v321)) {
            goto LABEL_188;
          }
        }
        uint64_t v324 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v318, v319, v324);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v322 + 56))(v318, 0, 1, v321);
        goto LABEL_191;
      case 2u:
        uint64_t v185 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v186 = *((void *)v185 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v186 + 48))(v105, 1, v185))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          size_t v188 = *(void *)(*(void *)(v187 - 8) + 64);
          goto LABEL_161;
        }
        uint64_t v346 = v186;
        uint64_t v249 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 16))(v104, v105, v249);
        long long v250 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v251 = v250[5];
        uint64_t v252 = &v104[v251];
        unint64_t v253 = &v105[v251];
        *(void *)uint64_t v252 = *(void *)v253;
        *((void *)v252 + 1) = *((void *)v253 + 1);
        uint64_t v254 = v250[6];
        uint64_t v255 = &v104[v254];
        uint64_t v256 = &v105[v254];
        *(void *)uint64_t v255 = *(void *)v256;
        *((void *)v255 + 1) = *((void *)v256 + 1);
        uint64_t v257 = (uint64_t *)(v256 + 16);
        unint64_t v258 = *((void *)v256 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v258 >> 60 == 15)
        {
          *((_OWORD *)v255 + 1) = *(_OWORD *)v257;
        }
        else
        {
          uint64_t v300 = *v257;
          sub_1BFE95820(*v257, v258);
          *((void *)v255 + 2) = v300;
          *((void *)v255 + 3) = v258;
        }
        *(void *)&v104[v250[7]] = *(void *)&v105[v250[7]];
        *(void *)&v104[v250[8]] = *(void *)&v105[v250[8]];
        *(void *)&v104[v185[5]] = *(void *)&v105[v185[5]];
        *(void *)&v104[v185[6]] = *(void *)&v105[v185[6]];
        uint64_t v301 = v185[7];
        uint64_t v302 = &v104[v301];
        v303 = &v105[v301];
        *(void *)uint64_t v302 = *(void *)v303;
        *((void *)v302 + 1) = *((void *)v303 + 1);
        uint64_t v304 = *(void (**)(char *, void, uint64_t, int *))(v346 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v304(v104, 0, 1, v185);
        goto LABEL_192;
      case 3u:
        *(void *)uint64_t v104 = *(void *)v105;
        uint64_t v194 = *((void *)v105 + 1);
        v104[16] = v105[16];
        *((void *)v104 + 1) = v194;
        long long v195 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v196 = v195[6];
        v345 = v104;
        uint64_t v197 = &v104[v196];
        uint64_t v198 = &v105[v196];
        uint64_t v199 = type metadata accessor for PuzzleStreak();
        uint64_t v200 = *(void *)(v199 - 8);
        uint64_t v201 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48);
        if (v201(v198, 1, v199))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v197, v198, *(void *)(*(void *)(v202 - 8) + 64));
        }
        else
        {
          uint64_t v275 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 16))(v197, v198, v275);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
        }
        id v276 = v201;
        uint64_t v277 = v195[7];
        v278 = (char *)v345 + v277;
        id v279 = &v105[v277];
        if (v276(&v105[v277], 1, v199))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          uint64_t v281 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16))(v278, v279, v281);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v278, 0, 1, v199);
        }
        uint64_t v282 = v195[8];
        uint64_t v283 = (_OWORD *)((char *)v345 + v282);
        uint64_t v284 = &v105[v282];
        long long v285 = *(_OWORD *)v284;
        long long v286 = *((_OWORD *)v284 + 1);
        *(_OWORD *)((char *)v283 + 25) = *(_OWORD *)(v284 + 25);
        *uint64_t v283 = v285;
        v283[1] = v286;
        uint64_t v287 = v195[9];
        unint64_t v288 = (_OWORD *)((char *)v345 + v287);
        long long v289 = &v105[v287];
        long long v290 = *(_OWORD *)v289;
        long long v291 = *((_OWORD *)v289 + 1);
        *(_OWORD *)((char *)v288 + 25) = *(_OWORD *)(v289 + 25);
        *unint64_t v288 = v290;
        v288[1] = v291;
        uint64_t v292 = v195[10];
        uint64_t v293 = (_OWORD *)((char *)v345 + v292);
        uint64_t v294 = &v105[v292];
        long long v295 = *(_OWORD *)v294;
        long long v296 = *((_OWORD *)v294 + 1);
        *(_OWORD *)((char *)v293 + 25) = *(_OWORD *)(v294 + 25);
        *uint64_t v293 = v295;
        v293[1] = v296;
        goto LABEL_192;
      default:
        uint64_t v106 = type metadata accessor for PuzzleStatisticValue(0);
        int v107 = swift_getEnumCaseMultiPayload();
        if (v107 == 5)
        {
          uint64_t v108 = type metadata accessor for PuzzleStreak();
          uint64_t v109 = *(void *)(v108 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v105, 1, v108)) {
            goto LABEL_61;
          }
        }
        else
        {
          if (v107 != 4)
          {
            size_t v188 = *(void *)(*(void *)(v106 - 8) + 64);
LABEL_161:
            memcpy(v104, v105, v188);
            goto LABEL_192;
          }
          uint64_t v108 = type metadata accessor for PuzzleStreak();
          uint64_t v109 = *(void *)(v108 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v105, 1, v108))
          {
LABEL_61:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v104, v105, *(void *)(*(void *)(v110 - 8) + 64));
            goto LABEL_191;
          }
        }
        uint64_t v305 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16))(v104, v105, v305);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v104, 0, 1, v108);
LABEL_191:
        swift_storeEnumTagMultiPayload();
LABEL_192:
        swift_storeEnumTagMultiPayload();
LABEL_193:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_194:
  sub_1C0C92B68();
  __swift_assign_boxed_opaque_existential_0((void *)((char *)a1 + *(int *)(v325 + 48)), (void *)((char *)a2 + *(int *)(v325 + 48)));
  return a1;
}

char *initializeWithTake for FormatModel(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v6 = v5[5];
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = sub_1C151DBAC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      *(void *)&a1[v5[6]] = *(void *)&a2[v5[6]];
      uint64_t v10 = v5[7];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      v11[8] = v12[8];
      *(void *)uint64_t v11 = *(void *)v12;
      *(_OWORD *)&a1[v5[8]] = *(_OWORD *)&a2[v5[8]];
      goto LABEL_88;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      a1[56] = a2[56];
      uint64_t v13 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v14 = v13[10];
      uint64_t v15 = &a1[v14];
      char v16 = &a2[v14];
      *uint64_t v15 = a2[v14];
      v15[1] = a2[v14 + 1];
      uint64_t v17 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v18 = v17[6];
      uint64_t v19 = &v15[v18];
      uint64_t v20 = &v16[v18];
      uint64_t v21 = (int *)type metadata accessor for SharedItem();
      uint64_t v22 = *((void *)v21 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v66 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v19, v20, v66);
        v19[v21[5]] = v20[v21[5]];
        *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
        uint64_t v67 = v21[7];
        long long v183 = &v19[v67];
        uint64_t v68 = &v20[v67];
        uint64_t v69 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v183, v68, v69);
        (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      }
      v15[v17[7]] = v16[v17[7]];
      v15[v17[8]] = v16[v17[8]];
      v15[v17[9]] = v16[v17[9]];
      v15[v17[10]] = v16[v17[10]];
      uint64_t v70 = v13[11];
      id v71 = &a1[v70];
      uint64_t v72 = &a2[v70];
      uint64_t v73 = sub_1C151D2DC();
      uint64_t v74 = *(void *)(v73 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v71, v72, v73);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
      }
      *(_OWORD *)&a1[v13[12]] = *(_OWORD *)&a2[v13[12]];
      uint64_t v83 = v13[13];
      uint64_t v84 = *(void *)&a2[v83];
      if (v84 == 2) {
        uint64_t v84 = 2;
      }
      *(void *)&a1[v83] = v84;
      *(void *)&a1[v13[14]] = *(void *)&a2[v13[14]];
      goto LABEL_88;
    case 4u:
      uint64_t v24 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v24;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v25 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v26 = v25[8];
      unint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = sub_1C1515FDC();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      v31(v27, v28, v29);
      uint64_t v32 = v25[9];
      uint64_t v33 = &a1[v32];
      unint64_t v34 = &a2[v32];
      uint64_t v182 = v29;
      id v181 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&a2[v32], 1, v29))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v31(v33, v34, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
      }
      *(void *)&a1[v25[10]] = *(void *)&a2[v25[10]];
      *(void *)&a1[v25[11]] = *(void *)&a2[v25[11]];
      uint64_t v76 = v25[12];
      long long v77 = &a1[v76];
      char v78 = &a2[v76];
      uint64_t v79 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v80 = *((void *)v79 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v80 + 48))(v78, 1, v79))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        uint64_t v178 = v80;
        uint64_t v179 = v25;
        *(_OWORD *)long long v77 = *(_OWORD *)v78;
        *((void *)v77 + 2) = *((void *)v78 + 2);
        v77[24] = v78[24];
        *((void *)v77 + 4) = *((void *)v78 + 4);
        *(_OWORD *)(v77 + 40) = *(_OWORD *)(v78 + 40);
        v77[56] = v78[56];
        uint64_t v85 = v79[10];
        uint64_t v86 = &v77[v85];
        uint64_t v87 = &v78[v85];
        *uint64_t v86 = v78[v85];
        v86[1] = v78[v85 + 1];
        uint64_t v88 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v89 = v88[6];
        long long __dst = &v86[v89];
        uint64_t v90 = &v87[v89];
        uint64_t v91 = (int *)type metadata accessor for SharedItem();
        uint64_t v177 = *((void *)v91 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v177 + 48))(v90, 1, v91))
        {
          uint64_t v92 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v90, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          uint64_t v110 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(__dst, v90, v110);
          __dst[v91[5]] = v90[v91[5]];
          *(void *)&__dst[v91[6]] = *(void *)&v90[v91[6]];
          v181(&__dst[v91[7]], &v90[v91[7]], v182);
          (*(void (**)(char *, void, uint64_t, int *))(v177 + 56))(__dst, 0, 1, v91);
        }
        v86[v88[7]] = v87[v88[7]];
        v86[v88[8]] = v87[v88[8]];
        v86[v88[9]] = v87[v88[9]];
        v86[v88[10]] = v87[v88[10]];
        uint64_t v111 = v79[11];
        long long v112 = &v77[v111];
        uint64_t v113 = &v78[v111];
        uint64_t v114 = sub_1C151D2DC();
        uint64_t v115 = *(void *)(v114 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v112, v113, v114);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
        }
        uint64_t v25 = v179;
        *(_OWORD *)&v77[v79[12]] = *(_OWORD *)&v78[v79[12]];
        uint64_t v117 = v79[13];
        uint64_t v118 = *(void *)&v78[v117];
        if (v118 == 2) {
          uint64_t v118 = 2;
        }
        *(void *)&v77[v117] = v118;
        *(void *)&v77[v79[14]] = *(void *)&v78[v79[14]];
        (*(void (**)(char *, void, uint64_t, int *))(v178 + 56))(v77, 0, 1, v79);
      }
      uint64_t v119 = v25[13];
      uint64_t v120 = &a1[v119];
      uint64_t v121 = &a2[v119];
      uint64_t v122 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v123 = *(void *)(v122 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v120, v121, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
          uint64_t v125 = type metadata accessor for GenericDataVisualization();
          v181(&v120[*(int *)(v125 + 20)], &v121[*(int *)(v125 + 20)], v182);
          *(void *)&v120[*(int *)(v125 + 24)] = *(void *)&v121[*(int *)(v125 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v120, v121, *(void *)(v123 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
      }
      a1[v25[14]] = a2[v25[14]];
      goto LABEL_88;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v36 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      long long v39 = *(_OWORD *)&a2[v36 + 16];
      *(_OWORD *)uint64_t v37 = *(_OWORD *)&a2[v36];
      *((_OWORD *)v37 + 1) = v39;
      uint64_t v40 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v41 = *(int *)(v40 + 24);
      id v42 = &v37[v41];
      id v43 = &v38[v41];
      uint64_t v44 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        uint64_t v82 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v42, v43, v82);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      *(void *)&v37[*(int *)(v40 + 28)] = *(void *)&v38[*(int *)(v40 + 28)];
      goto LABEL_88;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v47 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v48 = v47[5];
      uint64_t v49 = &a1[v48];
      uint64_t v50 = &a2[v48];
      uint64_t v51 = sub_1C151959C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      *(void *)&a1[v47[6]] = *(void *)&a2[v47[6]];
      uint64_t v52 = v47[7];
      long long v53 = &a1[v52];
      long long v54 = &a2[v52];
      v53[8] = v54[8];
      *(void *)long long v53 = *(void *)v54;
      *(_OWORD *)&a1[v47[8]] = *(_OWORD *)&a2[v47[8]];
      goto LABEL_88;
    case 0xFu:
      uint64_t v55 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v55;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v56 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      long long v57 = &a1[v56];
      long long v58 = &a2[v56];
      *(void *)&a1[v56] = *(void *)&a2[v56];
      uint64_t v59 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v60 = &v57[v59];
      uint64_t v61 = &v58[v59];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v96 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v98 = type metadata accessor for PuzzleStreak();
            uint64_t v99 = *(void *)(v98 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v61, 1, v98))
            {
LABEL_35:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v60, v61, *(void *)(*(void *)(v100 - 8) + 64));
              goto LABEL_68;
            }
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              memcpy(v60, v61, *(void *)(*(void *)(v96 - 8) + 64));
              goto LABEL_69;
            }
            uint64_t v98 = type metadata accessor for PuzzleStreak();
            uint64_t v99 = *(void *)(v98 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v61, 1, v98)) {
              goto LABEL_35;
            }
          }
          uint64_t v152 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v60, v61, v152);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v60, 0, 1, v98);
LABEL_68:
          swift_storeEnumTagMultiPayload();
LABEL_69:
          uint64_t v153 = v60;
          uint64_t v154 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v155 = *(int *)(v154 + 20);
          uint64_t v185 = v153;
          long long v156 = (char *)v153 + v155;
          uint64_t v157 = &v61[v155];
          int v158 = swift_getEnumCaseMultiPayload();
          if (v158 == 5)
          {
            uint64_t v159 = type metadata accessor for PuzzleStreak();
            uint64_t v160 = *(void *)(v159 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v157, 1, v159))
            {
LABEL_74:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v156, v157, *(void *)(*(void *)(v161 - 8) + 64));
              goto LABEL_77;
            }
          }
          else
          {
            if (v158 != 4)
            {
              memcpy(v156, v157, *(void *)(*(void *)(v96 - 8) + 64));
              goto LABEL_78;
            }
            uint64_t v159 = type metadata accessor for PuzzleStreak();
            uint64_t v160 = *(void *)(v159 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v157, 1, v159)) {
              goto LABEL_74;
            }
          }
          uint64_t v162 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v156, v157, v162);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v156, 0, 1, v159);
LABEL_77:
          swift_storeEnumTagMultiPayload();
LABEL_78:
          uint64_t v163 = *(int *)(v154 + 24);
          unint64_t v164 = (char *)v185 + v163;
          long long v165 = &v61[v163];
          int v166 = swift_getEnumCaseMultiPayload();
          if (v166 == 5)
          {
            uint64_t v167 = type metadata accessor for PuzzleStreak();
            uint64_t v168 = *(void *)(v167 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v165, 1, v167))
            {
LABEL_83:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v164, v165, *(void *)(*(void *)(v169 - 8) + 64));
              goto LABEL_86;
            }
          }
          else
          {
            if (v166 != 4)
            {
              memcpy(v164, v165, *(void *)(*(void *)(v96 - 8) + 64));
              goto LABEL_87;
            }
            uint64_t v167 = type metadata accessor for PuzzleStreak();
            uint64_t v168 = *(void *)(v167 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v165, 1, v167)) {
              goto LABEL_83;
            }
          }
          uint64_t v170 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v164, v165, v170);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v164, 0, 1, v167);
          goto LABEL_86;
        case 2u:
          uint64_t v93 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v94 = *((void *)v93 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v94 + 48))(v61, 1, v93))
          {
            sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            memcpy(v60, v61, *(void *)(*(void *)(v95 - 8) + 64));
          }
          else
          {
            uint64_t v126 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v60, v61, v126);
            uint64_t v127 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v60[v127[5]] = *(_OWORD *)&v61[v127[5]];
            uint64_t v128 = v127[6];
            uint64_t v129 = &v60[v128];
            uint64_t v130 = &v61[v128];
            long long v131 = *((_OWORD *)v130 + 1);
            *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
            *((_OWORD *)v129 + 1) = v131;
            *(void *)&v60[v127[7]] = *(void *)&v61[v127[7]];
            *(void *)&v60[v127[8]] = *(void *)&v61[v127[8]];
            *(void *)&v60[v93[5]] = *(void *)&v61[v93[5]];
            *(void *)&v60[v93[6]] = *(void *)&v61[v93[6]];
            *(_OWORD *)&v60[v93[7]] = *(_OWORD *)&v61[v93[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v94 + 56))(v60, 0, 1, v93);
          }
          goto LABEL_87;
        case 3u:
          uint64_t v101 = *((void *)v61 + 1);
          *(void *)uint64_t v60 = *(void *)v61;
          *((void *)v60 + 1) = v101;
          v60[16] = v61[16];
          id v102 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v103 = v102[6];
          long long v184 = v60;
          uint64_t v104 = &v60[v103];
          uint64_t v105 = &v61[v103];
          uint64_t v106 = type metadata accessor for PuzzleStreak();
          uint64_t v107 = *(void *)(v106 - 8);
          uint64_t v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
          if (v108(v105, 1, v106))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v104, v105, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            uint64_t v132 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v104, v105, v132);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
          }
          uint64_t v133 = v102[7];
          uint64_t v134 = (char *)v184 + v133;
          uint64_t v135 = &v61[v133];
          if (v108(&v61[v133], 1, v106))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
          }
          else
          {
            uint64_t v137 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v134, v135, v137);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v134, 0, 1, v106);
          }
          uint64_t v138 = v102[8];
          long long v139 = (_OWORD *)((char *)v184 + v138);
          long long v140 = &v61[v138];
          long long v141 = *((_OWORD *)v140 + 1);
          _OWORD *v139 = *(_OWORD *)v140;
          v139[1] = v141;
          *(_OWORD *)((char *)v139 + 25) = *(_OWORD *)(v140 + 25);
          uint64_t v142 = v102[9];
          uint64_t v143 = (_OWORD *)((char *)v184 + v142);
          uint64_t v144 = &v61[v142];
          *(_OWORD *)((char *)v143 + 25) = *(_OWORD *)(v144 + 25);
          long long v145 = *((_OWORD *)v144 + 1);
          *uint64_t v143 = *(_OWORD *)v144;
          v143[1] = v145;
          uint64_t v146 = v102[10];
          id v147 = (_OWORD *)((char *)v184 + v146);
          uint64_t v148 = &v61[v146];
          long long v149 = *((_OWORD *)v148 + 1);
          _OWORD *v147 = *(_OWORD *)v148;
          v147[1] = v149;
          *(_OWORD *)((char *)v147 + 25) = *(_OWORD *)(v148 + 25);
          goto LABEL_87;
        default:
          uint64_t v62 = type metadata accessor for PuzzleStatisticValue(0);
          int v63 = swift_getEnumCaseMultiPayload();
          if (v63 == 5)
          {
            uint64_t v64 = type metadata accessor for PuzzleStreak();
            uint64_t v65 = *(void *)(v64 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v61, 1, v64))
            {
LABEL_59:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v60, v61, *(void *)(*(void *)(v150 - 8) + 64));
              goto LABEL_86;
            }
          }
          else
          {
            if (v63 != 4)
            {
              memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
              goto LABEL_87;
            }
            uint64_t v64 = type metadata accessor for PuzzleStreak();
            uint64_t v65 = *(void *)(v64 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v61, 1, v64)) {
              goto LABEL_59;
            }
          }
          uint64_t v151 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v60, v61, v151);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v60, 0, 1, v64);
LABEL_86:
          swift_storeEnumTagMultiPayload();
LABEL_87:
          swift_storeEnumTagMultiPayload();
LABEL_88:
          swift_storeEnumTagMultiPayload();
LABEL_89:
          sub_1C0C92B68();
          uint64_t v172 = *(int *)(v171 + 48);
          uint64_t v173 = &a1[v172];
          long long v174 = &a2[v172];
          long long v175 = *((_OWORD *)v174 + 1);
          *(_OWORD *)uint64_t v173 = *(_OWORD *)v174;
          *((_OWORD *)v173 + 1) = v175;
          return a1;
      }
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      goto LABEL_89;
  }
}

char *assignWithTake for FormatModel(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1BFEE6798((uint64_t)a1);
    uint64_t v4 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v5 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v6 = v5[5];
        uint64_t v7 = &a1[v6];
        uint64_t v8 = &a2[v6];
        uint64_t v9 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        *(void *)&a1[v5[6]] = *(void *)&a2[v5[6]];
        uint64_t v10 = v5[7];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        v11[8] = v12[8];
        *(void *)uint64_t v11 = *(void *)v12;
        *(_OWORD *)&a1[v5[8]] = *(_OWORD *)&a2[v5[8]];
        goto LABEL_89;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        a1[24] = a2[24];
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        uint64_t v13 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v14 = v13[10];
        uint64_t v15 = &a1[v14];
        char v16 = &a2[v14];
        *uint64_t v15 = a2[v14];
        v15[1] = a2[v14 + 1];
        uint64_t v17 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v18 = v17[6];
        uint64_t v19 = &v15[v18];
        uint64_t v20 = &v16[v18];
        uint64_t v21 = (int *)type metadata accessor for SharedItem();
        uint64_t v22 = *((void *)v21 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
        {
          uint64_t v23 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v66 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v19, v20, v66);
          v19[v21[5]] = v20[v21[5]];
          *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
          uint64_t v67 = v21[7];
          long long v183 = &v19[v67];
          uint64_t v68 = &v20[v67];
          uint64_t v69 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v183, v68, v69);
          (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
        }
        v15[v17[7]] = v16[v17[7]];
        v15[v17[8]] = v16[v17[8]];
        v15[v17[9]] = v16[v17[9]];
        v15[v17[10]] = v16[v17[10]];
        uint64_t v70 = v13[11];
        id v71 = &a1[v70];
        uint64_t v72 = &a2[v70];
        uint64_t v73 = sub_1C151D2DC();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v71, v72, v73);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
        }
        *(_OWORD *)&a1[v13[12]] = *(_OWORD *)&a2[v13[12]];
        uint64_t v83 = v13[13];
        uint64_t v84 = *(void *)&a2[v83];
        if (v84 == 2) {
          uint64_t v84 = 2;
        }
        *(void *)&a1[v83] = v84;
        *(void *)&a1[v13[14]] = *(void *)&a2[v13[14]];
        goto LABEL_89;
      case 4u:
        uint64_t v24 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v24;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v25 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v26 = v25[8];
        unint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = sub_1C1515FDC();
        uint64_t v30 = *(void *)(v29 - 8);
        uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v31(v27, v28, v29);
        uint64_t v32 = v25[9];
        uint64_t v33 = &a1[v32];
        unint64_t v34 = &a2[v32];
        uint64_t v182 = v29;
        id v181 = v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&a2[v32], 1, v29))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          v31(v33, v34, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
        }
        *(void *)&a1[v25[10]] = *(void *)&a2[v25[10]];
        *(void *)&a1[v25[11]] = *(void *)&a2[v25[11]];
        uint64_t v76 = v25[12];
        long long v77 = &a1[v76];
        char v78 = &a2[v76];
        uint64_t v79 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v80 = *((void *)v79 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v80 + 48))(v78, 1, v79))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          uint64_t v178 = v80;
          uint64_t v179 = v25;
          *(_OWORD *)long long v77 = *(_OWORD *)v78;
          *((void *)v77 + 2) = *((void *)v78 + 2);
          v77[24] = v78[24];
          *((void *)v77 + 4) = *((void *)v78 + 4);
          *(_OWORD *)(v77 + 40) = *(_OWORD *)(v78 + 40);
          v77[56] = v78[56];
          uint64_t v85 = v79[10];
          uint64_t v86 = &v77[v85];
          uint64_t v87 = &v78[v85];
          *uint64_t v86 = v78[v85];
          v86[1] = v78[v85 + 1];
          uint64_t v88 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v89 = v88[6];
          long long __dst = &v86[v89];
          uint64_t v90 = &v87[v89];
          uint64_t v91 = (int *)type metadata accessor for SharedItem();
          uint64_t v177 = *((void *)v91 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v177 + 48))(v90, 1, v91))
          {
            uint64_t v92 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v90, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            uint64_t v110 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(__dst, v90, v110);
            __dst[v91[5]] = v90[v91[5]];
            *(void *)&__dst[v91[6]] = *(void *)&v90[v91[6]];
            v181(&__dst[v91[7]], &v90[v91[7]], v182);
            (*(void (**)(char *, void, uint64_t, int *))(v177 + 56))(__dst, 0, 1, v91);
          }
          v86[v88[7]] = v87[v88[7]];
          v86[v88[8]] = v87[v88[8]];
          v86[v88[9]] = v87[v88[9]];
          v86[v88[10]] = v87[v88[10]];
          uint64_t v111 = v79[11];
          long long v112 = &v77[v111];
          uint64_t v113 = &v78[v111];
          uint64_t v114 = sub_1C151D2DC();
          uint64_t v115 = *(void *)(v114 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v112, v113, v114);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
          }
          uint64_t v25 = v179;
          *(_OWORD *)&v77[v79[12]] = *(_OWORD *)&v78[v79[12]];
          uint64_t v117 = v79[13];
          uint64_t v118 = *(void *)&v78[v117];
          if (v118 == 2) {
            uint64_t v118 = 2;
          }
          *(void *)&v77[v117] = v118;
          *(void *)&v77[v79[14]] = *(void *)&v78[v79[14]];
          (*(void (**)(char *, void, uint64_t, int *))(v178 + 56))(v77, 0, 1, v79);
        }
        uint64_t v119 = v25[13];
        uint64_t v120 = &a1[v119];
        uint64_t v121 = &a2[v119];
        uint64_t v122 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v123 = *(void *)(v122 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v120, v121, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
            uint64_t v125 = type metadata accessor for GenericDataVisualization();
            v181(&v120[*(int *)(v125 + 20)], &v121[*(int *)(v125 + 20)], v182);
            *(void *)&v120[*(int *)(v125 + 24)] = *(void *)&v121[*(int *)(v125 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v120, v121, *(void *)(v123 + 64));
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
        }
        a1[v25[14]] = a2[v25[14]];
        goto LABEL_89;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v36 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        long long v39 = *(_OWORD *)&a2[v36 + 16];
        *(_OWORD *)uint64_t v37 = *(_OWORD *)&a2[v36];
        *((_OWORD *)v37 + 1) = v39;
        uint64_t v40 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v41 = *(int *)(v40 + 24);
        id v42 = &v37[v41];
        id v43 = &v38[v41];
        uint64_t v44 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v45 = *(void *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          uint64_t v82 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v42, v43, v82);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        *(void *)&v37[*(int *)(v40 + 28)] = *(void *)&v38[*(int *)(v40 + 28)];
        goto LABEL_89;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v47 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v48 = v47[5];
        uint64_t v49 = &a1[v48];
        uint64_t v50 = &a2[v48];
        uint64_t v51 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
        *(void *)&a1[v47[6]] = *(void *)&a2[v47[6]];
        uint64_t v52 = v47[7];
        long long v53 = &a1[v52];
        long long v54 = &a2[v52];
        v53[8] = v54[8];
        *(void *)long long v53 = *(void *)v54;
        *(_OWORD *)&a1[v47[8]] = *(_OWORD *)&a2[v47[8]];
        goto LABEL_89;
      case 0xFu:
        uint64_t v55 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v55;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v56 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        long long v57 = &a1[v56];
        long long v58 = &a2[v56];
        *(void *)&a1[v56] = *(void *)&a2[v56];
        uint64_t v59 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v60 = &v57[v59];
        uint64_t v61 = &v58[v59];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v96 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v98 = type metadata accessor for PuzzleStreak();
              uint64_t v99 = *(void *)(v98 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v61, 1, v98))
              {
LABEL_36:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v60, v61, *(void *)(*(void *)(v100 - 8) + 64));
                goto LABEL_69;
              }
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                memcpy(v60, v61, *(void *)(*(void *)(v96 - 8) + 64));
                goto LABEL_70;
              }
              uint64_t v98 = type metadata accessor for PuzzleStreak();
              uint64_t v99 = *(void *)(v98 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v61, 1, v98)) {
                goto LABEL_36;
              }
            }
            uint64_t v152 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v60, v61, v152);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v60, 0, 1, v98);
LABEL_69:
            swift_storeEnumTagMultiPayload();
LABEL_70:
            uint64_t v153 = v60;
            uint64_t v154 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v155 = *(int *)(v154 + 20);
            uint64_t v185 = v153;
            long long v156 = (char *)v153 + v155;
            uint64_t v157 = &v61[v155];
            int v158 = swift_getEnumCaseMultiPayload();
            if (v158 == 5)
            {
              uint64_t v159 = type metadata accessor for PuzzleStreak();
              uint64_t v160 = *(void *)(v159 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v157, 1, v159))
              {
LABEL_75:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v156, v157, *(void *)(*(void *)(v161 - 8) + 64));
                goto LABEL_78;
              }
            }
            else
            {
              if (v158 != 4)
              {
                memcpy(v156, v157, *(void *)(*(void *)(v96 - 8) + 64));
                goto LABEL_79;
              }
              uint64_t v159 = type metadata accessor for PuzzleStreak();
              uint64_t v160 = *(void *)(v159 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v157, 1, v159)) {
                goto LABEL_75;
              }
            }
            uint64_t v162 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v156, v157, v162);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v156, 0, 1, v159);
LABEL_78:
            swift_storeEnumTagMultiPayload();
LABEL_79:
            uint64_t v163 = *(int *)(v154 + 24);
            unint64_t v164 = (char *)v185 + v163;
            long long v165 = &v61[v163];
            int v166 = swift_getEnumCaseMultiPayload();
            if (v166 == 5)
            {
              uint64_t v167 = type metadata accessor for PuzzleStreak();
              uint64_t v168 = *(void *)(v167 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v165, 1, v167))
              {
LABEL_84:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v164, v165, *(void *)(*(void *)(v169 - 8) + 64));
                goto LABEL_87;
              }
            }
            else
            {
              if (v166 != 4)
              {
                memcpy(v164, v165, *(void *)(*(void *)(v96 - 8) + 64));
                goto LABEL_88;
              }
              uint64_t v167 = type metadata accessor for PuzzleStreak();
              uint64_t v168 = *(void *)(v167 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v165, 1, v167)) {
                goto LABEL_84;
              }
            }
            uint64_t v170 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v164, v165, v170);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v164, 0, 1, v167);
            goto LABEL_87;
          case 2u:
            uint64_t v93 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v94 = *((void *)v93 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v94 + 48))(v61, 1, v93))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              memcpy(v60, v61, *(void *)(*(void *)(v95 - 8) + 64));
            }
            else
            {
              uint64_t v126 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v60, v61, v126);
              uint64_t v127 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v60[v127[5]] = *(_OWORD *)&v61[v127[5]];
              uint64_t v128 = v127[6];
              uint64_t v129 = &v60[v128];
              uint64_t v130 = &v61[v128];
              long long v131 = *((_OWORD *)v130 + 1);
              *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
              *((_OWORD *)v129 + 1) = v131;
              *(void *)&v60[v127[7]] = *(void *)&v61[v127[7]];
              *(void *)&v60[v127[8]] = *(void *)&v61[v127[8]];
              *(void *)&v60[v93[5]] = *(void *)&v61[v93[5]];
              *(void *)&v60[v93[6]] = *(void *)&v61[v93[6]];
              *(_OWORD *)&v60[v93[7]] = *(_OWORD *)&v61[v93[7]];
              (*(void (**)(char *, void, uint64_t, int *))(v94 + 56))(v60, 0, 1, v93);
            }
            goto LABEL_88;
          case 3u:
            uint64_t v101 = *((void *)v61 + 1);
            *(void *)uint64_t v60 = *(void *)v61;
            *((void *)v60 + 1) = v101;
            v60[16] = v61[16];
            id v102 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v103 = v102[6];
            long long v184 = v60;
            uint64_t v104 = &v60[v103];
            uint64_t v105 = &v61[v103];
            uint64_t v106 = type metadata accessor for PuzzleStreak();
            uint64_t v107 = *(void *)(v106 - 8);
            uint64_t v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
            if (v108(v105, 1, v106))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v104, v105, *(void *)(*(void *)(v109 - 8) + 64));
            }
            else
            {
              uint64_t v132 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v104, v105, v132);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
            }
            uint64_t v133 = v102[7];
            uint64_t v134 = (char *)v184 + v133;
            uint64_t v135 = &v61[v133];
            if (v108(&v61[v133], 1, v106))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              uint64_t v137 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v134, v135, v137);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v134, 0, 1, v106);
            }
            uint64_t v138 = v102[8];
            long long v139 = (_OWORD *)((char *)v184 + v138);
            long long v140 = &v61[v138];
            long long v141 = *((_OWORD *)v140 + 1);
            _OWORD *v139 = *(_OWORD *)v140;
            v139[1] = v141;
            *(_OWORD *)((char *)v139 + 25) = *(_OWORD *)(v140 + 25);
            uint64_t v142 = v102[9];
            uint64_t v143 = (_OWORD *)((char *)v184 + v142);
            uint64_t v144 = &v61[v142];
            *(_OWORD *)((char *)v143 + 25) = *(_OWORD *)(v144 + 25);
            long long v145 = *((_OWORD *)v144 + 1);
            *uint64_t v143 = *(_OWORD *)v144;
            v143[1] = v145;
            uint64_t v146 = v102[10];
            id v147 = (_OWORD *)((char *)v184 + v146);
            uint64_t v148 = &v61[v146];
            long long v149 = *((_OWORD *)v148 + 1);
            _OWORD *v147 = *(_OWORD *)v148;
            v147[1] = v149;
            *(_OWORD *)((char *)v147 + 25) = *(_OWORD *)(v148 + 25);
            goto LABEL_88;
          default:
            uint64_t v62 = type metadata accessor for PuzzleStatisticValue(0);
            int v63 = swift_getEnumCaseMultiPayload();
            if (v63 == 5)
            {
              uint64_t v64 = type metadata accessor for PuzzleStreak();
              uint64_t v65 = *(void *)(v64 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v61, 1, v64))
              {
LABEL_60:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v60, v61, *(void *)(*(void *)(v150 - 8) + 64));
                goto LABEL_87;
              }
            }
            else
            {
              if (v63 != 4)
              {
                memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
                goto LABEL_88;
              }
              uint64_t v64 = type metadata accessor for PuzzleStreak();
              uint64_t v65 = *(void *)(v64 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v61, 1, v64)) {
                goto LABEL_60;
              }
            }
            uint64_t v151 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v60, v61, v151);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v60, 0, 1, v64);
LABEL_87:
            swift_storeEnumTagMultiPayload();
LABEL_88:
            swift_storeEnumTagMultiPayload();
LABEL_89:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  sub_1C0C92B68();
  uint64_t v172 = *(int *)(v171 + 48);
  uint64_t v173 = &a1[v172];
  long long v174 = &a2[v172];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v172]);
  long long v175 = *((_OWORD *)v174 + 1);
  *(_OWORD *)uint64_t v173 = *(_OWORD *)v174;
  *((_OWORD *)v173 + 1) = v175;
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatModel(uint64_t a1, uint64_t a2)
{
  sub_1C0C92B68();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0C92B68();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t sub_1C0CAEF6C(uint64_t a1)
{
  uint64_t result = type metadata accessor for FeedItem(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

void sub_1C0CAF028()
{
  if (!qword_1EB861738)
  {
    type metadata accessor for FormatModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB861738);
    }
  }
}

unint64_t destroy for FormatDerivedDataResultItemReference(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 24);
  if (result >= 0xF)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for FormatDerivedDataResultItemReference(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  int v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 >= 0xF)
  {
    a1[2] = *v4;
    a1[3] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  }
  return a1;
}

void *assignWithCopy for FormatDerivedDataResultItemReference(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a2[3];
  if (a1[3] >= 0xFuLL)
  {
    if (v4 >= 0xF)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v4 < 0xF)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for FormatDerivedDataResultItemReference(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  unint64_t v4 = a2 + 2;
  if (a1[3] >= 0xFuLL)
  {
    unint64_t v5 = a2[3];
    if (v5 >= 0xF)
    {
      a1[2] = *v4;
      a1[3] = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataResultItemReference()
{
  return &type metadata for FormatDerivedDataResultItemReference;
}

uint64_t sub_1C0CAF2D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  if (sub_1C00DD6C4(*a1, *a2) & 1) != 0 && (sub_1C00DE8C8(v2, v5))
  {
    v11[0] = v3;
    v11[1] = v4;
    v10[0] = v6;
    v10[1] = v7;
    char v8 = _s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0(v11, v10);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t FeedPoolManager.__allocating_init(feed:service:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  FeedPoolManager.init(feed:service:)(a1, a2);
  return v4;
}

uint64_t sub_1C0CAF3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v67 = a1;
  uint64_t v59 = a4;
  uint64_t v6 = *(void *)(*(void *)v4 + 80);
  uint64_t v64 = *(void *)(*(void *)v4 + 88);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v61 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v52 = (char *)&v46 - v9;
  uint64_t v62 = v10;
  uint64_t v48 = sub_1C151FD8C();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v49 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v57 = (char *)&v46 - v13;
  int v14 = *a3;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 80);
  uint64_t v16 = swift_checkMetadataState();
  uint64_t v17 = v15(v16, AssociatedConformanceWitness);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v55 + 32);
  sub_1BFFDEB20();
  uint64_t v21 = swift_allocObject();
  long long v58 = xmmword_1C1529AE0;
  *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
  int v63 = v14;
  v68[0] = v14;
  uint64_t v65 = v17;
  uint64_t v66 = v19;
  uint64_t v69 = v17;
  uint64_t v70 = v19;
  uint64_t v53 = v6;
  uint64_t v22 = type metadata accessor for FeedPoolManager.Key();
  uint64_t v23 = sub_1BFC902F8();
  uint64_t v25 = v24;
  *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v56 = sub_1BFE9C558();
  *(void *)(v21 + 64) = v56;
  *(void *)(v21 + 32) = v23;
  *(void *)(v21 + 40) = v25;
  sub_1C151F38C();
  uint64_t v60 = v20;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88);
  uint64_t v27 = v67;
  uint64_t v51 = v16;
  uint64_t v50 = AssociatedConformanceWitness;
  if (v26(v16, AssociatedConformanceWitness))
  {
    uint64_t v46 = v22;
    v68[0] = v63;
    uint64_t v69 = v65;
    uint64_t v70 = v66;
    swift_bridgeObjectRetain();
    uint64_t v28 = v57;
    sub_1C1518DBC();
    swift_bridgeObjectRelease();
    uint64_t v30 = v61;
    uint64_t v29 = v62;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v28, 1, v62) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v59, v57, v29);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v58;
      v68[0] = v63;
      uint64_t v69 = v65;
      uint64_t v70 = v66;
      uint64_t v42 = sub_1BFC902F8();
      uint64_t v44 = v43;
      swift_bridgeObjectRelease();
      unint64_t v45 = v56;
      *(void *)(v41 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v41 + 64) = v45;
      *(void *)(v41 + 32) = v42;
      *(void *)(v41 + 40) = v44;
      sub_1C151F38C();
      sub_1C15197BC();
      return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v57, v48);
    uint64_t v27 = v67;
  }
  char v31 = v63;
  v68[0] = v63;
  uint64_t v32 = v52;
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t))(v64 + 24))(v27, v54, v68, v53);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v58;
  v68[0] = v31;
  uint64_t v69 = v65;
  uint64_t v70 = v66;
  uint64_t v34 = sub_1BFC902F8();
  unint64_t v35 = v56;
  *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v33 + 64) = v35;
  *(void *)(v33 + 32) = v34;
  *(void *)(v33 + 40) = v36;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  if (v26(v51, v50))
  {
    uint64_t v38 = v61;
    uint64_t v37 = v62;
    long long v39 = v49;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v49, v32, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v37);
    v68[0] = v31;
    uint64_t v69 = v65;
    uint64_t v70 = v66;
    sub_1C1518DDC();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = v61;
    uint64_t v37 = v62;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(v59, v32, v37);
}

uint64_t sub_1C0CAF9FC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)v1 + 88) + 32))(a1, *(void *)(*(void *)v1 + 80));
}

uint64_t sub_1C0CAFA74()
{
  return sub_1C1520E0C();
}

uint64_t *FeedPoolManager.deinit()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[4];

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  swift_release();
  return v0;
}

uint64_t FeedPoolManager.__deallocating_deinit()
{
  FeedPoolManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CAFBE8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C0CAFC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0CAF3A4(a1, a2, a3, a4);
}

uint64_t sub_1C0CAFC28(uint64_t a1)
{
  return sub_1C0CAF9FC(a1);
}

uint64_t dispatch thunk of FeedPoolManagerType.createPool(with:feedContext:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FeedPoolManagerType.expandPool(cursor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t method lookup function for FeedPoolManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedPoolManager);
}

uint64_t dispatch thunk of FeedPoolManager.__allocating_init(feed:service:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedPoolManager.createPool(with:feedContext:cachePolicy:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of FeedPoolManager.expandPool(cursor:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t FormatPuzzleTypeBinding.Image.image(from:context:imageContext:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  long long v6 = a1[1];
  v20[0] = *a1;
  v20[1] = v6;
  long long v7 = a1[3];
  void v20[2] = a1[2];
  v20[3] = v7;
  uint64_t v8 = swift_allocObject();
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  long long v18 = *(_OWORD *)(a2 + 80);
  long long v19 = *(_OWORD *)(a2 + 64);
  long long v17 = *(_OWORD *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 120);
  LOBYTE(a2) = *(unsigned char *)(a2 + 128);
  uint64_t v13 = (_OWORD *)swift_allocObject();
  long long v14 = a1[1];
  v13[1] = *a1;
  _OWORD v13[2] = v14;
  long long v15 = a1[3];
  v13[3] = a1[2];
  uint64_t v13[4] = v15;
  char v21 = 1;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(unsigned char *)(v8 + 48) = 1;
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = v9;
  *(_OWORD *)(v8 + 72) = v19;
  *(_OWORD *)(v8 + 88) = v18;
  *(_OWORD *)(v8 + 104) = v17;
  *(void *)(v8 + 120) = v11;
  *(void *)(v8 + 128) = v12;
  *(unsigned char *)(v8 + 136) = a2;
  *(void *)(v8 + 144) = sub_1C0CAFF30;
  *(void *)(v8 + 152) = v13;
  *a3 = v8 | 0x2000000000000000;
  swift_bridgeObjectRetain();
  return sub_1C0642378((uint64_t)v20);
}

uint64_t sub_1C0CAFE38()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1C0CAFE78@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*(id *)(a1 + 56), sel_exploreTileImageAssetHandle);
  if (v3)
  {
    id v4 = v3;
    *(void *)(a2 + 24) = sub_1BFF6C3A8();
    *(void *)(a2 + 32) = sub_1BFF6C3E8();
    *(void *)a2 = v4;
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C0CAFEE0()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

double sub_1C0CAFF30@<D0>(uint64_t a1@<X8>)
{
  return sub_1C0CAFE78(v1 + 16, a1);
}

uint64_t static FormatPuzzleTypeBinding.Image.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatPuzzleTypeBinding.Image.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatPuzzleTypeBinding.Image.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0CAFFB0()
{
  unint64_t result = qword_1EA1A57D8;
  if (!qword_1EA1A57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A57D8);
  }
  return result;
}

unint64_t sub_1C0CB0004(uint64_t a1)
{
  unint64_t result = sub_1C0CB002C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0CB002C()
{
  unint64_t result = qword_1EA1A57E0;
  if (!qword_1EA1A57E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A57E0);
  }
  return result;
}

unint64_t sub_1C0CB0080(void *a1)
{
  a1[1] = sub_1C088F90C();
  a1[2] = sub_1C08F8C0C();
  unint64_t result = sub_1C0CAFFB0();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0CB00B8(void *a1)
{
  return FormatPuzzleTypeBinding.Image.init(from:)(a1);
}

uint64_t sub_1C0CB00D0(void *a1)
{
  return FormatPuzzleTypeBinding.Image.encode(to:)(a1);
}

unsigned char *_s5ImageOwst_5(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0CB0184);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Image()
{
  return &type metadata for FormatPuzzleTypeBinding.Image;
}

uint64_t FormatPuzzle.overrides.getter@<X0>(_OWORD *a1@<X8>)
{
  swift_beginAccess();
  long long v3 = v1[7];
  long long v21 = v1[8];
  long long v4 = v1[8];
  long long v5 = v1[10];
  long long v22 = v1[9];
  long long v6 = v22;
  long long v23 = v5;
  long long v7 = v1[3];
  long long v8 = v1[5];
  long long v17 = v1[4];
  long long v9 = v17;
  long long v18 = v8;
  long long v10 = v1[5];
  long long v11 = v1[7];
  long long v19 = v1[6];
  long long v12 = v19;
  long long v20 = v11;
  long long v13 = v1[3];
  v16[0] = v1[2];
  long long v14 = v16[0];
  v16[1] = v13;
  a1[6] = v4;
  a1[7] = v6;
  a1[8] = v1[10];
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v12;
  a1[5] = v3;
  *a1 = v14;
  a1[1] = v7;
  return sub_1C0153E30((uint64_t)v16);
}

id FCPuzzleProviding.overridden(by:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C0CB0418(a1, (uint64_t)v25);
  sub_1C0CB0418((uint64_t)v25, (uint64_t)&v26);
  if (sub_1C065DA58((uint64_t)&v26) == 1) {
    goto LABEL_10;
  }
  uint64_t v3 = v27;
  uint64_t v4 = v29;
  uint64_t v5 = v31;
  uint64_t v6 = v33;
  uint64_t v7 = v35;
  uint64_t v8 = v37;
  uint64_t v9 = v39;
  uint64_t v10 = v41;
  uint64_t v11 = v43;
  if (v27 || v29 || v31 || v33 || v35 || v37 || v39 || v41 | v43)
  {
    uint64_t v21 = v28;
    uint64_t v22 = v26;
    uint64_t v23 = v30;
    uint64_t v24 = v32;
    uint64_t v19 = v36;
    uint64_t v20 = v34;
    uint64_t v17 = v40;
    uint64_t v18 = v38;
    uint64_t v16 = v42;
    objc_allocWithZone(MEMORY[0x1E4F7E710]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v12 = sub_1C0CB27A8(v22, v3, v21, v4, v23, v5, v24, v6, v20, v7, v19, v8, v18, v9, v17, v10, v16, v11);
    id v13 = objc_allocWithZone(MEMORY[0x1E4F7E6D8]);
    swift_unknownObjectRetain();
    id v14 = objc_msgSend(v13, sel_initWithPuzzle_overrides_, v2, v12);
    swift_unknownObjectRelease();

    return v14;
  }
  else
  {
LABEL_10:
    swift_unknownObjectRetain();
  }
  return (id)v2;
}

uint64_t sub_1C0CB0418(uint64_t a1, uint64_t a2)
{
  sub_1C0CB31B0(0, &qword_1EB862D60, (uint64_t)&type metadata for FormatPuzzle.Overrides, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatPuzzle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzle.properties.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall FormatPuzzle.Overrides.init(title:subtitle:description:author:teaserClue:teaserAnswer:teaserInfo:teaserDirection:teaserNumber:)(NewsFeed::FormatPuzzle::Overrides *__return_ptr retstr, Swift::String_optional title, Swift::String_optional subtitle, Swift::String_optional description, Swift::String_optional author, Swift::String_optional teaserClue, Swift::String_optional teaserAnswer, Swift::String_optional teaserInfo, Swift::String_optional teaserDirection, Swift::String_optional teaserNumber)
{
  retstr->title = title;
  retstr->subtitle = subtitle;
  retstr->description = description;
  retstr->author = author;
  retstr->teaserClue = teaserClue;
  retstr->teaserAnswer = teaserAnswer;
  retstr->teaserInfo = teaserInfo;
  retstr->teaserDirection = teaserDirection;
  retstr->teaserNumber = teaserNumber;
}

uint64_t FormatPuzzle.__allocating_init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_beginAccess();
  *(void *)(v10 + 176) = a4;
  swift_beginAccess();
  *(void *)(v10 + 184) = a5;
  swift_beginAccess();
  long long v11 = a3[7];
  *(_OWORD *)(v10 + 128) = a3[6];
  *(_OWORD *)(v10 + 144) = v11;
  *(_OWORD *)(v10 + 160) = a3[8];
  long long v12 = a3[3];
  *(_OWORD *)(v10 + 64) = a3[2];
  *(_OWORD *)(v10 + 80) = v12;
  long long v13 = a3[5];
  *(_OWORD *)(v10 + 96) = a3[4];
  *(_OWORD *)(v10 + 112) = v13;
  long long v14 = a3[1];
  *(_OWORD *)(v10 + 32) = *a3;
  *(_OWORD *)(v10 + 48) = v14;
  return v10;
}

uint64_t FormatPuzzle.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0CB0640(_OWORD *a1, void *a2)
{
  long long v2 = a1[6];
  long long v3 = a1[8];
  __src[7] = a1[7];
  __src[8] = v3;
  long long v4 = a1[3];
  __src[2] = a1[2];
  __src[3] = v4;
  long long v5 = a1[4];
  __src[5] = a1[5];
  __src[6] = v2;
  __src[4] = v5;
  long long v6 = a1[1];
  uint64_t v7 = (_OWORD *)*a2;
  uint64_t v8 = (void *)(*a2 + 32);
  __src[0] = *a1;
  __src[1] = v6;
  swift_beginAccess();
  long long v9 = v7[8];
  v16[5] = v7[7];
  v16[6] = v9;
  long long v10 = v7[10];
  v16[7] = v7[9];
  v16[8] = v10;
  long long v11 = v7[3];
  long long v12 = v7[5];
  long long v13 = v7[6];
  _OWORD v16[2] = v7[4];
  v16[3] = v12;
  v16[4] = v13;
  v16[0] = v7[2];
  v16[1] = v11;
  memmove(v8, __src, 0x90uLL);
  sub_1C0153E30((uint64_t)__src);
  return sub_1C0CB300C((uint64_t)v16);
}

uint64_t FormatPuzzle.overrides.setter(_OWORD *a1)
{
  swift_beginAccess();
  long long v3 = v1[8];
  long long v4 = v1[10];
  v13[7] = v1[9];
  v13[8] = v4;
  long long v5 = v1[5];
  _OWORD v13[2] = v1[4];
  v13[3] = v5;
  long long v6 = v1[6];
  v13[5] = v1[7];
  v13[6] = v3;
  uint64_t v13[4] = v6;
  long long v7 = v1[3];
  v13[0] = v1[2];
  v13[1] = v7;
  long long v8 = a1[5];
  v1[6] = a1[4];
  v1[7] = v8;
  long long v9 = a1[7];
  v1[8] = a1[6];
  v1[9] = v9;
  v1[10] = a1[8];
  long long v10 = a1[3];
  v1[4] = a1[2];
  v1[5] = v10;
  long long v11 = a1[1];
  v1[2] = *a1;
  v1[3] = v11;
  return sub_1C0CB300C((uint64_t)v13);
}

uint64_t (*FormatPuzzle.overrides.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 176) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzle.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 184) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzle.properties.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatPuzzle.init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_beginAccess();
  *(void *)(v5 + 176) = a4;
  swift_beginAccess();
  *(void *)(v5 + 184) = a5;
  swift_beginAccess();
  long long v9 = a3[7];
  *(_OWORD *)(v5 + 128) = a3[6];
  *(_OWORD *)(v5 + 144) = v9;
  *(_OWORD *)(v5 + 160) = a3[8];
  long long v10 = a3[3];
  *(_OWORD *)(v5 + 64) = a3[2];
  *(_OWORD *)(v5 + 80) = v10;
  long long v11 = a3[5];
  *(_OWORD *)(v5 + 96) = a3[4];
  *(_OWORD *)(v5 + 112) = v11;
  long long v12 = a3[1];
  *(_OWORD *)(v5 + 32) = *a3;
  *(_OWORD *)(v5 + 48) = v12;
  return v5;
}

uint64_t FormatPuzzle.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatPuzzle.init(from:)(a1);
  return v2;
}

void *FormatPuzzle.init(from:)(void *a1)
{
  uint64_t v45 = *v1;
  sub_1C0CB30B8(0, &qword_1EB86B650, (uint64_t (*)(void))sub_1C0CB2F64, (uint64_t)&type metadata for FormatPuzzle.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v28 - v6;
  uint64_t v8 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1C0CB2F64();
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v11 = (uint64_t)v46;
    long long v14 = v47;
    swift_deallocPartialClassInstance();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v9 = v44;
    LOBYTE(v53) = 0;
    uint64_t v10 = sub_1C152069C();
    long long v14 = v47;
    v47[2] = v10;
    v14[3] = v15;
    char v55 = 1;
    sub_1C0A94710();
    sub_1C152065C();
    sub_1C0CB0418((uint64_t)&v53, (uint64_t)v51);
    sub_1C0CB0418((uint64_t)v51, (uint64_t)v52);
    if (sub_1C065DA58((uint64_t)v52) == 1)
    {
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      uint64_t v43 = 0;
    }
    else
    {
      sub_1C0CB0418((uint64_t)v51, (uint64_t)v48);
      uint64_t v42 = v48[17];
      uint64_t v43 = v48[16];
      uint64_t v40 = v48[15];
      uint64_t v41 = v48[14];
      uint64_t v38 = v48[13];
      uint64_t v39 = v48[12];
      uint64_t v36 = v48[11];
      uint64_t v37 = v48[10];
      uint64_t v34 = v48[9];
      uint64_t v35 = v48[8];
      uint64_t v32 = v48[7];
      uint64_t v33 = v48[6];
      uint64_t v30 = v48[5];
      uint64_t v31 = v48[4];
      uint64_t v17 = v48[1];
      uint64_t v28 = v48[3];
      uint64_t v29 = v48[2];
      uint64_t v16 = v48[0];
    }
    swift_beginAccess();
    v14[4] = v16;
    v14[5] = v17;
    uint64_t v18 = v28;
    void v14[6] = v29;
    v14[7] = v18;
    uint64_t v19 = v30;
    unsigned char v14[8] = v31;
    v14[9] = v19;
    uint64_t v20 = v32;
    v14[10] = v33;
    v14[11] = v20;
    uint64_t v21 = v34;
    v14[12] = v35;
    v14[13] = v21;
    uint64_t v22 = v36;
    v14[14] = v37;
    v14[15] = v22;
    uint64_t v23 = v38;
    v14[16] = v39;
    v14[17] = v23;
    uint64_t v24 = v40;
    v14[18] = v41;
    v14[19] = v24;
    uint64_t v25 = v42;
    v14[20] = v43;
    v14[21] = v25;
    sub_1BFEBC4B4();
    LOBYTE(v49) = 2;
    sub_1BFDB25E8();
    sub_1C152065C();
    if (v50) {
      uint64_t v26 = v50;
    }
    else {
      uint64_t v26 = MEMORY[0x1E4FBC870];
    }
    swift_beginAccess();
    v14[22] = v26;
    sub_1C0CB31B0(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
    char v54 = 3;
    sub_1BFDB2438((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
    sub_1C152065C();
    if (v49) {
      uint64_t v27 = v49;
    }
    else {
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v5);
    swift_beginAccess();
    v14[23] = v27;
    uint64_t v12 = (uint64_t)v46;
  }
  __swift_destroy_boxed_opaque_existential_1(v12);
  return v14;
}

uint64_t FormatPuzzle.Overrides.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.author.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserClue.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserAnswer.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserDirection.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzle.Overrides.teaserNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0CB1130@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_title);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C151E62C();
    uint64_t v47 = v7;
    uint64_t v48 = v6;
  }
  else
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
  }
  id v8 = objc_msgSend(a1, sel_subtitle);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1C151E62C();
    uint64_t v45 = v11;
    uint64_t v46 = v10;
  }
  else
  {
    uint64_t v45 = 0;
    uint64_t v46 = 0;
  }
  id v12 = objc_msgSend(a1, sel_description);
  uint64_t v13 = sub_1C151E62C();
  uint64_t v51 = v14;
  uint64_t v52 = v13;

  id v15 = objc_msgSend(a1, sel_authors);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = (void *)sub_1C151EBCC();

    if (v17[2])
    {
      uint64_t v49 = v17[5];
      uint64_t v50 = v17[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v49 = 0;
  uint64_t v50 = 0;
LABEL_12:
  id v18 = objc_msgSend(a1, sel_teaserClue);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1C151E62C();
    uint64_t v43 = v21;
    uint64_t v44 = v20;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v44 = 0;
  }
  id v22 = objc_msgSend(a1, sel_teaserAnswer);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = sub_1C151E62C();
    uint64_t v42 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v42 = 0;
  }
  id v26 = objc_msgSend(a1, sel_teaserInfo);
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = sub_1C151E62C();
    uint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v30 = 0;
  }
  id v31 = objc_msgSend(a1, sel_teaserDirection);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_1C151E62C();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  id v36 = objc_msgSend(a1, sel_teaserNumber);
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = sub_1C151E62C();
    uint64_t v40 = v39;

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v38 = 0;
    uint64_t v40 = 0;
  }
  uint64_t result = v42;
  *a2 = v48;
  a2[1] = v47;
  a2[2] = v46;
  a2[3] = v45;
  a2[4] = v52;
  a2[5] = v51;
  a2[6] = v50;
  a2[7] = v49;
  a2[8] = v44;
  a2[9] = v43;
  a2[10] = v24;
  a2[11] = v42;
  a2[12] = v28;
  a2[13] = v30;
  a2[14] = v33;
  a2[15] = v35;
  a2[16] = v38;
  a2[17] = v40;
  return result;
}

uint64_t sub_1C0CB13D8(char a1)
{
  uint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974627573;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 0x726F68747561;
      break;
    case 4:
      uint64_t result = 0x6C43726573616574;
      break;
    case 5:
      uint64_t result = 0x6E41726573616574;
      break;
    case 6:
      uint64_t result = 0x6E49726573616574;
      break;
    case 7:
      uint64_t result = 0x6944726573616574;
      break;
    case 8:
      uint64_t result = 0x754E726573616574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0CB1520()
{
  return sub_1C0CB13D8(*v0);
}

uint64_t sub_1C0CB1528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0CB3D60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CB1550(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB2FB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0CB158C(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB2FB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatPuzzle.Overrides.encode(to:)(void *a1)
{
  sub_1C0CB30B8(0, &qword_1EB86B890, (uint64_t (*)(void))sub_1C0CB2FB8, (uint64_t)&type metadata for FormatPuzzle.Overrides.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v18 - v6;
  uint64_t v8 = v1[2];
  v18[14] = v1[3];
  v18[15] = v8;
  uint64_t v9 = v1[4];
  v18[12] = v1[5];
  v18[13] = v9;
  uint64_t v10 = v1[6];
  v18[10] = v1[7];
  v18[11] = v10;
  uint64_t v11 = v1[8];
  v18[8] = v1[9];
  v18[9] = v11;
  uint64_t v12 = v1[11];
  v18[6] = v1[10];
  v18[7] = v12;
  uint64_t v13 = v1[13];
  void v18[4] = v1[12];
  v18[5] = v13;
  uint64_t v14 = v1[15];
  void v18[2] = v1[14];
  v18[3] = v14;
  uint64_t v15 = v1[16];
  v18[0] = v1[17];
  v18[1] = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0CB2FB8();
  sub_1C1520F0C();
  char v27 = 0;
  uint64_t v16 = v18[16];
  sub_1C152074C();
  if (!v16)
  {
    char v26 = 1;
    sub_1C152074C();
    char v25 = 2;
    sub_1C152074C();
    char v24 = 3;
    sub_1C152074C();
    char v23 = 4;
    sub_1C152074C();
    char v22 = 5;
    sub_1C152074C();
    char v21 = 6;
    sub_1C152074C();
    char v20 = 7;
    sub_1C152074C();
    char v19 = 8;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatPuzzle.Overrides.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v61 = a2;
  sub_1C0CB30B8(0, &qword_1EB86B658, (uint64_t (*)(void))sub_1C0CB2FB8, (uint64_t)&type metadata for FormatPuzzle.Overrides.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = a1[3];
  int v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1C0CB2FB8();
  uint64_t v62 = v8;
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  }
  uint64_t v10 = v6;
  LOBYTE(v73[0]) = 0;
  uint64_t v11 = v5;
  uint64_t v12 = sub_1C152060C();
  uint64_t v14 = v13;
  LOBYTE(v73[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_1C152060C();
  LOBYTE(v73[0]) = 2;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_1C152060C();
  uint64_t v17 = v16;
  LOBYTE(v73[0]) = 3;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_1C152060C();
  LOBYTE(v73[0]) = 4;
  uint64_t v58 = v20;
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_1C152060C();
  LOBYTE(v73[0]) = 5;
  uint64_t v57 = v21;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C152060C();
  uint64_t v54 = v23;
  uint64_t v55 = v17;
  uint64_t v50 = v22;
  LOBYTE(v73[0]) = 6;
  swift_bridgeObjectRetain();
  uint64_t v52 = 0;
  uint64_t v48 = sub_1C152060C();
  uint64_t v49 = v12;
  LOBYTE(v73[0]) = 7;
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C152060C();
  uint64_t v51 = v25;
  uint64_t v47 = v26;
  char v74 = 8;
  uint64_t v28 = v27;
  swift_bridgeObjectRetain();
  uint64_t v29 = v62;
  uint64_t v30 = sub_1C152060C();
  uint64_t v45 = v31;
  uint64_t v46 = v30;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v11);
  *(void *)&long long v64 = v49;
  *((void *)&v64 + 1) = v14;
  *(void *)&long long v65 = v60;
  *((void *)&v65 + 1) = v17;
  uint64_t v32 = v58;
  *(void *)&long long v66 = v59;
  *((void *)&v66 + 1) = v19;
  *(void *)&long long v67 = v56;
  *((void *)&v67 + 1) = v58;
  uint64_t v33 = v28;
  uint64_t v44 = v28;
  uint64_t v34 = v54;
  uint64_t v35 = v57;
  *(void *)&long long v68 = v53;
  *((void *)&v68 + 1) = v57;
  uint64_t v36 = v51;
  *(void *)&long long v69 = v50;
  *((void *)&v69 + 1) = v54;
  *(void *)&long long v70 = v48;
  *((void *)&v70 + 1) = v51;
  *(void *)&long long v71 = v47;
  *((void *)&v71 + 1) = v33;
  *(void *)&long long v72 = v46;
  *((void *)&v72 + 1) = v45;
  sub_1C0153E30((uint64_t)&v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v37 = v71;
  uint64_t v38 = v61;
  v61[6] = v70;
  v38[7] = v37;
  v38[8] = v72;
  long long v39 = v67;
  v38[2] = v66;
  v38[3] = v39;
  long long v40 = v69;
  v38[4] = v68;
  v38[5] = v40;
  long long v41 = v65;
  _OWORD *v38 = v64;
  v38[1] = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  v73[0] = v49;
  v73[1] = v14;
  v73[2] = v60;
  v73[3] = v55;
  v73[4] = v59;
  v73[5] = v19;
  v73[6] = v56;
  v73[7] = v32;
  v73[8] = v53;
  v73[9] = v35;
  v73[10] = v50;
  v73[11] = v34;
  v73[12] = v48;
  v73[13] = v36;
  v73[14] = v47;
  v73[15] = v44;
  v73[16] = v46;
  v73[17] = v45;
  return sub_1C0CB300C((uint64_t)v73);
}

uint64_t sub_1C0CB208C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return FormatPuzzle.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1C0CB20A4(void *a1)
{
  return FormatPuzzle.Overrides.encode(to:)(a1);
}

uint64_t sub_1C0CB20BC()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656469727265766FLL;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0CB2150(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB2F64();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0CB218C(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB2F64();
  return MEMORY[0x1F41862B0](a1, v2);
}

_OWORD *FormatPuzzle.deinit()
{
  swift_bridgeObjectRelease();
  long long v1 = v0[9];
  v6[6] = v0[8];
  v6[7] = v1;
  v6[8] = v0[10];
  long long v2 = v0[5];
  _OWORD v6[2] = v0[4];
  v6[3] = v2;
  long long v3 = v0[7];
  v6[4] = v0[6];
  v6[5] = v3;
  long long v4 = v0[3];
  v6[0] = v0[2];
  v6[1] = v4;
  sub_1C0CB300C((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  long long v1 = v0[9];
  v6[6] = v0[8];
  v6[7] = v1;
  v6[8] = v0[10];
  long long v2 = v0[5];
  _OWORD v6[2] = v0[4];
  v6[3] = v2;
  long long v3 = v0[7];
  v6[4] = v0[6];
  v6[5] = v3;
  long long v4 = v0[3];
  v6[0] = v0[2];
  v6[1] = v4;
  sub_1C0CB300C((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatPuzzle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0CB30B8(0, &qword_1EB86B888, (uint64_t (*)(void))sub_1C0CB2F64, (uint64_t)&type metadata for FormatPuzzle.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0CB2F64();
  sub_1C1520F0C();
  char v44 = 0;
  uint64_t v9 = v22;
  sub_1C15207CC();
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v22 = v6;
  swift_beginAccess();
  long long v11 = *(_OWORD *)(v2 + 112);
  long long v12 = *(_OWORD *)(v2 + 144);
  long long v40 = *(_OWORD *)(v2 + 128);
  long long v41 = v12;
  long long v13 = *(_OWORD *)(v2 + 144);
  long long v42 = *(_OWORD *)(v2 + 160);
  long long v14 = *(_OWORD *)(v2 + 48);
  long long v15 = *(_OWORD *)(v2 + 80);
  long long v36 = *(_OWORD *)(v2 + 64);
  long long v37 = v15;
  long long v16 = *(_OWORD *)(v2 + 80);
  long long v17 = *(_OWORD *)(v2 + 112);
  long long v38 = *(_OWORD *)(v2 + 96);
  long long v39 = v17;
  long long v18 = *(_OWORD *)(v2 + 48);
  long long v34 = *(_OWORD *)(v2 + 32);
  long long v35 = v18;
  long long v31 = v40;
  long long v32 = v13;
  long long v33 = *(_OWORD *)(v2 + 160);
  long long v27 = v36;
  long long v28 = v16;
  long long v29 = v38;
  long long v30 = v11;
  long long v25 = v34;
  long long v26 = v14;
  memset(v24, 0, sizeof(v24));
  if ((_s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(&v25, v24) & 1) == 0)
  {
    LOBYTE(v24[0]) = 1;
    long long v31 = v40;
    long long v32 = v41;
    long long v33 = v42;
    long long v27 = v36;
    long long v28 = v37;
    long long v29 = v38;
    long long v30 = v39;
    long long v25 = v34;
    long long v26 = v35;
    sub_1C0CB3120();
    sub_1C0A94768();
    sub_1C1520BAC();
  }
  swift_beginAccess();
  uint64_t v19 = *(void *)(v2 + 176);
  if (*(void *)(v19 + 16))
  {
    char v43 = 2;
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_1BFE71F8C(v19);
    swift_bridgeObjectRelease();
    uint64_t v23 = v20;
    swift_retain();
    sub_1BFD8BB48((uint64_t *)&v23);
    swift_release();
    v24[0] = v23;
    sub_1C0CB3120();
    sub_1C0CB31B0(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFD8BA00();
    sub_1C1520BAC();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v21 = *(void *)(v2 + 184);
  if (*(void *)(v21 + 16))
  {
    char v43 = 3;
    uint64_t v23 = (void *)v21;
    sub_1C0CB3120();
    sub_1C0CB31B0(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
    sub_1BFDB2438((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
    sub_1C1520BAC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v5);
}

void *sub_1C0CB2720@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatPuzzle.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0CB2778(void *a1)
{
  return FormatPuzzle.encode(to:)(a1);
}

uint64_t sub_1C0CB279C(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed12FormatPuzzleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1C0CB27A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a2)
  {
    uint64_t v21 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v21 = 0;
    if (a4)
    {
LABEL_3:
      uint64_t v22 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      if (a6) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  uint64_t v22 = 0;
  if (a6)
  {
LABEL_4:
    uint64_t v23 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    uint64_t v24 = a10;
    if (a8) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v23 = 0;
  uint64_t v24 = a10;
  if (a8)
  {
LABEL_5:
    long long v25 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    uint64_t v26 = a12;
    if (v24) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  long long v25 = 0;
  uint64_t v26 = a12;
  if (v24)
  {
LABEL_6:
    long long v27 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    uint64_t v28 = a14;
    if (v26) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  long long v27 = 0;
  uint64_t v28 = a14;
  if (v26)
  {
LABEL_7:
    long long v29 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    uint64_t v30 = a16;
    if (v28) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  long long v29 = 0;
  uint64_t v30 = a16;
  if (v28)
  {
LABEL_8:
    long long v31 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    uint64_t v32 = a18;
    if (v30) {
      goto LABEL_9;
    }
LABEL_18:
    long long v33 = 0;
    if (v32) {
      goto LABEL_10;
    }
LABEL_19:
    long long v34 = 0;
    goto LABEL_20;
  }
LABEL_17:
  long long v31 = 0;
  uint64_t v32 = a18;
  if (!v30) {
    goto LABEL_18;
  }
LABEL_9:
  long long v33 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  if (!v32) {
    goto LABEL_19;
  }
LABEL_10:
  long long v34 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
LABEL_20:
  id v35 = objc_msgSend(v37, sel_initWithTitle_subtitle_description_author_teaserClue_teaserAnswer_teaserInfo_teaserDirection_teaserNumber_, v21, v22, v23, v25, v27, v29, v31, v33, v34);

  return v35;
}

uint64_t _s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v8 = a1[8];
  uint64_t v10 = a1[9];
  uint64_t v11 = a1[10];
  uint64_t v13 = a1[11];
  uint64_t v12 = a1[12];
  uint64_t v14 = a1[13];
  uint64_t v133 = a1[14];
  uint64_t v137 = a1[15];
  uint64_t v15 = a1[16];
  uint64_t v136 = a1[17];
  uint64_t v16 = a2[1];
  uint64_t v140 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  uint64_t v20 = a2[5];
  uint64_t v19 = a2[6];
  uint64_t v22 = a2[7];
  uint64_t v21 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v23 = a2[10];
  uint64_t v26 = a2[11];
  uint64_t v25 = a2[12];
  uint64_t v27 = a2[13];
  uint64_t v134 = a2[14];
  uint64_t v138 = a2[15];
  uint64_t v132 = a2[16];
  uint64_t v135 = a2[17];
  if (!v3)
  {
    uint64_t v139 = a1[2];
    if (v16) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v16) {
    return 0;
  }
  uint64_t v139 = a1[2];
  if (*a1 == *a2 && v3 == v16) {
    goto LABEL_8;
  }
  uint64_t v128 = a2[10];
  uint64_t v112 = a2[7];
  uint64_t v99 = a1[16];
  uint64_t v100 = a2[12];
  uint64_t v101 = a2[4];
  uint64_t v103 = a2[5];
  uint64_t v28 = a1[12];
  uint64_t v107 = a1[4];
  uint64_t v109 = a2[6];
  uint64_t v29 = a1[13];
  uint64_t v117 = a1[6];
  uint64_t v120 = a2[8];
  uint64_t v30 = a2[13];
  uint64_t v31 = a1[10];
  uint64_t v105 = a1[5];
  uint64_t v32 = a1[11];
  uint64_t v33 = a2[11];
  uint64_t v34 = a1[8];
  uint64_t v35 = a1[9];
  uint64_t v124 = a2[9];
  char v36 = sub_1C1520A9C();
  uint64_t v24 = v124;
  uint64_t v23 = v128;
  uint64_t v10 = v35;
  uint64_t v8 = v34;
  uint64_t v26 = v33;
  uint64_t v13 = v32;
  uint64_t v20 = v103;
  uint64_t v7 = v105;
  uint64_t v11 = v31;
  uint64_t v19 = v109;
  uint64_t v22 = v112;
  uint64_t v27 = v30;
  uint64_t v6 = v117;
  uint64_t v21 = v120;
  uint64_t v14 = v29;
  uint64_t v4 = v107;
  uint64_t v12 = v28;
  uint64_t v25 = v100;
  uint64_t v18 = v101;
  uint64_t v15 = v99;
  char v37 = v36;
  uint64_t result = 0;
  if (v37)
  {
LABEL_8:
    if (v5)
    {
      if (!v17) {
        return 0;
      }
      if (v139 != v140 || v5 != v17)
      {
        uint64_t v129 = v23;
        uint64_t v118 = v6;
        uint64_t v121 = v21;
        uint64_t v39 = v15;
        uint64_t v40 = v12;
        uint64_t v104 = v20;
        uint64_t v106 = v7;
        uint64_t v41 = v14;
        uint64_t v113 = v22;
        uint64_t v115 = v9;
        uint64_t v42 = v27;
        uint64_t v43 = v25;
        uint64_t v108 = v4;
        uint64_t v110 = v19;
        uint64_t v44 = v11;
        uint64_t v45 = v13;
        uint64_t v46 = v26;
        uint64_t v102 = v18;
        uint64_t v47 = v8;
        uint64_t v48 = v10;
        uint64_t v125 = v24;
        char v49 = sub_1C1520A9C();
        uint64_t v24 = v125;
        uint64_t v23 = v129;
        uint64_t v10 = v48;
        uint64_t v8 = v47;
        uint64_t v26 = v46;
        uint64_t v13 = v45;
        uint64_t v7 = v106;
        uint64_t v4 = v108;
        uint64_t v11 = v44;
        uint64_t v19 = v110;
        uint64_t v22 = v113;
        uint64_t v25 = v43;
        uint64_t v27 = v42;
        uint64_t v9 = v115;
        uint64_t v6 = v118;
        uint64_t v14 = v41;
        uint64_t v18 = v102;
        uint64_t v20 = v104;
        uint64_t v12 = v40;
        uint64_t v15 = v39;
        uint64_t v21 = v121;
        char v50 = v49;
        uint64_t result = 0;
        if ((v50 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v7)
    {
      if (!v20) {
        return 0;
      }
      if (v4 != v18 || v7 != v20)
      {
        uint64_t v126 = v24;
        uint64_t v130 = v23;
        uint64_t v119 = v6;
        uint64_t v122 = v21;
        uint64_t v51 = v15;
        uint64_t v52 = v12;
        uint64_t v53 = v14;
        uint64_t v114 = v22;
        uint64_t v116 = v9;
        uint64_t v54 = v27;
        uint64_t v55 = v25;
        uint64_t v111 = v19;
        uint64_t v56 = v11;
        uint64_t v57 = v13;
        uint64_t v58 = v26;
        uint64_t v59 = v8;
        uint64_t v60 = v10;
        char v61 = sub_1C1520A9C();
        uint64_t v24 = v126;
        uint64_t v23 = v130;
        uint64_t v10 = v60;
        uint64_t v8 = v59;
        uint64_t v26 = v58;
        uint64_t v13 = v57;
        uint64_t v11 = v56;
        uint64_t v19 = v111;
        uint64_t v22 = v114;
        uint64_t v25 = v55;
        uint64_t v27 = v54;
        uint64_t v9 = v116;
        uint64_t v6 = v119;
        uint64_t v14 = v53;
        uint64_t v12 = v52;
        uint64_t v15 = v51;
        uint64_t v21 = v122;
        char v62 = v61;
        uint64_t result = 0;
        if ((v62 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v9)
    {
      if (!v22) {
        return 0;
      }
      if (v6 != v19 || v9 != v22)
      {
        uint64_t v127 = v24;
        uint64_t v131 = v23;
        uint64_t v123 = v21;
        uint64_t v63 = v15;
        uint64_t v64 = v12;
        uint64_t v65 = v14;
        uint64_t v66 = v27;
        uint64_t v67 = v25;
        uint64_t v68 = v11;
        uint64_t v69 = v13;
        uint64_t v70 = v26;
        uint64_t v71 = v8;
        uint64_t v72 = v10;
        char v73 = sub_1C1520A9C();
        uint64_t v24 = v127;
        uint64_t v23 = v131;
        uint64_t v10 = v72;
        uint64_t v8 = v71;
        uint64_t v26 = v70;
        uint64_t v13 = v69;
        uint64_t v11 = v68;
        uint64_t v25 = v67;
        uint64_t v27 = v66;
        uint64_t v14 = v65;
        uint64_t v12 = v64;
        uint64_t v15 = v63;
        uint64_t v21 = v123;
        char v74 = v73;
        uint64_t result = 0;
        if ((v74 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v10)
    {
      if (!v24) {
        return 0;
      }
      if (v8 != v21 || v10 != v24)
      {
        uint64_t v75 = v23;
        uint64_t v76 = v15;
        uint64_t v77 = v12;
        uint64_t v78 = v14;
        uint64_t v79 = v27;
        uint64_t v80 = v25;
        uint64_t v81 = v11;
        uint64_t v82 = v13;
        uint64_t v83 = v26;
        char v84 = sub_1C1520A9C();
        uint64_t v23 = v75;
        uint64_t v26 = v83;
        uint64_t v13 = v82;
        uint64_t v11 = v81;
        uint64_t v25 = v80;
        uint64_t v27 = v79;
        uint64_t v14 = v78;
        uint64_t v12 = v77;
        uint64_t v15 = v76;
        char v85 = v84;
        uint64_t result = 0;
        if ((v85 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    if (v13)
    {
      if (!v26) {
        return 0;
      }
      if (v11 != v23 || v13 != v26)
      {
        uint64_t v86 = v15;
        uint64_t v87 = v12;
        uint64_t v88 = v14;
        uint64_t v89 = v27;
        uint64_t v90 = v25;
        char v91 = sub_1C1520A9C();
        uint64_t v25 = v90;
        uint64_t v27 = v89;
        uint64_t v14 = v88;
        uint64_t v12 = v87;
        uint64_t v15 = v86;
        char v92 = v91;
        uint64_t result = 0;
        if ((v92 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v26)
    {
      return 0;
    }
    if (v14)
    {
      if (!v27) {
        return 0;
      }
      if (v12 != v25 || v14 != v27)
      {
        uint64_t v93 = v15;
        char v94 = sub_1C1520A9C();
        uint64_t v15 = v93;
        char v95 = v94;
        uint64_t result = 0;
        if ((v95 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v27)
    {
      return 0;
    }
    if (v137)
    {
      if (!v138) {
        return 0;
      }
      if (v133 != v134 || v137 != v138)
      {
        uint64_t v96 = v15;
        char v97 = sub_1C1520A9C();
        uint64_t v15 = v96;
        char v98 = v97;
        uint64_t result = 0;
        if ((v98 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v138)
    {
      return 0;
    }
    if (v136)
    {
      if (v135 && (v15 == v132 && v136 == v135 || (sub_1C1520A9C() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v135)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C0CB2F64()
{
  unint64_t result = qword_1EB8657C8;
  if (!qword_1EB8657C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657C8);
  }
  return result;
}

unint64_t sub_1C0CB2FB8()
{
  unint64_t result = qword_1EB8657E0;
  if (!qword_1EB8657E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657E0);
  }
  return result;
}

uint64_t sub_1C0CB300C(uint64_t a1)
{
  return a1;
}

void sub_1C0CB30B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0CB3120()
{
  unint64_t result = qword_1EB86B880;
  if (!qword_1EB86B880)
  {
    sub_1C0CB30B8(255, &qword_1EB86B888, (uint64_t (*)(void))sub_1C0CB2F64, (uint64_t)&type metadata for FormatPuzzle.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B880);
  }
  return result;
}

void sub_1C0CB31B0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C0CB31FC(void *a1)
{
  a1[1] = sub_1C0A94710();
  a1[2] = sub_1C0A94768();
  unint64_t result = sub_1C0CB3234();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0CB3234()
{
  unint64_t result = qword_1EA1A57E8;
  if (!qword_1EA1A57E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A57E8);
  }
  return result;
}

uint64_t sub_1C0CB3288(void *a1)
{
  a1[1] = sub_1C0CB3314(&qword_1EB865820);
  a1[2] = sub_1C0CB3314((unint64_t *)&unk_1EB865810);
  uint64_t result = sub_1C0CB3314(&qword_1EA1A57F0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0CB3314(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatPuzzle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatPuzzle()
{
  return self;
}

uint64_t sub_1C0CB3378@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = (_OWORD *)*a1;
  swift_beginAccess();
  long long v4 = v3[7];
  long long v5 = v3[8];
  long long v6 = v3[9];
  v15[8] = v3[10];
  long long v7 = v3[8];
  v15[7] = v3[9];
  long long v8 = v3[3];
  long long v10 = v3[5];
  long long v9 = v3[6];
  _OWORD v15[2] = v3[4];
  v15[3] = v10;
  v15[5] = v4;
  void v15[6] = v5;
  v15[4] = v9;
  v15[0] = v3[2];
  v15[1] = v8;
  a2[6] = v7;
  a2[7] = v6;
  a2[8] = v3[10];
  long long v11 = v3[5];
  a2[2] = v3[4];
  a2[3] = v11;
  long long v12 = v3[7];
  a2[4] = v3[6];
  a2[5] = v12;
  long long v13 = v3[3];
  *a2 = v3[2];
  a2[1] = v13;
  return sub_1C0153E30((uint64_t)v15);
}

uint64_t sub_1C0CB3424@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 176);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0CB3474@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 184);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatPuzzle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatPuzzle);
}

uint64_t dispatch thunk of FormatPuzzle.__allocating_init(identifier:overrides:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatPuzzle.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for FormatPuzzle.Overrides()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatPuzzle.Overrides(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatPuzzle.Overrides(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatPuzzle.Overrides(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPuzzle.Overrides(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPuzzle.Overrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzle.Overrides()
{
  return &type metadata for FormatPuzzle.Overrides;
}

unsigned char *storeEnumTagSinglePayload for FormatPuzzle.Overrides.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    void *result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0CB3A14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzle.Overrides.CodingKeys()
{
  return &type metadata for FormatPuzzle.Overrides.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FormatPuzzle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0CB3B18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzle.CodingKeys()
{
  return &type metadata for FormatPuzzle.CodingKeys;
}

unint64_t sub_1C0CB3B54()
{
  unint64_t result = qword_1EA1A57F8;
  if (!qword_1EA1A57F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A57F8);
  }
  return result;
}

unint64_t sub_1C0CB3BAC()
{
  unint64_t result = qword_1EA1A5800;
  if (!qword_1EA1A5800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5800);
  }
  return result;
}

unint64_t sub_1C0CB3C04()
{
  unint64_t result = qword_1EB8657F0;
  if (!qword_1EB8657F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657F0);
  }
  return result;
}

unint64_t sub_1C0CB3C5C()
{
  unint64_t result = qword_1EB8657E8;
  if (!qword_1EB8657E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657E8);
  }
  return result;
}

unint64_t sub_1C0CB3CB4()
{
  unint64_t result = qword_1EB8657D8;
  if (!qword_1EB8657D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657D8);
  }
  return result;
}

unint64_t sub_1C0CB3D0C()
{
  unint64_t result = qword_1EB8657D0;
  if (!qword_1EB8657D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8657D0);
  }
  return result;
}

uint64_t sub_1C0CB3D60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C43726573616574 && a2 == 0xEA00000000006575 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E41726573616574 && a2 == 0xEC00000072657773 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E49726573616574 && a2 == 0xEA00000000006F66 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6944726573616574 && a2 == 0xEF6E6F6974636572 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x754E726573616574 && a2 == 0xEC0000007265626DLL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t FormatSplitView.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  return sub_1C0CB41D0(v3, a1);
}

uint64_t sub_1C0CB41D0(uint64_t a1, uint64_t a2)
{
  sub_1BFC3E490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CB4234(uint64_t a1, void *a2)
{
  sub_1BFC3E490();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1C0CB41D0(a1, (uint64_t)&v12 - v8);
  uint64_t v10 = *a2 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  sub_1C0CB4408((uint64_t)v9, v10);
  swift_endAccess();
  sub_1C0CB41D0(v10, (uint64_t)v6);
  sub_1C151CE0C();
  return sub_1C0CB446C((uint64_t)v9);
}

uint64_t FormatSplitView.model.setter(uint64_t a1)
{
  sub_1BFC3E490();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  sub_1C0CB4408(a1, v6);
  swift_endAccess();
  sub_1C0CB41D0(v6, (uint64_t)v5);
  sub_1C151CE0C();
  return sub_1C0CB446C(a1);
}

uint64_t sub_1C0CB4408(uint64_t a1, uint64_t a2)
{
  sub_1BFC3E490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CB446C(uint64_t a1)
{
  sub_1BFC3E490();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*FormatSplitView.model.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_1BFC3E490();
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  v3[4] = v5;
  v3[5] = v6;
  swift_beginAccess();
  return sub_1C0CB4564;
}

void sub_1C0CB4564(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  uint64_t v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    sub_1C0CB41D0(v3[3] + v3[5], v3[4]);
    sub_1C151CE0C();
  }
  free(v4);
  free(v3);
}

id FormatSplitView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *FormatSplitView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed15FormatSplitView_splitView;
  id v11 = objc_allocWithZone((Class)sub_1C151CE1C());
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  long long v13 = &v12[OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model];
  uint64_t v14 = sub_1C151A6AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);

  v19.receiver = v12;
  v19.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC8NewsFeed15FormatSplitView_splitView];
  uint64_t v17 = v15;
  objc_msgSend(v17, sel_addSubview_, v16);
  objc_msgSend(v17, sel_setClipsToBounds_, 1);

  return v17;
}

Swift::Void __swiftcall FormatSplitView.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed15FormatSplitView_splitView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

id FormatSplitView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall FormatSplitView.prepareForReuse()()
{
}

uint64_t sub_1C0CB4A5C()
{
  return sub_1C151CDFC();
}

void sub_1C0CB4A8C()
{
  sub_1C0CB4B7C(&qword_1EA1A5818);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C0CB4AE4()
{
  return sub_1C0CB4B7C(&qword_1EA1A5810);
}

uint64_t sub_1C0CB4B18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8NewsFeed15FormatSplitView_model;
  swift_beginAccess();
  return sub_1C0CB41D0(v3, a2);
}

uint64_t sub_1C0CB4B74()
{
  return type metadata accessor for FormatSplitView();
}

uint64_t sub_1C0CB4B7C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatSplitView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1C0CB4BC0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    id v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v8((uint64_t *)v14, (uint64_t *)v15, v7);
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1C151526C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[10];
    uint64_t v25 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + v24) = (uint64_t)v25;
    id v26 = v25;
  }
  return a1;
}

void sub_1C0CB4D78(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1C151631C();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + a2[7], v4);
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = *(void **)(a1 + a2[10]);
}

uint64_t sub_1C0CB4EA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v24;
  id v25 = v24;
  return a1;
}

uint64_t sub_1C0CB5010(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[10];
  uint64_t v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  return a1;
}

uint64_t sub_1C0CB5190(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1C0CB52D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  void *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[10];
  id v22 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);

  return a1;
}

uint64_t sub_1C0CB5438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0CB544C);
}

uint64_t sub_1C0CB544C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_1C1515FDC();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[8];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = sub_1C151526C();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1C0CB55D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0CB55E4);
}

uint64_t sub_1C0CB55E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1C151631C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[8];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = sub_1C151526C();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[9];
  return v16(v18, a2, a2, v17);
}

uint64_t UIUserInterfaceIdiom.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 + 1;
  uint64_t result = 0x79616C50726163;
  switch(v1)
  {
    case 0:
      uint64_t result = 0x6669636570736E75;
      break;
    case 1:
      uint64_t result = 0x656E6F6870;
      break;
    case 2:
      uint64_t result = 6578544;
      break;
    case 3:
      uint64_t result = 30324;
      break;
    case 4:
      return result;
    case 6:
      uint64_t result = 6513005;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1C0CB583C()
{
  uint64_t result = 0x79616C50726163;
  switch(*v0)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      uint64_t result = 0x6669636570736E75;
      break;
    case 0:
      uint64_t result = 0x656E6F6870;
      break;
    case 1:
      uint64_t result = 6578544;
      break;
    case 2:
      uint64_t result = 30324;
      break;
    case 3:
      return result;
    case 5:
      uint64_t result = 6513005;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1C0CB5914()
{
  uint64_t v34 = sub_1C151B0DC();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v31 = (char *)&v24 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1C1519F3C();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v30 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1C151A67C();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151A68C();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v5);
  id v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1519F4C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C1519F5C();
  uint64_t v11 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE4F384(0, &qword_1EB871508, MEMORY[0x1E4FABBA8]);
  uint64_t v14 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v14(v10, *MEMORY[0x1E4FABB98], v7);
  sub_1C151B31C();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v14(v10, *MEMORY[0x1E4FABBA0], v7);
  sub_1C151B31C();
  v15(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FABBB0], v24);
  sub_1BFE4F384(0, (unint64_t *)&unk_1EB871520, MEMORY[0x1E4FABFA0]);
  uint64_t v16 = v25;
  uint64_t v17 = v26;
  uint64_t v18 = *(void (**)(char *, void, uint64_t))(v26 + 104);
  uint64_t v19 = v27;
  v18(v4, *MEMORY[0x1E4FABF90], v27);
  sub_1C151B30C();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v17 + 8);
  v20(v4, v19);
  v18(v4, *MEMORY[0x1E4FABF98], v19);
  sub_1C151B30C();
  v20(v4, v19);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v16, *MEMORY[0x1E4FABFA8], v29);
  sub_1BFE4F3F0();
  sub_1C1519F2C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
  sub_1BFE4DBE0();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C15418C0;
  *(void *)(v21 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v21 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 1.0, 0.67);
  *(void *)(v21 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 1.0, 0.67);
  *(void *)(v21 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 1.0, 0.0);
  uint64_t v37 = v21;
  sub_1C151EBEC();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAC400], v34);
  id v22 = v30;
  sub_1C151B09C();
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v22, *MEMORY[0x1E4FABB90], v35);
  char v36 = 0;
  sub_1C1519F1C();
  sub_1C151A22C();
  swift_allocObject();
  uint64_t result = sub_1C151A21C();
  qword_1EB86F008 = result;
  return result;
}

uint64_t static ShineOptions.titleShine.getter()
{
  if (qword_1EB86F018 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1C0CB60B0(char *a1, char *a2)
{
  return sub_1C148A9E4(*a1, *a2);
}

uint64_t sub_1C0CB60BC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0CB614C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0CB61C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0CB6254@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0CB62B4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746163696C627570;
  if (*v1) {
    uint64_t v2 = 0x6574614474726F73;
  }
  unint64_t v3 = 0xEF657461446E6F69;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0CB6300()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0CB6360()
{
  return sub_1C151EAEC();
}

void sub_1C0CB63B0(void *a1@<X8>)
{
  *a1 = &unk_1F1B6A270;
}

BOOL static FormatIssueBinding.DateTime.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatIssueBinding.DateTime.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatIssueBinding.DateTime.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0CB6450()
{
  unint64_t result = qword_1EA1A5820;
  if (!qword_1EA1A5820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5820);
  }
  return result;
}

unint64_t sub_1C0CB64A4(uint64_t a1)
{
  unint64_t result = sub_1C0CB64CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0CB64CC()
{
  unint64_t result = qword_1EA1A5828;
  if (!qword_1EA1A5828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5828);
  }
  return result;
}

unint64_t sub_1C0CB6520(void *a1)
{
  a1[1] = sub_1C0882D84();
  a1[2] = sub_1C08FAA4C();
  unint64_t result = sub_1C0CB6450();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0CB6558@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatIssueBinding.DateTime.init(from:)(a1, a2);
}

uint64_t sub_1C0CB6570(void *a1)
{
  return FormatIssueBinding.DateTime.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatIssueBinding.DateTime()
{
  return &type metadata for FormatIssueBinding.DateTime;
}

unsigned char *_s8DateTimeOwst_1_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0CB6668);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8DateTimeO10CodingTypeOMa_1()
{
  return &_s8DateTimeO10CodingTypeON_1;
}

unint64_t sub_1C0CB66A4()
{
  unint64_t result = qword_1EA1A5830;
  if (!qword_1EA1A5830)
  {
    sub_1C0CB66FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5830);
  }
  return result;
}

void sub_1C0CB66FC()
{
  if (!qword_1EA1A5838)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A5838);
    }
  }
}

unint64_t sub_1C0CB6758()
{
  unint64_t result = qword_1EA1A5840;
  if (!qword_1EA1A5840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5840);
  }
  return result;
}

unint64_t sub_1C0CB67AC()
{
  unint64_t result = qword_1EA1A5848;
  if (!qword_1EA1A5848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5848);
  }
  return result;
}

uint64_t FeedDateRange.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151631C();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FeedDateRange.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedDateRange();
  return sub_1BFF979B0(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))sub_1BFF97C40);
}

uint64_t FeedDateRange.init(startDate:endDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for FeedDateRange() + 20);
  return sub_1BFCB311C(a2, v7);
}

uint64_t FeedDateRange.init(dateRange:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = MEMORY[0x1F4188790](v11).n128_u64[0];
  uint64_t v14 = (char *)&v24 - v13;
  id v15 = objc_msgSend(a1, sel_startDate, v12);
  if (!v15)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
    goto LABEL_8;
  }
  uint64_t v16 = v15;
  sub_1C15162BC();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v17(v14, v7, v4);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v14, 0, 1, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v17(a2, v14, v4);
  id v20 = objc_msgSend(a1, sel_endDate);
  if (v20)
  {
    uint64_t v21 = v20;
    sub_1C15162BC();

    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }

  v18(v10, v22, 1, v4);
  uint64_t v23 = type metadata accessor for FeedDateRange();
  return sub_1BFCB311C((uint64_t)v10, (uint64_t)&a2[*(int *)(v23 + 20)]);
}

uint64_t sub_1C0CB6BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0CB7A00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CB6BD0(uint64_t a1)
{
  unint64_t v2 = sub_1BFCB30C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0CB6C0C(uint64_t a1)
{
  unint64_t v2 = sub_1BFCB30C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedDateRange.encode(to:)(void *a1)
{
  sub_1BFCB2E38(0, &qword_1EB85C630, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB30C8();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C151631C();
  sub_1BFE0D898((unint64_t *)&unk_1EB871150);
  sub_1C152080C();
  if (!v1)
  {
    type metadata accessor for FeedDateRange();
    v9[14] = 1;
    sub_1C152078C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0CB6E08(void *a1)
{
  return FeedDateRange.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedDateRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151631C();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    double v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      sub_1BFF97C40();
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FeedDateRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BFF97C40();
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BFF97C40();
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for FeedDateRange(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BFF97C40();
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedDateRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0CB76A8);
}

uint64_t sub_1C0CB76A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1C0CB77A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_1BFF97C40();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

unsigned char *storeEnumTagSinglePayload for FeedDateRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0CB7970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedDateRange.CodingKeys()
{
  return &type metadata for FeedDateRange.CodingKeys;
}

unint64_t sub_1C0CB79AC()
{
  unint64_t result = qword_1EA1A5850;
  if (!qword_1EA1A5850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5850);
  }
  return result;
}

uint64_t sub_1C0CB7A00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

NewsFeed::NewslettersCommandState_optional __swiftcall NewslettersCommandState.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t NewslettersCommandState.rawValue.getter()
{
  if (*v0) {
    return 0x6269726373627573;
  }
  else {
    return 0x7263736275736E75;
  }
}

uint64_t sub_1C0CB7BB0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0CB7C40()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0CB7CBC()
{
  return sub_1C1520E0C();
}

NewsFeed::NewslettersCommandState_optional sub_1C0CB7D48(Swift::String *a1)
{
  return NewslettersCommandState.init(rawValue:)(*a1);
}

void sub_1C0CB7D54(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7263736275736E75;
  if (*v1) {
    uint64_t v2 = 0x6269726373627573;
  }
  unint64_t v3 = 0xEC00000064656269;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006465;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0CB7DA0(char *a1, char *a2)
{
  return sub_1C1481EB4(*a1, *a2);
}

uint64_t sub_1C0CB7DB0(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB7F00();
  return MEMORY[0x1F4163458](a1, v2);
}

unsigned char *storeEnumTagSinglePayload for NewslettersCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0CB7EC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewslettersCommandState()
{
  return &type metadata for NewslettersCommandState;
}

unint64_t sub_1C0CB7F00()
{
  unint64_t result = qword_1EA1A5858;
  if (!qword_1EA1A5858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5858);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceRecord.rank.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0CB7F98()
{
  return 1802396018;
}

uint64_t sub_1C0CB7FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1802396018 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0CB8030(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB8218();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0CB806C(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB8218();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsEmbedConfigResourceRecord.encode(to:)(void *a1)
{
  sub_1C0CB8464(0, &qword_1EA1A5860, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v11 - v6;
  v11[0] = *(_OWORD *)v1;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0CB8218();
  sub_1C1520F0C();
  v11[1] = v11[0];
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_1C0CB826C();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0CB8218()
{
  unint64_t result = qword_1EB869538;
  if (!qword_1EB869538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869538);
  }
  return result;
}

unint64_t sub_1C0CB826C()
{
  unint64_t result = qword_1EA1A5868;
  if (!qword_1EA1A5868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5868);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceRecord.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0CB8464(0, &qword_1EB86B738, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0CB8218();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C0CB84C8();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v10 = v13[1];
    long long v11 = v14;
    *(void *)a2 = v13[0];
    *(void *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0CB8464(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0CB8218();
    unint64_t v7 = a3(a1, &type metadata for SportsEmbedConfigResourceRecord.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0CB84C8()
{
  unint64_t result = qword_1EB868C08;
  if (!qword_1EB868C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868C08);
  }
  return result;
}

uint64_t sub_1C0CB851C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsEmbedConfigResourceRecord.init(from:)(a1, a2);
}

uint64_t sub_1C0CB8534(void *a1)
{
  return SportsEmbedConfigResourceRecord.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRecord()
{
  return &type metadata for SportsEmbedConfigResourceRecord;
}

unsigned char *storeEnumTagSinglePayload for SportsEmbedConfigResourceRecord.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0CB85F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRecord.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResourceRecord.CodingKeys;
}

unint64_t sub_1C0CB8634()
{
  unint64_t result = qword_1EA1A5870;
  if (!qword_1EA1A5870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5870);
  }
  return result;
}

unint64_t sub_1C0CB868C()
{
  unint64_t result = qword_1EB869548;
  if (!qword_1EB869548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869548);
  }
  return result;
}

unint64_t sub_1C0CB86E4()
{
  unint64_t result = qword_1EB869540;
  if (!qword_1EB869540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869540);
  }
  return result;
}

uint64_t destroy for SportsStandingRecordCompetitor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SportsStandingRecordCompetitor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsStandingRecordCompetitor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsStandingRecordCompetitor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsStandingRecordCompetitor()
{
  return &type metadata for SportsStandingRecordCompetitor;
}

uint64_t sub_1C0CB88B4(void *a1)
{
  sub_1C0CB94D8(0, &qword_1EA1A58C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0CB9364();
  sub_1C1520F0C();
  LOBYTE(v15) = 0;
  uint64_t v9 = v14;
  sub_1C15207CC();
  if (!v9)
  {
    uint64_t v11 = v12;
    if (*(void *)(v13 + 16))
    {
      char v16 = 1;
      uint64_t v15 = v13;
      sub_1C0CB953C();
      sub_1BFC6CA08(0, &qword_1EA1A58D8);
      sub_1C0CB95B0(&qword_1EA1A58E0, &qword_1EA1A58D8, (uint64_t)&type metadata for SportsStandingRecordStatistic, (void (*)(void))sub_1C0CB9310);
      sub_1C1520BAC();
    }
    if (*(void *)(v11 + 16))
    {
      char v16 = 2;
      uint64_t v15 = v11;
      sub_1C0CB953C();
      sub_1BFC6CA08(0, &qword_1EA1A58E8);
      sub_1C0CB95B0(&qword_1EA1A58F0, &qword_1EA1A58E8, (uint64_t)&type metadata for SportsStandingRecordLeague, (void (*)(void))sub_1C0CB91EC);
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0CB8B4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v42 = a2;
  sub_1C0CB9240(0, &qword_1EA1A5878, (void (*)(void))sub_1C0CB9198, (void (*)(void))sub_1C0CB91EC);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  uint64_t v40 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v34 - v5;
  sub_1C0CB9240(0, &qword_1EA1A5890, (void (*)(void))sub_1C0CB92BC, (void (*)(void))sub_1C0CB9310);
  uint64_t v8 = v7;
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - v9;
  sub_1C0CB94D8(0, &qword_1EA1A58A8, MEMORY[0x1E4FBBDC0]);
  uint64_t v12 = v11;
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0CB9364();
  uint64_t v15 = v43;
  sub_1C1520EBC();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v43 = a1;
  uint64_t v37 = v6;
  char v16 = v42;
  char v48 = 0;
  uint64_t v17 = sub_1C152069C();
  uint64_t v20 = v19;
  uint64_t v36 = v17;
  char v47 = 1;
  swift_bridgeObjectRetain();
  char v21 = sub_1C152071C();
  if (v21)
  {
    char v44 = 1;
    sub_1C0CB9448();
    sub_1C15206EC();
    uint64_t v35 = v20;
    uint64_t v22 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v35 = v20;
    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  char v46 = 2;
  uint64_t v38 = v23;
  swift_bridgeObjectRetain();
  uint64_t v24 = v14;
  char v25 = sub_1C152071C();
  uint64_t v26 = v16;
  uint64_t v27 = v40;
  uint64_t v28 = v37;
  if (v25)
  {
    char v45 = 2;
    sub_1C0CB93B8();
    uint64_t v29 = v39;
    sub_1C15206EC();
    uint64_t v30 = v24;
    uint64_t v31 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  }
  else
  {
    uint64_t v30 = v24;
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v12);
  uint64_t v33 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v26 = v36;
  v26[1] = v33;
  v26[2] = v38;
  v26[3] = v31;
  __swift_destroy_boxed_opaque_existential_1(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0CB9054()
{
  uint64_t v1 = 0x6974736974617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x4C676E6979616C70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6163696E6F6E6163;
  }
}

uint64_t sub_1C0CB90C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0CB9834(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CB90F0(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB9364();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0CB912C(uint64_t a1)
{
  unint64_t v2 = sub_1C0CB9364();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0CB9168@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0CB8B4C(a1, a2);
}

uint64_t sub_1C0CB9180(void *a1)
{
  return sub_1C0CB88B4(a1);
}

unint64_t sub_1C0CB9198()
{
  unint64_t result = qword_1EA1A5880;
  if (!qword_1EA1A5880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5880);
  }
  return result;
}

unint64_t sub_1C0CB91EC()
{
  unint64_t result = qword_1EA1A5888;
  if (!qword_1EA1A5888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5888);
  }
  return result;
}

void sub_1C0CB9240(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_1C15181BC();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C0CB92BC()
{
  unint64_t result = qword_1EA1A5898;
  if (!qword_1EA1A5898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5898);
  }
  return result;
}