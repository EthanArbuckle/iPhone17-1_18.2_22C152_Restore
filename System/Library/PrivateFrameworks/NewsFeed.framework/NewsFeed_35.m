unint64_t sub_1C122BC20()
{
  unint64_t result;

  result = qword_1EB865470;
  if (!qword_1EB865470)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865470);
  }
  return result;
}

void sub_1C122BC74()
{
  if (!qword_1EB879F58)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879F58);
    }
  }
}

void sub_1C122BCCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1516D9C();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t FeedGroupBundleArticleQuotas.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1516D9C();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v9 = (char *)&v24 - v8;
  sub_1C122C1F8(0, &qword_1EB86B850, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  v14 = (char *)&v24 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C122BC20();
  sub_1C1520F0C();
  LOBYTE(v32) = 0;
  v15 = v30;
  sub_1C15207EC();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v30 = v14;
  uint64_t v18 = v28;
  uint64_t v17 = v29;
  uint64_t v27 = v12;
  if (*(void *)(*(void *)(v2 + 8) + 16))
  {
    uint64_t v32 = *(void *)(v2 + 8);
    char v31 = 1;
    sub_1C122BC74();
    sub_1C122C25C(&qword_1EB85C490);
    sub_1C152080C();
  }
  uint64_t v26 = v11;
  uint64_t v24 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v25 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v9, v2 + *(int *)(v24 + 24), v17);
  sub_1C1516D8C();
  sub_1BFCD421C(&qword_1EB8628D0, MEMORY[0x1E4FB7810]);
  char v19 = sub_1C151E5CC();
  v20 = *(void (**)(char *, uint64_t))(v18 + 8);
  v20(v6, v17);
  v20(v9, v17);
  if (v19)
  {
    uint64_t v21 = v27;
    v22 = v30;
  }
  else
  {
    LOBYTE(v32) = 2;
    sub_1BFCD421C(&qword_1EB8628C8, MEMORY[0x1E4FB7810]);
    v22 = v30;
    sub_1C152080C();
    uint64_t v21 = v27;
  }
  if (!*(void *)(*(void *)(v25 + *(int *)(v24 + 28)) + 16)) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v22, v26);
  }
  uint64_t v32 = *(void *)(v25 + *(int *)(v24 + 28));
  char v31 = 3;
  sub_1C122BCCC(0, &qword_1EB863290, MEMORY[0x1E4FBB320]);
  sub_1C122C2BC(&qword_1EB863298, &qword_1EB8628C8);
  uint64_t v23 = v26;
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v22, v23);
}

void sub_1C122C1F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C122BC20();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupBundleArticleQuotas.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C122C25C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C122BC74();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C122C2BC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C122BCCC(255, &qword_1EB863290, MEMORY[0x1E4FBB320]);
    sub_1BFCD421C(a2, MEMORY[0x1E4FB7810]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C122C368(unsigned __int8 *a1, char *a2)
{
  return sub_1C1492FE8(*a1, *a2);
}

uint64_t sub_1C122C374()
{
  return sub_1C015E13C();
}

uint64_t sub_1C122C37C()
{
  return sub_1C044B910();
}

uint64_t sub_1C122C384()
{
  return sub_1C0450C18();
}

uint64_t sub_1C122C38C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C122D934();
  *a1 = result;
  return result;
}

void sub_1C122C3BC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEC0000006F697461;
  uint64_t v3 = 0x52746C7561666564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED0000736F697461;
      uint64_t v3 = 0x52646574746F6C73;
      goto LABEL_3;
    case 2:
      *a1 = 0xD00000000000001ALL;
      a1[1] = 0x80000001C15FDD90;
      break;
    case 3:
      *a1 = 0xD00000000000001CLL;
      a1[1] = 0x80000001C15FDDB0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1C122C478()
{
  unint64_t result = 0x52746C7561666564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x52646574746F6C73;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C122C528@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C122D934();
  *a1 = result;
  return result;
}

uint64_t sub_1C122C550(uint64_t a1)
{
  unint64_t v2 = sub_1C122BC20();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C122C58C(uint64_t a1)
{
  unint64_t v2 = sub_1C122BC20();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C122C5CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupBundleArticleQuotas.init(from:)(a1, a2);
}

uint64_t sub_1C122C5E4(void *a1)
{
  return FeedGroupBundleArticleQuotas.encode(to:)(a1);
}

uint64_t sub_1C122C600()
{
  uint64_t v0 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1F4188790](v0);
  unint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8654A0 != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB865488);
  sub_1C122D980(v3, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  sub_1C00C8FD4();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_1C11A6DE4((uint64_t)v2, v4 + *(void *)(*(void *)v4 + 112));
  *(void *)(v4 + *(void *)(*(void *)v4 + 120)) = MEMORY[0x1E4FBC860];
  qword_1EB865318 = v4;
  return result;
}

uint64_t static FeedGroupKnobsRuleValue<>.zero.getter()
{
  if (qword_1EB865328 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t FeedGroupBundleArticleQuotas.merge(explicitSlotBundleArticleQuotas:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C1516D9C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (double *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C122BCCC(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v27 - v17;
  if (!a1) {
    return sub_1C122D980((uint64_t)v3, a2, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
  }
  uint64_t v29 = v9;
  uint64_t v30 = a2;
  uint64_t v19 = sub_1C122CA9C(v3, a1);
  uint64_t v28 = v20;
  double v21 = *v3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, (char *)v3 + *(int *)(v10 + 24), v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  *uint64_t v12 = v21;
  *((void *)v12 + 1) = v19;
  sub_1C0EF8318((uint64_t)v18, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    swift_bridgeObjectRetain();
    v22 = v29;
    sub_1C1516D8C();
    sub_1C122B134((uint64_t)v15);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v12 + *(int *)(v10 + 24), v22, v6);
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v25 = v29;
    v24(v29, v15, v6);
    swift_bridgeObjectRetain();
    v24((char *)v12 + *(int *)(v10 + 24), v25, v6);
  }
  uint64_t v26 = sub_1C122B2E8(v28, v19, (uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C122B134((uint64_t)v18);
  *(void *)((char *)v12 + *(int *)(v10 + 28)) = v26;
  return sub_1C11A6DE4((uint64_t)v12, v30);
}

uint64_t sub_1C122CA9C(double *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupBundleArticleQuotas();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C122BCCC(0, (unint64_t *)&qword_1EB8628E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  v9 = (char *)&v42 - v8;
  uint64_t v10 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (unint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1C1516D9C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  v51 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = (void *)*((void *)a1 + 1);
  uint64_t v46 = v4;
  uint64_t v20 = *(int *)(v4 + 28);
  v50 = a1;
  unint64_t v52 = *(void *)((char *)a1 + v20);
  v53 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v42 = a2;
  uint64_t v21 = sub_1C122A80C(a2);
  int64_t v22 = sub_1C14C6234(v21);
  LOBYTE(a2) = v23;
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v25 = 0;
  if ((a2 & 1) == 0)
  {
    int64_t v25 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      goto LABEL_26;
    }
  }
  uint64_t v26 = v19[2];
  BOOL v27 = __OFSUB__(v25, v26);
  uint64_t v28 = v25 - v26;
  if (v27) {
    goto LABEL_24;
  }
  uint64_t v29 = v50;
  uint64_t v30 = sub_1C122AAD8(v28 & ~(v28 >> 63), *v50);
  sub_1C104B7E4(v30);
  char v31 = (char *)v29 + *(int *)(v46 + 24);
  v44 = *(uint64_t (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v45 = v14 + 16;
  uint64_t result = v44(v18, v31, v13);
  uint64_t v32 = *(void *)(v52 + 16);
  BOOL v27 = __OFSUB__(v25, v32);
  uint64_t v33 = v25 - v32;
  if (!v27)
  {
    uint64_t v34 = sub_1C122A930((uint64_t)v18, v33 & ~(v33 >> 63));
    sub_1C104B7B8(v34);
    uint64_t v35 = *(void *)(v42 + 16);
    if (!v35) {
      return (uint64_t)v53;
    }
    uint64_t v36 = v42 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    uint64_t v37 = *(void *)(v48 + 72);
    v43 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v47 = v14 + 40;
    uint64_t v48 = v37;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C122D980(v36, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      unint64_t v38 = *v12;
      unint64_t v39 = v12[1];
      v40 = v53;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        if ((v38 & 0x8000000000000000) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1C0378FAC(v40);
        v40 = (void *)result;
        if ((v38 & 0x8000000000000000) != 0) {
          goto LABEL_23;
        }
      }
      if (v38 >= v40[2]) {
        break;
      }
      v40[v38 + 4] = v39;
      v53 = v40;
      sub_1C0EF8318((uint64_t)v12 + *(int *)(v49 + 24), (uint64_t)v9);
      sub_1C122D980((uint64_t)v50, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
      {
        v44(v51, &v6[*(int *)(v46 + 24)], v13);
        sub_1C122D9E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
        sub_1C122B134((uint64_t)v9);
      }
      else
      {
        sub_1C122D9E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
        (*v43)(v51, v9, v13);
      }
      unint64_t v41 = v52;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1C0378F98(v41);
        unint64_t v41 = result;
        unint64_t v52 = result;
      }
      if (v38 >= *(void *)(v41 + 16)) {
        goto LABEL_22;
      }
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 40))(v41+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v38, v51, v13);
      sub_1C122D9E8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      v36 += v48;
      if (!--v35)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v53;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t FeedGroupBundleArticleQuotas.xavierQuotas.getter()
{
  uint64_t v1 = sub_1C1516D9C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedGroupBundleArticleQuotas();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v5 + 24), v1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1C1516DEC();
}

uint64_t _s8NewsFeed0B24GroupBundleArticleQuotasV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  if (!sub_1C00F1720(*(void *)(a1 + 8), *(void *)(a2 + 8))) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if ((MEMORY[0x1C18BE8B0](a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 28);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a2 + v5);
  return sub_1C00F2D8C(v6, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedGroupBundleArticleQuotas(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1516D9C();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FeedGroupBundleArticleQuotas(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1516D9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FeedGroupBundleArticleQuotas(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1516D9C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FeedGroupBundleArticleQuotas(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1516D9C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FeedGroupBundleArticleQuotas(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1516D9C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for FeedGroupBundleArticleQuotas(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1516D9C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C122D5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1516D9C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C122D680(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1516D9C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupBundleArticleQuotas.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C122D7F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupBundleArticleQuotas.CodingKeys()
{
  return &type metadata for FeedGroupBundleArticleQuotas.CodingKeys;
}

unint64_t sub_1C122D830()
{
  unint64_t result = qword_1EA1AD340;
  if (!qword_1EA1AD340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD340);
  }
  return result;
}

unint64_t sub_1C122D888()
{
  unint64_t result = qword_1EB865480;
  if (!qword_1EB865480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865480);
  }
  return result;
}

unint64_t sub_1C122D8E0()
{
  unint64_t result = qword_1EB865478;
  if (!qword_1EB865478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865478);
  }
  return result;
}

uint64_t sub_1C122D934()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C122D980(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C122D9E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C122DA48@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v41 = a3;
  unint64_t v6 = a2;
  uint64_t v32 = a4;
  v43[2] = *MEMORY[0x1E4F143B8];
  if (a2 >> 62) {
    goto LABEL_28;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v8)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v32 = a1;
    return result;
  }
LABEL_3:
  uint64_t v9 = 0;
  unint64_t v35 = v6;
  unint64_t v36 = v6 & 0xC000000000000001;
  unint64_t v33 = v6 + 32;
  uint64_t v34 = v8;
  while (1)
  {
    uint64_t v10 = a1;
    if (v36)
    {
      a1 = MEMORY[0x1C18C7CB0](v9, v6);
      BOOL v11 = __OFADD__(v9++, 1);
      if (v11) {
        goto LABEL_27;
      }
    }
    else
    {
      a1 = *(void *)(v33 + 8 * v9);
      swift_retain();
      BOOL v11 = __OFADD__(v9++, 1);
      if (v11)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_1C15204BC();
        if (!v8) {
          goto LABEL_29;
        }
        goto LABEL_3;
      }
    }
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v40 = a1;
    uint64_t v12 = *(void *)(a1 + 16);
    uint64_t v13 = *(void *)(a1 + 24);
    v43[0] = v12;
    v43[1] = v13;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1BFEF53C0(v43);
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15) {
      break;
    }
    swift_bridgeObjectRelease();
    a1 = v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    if (v9 == v8) {
      goto LABEL_29;
    }
  }
  uint64_t v38 = v10;
  uint64_t v39 = v9;
  uint64_t v37 = v14;
  uint64_t v16 = (uint64_t *)(v14 + 64);
  while (1)
  {
    uint64_t v42 = v5;
    uint64_t v17 = *(v16 - 1);
    uint64_t v18 = *v16;
    char v19 = *(unsigned char *)(v17 + 32);
    unsigned int v20 = v19 & 0x3F;
    unint64_t v21 = (unint64_t)((1 << v19) + 63) >> 6;
    size_t v22 = 8 * v21;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v20 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v24 = (char *)swift_slowAlloc();
    bzero(v24, v22);
    BOOL v27 = v42;
    uint64_t v28 = sub_1BFEFB09C((uint64_t)v24, v21, v17, v41);
    uint64_t v5 = v27;
    if (v27) {
      goto LABEL_30;
    }
    uint64_t v26 = v28;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v24, -1, -1);
LABEL_23:
    char v29 = sub_1BFEFAE14(v26, v17);
    swift_release();
    if (v29)
    {
      char v30 = sub_1BFEFB810(v41, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30)
      {
        a1 = *(void *)(v40 + 32);
        swift_bridgeObjectRelease();
        uint64_t v8 = v34;
        unint64_t v6 = v35;
        uint64_t v9 = v39;
        goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v16 += 5;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v39;
      a1 = v38;
      uint64_t v8 = v34;
      unint64_t v6 = v35;
      goto LABEL_5;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v24 = (char *)&v32 - ((v22 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v24, v22);
  int64_t v25 = v42;
  uint64_t v26 = sub_1BFEFB09C((uint64_t)v24, v21, v17, v41);
  uint64_t v5 = v25;
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_23;
  }
  swift_willThrow();

  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1C18C9B00](v24, -1, -1);
  __break(1u);
  return result;
}

uint64_t FormatServiceGroupContext.__allocating_init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v14 = swift_allocObject();
  FormatServiceGroupContext.init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t FormatServiceGroupContext.init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  type metadata accessor for FeedGroupKnobsRules();
  uint64_t v12 = sub_1C151FD8C();
  uint64_t v13 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v26, a2, v12);
  uint64_t v14 = *a7;
  char v21 = *((unsigned char *)a7 + 8);
  char v22 = *((unsigned char *)a7 + 9);
  *(void *)(v7 + *(void *)(*(void *)v7 + 112)) = a1;
  type metadata accessor for FormatServiceGroupContext.CursorContainer();
  swift_storeEnumTagMultiPayload();
  v13((unsigned char *)(v7 + *(void *)(*(void *)v7 + 136)), v26, v12);
  *(void *)(v7 + 32) = a3;
  uint64_t v15 = v7 + *(void *)(*(void *)v7 + 120);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v15, a4, AssociatedTypeWitness);
  uint64_t v17 = (void *)(v7 + *(void *)(*(void *)v7 + 128));
  *uint64_t v17 = a5;
  v17[1] = a6;
  if (v22)
  {
    uint64_t v18 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 184));
    uint64_t v14 = *v18;
    int v19 = *((unsigned __int8 *)v18 + 8);
    if (v19 == 1) {
      uint64_t v14 = v14 != 0;
    }
    else {
      LOBYTE(v19) = 0;
    }
  }
  else
  {
    LOBYTE(v19) = v21 & 1;
  }
  *(void *)(v7 + 16) = v14;
  *(unsigned char *)(v7 + 24) = v19;
  return v7;
}

uint64_t type metadata accessor for FormatServiceGroupContext.CursorContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatServiceGroupContext.__allocating_init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  FormatServiceGroupContext.init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t FormatServiceGroupContext.init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v43 = a1;
  uint64_t v44 = a4;
  uint64_t v35 = a3;
  uint64_t v11 = *(void *)(*(void *)v7 + 80);
  uint64_t v12 = *(void *)(*(void *)v7 + 88);
  uint64_t v42 = type metadata accessor for LegacyFeedGroupEmitterInitialCursorContext();
  uint64_t v13 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v38 = (char *)&v32 - v14;
  type metadata accessor for FeedGroupKnobsRules();
  uint64_t v15 = sub_1C151FD8C();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16((char *)v45 + 1, a2, v15);
  uint64_t v34 = *(void *)a7;
  int v33 = *(unsigned __int8 *)(a7 + 8);
  int v37 = *(unsigned __int8 *)(a7 + 9);
  uint64_t v17 = v8 + *(void *)(*(void *)v8 + 112);
  uint64_t v41 = v13;
  unint64_t v36 = *(void (**)(void))(v13 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v17, v43, v42);
  type metadata accessor for FormatServiceGroupContext.CursorContainer();
  swift_storeEnumTagMultiPayload();
  v16((char *)(v8 + *(void *)(*(void *)v8 + 136)), (uint64_t)v45 + 1, v15);
  *(void *)(v8 + 32) = v35;
  uint64_t v18 = v8 + *(void *)(*(void *)v8 + 120);
  swift_getAssociatedTypeWitness();
  uint64_t v35 = v11;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v19 = v42;
  swift_getAssociatedConformanceWitness();
  uint64_t v20 = v43;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v18, v44, AssociatedTypeWitness);
  char v23 = (void *)(v8 + *(void *)(*(void *)v8 + 128));
  uint64_t v24 = v38;
  uint64_t v25 = v40;
  *char v23 = v39;
  v23[1] = v25;
  uint64_t v26 = v24;
  v36();
  if (v37)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 72))(v45, v35, v12);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v44, AssociatedTypeWitness);
    BOOL v27 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v27(v20, v19);
    v27((uint64_t)v26, v19);
    uint64_t v28 = LOBYTE(v45[0]);
    if (LOBYTE(v45[0]))
    {
      if (LOBYTE(v45[0]) == 1)
      {
        uint64_t v28 = 1;
        char v29 = 1;
      }
      else
      {
        char v29 = 0;
        uint64_t v28 = 0x4122750000000000;
      }
    }
    else
    {
      char v29 = 1;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v44, AssociatedTypeWitness);
    char v30 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v30(v20, v19);
    v30((uint64_t)v26, v19);
    char v29 = v33 & 1;
    uint64_t v28 = v34;
  }
  *(void *)(v8 + 16) = v28;
  *(unsigned char *)(v8 + 24) = v29;
  return v8;
}

Swift::Int __swiftcall FormatServiceGroupContext.countPriorGroups(kind:)(Swift::String kind)
{
  uint64_t v1 = type metadata accessor for FormatServiceGroupContext.CursorContainer();
  sub_1C122E774(v1);
  type metadata accessor for FeedCursorGroup();
  Swift::Int v2 = sub_1C151EBFC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C122E774(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v2 + 16))(v5, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for FeedCursorGroup();
    uint64_t v6 = sub_1C151ECBC();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    uint64_t v6 = *(void *)(*(void *)v5 + *(void *)(**(void **)v5 + 136));
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v6;
}

uint64_t sub_1C122E8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v12 - v7;
  type metadata accessor for FeedCursorGroup();
  uint64_t v9 = *(void (**)(void))(AssociatedConformanceWitness + 64);
  swift_checkMetadataState();
  v9();
  swift_getAssociatedConformanceWitness();
  sub_1C151EACC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  if (v14 == v13 && v15 == a3) {
    char v10 = 1;
  }
  else {
    char v10 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1C122EAF0(uint64_t a1)
{
  return sub_1C122E8A8(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

Swift::Bool __swiftcall FormatServiceGroupContext.isPriorEmittedGroup(kind:)(Swift::String kind)
{
  Swift::String v24 = kind;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v23 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v20 = (char *)&v18 - v2;
  uint64_t v3 = swift_checkMetadataState();
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v6 = type metadata accessor for FeedCursorGroup();
  uint64_t v7 = sub_1C151FD8C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for FormatServiceGroupContext.CursorContainer();
  uint64_t v25 = sub_1C122E774(v11);
  sub_1C151ED5C();
  swift_getWitnessTable();
  sub_1C151E52C();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    char v13 = 0;
  }
  else
  {
    uint64_t v14 = v19;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v5, &v10[*(int *)(v6 + 36)], v3);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v6);
    uint64_t v15 = v20;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v3, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v3);
    uint64_t v16 = v23;
    swift_getAssociatedConformanceWitness();
    sub_1C151EACC();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v16);
    if (v25 == v24._countAndFlagsBits && v26 == v24._object)
    {
      swift_bridgeObjectRelease();
      char v13 = 1;
    }
    else
    {
      char v13 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
    }
  }
  return v13 & 1;
}

uint64_t FormatServiceGroupContext.selectors(content:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v3 = *v1;
  uint64_t v41 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v41);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = (char *)v2 + *(void *)(v3 + 136);
  type metadata accessor for FeedGroupKnobsRules();
  uint64_t v10 = sub_1C151FD8C();
  uint64_t v11 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11((uint64_t *)v45, v9, v10);
  v11(v46, v45, v10);
  if (sub_1C00F6584(v46) == 1 || (uint64_t v12 = v47) == 0)
  {
    uint64_t v17 = MEMORY[0x1E4FBC870];
    goto LABEL_10;
  }
  uint64_t v13 = type metadata accessor for FormatServiceGroupContext.CursorContainer();
  swift_retain();
  sub_1C122F640(v13, (uint64_t)v8);
  unint64_t v14 = *(void *)(v12 + 24);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v17 = *(void *)(v12 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_9;
  }
  if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v15 = *(void *)&v8[*(int *)(v41 + 40)];
  uint64_t v39 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C03C7170(v16, v14, v15);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_1C1233754((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedContext);
LABEL_10:
  uint64_t v19 = type metadata accessor for FormatServiceGroupContext.CursorContainer();
  sub_1C122F640(v19, (uint64_t)v5);
  uint64_t v20 = *(void *)&v5[*(int *)(v41 + 40)];
  swift_bridgeObjectRetain();
  sub_1C1233754((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v21 = sub_1BFEF3988(v17, v20);
  uint64_t v42 = 0x696B2D70756F7267;
  uint64_t v43 = 0xEB000000002D646ELL;
  uint64_t v44 = v21;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C151EACC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C(&v42, v42, v43);
  swift_bridgeObjectRelease();
  if (*(void *)((char *)v2 + *(void *)(*v2 + 128) + 8))
  {
    uint64_t v42 = 0;
    uint64_t v43 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    uint64_t v42 = 0xD000000000000013;
    uint64_t v43 = 0x80000001C1639380;
    sub_1C151E80C();
    sub_1BFEFFC1C(&v42, v42, v43);
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = (void *)v2[4];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = sub_1C122F838(0x7365642D64656566, 0xEF726F7470697263);
    sub_1BFEF3808(v24);
    id v25 = objc_msgSend(v23, sel_alternativeFeedDescriptor);
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = sub_1C122F838(0xD000000000000013, 0x80000001C1639360);
      sub_1BFEF3808(v27);
    }
    uint64_t v28 = (uint64_t *)(v40 + *(int *)(type metadata accessor for FormatContent(0) + 24));
    uint64_t v29 = v28[1];
    if (v29)
    {
      uint64_t v30 = *v28;
      id v31 = objc_msgSend(objc_msgSend(v23, sel_backingTag), sel_identifier);
      swift_unknownObjectRelease();
      uint64_t v32 = sub_1C151E62C();
      uint64_t v34 = v33;

      if (v30 == v32 && v29 == v34)
      {
        swift_bridgeObjectRelease();
LABEL_20:
        sub_1BFEFFC1C(&v42, 0xD000000000000025, 0x80000001C1639330);

        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      char v35 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      if (v35) {
        goto LABEL_20;
      }
    }
  }
LABEL_22:
  sub_1C122FA70(v19);
  unint64_t v36 = FeedKind.selector.getter();
  if (v37)
  {
    sub_1BFEFFC1C(&v42, v36, v37);
    swift_bridgeObjectRelease();
  }
  return v44;
}

uint64_t sub_1C122F640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for LegacyFeedGroupEmitterInitialCursorContext();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  __n128 v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v13, v3, a1, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_1C123387C((uint64_t)&v9[*(int *)(v6 + 36)], a2, (uint64_t (*)(void))type metadata accessor for FeedContext);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_1C123387C(*(void *)v13 + *(void *)(**(void **)v13 + 176), a2, (uint64_t (*)(void))type metadata accessor for FeedContext);
    return swift_release();
  }
}

uint64_t sub_1C122F838(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = a2;
  uint64_t v12 = MEMORY[0x1E4FBC870];
  uint64_t v10 = a1;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  objc_msgSend(v2, sel_feedConfiguration);
  FCFeedDescriptorConfiguration.description.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C(&v10, v10, v11);
  swift_bridgeObjectRelease();
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  id v5 = objc_msgSend(objc_msgSend(v2, sel_backingTag), sel_identifier);
  swift_unknownObjectRelease();
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1BFEFFC1C(&v10, v10, v11);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v2, sel_backingChannel);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v10 = 0;
    uint64_t v11 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v10 = a1;
    uint64_t v11 = a2;
    sub_1C151E80C();
    id v8 = objc_msgSend(v7, sel_identifier);
    sub_1C151E62C();

    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1BFEFFC1C(&v10, v10, v11);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1C122FA70(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = type metadata accessor for LegacyFeedGroupEmitterInitialCursorContext();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v15 - v7;
  __n128 v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v12, v1, a1, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    (*(void (**)(uint64_t, uint64_t))(v4 + 128))(v3, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 128))(v3, v4);
    return swift_release();
  }
}

uint64_t FormatServiceGroupContext.contentOverlaySubgroups(content:)(uint64_t a1)
{
  v19[1] = a1;
  uint64_t v2 = *v1;
  uint64_t v3 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (char *)v1 + *(void *)(v2 + 136);
  type metadata accessor for FeedGroupKnobsRules();
  uint64_t v7 = sub_1C151FD8C();
  id v8 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8((uint64_t *)v21, v6, v7);
  v8(v22, v21, v7);
  if (sub_1C00F6584(v22) == 1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v9 = v23;
  if (!v23) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = type metadata accessor for FormatServiceGroupContext.CursorContainer();
  swift_retain();
  sub_1C122F640(v10, (uint64_t)v5);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    uint64_t v12 = *(void *)&v5[*(int *)(v3 + 40)];
    uint64_t v13 = *(void *)(v9 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C122DA48(v13, v11, v12, &v20);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v20;
    goto LABEL_8;
  }
  uint64_t v14 = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_release();
LABEL_8:
  sub_1C1233754((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FeedContext);
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatContent(0);
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C1230294(v16, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v17;
}

id *FormatServiceGroupContext.deinit()
{
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 14);
  uint64_t v2 = type metadata accessor for FormatServiceGroupContext.CursorContainer();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + *((void *)*v0 + 15);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v5 = (char *)v0 + *((void *)*v0 + 17);
  type metadata accessor for FeedGroupKnobsRules();
  uint64_t v6 = sub_1C151FD8C();
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v8, v5, v6);
  sub_1C1230958(v8);
  return v0;
}

uint64_t FormatServiceGroupContext.__deallocating_deinit()
{
  FormatServiceGroupContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1230200(uint64_t a1)
{
  return FormatServiceGroupContext.selectors(content:)(a1);
}

Swift::Int sub_1C1230224(uint64_t a1, uint64_t a2)
{
  return FormatServiceGroupContext.countPriorGroups(kind:)(*(Swift::String *)&a1);
}

BOOL sub_1C1230248(uint64_t a1, uint64_t a2)
{
  return FormatServiceGroupContext.isPriorEmittedGroup(kind:)(*(Swift::String *)&a1);
}

uint64_t sub_1C1230270(uint64_t a1)
{
  return FormatServiceGroupContext.contentOverlaySubgroups(content:)(a1);
}

uint64_t sub_1C1230294(uint64_t a1, uint64_t a2)
{
  sub_1C0F0E4F0(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatContentSubgroup();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v58 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v70 = (uint64_t)&v58 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (void *)((char *)&v58 - v17);
  int64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (v19)
  {
    uint64_t v88 = MEMORY[0x1E4FBC860];
    int64_t v63 = v19;
    sub_1C05F64E8(0, v19, 0);
    uint64_t v21 = 0;
    unint64_t v62 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v61 = a1 + v62;
    uint64_t v79 = *(void *)(a2 + 16);
    uint64_t v22 = *(void *)(v8 + 72);
    v71 = v18;
    uint64_t v68 = a2;
    v67 = v6;
    uint64_t v66 = v7;
    v65 = v10;
    v69 = v13;
    uint64_t v60 = v22;
    do
    {
      uint64_t v64 = v21;
      sub_1C123387C(v61 + v22 * v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      if (v79)
      {
        uint64_t v23 = *(void *)(type metadata accessor for FormatContentOverlaySubgroup() - 8);
        uint64_t v78 = a2 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
        uint64_t v77 = *(void *)(v23 + 72);
        uint64_t v76 = type metadata accessor for FormatRegex();
        swift_bridgeObjectRetain();
        sub_1BFC8242C(0, (unint64_t *)&unk_1EB8850B0, MEMORY[0x1E4FBD2B0], MEMORY[0x1E4FBD2D0]);
        uint64_t v75 = v24;
        unint64_t v74 = sub_1C0180128();
        unint64_t v73 = sub_1C0C38DDC();
        uint64_t v25 = 0;
        do
        {
          uint64_t v80 = v25;
          uint64_t v28 = v78 + v77 * v25;
          uint64_t v29 = v18[1];
          uint64_t v83 = *v18;
          *(void *)&long long v84 = v29;
          swift_bridgeObjectRetain();
          sub_1C151E4FC();
          sub_1C0C38DA8(0);
          int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v6, 1, v30);
          sub_1C1233754((uint64_t)v6, (uint64_t (*)(void))sub_1C0F0E4F0);
          swift_bridgeObjectRelease();
          if (v31 != 1)
          {
            sub_1C123387C((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
            sub_1C123387C((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
            uint64_t v32 = *(int *)(v7 + 32);
            uint64_t v33 = *(void *)&v13[v32];
            int64_t v34 = *(void *)(v33 + 16);
            if (v34)
            {
              uint64_t v87 = MEMORY[0x1E4FBC860];
              swift_bridgeObjectRetain();
              sub_1C05F759C(0, v34, 0);
              uint64_t v35 = v33;
              uint64_t v36 = v87;
              uint64_t v72 = v35;
              uint64_t v37 = (uint64_t *)(v35 + 40);
              do
              {
                uint64_t v38 = *v37;
                uint64_t v39 = v37[1];
                uint64_t v40 = v37[2];
                uint64_t v41 = v37[3];
                uint64_t v42 = v37[4];
                v82[0] = *(v37 - 1);
                v82[1] = v38;
                v82[2] = v39;
                v82[3] = v40;
                v82[4] = v41;
                v82[5] = v42;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v43 = v81;
                sub_1C0C388E8(v82, v28, &v83);
                uint64_t v81 = v43;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v44 = v83;
                long long v45 = v84;
                long long v46 = v85;
                uint64_t v47 = v86;
                uint64_t v87 = v36;
                unint64_t v49 = *(void *)(v36 + 16);
                unint64_t v48 = *(void *)(v36 + 24);
                if (v49 >= v48 >> 1)
                {
                  long long v59 = v84;
                  long long v58 = v85;
                  sub_1C05F759C(v48 > 1, v49 + 1, 1);
                  long long v46 = v58;
                  long long v45 = v59;
                  uint64_t v36 = v87;
                }
                *(void *)(v36 + 16) = v49 + 1;
                uint64_t v50 = v36 + 48 * v49;
                *(void *)(v50 + 32) = v44;
                *(_OWORD *)(v50 + 40) = v45;
                *(_OWORD *)(v50 + 56) = v46;
                *(void *)(v50 + 72) = v47;
                v37 += 6;
                --v34;
              }
              while (v34);
              swift_bridgeObjectRelease();
              uint64_t v7 = v66;
              uint64_t v32 = *(int *)(v66 + 32);
              a2 = v68;
              uint64_t v6 = v67;
              uint64_t v10 = v65;
            }
            else
            {
              uint64_t v36 = MEMORY[0x1E4FBC860];
            }
            swift_bridgeObjectRelease();
            *(void *)&v10[v32] = v36;
            uint64_t v26 = v70;
            sub_1C12337B4((uint64_t)v10, v70);
            uint64_t v13 = v69;
            sub_1C1233754((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
            uint64_t v27 = v26;
            uint64_t v18 = v71;
            sub_1C1233818(v27, (uint64_t)v71);
          }
          uint64_t v25 = v80 + 1;
        }
        while (v80 + 1 != v79);
        swift_bridgeObjectRelease();
      }
      uint64_t v20 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F64E8(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v88;
      }
      uint64_t v51 = v64;
      unint64_t v53 = *(void *)(v20 + 16);
      unint64_t v52 = *(void *)(v20 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_1C05F64E8(v52 > 1, v53 + 1, 1);
        uint64_t v51 = v64;
        uint64_t v20 = v88;
      }
      *(void *)(v20 + 16) = v53 + 1;
      uint64_t v54 = v60;
      uint64_t v55 = v20 + v62 + v53 * v60;
      uint64_t v18 = v71;
      uint64_t v56 = v51 + 1;
      sub_1C12337B4((uint64_t)v71, v55);
      uint64_t v22 = v54;
      uint64_t v21 = v56;
    }
    while (v56 != v63);
  }
  return v20;
}

uint64_t *sub_1C1230958(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1C12309D4(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t dispatch thunk of FormatServiceGroupContextType.selectors(content:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FormatServiceGroupContextType.countPriorGroups(kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatServiceGroupContextType.isPriorEmittedGroup(kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FormatServiceGroupContextType.contentOverlaySubgroups(content:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1C1230C50()
{
  uint64_t result = type metadata accessor for FormatServiceGroupContext.CursorContainer();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for FormatServiceGroupContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FormatServiceGroupContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatServiceGroupContext);
}

uint64_t dispatch thunk of FormatServiceGroupContext.__allocating_init(emitterCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FormatServiceGroupContext.__allocating_init(initialCursor:rules:feedDescriptor:kind:subtype:cachePolicy:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1C1230E58()
{
  uint64_t result = type metadata accessor for LegacyFeedGroupEmitterInitialCursorContext();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C1230EF4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = v9 | 7;
  uint64_t v11 = v9 + 8;
  uint64_t v12 = (v9 + 8) & ~(v9 | 7);
  uint64_t v13 = *(void *)(v7 + 64);
  uint64_t v14 = v13 + 9;
  size_t v15 = ((((v13 + 9 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(_DWORD *)(v17 + 80);
  uint64_t v19 = v18;
  if (((((((((((v12 + v15 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + v19
       + 16
       + v12) & ~v19)
     + *(void *)(v17 + 64) <= 8)
    unint64_t v20 = 8;
  else {
    unint64_t v20 = ((((((((((v12 + v15 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
  }
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + v18
          + 16
          + v12) & ~(unint64_t)v18)
        + *(void *)(v17 + 64);
  BOOL v21 = (v10 | v18) == 7 && ((v18 | *(_DWORD *)(v7 + 80)) & 0x100000) == 0;
  if (!v21 || v20 + 1 > 0x18)
  {
    uint64_t v26 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v26 + (((v10 | v18) + 16) & ~(v10 | v18)));
LABEL_29:
    swift_retain();
    return a1;
  }
  unsigned int v22 = a2[v20];
  unsigned int v23 = v22 - 2;
  if (v22 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v24 = v20;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *a2;
        if (v20 < 4) {
          goto LABEL_21;
        }
        goto LABEL_23;
      case 2:
        int v25 = *(unsigned __int16 *)a2;
        if (v20 >= 4) {
          goto LABEL_23;
        }
        goto LABEL_21;
      case 3:
        int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v20 < 4) {
          goto LABEL_21;
        }
        goto LABEL_23;
      case 4:
        int v25 = *(_DWORD *)a2;
        if (v20 < 4) {
LABEL_21:
        }
          unsigned int v22 = (v25 | (v23 << (8 * v20))) + 2;
        else {
LABEL_23:
        }
          unsigned int v22 = v25 + 2;
        break;
      default:
        break;
    }
  }
  *a1 = *(void *)a2;
  if (v22 != 1)
  {
    *((unsigned char *)a1 + v20) = 0;
    goto LABEL_29;
  }
  uint64_t v63 = v13;
  uint64_t v69 = v6;
  unint64_t v70 = ((((((((v12 + v15 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + v18
      + 16;
  uint64_t v71 = v17;
  uint64_t v72 = v16;
  uint64_t v27 = ~v9;
  uint64_t v28 = (void *)(((unint64_t)a1 + v10 + 8) & ~v10);
  uint64_t v29 = (void **)((unint64_t)&a2[v10 + 8] & ~v10);
  uint64_t v30 = *v29;
  *uint64_t v28 = *v29;
  v67 = (void *)(((unint64_t)v28 + v11) & ~v10);
  uint64_t v68 = v29;
  v65 = v28;
  uint64_t v66 = (void *)(((unint64_t)v29 + v11) & ~v10);
  uint64_t v64 = v27;
  unint64_t v31 = ((unint64_t)v66 + v11) & v27;
  uint64_t v32 = v8;
  swift_retain();
  id v33 = v30;
  if (v32 < 0x7FFFFFFF)
  {
    uint64_t v38 = *(void *)((v14 + v31) & 0xFFFFFFFFFFFFFFF8) >> 1;
    uint64_t v35 = v69;
    uint64_t v37 = v66;
    uint64_t v36 = v67;
    if (v38 < 0x80000001)
    {
LABEL_32:
      *uint64_t v36 = *v37;
      unint64_t v39 = ((unint64_t)v36 + v11) & v64;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v39, v31, v35);
      uint64_t v40 = (unsigned char *)(v39 + v63);
      unsigned char *v40 = *(unsigned char *)(v31 + v63);
      v40[1] = *(unsigned char *)(v31 + v63 + 1);
      uint64_t v41 = (_OWORD *)((v39 + v63 + 9) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v42 = (_OWORD *)((v31 + v63 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v41 = *v42;
      unint64_t v43 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v43 = *(void *)v44;
      *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
      *(unsigned char *)(v43 + 9) = *(unsigned char *)(v44 + 9);
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
  }
  else
  {
    int v34 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v31, v32, v69);
    uint64_t v35 = v69;
    uint64_t v37 = v66;
    uint64_t v36 = v67;
    if (!v34) {
      goto LABEL_32;
    }
  }
  memcpy(v36, v37, v15);
LABEL_33:
  uint64_t v45 = ~v19;
  long long v46 = (char *)v36 + v15;
  *long long v46 = *((unsigned char *)v37 + v15);
  *(unsigned char *)(((unint64_t)v36 + v15) | 1) = *(unsigned char *)(((unint64_t)v37 + v15) | 1);
  v46[2] = *((unsigned char *)v37 + v15 + 2);
  uint64_t v46[3] = *((unsigned char *)v37 + v15 + 3);
  uint64_t v47 = (void *)(((unint64_t)v37 + v15 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v48 = (void *)(((unint64_t)v36 + v15 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v48 = *v47;
  unint64_t v49 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v50 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v49 = *v50;
  unint64_t v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = *(void *)(v52 + 8);
  if (v53 >= 0xFFFFFFFF) {
    LODWORD(v53) = -1;
  }
  unsigned int v54 = v53 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54 > 1)
  {
    *(_OWORD *)unint64_t v51 = *(_OWORD *)v52;
  }
  else
  {
    *(void *)unint64_t v51 = *(void *)v52;
    *(void *)(v51 + 8) = *(void *)(v52 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
  uint64_t v55 = (void *)(((unint64_t)v49 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v56 = (void **)(((unint64_t)v50 + 39) & 0xFFFFFFFFFFFFFFF8);
  v57 = *v56;
  *uint64_t v55 = *v56;
  long long v58 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v59 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  *long long v58 = *v59;
  v58[1] = v59[1];
  uint64_t v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16);
  id v61 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v60(((unint64_t)v65 + v70) & v45, ((unint64_t)v68 + v70) & v45, v72);
  *((unsigned char *)a1 + v20) = 1;
  return a1;
}

uint64_t sub_1C1231404(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v29 = sub_1C151631C();
  uint64_t v4 = *(void *)(v29 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v5 | 7;
  uint64_t v7 = v5 + 8;
  uint64_t v8 = (v5 + 8) & ~(v5 | 7);
  uint64_t v9 = *(unsigned int *)(v4 + 84);
  uint64_t v10 = *(void *)(v4 + 64) + 9;
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v31 + 80);
  unint64_t v28 = (((v10 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = ((((((((v28 + v8 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + v12
      + 16;
  unint64_t v13 = ((v30 + v8) & ~v12) + *(void *)(v31 + 64);
  if (v13 <= 8) {
    unint64_t v13 = 8;
  }
  unsigned int v14 = a1[v13];
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a1;
        if (v13 < 4) {
          goto LABEL_13;
        }
        goto LABEL_15;
      case 2:
        int v16 = *(unsigned __int16 *)a1;
        if (v13 >= 4) {
          goto LABEL_15;
        }
        goto LABEL_13;
      case 3:
        int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v13 < 4) {
          goto LABEL_13;
        }
        goto LABEL_15;
      case 4:
        int v16 = *(_DWORD *)a1;
        if (v13 < 4) {
LABEL_13:
        }
          unsigned int v14 = (v16 | ((v14 - 2) << (8 * v13))) + 2;
        else {
LABEL_15:
        }
          unsigned int v14 = v16 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t result = swift_release();
  if (v14 == 1)
  {
    uint64_t v27 = v11;
    uint64_t v18 = ~v5;
    uint64_t v19 = (id *)((unint64_t)&a1[v6 + 8] & ~v6);

    unint64_t v20 = ((unint64_t)v19 + v7) & ~v6;
    unint64_t v21 = (v7 + v20) & v18;
    if (v9 < 0x7FFFFFFF)
    {
      uint64_t v23 = v29;
      if ((*(void *)((v10 + v21) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
      {
LABEL_22:
        (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v21, v23);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      unint64_t v22 = (v7 + v20) & v18;
      uint64_t v23 = v29;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v22, v9, v29)) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v24 = (((v20 + v28 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRelease();
    LODWORD(v25) = -1;
    if (*(void *)(((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
      uint64_t v25 = *(void *)(((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    if ((v25 + 1) <= 1) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(uint64_t (**)(unint64_t, uint64_t))(v31 + 8);
    return v26(((unint64_t)v19 + v30) & ~v12, v27);
  }
  return result;
}

void *sub_1C123179C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = v8 + 8;
  uint64_t v11 = (v8 + 8) & ~(v8 | 7);
  uint64_t v12 = *(unsigned int *)(v7 + 84);
  uint64_t v13 = *(void *)(v7 + 64);
  uint64_t v14 = v13 + 9;
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  if (((((((((((v11 + ((((v13 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10 + 11) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 39) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + v17
       + 16
       + v11) & ~v17)
     + *(void *)(v16 + 64) <= 8)
    unint64_t v18 = 8;
  else {
    unint64_t v18 = ((((((((((v11 + ((((v13 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10 + 11) & 0xFFFFFFFFFFFFFFF8)
  }
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 39) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + v17
          + 16
          + v11) & ~v17)
        + *(void *)(v16 + 64);
  unsigned int v19 = a2[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a2;
        if (v18 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 2:
        int v22 = *(unsigned __int16 *)a2;
        if (v18 >= 4) {
          goto LABEL_16;
        }
        goto LABEL_14;
      case 3:
        int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v18 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 4:
        int v22 = *(_DWORD *)a2;
        if (v18 < 4) {
LABEL_14:
        }
          unsigned int v19 = (v22 | (v20 << (8 * v18))) + 2;
        else {
LABEL_16:
        }
          unsigned int v19 = v22 + 2;
        break;
      default:
        break;
    }
  }
  *a1 = *(void *)a2;
  if (v19 != 1)
  {
    *((unsigned char *)a1 + v18) = 0;
    swift_retain();
    return a1;
  }
  v65 = a1;
  uint64_t v66 = v6;
  unint64_t __n = ((((v13 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  unint64_t v68 = ((((((((v11 + __n + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + v17
      + 16;
  uint64_t v69 = v16;
  uint64_t v70 = v15;
  uint64_t v23 = ~v9;
  unint64_t v24 = (void *)(((unint64_t)a1 + v9 + 8) & ~v9);
  uint64_t v25 = (void **)((unint64_t)&a2[v9 + 8] & ~v9);
  uint64_t v26 = *v25;
  *unint64_t v24 = *v25;
  uint64_t v62 = v13;
  uint64_t v63 = v24;
  uint64_t v27 = (void *)(((unint64_t)v24 + v10) & v23);
  v67 = v25;
  unint64_t v28 = (void *)(((unint64_t)v25 + v10) & v23);
  uint64_t v61 = ~v8;
  unint64_t v29 = ((unint64_t)v28 + v10) & ~v8;
  uint64_t v30 = v12;
  swift_retain();
  id v31 = v26;
  if (v30 < 0x7FFFFFFF)
  {
    uint64_t v33 = *(void *)((v14 + v29) & 0xFFFFFFFFFFFFFFF8) >> 1;
    uint64_t v32 = v66;
    if (v33 < 0x80000001)
    {
LABEL_24:
      *uint64_t v27 = *v28;
      unint64_t v35 = ((unint64_t)v27 + v10) & v61;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v35, v29, v32);
      uint64_t v36 = (unsigned char *)(v35 + v62);
      *uint64_t v36 = *(unsigned char *)(v29 + v62);
      v36[1] = *(unsigned char *)(v29 + v62 + 1);
      uint64_t v37 = (_OWORD *)((v35 + v62 + 9) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v38 = (_OWORD *)((v29 + v62 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v37 = *v38;
      unint64_t v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = ((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v39 = *(void *)v40;
      *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
      *(unsigned char *)(v39 + 9) = *(unsigned char *)(v40 + 9);
      swift_bridgeObjectRetain();
      unint64_t v34 = __n;
      a1 = v65;
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v32 = v66;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v29, v30, v66)) {
      goto LABEL_24;
    }
  }
  unint64_t v34 = __n;
  memcpy(v27, v28, __n);
  a1 = v65;
LABEL_25:
  uint64_t v41 = ~v17;
  uint64_t v42 = (char *)v27 + v34;
  *uint64_t v42 = *((unsigned char *)v28 + v34);
  *(unsigned char *)(((unint64_t)v27 + v34) | 1) = *(unsigned char *)(((unint64_t)v28 + v34) | 1);
  v42[2] = *((unsigned char *)v28 + v34 + 2);
  v42[3] = *((unsigned char *)v28 + v34 + 3);
  unint64_t v43 = (void *)(((unint64_t)v28 + v34 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v44 = (void *)(((unint64_t)v27 + v34 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v44 = *v43;
  uint64_t v45 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v46 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v45 = *v46;
  unint64_t v47 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = ((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = *(void *)(v48 + 8);
  if (v49 >= 0xFFFFFFFF) {
    LODWORD(v49) = -1;
  }
  unsigned int v50 = v49 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50 > 1)
  {
    *(_OWORD *)unint64_t v47 = *(_OWORD *)v48;
  }
  else
  {
    *(void *)unint64_t v47 = *(void *)v48;
    *(void *)(v47 + 8) = *(void *)(v48 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v47 + 16) = *(unsigned char *)(v48 + 16);
  unint64_t v51 = (void *)(((unint64_t)v45 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = (void **)(((unint64_t)v46 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v53 = *v52;
  void *v51 = *v52;
  unsigned int v54 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v54 = *v55;
  v54[1] = v55[1];
  unint64_t v56 = ((unint64_t)v63 + v68) & v41;
  unint64_t v57 = ((unint64_t)v67 + v68) & v41;
  long long v58 = *(void (**)(unint64_t, unint64_t, uint64_t))(v69 + 16);
  id v59 = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58(v56, v57, v70);
  *((unsigned char *)a1 + v18) = 1;
  return a1;
}

unsigned __int8 *sub_1C1231C74(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = v8 + 8;
  uint64_t v11 = (v8 + 8) & ~(v8 | 7);
  uint64_t v72 = v7;
  uint64_t v73 = v6;
  uint64_t v12 = *(unsigned int *)(v7 + 84);
  uint64_t v65 = *(void *)(v7 + 64);
  uint64_t v66 = v65 + 9;
  unint64_t v13 = (((v65 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = *(void *)(a3 + 16);
  uint64_t v70 = *(void *)(v71 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v70 + 80);
  unint64_t v69 = ((((((((v13 + v11 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + v14
      + 16;
  if (((v69 + v11) & ~v14) + *(void *)(v70 + 64) <= 8) {
    uint64_t v15 = 8;
  }
  else {
    uint64_t v15 = ((v69 + v11) & ~v14) + *(void *)(*(void *)(v71 - 8) + 64);
  }
  unsigned int v16 = a1[v15];
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v17 = v15;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a1;
        if (v15 < 4) {
          goto LABEL_15;
        }
        goto LABEL_17;
      case 2:
        int v18 = *(unsigned __int16 *)a1;
        if (v15 >= 4) {
          goto LABEL_17;
        }
        goto LABEL_15;
      case 3:
        int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v15 < 4) {
          goto LABEL_15;
        }
        goto LABEL_17;
      case 4:
        int v18 = *(_DWORD *)a1;
        if (v15 < 4) {
LABEL_15:
        }
          unsigned int v16 = (v18 | ((v16 - 2) << (8 * v15))) + 2;
        else {
LABEL_17:
        }
          unsigned int v16 = v18 + 2;
        break;
      default:
        break;
    }
  }
  size_t v19 = v13 + 10;
  uint64_t v20 = ~v9;
  uint64_t v74 = ~v8;
  uint64_t v68 = ~v14;
  swift_release();
  size_t __n = v19;
  if (v16 == 1)
  {
    uint64_t v21 = (id *)((unint64_t)&a1[v9 + 8] & v20);

    unint64_t v22 = ((unint64_t)v21 + v10) & v20;
    unint64_t v23 = (v10 + v22) & v74;
    unsigned int v64 = v12;
    if (v12 < 0x7FFFFFFF)
    {
      if ((*(void *)((v66 + v23) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
      {
LABEL_23:
        (*(void (**)(unint64_t, uint64_t))(v72 + 8))(v23, v73);
        swift_bridgeObjectRelease();
      }
    }
    else if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v72 + 48))((v10 + v22) & v74, v12, v73))
    {
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v24 = ((((v22 + __n + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15;
    LODWORD(v25) = -1;
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    if ((v25 + 1) <= 1) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v70 + 8))(((unint64_t)v21 + v69) & v68, v71);
    uint64_t v12 = v64;
  }
  unsigned int v26 = a2[v15];
  unsigned int v27 = v26 - 2;
  if (v26 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v28 = v15;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *a2;
        if (v15 < 4) {
          goto LABEL_39;
        }
        goto LABEL_41;
      case 2:
        int v29 = *(unsigned __int16 *)a2;
        if (v15 >= 4) {
          goto LABEL_41;
        }
        goto LABEL_39;
      case 3:
        int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 < 4) {
          goto LABEL_39;
        }
        goto LABEL_41;
      case 4:
        int v29 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_39:
        }
          unsigned int v26 = (v29 | (v27 << (8 * v15))) + 2;
        else {
LABEL_41:
        }
          unsigned int v26 = v29 + 2;
        break;
      default:
        break;
    }
  }
  *(void *)a1 = *(void *)a2;
  if (v26 != 1)
  {
    a1[v15] = 0;
    swift_retain();
    return a1;
  }
  uint64_t v30 = (void *)((unint64_t)&a1[v9 + 8] & v20);
  id v31 = (void **)((unint64_t)&a2[v9 + 8] & v20);
  uint64_t v32 = v12;
  uint64_t v33 = *v31;
  void *v30 = *v31;
  unint64_t v34 = (void *)(((unint64_t)v30 + v10) & v20);
  uint64_t v63 = v31;
  unint64_t v35 = (void *)(((unint64_t)v31 + v10) & v20);
  unint64_t v36 = ((unint64_t)v35 + v10) & v74;
  swift_retain();
  id v37 = v33;
  if (v32 < 0x7FFFFFFF)
  {
    if ((*(void *)((v66 + v36) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
    {
LABEL_49:
      *unint64_t v34 = *v35;
      unint64_t v40 = ((unint64_t)v34 + v10) & v74;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 16))(v40, v36, v73);
      uint64_t v41 = (unsigned char *)(v40 + v65);
      *uint64_t v41 = *(unsigned char *)(v36 + v65);
      v41[1] = *(unsigned char *)(v36 + v65 + 1);
      uint64_t v42 = (_OWORD *)((v40 + v65 + 9) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v43 = (_OWORD *)((v36 + v65 + 9) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v42 = *v43;
      unint64_t v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v45 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v44 = *(void *)v45;
      *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
      *(unsigned char *)(v44 + 9) = *(unsigned char *)(v45 + 9);
      swift_bridgeObjectRetain();
      size_t v39 = __n;
      goto LABEL_50;
    }
  }
  else if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v72 + 48))(v36, v32, v73))
  {
    goto LABEL_49;
  }
  uint64_t v38 = (void *)(((unint64_t)v30 + v10) & v20);
  size_t v39 = __n;
  memcpy(v38, v35, __n);
LABEL_50:
  long long v46 = (char *)v34 + v39;
  *long long v46 = *((unsigned char *)v35 + v39);
  *(unsigned char *)(((unint64_t)v34 + v39) | 1) = *(unsigned char *)(((unint64_t)v35 + v39) | 1);
  v46[2] = *((unsigned char *)v35 + v39 + 2);
  uint64_t v46[3] = *((unsigned char *)v35 + v39 + 3);
  unint64_t v47 = (void *)(((unint64_t)v35 + v39 + 11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v48 = (void *)(((unint64_t)v34 + v39 + 11) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v48 = *v47;
  unint64_t v49 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v50 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v49 = *v50;
  unint64_t v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = *(void *)(v52 + 8);
  if (v53 >= 0xFFFFFFFF) {
    LODWORD(v53) = -1;
  }
  unsigned int v54 = v53 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54 > 1)
  {
    *(_OWORD *)unint64_t v51 = *(_OWORD *)v52;
  }
  else
  {
    *(void *)unint64_t v51 = *(void *)v52;
    *(void *)(v51 + 8) = *(void *)(v52 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
  uint64_t v55 = (void *)(((unint64_t)v49 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v56 = (void **)(((unint64_t)v50 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v57 = *v56;
  *uint64_t v55 = *v56;
  long long v58 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v59 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
  *long long v58 = *v59;
  v58[1] = v59[1];
  uint64_t v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 16);
  id v61 = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v60(((unint64_t)v30 + v69) & v68, ((unint64_t)v63 + v69) & v68, v71);
  a1[v15] = 1;
  return a1;
}

void *sub_1C123234C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = v8 + 8;
  uint64_t v11 = (v8 + 8) & ~(v8 | 7);
  unsigned int v12 = *(_DWORD *)(v7 + 84);
  uint64_t v13 = *(void *)(v7 + 64);
  size_t v14 = ((((v13 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = ((((((((v11 + v14 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + v17
      + 16;
  if (((v18 + v11) & ~v17) + *(void *)(v16 + 64) <= 8) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = ((v18 + v11) & ~v17) + *(void *)(v16 + 64);
  }
  unsigned int v20 = a2[v19];
  unsigned int v21 = v20 - 2;
  if (v20 >= 2)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *a2;
        if (v19 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 2:
        int v23 = *(unsigned __int16 *)a2;
        if (v19 >= 4) {
          goto LABEL_16;
        }
        goto LABEL_14;
      case 3:
        int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v19 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 4:
        int v23 = *(_DWORD *)a2;
        if (v19 < 4) {
LABEL_14:
        }
          unsigned int v20 = (v23 | (v21 << (8 * v19))) + 2;
        else {
LABEL_16:
        }
          unsigned int v20 = v23 + 2;
        break;
      default:
        break;
    }
  }
  *a1 = *(void *)a2;
  if (v20 == 1)
  {
    unint64_t v60 = v18;
    uint64_t v61 = v15;
    uint64_t v24 = ~v9;
    uint64_t v25 = ~v8;
    uint64_t v62 = ~v17;
    unsigned int v26 = (char *)a1 + v9;
    unsigned int v27 = &a2[v9];
    uint64_t v28 = (void *)((unint64_t)(v26 + 8) & v24);
    int v29 = (void *)((unint64_t)(v27 + 8) & v24);
    *uint64_t v28 = *v29;
    uint64_t v30 = (void *)(((unint64_t)v28 + v10) & v24);
    uint64_t v58 = v13;
    id v59 = v29;
    id v31 = (void *)(((unint64_t)v29 + v10) & v24);
    unint64_t v32 = ((unint64_t)v31 + v10) & v25;
    if (v12 < 0x7FFFFFFF)
    {
      if ((*(void *)((v13 + 9 + v32) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
      {
LABEL_24:
        void *v30 = *v31;
        unint64_t v40 = ((unint64_t)v30 + v10) & v25;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v40, v32, v6);
        uint64_t v41 = (unsigned char *)(v40 + v58);
        *uint64_t v41 = *(unsigned char *)(v32 + v58);
        v41[1] = *(unsigned char *)(v32 + v58 + 1);
        uint64_t v42 = (_OWORD *)((v40 + v58 + 9) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v43 = (_OWORD *)((v32 + v58 + 9) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v42 = *v43;
        unint64_t v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v45 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v44 = *(void *)v45;
        *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
        *(unsigned char *)(v44 + 9) = *(unsigned char *)(v45 + 9);
        goto LABEL_25;
      }
    }
    else
    {
      size_t v56 = v14;
      unint64_t v57 = v28;
      uint64_t v33 = a1;
      uint64_t v34 = v16;
      uint64_t v35 = v6;
      unint64_t v36 = (void *)(((unint64_t)v28 + v10) & v24);
      uint64_t v37 = v25;
      int v38 = (*(uint64_t (**)(unint64_t))(v7 + 48))(((unint64_t)v31 + v10) & v25);
      uint64_t v25 = v37;
      uint64_t v30 = v36;
      uint64_t v6 = v35;
      uint64_t v16 = v34;
      a1 = v33;
      size_t v14 = v56;
      uint64_t v28 = v57;
      if (!v38) {
        goto LABEL_24;
      }
    }
    memcpy(v30, v31, v14);
LABEL_25:
    long long v46 = (char *)v30 + v14;
    *long long v46 = *((unsigned char *)v31 + v14);
    *(unsigned char *)(((unint64_t)v30 + v14) | 1) = *(unsigned char *)(((unint64_t)v31 + v14) | 1);
    v46[2] = *((unsigned char *)v31 + v14 + 2);
    uint64_t v46[3] = *((unsigned char *)v31 + v14 + 3);
    unint64_t v47 = (void *)(((unint64_t)v30 + v14 + 11) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v48 = (void *)(((unint64_t)v31 + v14 + 11) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v47 = *v48;
    unint64_t v49 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v50 = (void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v49 = *v50;
    unint64_t v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)unint64_t v51 = *(_OWORD *)v52;
    *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
    unint64_t v53 = (void *)(((unint64_t)v49 + 39) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v54 = (void *)(((unint64_t)v50 + 39) & 0xFFFFFFFFFFFFFFF8);
    void *v53 = *v54;
    *(_OWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 32))(((unint64_t)v28 + v60) & v62, ((unint64_t)v59 + v60) & v62, v61);
    char v39 = 1;
    goto LABEL_26;
  }
  char v39 = 0;
LABEL_26:
  *((unsigned char *)a1 + v19) = v39;
  return a1;
}

unsigned __int8 *sub_1C1232798(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1C151631C();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v8 | 7;
    uint64_t v10 = v8 + 8;
    uint64_t v11 = (v8 + 8) & ~(v8 | 7);
    uint64_t v63 = v7;
    uint64_t v64 = v6;
    unsigned int v59 = *(_DWORD *)(v7 + 84);
    uint64_t v56 = *(void *)(v7 + 64);
    uint64_t v57 = v56 + 9;
    unint64_t v12 = (((v56 + 9 + ((v8 + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v13 = *(void *)(a3 + 16);
    uint64_t v62 = *(void *)(v13 - 8);
    uint64_t v14 = *(unsigned __int8 *)(v62 + 80);
    unint64_t v61 = ((((((((v12 + v11 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + v14
        + 16;
    if (((v61 + v11) & ~v14) + *(void *)(v62 + 64) <= 8) {
      uint64_t v15 = 8;
    }
    else {
      uint64_t v15 = ((v61 + v11) & ~v14) + *(void *)(v62 + 64);
    }
    unsigned int v16 = a1[v15];
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v17 = v15;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          if (v15 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          if (v15 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v15 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v18 = *(_DWORD *)a1;
          if (v15 < 4) {
LABEL_15:
          }
            unsigned int v16 = (v18 | ((v16 - 2) << (8 * v15))) + 2;
          else {
LABEL_17:
          }
            unsigned int v16 = v18 + 2;
          break;
        default:
          break;
      }
    }
    size_t v19 = v12 + 10;
    uint64_t v20 = ~v9;
    uint64_t v65 = ~v8;
    uint64_t v60 = ~v14;
    swift_release();
    size_t __n = v19;
    if (v16 != 1)
    {
LABEL_29:
      unsigned int v26 = a2[v15];
      unsigned int v27 = v26 - 2;
      if (v26 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v28 = v15;
        }
        else {
          uint64_t v28 = 4;
        }
        switch(v28)
        {
          case 1:
            int v29 = *a2;
            if (v15 < 4) {
              goto LABEL_39;
            }
            goto LABEL_41;
          case 2:
            int v29 = *(unsigned __int16 *)a2;
            if (v15 >= 4) {
              goto LABEL_41;
            }
            goto LABEL_39;
          case 3:
            int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v15 < 4) {
              goto LABEL_39;
            }
            goto LABEL_41;
          case 4:
            int v29 = *(_DWORD *)a2;
            if (v15 < 4) {
LABEL_39:
            }
              unsigned int v26 = (v29 | (v27 << (8 * v15))) + 2;
            else {
LABEL_41:
            }
              unsigned int v26 = v29 + 2;
            break;
          default:
            break;
        }
      }
      *(void *)a1 = *(void *)a2;
      if (v26 != 1)
      {
        char v35 = 0;
LABEL_51:
        a1[v15] = v35;
        return a1;
      }
      uint64_t v30 = (void *)((unint64_t)&a1[v9 + 8] & v20);
      id v31 = (void *)((unint64_t)&a2[v9 + 8] & v20);
      void *v30 = *v31;
      unint64_t v32 = (void *)(((unint64_t)v30 + v10) & v20);
      uint64_t v33 = (void *)(((unint64_t)v31 + v10) & v20);
      unint64_t v34 = ((unint64_t)v33 + v10) & v65;
      if (v59 < 0x7FFFFFFF)
      {
        if ((*(void *)((v57 + v34) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
        {
LABEL_49:
          *unint64_t v32 = *v33;
          unint64_t v39 = ((unint64_t)v32 + v10) & v65;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v63 + 32))(v39, v34, v64);
          unint64_t v40 = (unsigned char *)(v39 + v56);
          unsigned char *v40 = *(unsigned char *)(v34 + v56);
          v40[1] = *(unsigned char *)(v34 + v56 + 1);
          uint64_t v41 = (_OWORD *)((v39 + v56 + 9) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v42 = (_OWORD *)((v34 + v56 + 9) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v41 = *v42;
          unint64_t v43 = ((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v44 = ((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v43 = *(void *)v44;
          *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
          *(unsigned char *)(v43 + 9) = *(unsigned char *)(v44 + 9);
          size_t v38 = __n;
          goto LABEL_50;
        }
      }
      else if (!(*(unsigned int (**)(unint64_t))(v63 + 48))(((unint64_t)v33 + v10) & v65))
      {
        goto LABEL_49;
      }
      unint64_t v36 = (void *)(((unint64_t)v30 + v10) & v20);
      uint64_t v37 = (const void *)(((unint64_t)v31 + v10) & v20);
      size_t v38 = __n;
      memcpy(v36, v37, __n);
LABEL_50:
      unint64_t v45 = (char *)v32 + v38;
      *unint64_t v45 = *((unsigned char *)v33 + v38);
      *(unsigned char *)(((unint64_t)v32 + v38) | 1) = *(unsigned char *)(((unint64_t)v33 + v38) | 1);
      v45[2] = *((unsigned char *)v33 + v38 + 2);
      v45[3] = *((unsigned char *)v33 + v38 + 3);
      long long v46 = (void *)(((unint64_t)v32 + v38 + 11) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v47 = (void *)(((unint64_t)v33 + v38 + 11) & 0xFFFFFFFFFFFFFFF8);
      *long long v46 = *v47;
      unint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v49 = (void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v48 = *v49;
      unint64_t v50 = ((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v50 = *(_OWORD *)v51;
      *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
      unint64_t v52 = (void *)(((unint64_t)v48 + 39) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v53 = (void *)(((unint64_t)v49 + 39) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v52 = *v53;
      *(_OWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 32))(((unint64_t)v30 + v61) & v60, ((unint64_t)v31 + v61) & v60, v13);
      char v35 = 1;
      goto LABEL_51;
    }
    uint64_t v55 = v13;
    unsigned int v21 = (id *)((unint64_t)&a1[v9 + 8] & v20);

    unint64_t v22 = ((unint64_t)v21 + v10) & v20;
    unint64_t v23 = (v10 + v22) & v65;
    if (v59 < 0x7FFFFFFF)
    {
      if ((*(void *)((v57 + v23) & 0xFFFFFFFFFFFFFFF8) >> 1) < 0x80000001)
      {
LABEL_23:
        (*(void (**)(unint64_t, uint64_t))(v63 + 8))(v23, v64);
        swift_bridgeObjectRelease();
      }
    }
    else if (!(*(unsigned int (**)(unint64_t))(v63 + 48))((v10 + v22) & v65))
    {
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v24 = ((((v22 + __n + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15;
    LODWORD(v25) = -1;
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    if ((v25 + 1) <= 1) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v55;
    (*(void (**)(unint64_t, uint64_t))(v62 + 8))(((unint64_t)v21 + v61) & v60, v55);
    goto LABEL_29;
  }
  return a1;
}

uint64_t sub_1C1232DF0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1C151631C() - 8);
  uint64_t v7 = (*(_DWORD *)(v6 + 80) & 0xF8 ^ 0x1F8u) & (*(_DWORD *)(v6 + 80) + 8);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v9 = ((v7
       + *(unsigned __int8 *)(v8 + 80)
       + ((((((((v7
               + ((((*(void *)(v6 + 64)
                   + ((*(_DWORD *)(v6 + 80) + 8) & ~(unint64_t)*(_DWORD *)(v6 + 80))
                   + 9) & 0xFFFFFFFFFFFFFFF8)
                 + 23) & 0xFFFFFFFFFFFFFFF8)
               + 21) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 39) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(void *)(v8 + 64);
  uint64_t v10 = 8;
  if (v9 > 8) {
    uint64_t v10 = v9;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v11 = v10 + 1;
  char v12 = 8 * (v10 + 1);
  if ((v10 + 1) <= 3)
  {
    unsigned int v15 = ((a2 + ~(-1 << v12) - 254) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_22:
      unsigned int v17 = *((unsigned __int8 *)a1 + v10);
      if (v17 >= 2) {
        return (v17 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_22;
  }
LABEL_14:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v11 | v16) + 255;
}

void sub_1C123302C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_1C151631C() - 8);
  uint64_t v9 = (*(_DWORD *)(v8 + 80) & 0xF8 ^ 0x1F8u) & (*(_DWORD *)(v8 + 80) + 8);
  unint64_t v10 = ((v9
        + *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80)
        + ((((((((v9
                + ((((*(void *)(v8 + 64)
                    + ((*(_DWORD *)(v8 + 80) + 8) & ~(unint64_t)*(_DWORD *)(v8 + 80))
                    + 9) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 21) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 39) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80))
      + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v10 <= 8) {
    unint64_t v10 = 8;
  }
  size_t v11 = v10 + 1;
  if (a3 < 0xFF)
  {
    int v12 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << (8 * v11)) - 254) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v13 = a2 - 255;
    if (v11 < 4)
    {
      int v14 = (v13 >> (8 * v11)) + 1;
      if (v10 != -1)
      {
        int v16 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v11] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v11] = v14;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C12332DCLL);
      case 4:
        *(_DWORD *)&a1[v11] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v11] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v10] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C1233304(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(sub_1C151631C() - 8);
  uint64_t v5 = (*(_DWORD *)(v4 + 80) & 0xF8 ^ 0x1F8u) & (*(_DWORD *)(v4 + 80) + 8);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v7 = ((v5
       + *(unsigned __int8 *)(v6 + 80)
       + ((((((((v5
               + ((((*(void *)(v4 + 64)
                   + ((*(_DWORD *)(v4 + 80) + 8) & ~(unint64_t)*(_DWORD *)(v4 + 80))
                   + 9) & 0xFFFFFFFFFFFFFFF8)
                 + 23) & 0xFFFFFFFFFFFFFFF8)
               + 21) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 39) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  uint64_t result = a1[v7];
  if (result >= 2)
  {
    if (v7 <= 3) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        if (v7 < 4) {
          goto LABEL_13;
        }
        goto LABEL_15;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        if (v7 >= 4) {
          goto LABEL_15;
        }
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v7 < 4) {
          goto LABEL_13;
        }
        goto LABEL_15;
      case 4:
        int v10 = *(_DWORD *)a1;
        if (v7 < 4) {
LABEL_13:
        }
          uint64_t result = (v10 | ((result - 2) << (8 * v7))) + 2;
        else {
LABEL_15:
        }
          uint64_t result = (v10 + 2);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C12334CC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1C151631C() - 8);
  if (a2 > 1)
  {
    uint64_t v11 = *(_DWORD *)(v6 + 80);
    unint64_t v12 = (*(_DWORD *)(v6 + 80) & 0xF8 ^ 0x1F8u) & (unint64_t)(v11 + 8);
    uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
    unint64_t v14 = ((v12
          + *(unsigned __int8 *)(v13 + 80)
          + ((((((((v12
                  + ((((*(void *)(v6 + 64) + ((v11 + 8) & ~v11) + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 21) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 39) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
        + *(void *)(v13 + 64);
    if (v14 <= 8) {
      size_t v15 = 8;
    }
    else {
      size_t v15 = v14;
    }
    if (v15 <= 3) {
      char v16 = ((a2 - 2) >> (8 * v15)) + 2;
    }
    else {
      char v16 = 2;
    }
    if (v15 <= 3) {
      int v17 = (a2 - 2) & ~(-1 << (8 * v15));
    }
    else {
      int v17 = a2 - 2;
    }
    a1[v15] = v16;
    if (v15 >= 4) {
      int v18 = 4;
    }
    else {
      int v18 = v15;
    }
    bzero(a1, v15);
    switch(v18)
    {
      case 2:
        *(_WORD *)a1 = v17;
        break;
      case 3:
        *(_WORD *)a1 = v17;
        a1[2] = BYTE2(v17);
        break;
      case 4:
        *(_DWORD *)a1 = v17;
        break;
      default:
        *a1 = v17;
        break;
    }
  }
  else
  {
    uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v8 = *(_DWORD *)(v6 + 80);
    unint64_t v9 = (*(_DWORD *)(v6 + 80) & 0xF8 ^ 0x1F8u) & (unint64_t)(v8 + 8);
    unint64_t v10 = ((*(unsigned __int8 *)(v7 + 80)
          + v9
          + ((((((((v9
                  + ((((*(void *)(v6 + 64) + ((v8 + 8) & ~v8) + 9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                  + 21) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 39) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(void *)(v7 + 64);
    if (v10 <= 8) {
      unint64_t v10 = 8;
    }
    a1[v10] = a2;
  }
}

uint64_t sub_1C1233754(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C12337B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSubgroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1233818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSubgroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C123387C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12338E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  sub_1BFE4510C(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  __n128 v19 = MEMORY[0x1F4188790](v16);
  unsigned int v21 = &v29[-v20];
  uint64_t v33 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v18 + 104))(&v29[-v20], *MEMORY[0x1E4FAB9E0], v17, v19);
  sub_1BFE44640();
  sub_1BFE4510C(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  unsigned int v26 = (double *)(v25 + v24);
  *unsigned int v26 = a5;
  v26[1] = a6;
  v26[2] = a7;
  v26[3] = a8;
  (*(void (**)(void))(v23 + 104))();
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  unsigned int v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C10F2768(0, &qword_1EB8712D0, MEMORY[0x1E4FAB6F0]);
  sub_1BFE45238(&qword_1EB8712C8, &qword_1EB8712D0, v27);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_1C1233BA4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  v97 = a4;
  uint64_t v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v91 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v92 = v7;
  v96 = &v86[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE4510C(0, &qword_1EB871270, MEMORY[0x1E4FAB530]);
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v95 = v8;
  MEMORY[0x1F4188790](v8);
  v93 = &v86[-v9];
  uint64_t v90 = sub_1C151E24C();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v88 = (uint64_t *)&v86[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE4510C(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  v107 = (uint64_t *)&v86[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)&v86[-v16];
  uint64_t v109 = a1;
  uint64_t v111 = a1;
  swift_getKeyPath();
  sub_1C151793C();
  double v19 = round(v18 * 56.0 * 0.25);
  if (byte_1EA2B53C0) {
    double v20 = v19;
  }
  else {
    double v20 = 14.0;
  }
  uint64_t v103 = v6;
  uint64_t v21 = *(int *)(v6 + 20);
  uint64_t v105 = a3;
  id v22 = objc_msgSend(*(id *)(a3 + v21 + 40), sel_sourceChannel);
  if (v22)
  {
    id v23 = objc_msgSend(v22, sel_theme);
    swift_unknownObjectRelease();
  }
  else
  {
    id v23 = 0;
  }
  id v24 = objc_msgSend(self, sel_defaultMetrics);
  sub_1BFE45290(v23, v24, (uint64_t)v17, v20);

  swift_unknownObjectRelease();
  uint64_t v25 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  uint64_t v27 = v26;
  uint64_t v28 = sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v25);
  uint64_t v101 = sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  uint64_t v30 = v13 + 8;
  int v29 = *(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8);
  v29(v17, v12);
  uint64_t v111 = v109;
  uint64_t v31 = v109;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = 0x4020000000000000;
  uint64_t v33 = v107;
  uint64_t *v107 = v32;
  unint64_t v34 = *(void (**)(uint64_t *))(v13 + 104);
  unsigned int v87 = *MEMORY[0x1E4FABA08];
  v34(v33);
  sub_1C151738C();
  uint64_t v35 = v29(v33, v12);
  v98 = v86;
  uint64_t v111 = v31;
  __n128 v36 = MEMORY[0x1F4188790](v35);
  uint64_t v37 = v105;
  uint64_t v84 = v105;
  uint64_t v38 = *MEMORY[0x1E4FAB9E0];
  uint64_t v102 = v13 + 104;
  v100 = v34;
  ((void (*)(uint64_t *, uint64_t, uint64_t, __n128))v34)(v33, v38, v12, v36);
  uint64_t v108 = v28;
  uint64_t v85 = v28;
  uint64_t v106 = v27;
  v83[1] = v83;
  uint64_t v84 = v27;
  v83[0] = sub_1C1234B58;
  sub_1C15173FC();
  uint64_t v99 = v12;
  v104 = (void (*)(uint64_t *, uint64_t))v29;
  v29(v33, v12);
  uint64_t v110 = v109;
  swift_getKeyPath();
  uint64_t v39 = *(void *)(v37 + *(int *)(v103 + 28));
  if (*(unsigned char *)(v39 + qword_1EB8739C0)) {
    goto LABEL_9;
  }
  sub_1BFE4597C();
  uint64_t v40 = sub_1C151F56C();
  uint64_t v41 = v88;
  *uint64_t v88 = v40;
  uint64_t v42 = v89;
  uint64_t v43 = v90;
  (*(void (**)(uint64_t *, void, uint64_t))(v89 + 104))(v41, *MEMORY[0x1E4FBCBD8], v90);
  char v44 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v42 + 8))(v41, v43);
  if (v44)
  {
LABEL_9:
    uint64_t v46 = swift_allocObject();
    unint64_t v47 = *(void **)(v39 + *(void *)(*(void *)v39 + 136));
    *(void *)(v46 + 16) = v47;
    unint64_t v48 = v107;
    uint64_t *v107 = v46;
    LODWORD(v98) = *MEMORY[0x1E4FAB9C0];
    uint64_t v49 = v99;
    v100(v48);
    sub_1BFE44640();
    sub_1BFE4510C(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    uint64_t v51 = v50;
    uint64_t v52 = *(void *)(v50 - 8);
    unint64_t v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1C1529AE0;
    uint64_t v55 = (void *)(v54 + v53);
    uint64_t v56 = type metadata accessor for HeadlineViewLayout.Options(0);
    uint64_t v57 = v97;
    *uint64_t v55 = *(void *)&v97[*(int *)(v56 + 24)];
    (*(void (**)(void *, void, uint64_t))(v52 + 104))(v55, *MEMORY[0x1E4FAB570], v51);
    uint64_t v58 = v105;
    id v59 = v47;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    v104(v48, v49);
    if ((*v57 & 1) == 0) {
      goto LABEL_14;
    }
    uint64_t v60 = *(void *)(v58 + *(int *)(v103 + 32));
    if (!v60) {
      goto LABEL_14;
    }
    uint64_t v103 = v30;
    if (*(unsigned char *)(v60 + qword_1EB8739C0)) {
      goto LABEL_13;
    }
    sub_1BFE4597C();
    uint64_t v61 = sub_1C151F56C();
    uint64_t v62 = v88;
    *uint64_t v88 = v61;
    uint64_t v63 = v89;
    uint64_t v64 = v90;
    (*(void (**)(uint64_t *, void, uint64_t))(v89 + 104))(v62, *MEMORY[0x1E4FBCBD8], v90);
    char v65 = sub_1C151E26C();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v63 + 8))(v62, v64);
    if (v65)
    {
LABEL_13:
      uint64_t v66 = *(void **)(v60 + *(void *)(*(void *)v60 + 136));
      uint64_t v67 = v109;
      uint64_t v110 = v109;
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = 0x4014000000000000;
      unint64_t v69 = v107;
      uint64_t *v107 = v68;
      uint64_t v71 = v99;
      uint64_t v70 = v100;
      ((void (*)(uint64_t *, void, uint64_t))v100)(v69, v87, v99);
      id v72 = v66;
      sub_1C151738C();
      v104(v69, v71);
      uint64_t v110 = v67;
      swift_getKeyPath();
      uint64_t v73 = swift_allocObject();
      *(void *)(v73 + 16) = v72;
      uint64_t *v69 = v73;
      ((void (*)(uint64_t *, void, uint64_t))v70)(v69, v98, v71);
      id v74 = v72;
      sub_1C151737C();

      swift_release();
      v104(v69, v71);
LABEL_14:
      uint64_t v111 = v109;
      uint64_t v76 = v93;
      uint64_t v75 = v94;
      uint64_t v77 = v95;
      (*(void (**)(unsigned char *, void, uint64_t))(v94 + 104))(v93, *MEMORY[0x1E4FAB528], v95);
      uint64_t v78 = v96;
      sub_1C1234E60(v58, (uint64_t)v96);
      uint64_t v79 = v58;
      unint64_t v80 = (*(unsigned __int8 *)(v91 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
      uint64_t v81 = swift_allocObject();
      sub_1BFE43938((uint64_t)v78, v81 + v80);
      sub_1C151730C();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v76, v77);
      sub_1C1234E60(v79, (uint64_t)v78);
      uint64_t v82 = swift_allocObject();
      sub_1BFE43938((uint64_t)v78, v82 + v80);
      sub_1C1517CEC();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1234738(uint64_t a1)
{
  return sub_1C1233BA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char **)(v1 + 32));
}

uint64_t sub_1C1234744()
{
  return swift_deallocObject();
}

uint64_t sub_1C1234754(uint64_t a1, uint64_t a2)
{
  sub_1BFE4510C(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v24 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 36));
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB968], v5);
    sub_1BFE44640();
    sub_1BFE4510C(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    uint64_t v19 = *(void *)(v18 - 8);
    unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
    *(void *)(v21 + v20) = 1;
    (*(void (**)(void))(v19 + 104))();
    id v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
    sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v22);
    sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v23 = v17;
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1234B58(uint64_t a1)
{
  return sub_1C1234754(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1234B60()
{
  return swift_deallocObject();
}

uint64_t sub_1C1234B98(uint64_t a1, uint64_t a2)
{
  sub_1BFE4510C(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v18 - v7);
  uint64_t v21 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0x4034000000000000;
  *uint64_t v8 = v9;
  unsigned int v20 = *MEMORY[0x1E4FABA08];
  uint64_t v19 = *(void (**)(uint64_t *))(v6 + 104);
  v19(v8);
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB538];
  sub_1C10F2768(0, &qword_1EB871288, MEMORY[0x1E4FAB538]);
  v18[2] = v11;
  v18[1] = sub_1BFE45238(&qword_1EB871280, &qword_1EB871288, v10);
  sub_1C151738C();
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v12(v8, v5);
  uint64_t v21 = a1;
  swift_getKeyPath();
  uint64_t v13 = swift_allocObject();
  char v14 = (void *)(a2 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 24));
  uint64_t v15 = v14[3];
  uint64_t v16 = v14[4];
  __swift_project_boxed_opaque_existential_1(v14, v15);
  *(double *)(v13 + 16) = (*(double (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  *uint64_t v8 = v13;
  ((void (*)(uint64_t *, void, uint64_t))v19)(v8, v20, v5);
  sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v12)(v8, v5);
}

uint64_t sub_1C1234E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadlineViewLayout.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1234EC8(uint64_t a1)
{
  return sub_1C12352DC(a1, sub_1C1234B98);
}

uint64_t sub_1C1234EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  sub_1BFE4510C(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (void *)((char *)v27 - v6);
  uint64_t v31 = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0x4020000000000000;
  *uint64_t v7 = v8;
  uint64_t v9 = *MEMORY[0x1E4FABA08];
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB538];
  sub_1C10F2768(0, &qword_1EB871288, MEMORY[0x1E4FAB538]);
  v27[1] = v12;
  v27[0] = sub_1BFE45238(&qword_1EB871280, &qword_1EB871288, v11);
  sub_1C151738C();
  uint64_t v28 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  uint64_t v13 = v4;
  v28(v7, v4);
  uint64_t v31 = a1;
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = (void *)(v29 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 24));
  uint64_t v16 = v15[3];
  uint64_t v17 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v16);
  *(double *)(v14 + 16) = (*(double (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  *uint64_t v7 = v14;
  v10(v7, v9, v13);
  sub_1BFE44640();
  sub_1BFE4510C(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
  unint64_t v23 = v22 + v21;
  uint64_t v24 = *MEMORY[0x1E4FAB5E8];
  sub_1BFE4510C(0, &qword_1EB871298, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E4FAB620], v19);
  uint64_t v30 = v29;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v28)(v7, v13);
}

uint64_t sub_1C12352C4(uint64_t a1)
{
  return sub_1C12352DC(a1, sub_1C1234EE0);
}

uint64_t sub_1C12352DC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t sub_1C1235360(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  sub_1BFE4510C(0, &qword_1EB871370, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v37 - v6);
  uint64_t v38 = a1;
  uint64_t v44 = a1;
  swift_getKeyPath();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v10 = (void *)(a2 + *(int *)(v9 + 24));
  uint64_t v11 = v10[3];
  uint64_t v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  *(double *)(v8 + 16) = (*(double (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  *uint64_t v7 = v8;
  uint64_t v13 = *MEMORY[0x1E4FABA08];
  uint64_t v14 = v40;
  uint64_t v37 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 104);
  v37(v7, v13, v5);
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C10F2768(0, &qword_1EB871208, MEMORY[0x1E4FAB4D0]);
  uint64_t v17 = v16;
  uint64_t v18 = sub_1BFE45238(&qword_1EB871200, &qword_1EB871208, v15);
  uint64_t v19 = sub_1BFE13124(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  uint64_t v42 = v18;
  uint64_t v43 = v17;
  uint64_t v39 = v19;
  sub_1C151737C();
  swift_release();
  uint64_t v20 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  uint64_t v21 = v5;
  v20(v7, v5);
  uint64_t v22 = v41 + *(int *)(v9 + 20);
  uint64_t result = type metadata accessor for FeedHeadline(0);
  uint64_t v24 = (unsigned __int8 *)(v22 + *(int *)(result + 40));
  if (v24[1] != 1 || *v24 <= 1u)
  {
    uint64_t v25 = v38;
    uint64_t v44 = v38;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0x4010000000000000;
    *uint64_t v7 = v26;
    v37(v7, *MEMORY[0x1E4FABA00], v5);
    sub_1C151738C();
    v20(v7, v5);
    uint64_t v44 = v25;
    swift_getKeyPath();
    uint64_t v27 = v10[3];
    uint64_t v28 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v27);
    (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    sub_1BFE455E4();
    sub_1C1517C3C();
    sub_1BFE44640();
    sub_1BFE4510C(0, &qword_1EB8712A8, MEMORY[0x1E4FAB678]);
    uint64_t v30 = v29;
    uint64_t v31 = *(void *)(v29 - 8);
    unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    unint64_t v34 = v33 + v32;
    uint64_t v35 = *MEMORY[0x1E4FAB610];
    sub_1BFE4510C(0, &qword_1EB871298, MEMORY[0x1E4FAB618]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
    (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v34, *MEMORY[0x1E4FAB620], v30);
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t *, uint64_t))v20)(v7, v21);
  }
  return result;
}

uint64_t sub_1C1235878(uint64_t a1)
{
  return sub_1C1235360(a1, *(void *)(v1 + 16));
}

char *sub_1C1235880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] = 0;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView;
  *(void *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a3)
  {
    uint64_t v12 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  v19.receiver = v10;
  v19.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v19, sel_initWithStyle_reuseIdentifier_, a1, v12);

  uint64_t v14 = (char *)v13;
  id v15 = objc_msgSend(v14, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, *(void *)&v14[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel]);

  id v16 = objc_msgSend(v14, sel_contentView);
  id v17 = *(id *)&v14[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView];
  objc_msgSend(v16, sel_addSubview_, v17);

  return v14;
}

id sub_1C1235AAC()
{
  v45.receiver = v0;
  v45.super_class = (Class)swift_getObjectType();
  id result = objc_msgSendSuper2(&v45, sel_layoutSubviews);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds;
  if (*(double *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] > 0.0)
  {
    id v3 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v3, sel_bounds);
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v46.origin.x = v5;
    v46.origin.y = v7;
    v46.size.width = v9;
    v46.size.height = v11;
    double Width = CGRectGetWidth(v46);
    objc_msgSend(v0, sel_layoutMargins);
    double v14 = Width - v13;
    objc_msgSend(v0, sel_layoutMargins);
    CGFloat v16 = (v14 - v15)
        / *(double *)&v0[v2]
        * *(double *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds];
    id v17 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView];
    objc_msgSend(v0, sel_layoutMargins);
    CGFloat v19 = v18;
    id v20 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v20, sel_bounds);
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    CGFloat v28 = v27;

    v47.origin.x = v22;
    v47.origin.y = v24;
    v47.size.width = v26;
    v47.size.height = v28;
    v48.origin.y = CGRectGetHeight(v47) + -8.0 + -10.0;
    v48.size.height = 10.0;
    v48.origin.x = v19;
    v48.size.width = v16;
    CGRect v49 = CGRectIntegral(v48);
    objc_msgSend(v17, sel_setFrame_, v49.origin.x, v49.origin.y, v49.size.width, v49.size.height);
    uint64_t v29 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel];
    objc_msgSend(v0, sel_layoutMargins);
    CGFloat v31 = v30;
    id v32 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v32, sel_bounds);
    CGFloat v34 = v33;
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    CGFloat v40 = v39;

    v50.origin.x = v34;
    v50.origin.y = v36;
    v50.size.width = v38;
    v50.size.height = v40;
    double v41 = CGRectGetWidth(v50);
    objc_msgSend(v0, sel_layoutMargins);
    double v43 = v41 - v42;
    objc_msgSend(v0, sel_layoutMargins);
    v51.size.width = v43 - v44;
    v51.origin.y = 8.0;
    v51.size.height = 10.0;
    v51.origin.x = v31;
    CGRect v52 = CGRectIntegral(v51);
    return objc_msgSend(v29, sel_setFrame_, v52.origin.x, v52.origin.y, v52.size.width, v52.size.height);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatHistoryMeasurementCell()
{
  return self;
}

void sub_1C1235DB0()
{
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_timeInMilliseconds] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_totalTimeInMilliseconds] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_titleLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed33DebugFormatHistoryMeasurementCell_barView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C1235E94(uint64_t a1, void *aBlock, uint64_t ObjCClassMetadata, uint64_t a4)
{
  double v6 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  CGFloat v7 = _Block_copy(aBlock);
  if (v7)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    CGFloat v7 = sub_1C12373F8;
    if (!ObjCClassMetadata) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v8 = 0;
  if (ObjCClassMetadata) {
LABEL_3:
  }
    ObjCClassMetadata = swift_getObjCClassMetadata();
LABEL_4:
  if (a4) {
    a4 = sub_1C151E33C();
  }
  swift_retain();
  v6(v7, v8, ObjCClassMetadata, a4);
  swift_bridgeObjectRelease();
  sub_1BFC3E5C0((uint64_t)v7);
  return swift_release();
}

void sub_1C1235F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1C1515D2C();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id sub_1C1236050()
{
  sub_1BFF2ECDC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)v25 - v5;
  CGFloat v7 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzle);
  uint64_t v8 = sub_1C1237228(v7);
  uint64_t v10 = v9;
  id v11 = objc_msgSend(objc_msgSend(v7, sel_puzzleType), sel_nameForSharing);
  swift_unknownObjectRelease();
  sub_1C151E62C();

  v25[0] = v8;
  v25[1] = v10;
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v7, sel_identifier);
  if (!v12)
  {
    sub_1C151E62C();
    id v12 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v13 = objc_msgSend(self, sel_nss_NewsURLForPuzzleID_, v12);

  if (v13)
  {
    sub_1C1515F1C();

    uint64_t v14 = sub_1C1515FDC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
  }
  else
  {
    uint64_t v14 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  id v15 = sub_1C123641C((uint64_t)v7);
  id v16 = sub_1C1236614((uint64_t)v7);
  sub_1BFE0C070((uint64_t)v6, (uint64_t)v3, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  id v17 = v15;
  id v18 = v16;
  CGFloat v19 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  sub_1C1515FDC();
  uint64_t v20 = *(void *)(v14 - 8);
  double v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v3, 1, v14) != 1)
  {
    double v21 = (void *)sub_1C1515E9C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v14);
  }
  id v22 = objc_msgSend(objc_allocWithZone((Class)NELinkMetadataSource), sel_initWithTitle_url_imageProvider_iconProvider_, v19, v21, v17, v18);

  id v23 = objc_msgSend(v22, sel_linkMetadata);
  sub_1BFF5148C((uint64_t)v6, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  return v23;
}

id sub_1C123641C(uint64_t a1)
{
  uint64_t v2 = sub_1C15197AC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D78]), sel_init);
  sub_1C151979C();
  sub_1C151978C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  CGFloat v7 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = a1;
  aBlock[4] = sub_1C1237590;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1235E94;
  aBlock[3] = &block_descriptor_19_0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v6, sel_registerItemForTypeIdentifier_loadHandler_, v7, v10);
  _Block_release(v10);

  return v6;
}

id sub_1C1236614(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C15197AC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  CGFloat v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D78]), sel_init);
  sub_1C151979C();
  sub_1C151978C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = a1;
  aBlock[4] = sub_1C12373B8;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1235E94;
  aBlock[3] = &block_descriptor_99;
  id v11 = _Block_copy(aBlock);
  id v12 = v2;
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v8, sel_registerItemForTypeIdentifier_loadHandler_, v9, v11);
  _Block_release(v11);

  return v8;
}

uint64_t sub_1C12367EC(uint64_t (*a1)(void, void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1BFF2ECDC(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v17 - v11;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](a5 + 16);
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = sub_1C151EE9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    id v16 = (void *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v14;
    v16[5] = a6;
    v16[6] = a1;
    v16[7] = a2;
    swift_unknownObjectRetain();
    sub_1BFC648F8((uint64_t)a1);
    sub_1C0C833AC((uint64_t)v12, (uint64_t)&unk_1EA1AD400, (uint64_t)v16);
    return swift_release();
  }
  else if (a1)
  {
    return a1(0, 0);
  }
  return result;
}

uint64_t sub_1C1236968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return MEMORY[0x1F4188298](sub_1C123698C, 0, 0);
}

uint64_t sub_1C123698C()
{
  sub_1BFE0C070(v0[7] + OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider, (uint64_t)(v0 + 2), &qword_1EB881460, (void (*)(uint64_t))sub_1C12374C0);
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v2 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    id v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
    uint64_t v3 = (void *)swift_task_alloc();
    v0[11] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C1236B48;
    uint64_t v4 = v0[8];
    return v8(v4, v1, v2);
  }
  else
  {
    sub_1BFF5148C((uint64_t)(v0 + 2), &qword_1EB881460, (void (*)(uint64_t))sub_1C12374C0);
    uint64_t v6 = (void (*)(void, void))v0[9];
    if (v6) {
      v6(0, 0);
    }
    CGFloat v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1C1236B48(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C12376B0, 0, 0);
}

uint64_t sub_1C1236C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  sub_1BFF2ECDC(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v17 - v11;
  uint64_t v13 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a1;
  v14[7] = a2;
  id v15 = a5;
  swift_unknownObjectRetain();
  sub_1BFC648F8(a1);
  sub_1C0C833AC((uint64_t)v12, (uint64_t)&unk_1EA1AD3F0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1C1236D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return MEMORY[0x1F4188298](sub_1C1236DA8, 0, 0);
}

uint64_t sub_1C1236DA8()
{
  sub_1BFE0C070(v0[7] + OBJC_IVAR____TtC8NewsFeed28PuzzleLinkPresentationSource_puzzleImageShareAttributeProvider, (uint64_t)(v0 + 2), &qword_1EB881460, (void (*)(uint64_t))sub_1C12374C0);
  uint64_t v1 = v0[5];
  if (v1)
  {
    uint64_t v2 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    id v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16) + **(int **)(v2 + 16));
    uint64_t v3 = (void *)swift_task_alloc();
    v0[11] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C1236F64;
    uint64_t v4 = v0[8];
    return v8(v4, v1, v2);
  }
  else
  {
    sub_1BFF5148C((uint64_t)(v0 + 2), &qword_1EB881460, (void (*)(uint64_t))sub_1C12374C0);
    uint64_t v6 = (void (*)(void, void))v0[9];
    if (v6) {
      v6(0, 0);
    }
    CGFloat v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1C1236F64(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C1237064, 0, 0);
}

uint64_t sub_1C1237064()
{
  uint64_t v1 = *(void *)(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (v1)
  {
    uint64_t v2 = UIImagePNGRepresentation(*(UIImage **)(v0 + 96));
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = sub_1C151606C();
      unint64_t v6 = v5;

      CGFloat v7 = (void *)sub_1C151605C();
      sub_1BFE95664(v4, v6);
    }
    else
    {
      CGFloat v7 = 0;
    }
    id v8 = *(void **)(v0 + 96);
    uint64_t v9 = *(void (**)(void *, void))(v0 + 72);
    if (v9) {
      goto LABEL_8;
    }
LABEL_5:
    id v10 = v8;
    id v8 = v7;
    goto LABEL_9;
  }
  CGFloat v7 = 0;
  id v8 = 0;
  uint64_t v9 = *(void (**)(void *, void))(v0 + 72);
  if (!v9) {
    goto LABEL_5;
  }
LABEL_8:
  id v10 = v7;
  v9(v7, 0);

LABEL_9:
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t type metadata accessor for PuzzleLinkPresentationSource()
{
  return self;
}

uint64_t sub_1C1237228(void *a1)
{
  id v2 = objc_msgSend(a1, sel_publishDateString);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_1C151E62C();
    unint64_t v6 = v5;

    id v7 = objc_msgSend(a1, sel_subtitle);
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = sub_1C151E62C();
      unint64_t v11 = v10;

      uint64_t v12 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v12 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (v12)
      {
        uint64_t v13 = HIBYTE(v11) & 0xF;
        if ((v11 & 0x2000000000000000) == 0) {
          uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
        }
        if (v13)
        {
          sub_1C151E80C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          return v4;
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  id v15 = objc_msgSend(a1, sel_publishDateString);
  if (!v15) {
    return 0;
  }
  id v16 = v15;
  uint64_t v14 = sub_1C151E62C();

  return v14;
}

uint64_t sub_1C1237378()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12373B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1236C48(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C12373C0()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1C12373F8(uint64_t a1, uint64_t a2)
{
  sub_1C1235F9C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C1237404()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1BFC542F4;
  *(void *)(v4 + 72) = v2;
  *(void *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 56) = v5;
  return MEMORY[0x1F4188298](sub_1C1236DA8, 0, 0);
}

unint64_t sub_1C12374C0()
{
  unint64_t result = qword_1EB884BD0;
  if (!qword_1EB884BD0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB884BD0);
  }
  return result;
}

uint64_t sub_1C1237518()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C1237550()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1237590(uint64_t (*a1)(void, void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C12367EC(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t objectdestroy_7Tm_1()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12375F4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1C005E7F4;
  *(void *)(v4 + 72) = v2;
  *(void *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 56) = v5;
  return MEMORY[0x1F4188298](sub_1C123698C, 0, 0);
}

uint64_t FormatTransformData.init(knobs:policies:consumedArticleIDs:consumedIssueIDs:headlineScoringContext:issueScoringContext:clusteringRules:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v14 = *a5;
  char v15 = *a6;
  sub_1C0076DAC(a1, a8);
  uint64_t v16 = MEMORY[0x1E4FBC870];
  if (a2) {
    uint64_t v17 = a2;
  }
  else {
    uint64_t v17 = MEMORY[0x1E4FBC870];
  }
  uint64_t v18 = type metadata accessor for FormatTransformData();
  CGFloat v19 = (int *)v18;
  *(void *)(a8 + *(int *)(v18 + 20)) = v17;
  if (a3) {
    uint64_t v20 = a3;
  }
  else {
    uint64_t v20 = v16;
  }
  *(void *)(a8 + *(int *)(v18 + 24)) = v20;
  if (!a4) {
    a4 = v16;
  }
  sub_1C11AA7C0(a1);
  *(void *)(a8 + v19[7]) = a4;
  *(unsigned char *)(a8 + v19[8]) = v14;
  *(unsigned char *)(a8 + v19[9]) = v15;
  uint64_t v21 = a8 + v19[10];
  return sub_1C0086A60(a7, v21);
}

char *initializeBufferWithCopyOfBuffer for FormatTransformData(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatTransformKnobs();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v78 = v8;
      uint64_t v80 = v7;
      unint64_t v11 = *a2;
      *(void *)a1 = *a2;
      uint64_t v12 = (int *)type metadata accessor for FeedContext();
      uint64_t v13 = v12[5];
      char v14 = &a1[v13];
      char v15 = (char **)((char *)a2 + v13);
      uint64_t v16 = (int *)type metadata accessor for BundleSession();
      uint64_t v76 = *((void *)v16 - 1);
      uint64_t v17 = *(unsigned int (**)(void *, uint64_t, int *))(v76 + 48);
      uint64_t v18 = v11;
      if (v17(v15, 1, v16))
      {
        sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *(void *)char v14 = *v15;
        uint64_t v20 = v16[5];
        uint64_t v21 = &v14[v20];
        id v22 = (char *)v15 + v20;
        uint64_t v23 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        v14[v16[6]] = *((unsigned char *)v15 + v16[6]);
        v14[v16[7]] = *((unsigned char *)v15 + v16[7]);
        *(_OWORD *)&v14[v16[8]] = *(_OWORD *)((char *)v15 + v16[8]);
        *(void *)&v14[v16[9]] = *(void *)((char *)v15 + v16[9]);
        v14[v16[10]] = *((unsigned char *)v15 + v16[10]);
        v14[v16[11]] = *((unsigned char *)v15 + v16[11]);
        CGFloat v24 = *(void (**)(char *, void, uint64_t, int *))(v76 + 56);
        swift_bridgeObjectRetain();
        v24(v14, 0, 1, v16);
      }
      a1[v12[6]] = *((unsigned char *)a2 + v12[6]);
      a1[v12[7]] = *((unsigned char *)a2 + v12[7]);
      a1[v12[8]] = *((unsigned char *)a2 + v12[8]);
      a1[v12[9]] = *((unsigned char *)a2 + v12[9]);
      *(void *)&a1[v12[10]] = *(char **)((char *)a2 + v12[10]);
      *(void *)&a1[v12[11]] = *(char **)((char *)a2 + v12[11]);
      uint64_t v25 = v12[12];
      CGFloat v26 = &a1[v25];
      double v27 = (char **)((char *)a2 + v25);
      uint64_t v28 = *(uint64_t *)((char *)a2 + v25 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((unint64_t)(v28 - 1) >= 3)
      {
        *(void *)CGFloat v26 = *v27;
        *((void *)v26 + 1) = v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)CGFloat v26 = *(_OWORD *)v27;
      }
      a1[v12[13]] = *((unsigned char *)a2 + v12[13]);
      uint64_t v29 = v12[14];
      double v30 = *(char **)((char *)a2 + v29);
      *(void *)&a1[v29] = v30;
      uint64_t v31 = v12[15];
      id v32 = &a1[v31];
      double v33 = (char **)((char *)a2 + v31);
      uint64_t v34 = v33[1];
      *(void *)id v32 = *v33;
      *((void *)v32 + 1) = v34;
      uint64_t v35 = *(int *)(v80 + 20);
      CGFloat v36 = &a1[v35];
      double v37 = (char *)a2 + v35;
      long long v38 = *(_OWORD *)((char *)a2 + v35 + 24);
      *(_OWORD *)&a1[v35 + 24] = v38;
      uint64_t v39 = v38;
      uint64_t v77 = **(void (***)(char *, char *, uint64_t))(v38 - 8);
      id v40 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77(v36, v37, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(a1, 0, 1, v80);
    }
    uint64_t v41 = a3[6];
    *(void *)&a1[a3[5]] = *(char **)((char *)a2 + a3[5]);
    *(void *)&a1[v41] = *(char **)((char *)a2 + v41);
    uint64_t v42 = a3[8];
    *(void *)&a1[a3[7]] = *(char **)((char *)a2 + a3[7]);
    a1[v42] = *((unsigned char *)a2 + v42);
    uint64_t v43 = a3[10];
    a1[a3[9]] = *((unsigned char *)a2 + a3[9]);
    double v44 = &a1[v43];
    objc_super v45 = (char **)((char *)a2 + v43);
    CGRect v46 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
    uint64_t v47 = *((void *)v46 - 1);
    CGRect v48 = *(unsigned int (**)(void *, uint64_t, int *))(v47 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48(v45, 1, v46))
    {
      sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
      memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      *(void *)double v44 = *v45;
      v44[8] = *((unsigned char *)v45 + 8);
      *((void *)v44 + 2) = v45[2];
      v44[24] = *((unsigned char *)v45 + 24);
      uint64_t v50 = v46[6];
      CGRect v51 = &v44[v50];
      CGRect v52 = (void *)((char *)v45 + v50);
      uint64_t v53 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v56 = v52[1];
        *(void *)CGRect v51 = *v52;
        *((void *)v51 + 1) = v56;
        uint64_t v57 = *(int *)(v53 + 24);
        uint64_t v79 = (char *)v52 + v57;
        uint64_t v81 = &v51[v57];
        uint64_t v58 = sub_1C1516D9C();
        uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(v81, v79, v58);
        *(void *)&v51[*(int *)(v53 + 28)] = *(void *)((char *)v52 + *(int *)(v53 + 28));
        id v59 = *(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56);
        swift_bridgeObjectRetain();
        v59(v51, 0, 1, v53);
      }
      uint64_t v60 = v46[7];
      uint64_t v61 = &v44[v60];
      uint64_t v62 = (char *)v45 + v60;
      *(void *)uint64_t v61 = *(void *)v62;
      v61[8] = v62[8];
      uint64_t v63 = v46[8];
      uint64_t v64 = &v44[v63];
      char v65 = (char *)v45 + v63;
      v64[8] = v65[8];
      *(void *)uint64_t v64 = *(void *)v65;
      uint64_t v66 = v46[9];
      uint64_t v67 = &v44[v66];
      uint64_t v68 = (char *)v45 + v66;
      *(void *)uint64_t v67 = *(void *)v68;
      v67[8] = v68[8];
      uint64_t v69 = v46[10];
      uint64_t v70 = &v44[v69];
      uint64_t v71 = (char *)v45 + v69;
      uint64_t v72 = *((void *)v71 + 4);
      if (v72 == 1)
      {
        long long v73 = *((_OWORD *)v71 + 1);
        *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
        *((_OWORD *)v70 + 1) = v73;
        *((void *)v70 + 4) = *((void *)v71 + 4);
      }
      else
      {
        *(void *)uint64_t v70 = *(void *)v71;
        v70[8] = v71[8];
        *((void *)v70 + 2) = *((void *)v71 + 2);
        v70[24] = v71[24];
        *((void *)v70 + 4) = v72;
        swift_bridgeObjectRetain();
      }
      (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
    }
  }
  return a1;
}

uint64_t destroy for FormatTransformData(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {

    int v5 = (int *)type metadata accessor for FeedContext();
    unint64_t v6 = (char *)a1 + v5[5];
    uint64_t v7 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      uint64_t v8 = &v6[*(int *)(v7 + 20)];
      uint64_t v9 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)a1 + v5[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(int *)(v4 + 20));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = (char *)a1 + *(int *)(a2 + 40);
  uint64_t v11 = type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = &v10[*(int *)(v11 + 24)];
    uint64_t v14 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      char v15 = &v13[*(int *)(v14 + 24)];
      uint64_t v16 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease();
    }
    uint64_t result = *(void *)&v10[*(int *)(v11 + 40) + 32];
    if (result != 1)
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void **assignWithCopy for FormatTransformData(void **a1, void **a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatTransformKnobs();
  uint64_t v7 = *(void **)(v6 - 8);
  uint64_t v8 = (uint64_t (*)(void **, uint64_t, uint64_t))v7[6];
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1C0ED71A4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatTransformKnobs);
      goto LABEL_7;
    }
    uint64_t v21 = *a2;
    id v22 = *a1;
    *a1 = *a2;
    id v23 = v21;

    CGFloat v24 = (int *)type metadata accessor for FeedContext();
    uint64_t v25 = v24[5];
    CGFloat v26 = (void **)((char *)a1 + v25);
    double v27 = (void **)((char *)a2 + v25);
    uint64_t v28 = (int *)type metadata accessor for BundleSession();
    uint64_t v161 = *((void *)v28 - 1);
    v165 = v26;
    uint64_t v29 = *(uint64_t (**)(void *, uint64_t, int *))(v161 + 48);
    LODWORD(v26) = v29(v26, 1, v28);
    int v30 = v29(v27, 1, v28);
    if (v26)
    {
      if (v30)
      {
        sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v32 = *(void *)(*(void *)(v31 - 8) + 64);
        double v33 = v165;
LABEL_18:
        memcpy(v33, v27, v32);
        goto LABEL_21;
      }
      void *v165 = *v27;
      uint64_t v55 = v28[5];
      uint64_t v56 = (char *)v165 + v55;
      uint64_t v57 = (char *)v27 + v55;
      uint64_t v58 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      *((unsigned char *)v165 + v28[6]) = *((unsigned char *)v27 + v28[6]);
      *((unsigned char *)v165 + v28[7]) = *((unsigned char *)v27 + v28[7]);
      *(_OWORD *)((char *)v165 + v28[8]) = *(_OWORD *)((char *)v27 + v28[8]);
      *(void *)((char *)v165 + v28[9]) = *(void *)((char *)v27 + v28[9]);
      *((unsigned char *)v165 + v28[10]) = *((unsigned char *)v27 + v28[10]);
      *((unsigned char *)v165 + v28[11]) = *((unsigned char *)v27 + v28[11]);
      id v59 = *(void (**)(void *, void, uint64_t, int *))(v161 + 56);
      swift_bridgeObjectRetain();
      v59(v165, 0, 1, v28);
    }
    else
    {
      if (v30)
      {
        sub_1C0ED71A4((uint64_t)v165, (uint64_t (*)(void))type metadata accessor for BundleSession);
        sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v32 = *(void *)(*(void *)(v54 - 8) + 64);
        double v33 = v165;
        goto LABEL_18;
      }
      void *v165 = *v27;
      uint64_t v60 = v28[5];
      uint64_t v61 = (char *)v165 + v60;
      uint64_t v62 = (char *)v27 + v60;
      uint64_t v63 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 24))(v61, v62, v63);
      *((unsigned char *)v165 + v28[6]) = *((unsigned char *)v27 + v28[6]);
      *((unsigned char *)v165 + v28[7]) = *((unsigned char *)v27 + v28[7]);
      *(_OWORD *)((char *)v165 + v28[8]) = *(_OWORD *)((char *)v27 + v28[8]);
      *(void *)((char *)v165 + v28[9]) = *(void *)((char *)v27 + v28[9]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)v165 + v28[10]) = *((unsigned char *)v27 + v28[10]);
      *((unsigned char *)v165 + v28[11]) = *((unsigned char *)v27 + v28[11]);
    }
LABEL_21:
    *((unsigned char *)a1 + v24[6]) = *((unsigned char *)a2 + v24[6]);
    *((unsigned char *)a1 + v24[7]) = *((unsigned char *)a2 + v24[7]);
    *((unsigned char *)a1 + v24[8]) = *((unsigned char *)a2 + v24[8]);
    *((unsigned char *)a1 + v24[9]) = *((unsigned char *)a2 + v24[9]);
    *(void **)((char *)a1 + v24[10]) = *(void **)((char *)a2 + v24[10]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void **)((char *)a1 + v24[11]) = *(void **)((char *)a2 + v24[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v64 = v24[12];
    char v65 = (void **)((char *)a1 + v64);
    uint64_t v66 = (void **)((char *)a2 + v64);
    uint64_t v67 = *(uint64_t *)((char *)a1 + v64 + 8);
    unint64_t v68 = *(unint64_t *)((char *)a2 + v64 + 8) - 1;
    if ((unint64_t)(v67 - 1) >= 3)
    {
      if (v68 >= 3)
      {
        void *v65 = *v66;
        v65[1] = v66[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      sub_1C0ED71A4((uint64_t)v65, (uint64_t (*)(void))sub_1BFF97D54);
    }
    else if (v68 >= 3)
    {
      void *v65 = *v66;
      v65[1] = v66[1];
      swift_bridgeObjectRetain();
LABEL_28:
      *((unsigned char *)a1 + v24[13]) = *((unsigned char *)a2 + v24[13]);
      uint64_t v69 = v24[14];
      uint64_t v70 = *(void **)((char *)a1 + v69);
      uint64_t v71 = *(void **)((char *)a2 + v69);
      *(void **)((char *)a1 + v69) = v71;
      id v72 = v71;

      uint64_t v73 = v24[15];
      id v74 = (char *)a1 + v73;
      uint64_t v75 = (char *)a2 + v73;
      *(void **)((char *)a1 + v73) = *(void **)((char *)a2 + v73);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v74 + 1) = *((void *)v75 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + *(int *)(v6 + 20)), (uint64_t *)((char *)a2 + *(int *)(v6 + 20)));
      goto LABEL_29;
    }
    *(_OWORD *)char v65 = *(_OWORD *)v66;
    goto LABEL_28;
  }
  if (v10)
  {
LABEL_7:
    sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_29;
  }
  __src = (void (**)(void **, void, uint64_t, int *))v7;
  v170 = (int *)v6;
  uint64_t v11 = *a2;
  *a1 = *a2;
  uint64_t v12 = (int *)type metadata accessor for FeedContext();
  uint64_t v13 = v12[5];
  uint64_t v14 = (void **)((char *)a1 + v13);
  char v15 = (void **)((char *)a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for BundleSession();
  uint64_t v164 = *((void *)v16 - 1);
  uint64_t v17 = *(unsigned int (**)(void *, uint64_t, int *))(v164 + 48);
  id v18 = v11;
  if (v17(v15, 1, v16))
  {
    sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    void *v14 = *v15;
    uint64_t v34 = v16[5];
    uint64_t v35 = (char *)v14 + v34;
    CGFloat v36 = (char *)v15 + v34;
    uint64_t v37 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    *((unsigned char *)v14 + v16[6]) = *((unsigned char *)v15 + v16[6]);
    *((unsigned char *)v14 + v16[7]) = *((unsigned char *)v15 + v16[7]);
    *(_OWORD *)((char *)v14 + v16[8]) = *(_OWORD *)((char *)v15 + v16[8]);
    *(void *)((char *)v14 + v16[9]) = *(void *)((char *)v15 + v16[9]);
    *((unsigned char *)v14 + v16[10]) = *((unsigned char *)v15 + v16[10]);
    *((unsigned char *)v14 + v16[11]) = *((unsigned char *)v15 + v16[11]);
    long long v38 = *(void (**)(void *, void, uint64_t, int *))(v164 + 56);
    swift_bridgeObjectRetain();
    v38(v14, 0, 1, v16);
  }
  *((unsigned char *)a1 + v12[6]) = *((unsigned char *)a2 + v12[6]);
  *((unsigned char *)a1 + v12[7]) = *((unsigned char *)a2 + v12[7]);
  *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
  *((unsigned char *)a1 + v12[9]) = *((unsigned char *)a2 + v12[9]);
  *(void **)((char *)a1 + v12[10]) = *(void **)((char *)a2 + v12[10]);
  *(void **)((char *)a1 + v12[11]) = *(void **)((char *)a2 + v12[11]);
  uint64_t v39 = v12[12];
  id v40 = (void **)((char *)a1 + v39);
  uint64_t v41 = (void **)((char *)a2 + v39);
  unint64_t v42 = *(unint64_t *)((char *)a2 + v39 + 8) - 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v42 >= 3)
  {
    void *v40 = *v41;
    v40[1] = v41[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)id v40 = *(_OWORD *)v41;
  }
  *((unsigned char *)a1 + v12[13]) = *((unsigned char *)a2 + v12[13]);
  uint64_t v43 = v12[14];
  double v44 = *(void **)((char *)a2 + v43);
  *(void **)((char *)a1 + v43) = v44;
  uint64_t v45 = v12[15];
  CGRect v46 = (void **)((char *)a1 + v45);
  uint64_t v47 = (void **)((char *)a2 + v45);
  *CGRect v46 = *v47;
  v46[1] = v47[1];
  uint64_t v48 = v170[5];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = *(uint64_t *)((char *)a2 + v48 + 24);
  *((void *)v49 + 3) = v51;
  *((void *)v49 + 4) = *(void **)((char *)a2 + v48 + 32);
  CGRect v52 = **(void (***)(char *, char *, uint64_t))(v51 - 8);
  id v53 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52(v49, v50, v51);
  __src[7](a1, 0, 1, v170);
LABEL_29:
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v76 = a3[10];
  uint64_t v77 = (uint64_t)a1 + v76;
  uint64_t v78 = (char *)a2 + v76;
  uint64_t v79 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v80 = *((void *)v79 - 1);
  uint64_t v81 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v80 + 48);
  int v82 = v81(v77, 1, v79);
  int v83 = v81((uint64_t)v78, 1, v79);
  if (!v82)
  {
    if (v83)
    {
      sub_1C0ED71A4(v77, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
      goto LABEL_35;
    }
    uint64_t v93 = *(void *)v78;
    *(unsigned char *)(v77 + 8) = v78[8];
    *(void *)uint64_t v77 = v93;
    uint64_t v94 = *((void *)v78 + 2);
    *(unsigned char *)(v77 + 24) = v78[24];
    *(void *)(v77 + 16) = v94;
    uint64_t v95 = v79[6];
    v96 = (void *)(v77 + v95);
    v97 = &v78[v95];
    uint64_t v98 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v99 = *(void *)(v98 - 8);
    v100 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48);
    __srca = v96;
    LODWORD(v96) = v100((char *)v96, 1, v98);
    int v101 = v100(v97, 1, v98);
    if (v96)
    {
      if (v101)
      {
        sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        size_t v103 = *(void *)(*(void *)(v102 - 8) + 64);
        v104 = __srca;
LABEL_47:
        memcpy(v104, v97, v103);
        goto LABEL_50;
      }
      void *__srca = *(void *)v97;
      __srca[1] = *((void *)v97 + 1);
      uint64_t v129 = *(int *)(v98 + 24);
      v163 = &v97[v129];
      v166 = (char *)__srca + v129;
      uint64_t v130 = sub_1C1516D9C();
      v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16);
      swift_bridgeObjectRetain();
      v160(v166, v163, v130);
      *(void *)((char *)__srca + *(int *)(v98 + 28)) = *(void *)&v97[*(int *)(v98 + 28)];
      v131 = *(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56);
      swift_bridgeObjectRetain();
      v131(__srca, 0, 1, v98);
    }
    else
    {
      if (v101)
      {
        sub_1C0ED71A4((uint64_t)__srca, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
        sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        size_t v103 = *(void *)(*(void *)(v128 - 8) + 64);
        v104 = __srca;
        goto LABEL_47;
      }
      void *__srca = *(void *)v97;
      __srca[1] = *((void *)v97 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v132 = *(int *)(v98 + 24);
      v133 = (char *)__srca + v132;
      v134 = &v97[v132];
      uint64_t v135 = sub_1C1516D9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 24))(v133, v134, v135);
      *(void *)((char *)__srca + *(int *)(v98 + 28)) = *(void *)&v97[*(int *)(v98 + 28)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_50:
    uint64_t v136 = v79[7];
    uint64_t v137 = v77 + v136;
    v138 = &v78[v136];
    uint64_t v139 = *(void *)v138;
    *(unsigned char *)(v137 + 8) = v138[8];
    *(void *)uint64_t v137 = v139;
    uint64_t v140 = v79[8];
    uint64_t v141 = v77 + v140;
    v142 = &v78[v140];
    uint64_t v143 = *(void *)v142;
    *(unsigned char *)(v141 + 8) = v142[8];
    *(void *)uint64_t v141 = v143;
    uint64_t v144 = v79[9];
    uint64_t v145 = v77 + v144;
    v146 = &v78[v144];
    uint64_t v147 = *(void *)v146;
    *(unsigned char *)(v145 + 8) = v146[8];
    *(void *)uint64_t v145 = v147;
    uint64_t v148 = v79[10];
    uint64_t v149 = v77 + v148;
    v150 = &v78[v148];
    uint64_t v151 = *(void *)&v78[v148 + 32];
    if (*(void *)(v149 + 32) == 1)
    {
      if (v151 == 1)
      {
        long long v152 = *(_OWORD *)v150;
        long long v153 = *((_OWORD *)v150 + 1);
        *(void *)(v149 + 32) = *((void *)v150 + 4);
        *(_OWORD *)uint64_t v149 = v152;
        *(_OWORD *)(v149 + 16) = v153;
      }
      else
      {
        uint64_t v156 = *(void *)v150;
        *(unsigned char *)(v149 + 8) = v150[8];
        *(void *)uint64_t v149 = v156;
        uint64_t v157 = *((void *)v150 + 2);
        *(unsigned char *)(v149 + 24) = v150[24];
        *(void *)(v149 + 16) = v157;
        *(void *)(v149 + 32) = *((void *)v150 + 4);
        swift_bridgeObjectRetain();
      }
    }
    else if (v151 == 1)
    {
      sub_1C0921044(v149);
      uint64_t v154 = *((void *)v150 + 4);
      long long v155 = *((_OWORD *)v150 + 1);
      *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
      *(_OWORD *)(v149 + 16) = v155;
      *(void *)(v149 + 32) = v154;
    }
    else
    {
      uint64_t v158 = *(void *)v150;
      *(unsigned char *)(v149 + 8) = v150[8];
      *(void *)uint64_t v149 = v158;
      uint64_t v159 = *((void *)v150 + 2);
      *(unsigned char *)(v149 + 24) = v150[24];
      *(void *)(v149 + 16) = v159;
      *(void *)(v149 + 32) = *((void *)v150 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    return a1;
  }
  if (v83)
  {
LABEL_35:
    sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy((void *)v77, v78, *(void *)(*(void *)(v92 - 8) + 64));
    return a1;
  }
  uint64_t v84 = *(void *)v78;
  *(unsigned char *)(v77 + 8) = v78[8];
  *(void *)uint64_t v77 = v84;
  uint64_t v85 = *((void *)v78 + 2);
  *(unsigned char *)(v77 + 24) = v78[24];
  *(void *)(v77 + 16) = v85;
  uint64_t v86 = v79[6];
  unsigned int v87 = (void *)(v77 + v86);
  uint64_t v88 = &v78[v86];
  uint64_t v89 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v90 = *(void *)(v89 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
  {
    sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    *unsigned int v87 = *(void *)v88;
    v87[1] = *((void *)v88 + 1);
    uint64_t v105 = *(int *)(v89 + 24);
    __srcb = &v88[v105];
    v171 = (char *)v87 + v105;
    uint64_t v106 = sub_1C1516D9C();
    v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
    swift_bridgeObjectRetain();
    v162(v171, __srcb, v106);
    *(void *)((char *)v87 + *(int *)(v89 + 28)) = *(void *)&v88[*(int *)(v89 + 28)];
    v107 = *(void (**)(void *, void, uint64_t, uint64_t))(v90 + 56);
    swift_bridgeObjectRetain();
    v107(v87, 0, 1, v89);
  }
  uint64_t v108 = v79[7];
  uint64_t v109 = v77 + v108;
  uint64_t v110 = &v78[v108];
  uint64_t v111 = *(void *)v110;
  *(unsigned char *)(v109 + 8) = v110[8];
  *(void *)uint64_t v109 = v111;
  uint64_t v112 = v79[8];
  uint64_t v113 = v77 + v112;
  v114 = &v78[v112];
  uint64_t v115 = *(void *)v114;
  *(unsigned char *)(v113 + 8) = v114[8];
  *(void *)uint64_t v113 = v115;
  uint64_t v116 = v79[9];
  uint64_t v117 = v77 + v116;
  v118 = &v78[v116];
  uint64_t v119 = *(void *)v118;
  *(unsigned char *)(v117 + 8) = v118[8];
  *(void *)uint64_t v117 = v119;
  uint64_t v120 = v79[10];
  uint64_t v121 = v77 + v120;
  v122 = &v78[v120];
  if (*((void *)v122 + 4) == 1)
  {
    long long v123 = *(_OWORD *)v122;
    long long v124 = *((_OWORD *)v122 + 1);
    *(void *)(v121 + 32) = *((void *)v122 + 4);
    *(_OWORD *)uint64_t v121 = v123;
    *(_OWORD *)(v121 + 16) = v124;
  }
  else
  {
    uint64_t v125 = *(void *)v122;
    *(unsigned char *)(v121 + 8) = v122[8];
    *(void *)uint64_t v121 = v125;
    uint64_t v126 = *((void *)v122 + 2);
    *(unsigned char *)(v121 + 24) = v122[24];
    *(void *)(v121 + 16) = v126;
    *(void *)(v121 + 32) = *((void *)v122 + 4);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v80 + 56))(v77, 0, 1, v79);
  return a1;
}

void *initializeWithTake for FormatTransformData(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatTransformKnobs();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    int v9 = (int *)type metadata accessor for FeedContext();
    uint64_t v10 = v9[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    uint64_t v13 = (int *)type metadata accessor for BundleSession();
    uint64_t v14 = *((void *)v13 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
    {
      sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      *uint64_t v11 = *v12;
      uint64_t v16 = v13[5];
      id v53 = (char *)v12 + v16;
      uint64_t v54 = (char *)v11 + v16;
      uint64_t v17 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v54, v53, v17);
      *((unsigned char *)v11 + v13[6]) = *((unsigned char *)v12 + v13[6]);
      *((unsigned char *)v11 + v13[7]) = *((unsigned char *)v12 + v13[7]);
      *(_OWORD *)((char *)v11 + v13[8]) = *(_OWORD *)((char *)v12 + v13[8]);
      *(void *)((char *)v11 + v13[9]) = *(void *)((char *)v12 + v13[9]);
      *((unsigned char *)v11 + v13[10]) = *((unsigned char *)v12 + v13[10]);
      *((unsigned char *)v11 + v13[11]) = *((unsigned char *)v12 + v13[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
    }
    *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
    *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
    *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
    *(void *)((char *)a1 + v9[10]) = *(void *)((char *)a2 + v9[10]);
    *(void *)((char *)a1 + v9[11]) = *(void *)((char *)a2 + v9[11]);
    *(_OWORD *)((char *)a1 + v9[12]) = *(_OWORD *)((char *)a2 + v9[12]);
    *((unsigned char *)a1 + v9[13]) = *((unsigned char *)a2 + v9[13]);
    *(void *)((char *)a1 + v9[14]) = *(void *)((char *)a2 + v9[14]);
    *(_OWORD *)((char *)a1 + v9[15]) = *(_OWORD *)((char *)a2 + v9[15]);
    uint64_t v18 = *(int *)(v6 + 20);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    long long v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    *((void *)v19 + 4) = *((void *)v20 + 4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v22 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  uint64_t v24 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v25 = (void *)((char *)a1 + v24);
  CGFloat v26 = (void *)((char *)a2 + v24);
  double v27 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    *uint64_t v25 = *v26;
    *((unsigned char *)v25 + 8) = *((unsigned char *)v26 + 8);
    void v25[2] = v26[2];
    *((unsigned char *)v25 + 24) = *((unsigned char *)v26 + 24);
    uint64_t v30 = v27[6];
    uint64_t v31 = (_OWORD *)((char *)v25 + v30);
    size_t v32 = (_OWORD *)((char *)v26 + v30);
    uint64_t v33 = type metadata accessor for FeedGroupBundleArticleQuotas();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      *uint64_t v31 = *v32;
      uint64_t v36 = *(int *)(v33 + 24);
      uint64_t v55 = (char *)v31 + v36;
      uint64_t v37 = (char *)v32 + v36;
      uint64_t v38 = sub_1C1516D9C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v55, v37, v38);
      *(void *)((char *)v31 + *(int *)(v33 + 28)) = *(void *)((char *)v32 + *(int *)(v33 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    uint64_t v39 = v27[7];
    id v40 = (char *)v25 + v39;
    uint64_t v41 = (char *)v26 + v39;
    *(void *)id v40 = *(void *)v41;
    v40[8] = v41[8];
    uint64_t v42 = v27[8];
    uint64_t v43 = (char *)v25 + v42;
    double v44 = (char *)v26 + v42;
    v43[8] = v44[8];
    *(void *)uint64_t v43 = *(void *)v44;
    uint64_t v45 = v27[9];
    CGRect v46 = (char *)v25 + v45;
    uint64_t v47 = (char *)v26 + v45;
    *(void *)CGRect v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = v27[10];
    uint64_t v49 = (char *)v25 + v48;
    uint64_t v50 = (char *)v26 + v48;
    long long v51 = *((_OWORD *)v50 + 1);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v51;
    *((void *)v49 + 4) = *((void *)v50 + 4);
    (*(void (**)(void *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

void *assignWithTake for FormatTransformData(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatTransformKnobs();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1C0ED71A4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatTransformKnobs);
      goto LABEL_7;
    }
    uint64_t v19 = (void *)*a1;
    *a1 = *a2;

    uint64_t v20 = (int *)type metadata accessor for FeedContext();
    uint64_t v21 = v20[5];
    uint64_t v22 = (void *)((char *)a1 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = (int *)type metadata accessor for BundleSession();
    uint64_t v124 = *((void *)v24 - 1);
    uint64_t v125 = v22;
    uint64_t v25 = *(uint64_t (**)(void *, uint64_t, int *))(v124 + 48);
    LODWORD(v22) = v25(v22, 1, v24);
    int v26 = v25(v23, 1, v24);
    if (v22)
    {
      if (v26)
      {
        sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
        uint64_t v29 = v125;
LABEL_15:
        memcpy(v29, v23, v28);
        goto LABEL_18;
      }
      *uint64_t v125 = *v23;
      uint64_t v37 = v24[5];
      uint64_t v38 = (char *)v125 + v37;
      uint64_t v39 = (char *)v23 + v37;
      uint64_t v40 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      *((unsigned char *)v125 + v24[6]) = *((unsigned char *)v23 + v24[6]);
      *((unsigned char *)v125 + v24[7]) = *((unsigned char *)v23 + v24[7]);
      *(_OWORD *)((char *)v125 + v24[8]) = *(_OWORD *)((char *)v23 + v24[8]);
      *(void *)((char *)v125 + v24[9]) = *(void *)((char *)v23 + v24[9]);
      *((unsigned char *)v125 + v24[10]) = *((unsigned char *)v23 + v24[10]);
      *((unsigned char *)v125 + v24[11]) = *((unsigned char *)v23 + v24[11]);
      (*(void (**)(void *, void, uint64_t, int *))(v124 + 56))(v125, 0, 1, v24);
    }
    else
    {
      if (v26)
      {
        sub_1C0ED71A4((uint64_t)v125, (uint64_t (*)(void))type metadata accessor for BundleSession);
        sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
        size_t v28 = *(void *)(*(void *)(v36 - 8) + 64);
        uint64_t v29 = v125;
        goto LABEL_15;
      }
      *uint64_t v125 = *v23;
      uint64_t v41 = v24[5];
      uint64_t v42 = (char *)v125 + v41;
      uint64_t v43 = (char *)v23 + v41;
      uint64_t v44 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
      *((unsigned char *)v125 + v24[6]) = *((unsigned char *)v23 + v24[6]);
      *((unsigned char *)v125 + v24[7]) = *((unsigned char *)v23 + v24[7]);
      *(_OWORD *)((char *)v125 + v24[8]) = *(_OWORD *)((char *)v23 + v24[8]);
      *(void *)((char *)v125 + v24[9]) = *(void *)((char *)v23 + v24[9]);
      swift_bridgeObjectRelease();
      *((unsigned char *)v125 + v24[10]) = *((unsigned char *)v23 + v24[10]);
      *((unsigned char *)v125 + v24[11]) = *((unsigned char *)v23 + v24[11]);
    }
LABEL_18:
    *((unsigned char *)a1 + v20[6]) = *((unsigned char *)a2 + v20[6]);
    *((unsigned char *)a1 + v20[7]) = *((unsigned char *)a2 + v20[7]);
    *((unsigned char *)a1 + v20[8]) = *((unsigned char *)a2 + v20[8]);
    *((unsigned char *)a1 + v20[9]) = *((unsigned char *)a2 + v20[9]);
    *(void *)((char *)a1 + v20[10]) = *(void *)((char *)a2 + v20[10]);
    swift_bridgeObjectRelease();
    *(void *)((char *)a1 + v20[11]) = *(void *)((char *)a2 + v20[11]);
    swift_bridgeObjectRelease();
    uint64_t v45 = v20[12];
    CGRect v46 = (void *)((char *)a1 + v45);
    uint64_t v47 = (void *)((char *)a2 + v45);
    if ((unint64_t)(*(void *)((char *)a1 + v45 + 8) - 1) >= 3)
    {
      uint64_t v48 = v47[1];
      if ((unint64_t)(v48 - 1) >= 3)
      {
        *CGRect v46 = *v47;
        v46[1] = v48;
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      sub_1C0ED71A4((uint64_t)v46, (uint64_t (*)(void))sub_1BFF97D54);
    }
    *(_OWORD *)CGRect v46 = *(_OWORD *)v47;
LABEL_23:
    *((unsigned char *)a1 + v20[13]) = *((unsigned char *)a2 + v20[13]);
    uint64_t v49 = v20[14];
    uint64_t v50 = *(void **)((char *)a1 + v49);
    *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

    uint64_t v51 = v20[15];
    CGRect v52 = (char *)a1 + v51;
    id v53 = (char *)a2 + v51;
    *(void *)((char *)a1 + v51) = *(void *)((char *)a2 + v51);
    swift_bridgeObjectRelease();
    *((void *)v52 + 1) = *((void *)v53 + 1);
    swift_bridgeObjectRelease();
    uint64_t v54 = *(int *)(v6 + 20);
    uint64_t v55 = (char *)a1 + v54;
    uint64_t v56 = (char *)a2 + v54;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v54);
    long long v57 = *((_OWORD *)v56 + 1);
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *((_OWORD *)v55 + 1) = v57;
    *((void *)v55 + 4) = *((void *)v56 + 4);
    goto LABEL_24;
  }
  if (v10)
  {
LABEL_7:
    sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
    memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_24;
  }
  *a1 = *a2;
  uint64_t v11 = (int *)type metadata accessor for FeedContext();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for BundleSession();
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_1C0076E64(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v30 = v15[5];
    uint64_t v126 = (char *)v14 + v30;
    __src = (char *)v13 + v30;
    uint64_t v31 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(__src, v126, v31);
    *((unsigned char *)v13 + v15[6]) = *((unsigned char *)v14 + v15[6]);
    *((unsigned char *)v13 + v15[7]) = *((unsigned char *)v14 + v15[7]);
    *(_OWORD *)((char *)v13 + v15[8]) = *(_OWORD *)((char *)v14 + v15[8]);
    *(void *)((char *)v13 + v15[9]) = *(void *)((char *)v14 + v15[9]);
    *((unsigned char *)v13 + v15[10]) = *((unsigned char *)v14 + v15[10]);
    *((unsigned char *)v13 + v15[11]) = *((unsigned char *)v14 + v15[11]);
    (*(void (**)(void *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
  *((unsigned char *)a1 + v11[7]) = *((unsigned char *)a2 + v11[7]);
  *((unsigned char *)a1 + v11[8]) = *((unsigned char *)a2 + v11[8]);
  *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
  *(void *)((char *)a1 + v11[10]) = *(void *)((char *)a2 + v11[10]);
  *(void *)((char *)a1 + v11[11]) = *(void *)((char *)a2 + v11[11]);
  *(_OWORD *)((char *)a1 + v11[12]) = *(_OWORD *)((char *)a2 + v11[12]);
  *((unsigned char *)a1 + v11[13]) = *((unsigned char *)a2 + v11[13]);
  *(void *)((char *)a1 + v11[14]) = *(void *)((char *)a2 + v11[14]);
  *(_OWORD *)((char *)a1 + v11[15]) = *(_OWORD *)((char *)a2 + v11[15]);
  uint64_t v32 = *(int *)(v6 + 20);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  *((void *)v33 + 4) = *((void *)v34 + 4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_24:
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v58 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v58) = *((unsigned char *)a2 + v58);
  uint64_t v59 = a3[10];
  uint64_t v60 = (uint64_t)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v63 = *((void *)v62 - 1);
  uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64((uint64_t)v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      *(void *)uint64_t v60 = *(void *)v61;
      *(unsigned char *)(v60 + 8) = v61[8];
      *(void *)(v60 + 16) = *((void *)v61 + 2);
      *(unsigned char *)(v60 + 24) = v61[24];
      uint64_t v67 = v62[6];
      unint64_t v68 = (_OWORD *)(v60 + v67);
      uint64_t v69 = &v61[v67];
      uint64_t v70 = type metadata accessor for FeedGroupBundleArticleQuotas();
      uint64_t v71 = *(void *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        *unint64_t v68 = *(_OWORD *)v69;
        uint64_t v84 = *(int *)(v70 + 24);
        __srca = (char *)v68 + v84;
        uint64_t v85 = &v69[v84];
        uint64_t v86 = sub_1C1516D9C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(__srca, v85, v86);
        *(void *)((char *)v68 + *(int *)(v70 + 28)) = *(void *)&v69[*(int *)(v70 + 28)];
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      uint64_t v87 = v62[7];
      uint64_t v88 = v60 + v87;
      uint64_t v89 = &v61[v87];
      *(void *)uint64_t v88 = *(void *)v89;
      *(unsigned char *)(v88 + 8) = v89[8];
      uint64_t v90 = v62[8];
      uint64_t v91 = v60 + v90;
      uint64_t v92 = &v61[v90];
      *(unsigned char *)(v91 + 8) = v92[8];
      *(void *)uint64_t v91 = *(void *)v92;
      uint64_t v93 = v62[9];
      uint64_t v94 = v60 + v93;
      uint64_t v95 = &v61[v93];
      *(void *)uint64_t v94 = *(void *)v95;
      *(unsigned char *)(v94 + 8) = v95[8];
      uint64_t v96 = v62[10];
      uint64_t v97 = v60 + v96;
      uint64_t v98 = &v61[v96];
      long long v99 = *((_OWORD *)v98 + 1);
      *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
      *(_OWORD *)(v97 + 16) = v99;
      *(void *)(v97 + 32) = *((void *)v98 + 4);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v63 + 56))(v60, 0, 1, v62);
      return a1;
    }
LABEL_30:
    sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy((void *)v60, v61, *(void *)(*(void *)(v73 - 8) + 64));
    return a1;
  }
  if (v66)
  {
    sub_1C0ED71A4(v60, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
    goto LABEL_30;
  }
  *(void *)uint64_t v60 = *(void *)v61;
  *(unsigned char *)(v60 + 8) = v61[8];
  *(void *)(v60 + 16) = *((void *)v61 + 2);
  *(unsigned char *)(v60 + 24) = v61[24];
  uint64_t v74 = v62[6];
  uint64_t v75 = v60 + v74;
  uint64_t v76 = &v61[v74];
  uint64_t v77 = type metadata accessor for FeedGroupBundleArticleQuotas();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  uint64_t v127 = v75;
  LODWORD(v75) = v79(v75, 1, v77);
  int v80 = v79((uint64_t)v76, 1, v77);
  if (v75)
  {
    if (!v80)
    {
      *(_OWORD *)uint64_t v127 = *(_OWORD *)v76;
      uint64_t v101 = *(int *)(v77 + 24);
      uint64_t v102 = v127 + v101;
      size_t v103 = &v76[v101];
      uint64_t v104 = sub_1C1516D9C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
      *(void *)(v127 + *(int *)(v77 + 28)) = *(void *)&v76[*(int *)(v77 + 28)];
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v127, 0, 1, v77);
      goto LABEL_41;
    }
    sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    size_t v82 = *(void *)(*(void *)(v81 - 8) + 64);
    int v83 = (void *)v127;
  }
  else
  {
    if (!v80)
    {
      *(void *)uint64_t v127 = *(void *)v76;
      *(void *)(v127 + 8) = *((void *)v76 + 1);
      swift_bridgeObjectRelease();
      uint64_t v105 = *(int *)(v77 + 24);
      uint64_t v106 = v127 + v105;
      v107 = &v76[v105];
      uint64_t v108 = sub_1C1516D9C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v108 - 8) + 40))(v106, v107, v108);
      *(void *)(v127 + *(int *)(v77 + 28)) = *(void *)&v76[*(int *)(v77 + 28)];
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    sub_1C0ED71A4(v127, (uint64_t (*)(void))type metadata accessor for FeedGroupBundleArticleQuotas);
    sub_1C0076E64(0, (unint64_t *)&unk_1EB884970, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    size_t v82 = *(void *)(*(void *)(v100 - 8) + 64);
    int v83 = (void *)v127;
  }
  memcpy(v83, v76, v82);
LABEL_41:
  uint64_t v109 = v62[7];
  uint64_t v110 = v60 + v109;
  uint64_t v111 = &v61[v109];
  *(void *)uint64_t v110 = *(void *)v111;
  *(unsigned char *)(v110 + 8) = v111[8];
  uint64_t v112 = v62[8];
  uint64_t v113 = v60 + v112;
  v114 = &v61[v112];
  *(unsigned char *)(v113 + 8) = v114[8];
  *(void *)uint64_t v113 = *(void *)v114;
  uint64_t v115 = v62[9];
  uint64_t v116 = v60 + v115;
  uint64_t v117 = &v61[v115];
  *(void *)uint64_t v116 = *(void *)v117;
  *(unsigned char *)(v116 + 8) = v117[8];
  uint64_t v118 = v62[10];
  uint64_t v119 = v60 + v118;
  uint64_t v120 = &v61[v118];
  if (*(void *)(v119 + 32) != 1)
  {
    uint64_t v121 = *((void *)v120 + 4);
    if (v121 != 1)
    {
      *(void *)uint64_t v119 = *(void *)v120;
      *(unsigned char *)(v119 + 8) = v120[8];
      *(void *)(v119 + 16) = *((void *)v120 + 2);
      *(unsigned char *)(v119 + 24) = v120[24];
      *(void *)(v119 + 32) = v121;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0921044(v119);
  }
  long long v122 = *((_OWORD *)v120 + 1);
  *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
  *(_OWORD *)(v119 + 16) = v122;
  *(void *)(v119 + 32) = *((void *)v120 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTransformData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C123A520);
}

uint64_t sub_1C123A520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for FormatTransformData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C123A698);
}

void sub_1C123A698(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C0076E64(0, &qword_1EB87F200, (void (*)(uint64_t))type metadata accessor for FormatTransformKnobs);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    sub_1C0076E64(0, (unint64_t *)&unk_1EB882CC0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    v12(v14, a2, a2, v13);
  }
}

void sub_1C123A7FC(void **a1, char a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
  int v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v5 = (void *)sub_1C0636450(v5);
  }
  uint64_t v6 = v5[2];
  v7[0] = (uint64_t)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7[1] = v6;
  sub_1C123A8B4(v7, a2 & 1);
  *a1 = v5;
}

void sub_1C123A8B4(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  int v448 = a2 & 1;
  sub_1C123EF74(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v382 = (uint64_t)&v376 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v376 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v385 = (uint64_t)&v376 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v387 = (uint64_t)&v376 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v381 = (uint64_t)&v376 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v380 = (uint64_t)&v376 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v384 = (uint64_t)&v376 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v386 = (uint64_t)&v376 - v21;
  v414 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
  MEMORY[0x1F4188790](v414);
  uint64_t v413 = (uint64_t)&v376 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v425 = (uint64_t)&v376 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v412 = (uint64_t)&v376 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v424 = (uint64_t)&v376 - v28;
  uint64_t v419 = type metadata accessor for PuzzleLeaderboardEntry();
  MEMORY[0x1F4188790](v419);
  uint64_t v418 = (uint64_t)&v376 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C123EF74(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v376 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  long long v35 = (char *)&v376 - v34;
  MEMORY[0x1F4188790](v36);
  uint64_t v423 = (uint64_t)&v376 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v408 = (uint64_t)&v376 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v376 - v41;
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v376 - v44;
  MEMORY[0x1F4188790](v46);
  uint64_t v422 = (uint64_t)&v376 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v407 = (uint64_t)&v376 - v49;
  uint64_t v50 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v50);
  uint64_t v404 = (uint64_t)&v376 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v52);
  uint64_t v403 = (uint64_t)&v376 - v53;
  MEMORY[0x1F4188790](v54);
  uint64_t v406 = (uint64_t)&v376 - v55;
  MEMORY[0x1F4188790](v56);
  v439 = (char *)&v376 - v57;
  MEMORY[0x1F4188790](v58);
  uint64_t v430 = (uint64_t)&v376 - v59;
  MEMORY[0x1F4188790](v60);
  uint64_t v421 = (uint64_t)&v376 - v61;
  MEMORY[0x1F4188790](v62);
  uint64_t v402 = (uint64_t)&v376 - v63;
  MEMORY[0x1F4188790](v64);
  uint64_t v401 = (uint64_t)&v376 - v65;
  MEMORY[0x1F4188790](v66);
  uint64_t v405 = (uint64_t)&v376 - v67;
  MEMORY[0x1F4188790](v68);
  v438 = (char *)&v376 - v69;
  MEMORY[0x1F4188790](v70);
  uint64_t v429 = (uint64_t)&v376 - v71;
  MEMORY[0x1F4188790](v72);
  uint64_t v420 = (uint64_t)&v376 - v73;
  uint64_t v74 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v74 - 8);
  uint64_t v416 = (uint64_t)&v376 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v76);
  uint64_t v415 = (uint64_t)&v376 - v77;
  sub_1C123EFC8();
  uint64_t v444 = v78;
  MEMORY[0x1F4188790](v78);
  uint64_t v443 = (uint64_t)&v376 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v80);
  uint64_t v442 = (uint64_t)&v376 - v81;
  uint64_t v456 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v456);
  v447 = (char *)&v376 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v83);
  uint64_t v453 = (uint64_t)&v376 - v84;
  MEMORY[0x1F4188790](v85);
  uint64_t v411 = (uint64_t)&v376 - v86;
  MEMORY[0x1F4188790](v87);
  uint64_t v428 = (uint64_t)&v376 - v88;
  MEMORY[0x1F4188790](v89);
  uint64_t v390 = (uint64_t)&v376 - v90;
  MEMORY[0x1F4188790](v91);
  uint64_t v391 = (uint64_t)&v376 - v92;
  uint64_t v446 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v446);
  uint64_t v441 = (uint64_t)&v376 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v94);
  uint64_t v450 = (uint64_t)&v376 - v95;
  MEMORY[0x1F4188790](v96);
  uint64_t v449 = (uint64_t)&v376 - v97;
  MEMORY[0x1F4188790](v98);
  uint64_t v452 = (uint64_t)&v376 - v99;
  MEMORY[0x1F4188790](v100);
  uint64_t v395 = (uint64_t)&v376 - v101;
  MEMORY[0x1F4188790](v102);
  uint64_t v394 = (uint64_t)&v376 - v103;
  MEMORY[0x1F4188790](v104);
  uint64_t v410 = (uint64_t)&v376 - v105;
  MEMORY[0x1F4188790](v106);
  uint64_t v409 = (uint64_t)&v376 - v107;
  MEMORY[0x1F4188790](v108);
  uint64_t v383 = (uint64_t)&v376 - v109;
  MEMORY[0x1F4188790](v110);
  v433 = (char *)&v376 - v111;
  MEMORY[0x1F4188790](v112);
  uint64_t v389 = (uint64_t)&v376 - v113;
  MEMORY[0x1F4188790](v114);
  uint64_t v388 = (uint64_t)&v376 - v115;
  uint64_t v451 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v436 = *(void *)(v451 - 8);
  MEMORY[0x1F4188790](v451);
  uint64_t v427 = (uint64_t)&v376 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v117);
  uint64_t v460 = (uint64_t)&v376 - v118;
  MEMORY[0x1F4188790](v119);
  uint64_t v462 = (uint64_t)&v376 - v120;
  MEMORY[0x1F4188790](v121);
  uint64_t v461 = (uint64_t)&v376 - v122;
  MEMORY[0x1F4188790](v123);
  uint64_t v437 = (uint64_t)&v376 - v124;
  MEMORY[0x1F4188790](v125);
  uint64_t v432 = (uint64_t)&v376 - v126;
  MEMORY[0x1F4188790](v127);
  v435 = (char *)&v376 - v128;
  MEMORY[0x1F4188790](v129);
  uint64_t v393 = (uint64_t)&v376 - v130;
  v131 = a1;
  uint64_t v132 = a1[1];
  uint64_t v400 = sub_1C152086C();
  if (v400 >= v132)
  {
    if (v132 < 0) {
      goto LABEL_300;
    }
    if (v132) {
      sub_1C123D94C(0, v132, 1, v131, v448);
    }
    return;
  }
  if (v132 >= 0) {
    uint64_t v133 = v132;
  }
  else {
    uint64_t v133 = v132 + 1;
  }
  if (v132 < -1)
  {
LABEL_308:
    sub_1C15203FC();
    __break(1u);
    JUMPOUT(0x1C123D92CLL);
  }
  uint64_t v458 = v132;
  if (v132 < 2)
  {
    unint64_t v434 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v436 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v436 + 80));
    if (v132 != 1)
    {
      unint64_t v145 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v139 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v368 = MEMORY[0x1E4FBC860];
      v138 = v131;
      goto LABEL_265;
    }
    uint64_t v440 = v2;
    uint64_t v379 = MEMORY[0x1E4FBC860];
    v378 = v9;
  }
  else
  {
    uint64_t v440 = v2;
    v378 = v9;
    uint64_t v134 = v133 >> 1;
    uint64_t v135 = sub_1C151ECCC();
    *(void *)(v135 + 16) = v134;
    uint64_t v136 = *(unsigned __int8 *)(v436 + 80);
    uint64_t v379 = v135;
    unint64_t v434 = v135 + ((v136 + 32) & ~v136);
  }
  uint64_t v137 = 0;
  v445 = v131;
  v399 = v32;
  v138 = v131;
  v398 = v35;
  v397 = v42;
  uint64_t v139 = (char *)MEMORY[0x1E4FBC860];
  v396 = v45;
  uint64_t v426 = v50;
  uint64_t v140 = (uint64_t)v447;
  uint64_t v141 = (uint64_t)v433;
  uint64_t v142 = (uint64_t)v435;
  uint64_t v143 = v400;
  uint64_t v144 = v458;
LABEL_16:
  uint64_t v146 = v137 + 1;
  uint64_t v431 = v137;
  if (v137 + 1 >= v144) {
    goto LABEL_56;
  }
  uint64_t v458 = v144;
  uint64_t v147 = v137;
  uint64_t v148 = *v138;
  uint64_t v149 = *(void *)(v436 + 72);
  uint64_t v454 = v146;
  uint64_t v150 = v393;
  sub_1C123EEAC(v148 + v149 * v146, v393, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  uint64_t v457 = v148;
  sub_1C123EEAC(v148 + v149 * v147, v142, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  uint64_t v151 = v391;
  sub_1C123EEAC(v150, v391, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v392 = v139;
  if (EnumCaseMultiPayload == 6)
  {
    uint64_t v153 = v389;
    sub_1BFF3DC58(v151, v389, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v154 = v153;
    uint64_t v155 = v388;
    sub_1BFF3DC58(v154, v388, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v156 = v390;
    sub_1C123EEAC(v142, v390, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v157 = v383;
      sub_1BFF3DC58(v156, v383, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1BFF3DC58(v157, v141, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v158 = *(int *)(v446 + 20);
      uint64_t v159 = v155 + v158;
      uint64_t v160 = v141 + v158;
      uint64_t v144 = v458;
      if (v448)
      {
        uint64_t v161 = v159;
        uint64_t v159 = v160;
      }
      else
      {
        uint64_t v161 = v160;
      }
      LODWORD(v459) = !_s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v161, v159);
      sub_1C123EF14(v141, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1C123EF14(v155, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v139 = v392;
      uint64_t v142 = (uint64_t)v435;
    }
    else
    {
      sub_1C123EF14(v156, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      sub_1C123EF14(v155, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      LODWORD(v459) = 1;
      uint64_t v139 = v392;
      uint64_t v142 = (uint64_t)v435;
      uint64_t v144 = v458;
    }
  }
  else
  {
    sub_1C123EF14(v151, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    LODWORD(v459) = 1;
    uint64_t v144 = v458;
  }
  sub_1C123EF14(v142, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  sub_1C123EF14(v393, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
  uint64_t v146 = v431 + 2;
  if (v431 + 2 >= v144)
  {
LABEL_39:
    if ((v459 & 1) == 0)
    {
LABEL_53:
      uint64_t v143 = v400;
      v138 = v445;
      uint64_t v137 = v431;
      if (v146 >= v144) {
        goto LABEL_216;
      }
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v162 = v149 * v454;
    uint64_t v163 = v457;
    uint64_t v164 = v149 * v146;
    while (1)
    {
      uint64_t v165 = v146;
      uint64_t v166 = v432;
      sub_1C123EEAC(v163 + v164, v432, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C123EEAC(v163 + v162, v437, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v167 = v428;
      sub_1C123EEAC(v166, v428, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v168 = v410;
        sub_1BFF3DC58(v167, v410, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v169 = v409;
        sub_1BFF3DC58(v168, v409, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v170 = v411;
        sub_1C123EEAC(v437, v411, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          uint64_t v171 = v395;
          sub_1BFF3DC58(v170, v395, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          uint64_t v172 = v394;
          sub_1BFF3DC58(v171, v394, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          uint64_t v173 = *(int *)(v446 + 20);
          uint64_t v174 = v169 + v173;
          uint64_t v175 = v172 + v173;
          if (v448)
          {
            uint64_t v176 = v174;
            uint64_t v174 = v175;
          }
          else
          {
            uint64_t v176 = v175;
          }
          BOOL v177 = !_s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v176, v174);
          sub_1C123EF14(v172, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          sub_1C123EF14(v169, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        }
        else
        {
          sub_1C123EF14(v170, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          sub_1C123EF14(v169, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          BOOL v177 = 1;
        }
        uint64_t v144 = v458;
      }
      else
      {
        sub_1C123EF14(v167, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        BOOL v177 = 1;
      }
      sub_1C123EF14(v437, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C123EF14(v432, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      if ((v459 ^ v177)) {
        break;
      }
      uint64_t v146 = v165 + 1;
      v163 += v149;
      if (v144 == v165 + 1)
      {
        uint64_t v146 = v144;
        uint64_t v140 = (uint64_t)v447;
        uint64_t v141 = (uint64_t)v433;
        uint64_t v139 = v392;
        uint64_t v142 = (uint64_t)v435;
        goto LABEL_39;
      }
    }
    uint64_t v140 = (uint64_t)v447;
    uint64_t v141 = (uint64_t)v433;
    uint64_t v139 = v392;
    uint64_t v142 = (uint64_t)v435;
    uint64_t v146 = v165;
    if ((v459 & 1) == 0) {
      goto LABEL_53;
    }
  }
  if (v146 < v431) {
    goto LABEL_301;
  }
  if (v431 >= v146)
  {
    uint64_t v143 = v400;
    v138 = v445;
    uint64_t v137 = v431;
LABEL_56:
    if (v146 >= v144) {
      goto LABEL_216;
    }
    goto LABEL_57;
  }
  uint64_t v178 = 0;
  uint64_t v179 = v149 * (v146 - 1);
  uint64_t v180 = v146 * v149;
  uint64_t v181 = v431;
  uint64_t v182 = v431 * v149;
  uint64_t v455 = v149;
  do
  {
    if (v181 != v146 + v178 - 1)
    {
      uint64_t v183 = v457;
      if (!v457) {
        goto LABEL_306;
      }
      unint64_t v184 = v457 + v182;
      sub_1BFF3DC58(v457 + v182, v427, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      if (v182 < v179 || v184 >= v183 + v180)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v182 != v179)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      sub_1BFF3DC58(v427, v183 + v179, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v140 = (uint64_t)v447;
      uint64_t v149 = v455;
    }
    ++v181;
    --v178;
    v179 -= v149;
    v180 -= v149;
    v182 += v149;
  }
  while (v181 < v146 + v178);
  v138 = v445;
  uint64_t v141 = (uint64_t)v433;
  uint64_t v139 = v392;
  uint64_t v142 = (uint64_t)v435;
  uint64_t v143 = v400;
  uint64_t v137 = v431;
  uint64_t v144 = v458;
  if (v146 >= v458) {
    goto LABEL_216;
  }
LABEL_57:
  if (__OFSUB__(v146, v137)) {
    goto LABEL_299;
  }
  if (v146 - v137 >= v143) {
    goto LABEL_216;
  }
  if (__OFADD__(v137, v143)) {
    goto LABEL_302;
  }
  if (v137 + v143 >= v144) {
    uint64_t v185 = v144;
  }
  else {
    uint64_t v185 = v137 + v143;
  }
  if (v185 < v137)
  {
LABEL_303:
    __break(1u);
LABEL_304:
    __break(1u);
LABEL_305:
    __break(1u);
LABEL_306:
    __break(1u);
LABEL_307:
    __break(1u);
    goto LABEL_308;
  }
  if (v146 == v185) {
    goto LABEL_216;
  }
  v392 = v139;
  uint64_t v186 = *(void *)(v436 + 72);
  uint64_t v187 = v186 * (v146 - 1);
  uint64_t v454 = v186;
  uint64_t v188 = v146 * v186;
  uint64_t v417 = v185;
LABEL_67:
  uint64_t v189 = 0;
  uint64_t v457 = v146;
  uint64_t v455 = v188;
  while (1)
  {
    v191 = v138;
    uint64_t v192 = *v138;
    uint64_t v459 = v188 + v189;
    uint64_t v193 = v461;
    sub_1C123EEAC(v188 + v189 + v192, v461, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    uint64_t v194 = v187;
    uint64_t v458 = v187 + v189;
    uint64_t v195 = v187 + v189 + v192;
    uint64_t v196 = v462;
    sub_1C123EEAC(v195, v462, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    uint64_t v197 = v453;
    sub_1C123EEAC(v193, v453, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() != 6) {
      break;
    }
    uint64_t v198 = v197;
    uint64_t v199 = v449;
    sub_1BFF3DC58(v198, v449, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v200 = v199;
    uint64_t v197 = v452;
    sub_1BFF3DC58(v200, v452, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1C123EEAC(v196, v140, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      sub_1C123EF14(v140, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      v212 = type metadata accessor for PuzzleStatistic;
      goto LABEL_77;
    }
    uint64_t v201 = v441;
    sub_1BFF3DC58(v140, v441, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v202 = v201;
    uint64_t v203 = v450;
    sub_1BFF3DC58(v202, v450, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v204 = *(int *)(v446 + 20);
    uint64_t v205 = v197 + v204;
    uint64_t v206 = v203 + v204;
    uint64_t v207 = *(int *)(v444 + 48);
    if (!v448)
    {
      uint64_t v208 = v442 + v207;
      sub_1C123EEAC(v206, v442, type metadata accessor for PuzzleStatisticCategory);
      sub_1C123EEAC(v205, v208, type metadata accessor for PuzzleStatisticCategory);
      type metadata accessor for PuzzleStatisticCategory(0);
      int v209 = swift_getEnumCaseMultiPayload();
      uint64_t v210 = (uint64_t)v438;
      switch(v209)
      {
        case 1:
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            v211 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
            goto LABEL_114;
          }
          uint64_t v237 = v420;
          sub_1BFF3DC58(v442, v420, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v238 = v429;
          sub_1BFF3DC58(v208, v429, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          BOOL v239 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(v237, v238);
          sub_1C123EEAC(v237, v210, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v240 = v405;
          sub_1C123EEAC(v238, v405, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          v138 = v445;
          if (v239)
          {
            BOOL v241 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(v210 + *(int *)(v426 + 20), v240 + *(int *)(v426 + 20));
            sub_1C123EF14(v240, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            sub_1C123EF14(v210, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            uint64_t v242 = v237;
            uint64_t v243 = v401;
            sub_1C123EEAC(v242, v401, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            uint64_t v244 = v402;
            sub_1C123EEAC(v429, v402, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            uint64_t v187 = v194;
            BOOL v245 = v241
                && _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(v243 + *(int *)(v426 + 24), v244 + *(int *)(v426 + 24));
          }
          else
          {
            sub_1C123EF14(v240, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            sub_1C123EF14(v210, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            uint64_t v273 = v237;
            uint64_t v243 = v401;
            sub_1C123EEAC(v273, v401, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            uint64_t v244 = v402;
            sub_1C123EEAC(v429, v402, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
            BOOL v245 = 0;
            uint64_t v187 = v194;
          }
          uint64_t v188 = v455;
          sub_1C123EF14(v244, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          sub_1C123EF14(v243, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          sub_1C123EF14(v429, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          v281 = &v452;
          goto LABEL_164;
        case 2:
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            uint64_t v218 = v407;
            sub_1C09E5944(v442, v407);
            sub_1C09E5944(v208, v422);
            uint64_t v219 = (uint64_t)v396;
            sub_1C09E5944(v218, (uint64_t)v396);
            uint64_t v220 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            v221 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v220 - 8) + 48);
            if (v221(v219, 1, v220) == 1)
            {
              sub_1C123F0AC(v219, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              uint64_t v222 = 0;
            }
            else
            {
              uint64_t v265 = v418;
              sub_1C123EEAC(v219, v418, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
              sub_1C123EF14(v219, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              uint64_t v222 = *(void *)(v265 + *(int *)(v419 + 32));
              sub_1C123EF14(v265, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
            }
            uint64_t v266 = v422;
            v267 = &v429;
LABEL_130:
            uint64_t v269 = *(v267 - 32);
            sub_1C09E5944(v266, v269);
            if (v221(v269, 1, v220) == 1)
            {
              sub_1C123F0AC(v269, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              uint64_t v270 = 0;
            }
            else
            {
              uint64_t v271 = v418;
              sub_1C123EEAC(v269, v418, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
              sub_1C123EF14(v269, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              uint64_t v270 = *(void *)(v271 + *(int *)(v419 + 32));
              sub_1C123EF14(v271, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
            }
            v138 = v445;
            uint64_t v187 = v194;
            BOOL v245 = v222 < v270;
            uint64_t v140 = (uint64_t)v447;
            goto LABEL_134;
          }
          uint64_t v254 = v442;
          goto LABEL_110;
        case 3:
          if (swift_getEnumCaseMultiPayload() == 3)
          {
            uint64_t v225 = v424;
            sub_1BFF3DC58(v442, v424, type metadata accessor for PuzzleStatisticsGroupedValue);
            uint64_t v226 = v208;
            uint64_t v227 = v412;
            sub_1BFF3DC58(v226, v412, type metadata accessor for PuzzleStatisticsGroupedValue);
            uint64_t v228 = v227;
            double v229 = *(double *)(v225 + 8);
            if (*(unsigned char *)(v225 + 16)) {
              double v229 = 0.0;
            }
            uint64_t v187 = v194;
            if (*(unsigned char *)(v227 + 16)) {
              BOOL v230 = v229 < 0.0;
            }
            else {
              BOOL v230 = v229 < *(double *)(v227 + 8);
            }
            v138 = v445;
            uint64_t v188 = v455;
            if (v230 || *(void *)v225 < *(void *)v227) {
              goto LABEL_138;
            }
            uint64_t v275 = v414[9];
            double v276 = *(double *)(v225 + v275);
            if (*(unsigned char *)(v225 + v275 + 8)) {
              double v276 = 0.0;
            }
            uint64_t v277 = v227 + v275;
            if (*(unsigned char *)(v277 + 8))
            {
              if (v276 < 0.0) {
                goto LABEL_138;
              }
            }
            else if (v276 < *(double *)v277)
            {
              goto LABEL_138;
            }
            uint64_t v282 = v414[8];
            if (*(unsigned char *)(v225 + v282 + 8)) {
              uint64_t v283 = 0;
            }
            else {
              uint64_t v283 = *(void *)(v225 + v282);
            }
            uint64_t v284 = v227 + v282;
            uint64_t v285 = v386;
            if (*(unsigned char *)(v284 + 8))
            {
              if (v283 < 0) {
                goto LABEL_138;
              }
LABEL_182:
              sub_1C123F02C(v225 + v414[7], v386);
              uint64_t v290 = type metadata accessor for PuzzleStreak();
              uint64_t v291 = *(void *)(v290 - 8);
              v292 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v291 + 48);
              uint64_t v293 = v291 + 48;
              if (v292(v285, 1, v290) == 1)
              {
                sub_1C123F0AC(v285, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                uint64_t v377 = 0;
              }
              else
              {
                uint64_t v377 = PuzzleStreak.days.getter();
                sub_1C123EF14(v285, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
              }
              uint64_t v298 = v384;
              sub_1C123F02C(v412 + v414[7], v384);
              if (v292(v298, 1, v290) == 1)
              {
                sub_1C123F0AC(v298, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                if ((v377 & 0x8000000000000000) == 0)
                {
LABEL_190:
                  uint64_t v299 = v380;
                  sub_1C123F02C(v424 + v414[6], v380);
                  if (v292(v299, 1, v290) == 1)
                  {
                    sub_1C123F0AC(v299, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    uint64_t v377 = 0;
                  }
                  else
                  {
                    uint64_t v377 = PuzzleStreak.days.getter();
                    sub_1C123EF14(v299, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
                  }
                  uint64_t v308 = v381;
                  sub_1C123F02C(v412 + v414[6], v381);
                  if (v292(v308, 1, v290) == 1)
                  {
                    sub_1C123F0AC(v308, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    uint64_t v309 = 0;
                  }
                  else
                  {
                    uint64_t v312 = v308;
                    uint64_t v309 = PuzzleStreak.days.getter();
                    sub_1C123EF14(v312, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
                  }
                  uint64_t v140 = (uint64_t)v447;
                  BOOL v245 = v377 < v309;
                  uint64_t v228 = v412;
                  goto LABEL_140;
                }
              }
              else
              {
                uint64_t v302 = PuzzleStreak.days.getter();
                uint64_t v376 = v293;
                v303 = v292;
                uint64_t v304 = v302;
                sub_1C123EF14(v298, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
                BOOL v349 = v377 < v304;
                v292 = v303;
                if (!v349) {
                  goto LABEL_190;
                }
              }
              BOOL v245 = 1;
              uint64_t v228 = v412;
              goto LABEL_139;
            }
            if (v283 >= *(void *)v284) {
              goto LABEL_182;
            }
LABEL_138:
            BOOL v245 = 1;
LABEL_139:
            uint64_t v140 = (uint64_t)v447;
LABEL_140:
            sub_1C123EF14(v228, type metadata accessor for PuzzleStatisticsGroupedValue);
            v272 = &v456;
LABEL_147:
            sub_1C123EF14(*(v272 - 32), type metadata accessor for PuzzleStatisticsGroupedValue);
            goto LABEL_165;
          }
          v211 = type metadata accessor for PuzzleStatisticsGroupedValue;
          goto LABEL_114;
        default:
          if (swift_getEnumCaseMultiPayload())
          {
            v211 = type metadata accessor for PuzzleStatisticValue;
LABEL_114:
            v255 = v211;
            uint64_t v256 = v442;
            goto LABEL_117;
          }
          uint64_t v262 = v442;
          break;
      }
LABEL_125:
      uint64_t v263 = v415;
      sub_1BFF3DC58(v262, v415, type metadata accessor for PuzzleStatisticValue);
      uint64_t v264 = v416;
      sub_1BFF3DC58(v208, v416, type metadata accessor for PuzzleStatisticValue);
      BOOL v245 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(v263, v264);
      sub_1C123EF14(v264, type metadata accessor for PuzzleStatisticValue);
      sub_1C123EF14(v263, type metadata accessor for PuzzleStatisticValue);
      v138 = v445;
      uint64_t v140 = (uint64_t)v447;
      uint64_t v187 = v194;
LABEL_134:
      uint64_t v188 = v455;
      goto LABEL_165;
    }
    uint64_t v208 = v443 + v207;
    sub_1C123EEAC(v205, v443, type metadata accessor for PuzzleStatisticCategory);
    sub_1C123EEAC(v206, v208, type metadata accessor for PuzzleStatisticCategory);
    type metadata accessor for PuzzleStatisticCategory(0);
    int v215 = swift_getEnumCaseMultiPayload();
    uint64_t v216 = (uint64_t)v439;
    switch(v215)
    {
      case 1:
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          v217 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
          goto LABEL_116;
        }
        uint64_t v246 = v421;
        sub_1BFF3DC58(v443, v421, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        uint64_t v247 = v430;
        sub_1BFF3DC58(v208, v430, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        BOOL v248 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(v246, v247);
        sub_1C123EEAC(v246, v216, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        uint64_t v249 = v406;
        sub_1C123EEAC(v247, v406, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        v138 = v445;
        if (v248)
        {
          BOOL v250 = _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(v216 + *(int *)(v426 + 20), v249 + *(int *)(v426 + 20));
          sub_1C123EF14(v249, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          sub_1C123EF14(v216, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v251 = v246;
          uint64_t v252 = v403;
          sub_1C123EEAC(v251, v403, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v253 = v404;
          sub_1C123EEAC(v430, v404, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v187 = v194;
          BOOL v245 = v250
              && _s8NewsFeed20PuzzleStatisticValueO1loiySbAC_ACtFZ_0(v252 + *(int *)(v426 + 24), v253 + *(int *)(v426 + 24));
        }
        else
        {
          sub_1C123EF14(v249, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          sub_1C123EF14(v216, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v274 = v246;
          uint64_t v252 = v403;
          sub_1C123EEAC(v274, v403, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          uint64_t v253 = v404;
          sub_1C123EEAC(v430, v404, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
          BOOL v245 = 0;
          uint64_t v187 = v194;
        }
        uint64_t v188 = v455;
        sub_1C123EF14(v253, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1C123EF14(v252, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1C123EF14(v430, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        v281 = &v453;
LABEL_164:
        sub_1C123EF14(*(v281 - 32), type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        uint64_t v140 = (uint64_t)v447;
LABEL_165:
        sub_1C123EF14(v450, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        sub_1C123EF14(v452, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        sub_1C123EF14(v462, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        sub_1C123EF14(v461, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        if (!v245) {
          goto LABEL_79;
        }
        uint64_t v190 = v457;
LABEL_66:
        uint64_t v146 = v190 + 1;
        v187 += v454;
        v188 += v454;
        uint64_t v137 = v431;
        if (v146 != v417) {
          goto LABEL_67;
        }
        uint64_t v146 = v417;
        uint64_t v141 = (uint64_t)v433;
        uint64_t v139 = v392;
        uint64_t v142 = (uint64_t)v435;
LABEL_216:
        if (v146 < v137) {
          goto LABEL_294;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v457 = v146;
        v315 = v138;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v139 = sub_1C0634CC8(0, *((void *)v139 + 2) + 1, 1, v139);
        }
        unint64_t v317 = *((void *)v139 + 2);
        unint64_t v316 = *((void *)v139 + 3);
        unint64_t v145 = v317 + 1;
        if (v317 >= v316 >> 1) {
          uint64_t v139 = sub_1C0634CC8((char *)(v316 > 1), v317 + 1, 1, v139);
        }
        *((void *)v139 + 2) = v145;
        v318 = v139 + 32;
        v319 = &v139[16 * v317 + 32];
        uint64_t v320 = v457;
        *(void *)v319 = v431;
        *((void *)v319 + 1) = v320;
        if (v317)
        {
          while (2)
          {
            unint64_t v321 = v145 - 1;
            if (v145 >= 4)
            {
              v326 = &v318[16 * v145];
              uint64_t v327 = *((void *)v326 - 8);
              uint64_t v328 = *((void *)v326 - 7);
              BOOL v332 = __OFSUB__(v328, v327);
              uint64_t v329 = v328 - v327;
              if (v332) {
                goto LABEL_283;
              }
              uint64_t v331 = *((void *)v326 - 6);
              uint64_t v330 = *((void *)v326 - 5);
              BOOL v332 = __OFSUB__(v330, v331);
              uint64_t v324 = v330 - v331;
              char v325 = v332;
              if (v332) {
                goto LABEL_284;
              }
              unint64_t v333 = v145 - 2;
              v334 = &v318[16 * v145 - 32];
              uint64_t v336 = *(void *)v334;
              uint64_t v335 = *((void *)v334 + 1);
              BOOL v332 = __OFSUB__(v335, v336);
              uint64_t v337 = v335 - v336;
              if (v332) {
                goto LABEL_286;
              }
              BOOL v332 = __OFADD__(v324, v337);
              uint64_t v338 = v324 + v337;
              if (v332) {
                goto LABEL_289;
              }
              if (v338 >= v329)
              {
                v356 = &v318[16 * v321];
                uint64_t v358 = *(void *)v356;
                uint64_t v357 = *((void *)v356 + 1);
                BOOL v332 = __OFSUB__(v357, v358);
                uint64_t v359 = v357 - v358;
                if (v332) {
                  goto LABEL_293;
                }
                BOOL v349 = v324 < v359;
              }
              else
              {
LABEL_235:
                if (v325) {
                  goto LABEL_285;
                }
                unint64_t v333 = v145 - 2;
                v339 = &v318[16 * v145 - 32];
                uint64_t v341 = *(void *)v339;
                uint64_t v340 = *((void *)v339 + 1);
                BOOL v342 = __OFSUB__(v340, v341);
                uint64_t v343 = v340 - v341;
                char v344 = v342;
                if (v342) {
                  goto LABEL_288;
                }
                v345 = &v318[16 * v321];
                uint64_t v347 = *(void *)v345;
                uint64_t v346 = *((void *)v345 + 1);
                BOOL v332 = __OFSUB__(v346, v347);
                uint64_t v348 = v346 - v347;
                if (v332) {
                  goto LABEL_291;
                }
                if (__OFADD__(v343, v348)) {
                  goto LABEL_292;
                }
                if (v343 + v348 < v324) {
                  goto LABEL_247;
                }
                BOOL v349 = v324 < v348;
              }
              if (v349) {
                unint64_t v321 = v333;
              }
            }
            else
            {
              if (v145 == 3)
              {
                uint64_t v323 = *((void *)v139 + 4);
                uint64_t v322 = *((void *)v139 + 5);
                BOOL v332 = __OFSUB__(v322, v323);
                uint64_t v324 = v322 - v323;
                char v325 = v332;
                goto LABEL_235;
              }
              uint64_t v350 = *((void *)v139 + 4);
              uint64_t v351 = *((void *)v139 + 5);
              BOOL v332 = __OFSUB__(v351, v350);
              uint64_t v343 = v351 - v350;
              char v344 = v332;
LABEL_247:
              if (v344) {
                goto LABEL_287;
              }
              v352 = &v318[16 * v321];
              uint64_t v354 = *(void *)v352;
              uint64_t v353 = *((void *)v352 + 1);
              BOOL v332 = __OFSUB__(v353, v354);
              uint64_t v355 = v353 - v354;
              if (v332) {
                goto LABEL_290;
              }
              if (v355 < v343) {
                goto LABEL_15;
              }
            }
            unint64_t v360 = v321 - 1;
            if (v321 - 1 >= v145)
            {
              __break(1u);
LABEL_280:
              __break(1u);
LABEL_281:
              __break(1u);
LABEL_282:
              __break(1u);
LABEL_283:
              __break(1u);
LABEL_284:
              __break(1u);
LABEL_285:
              __break(1u);
LABEL_286:
              __break(1u);
LABEL_287:
              __break(1u);
LABEL_288:
              __break(1u);
LABEL_289:
              __break(1u);
LABEL_290:
              __break(1u);
LABEL_291:
              __break(1u);
LABEL_292:
              __break(1u);
LABEL_293:
              __break(1u);
LABEL_294:
              __break(1u);
LABEL_295:
              __break(1u);
LABEL_296:
              __break(1u);
LABEL_297:
              __break(1u);
LABEL_298:
              __break(1u);
LABEL_299:
              __break(1u);
LABEL_300:
              __break(1u);
LABEL_301:
              __break(1u);
LABEL_302:
              __break(1u);
              goto LABEL_303;
            }
            if (!*v315) {
              goto LABEL_305;
            }
            v361 = v139;
            v362 = &v318[16 * v360];
            uint64_t v363 = *(void *)v362;
            v364 = &v318[16 * v321];
            uint64_t v365 = *((void *)v364 + 1);
            uint64_t v366 = v440;
            sub_1C123DF0C(*v315 + *(void *)(v436 + 72) * *(void *)v362, *v315 + *(void *)(v436 + 72) * *(void *)v364, *v315 + *(void *)(v436 + 72) * v365, v434, v448);
            uint64_t v440 = v366;
            if (v366)
            {
              uint64_t v368 = v379;
              goto LABEL_276;
            }
            if (v365 < v363) {
              goto LABEL_280;
            }
            if (v321 > *((void *)v361 + 2)) {
              goto LABEL_281;
            }
            *(void *)v362 = v363;
            *(void *)&v318[16 * v360 + 8] = v365;
            unint64_t v367 = *((void *)v361 + 2);
            if (v321 >= v367) {
              goto LABEL_282;
            }
            uint64_t v139 = v361;
            unint64_t v145 = v367 - 1;
            memmove(&v318[16 * v321], v364 + 16, 16 * (v367 - 1 - v321));
            *((void *)v361 + 2) = v367 - 1;
            BOOL v349 = v367 > 2;
            uint64_t v140 = (uint64_t)v447;
            uint64_t v141 = (uint64_t)v433;
            uint64_t v142 = (uint64_t)v435;
            if (!v349) {
              goto LABEL_15;
            }
            continue;
          }
        }
        unint64_t v145 = 1;
LABEL_15:
        v138 = v315;
        uint64_t v144 = v315[1];
        uint64_t v137 = v457;
        uint64_t v143 = v400;
        if (v457 < v144) {
          goto LABEL_16;
        }
        uint64_t v368 = v379;
        uint64_t v3 = v440;
LABEL_265:
        v369 = v139;
        if (v145 >= 2)
        {
          uint64_t v370 = *v138;
          do
          {
            unint64_t v371 = v145 - 2;
            if (v145 < 2) {
              goto LABEL_295;
            }
            if (!v370) {
              goto LABEL_307;
            }
            uint64_t v372 = *(void *)&v369[16 * v371 + 32];
            uint64_t v373 = *(void *)&v369[16 * v145 + 24];
            sub_1C123DF0C(v370 + *(void *)(v436 + 72) * v372, v370 + *(void *)(v436 + 72) * *(void *)&v369[16 * v145 + 16], v370 + *(void *)(v436 + 72) * v373, v434, v448);
            if (v3) {
              break;
            }
            if (v373 < v372) {
              goto LABEL_296;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v369 = sub_1C063604C((uint64_t)v369);
            }
            if (v371 >= *((void *)v369 + 2)) {
              goto LABEL_297;
            }
            v374 = &v369[16 * v371 + 32];
            *(void *)v374 = v372;
            *((void *)v374 + 1) = v373;
            unint64_t v375 = *((void *)v369 + 2);
            if (v145 > v375) {
              goto LABEL_298;
            }
            memmove(&v369[16 * v145 + 16], &v369[16 * v145 + 32], 16 * (v375 - v145));
            *((void *)v369 + 2) = v375 - 1;
            unint64_t v145 = v375 - 1;
          }
          while (v375 > 2);
        }
LABEL_276:
        swift_bridgeObjectRelease();
        *(void *)(v368 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      case 2:
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v223 = v408;
          sub_1C09E5944(v443, v408);
          sub_1C09E5944(v208, v423);
          uint64_t v224 = (uint64_t)v398;
          sub_1C09E5944(v223, (uint64_t)v398);
          uint64_t v220 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          v221 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v220 - 8) + 48);
          if (v221(v224, 1, v220) == 1)
          {
            sub_1C123F0AC(v224, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            uint64_t v222 = 0;
          }
          else
          {
            uint64_t v268 = v418;
            sub_1C123EEAC(v224, v418, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
            sub_1C123EF14(v224, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            uint64_t v222 = *(void *)(v268 + *(int *)(v419 + 32));
            sub_1C123EF14(v268, (uint64_t (*)(void))type metadata accessor for PuzzleLeaderboardEntry);
          }
          uint64_t v266 = v423;
          v267 = &v431;
          goto LABEL_130;
        }
        uint64_t v254 = v443;
LABEL_110:
        sub_1C123F0AC(v254, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        goto LABEL_118;
      case 3:
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v231 = v425;
          sub_1BFF3DC58(v443, v425, type metadata accessor for PuzzleStatisticsGroupedValue);
          uint64_t v232 = v208;
          uint64_t v233 = v413;
          sub_1BFF3DC58(v232, v413, type metadata accessor for PuzzleStatisticsGroupedValue);
          uint64_t v234 = v233;
          double v235 = *(double *)(v231 + 8);
          if (*(unsigned char *)(v231 + 16)) {
            double v235 = 0.0;
          }
          uint64_t v187 = v194;
          if (*(unsigned char *)(v233 + 16)) {
            BOOL v236 = v235 < 0.0;
          }
          else {
            BOOL v236 = v235 < *(double *)(v233 + 8);
          }
          v138 = v445;
          uint64_t v188 = v455;
          if (v236 || *(void *)v231 < *(void *)v233)
          {
LABEL_144:
            BOOL v245 = 1;
            goto LABEL_145;
          }
          uint64_t v278 = v414[9];
          double v279 = *(double *)(v231 + v278);
          if (*(unsigned char *)(v231 + v278 + 8)) {
            double v279 = 0.0;
          }
          uint64_t v280 = v233 + v278;
          if (*(unsigned char *)(v280 + 8))
          {
            if (v279 < 0.0) {
              goto LABEL_144;
            }
          }
          else if (v279 < *(double *)v280)
          {
            goto LABEL_144;
          }
          uint64_t v286 = v414[8];
          if (*(unsigned char *)(v231 + v286 + 8)) {
            uint64_t v287 = 0;
          }
          else {
            uint64_t v287 = *(void *)(v231 + v286);
          }
          uint64_t v288 = v233 + v286;
          uint64_t v289 = v387;
          if (*(unsigned char *)(v288 + 8))
          {
            if (v287 < 0) {
              goto LABEL_144;
            }
          }
          else if (v287 < *(void *)v288)
          {
            goto LABEL_144;
          }
          sub_1C123F02C(v231 + v414[7], v387);
          uint64_t v294 = type metadata accessor for PuzzleStreak();
          uint64_t v295 = *(void *)(v294 - 8);
          v296 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v295 + 48);
          uint64_t v297 = v295 + 48;
          if (v296(v289, 1, v294) == 1)
          {
            sub_1C123F0AC(v289, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            uint64_t v377 = 0;
          }
          else
          {
            uint64_t v377 = PuzzleStreak.days.getter();
            sub_1C123EF14(v289, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          }
          uint64_t v300 = v385;
          sub_1C123F02C(v413 + v414[7], v385);
          if (v296(v300, 1, v294) == 1)
          {
            sub_1C123F0AC(v300, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            if ((v377 & 0x8000000000000000) == 0) {
              goto LABEL_195;
            }
LABEL_202:
            BOOL v245 = 1;
            uint64_t v234 = v413;
LABEL_145:
            uint64_t v140 = (uint64_t)v447;
          }
          else
          {
            uint64_t v305 = PuzzleStreak.days.getter();
            uint64_t v376 = v297;
            v306 = v296;
            uint64_t v307 = v305;
            sub_1C123EF14(v300, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
            BOOL v349 = v377 < v307;
            v296 = v306;
            if (v349) {
              goto LABEL_202;
            }
LABEL_195:
            uint64_t v301 = (uint64_t)v378;
            sub_1C123F02C(v425 + v414[6], (uint64_t)v378);
            if (v296(v301, 1, v294) == 1)
            {
              sub_1C123F0AC(v301, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              uint64_t v377 = 0;
            }
            else
            {
              uint64_t v377 = PuzzleStreak.days.getter();
              sub_1C123EF14(v301, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
            }
            uint64_t v310 = v382;
            sub_1C123F02C(v413 + v414[6], v382);
            if (v296(v310, 1, v294) == 1)
            {
              sub_1C123F0AC(v310, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              uint64_t v311 = 0;
            }
            else
            {
              uint64_t v313 = v310;
              uint64_t v311 = PuzzleStreak.days.getter();
              sub_1C123EF14(v313, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
            }
            uint64_t v140 = (uint64_t)v447;
            BOOL v245 = v377 < v311;
            uint64_t v234 = v413;
          }
          sub_1C123EF14(v234, type metadata accessor for PuzzleStatisticsGroupedValue);
          v272 = &v457;
          goto LABEL_147;
        }
        v217 = type metadata accessor for PuzzleStatisticsGroupedValue;
LABEL_116:
        v255 = v217;
        uint64_t v256 = v443;
LABEL_117:
        sub_1C123EF14(v256, v255);
LABEL_118:
        v138 = v445;
        uint64_t v187 = v194;
        sub_1C123EF14(v208, type metadata accessor for PuzzleStatisticCategory);
        uint64_t v188 = v455;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v257 = sub_1C15198DC();
        __swift_project_value_buffer(v257, (uint64_t)qword_1EB93C7A8);
        v258 = sub_1C15198AC();
        os_log_type_t v259 = sub_1C151F36C();
        if (os_log_type_enabled(v258, v259))
        {
          v260 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v260 = 0;
          _os_log_impl(&dword_1BFC31000, v258, v259, "Can't compare non-matching PuzzleStatisticCategory values", v260, 2u);
          MEMORY[0x1C18C9B00](v260, -1, -1);
        }
        uint64_t v140 = (uint64_t)v447;
        uint64_t v261 = v452;

        sub_1C123EF14(v450, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        sub_1C123EF14(v261, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
LABEL_78:
        sub_1C123EF14(v462, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        sub_1C123EF14(v461, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
LABEL_79:
        uint64_t v213 = *v138;
        if (!*v138) {
          goto LABEL_304;
        }
        uint64_t v214 = v213 + v187 + v189;
        sub_1BFF3DC58(v213 + v188 + v189, v460, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        swift_arrayInitWithTakeFrontToBack();
        sub_1BFF3DC58(v460, v214, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        v189 -= v454;
        ++v137;
        uint64_t v190 = v457;
        if (v457 == v137) {
          goto LABEL_66;
        }
        break;
      default:
        if (!swift_getEnumCaseMultiPayload())
        {
          uint64_t v262 = v443;
          goto LABEL_125;
        }
        v217 = type metadata accessor for PuzzleStatisticValue;
        goto LABEL_116;
    }
  }
  v212 = type metadata accessor for FormatContentSlotItemObject.Resolved;
LABEL_77:
  sub_1C123EF14(v197, (uint64_t (*)(void))v212);
  v138 = v191;
  uint64_t v187 = v194;
  uint64_t v188 = v455;
  goto LABEL_78;
}

void sub_1C123D94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5)
{
  int v56 = a5;
  uint64_t v69 = a4;
  uint64_t v53 = a1;
  uint64_t v64 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v64);
  uint64_t v61 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v63 = (uint64_t)&v51 - v9;
  uint64_t v55 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v55);
  uint64_t v54 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (uint64_t)&v51 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v60 = (uint64_t)&v51 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v62 = (uint64_t)&v51 - v16;
  uint64_t v57 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v57);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v71 = (uint64_t)&v51 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v70 = (uint64_t)&v51 - v23;
  uint64_t v67 = a3;
  uint64_t v52 = a2;
  if (a3 != a2)
  {
    uint64_t v24 = *(void *)(v22 + 72);
    uint64_t v25 = v24 * (v67 - 1);
    uint64_t v65 = v24;
    uint64_t v26 = v24 * v67;
    uint64_t v58 = v18;
LABEL_5:
    uint64_t v27 = 0;
    uint64_t v28 = v53;
    uint64_t v66 = v26;
    while (1)
    {
      uint64_t v29 = v70;
      uint64_t v30 = *v69;
      uint64_t v68 = v26 + v27;
      sub_1C123EEAC(v26 + v27 + v30, v70, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v31 = v25;
      uint64_t v32 = v25 + v27 + v30;
      uint64_t v33 = v71;
      sub_1C123EEAC(v32, v71, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v34 = v29;
      uint64_t v35 = v63;
      sub_1C123EEAC(v34, v63, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() != 6) {
        break;
      }
      uint64_t v36 = v35;
      uint64_t v37 = v60;
      sub_1BFF3DC58(v36, v60, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v38 = v37;
      uint64_t v39 = v62;
      sub_1BFF3DC58(v38, v62, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v40 = v61;
      sub_1C123EEAC(v33, v61, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        sub_1C123EF14(v40, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        sub_1C123EF14(v39, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v18 = v58;
        goto LABEL_13;
      }
      uint64_t v41 = v54;
      sub_1BFF3DC58(v40, v54, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v42 = v41;
      uint64_t v43 = v59;
      sub_1BFF3DC58(v42, v59, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v44 = *(int *)(v55 + 20);
      uint64_t v45 = v39 + v44;
      uint64_t v46 = v43 + v44;
      uint64_t v25 = v31;
      if (v56)
      {
        uint64_t v47 = v45;
        uint64_t v45 = v46;
      }
      else
      {
        uint64_t v47 = v46;
      }
      BOOL v48 = _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v47, v45);
      uint64_t v26 = v66;
      sub_1C123EF14(v59, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1C123EF14(v62, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1C123EF14(v71, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C123EF14(v70, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v18 = v58;
      if (v48)
      {
LABEL_4:
        v25 += v65;
        v26 += v65;
        if (++v67 == v52) {
          return;
        }
        goto LABEL_5;
      }
LABEL_16:
      uint64_t v49 = *v69;
      if (!*v69)
      {
        __break(1u);
        return;
      }
      uint64_t v50 = v49 + v25 + v27;
      sub_1BFF3DC58(v49 + v26 + v27, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BFF3DC58((uint64_t)v18, v50, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      v27 -= v65;
      if (v67 == ++v28) {
        goto LABEL_4;
      }
    }
    sub_1C123EF14(v35, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
LABEL_13:
    uint64_t v25 = v31;
    sub_1C123EF14(v71, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    sub_1C123EF14(v70, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    uint64_t v26 = v66;
    goto LABEL_16;
  }
}

uint64_t sub_1C123DF0C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  int v103 = a5;
  uint64_t v9 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v9);
  uint64_t v101 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v105 = (char *)&v92 - v12;
  MEMORY[0x1F4188790](v13);
  unint64_t v104 = (unint64_t)&v92 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v92 - v16;
  uint64_t v102 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v102);
  uint64_t v95 = (uint64_t)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v94 = (uint64_t)&v92 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v100 = (uint64_t)&v92 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v99 = (uint64_t)&v92 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v93 = (uint64_t)&v92 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v98 = (uint64_t)&v92 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v97 = (uint64_t)&v92 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v96 = (uint64_t)&v92 - v32;
  uint64_t v107 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (uint64_t)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  unint64_t v109 = (unint64_t)&v92 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v92 - v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v92 - v40;
  uint64_t v43 = *(void *)(v42 + 72);
  if (!v43)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v44 = v43;
  unint64_t v45 = a1;
  if (a2 - a1 == 0x8000000000000000 && v43 == -1) {
    goto LABEL_78;
  }
  int64_t v46 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v43 == -1) {
    goto LABEL_79;
  }
  uint64_t v47 = (uint64_t)(a2 - a1) / v43;
  unint64_t v112 = a1;
  unint64_t v111 = a4;
  uint64_t v48 = v46 / v43;
  uint64_t v108 = v9;
  if (v47 >= v46 / v44)
  {
    if ((v48 & 0x8000000000000000) == 0)
    {
      unint64_t v104 = a1;
      uint64_t v50 = v48 * v44;
      uint64_t v51 = (uint64_t)v105;
      if (a4 < a2 || a2 + v50 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v70 = a4 + v50;
      unint64_t v110 = a4 + v50;
      unint64_t v112 = a2;
      if (v50 >= 1 && v104 < a2)
      {
        uint64_t v72 = -v44;
        do
        {
          uint64_t v73 = v109;
          sub_1C123EEAC(v70 + v72, v109, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          unint64_t v74 = a2 + v72;
          uint64_t v75 = v106;
          sub_1C123EEAC(a2 + v72, v106, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          sub_1C123EEAC(v73, v51, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            uint64_t v76 = v51;
            uint64_t v77 = v100;
            sub_1BFF3DC58(v76, v100, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            uint64_t v78 = v77;
            uint64_t v79 = v75;
            uint64_t v80 = v99;
            sub_1BFF3DC58(v78, v99, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            uint64_t v81 = v101;
            sub_1C123EEAC(v79, v101, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
            if (swift_getEnumCaseMultiPayload() == 6)
            {
              uint64_t v82 = v95;
              sub_1BFF3DC58(v81, v95, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              uint64_t v83 = v94;
              sub_1BFF3DC58(v82, v94, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              uint64_t v84 = *(int *)(v102 + 20);
              uint64_t v85 = v80 + v84;
              uint64_t v86 = v83 + v84;
              if (v103)
              {
                uint64_t v87 = v85;
                uint64_t v85 = v86;
              }
              else
              {
                uint64_t v87 = v86;
              }
              BOOL v88 = !_s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v87, v85);
              sub_1C123EF14(v83, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              sub_1C123EF14(v80, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            }
            else
            {
              sub_1C123EF14(v81, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              sub_1C123EF14(v80, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              BOOL v88 = 1;
            }
            uint64_t v75 = v106;
          }
          else
          {
            sub_1C123EF14(v51, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
            BOOL v88 = 1;
          }
          unint64_t v89 = a3 + v72;
          sub_1C123EF14(v75, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          sub_1C123EF14(v109, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          if (v88)
          {
            if (a3 < a2 || v89 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v51 = (uint64_t)v105;
            }
            else
            {
              uint64_t v51 = (uint64_t)v105;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v112 += v72;
          }
          else
          {
            unint64_t v90 = v110;
            v110 += v72;
            if (a3 < v90 || v89 >= v90)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v74 = a2;
              uint64_t v51 = (uint64_t)v105;
            }
            else
            {
              uint64_t v51 = (uint64_t)v105;
              if (a3 != v90) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v74 = a2;
            }
          }
          unint64_t v70 = v110;
          if (v110 <= a4) {
            break;
          }
          a2 = v74;
          a3 += v72;
        }
        while (v74 > v104);
      }
LABEL_76:
      sub_1C0635614(&v112, &v111, (uint64_t *)&v110);
      return 1;
    }
  }
  else if ((v47 & 0x8000000000000000) == 0)
  {
    uint64_t v49 = v47 * v44;
    if (a4 < v45 || v45 + v49 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v45)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v109 = a4 + v49;
    unint64_t v110 = a4 + v49;
    if (v49 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_1C123EEAC(a2, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        sub_1C123EEAC(a4, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        sub_1C123EEAC((uint64_t)v41, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() != 6) {
          break;
        }
        uint64_t v53 = v97;
        sub_1BFF3DC58((uint64_t)v17, v97, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v54 = v53;
        uint64_t v55 = v96;
        sub_1BFF3DC58(v54, v96, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v56 = v104;
        sub_1C123EEAC((uint64_t)v38, v104, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        if (swift_getEnumCaseMultiPayload() != 6)
        {
          sub_1C123EF14(v56, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          uint64_t v64 = type metadata accessor for PuzzleStatistic;
          uint64_t v65 = v55;
          goto LABEL_28;
        }
        uint64_t v57 = v93;
        sub_1BFF3DC58(v56, v93, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v58 = v57;
        uint64_t v59 = v98;
        sub_1BFF3DC58(v58, v98, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        uint64_t v60 = *(int *)(v102 + 20);
        uint64_t v61 = v55 + v60;
        uint64_t v62 = v59 + v60;
        if (v103)
        {
          uint64_t v63 = v61;
          uint64_t v61 = v62;
        }
        else
        {
          uint64_t v63 = v62;
        }
        BOOL v68 = _s8NewsFeed23PuzzleStatisticCategoryO1loiySbAC_ACtFZ_0(v63, v61);
        sub_1C123EF14(v98, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        sub_1C123EF14(v55, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
        sub_1C123EF14((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        sub_1C123EF14((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        if (v68)
        {
          unint64_t v66 = v112;
          unint64_t v69 = v111 + v44;
          if (v112 < v111 || v112 >= v69)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v112 != v111)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v111 = v69;
          unint64_t v67 = a2;
          goto LABEL_43;
        }
LABEL_29:
        unint64_t v66 = v112;
        unint64_t v67 = a2 + v44;
        if (v112 < a2 || v112 >= v67)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v112 == a2)
        {
          unint64_t v66 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_43:
        unint64_t v112 = v66 + v44;
        a4 = v111;
        if (v111 < v109)
        {
          a2 = v67;
          if (v67 < a3) {
            continue;
          }
        }
        goto LABEL_76;
      }
      uint64_t v64 = type metadata accessor for FormatContentSlotItemObject.Resolved;
      uint64_t v65 = (uint64_t)v17;
LABEL_28:
      sub_1C123EF14(v65, (uint64_t (*)(void))v64);
      sub_1C123EF14((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C123EF14((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      goto LABEL_29;
    }
    goto LABEL_76;
  }
LABEL_80:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1C123E9C0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (id *)&v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C123EF74(0, (unint64_t *)&unk_1EB8849F0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v30[-v10];
  uint64_t v12 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v36 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v30[-v16];
  int v18 = *a2;
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v20)
  {
    int v31 = v18;
    uint64_t v32 = a1;
    uint64_t v33 = v3;
    uint64_t v21 = *(void *)(v13 + 72);
    unint64_t v34 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v35 = v6;
    uint64_t v22 = a1 + v34;
    while (2)
    {
      sub_1C123EEAC(v22, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C123EEAC((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:

          goto LABEL_4;
        case 3u:
        case 7u:
          sub_1C123EF14((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          goto LABEL_4;
        case 6u:
          sub_1BFF3DC58((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          uint64_t v24 = type metadata accessor for PuzzleStatistic();
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 0, 1, v24);
          sub_1C123F0AC((uint64_t)v11, (unint64_t *)&unk_1EB8849F0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
          sub_1BFF3DC58((uint64_t)v17, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          uint64_t v25 = v37;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C05F694C(0, v25[2] + 1, 1);
            uint64_t v25 = v37;
          }
          unint64_t v27 = v25[2];
          unint64_t v26 = v25[3];
          if (v27 >= v26 >> 1)
          {
            sub_1C05F694C(v26 > 1, v27 + 1, 1);
            uint64_t v25 = v37;
          }
          void v25[2] = v27 + 1;
          sub_1BFF3DC58((uint64_t)v36, (uint64_t)v25 + v34 + v27 * v21, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
          goto LABEL_5;
        case 8u:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        default:
          swift_unknownObjectRelease();
LABEL_4:
          uint64_t v23 = type metadata accessor for PuzzleStatistic();
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
          sub_1C123F0AC((uint64_t)v11, (unint64_t *)&unk_1EB8849F0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
          sub_1C123EF14((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
LABEL_5:
          v22 += v21;
          if (--v20) {
            continue;
          }
          uint64_t v19 = v37;
          uint64_t v3 = v33;
          int v18 = v31;
          break;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  if (v18 == 2)
  {
    uint64_t v28 = sub_1C0BA9D1C((uint64_t)v19);
    swift_release();
  }
  else
  {
    uint64_t v37 = v19;
    swift_bridgeObjectRetain();
    sub_1C123A7FC(&v37, v18 & 1);
    if (v3)
    {
      swift_release();
      __break(1u);
      JUMPOUT(0x1C123EE88);
    }
    swift_release();
    return v37;
  }
  return (void *)v28;
}

uint64_t sub_1C123EEAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C123EF14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C123EF74(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C123EFC8()
{
  if (!qword_1EB86CB40)
  {
    type metadata accessor for PuzzleStatisticCategory(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86CB40);
    }
  }
}

uint64_t sub_1C123F02C(uint64_t a1, uint64_t a2)
{
  sub_1C123EF74(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C123F0AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C123EF74(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C123F108(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    long long v6 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    *(void *)(a1 + 96) = a2[12];
    uint64_t v9 = (int *)type metadata accessor for GroupLayoutBindingContext();
    uint64_t v10 = v9[13];
    uint64_t v24 = (uint64_t)a2 + v10;
    uint64_t v25 = a1 + v10;
    uint64_t v11 = sub_1C151787C();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v25, v24, v11);
    *(void *)(a1 + v9[14]) = *(uint64_t *)((char *)a2 + v9[14]);
    *(void *)(a1 + v9[15]) = *(uint64_t *)((char *)a2 + v9[15]);
    *(unsigned char *)(a1 + v9[16]) = *((unsigned char *)a2 + v9[16]);
    *(void *)(a1 + v9[17]) = *(uint64_t *)((char *)a2 + v9[17]);
    *(void *)(a1 + v9[18]) = *(uint64_t *)((char *)a2 + v9[18]);
    *(void *)(a1 + v9[19]) = *(uint64_t *)((char *)a2 + v9[19]);
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C066A140();
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = *(void **)((char *)a2 + v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v15 = v14;
      *(void *)(a1 + v13) = v14;
    }
    else
    {
      sub_1C066A1C4();
      uint64_t v18 = *(int *)(v17 + 48);
      uint64_t v19 = a1 + v18;
      uint64_t v20 = (uint64_t)a2 + v18;
      *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
      *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
      *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
      uint64_t v21 = *(void *)(v20 + 48);
      *(void *)(v19 + 40) = *(void *)(v20 + 40);
      *(void *)(v19 + 48) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C123F3B0(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = a1 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v4 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C066A140();
    long long v6 = *(void **)(a1 + *(int *)(v5 + 48));
  }
  else
  {
    sub_1C066A1C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C123F4E0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v7 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v8 = v7[13];
  uint64_t v21 = a2 + v8;
  uint64_t v22 = a1 + v8;
  uint64_t v9 = sub_1C151787C();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v22, v21, v9);
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C066A140();
    uint64_t v11 = *(int *)(v10 + 48);
    uint64_t v12 = *(void **)(a2 + v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v12;
    *(void *)(a1 + v11) = v12;
  }
  else
  {
    sub_1C066A1C4();
    uint64_t v15 = *(int *)(v14 + 48);
    uint64_t v16 = a1 + v15;
    uint64_t v17 = a2 + v15;
    *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
    *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
    *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
    uint64_t v18 = *(void *)(v17 + 48);
    *(void *)(v16 + 40) = *(void *)(v17 + 40);
    *(void *)(v16 + 48) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C123F728(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C123F9B4(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    uint64_t v5 = (int *)type metadata accessor for GroupLayoutBindingContext();
    uint64_t v6 = v5[13];
    uint64_t v19 = a2 + v6;
    uint64_t v20 = a1 + v6;
    uint64_t v7 = sub_1C151787C();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v20, v19, v7);
    *(void *)(a1 + v5[14]) = *(void *)(a2 + v5[14]);
    *(void *)(a1 + v5[15]) = *(void *)(a2 + v5[15]);
    *(unsigned char *)(a1 + v5[16]) = *(unsigned char *)(a2 + v5[16]);
    *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
    *(void *)(a1 + v5[18]) = *(void *)(a2 + v5[18]);
    *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C066A140();
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = *(void **)(a2 + v9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v11 = v10;
      *(void *)(a1 + v9) = v10;
    }
    else
    {
      sub_1C066A1C4();
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
      long long v16 = *(_OWORD *)(v15 + 8);
      *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
      *(_OWORD *)(v14 + 8) = v16;
      *(void *)(v14 + 40) = *(void *)(v15 + 40);
      *(void *)(v14 + 48) = *(void *)(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C123F9B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugInspectViewResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugInspectViewResult()
{
  uint64_t result = qword_1EA1AD410;
  if (!qword_1EA1AD410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C123FA5C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v6 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v7 = v6[13];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
  *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
  *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  *(void *)(a1 + v6[18]) = *(void *)(a2 + v6[18]);
  *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C066A140();
    *(void *)(a1 + *(int *)(v11 + 48)) = *(void *)(a2 + *(int *)(v11 + 48));
  }
  else
  {
    sub_1C066A1C4();
    uint64_t v13 = *(int *)(v12 + 48);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = a2 + v13;
    long long v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v16;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
    *(void *)(v14 + 48) = *(void *)(v15 + 48);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C123FBEC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C123F9B4(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    long long v5 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v5;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    uint64_t v6 = (int *)type metadata accessor for GroupLayoutBindingContext();
    uint64_t v7 = v6[13];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_1C151787C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
    *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
    *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
    *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
    *(void *)(a1 + v6[18]) = *(void *)(a2 + v6[18]);
    *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C066A140();
      *(void *)(a1 + *(int *)(v11 + 48)) = *(void *)(a2 + *(int *)(v11 + 48));
    }
    else
    {
      sub_1C066A1C4();
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      long long v16 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v16;
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
      *(void *)(v14 + 48) = *(void *)(v15 + 48);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C123FD8C()
{
  uint64_t result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout2();
    long long v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C123FE50(uint64_t a1)
{
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v3 - 8);
  long long v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (id *)((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v22 = v7;
    v21[0] = a1;
    v21[1] = v1;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    v21[2] = v8;
    do
    {
      sub_1C0081004(v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:

          break;
        case 2u:
        case 4u:
        case 5u:
          swift_unknownObjectRelease();
          break;
        case 3u:
          uint64_t v16 = (uint64_t)v22;
          sub_1BFDDF70C((uint64_t)v11, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
          sub_1C0081004(v16 + *(int *)(v23 + 36), (uint64_t)v5, (uint64_t (*)(void))sub_1BFEC8548);
          sub_1BFEC84E0();
          uint64_t v18 = v17;
          uint64_t v19 = (uint64_t)v5;
          uint64_t v20 = *(void *)(v17 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v17) != 1)
          {
            sub_1C151948C();
            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v18);
            sub_1BFE0ADD4(v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
            long long v5 = (char *)v19;
            goto LABEL_12;
          }
          sub_1BFE0ADD4(v19, (uint64_t (*)(void))sub_1BFEC8548);
          sub_1BFE0ADD4(v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
          long long v5 = (char *)v19;
          break;
        case 6u:
        case 7u:
          sub_1BFE0ADD4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          break;
        case 8u:
          swift_bridgeObjectRelease();
          break;
        default:
LABEL_12:
          MEMORY[0x1C18C66D0]();
          if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          break;
      }
      v14 += v15;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    return v24;
  }
  return result;
}

uint64_t sub_1C1240248(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v11[1] = v1;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0081004(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      else
      {
        sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C1240400(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v11[1] = v1;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0081004(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      else
      {
        sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_1C12405B8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v24 = (uint64_t)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v22 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v22 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  v22[0] = a1;
  v22[1] = v1;
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v17 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  v22[2] = v3;
  do
  {
    sub_1C0081004(v16, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_1BFDDF70C((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1BFDDF70C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1BFDDF70C((uint64_t)v14, v24, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1BFEC42E4(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v18 = sub_1BFEC42E4(v19 > 1, v20 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v20 + 1;
      sub_1BFDDF70C(v24, v18+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v20, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    }
    else
    {
      sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    v16 += v17;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1C12408C8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v11[1] = v1;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0081004(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      else
      {
        sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C1240A80(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v11[1] = v1;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0081004(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      else
      {
        sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

unint64_t sub_1C1240C38(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PuzzleStatistic();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v24 = (uint64_t)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v22 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v22 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  v22[0] = a1;
  v22[1] = v1;
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v17 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  v22[2] = v3;
  do
  {
    sub_1C0081004(v16, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_1BFDDF70C((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1BFDDF70C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      sub_1BFDDF70C((uint64_t)v14, v24, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1C0EE07BC(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v18 = sub_1C0EE07BC(v19 > 1, v20 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v20 + 1;
      sub_1BFDDF70C(v24, v18+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v20, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    }
    else
    {
      sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    v16 += v17;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1C1240F48(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatCustomItem.Resolved();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v24 = (uint64_t)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v22 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v22 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  v22[0] = a1;
  v22[1] = v1;
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v17 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  v22[2] = v3;
  do
  {
    sub_1C0081004(v16, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_1BFDDF70C((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      sub_1BFDDF70C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      sub_1BFDDF70C((uint64_t)v14, v24, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1C0EE7510(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v18 = sub_1C0EE7510(v19 > 1, v20 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v20 + 1;
      sub_1BFDDF70C(v24, v18+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v20, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
    }
    else
    {
      sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    v16 += v17;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v18;
}

void *sub_1C1241258(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  v18[1] = a1;
  v18[2] = v1;
  uint64_t v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v20 = v3;
  uint64_t v19 = v9;
  do
  {
    sub_1C0081004(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    if (swift_getEnumCaseMultiPayload() <= 7)
    {
      sub_1BFE0ADD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    }
    else
    {
      uint64_t v12 = *(void *)v6;
      uint64_t v11 = *((void *)v6 + 1);
      char v13 = v6[16];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1C0EE3114(0, v10[2] + 1, 1, v10);
      }
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1) {
        uint64_t v10 = sub_1C0EE3114((void *)(v14 > 1), v15 + 1, 1, v10);
      }
      v10[2] = v15 + 1;
      uint64_t v16 = &v10[3 * v15];
      v16[4] = v12;
      v16[5] = v11;
      *((unsigned char *)v16 + 48) = v13;
      uint64_t v9 = v19;
    }
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t FormatContentSlot.Resolved.headlines.getter()
{
  return sub_1C1241554(sub_1C123FE50);
}

uint64_t FormatContentSlot.Resolved.issues.getter()
{
  return sub_1C1241554(sub_1C1240248);
}

uint64_t FormatContentSlot.Resolved.tags.getter()
{
  return sub_1C1241554(sub_1C1240400);
}

uint64_t FormatContentSlot.Resolved.webEmbeds.getter()
{
  return sub_1C1241554((uint64_t (*)(uint64_t))sub_1C12405B8);
}

uint64_t FormatContentSlot.Resolved.puzzles.getter()
{
  return sub_1C1241554(sub_1C12408C8);
}

uint64_t FormatContentSlot.Resolved.puzzleTypes.getter()
{
  return sub_1C1241554(sub_1C1240A80);
}

uint64_t FormatContentSlot.Resolved.puzzleStatistics.getter()
{
  return sub_1C1241554((uint64_t (*)(uint64_t))sub_1C1240C38);
}

uint64_t FormatContentSlot.Resolved.customItems.getter()
{
  return sub_1C1241554((uint64_t (*)(uint64_t))sub_1C1240F48);
}

uint64_t FormatContentSlot.Resolved.placeholders.getter()
{
  return sub_1C1241554((uint64_t (*)(uint64_t))sub_1C1241258);
}

uint64_t sub_1C1241554(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = a1(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t FormatContentSlot.Resolved.init(slot:options:selectors:items:itemSelectors:itemOptions:itemAuxiliaries:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t FormatContentSlot.Resolved.slot.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSlot.Resolved.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.Resolved.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.Resolved.itemSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSlot.Resolved.itemOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C124162C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1241B4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1241654(uint64_t a1)
{
  unint64_t v2 = sub_1BFD483B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1241690(uint64_t a1)
{
  unint64_t v2 = sub_1BFD483B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C12416CC(uint64_t a1)
{
}

void sub_1C1241700(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1241764()
{
  if (!qword_1EB860C08)
  {
    sub_1BFEBC4B4();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860C08);
    }
  }
}

void sub_1C12417CC()
{
  if (!qword_1EB860BD8)
  {
    sub_1C1241700(255, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860BD8);
    }
  }
}

uint64_t sub_1C1241864(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12418E8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1241700(255, &qword_1EB86B1C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved, MEMORY[0x1E4FBB320]);
    sub_1C12419A8(a2, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemObject.Resolved);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12419A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s8ResolvedV10CodingKeysOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1241ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_3()
{
  return &_s8ResolvedV10CodingKeysON_3;
}

unint64_t sub_1C1241AF8()
{
  unint64_t result = qword_1EA1AD420;
  if (!qword_1EA1AD420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD420);
  }
  return result;
}

uint64_t sub_1C1241B4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953459315 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C65536D657469 && a2 == 0xED000073726F7463 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6974704F6D657469 && a2 == 0xEB00000000736E6FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x697875416D657469 && a2 == 0xEF7365697261696CLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

BOOL _s8NewsFeed23FormatGradientDirectionV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  if (a1[3] == a2[3]) {
    return a1[2] == a2[2];
  }
  return 0;
}

unint64_t sub_1C1241EC8(uint64_t a1)
{
  unint64_t result = sub_1C1241EF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1241EF0()
{
  unint64_t result = qword_1EA1AD428;
  if (!qword_1EA1AD428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD428);
  }
  return result;
}

unint64_t sub_1C1241F44(void *a1)
{
  a1[1] = sub_1BFD62368();
  a1[2] = sub_1BFDB38CC();
  unint64_t result = sub_1C1241F7C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1241F7C()
{
  unint64_t result = qword_1EA1AD430;
  if (!qword_1EA1AD430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD430);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGradientDirection()
{
  return &type metadata for FormatGradientDirection;
}

uint64_t sub_1C1241FE4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C1242038@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C1242090(uint64_t a1)
{
  unint64_t v2 = sub_1BFEB3C9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12420CC(uint64_t a1)
{
  unint64_t v2 = sub_1BFEB3C9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatSourceMapNode.identifier.getter()
{
  uint64_t v0 = sub_1C11523CC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t (*sub_1C1242158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t *a8, uint64_t a9, char *a10))(void *a1)
{
  uint64_t v52 = a1;
  uint64_t v62 = a6;
  uint64_t v50 = a10;
  uint64_t v54 = a4;
  uint64_t v55 = a9;
  uint64_t v16 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (void *)((char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = a4;
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  uint64_t v60 = a7;
  uint64_t v20 = a7;
  swift_bridgeObjectRetain();
  uint64_t v21 = (uint64_t *)sub_1C0DB46B8(&v57);
  swift_bridgeObjectRelease();
  unint64_t v22 = *a8;
  uint64_t v23 = (uint64_t **)((char *)v19 + *(int *)(v17 + 32));
  sub_1C065C470();
  uint64_t v25 = (char *)v23 + *(int *)(v24 + 48);
  *uint64_t v23 = v21;
  sub_1BFEB3C34(0, (unint64_t *)&qword_1EB871380, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA40]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v25, a2, v26);
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = v54;
  *uint64_t v19 = v22;
  v19[1] = v27;
  uint64_t v28 = v62;
  v19[2] = a5;
  v19[3] = v28;
  void v19[4] = v20;
  v48[1] = v22 & 0xFFFFFFFFFFFFFF9;
  unint64_t v49 = v22;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v53 = v21;
  swift_retain();
  sub_1C1517E7C();
  swift_beginAccess();
  sub_1BFF15D34(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
  sub_1C1518E1C();
  swift_endAccess();
  sub_1C1517E8C();
  v56[0] = v27;
  v56[1] = a5;
  uint64_t v29 = a5;
  v56[2] = v62;
  v56[3] = v20;
  uint64_t v30 = v20;
  sub_1C1017F38(v56, 1, &v57);
  uint64_t v31 = v58;
  if (v58)
  {
    v48[0] = a5;
    uint64_t v32 = v20;
    uint64_t v34 = v60;
    uint64_t v33 = v61;
    uint64_t v35 = v59;
    uint64_t v36 = v57;
    sub_1C1016BB8(&v57);
    uint64_t v37 = v34;
    uint64_t v30 = v32;
    uint64_t v29 = v48[0];
    sub_1C1242D88(v36, v31, v35, v37, v33);
  }
  swift_retain();
  uint64_t v38 = v52;
  uint64_t v39 = v53;
  uint64_t v40 = v51;
  sub_1BFF1C1F0(v52, v53, v50, v49);
  swift_release();
  if (v40)
  {
    uint64_t v41 = *(uint64_t *)((char *)v39 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    uint64_t v57 = v54;
    uint64_t v58 = v29;
    uint64_t v59 = v62;
    uint64_t v60 = v30;
    sub_1C1242AF4(v41, &v57, v40, v55);
    swift_willThrow();

    swift_release();
    return (uint64_t (*)(void *))sub_1BFF1FA68((uint64_t)v19, type metadata accessor for FormatDebuggerCallStackFrame);
  }
  else
  {
    uint64_t v57 = v38;
    sub_1BFF1D63C();
    sub_1BFF30528(&qword_1EB884D70, (void (*)(uint64_t))sub_1BFF1D63C);
    uint64_t v43 = v55;
    swift_retain();
    sub_1C15173AC();
    swift_release();
    sub_1BFF1FA68((uint64_t)v19, type metadata accessor for FormatDebuggerCallStackFrame);
    uint64_t v44 = *(uint64_t *)((char *)v39 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_retain();
    swift_release();
    unint64_t v45 = (void *)swift_allocObject();
    uint64_t v46 = v54;
    v45[2] = v44;
    v45[3] = v46;
    uint64_t v47 = v62;
    v45[4] = v29;
    v45[5] = v47;
    v45[6] = v30;
    v45[7] = v43;
    swift_bridgeObjectRetain();
    swift_retain();
    return sub_1C1243110;
  }
}

uint64_t sub_1C12425EC()
{
  sub_1BFF15D34(0, &qword_1EB881428, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v4 - v1;
  sub_1C1517E7C();
  swift_beginAccess();
  sub_1BFF15D34(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
  sub_1C1518DFC();
  swift_endAccess();
  sub_1C124317C((uint64_t)v2, &qword_1EB881428, type metadata accessor for FormatDebuggerCallStackFrame);
  return sub_1C1517E8C();
}

uint64_t (*sub_1C1242730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t *a8, char *a9))(void *a1)
{
  uint64_t v10 = v9;
  uint64_t v16 = (uint64_t (*)(void *))a9;
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v27 = a7;
  swift_bridgeObjectRetain();
  uint64_t v17 = (uint64_t *)sub_1C0DB46B8(&v23);
  swift_bridgeObjectRelease();
  unint64_t v18 = *a8;
  swift_retain();
  sub_1BFF1C1F0(a1, v17, a9, v18);
  swift_release();
  if (v10)
  {
    uint64_t v19 = *(uint64_t *)((char *)v17 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    uint64_t v23 = a4;
    uint64_t v24 = a5;
    uint64_t v25 = a6;
    uint64_t v26 = v27;
    sub_1C1242AF4(v19, &v23, v10, 0);
    swift_willThrow();

    swift_release();
  }
  else
  {
    uint64_t v20 = *(uint64_t *)((char *)v17 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_retain();
    swift_release();
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v20;
    void v21[3] = a4;
    v21[4] = a5;
    v21[5] = a6;
    v21[6] = v27;
    v21[7] = 0;
    uint64_t v16 = sub_1C1243110;
    swift_bridgeObjectRetain();
  }
  return v16;
}

uint64_t sub_1C12428BC()
{
  uint64_t v0 = sub_1C11523CC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C1242908(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), uint64_t a2)
{
  return FormatSourceMapNode.bind(binder:context:)(a1, a2);
}

unint64_t sub_1C1242920(unint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    v6[0] = *(void *)(v1 + 8);
    v6[1] = v4;
    long long v7 = *(_OWORD *)(v1 + 24);
    sub_1C0F4A550(v6);
  }
  v6[0] = v3;
  return sub_1C05B4E6C(a1);
}

void sub_1C1242990(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v18 = *v2;
  uint64_t v9 = v3;
  char v10 = v4;
  char v11 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v12 = *((_OWORD *)a2 + 1);
  long long v13 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v14 = *((_OWORD *)a2 + 3);
  long long v15 = v8;
  long long v16 = *((_OWORD *)a2 + 5);
  uint64_t v17 = v6;
  sub_1BFF0B0B8(a1, (uint64_t)&v9);
}

uint64_t _s8NewsFeed19FormatSourceMapNodeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  unint64_t v7 = a2[1];
  unint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  unint64_t v10 = a2[4];
  unint64_t v13 = *a2;
  uint64_t v14 = v2;
  if ((static FormatNode.== infix(_:_:)(&v14, &v13) & 1) == 0) {
    return 0;
  }
  if (!v4)
  {
    if (!v8) {
      return 1;
    }
    goto LABEL_11;
  }
  if (!v8)
  {
    swift_bridgeObjectRetain();
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 == v7 && v4 == v8)
  {
    if (v5 == v9) {
      return v6 == v10;
    }
    return 0;
  }
  char v12 = sub_1C1520A9C();
  uint64_t result = 0;
  if ((v12 & 1) != 0 && v5 == v9) {
    return v6 == v10;
  }
  return result;
}

uint64_t sub_1C1242AF4(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  sub_1BFF15D34(0, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v26[-1] - v9;
  uint64_t v12 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v13 = a2[2];
  uint64_t v14 = a2[3];
  v26[0] = (uint64_t)a3;
  id v15 = a3;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v16 = type metadata accessor for FormatLayoutError();
  int v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  if (!v17)
  {
    v18(v10, 1, 1, v16);
    sub_1C124317C((uint64_t)v10, (unint64_t *)&qword_1EB85B950, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError);
    if (!a4)
    {
LABEL_6:
      sub_1BFF30528((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      uint64_t v20 = swift_allocError();
      void *v22 = *(void *)(a1 + 48);
      v22[1] = a3;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
LABEL_5:
    v26[0] = v12;
    v26[1] = v11;
    v26[2] = v13;
    v26[3] = v14;
    v26[4] = (uint64_t)a3;
    id v21 = a3;
    swift_bridgeObjectRetain();
    sub_1C1016BB8(v26);
    swift_bridgeObjectRelease();
    sub_1C0FCF824(a3);
    goto LABEL_6;
  }
  v18(v10, 0, 1, v16);
  if (swift_getEnumCaseMultiPayload() != 65)
  {
    sub_1BFF1FA68((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    if (!a4) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v19 = (void *)*((void *)v10 + 1);
  swift_bridgeObjectRelease();

  uint64_t v20 = (uint64_t)a3;
LABEL_7:
  id v23 = a3;
  return v20;
}

void sub_1C1242D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1C0FCF824(a5);
  }
}

unint64_t sub_1C1242DCC(void *a1)
{
  a1[1] = sub_1C00795B8();
  a1[2] = sub_1BFC3A24C();
  unint64_t result = sub_1C1242E04();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1242E04()
{
  unint64_t result = qword_1EA1AD438;
  if (!qword_1EA1AD438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD438);
  }
  return result;
}

unint64_t sub_1C1242E58(uint64_t a1)
{
  unint64_t result = sub_1C1242E80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1242E80()
{
  unint64_t result = qword_1EA1AD440;
  if (!qword_1EA1AD440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD440);
  }
  return result;
}

void *assignWithCopy for FormatSourceMapNode(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for FormatSourceMapNode(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSourceMapNode()
{
  return &type metadata for FormatSourceMapNode;
}

unsigned char *storeEnumTagSinglePayload for FormatSourceMapNode.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C1243060);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceMapNode.CodingKeys()
{
  return &type metadata for FormatSourceMapNode.CodingKeys;
}

unint64_t sub_1C124309C()
{
  unint64_t result = qword_1EA1AD448;
  if (!qword_1EA1AD448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD448);
  }
  return result;
}

uint64_t sub_1C12430F0()
{
  return sub_1C12425EC();
}

uint64_t sub_1C1243110(void *a1)
{
  return sub_1C124312C(a1);
}

uint64_t sub_1C124312C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  v7[0] = *(void *)(v1 + 24);
  v7[1] = v4;
  long long v8 = *(_OWORD *)(v1 + 40);
  return sub_1C1242AF4(v3, v7, a1, v5);
}

uint64_t sub_1C124317C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFF15D34(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C12431EC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatScopedOption();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    long long v8 = v5;
    uint64_t v27 = v1;
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1C05F677C(0, v6, 0);
    uint64_t v7 = v33;
    uint64_t v10 = sub_1BFEABF78(a1);
    uint64_t v11 = 0;
    uint64_t v12 = a1 + 64;
    uint64_t v26 = a1 + 88;
    uint64_t v13 = (uint64_t)v8;
    int64_t v28 = v6;
    uint64_t v29 = v9;
    uint64_t v30 = a1 + 64;
    do
    {
      if (v10 < 0 || v10 >= 1 << *(unsigned char *)(a1 + 32))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1C12434D0);
      }
      unint64_t v16 = (unint64_t)v10 >> 6;
      if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v9) {
        goto LABEL_26;
      }
      sub_1BFEF9524(v13);
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = v7;
      unint64_t v18 = *(void *)(v7 + 16);
      unint64_t v17 = *(void *)(v7 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1C05F677C(v17 > 1, v18 + 1, 1);
        uint64_t v7 = v33;
      }
      *(void *)(v7 + 16) = v18 + 1;
      sub_1C124503C(v13, v7+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v18, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
      int64_t v14 = 1 << *(unsigned char *)(a1 + 32);
      if (v10 >= v14) {
        goto LABEL_27;
      }
      uint64_t v12 = v30;
      uint64_t v19 = *(void *)(v30 + 8 * v16);
      if ((v19 & (1 << v10)) == 0) {
        goto LABEL_28;
      }
      LODWORD(v9) = v29;
      if (*(_DWORD *)(a1 + 36) != v29) {
        goto LABEL_29;
      }
      unint64_t v20 = v19 & (-2 << (v10 & 0x3F));
      if (v20)
      {
        int64_t v14 = __clz(__rbit64(v20)) | v10 & 0xFFFFFFFFFFFFFFC0;
        int64_t v15 = v28;
      }
      else
      {
        unint64_t v21 = v16 + 1;
        unint64_t v22 = (unint64_t)(v14 + 63) >> 6;
        int64_t v15 = v28;
        if (v16 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v30 + 8 * v21);
          if (!v23)
          {
            unint64_t v21 = v16 + 2;
            if (v16 + 2 >= v22) {
              goto LABEL_4;
            }
            unint64_t v23 = *(void *)(v30 + 8 * v21);
            if (!v23)
            {
              while (v22 - 3 != v16)
              {
                unint64_t v23 = *(void *)(v26 + 8 * v16++);
                if (v23)
                {
                  unint64_t v21 = v16 + 2;
                  goto LABEL_17;
                }
              }
              goto LABEL_4;
            }
          }
LABEL_17:
          int64_t v14 = __clz(__rbit64(v23)) + (v21 << 6);
        }
      }
LABEL_4:
      ++v11;
      uint64_t v10 = v14;
    }
    while (v11 != v15);
  }
  return v7;
}

uint64_t sub_1C1243530@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
      a1 &= 0xFFFFFFFFFFFFFFBuLL;
      break;
    default:
      break;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v10 = (void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = v10[1];
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v4;
  a2[5] = v5;
  a2[6] = v2;
  a2[7] = v3;
  return sub_1BFF95098(v8, v9, v6, v7, v4, v5, v2);
}

uint64_t sub_1C12435E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  switch((a2 >> 59) & 0x1E | (a2 >> 2) & 1)
  {
    case 1uLL:
      type metadata accessor for FormatOption();
      uint64_t v8 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v8 | 4;
      break;
    case 2uLL:
      type metadata accessor for FormatOption();
      uint64_t v10 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v10 | 0x1000000000000000;
      break;
    case 3uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v13, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x1000000000000004;
      goto LABEL_26;
    case 4uLL:
      type metadata accessor for FormatOption();
      uint64_t v15 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v15 | 0x2000000000000000;
      break;
    case 5uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v17, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x2000000000000004;
      goto LABEL_26;
    case 6uLL:
      type metadata accessor for FormatOption();
      uint64_t v18 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v19, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v18 | 0x3000000000000000;
      break;
    case 7uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x3000000000000004;
      goto LABEL_26;
    case 8uLL:
      type metadata accessor for FormatOption();
      uint64_t v21 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v22, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v21 | 0x4000000000000000;
      break;
    case 9uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v23, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x4000000000000004;
      goto LABEL_26;
    case 0xAuLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v24, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x5000000000000000;
      goto LABEL_26;
    case 0xBuLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v25, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x5000000000000004;
      goto LABEL_26;
    case 0xCuLL:
      type metadata accessor for FormatOption();
      uint64_t v26 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v27, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v26 | 0x6000000000000000;
      break;
    case 0xDuLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v28, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x6000000000000004;
      goto LABEL_26;
    case 0xEuLL:
      type metadata accessor for FormatOption();
      uint64_t v29 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v30, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v29 | 0x7000000000000000;
      break;
    case 0xFuLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v31, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x7000000000000004;
      goto LABEL_26;
    case 0x10uLL:
      type metadata accessor for FormatOption();
      uint64_t v32 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v33, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v5 = v32 | 0x8000000000000000;
      break;
    case 0x11uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v34, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x8000000000000004;
      goto LABEL_26;
    case 0x12uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v35, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x9000000000000000;
      goto LABEL_26;
    case 0x13uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v36, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0x9000000000000004;
      goto LABEL_26;
    case 0x14uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v37, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0xA000000000000000;
      goto LABEL_26;
    case 0x15uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v38, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0xA000000000000004;
      goto LABEL_26;
    case 0x16uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v39, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0xB000000000000000;
      goto LABEL_26;
    case 0x17uLL:
      type metadata accessor for FormatOption();
      uint64_t v12 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v40, (uint64_t (*)(void))type metadata accessor for FormatOption);
      unint64_t v14 = 0xB000000000000004;
LABEL_26:
      unint64_t v5 = v12 | v14;
      break;
    default:
      type metadata accessor for FormatOption();
      unint64_t v5 = swift_allocBox();
      uint64_t result = sub_1C1244FD4(a1, v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
      break;
  }
  *a3 = v5;
  return result;
}

uint64_t sub_1C1243BAC()
{
  uint64_t v1 = v0;
  sub_1C12451C4(0, &qword_1EA1AD490, (void (*)(uint64_t))type metadata accessor for FormatScopedOption);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v87 = (char *)v86 - v3;
  uint64_t v4 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v89 = (void *)((char *)v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void *)((char *)v86 - v7);
  MEMORY[0x1F4188790](v9);
  uint64_t v96 = (void *)((char *)v86 - v10);
  uint64_t v98 = type metadata accessor for FormatScopedOption();
  uint64_t v11 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v92 = (uint64_t)v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v88 = (uint64_t)v86 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v86 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v95 = (uint64_t)v86 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v86 - v21;
  swift_beginAccess();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C12431EC(v23);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v91 = v8;
  uint64_t v93 = v11;
  if (v25)
  {
    uint64_t v90 = v1;
    unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v86[1] = v24;
    uint64_t v27 = v24 + v26;
    uint64_t v28 = *(void *)(v11 + 72);
    uint64_t v29 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v94 = v22;
    while (1)
    {
      uint64_t v97 = v25;
      sub_1C1244FD4(v27, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
      uint64_t v30 = v95;
      sub_1C1244FD4((uint64_t)v22, v95, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
      uint64_t v31 = v96;
      sub_1C124503C(v30, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v32 = *v31;
      uint64_t v33 = v31[1];
      swift_bridgeObjectRetain();
      sub_1C12450A4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v34 = (uint64_t)v17;
      sub_1C1244FD4((uint64_t)v22, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v100 = v29;
      unint64_t v37 = sub_1BFEF2D8C(v32, v33);
      uint64_t v38 = v29[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39))
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      char v41 = v36;
      if (v29[3] >= v40)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v29 = v100;
          if ((v36 & 1) == 0) {
            goto LABEL_12;
          }
        }
        else
        {
          sub_1C106C494();
          uint64_t v29 = v100;
          if ((v41 & 1) == 0) {
            goto LABEL_12;
          }
        }
      }
      else
      {
        sub_1C1056B58(v40, isUniquelyReferenced_nonNull_native);
        unint64_t v42 = sub_1BFEF2D8C(v32, v33);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_63;
        }
        unint64_t v37 = v42;
        uint64_t v29 = v100;
        if ((v41 & 1) == 0)
        {
LABEL_12:
          v29[(v37 >> 6) + 8] |= 1 << v37;
          uint64_t v44 = (uint64_t *)(v29[6] + 16 * v37);
          *uint64_t v44 = v32;
          v44[1] = v33;
          uint64_t v17 = (char *)v34;
          sub_1C124503C(v34, v29[7] + v37 * v28, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
          uint64_t v45 = v29[2];
          BOOL v46 = __OFADD__(v45, 1);
          uint64_t v47 = v45 + 1;
          if (v46) {
            goto LABEL_59;
          }
          v29[2] = v47;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      uint64_t v17 = (char *)v34;
      sub_1C1245160(v34, v29[7] + v37 * v28);
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v94;
      sub_1C12450A4((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
      v27 += v28;
      uint64_t v25 = v97 - 1;
      if (v97 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v90;
        uint64_t v8 = v91;
        uint64_t v11 = v93;
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
  swift_beginAccess();
  uint64_t v48 = *(void *)(v1 + 24);
  uint64_t v49 = *(void *)(v48 + 64);
  uint64_t v95 = v48 + 64;
  uint64_t v50 = 1 << *(unsigned char *)(v48 + 32);
  uint64_t v51 = -1;
  if (v50 < 64) {
    uint64_t v51 = ~(-1 << v50);
  }
  uint64_t v52 = v51 & v49;
  uint64_t v96 = (uint64_t *)((unint64_t)(v50 + 63) >> 6);
  uint64_t v97 = v48;
  uint64_t v53 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v54 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v55 = 0;
  uint64_t v56 = (uint64_t)v87;
  if (!v52) {
    goto LABEL_25;
  }
LABEL_21:
  for (v52 &= v52 - 1; ; uint64_t v52 = (v60 - 1) & v60)
  {
    sub_1BFEF9524((uint64_t)v8);
    uint64_t v62 = *v8;
    uint64_t v63 = v8[1];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C12450A4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
    if (v29[2] && (unint64_t v64 = sub_1BFEF2D8C(v62, v63), (v65 & 1) != 0))
    {
      sub_1C1244FD4(v29[7] + *(void *)(v93 + 72) * v64, v56, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
      uint64_t v57 = 0;
    }
    else
    {
      uint64_t v57 = 1;
    }
    uint64_t v58 = v98;
    (*v53)(v56, v57, 1, v98);
    swift_bridgeObjectRelease();
    LODWORD(v58) = (*v54)(v56, 1, v58);
    sub_1C1245104(v56, &qword_1EA1AD490, (void (*)(uint64_t))type metadata accessor for FormatScopedOption);
    if (v58 != 1)
    {
      swift_release();
      if (v52) {
        goto LABEL_21;
      }
      goto LABEL_25;
    }
    unint64_t v66 = v89;
    sub_1BFEF9524((uint64_t)v89);
    uint64_t v68 = *v66;
    uint64_t v67 = v66[1];
    swift_bridgeObjectRetain();
    sub_1C12450A4((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for FormatOption);
    uint64_t v69 = v88;
    sub_1BFEF9524(v88);
    swift_storeEnumTagMultiPayload();
    sub_1C124503C(v69, v92, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
    int v70 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v99 = v29;
    uint64_t v94 = (char *)v68;
    uint64_t v90 = v67;
    unint64_t v72 = sub_1BFEF2D8C(v68, v67);
    uint64_t v73 = v29[2];
    BOOL v74 = (v71 & 1) == 0;
    uint64_t v75 = v73 + v74;
    if (__OFADD__(v73, v74)) {
      goto LABEL_61;
    }
    char v76 = v71;
    if (v29[3] >= v75)
    {
      if ((v70 & 1) == 0) {
        sub_1C106C494();
      }
      uint64_t v77 = v90;
      uint64_t v29 = v99;
      if (v76) {
        goto LABEL_48;
      }
    }
    else
    {
      sub_1C1056B58(v75, v70);
      uint64_t v77 = v90;
      unint64_t v78 = sub_1BFEF2D8C((uint64_t)v94, v90);
      if ((v76 & 1) != (v79 & 1)) {
        goto LABEL_63;
      }
      unint64_t v72 = v78;
      uint64_t v29 = v99;
      if (v76)
      {
LABEL_48:
        sub_1C1245160(v92, v29[7] + *(void *)(v93 + 72) * v72);
        goto LABEL_54;
      }
    }
    v29[(v72 >> 6) + 8] |= 1 << v72;
    uint64_t v80 = (void *)(v29[6] + 16 * v72);
    *uint64_t v80 = v94;
    v80[1] = v77;
    sub_1C124503C(v92, v29[7] + *(void *)(v93 + 72) * v72, (uint64_t (*)(void))type metadata accessor for FormatScopedOption);
    uint64_t v81 = v29[2];
    BOOL v46 = __OFADD__(v81, 1);
    uint64_t v82 = v81 + 1;
    if (v46) {
      goto LABEL_62;
    }
    v29[2] = v82;
    swift_bridgeObjectRetain();
LABEL_54:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v91;
    if (v52) {
      goto LABEL_21;
    }
LABEL_25:
    uint64_t v59 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      goto LABEL_58;
    }
    if (v59 >= (uint64_t)v96)
    {
LABEL_56:
      swift_release();
      uint64_t v83 = swift_bridgeObjectRetain();
      size_t v84 = sub_1C00B1C68(v83);
      swift_bridgeObjectRelease_n();
      return v84;
    }
    uint64_t v60 = *(void *)(v95 + 8 * v59);
    ++v55;
    if (!v60)
    {
      uint64_t v55 = v59 + 1;
      if (v59 + 1 >= (uint64_t)v96) {
        goto LABEL_56;
      }
      uint64_t v60 = *(void *)(v95 + 8 * v55);
      if (!v60)
      {
        uint64_t v55 = v59 + 2;
        if (v59 + 2 >= (uint64_t)v96) {
          goto LABEL_56;
        }
        uint64_t v60 = *(void *)(v95 + 8 * v55);
        if (!v60)
        {
          uint64_t v55 = v59 + 3;
          if (v59 + 3 >= (uint64_t)v96) {
            goto LABEL_56;
          }
          uint64_t v60 = *(void *)(v95 + 8 * v55);
          if (!v60) {
            break;
          }
        }
      }
    }
LABEL_40:
    ;
  }
  uint64_t v61 = v59 + 4;
  if (v61 >= (uint64_t)v96) {
    goto LABEL_56;
  }
  uint64_t v60 = *(void *)(v95 + 8 * v61);
  if (v60)
  {
    uint64_t v55 = v61;
    goto LABEL_40;
  }
  while (1)
  {
    uint64_t v55 = v61 + 1;
    if (__OFADD__(v61, 1)) {
      break;
    }
    if (v55 >= (uint64_t)v96) {
      goto LABEL_56;
    }
    uint64_t v60 = *(void *)(v95 + 8 * v55);
    ++v61;
    if (v60) {
      goto LABEL_40;
    }
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C12444F8()
{
  if (*v0) {
    return 7364973;
  }
  else {
    return 0x656C626169726176;
  }
}

uint64_t sub_1C1244530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1244E9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1244558(uint64_t a1)
{
  unint64_t v2 = sub_1C1244B50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1244594(uint64_t a1)
{
  unint64_t v2 = sub_1C1244B50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatOptionCollection.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatOptionCollection.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1244BA4(0, &qword_1EA1AD450, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1244B50();
  sub_1C1520F0C();
  uint64_t v13 = *(void *)(v3 + 16);
  LOBYTE(v12) = 0;
  type metadata accessor for FormatVariableCollection();
  sub_1C1244C08(&qword_1EA1AD460, (void (*)(uint64_t))type metadata accessor for FormatVariableCollection);
  sub_1C152080C();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 24);
    v11[15] = 1;
    sub_1C019F8E4();
    sub_1C019F94C();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatOptionCollection.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatOptionCollection.init(from:)(a1);
  return v2;
}

uint64_t FormatOptionCollection.init(from:)(void *a1)
{
  sub_1C1244BA4(0, &qword_1EA1AD468, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1244B50();
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    type metadata accessor for FormatVariableCollection();
    char v12 = 0;
    sub_1C1244C08(&qword_1EA1AD470, (void (*)(uint64_t))type metadata accessor for FormatVariableCollection);
    uint64_t v9 = v11;
    sub_1C15206EC();
    *(void *)(v1 + 16) = v13;
    sub_1C019F8E4();
    char v12 = 1;
    sub_1C019FC80();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    *(void *)(v1 + 24) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1C1244AD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatOptionCollection.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C1244B2C(void *a1)
{
  return FormatOptionCollection.encode(to:)(a1);
}

unint64_t sub_1C1244B50()
{
  unint64_t result = qword_1EA1AD458;
  if (!qword_1EA1AD458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD458);
  }
  return result;
}

void sub_1C1244BA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1244B50();
    unint64_t v7 = a3(a1, &type metadata for FormatOptionCollection.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C1244C08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for FormatOptionCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatOptionCollection);
}

uint64_t dispatch thunk of FormatOptionCollection.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for FormatOptionCollection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1244D5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionCollection.CodingKeys()
{
  return &type metadata for FormatOptionCollection.CodingKeys;
}

unint64_t sub_1C1244D98()
{
  unint64_t result = qword_1EA1AD478;
  if (!qword_1EA1AD478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD478);
  }
  return result;
}

unint64_t sub_1C1244DF0()
{
  unint64_t result = qword_1EA1AD480;
  if (!qword_1EA1AD480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD480);
  }
  return result;
}

unint64_t sub_1C1244E48()
{
  unint64_t result = qword_1EA1AD488;
  if (!qword_1EA1AD488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD488);
  }
  return result;
}

uint64_t sub_1C1244E9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C626169726176 && a2 == 0xE900000000000073;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C1244F8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1244FD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C124503C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12450A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1245104(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C12451C4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1245160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatScopedOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C12451C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *FormatPackageDirectionHorizontal.init(scroll:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static FormatPackageDirectionHorizontal.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void FormatPackageDirectionHorizontal.scroll.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FormatPackageDirectionHorizontal.scroll.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*FormatPackageDirectionHorizontal.scroll.modify())(void)
{
  return nullsub_1;
}

unint64_t sub_1C1245270(uint64_t a1)
{
  unint64_t result = sub_1C1245298();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1245298()
{
  unint64_t result = qword_1EA1AD498;
  if (!qword_1EA1AD498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD498);
  }
  return result;
}

unint64_t sub_1C12452EC(void *a1)
{
  a1[1] = sub_1C0473BFC();
  a1[2] = sub_1C090293C();
  unint64_t result = sub_1C1245324();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1245324()
{
  unint64_t result = qword_1EA1AD4A0;
  if (!qword_1EA1AD4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD4A0);
  }
  return result;
}

uint64_t sub_1C1245378@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPackageDirectionHorizontal.init(from:)(a1, a2);
}

uint64_t sub_1C1245390(void *a1)
{
  return FormatPackageDirectionHorizontal.encode(to:)(a1);
}

unsigned char *sub_1C12453A8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned char *sub_1C12453B4(unsigned char *result, unsigned char *a2)
{
  *a2 = *result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatPackageDirectionHorizontal(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C124548CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPackageDirectionHorizontal()
{
  return &type metadata for FormatPackageDirectionHorizontal;
}

uint64_t sub_1C12454C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1C1519CBC();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C1519ACC();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1C1519D1C();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1C1519D2C();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1C151E62C();

  sub_1C1515E5C();
  swift_bridgeObjectRelease();
  sub_1C1515ECC();
  uint64_t v17 = sub_1C1515F4C();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  uint64_t *v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1BFDA5CA0(0, (unint64_t *)&unk_1EB86EDE0, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
  sub_1C1519ABC();
  uint64_t v35 = v22;
  sub_1BFDA5BF4((unint64_t *)&qword_1EB86C298, MEMORY[0x1E4FAA678]);
  sub_1BFDA5CA0(0, &qword_1EB86DDB8, v21, MEMORY[0x1E4FBB320]);
  sub_1C12461A0((unint64_t *)&qword_1EB86DDC0, &qword_1EB86DDB8, v21);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1C1519CCC();
  *uint64_t v34 = result;
  return result;
}

uint64_t sub_1C1245954(void *a1)
{
  return sub_1C1245974(a1);
}

uint64_t sub_1C1245974(void *a1)
{
  uint64_t v2 = sub_1C151804C();
  MEMORY[0x1F4188790](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0064014();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA910];
    sub_1BFDA5CA0(0, &qword_1EB882708, MEMORY[0x1E4FAA910], MEMORY[0x1E4FBBE00]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
    sub_1C151803C();
    sub_1BFDA5BF4((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFDA5CA0(0, (unint64_t *)&qword_1EB879C30, v5, MEMORY[0x1E4FBB320]);
    sub_1C12461A0((unint64_t *)&qword_1EB879C40, (unint64_t *)&qword_1EB879C30, v5);
    sub_1C151FFBC();
    *(void *)(swift_allocObject() + 16) = v4;
    sub_1BFDA5CA0(0, &qword_1EB896BC8, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
    swift_allocObject();
    return sub_1C1518D1C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1245BF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1C1519CBC();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C1519ACC();
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v24 - v11;
  uint64_t v25 = sub_1C1519D1C();
  uint64_t v13 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1C1519D2C();
  id v16 = objc_msgSend(a1, sel_contentDirectory);
  sub_1C151E62C();

  sub_1C1515E5C();
  swift_bridgeObjectRelease();
  sub_1C1515ECC();
  uint64_t v17 = sub_1C1515F4C();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  uint64_t *v15 = v17;
  v15[1] = v19;
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAA728], v25);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA678];
  sub_1BFDA5CA0(0, (unint64_t *)&unk_1EB86EDE0, MEMORY[0x1E4FAA678], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
  sub_1C1519ABC();
  uint64_t v35 = v22;
  sub_1BFDA5BF4((unint64_t *)&qword_1EB86C298, MEMORY[0x1E4FAA678]);
  sub_1BFDA5CA0(0, &qword_1EB86DDB8, v21, MEMORY[0x1E4FBB320]);
  sub_1C12461A0((unint64_t *)&qword_1EB86DDC0, &qword_1EB86DDB8, v21);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, *MEMORY[0x1E4FAA710], v33);
  uint64_t result = sub_1C1519CCC();
  *uint64_t v34 = result;
  return result;
}

uint64_t sub_1C1246088()
{
  sub_1C15183EC();
  sub_1BFDA5CA0(0, &qword_1EB896BC8, MEMORY[0x1E4FAA758], MEMORY[0x1E4FAAFF0]);
  sub_1C1518AFC();
  swift_release();
  swift_release();
  sub_1C15183EC();
  sub_1C1518AFC();
  swift_release();
  return swift_release();
}

uint64_t sub_1C12461A0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFDA5CA0(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1246204()
{
  return swift_deallocObject();
}

uint64_t sub_1C124623C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1245BF8(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C1246244@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C12454C4(*(void **)(v1 + 16), a1);
}

uint64_t DispatchQoS.QoSClass.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 9:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBCB10];
      break;
    case 17:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBCB50];
      break;
    case 25:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBCB28];
      break;
    case 33:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBCB38];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x1E4FBCB48];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_1C151E17C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a2, v4, v5);
}

uint64_t _sSo17OS_dispatch_queueC8NewsFeedE6global16qualityOfServiceABSo09NSQualityhI0V_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151E17C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = (unsigned int *)MEMORY[0x1E4FBCB10];
  switch(a1)
  {
    case 9:
      break;
    case 17:
      uint64_t v10 = (unsigned int *)MEMORY[0x1E4FBCB50];
      break;
    case 25:
      uint64_t v10 = (unsigned int *)MEMORY[0x1E4FBCB28];
      break;
    case 33:
      uint64_t v10 = (unsigned int *)MEMORY[0x1E4FBCB38];
      break;
    default:
      uint64_t v10 = (unsigned int *)MEMORY[0x1E4FBCB48];
      break;
  }
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v5, *v10, v2, v7);
  sub_1BFE4597C();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  uint64_t v11 = sub_1C151F5BC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  return v11;
}

uint64_t destroy for LayeredMediaVideoVariant(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMediaVideoVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMediaVideoVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LayeredMediaVideoVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMediaVideoVariant()
{
  return &type metadata for LayeredMediaVideoVariant;
}

uint64_t PuzzleStatsInfo.__allocating_init(statistics:)(uint64_t a1)
{
  return PuzzleStatsInfo.init(statistics:)(a1);
}

uint64_t sub_1C1246774()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v28 = MEMORY[0x1E4FBC868];
  uint64_t v3 = MEMORY[0x1E4FBB3D0];
  sub_1BFF66964(v1, (uint64_t)v35, (unint64_t *)&qword_1EB8900F8);
  sub_1BFF66964((uint64_t)v35, (uint64_t)&v36, (unint64_t *)&qword_1EB8900F8);
  if (v37)
  {
    sub_1C035332C(0x74615265766C6F73, 0xE900000000000065, &v26);
    sub_1BFEFE4A0((uint64_t)&v26);
  }
  else
  {
    uint64_t v27 = v3;
    *(void *)&long long v26 = v36;
    sub_1BFF993A8(&v26, v25);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v2;
    sub_1BFFB4A24(v25, 0x74615265766C6F73, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
    uint64_t v28 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = MEMORY[0x1E4FBB550];
  sub_1BFF66964(v1 + 16, (uint64_t)v34, &qword_1EB87A090);
  sub_1BFF66964((uint64_t)v34, (uint64_t)&v38, &qword_1EB87A090);
  if (v39)
  {
    sub_1C035332C(0x6C6F536C61746F74, 0xEB00000000646576, &v26);
    sub_1BFEFE4A0((uint64_t)&v26);
  }
  else
  {
    uint64_t v27 = v5;
    *(void *)&long long v26 = v38;
    sub_1BFF993A8(&v26, v25);
    uint64_t v6 = v28;
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v6;
    sub_1BFFB4A24(v25, 0x6C6F536C61746F74, 0xEB00000000646576, v7);
    uint64_t v28 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = MEMORY[0x1E4FBB550];
  sub_1BFF66964(v1 + 32, (uint64_t)v33, &qword_1EB87A090);
  sub_1BFF66964((uint64_t)v33, (uint64_t)&v40, &qword_1EB87A090);
  if (v41)
  {
    sub_1C035332C(0x5474736574736166, 0xEB00000000656D69, &v26);
    sub_1BFEFE4A0((uint64_t)&v26);
  }
  else
  {
    uint64_t v27 = v8;
    *(void *)&long long v26 = v40;
    sub_1BFF993A8(&v26, v25);
    uint64_t v9 = v28;
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v9;
    sub_1BFFB4A24(v25, 0x5474736574736166, 0xEB00000000656D69, v10);
    uint64_t v28 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = MEMORY[0x1E4FBB3D0];
  sub_1BFF66964(v1 + 48, (uint64_t)v32, (unint64_t *)&qword_1EB8900F8);
  sub_1BFF66964((uint64_t)v32, (uint64_t)&v42, (unint64_t *)&qword_1EB8900F8);
  if (v43)
  {
    sub_1C035332C(0x5465676172657661, 0xEB00000000656D69, &v26);
    sub_1BFEFE4A0((uint64_t)&v26);
  }
  else
  {
    uint64_t v27 = v11;
    *(void *)&long long v26 = v42;
    sub_1BFF993A8(&v26, v25);
    uint64_t v12 = v28;
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v12;
    sub_1BFFB4A24(v25, 0x5465676172657661, 0xEB00000000656D69, v13);
    uint64_t v28 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = MEMORY[0x1E4FBB550];
  sub_1BFF66964(v1 + 64, (uint64_t)v31, &qword_1EB87A090);
  sub_1BFF66964((uint64_t)v31, (uint64_t)&v44, &qword_1EB87A090);
  if (v45)
  {
    sub_1C035332C(0x53747365676E6F6CLL, 0xED00006B61657274, &v26);
    sub_1BFEFE4A0((uint64_t)&v26);
  }
  else
  {
    uint64_t v27 = v14;
    *(void *)&long long v26 = v44;
    sub_1BFF993A8(&v26, v25);
    uint64_t v15 = v28;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v15;
    sub_1BFFB4A24(v25, 0x53747365676E6F6CLL, 0xED00006B61657274, v16);
    uint64_t v28 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = MEMORY[0x1E4FBB550];
  sub_1BFF66964(v1 + 80, (uint64_t)v30, &qword_1EB87A090);
  sub_1BFF66964((uint64_t)v30, (uint64_t)&v46, &qword_1EB87A090);
  if (v47)
  {
    sub_1C035332C(0x53746E6572727563, 0xED00006B61657274, &v26);
    sub_1BFEFE4A0((uint64_t)&v26);
  }
  else
  {
    uint64_t v27 = v17;
    *(void *)&long long v26 = v46;
    sub_1BFF993A8(&v26, v25);
    uint64_t v18 = v28;
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v18;
    sub_1BFFB4A24(v25, 0x53746E6572727563, 0xED00006B61657274, v19);
    uint64_t v28 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v1 + 96;
  uint64_t v21 = MEMORY[0x1E4FBB550];
  sub_1BFF66964(v20, (uint64_t)v29, &qword_1EB87A090);
  sub_1BFF66964((uint64_t)v29, (uint64_t)&v48, &qword_1EB87A090);
  if (v49)
  {
    sub_1C035332C(0x5374736568676968, 0xEC00000065726F63, &v26);
    sub_1BFEFE4A0((uint64_t)&v26);
    return v28;
  }
  else
  {
    uint64_t v27 = v21;
    *(void *)&long long v26 = v48;
    sub_1BFF993A8(&v26, v25);
    uint64_t v22 = v28;
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BFFB4A24(v25, 0x5374736568676968, 0xEC00000065726F63, v23);
    swift_bridgeObjectRelease();
  }
  return v22;
}

uint64_t PuzzleStatsInfo.init(statistics:)(uint64_t a1)
{
  uint64_t v82 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v82);
  uint64_t v4 = (char *)v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C032BB9C(0);
  MEMORY[0x1F4188790](v5 - 8);
  char v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)v61 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v80 = (char *)v61 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v61 - v14;
  uint64_t v81 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v81);
  uint64_t v83 = (void *)((char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v84 = (uint64_t)v61 - v18;
  uint64_t v86 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v86);
  uint64_t v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  char v23 = (char *)v61 - v22;
  uint64_t v24 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87[0] = MEMORY[0x1E4FBC868];
  if (a1) {
    uint64_t v29 = a1;
  }
  else {
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v50 = 0;
    uint64_t v49 = 0;
    char v51 = 1;
    uint64_t v45 = MEMORY[0x1E4FBC868];
    char v58 = 1;
    char v59 = 1;
    char v55 = 1;
    char v54 = 1;
    char v56 = 1;
    char v57 = 1;
    goto LABEL_27;
  }
  char v65 = v15;
  uint64_t v63 = v10;
  unint64_t v64 = v7;
  uint64_t v62 = v1;
  uint64_t v67 = 0;
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v78 = 0;
  uint64_t v79 = 0;
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  uint64_t v85 = &v28[*(int *)(v25 + 20)];
  unint64_t v31 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v61[1] = v29;
  uint64_t v32 = v29 + v31;
  uint64_t v33 = *(void *)(v26 + 72);
  int v66 = 1;
  int v68 = 1;
  int v69 = 1;
  int v72 = 1;
  int v73 = 1;
  int v70 = 1;
  int v71 = 1;
  uint64_t v34 = v80;
  do
  {
    uint64_t v36 = (uint64_t)v34;
    sub_1BFFD58F4(v32, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1BFFD58F4((uint64_t)v85, (uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
    sub_1BFDA74D8((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1BFFD58F4((uint64_t)v23, (uint64_t)v20, type metadata accessor for PuzzleStatisticCategory);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 2) < 2)
    {
      sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
      uint64_t v35 = (uint64_t)v20;
LABEL_7:
      sub_1BFDA74D8(v35, type metadata accessor for PuzzleStatisticCategory);
      uint64_t v34 = (char *)v36;
      goto LABEL_8;
    }
    if (EnumCaseMultiPayload)
    {
      sub_1C12484C0((uint64_t)v20, (uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      sub_1C1247BB4(v87, (uint64_t)v4, 0);
      uint64_t v39 = v82;
      sub_1C1247BB4(v87, (uint64_t)&v4[*(int *)(v82 + 20)], 1);
      sub_1C1247BB4(v87, (uint64_t)&v4[*(int *)(v39 + 24)], 2);
      sub_1BFDA74D8((uint64_t)v4, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      uint64_t v35 = (uint64_t)v23;
      goto LABEL_7;
    }
    uint64_t v38 = v84;
    sub_1C12484C0((uint64_t)v20, v84, type metadata accessor for PuzzleStatisticValue);
    sub_1BFFD58F4(v38, (uint64_t)v83, type metadata accessor for PuzzleStatisticValue);
    uint64_t v34 = (char *)v36;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
        sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
        int v71 = 0;
        uint64_t v77 = *v83;
        break;
      case 2u:
        sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
        sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
        uint64_t v78 = *v83;
        int v72 = *((unsigned __int8 *)v83 + 8);
        break;
      case 3u:
        sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
        sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
        uint64_t v79 = *v83;
        int v73 = *((unsigned __int8 *)v83 + 8);
        break;
      case 4u:
        uint64_t v40 = (uint64_t)v65;
        sub_1C12484C0((uint64_t)v83, (uint64_t)v65, (uint64_t (*)(void))sub_1C032BB9C);
        sub_1BFFD58F4(v40, v36, (uint64_t (*)(void))sub_1C032BB9C);
        uint64_t v41 = type metadata accessor for PuzzleStreak();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v36, 1, v41) == 1)
        {
          sub_1BFDA74D8(v40, (uint64_t (*)(void))sub_1C032BB9C);
          sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
          sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
          uint64_t v34 = (char *)v36;
          sub_1BFDA74D8(v36, (uint64_t (*)(void))sub_1C032BB9C);
          uint64_t v74 = 0;
          int v68 = 1;
        }
        else
        {
          uint64_t v34 = (char *)v36;
          uint64_t v74 = PuzzleStreak.days.getter();
          sub_1BFDA74D8(v40, (uint64_t (*)(void))sub_1C032BB9C);
          sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
          sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
          sub_1BFDA74D8(v36, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          int v68 = 0;
        }
        break;
      case 5u:
        uint64_t v42 = (uint64_t)v63;
        sub_1C12484C0((uint64_t)v83, (uint64_t)v63, (uint64_t (*)(void))sub_1C032BB9C);
        uint64_t v43 = (uint64_t)v64;
        sub_1BFFD58F4(v42, (uint64_t)v64, (uint64_t (*)(void))sub_1C032BB9C);
        uint64_t v44 = type metadata accessor for PuzzleStreak();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44) == 1)
        {
          sub_1BFDA74D8(v42, (uint64_t (*)(void))sub_1C032BB9C);
          sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
          sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
          sub_1BFDA74D8(v43, (uint64_t (*)(void))sub_1C032BB9C);
          uint64_t v75 = 0;
          int v69 = 1;
        }
        else
        {
          uint64_t v75 = PuzzleStreak.days.getter();
          sub_1BFDA74D8(v42, (uint64_t (*)(void))sub_1C032BB9C);
          sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
          sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
          sub_1BFDA74D8(v43, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
          int v69 = 0;
        }
        uint64_t v34 = v80;
        break;
      case 6u:
        sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
        sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
        uint64_t v67 = *v83;
        int v66 = *((unsigned __int8 *)v83 + 8);
        break;
      default:
        sub_1BFDA74D8(v84, type metadata accessor for PuzzleStatisticValue);
        sub_1BFDA74D8((uint64_t)v23, type metadata accessor for PuzzleStatisticCategory);
        uint64_t v76 = *v83;
        int v70 = *((unsigned __int8 *)v83 + 8);
        break;
    }
LABEL_8:
    v32 += v33;
    --v30;
  }
  while (v30);
  swift_bridgeObjectRelease();
  uint64_t v45 = v87[0];
  uint64_t v1 = v62;
  uint64_t v46 = v67;
  uint64_t v48 = v78;
  uint64_t v47 = v79;
  uint64_t v49 = v76;
  uint64_t v50 = v77;
  char v51 = v66;
  uint64_t v53 = v74;
  uint64_t v52 = v75;
  char v54 = v72;
  char v55 = v73;
  char v57 = v70;
  char v56 = v71;
  char v59 = v68;
  char v58 = v69;
LABEL_27:
  *(void *)(v1 + 16) = v49;
  *(unsigned char *)(v1 + 24) = v57 & 1;
  *(void *)(v1 + 32) = v50;
  *(unsigned char *)(v1 + 40) = v56 & 1;
  *(void *)(v1 + 48) = v48;
  *(unsigned char *)(v1 + 56) = v54 & 1;
  *(void *)(v1 + 64) = v47;
  *(unsigned char *)(v1 + 72) = v55 & 1;
  *(void *)(v1 + 80) = v53;
  *(unsigned char *)(v1 + 88) = v59 & 1;
  *(void *)(v1 + 96) = v52;
  *(unsigned char *)(v1 + 104) = v58 & 1;
  *(void *)(v1 + 112) = v46;
  *(unsigned char *)(v1 + 120) = v51 & 1;
  *(void *)(v1 + 128) = v45;
  return v1;
}

uint64_t sub_1C1247830()
{
  long long v1 = *(_OWORD *)(v0 + 96);
  long long v57 = *(_OWORD *)(v0 + 80);
  v58[0] = v1;
  *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)(v0 + 105);
  long long v2 = *(_OWORD *)(v0 + 32);
  long long v53 = *(_OWORD *)(v0 + 16);
  long long v54 = v2;
  long long v3 = *(_OWORD *)(v0 + 64);
  long long v55 = *(_OWORD *)(v0 + 48);
  long long v56 = v3;
  uint64_t v26 = sub_1C1246774();
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)(v0 + 128);
  do
  {
    int v6 = byte_1F1B6DAF0[v4 + 32];
    if (v6 == 1) {
      uint64_t v7 = 0x6574617265646F6DLL;
    }
    else {
      uint64_t v7 = 0x676E656C6C616863;
    }
    unint64_t v8 = 0xE800000000000000;
    if (v6 != 1) {
      unint64_t v8 = 0xEB00000000676E69;
    }
    if (byte_1F1B6DAF0[v4 + 32]) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 2037604709;
    }
    if (byte_1F1B6DAF0[v4 + 32]) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = 0xE400000000000000;
    }
    if (!*(void *)(v5 + 16)) {
      goto LABEL_2;
    }
    unint64_t v11 = sub_1BFEF2D8C(v9, v10);
    if ((v12 & 1) == 0) {
      goto LABEL_2;
    }
    uint64_t v13 = *(void *)(v5 + 56) + 112 * v11;
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v17 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    uint64_t v18 = *(void *)(v13 + 32);
    uint64_t v27 = *(void *)(v13 + 40);
    uint64_t v28 = *(void *)(v13 + 48);
    uint64_t v29 = *(void *)(v13 + 56);
    uint64_t v30 = *(void *)(v13 + 64);
    uint64_t v31 = *(void *)(v13 + 72);
    uint64_t v32 = *(void *)(v13 + 80);
    uint64_t v33 = *(void *)(v13 + 88);
    uint64_t v35 = *(void *)(v13 + 96);
    char v34 = *(unsigned char *)(v13 + 104);
    char v19 = *(unsigned char *)(v13 + 105);
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v39 = v15;
      char v40 = v14 & 1;
      uint64_t v41 = v17;
      char v42 = v16 & 1;
      uint64_t v43 = v18;
      char v44 = v27 & 1;
      uint64_t v45 = v28;
      char v46 = v29 & 1;
      uint64_t v47 = v30;
      char v48 = v31 & 1;
      uint64_t v49 = v32;
      char v50 = v33 & 1;
      uint64_t v51 = v35;
      char v52 = v34 & 1;
      uint64_t v20 = sub_1C1246774();
      if (*(void *)(v20 + 16))
      {
        if (v6)
        {
          if (v6 == 1)
          {
            uint64_t v21 = 0xE800000000000000;
            uint64_t v22 = 0x6574617265646F6DLL;
          }
          else
          {
            uint64_t v22 = 0x676E656C6C616863;
            uint64_t v21 = 0xEB00000000676E69;
          }
        }
        else
        {
          uint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 2037604709;
        }
        sub_1BFFB4FA4();
        uint64_t v38 = v23;
        *(void *)&long long v37 = v20;
        sub_1BFF993A8(&v37, v36);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1BFFB4A24(v36, v22, v21, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
LABEL_2:
      swift_bridgeObjectRelease();
    }
    ++v4;
  }
  while (v4 != 3);
  return v26;
}

uint64_t PuzzleStatsInfo.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PuzzleStatsInfo.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1247BB4(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v85 = 2037604709;
  sub_1C032BB9C(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v70 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v69 = (uint64_t)&v68 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v72 = (uint64_t)&v68 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v71 = (uint64_t)&v68 - v13;
  uint64_t v14 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = a2;
  if ((_BYTE)a3)
  {
    if (a3 == 1) {
      uint64_t v17 = 0x6574617265646F6DLL;
    }
    else {
      uint64_t v17 = 0x676E656C6C616863;
    }
    if (a3 == 1) {
      uint64_t v18 = 0xE800000000000000;
    }
    else {
      uint64_t v18 = 0xEB00000000676E69;
    }
  }
  else
  {
    uint64_t v18 = 0xE400000000000000;
    uint64_t v17 = 2037604709;
  }
  uint64_t v19 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v77 = 0;
    uint64_t v74 = 0;
    uint64_t v83 = 0;
    uint64_t v75 = 0;
    uint64_t v84 = 0;
    uint64_t v79 = 0;
    uint64_t v78 = 0;
    int v27 = 0;
    uint64_t v76 = 1;
    uint64_t v33 = &v89;
LABEL_14:
    *(v33 - 32) = 1;
    int v29 = 1;
    uint64_t v32 = 1;
    int v30 = 1;
    int v31 = 1;
    int v28 = 1;
    goto LABEL_15;
  }
  unint64_t v20 = sub_1BFEF2D8C(v17, v18);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v77 = 0;
    uint64_t v74 = 0;
    uint64_t v83 = 0;
    uint64_t v75 = 0;
    uint64_t v84 = 0;
    uint64_t v79 = 0;
    uint64_t v78 = 0;
    int v27 = 0;
    uint64_t v73 = 1;
    uint64_t v33 = &v90;
    goto LABEL_14;
  }
  uint64_t v22 = *(void *)(v19 + 56) + 112 * v20;
  uint64_t v77 = *(void *)v22;
  LODWORD(v76) = *(_DWORD *)(v22 + 8);
  uint64_t v74 = *(void *)(v22 + 16);
  uint64_t v81 = *(void *)(v22 + 24);
  uint64_t v83 = *(void *)(v22 + 32);
  int v82 = a3;
  a3 = *(_DWORD *)(v22 + 40);
  uint64_t v75 = *(void *)(v22 + 48);
  uint64_t v68 = *(void *)(v22 + 56);
  uint64_t v84 = *(void *)(v22 + 64);
  int v23 = *(_DWORD *)(v22 + 72);
  uint64_t v79 = *(void *)(v22 + 80);
  uint64_t v24 = a1;
  int v25 = *(_DWORD *)(v22 + 88);
  uint64_t v78 = *(void *)(v22 + 96);
  char v26 = *(unsigned char *)(v22 + 104);
  int v27 = *(unsigned __int8 *)(v22 + 105);
  swift_bridgeObjectRelease();
  int v28 = v26 & 1;
  v76 &= 1u;
  int v29 = a3 & 1;
  LOBYTE(a3) = v82;
  int v30 = v23 & 1;
  int v31 = v25 & 1;
  a1 = v24;
  uint64_t v73 = v81 & 1;
  uint64_t v32 = v68 & 1;
LABEL_15:
  sub_1BFFD58F4(v80, (uint64_t)v16, type metadata accessor for PuzzleStatisticValue);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v82 = v31;
  LODWORD(v81) = v28;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v43 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v42 = *(void *)v16;
      BOOL v41 = v27 == 0;
      if (v27) {
        uint64_t v40 = 0;
      }
      else {
        uint64_t v40 = v77;
      }
      unsigned int v35 = v27 | v76;
      goto LABEL_27;
    case 2:
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = *(void *)v16;
      int v46 = v16[8];
      int v47 = 1;
      int v48 = 1;
      int v49 = 1;
      goto LABEL_59;
    case 3:
      if (v27) {
        uint64_t v40 = 0;
      }
      else {
        uint64_t v40 = v77;
      }
      unsigned int v35 = v27 | v76;
      if (v27) {
        uint64_t v42 = 0;
      }
      else {
        uint64_t v42 = v74;
      }
      if (v27) {
        uint64_t v43 = 1;
      }
      else {
        uint64_t v43 = v73;
      }
      if (v16[8] == 1)
      {
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        if (v27) {
          uint64_t v45 = 1;
        }
        else {
          uint64_t v45 = v32;
        }
        if (v27) {
          uint64_t v44 = 0;
        }
        else {
          uint64_t v44 = v75;
        }
      }
      else
      {
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        uint64_t v45 = 0;
        uint64_t v44 = *(void *)v16;
      }
      goto LABEL_72;
    case 4:
      uint64_t v50 = (uint64_t)v16;
      uint64_t v51 = v71;
      sub_1C12484C0(v50, v71, (uint64_t (*)(void))sub_1C032BB9C);
      uint64_t v52 = v72;
      sub_1BFFD58F4(v51, v72, (uint64_t (*)(void))sub_1C032BB9C);
      uint64_t v53 = type metadata accessor for PuzzleStreak();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53) == 1) {
        goto LABEL_53;
      }
      uint64_t v38 = PuzzleStreak.days.getter();
      sub_1BFDA74D8(v51, (uint64_t (*)(void))sub_1C032BB9C);
      sub_1BFDA74D8(v52, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      int v49 = 0;
      uint64_t v39 = 0;
      int v47 = 1;
      int v48 = 1;
      goto LABEL_58;
    case 5:
      uint64_t v54 = (uint64_t)v16;
      uint64_t v51 = v69;
      sub_1C12484C0(v54, v69, (uint64_t (*)(void))sub_1C032BB9C);
      uint64_t v52 = v70;
      sub_1BFFD58F4(v51, v70, (uint64_t (*)(void))sub_1C032BB9C);
      uint64_t v55 = type metadata accessor for PuzzleStreak();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v52, 1, v55) == 1)
      {
LABEL_53:
        sub_1BFDA74D8(v51, (uint64_t (*)(void))sub_1C032BB9C);
        sub_1BFDA74D8(v52, (uint64_t (*)(void))sub_1C032BB9C);
LABEL_54:
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        int v47 = 1;
LABEL_56:
        int v48 = 1;
      }
      else
      {
        uint64_t v37 = PuzzleStreak.days.getter();
        sub_1BFDA74D8(v51, (uint64_t (*)(void))sub_1C032BB9C);
        sub_1BFDA74D8(v52, (uint64_t (*)(void))type metadata accessor for PuzzleStreak);
        uint64_t v36 = 0;
        int v48 = 0;
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        int v47 = 1;
      }
      int v49 = 1;
LABEL_58:
      int v46 = 1;
LABEL_59:
      uint64_t v56 = v79;
      uint64_t v57 = v78;
      uint64_t v44 = v75;
      uint64_t v42 = v74;
      uint64_t v40 = v77;
      if (v27) {
        uint64_t v40 = 0;
      }
      unsigned int v35 = v27 | v76;
      if (v27)
      {
        uint64_t v42 = 0;
        uint64_t v43 = 1;
      }
      else
      {
        uint64_t v43 = v73;
      }
      if (v27)
      {
        uint64_t v44 = 0;
        uint64_t v45 = 1;
      }
      else
      {
        uint64_t v45 = v32;
      }
      int v58 = a3;
      if ((_BYTE)a3) {
        goto LABEL_68;
      }
      goto LABEL_73;
    case 6:
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v36 = *(void *)v16;
      int v47 = v16[8];
      goto LABEL_56;
    default:
      if (v16[8]) {
        goto LABEL_54;
      }
      unsigned int v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = *(void *)v16;
      BOOL v41 = v27 == 0;
      if (v27) {
        uint64_t v42 = 0;
      }
      else {
        uint64_t v42 = v74;
      }
      if (v27) {
        uint64_t v43 = 1;
      }
      else {
        uint64_t v43 = v73;
      }
LABEL_27:
      if (v41) {
        uint64_t v44 = v75;
      }
      else {
        uint64_t v44 = 0;
      }
      if (v41) {
        uint64_t v45 = v32;
      }
      else {
        uint64_t v45 = 1;
      }
LABEL_72:
      int v47 = 1;
      int v48 = 1;
      int v49 = 1;
      int v46 = 1;
      uint64_t v56 = v79;
      uint64_t v57 = v78;
      int v58 = a3;
      if ((_BYTE)a3)
      {
LABEL_68:
        if (v58 == 1)
        {
          uint64_t v59 = 0xE800000000000000;
          uint64_t v85 = 0x6574617265646F6DLL;
        }
        else
        {
          uint64_t v85 = 0x676E656C6C616863;
          uint64_t v59 = 0xEB00000000676E69;
        }
      }
      else
      {
LABEL_73:
        uint64_t v59 = 0xE400000000000000;
      }
      v87[0] = v40;
      v87[1] = v35;
      if (v27) {
        uint64_t v60 = 0;
      }
      else {
        uint64_t v60 = v57;
      }
      if (v27) {
        uint64_t v61 = 0;
      }
      else {
        uint64_t v61 = v56;
      }
      uint64_t v63 = v83;
      uint64_t v62 = v84;
      if (v27)
      {
        uint64_t v62 = 0;
        uint64_t v63 = 0;
      }
      uint64_t v87[2] = v42;
      v87[3] = v43;
      if (v47) {
        uint64_t v36 = v60;
      }
      if (v48) {
        uint64_t v64 = v61;
      }
      else {
        uint64_t v64 = v37;
      }
      if (v49) {
        uint64_t v65 = v62;
      }
      else {
        uint64_t v65 = v38;
      }
      if (v46) {
        uint64_t v39 = v63;
      }
      v87[4] = v39;
      v87[5] = v46 & (v27 | v29);
      v87[6] = v44;
      v87[7] = v45;
      v87[8] = v65;
      v87[9] = v49 & (v27 | v30);
      v87[10] = v64;
      v87[11] = v48 & (v27 | v82);
      v87[12] = v36;
      __int16 v88 = (v47 & (v27 | v81));
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v86 = *a1;
      *a1 = 0x8000000000000000;
      sub_1C1066C24((uint64_t)v87, v85, v59, isUniquelyReferenced_nonNull_native);
      *a1 = v86;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C12484C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PuzzleStatsInfo()
{
  return self;
}

uint64_t method lookup function for PuzzleStatsInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleStatsInfo);
}

uint64_t dispatch thunk of PuzzleStatsInfo.__allocating_init(statistics:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t getEnumTagSinglePayload for PuzzleStatsInfo.StatValue(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 105)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleStatsInfo.StatValue(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 105) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleStatsInfo.StatValue()
{
  return &type metadata for PuzzleStatsInfo.StatValue;
}

BOOL static FeedRequestType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedRequestType.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedRequestType.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t FeedRequestType.identifier.getter()
{
  if (*v0) {
    return 7368564;
  }
  else {
    return 0x746E65636572;
  }
}

unint64_t sub_1C12486B0()
{
  unint64_t result = qword_1EA1AD4A8;
  if (!qword_1EA1AD4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD4A8);
  }
  return result;
}

uint64_t sub_1C1248704()
{
  if (*v0) {
    return 7368564;
  }
  else {
    return 0x746E65636572;
  }
}

unsigned char *storeEnumTagSinglePayload for FeedRequestType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1248800);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedRequestType()
{
  return &type metadata for FeedRequestType;
}

void sub_1C1248838(uint64_t a1)
{
  if (*(void *)&v1[qword_1EB86F060] == a1)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v26 = a1;
      int v27 = v1;
      unsigned int v4 = *(char **)&v1[qword_1EB86F058];
      uint64_t v5 = &v4[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms];
      uint64_t v6 = v2 + 32;
      swift_bridgeObjectRetain();
      uint64_t v7 = v3 - 1;
      uint64_t v8 = &selRef_setSpacing_;
      while (1)
      {
        sub_1C01995F4(v6, (uint64_t)v28);
        sub_1C01995F4((uint64_t)v28, (uint64_t)v29);
        int v9 = sub_1C0BA14F4((uint64_t)v29);
        uint64_t v10 = (id *)sub_1C0BA1500((uint64_t)v29);
        if (v9 == 1)
        {
          uint64_t v11 = (unint64_t *)&unk_1EB86F000;
          uint64_t v12 = (unint64_t *)&unk_1EB85C8E8;
          uint64_t v13 = (unint64_t *)&qword_1EB85DFA8;
        }
        else
        {
          uint64_t v11 = (unint64_t *)&unk_1EA1A4428;
          uint64_t v12 = (unint64_t *)&unk_1EB85C8E0;
          uint64_t v13 = (unint64_t *)&unk_1EB85DF90;
        }
        uint64_t v14 = sub_1C0BA1570(v11, v12, v13);
        id v15 = *v10;
        swift_getObjectType();
        sub_1C124B220((uint64_t)v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C124B188);
        if (sub_1C151B25C())
        {
          sub_1C151B27C();
          sub_1C151B26C();
          swift_beginAccess();
          uint64_t v16 = *(void **)v5;
          id v17 = v15;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v5 = v16;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v16 = sub_1C0EDFB5C(0, v16[2] + 1, 1, v16);
            *(void *)uint64_t v5 = v16;
          }
          unint64_t v20 = v16[2];
          unint64_t v19 = v16[3];
          if (v20 >= v19 >> 1)
          {
            uint64_t v16 = sub_1C0EDFB5C((void *)(v19 > 1), v20 + 1, 1, v16);
            *(void *)uint64_t v5 = v16;
          }
          v16[2] = v20 + 1;
          char v21 = &v16[2 * v20];
          v21[4] = v17;
          v21[5] = v14;
          swift_endAccess();
          uint64_t v8 = &selRef_setSpacing_;
        }
        objc_msgSend(v4, v8[293], v15);

        sub_1C124B220((uint64_t)v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C124B28C);
        if (!v7) {
          break;
        }
        --v7;
        v6 += 144;
      }
      swift_bridgeObjectRelease();
      a1 = v26;
      long long v1 = v27;
    }
    if (*(void *)(*(void *)(a1 + 40) + 16))
    {
      uint64_t v22 = *(void **)&v1[qword_1EB86F058];
      int v23 = v1;
      uint64_t v24 = swift_bridgeObjectRetain();
      sub_1C124AE08(v24, v23);
      swift_bridgeObjectRelease();

      int v25 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setFilters_, v25);
    }
    sub_1C1249268();
  }
}

char *sub_1C1248B48(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = qword_1EB870530;
  type metadata accessor for LayeredMediaViewDisplayStateCoordinator();
  swift_allocObject();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = LayeredMediaViewDisplayStateCoordinator.init()();
  uint64_t v6 = qword_1EB86F058;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LayeredMediaContainerLayer(0)), sel_init);
  *(void *)&v5[qword_1EB86F060] = a1;
  swift_retain();

  v17.receiver = v5;
  v17.super_class = ObjectType;
  uint64_t v7 = (char *)objc_msgSendSuper2(&v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = *(void **)&v7[qword_1EB86F058];
  sub_1C124B100(&qword_1EB86F188, (void (*)(uint64_t))type metadata accessor for LayeredMediaContainerLayer);
  int v9 = v7;
  id v10 = v8;
  sub_1C151B22C();

  uint64_t v11 = *(void *)&v9[qword_1EB870530];
  swift_beginAccess();
  char v12 = *(unsigned char *)(v11 + 16);
  *(unsigned char *)(v11 + 16) = 0;
  if (v12) {
    *(_WORD *)(v11 + 56) = 2;
  }
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t v14 = *(void *)(v11 + 24);
  *(void *)(v11 + 24) = sub_1C124B180;
  *(void *)(v11 + 32) = v13;
  id v15 = v9;
  swift_retain();
  swift_retain();
  sub_1BFC3E5C0(v14);
  swift_release();
  swift_release();

  swift_release();
  return v15;
}

void sub_1C1248D58(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = a1[1];
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = (char *)MEMORY[0x1C18C9C60](v4);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(*(void *)&v5[qword_1EB86F060] + 32);
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      uint64_t v9 = v7 + 32;
      char v10 = v2 ^ 1 | v3;
      swift_bridgeObjectRetain();
      for (uint64_t i = v8 - 1; ; --i)
      {
        sub_1C01995F4(v9, (uint64_t)v15);
        sub_1C01995F4((uint64_t)v15, (uint64_t)v16);
        int v12 = sub_1C0BA14F4((uint64_t)v16);
        uint64_t v13 = sub_1C0BA1500((uint64_t)v16);
        if (v12 != 1) {
          goto LABEL_7;
        }
        uint64_t v14 = *(void **)(v13 + 8);
        if (v10) {
          break;
        }
        objc_msgSend(v14, sel_playWithPlaybackKind_looping_, 0, 1);
        if (!i)
        {
LABEL_10:

          swift_bridgeObjectRelease();
          return;
        }
LABEL_8:
        v9 += 144;
      }
      objc_msgSend(v14, sel_pause);
LABEL_7:
      if (!i) {
        goto LABEL_10;
      }
      goto LABEL_8;
    }
  }
}

void sub_1C1248E80(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_1EB870530;
  type metadata accessor for LayeredMediaViewDisplayStateCoordinator();
  swift_allocObject();
  id v6 = a3;
  *(void *)&a1[v5] = LayeredMediaViewDisplayStateCoordinator.init()();
  uint64_t v7 = qword_1EB86F058;
  *(void *)&a1[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LayeredMediaContainerLayer(0)), sel_init);

  sub_1C152040C();
  __break(1u);
}

Swift::Void __swiftcall LayeredMediaView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, isa);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  LODWORD(isa) = objc_msgSend(v3, sel_hasDifferentColorAppearanceComparedToTraitCollection_, isa);

  if (isa)
  {
    if (*(void *)(*(void *)(*(void *)&v1[qword_1EB86F060] + 40) + 16))
    {
      uint64_t v4 = *(void **)&v1[qword_1EB86F058];
      uint64_t v5 = v1;
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_1C124AE08(v6, v5);
      swift_bridgeObjectRelease();

      uint64_t v7 = (void *)sub_1C151EBAC();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setFilters_, v7);
    }
  }
}

void sub_1C1249058()
{
  if (*(void *)(*(void *)(*(void *)&v0[qword_1EB86F060] + 40) + 16))
  {
    long long v1 = *(void **)&v0[qword_1EB86F058];
    char v2 = v0;
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1C124AE08(v3, v2);
    swift_bridgeObjectRelease();

    uint64_t v4 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setFilters_, v4);
  }
}

void sub_1C1249110(void *a1, uint64_t a2, void *a3)
{
  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  id v4 = a3;
  id v5 = v8.receiver;
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, v4);
  id v6 = objc_msgSend(v5, sel_traitCollection, v8.receiver, v8.super_class);
  unsigned int v7 = objc_msgSend(v6, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v4);

  if (v7) {
    sub_1C1249058();
  }
}

Swift::Void __swiftcall LayeredMediaView.didMoveToWindow()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_didMoveToWindow);
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
}

void sub_1C1249208(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_didMoveToWindow);
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
}

void sub_1C1249268()
{
  objc_msgSend(v0, sel_setNeedsLayout);
  id v1 = objc_msgSend(v0, sel_sublayers);
  if (!v1) {
    return;
  }
  objc_super v2 = v1;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2D0);
  unint64_t v3 = sub_1C151EBCC();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x1C18C7CB0](i, v3);
        }
        else {
          id v6 = *(id *)(v3 + 8 * i + 32);
        }
        unsigned int v7 = v6;
        sub_1C1249268();
      }
    }
  }
  swift_bridgeObjectRelease();
}

id LayeredMediaView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void LayeredMediaView.init(frame:)()
{
}

void sub_1C124943C()
{
}

void sub_1C124946C()
{
  swift_release();
  swift_release();
  id v1 = *(void **)(v0 + qword_1EB86F058);
}

void sub_1C12494C0(uint64_t a1)
{
  swift_release();
  swift_release();
  objc_super v2 = *(void **)(a1 + qword_1EB86F058);
}

uint64_t LayeredMediaView.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + qword_1EB86F060) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1249558()
{
  uint64_t v1 = *(void *)(*(void *)(*v0 + qword_1EB86F060) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1249598(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151A93C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v20 - v9;
  uint64_t v11 = v2 + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform;
  swift_beginAccess();
  int v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, v11, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v11, a1, v4);
  swift_endAccess();
  v12(v7, v11, v4);
  sub_1C124B100(&qword_1EA1AD4C0, MEMORY[0x1E4FAC0D0]);
  int v25 = v10;
  LOBYTE(v10) = sub_1C151E5CC();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v13 = v5 + 8;
  uint64_t v24 = v14;
  v14(v7, v4);
  if ((v10 & 1) == 0)
  {
    uint64_t v15 = v2
        + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
    swift_beginAccess();
    uint64_t v16 = *(void *)(*(void *)v15 + 16);
    if (v16)
    {
      uint64_t v22 = v13;
      int v23 = a1;
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v17 = v21 + 40;
      do
      {
        swift_getObjectType();
        v12(v7, v11, v4);
        swift_unknownObjectRetain();
        sub_1C151B28C();
        swift_unknownObjectRelease();
        v17 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      a1 = v23;
    }
  }
  uint64_t v18 = v24;
  v24(a1, v4);
  return v18(v25, v4);
}

void (*sub_1C124984C(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0xD0uLL);
  *a1 = v3;
  v3[15] = v1;
  uint64_t v4 = sub_1C151A93C();
  v3[16] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[17] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[18] = malloc(v7);
  v3[19] = malloc(v7);
  v3[20] = malloc(v7);
  v3[21] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform;
  v3[22] = v8;
  v3[23] = v9;
  uint64_t v10 = v1 + v9;
  swift_beginAccess();
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[24] = v11;
  v3[25] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v4);
  return sub_1C124998C;
}

void sub_1C124998C(uint64_t a1, char a2)
{
}

uint64_t sub_1C12499D4(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151B9CC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  size_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = v2
      + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform;
  swift_beginAccess();
  int v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, v11, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v11, a1, v4);
  swift_endAccess();
  v12(v7, v11, v4);
  sub_1C124B100(&qword_1EA1AD4B8, MEMORY[0x1E4FACA88]);
  int v25 = v10;
  LOBYTE(v10) = sub_1C151E5CC();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v13 = v5 + 8;
  uint64_t v24 = v14;
  v14(v7, v4);
  if ((v10 & 1) == 0)
  {
    uint64_t v15 = v2
        + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
    swift_beginAccess();
    uint64_t v16 = *(void *)(*(void *)v15 + 16);
    if (v16)
    {
      uint64_t v22 = v13;
      int v23 = a1;
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v17 = v21 + 40;
      do
      {
        swift_getObjectType();
        v12(v7, v11, v4);
        swift_unknownObjectRetain();
        sub_1C151B29C();
        swift_unknownObjectRelease();
        v17 += 16;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      a1 = v23;
    }
  }
  uint64_t v18 = v24;
  v24(a1, v4);
  return v18(v25, v4);
}

void (*sub_1C1249C88(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0xD0uLL);
  *a1 = v3;
  v3[15] = v1;
  uint64_t v4 = sub_1C151B9CC();
  v3[16] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[17] = v5;
  size_t v7 = *(void *)(v5 + 64);
  v3[18] = malloc(v7);
  v3[19] = malloc(v7);
  v3[20] = malloc(v7);
  v3[21] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform;
  v3[22] = v8;
  v3[23] = v9;
  uint64_t v10 = v1 + v9;
  swift_beginAccess();
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 16);
  v3[24] = v11;
  v3[25] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v8, v10, v4);
  return sub_1C1249DC8;
}

void sub_1C1249DC8(uint64_t a1, char a2)
{
}

void sub_1C1249E10(uint64_t a1, char a2, unint64_t *a3, void (*a4)(uint64_t), uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 192);
  uint64_t v8 = *(void *)(*(void *)a1 + 176);
  uint64_t v7 = *(void *)(*(void *)a1 + 184);
  uint64_t v57 = *(void **)a1;
  if (a2)
  {
    uint64_t v9 = *(void *)(*(void *)a1 + 160);
    uint64_t v10 = v57[19];
    uint64_t v11 = v57[18];
    uint64_t v12 = v57[17];
    uint64_t v13 = v57[16];
    uint64_t v14 = v57[15] + v7;
    v6(v10, *(void *)(*(void *)a1 + 176), v13);
    v6(v11, v14, v13);
    swift_beginAccess();
    uint64_t v16 = v10;
    uint64_t v17 = v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v14, v16, v13);
    swift_endAccess();
    v6(v9, v14, v13);
    sub_1C124B100(a3, a4);
    char v18 = sub_1C151E5CC();
    unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v19(v9, v13);
    if ((v18 & 1) == 0)
    {
      uint64_t v20 = v57[15]
          + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
      swift_beginAccess();
      uint64_t v21 = *(void *)(*(void *)v20 + 16);
      if (v21)
      {
        uint64_t v53 = v19;
        uint64_t v22 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
        do
        {
          int v23 = (void (*)(uint64_t, uint64_t, uint64_t))v17[24];
          uint64_t v24 = v17[20];
          uint64_t v25 = v17[16];
          uint64_t v26 = v17[15] + v17[23];
          uint64_t v27 = *v22;
          uint64_t ObjectType = swift_getObjectType();
          v23(v24, v26, v25);
          swift_unknownObjectRetain();
          uint64_t v29 = ObjectType;
          uint64_t v17 = v57;
          a6(v24, v29, v27);
          swift_unknownObjectRelease();
          v22 += 2;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        unint64_t v19 = v53;
      }
    }
    int v31 = (void *)v17[21];
    int v30 = (void *)v17[22];
    uint64_t v33 = (void *)v17[19];
    uint64_t v32 = (void *)v17[20];
    char v34 = (void *)v17[18];
    uint64_t v35 = v17[16];
    v19((uint64_t)v33, v35);
    v19((uint64_t)v34, v35);
    uint64_t v36 = (uint64_t)v30;
  }
  else
  {
    uint64_t v37 = v57[20];
    uint64_t v38 = v57[17];
    uint64_t v39 = v57[16];
    uint64_t v40 = v57[15] + v7;
    v6(v57[21], v40, v39);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 24))(v40, v8, v39);
    uint64_t v17 = v57;
    swift_endAccess();
    v6(v37, v40, v39);
    sub_1C124B100(a3, a4);
    LOBYTE(v40) = sub_1C151E5CC();
    unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v19(v37, v39);
    if ((v40 & 1) == 0)
    {
      uint64_t v42 = v57[15]
          + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
      swift_beginAccess();
      uint64_t v43 = *(void *)(*(void *)v42 + 16);
      if (v43)
      {
        uint64_t v55 = v19;
        uint64_t v44 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
        do
        {
          uint64_t v45 = (void (*)(uint64_t, uint64_t, uint64_t))v17[24];
          uint64_t v46 = v17[20];
          uint64_t v47 = v17[16];
          uint64_t v48 = v17[15] + v17[23];
          uint64_t v49 = *v44;
          uint64_t v50 = swift_getObjectType();
          v45(v46, v48, v47);
          swift_unknownObjectRetain();
          uint64_t v51 = v50;
          uint64_t v17 = v57;
          a6(v46, v51, v49);
          swift_unknownObjectRelease();
          v44 += 2;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        unint64_t v19 = v55;
      }
    }
    int v31 = (void *)v17[21];
    int v30 = (void *)v17[22];
    uint64_t v33 = (void *)v17[19];
    uint64_t v32 = (void *)v17[20];
    char v34 = (void *)v17[18];
    uint64_t v35 = v17[16];
    v19((uint64_t)v30, v35);
    uint64_t v36 = (uint64_t)v31;
  }
  v19(v36, v35);
  free(v30);
  free(v31);
  free(v32);
  free(v33);
  free(v34);
  free(v17);
}

void (*sub_1C124A260(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled;
  v3[6] = v1;
  v3[7] = v4;
  *((unsigned char *)v3 + 64) = *(unsigned char *)(v1 + v4);
  return sub_1C124A2BC;
}

void sub_1C124A2BC(uint64_t a1, char a2)
{
}

uint64_t sub_1C124A2D4(uint64_t result, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *a2;
  int v5 = *(unsigned __int8 *)(v3 + *a2);
  *(unsigned char *)(v3 + *a2) = result;
  if (v5 != (result & 1))
  {
    uint64_t v7 = v3;
    uint64_t v8 = (uint64_t *)(v3
                   + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms);
    unint64_t result = swift_beginAccess();
    uint64_t v9 = *v8;
    uint64_t v10 = *(void *)(*v8 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = (uint64_t *)(v9 + 40);
      do
      {
        uint64_t v12 = *v11;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v14 = *(unsigned __int8 *)(v7 + v4);
        swift_unknownObjectRetain();
        a3(v14, ObjectType, v12);
        swift_unknownObjectRelease();
        v11 += 2;
        --v10;
      }
      while (v10);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void (*sub_1C124A3BC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed;
  v3[6] = v1;
  v3[7] = v4;
  *((unsigned char *)v3 + 64) = *(unsigned char *)(v1 + v4);
  return sub_1C124A418;
}

void sub_1C124A418(uint64_t a1, char a2)
{
}

void sub_1C124A430(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(*(void *)a1 + 48);
  uint64_t v5 = *(void *)(*(void *)a1 + 56);
  unsigned __int8 v7 = *(unsigned char *)(*(void *)a1 + 64);
  unsigned __int8 v8 = *(unsigned char *)(v6 + v5);
  *(unsigned char *)(v6 + v5) = v7;
  if (a2)
  {
    if ((v7 ^ v8))
    {
      uint64_t v9 = v4[6]
         + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
      swift_beginAccess();
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(*(void *)v9 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = (uint64_t *)(v10 + 40);
        do
        {
          uint64_t v14 = v4[6];
          uint64_t v13 = v4[7];
          uint64_t v15 = *v12;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v17 = *(unsigned __int8 *)(v14 + v13);
          swift_unknownObjectRetain();
          a3(v17, ObjectType, v15);
          swift_unknownObjectRelease();
          v12 += 2;
          --v11;
        }
        while (v11);
LABEL_11:
        swift_bridgeObjectRelease();
      }
    }
  }
  else if ((v7 ^ v8))
  {
    uint64_t v18 = v4[6]
        + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms;
    swift_beginAccess();
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(*(void *)v18 + 16);
    if (v20)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = (uint64_t *)(v19 + 40);
      do
      {
        uint64_t v23 = v4[6];
        uint64_t v22 = v4[7];
        uint64_t v24 = *v21;
        uint64_t v25 = swift_getObjectType();
        uint64_t v26 = *(unsigned __int8 *)(v23 + v22);
        swift_unknownObjectRetain();
        a3(v26, v25, v24);
        swift_unknownObjectRelease();
        v21 += 2;
        --v20;
      }
      while (v20);
      goto LABEL_11;
    }
  }
  free(v4);
}

uint64_t sub_1C124A5C0()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1C151B2AC();
      swift_unknownObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C124A918(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransforms] = MEMORY[0x1E4FBC860];
  uint64_t v4 = &v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform];
  uint64_t v5 = *MEMORY[0x1E4FAC0B8];
  uint64_t v6 = sub_1C151A93C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  unsigned __int8 v7 = &v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform];
  uint64_t v8 = *MEMORY[0x1E4FACA78];
  uint64_t v9 = sub_1C151B9CC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled] = 1;
  v1[OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed] = 1;
  v12.receiver = v1;
  v12.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

uint64_t sub_1C124AB44@<X0>(uint64_t a1@<X8>)
{
  return sub_1C124ABE0(&OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionTransform, MEMORY[0x1E4FAC0D0], a1);
}

void (*sub_1C124AB68(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C124984C(v2);
  return sub_1C04923A0;
}

uint64_t sub_1C124ABC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C124ABE0(&OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_motionDisabledTransform, MEMORY[0x1E4FACA88], a1);
}

uint64_t sub_1C124ABE0@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  uint64_t v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

void (*sub_1C124AC74(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C1249C88(v2);
  return sub_1C04923A0;
}

uint64_t sub_1C124ACCC()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled);
}

uint64_t sub_1C124ACDC(uint64_t a1)
{
  return sub_1C124A2D4(a1, &OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionEnabled, MEMORY[0x1E4FAC570]);
}

void (*sub_1C124AD10(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C124A260(v2);
  return sub_1C04923A0;
}

uint64_t sub_1C124AD68()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed);
}

uint64_t sub_1C124AD78(uint64_t a1)
{
  return sub_1C124A2D4(a1, &OBJC_IVAR____TtC8NewsFeedP33_F669C03278D43A4B0F24735E6C90190F26LayeredMediaContainerLayer_isMotionAllowed, MEMORY[0x1E4FAC568]);
}

void (*sub_1C124ADAC(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C124A3BC(v2);
  return sub_1C04923A0;
}

uint64_t sub_1C124AE08(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1BFD431D4(0, v2, 0);
    uint64_t v3 = v15;
    uint64_t v6 = a1 + 40;
    do
    {
      uint64_t v7 = *(uint64_t (**)(void))(v6 - 8);
      swift_retain();
      id v8 = objc_msgSend(a2, sel_traitCollection);
      uint64_t v9 = v7();

      uint64_t v14 = sub_1BFC39268(0, &qword_1EA1AD4C8);
      swift_release();
      *(void *)&long long v13 = v9;
      uint64_t v15 = v3;
      unint64_t v11 = *(void *)(v3 + 16);
      unint64_t v10 = *(void *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BFD431D4(v10 > 1, v11 + 1, 1);
        uint64_t v3 = v15;
      }
      *(void *)(v3 + 16) = v11 + 1;
      sub_1BFF993A8(&v13, (_OWORD *)(v3 + 32 * v11 + 32));
      v6 += 16;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t type metadata accessor for LayeredMediaView(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB85D190);
}

uint64_t sub_1C124AF70()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LayeredMediaView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaView);
}

uint64_t sub_1C124AFE8()
{
  return type metadata accessor for LayeredMediaView(0);
}

uint64_t sub_1C124AFF0()
{
  return type metadata accessor for LayeredMediaContainerLayer(0);
}

uint64_t type metadata accessor for LayeredMediaContainerLayer(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB86F190);
}

uint64_t sub_1C124B018()
{
  uint64_t result = sub_1C151A93C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151B9CC();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C124B100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C124B148()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C124B180(char *a1)
{
  sub_1C1248D58(a1, v1);
}

uint64_t sub_1C124B188(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  swift_bridgeObjectRetain();
  id v20 = a1;
  id v21 = a2;
  if (a18 < 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C124B220(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_1C124B28C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  swift_bridgeObjectRelease();
  if (a18 < 0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ViewAutomation.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ViewAutomation.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ViewAutomation.init(data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_1C151A4BC();
  a3[1] = v6;
  uint64_t v7 = (char *)a3 + *(int *)(type metadata accessor for ViewAutomation() + 36);
  id v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v8(v7, a1, a2);
}

uint64_t ViewAutomation.automationType.getter()
{
  return 2003134838;
}

uint64_t sub_1C124B428(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C124B47C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t ViewAutomation.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v11[0] = *(void *)(a2 + 24);
  v11[1] = v4;
  type metadata accessor for ViewAutomation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152083C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C15207CC();
  if (!v9)
  {
    char v12 = 1;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for ViewAutomation.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ViewAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v21 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ViewAutomation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v26 = sub_1C152072C();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v25 = a3;
  uint64_t v10 = type metadata accessor for ViewAutomation();
  uint64_t v20 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v12 = (uint64_t *)((char *)&v20 - v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v27;
  sub_1C1520EBC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v27 = v10;
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  char v29 = 0;
  *char v12 = sub_1C152069C();
  v12[1] = v16;
  char v28 = 1;
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v26);
  uint64_t v17 = v27;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v12 + *(int *)(v27 + 36), v15, a2);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v20 + 16))(v22, v12, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v12, v17);
}

uint64_t sub_1C124BA04()
{
  return 2003134838;
}

uint64_t sub_1C124BA14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ViewAutomation.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C124BA34(void *a1, uint64_t a2)
{
  return ViewAutomation.encode(to:)(a1, a2);
}

uint64_t BasicViewAutomation.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

NewsFeed::BasicViewAutomation __swiftcall BasicViewAutomation.init(type:)(NewsFeed::BasicViewAutomation type)
{
  *uint64_t v1 = type;
  return type;
}

uint64_t BasicViewAutomation.automationType.getter()
{
  return 2003134838;
}

uint64_t sub_1C124BA94(uint64_t a1)
{
  unint64_t v2 = sub_1C124BC58();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C124BAD0(uint64_t a1)
{
  unint64_t v2 = sub_1C124BC58();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t BasicViewAutomation.encode(to:)(void *a1)
{
  sub_1C124BE30(0, &qword_1EA1AD4D0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C124BC58();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C124BC58()
{
  unint64_t result = qword_1EA1AD4D8;
  if (!qword_1EA1AD4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD4D8);
  }
  return result;
}

uint64_t BasicViewAutomation.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C124BE30(0, qword_1EA1AD4E0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C124BC58();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = sub_1C152069C();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C124BE30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C124BC58();
    unint64_t v7 = a3(a1, &type metadata for BasicViewAutomation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C124BE98()
{
  unint64_t result = qword_1EB86BD50;
  if (!qword_1EB86BD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD50);
  }
  return result;
}

unint64_t sub_1C124BEF0()
{
  unint64_t result = qword_1EB86BD48;
  if (!qword_1EB86BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD48);
  }
  return result;
}

uint64_t sub_1C124BF44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return BasicViewAutomation.init(from:)(a1, a2);
}

uint64_t sub_1C124BF5C(void *a1)
{
  sub_1C124BE30(0, &qword_1EA1AD4D0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C124BC58();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C124C0A8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1C124C248(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C124C4A8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for BasicViewAutomation()
{
  return &type metadata for BasicViewAutomation;
}

unsigned char *storeEnumTagSinglePayload for BasicViewAutomation.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C124C57CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicViewAutomation.CodingKeys()
{
  return &type metadata for BasicViewAutomation.CodingKeys;
}

unsigned char *sub_1C124C5B4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C124C680);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C124C6A8()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C124C6C8()
{
  unint64_t result = qword_1EA1AD568;
  if (!qword_1EA1AD568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD568);
  }
  return result;
}

unint64_t sub_1C124C720()
{
  unint64_t result = qword_1EA1AD570;
  if (!qword_1EA1AD570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD570);
  }
  return result;
}

unint64_t sub_1C124C778()
{
  unint64_t result = qword_1EA1AD578;
  if (!qword_1EA1AD578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD578);
  }
  return result;
}

uint64_t sub_1C124C7CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C124C7E8()
{
  return swift_getWitnessTable();
}

uint64_t FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  int v26 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  unsigned int v4 = (void *)*v3;
  int v31 = v4;
  uint64_t v5 = sub_1C151D46C();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v27 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v4[10];
  MEMORY[0x1F4188790](v6);
  char v28 = &v25[-v9];
  uint64_t v10 = v4[11];
  uint64_t v11 = v4[14];
  uint64_t v12 = v4[15];
  *(void *)&long long v34 = v8;
  *((void *)&v34 + 1) = v10;
  *(void *)&long long v35 = v11;
  *((void *)&v35 + 1) = v12;
  uint64_t v13 = sub_1C151AA8C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unsigned int v16 = &v25[-v15];
  sub_1C151676C();
  *(void *)&long long v34 = v8;
  *((void *)&v34 + 1) = v10;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  *(void *)&long long v35 = v11;
  *((void *)&v35 + 1) = v12;
  sub_1C151CC9C();
  sub_1C151CCCC();
  sub_1C151AA1C();
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1BFC845BC(0, &qword_1EB872EA8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(&v34, (uint64_t)v39);
    uint64_t v17 = v40;
    uint64_t v18 = v41;
    __swift_project_boxed_opaque_existential_1(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    sub_1BFF93740(v33, 2, (v26 & 1) == 0);
    uint64_t v19 = v40;
    uint64_t v20 = v41;
    __swift_project_boxed_opaque_existential_1(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
    uint64_t v21 = v40;
    uint64_t v22 = v41;
    __swift_project_boxed_opaque_existential_1(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
    sub_1C151D47C();
    sub_1C151D4AC();
    *(void *)&long long v34 = v8;
    *((void *)&v34 + 1) = v29;
    long long v35 = *((_OWORD *)v31 + 6);
    uint64_t v36 = v30;
    uint64_t v37 = v12;
    long long v38 = *((_OWORD *)v31 + 8);
    type metadata accessor for FeedAdGroupDataProvider.FailureReason();
    swift_getWitnessTable();
    sub_1C1520E6C();
    swift_storeEnumTagMultiPayload();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  else
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    sub_1C124CD08((uint64_t)&v34, qword_1EB87D088, &qword_1EB872EA8, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding);
    sub_1C151D4AC();
    uint64_t v24 = v32;
    *uint64_t v32 = 0;
    v24[1] = 0;
    *(void *)&long long v34 = v8;
    *((void *)&v34 + 1) = v29;
    long long v35 = *((_OWORD *)v31 + 6);
    uint64_t v36 = v30;
    uint64_t v37 = v12;
    long long v38 = *((_OWORD *)v31 + 8);
    type metadata accessor for FeedAdGroupDataProvider.FailureReason();
    swift_getWitnessTable();
    sub_1C1520E6C();
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t method lookup function for FeedAdGroupDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedAdGroupDataProvider);
}

uint64_t dispatch thunk of FeedAdGroupDataProvider.__allocating_init(blueprint:layoutBlueprint:layoutCollection:adjacentDistance:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C124CCD0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C124CD08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFFDEFC4(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C124CD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v41 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v41);
  long long v38 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v39);
  uint64_t v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatOption();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unsigned int v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2;
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v42 = a1;
  sub_1C0025648(v18, a3, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1C124E840((uint64_t)v12, (uint64_t (*)(void))sub_1C00AB000);
    uint64_t *v9 = v17;
    v9[1] = a3;
    uint64_t v40 = v9;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = v38;
    sub_1C124E8A0(v42, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v22 = *v20;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BFF81F7C();
      uint64_t v42 = (uint64_t)v20 + *(int *)(v23 + 48);
      uint64_t v24 = *(void *)(v22 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
      uint64_t v25 = *(void **)(v22 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v24, v25);
      swift_release();
      sub_1BFF81FF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v42, v26);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v24 = *(void *)(v22 + 88);
      uint64_t v25 = *(void **)(v22 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v24, v25);
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF1EAA0(v24, v25);
    sub_1BFE7E51C();
    swift_allocError();
    uint64_t v29 = (uint64_t)v40;
    sub_1C124E8A0((uint64_t)v40, v35, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    swift_willThrow();
    uint64_t v33 = type metadata accessor for FormatLayoutError;
    uint64_t v34 = v29;
  }
  else
  {
    uint64_t v27 = v37;
    sub_1C00AB068((uint64_t)v12, (uint64_t)v16);
    unint64_t v28 = *((void *)v16 + 2);
    uint64_t v29 = v28 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    uint64_t v30 = v42;
    unint64_t v31 = v28;
    uint64_t v32 = (uint64_t)v40;
    sub_1C00290F8(v42, v31, &v43);
    swift_release();
    if (!v32)
    {
      uint64_t v29 = sub_1C002427C(v43, v17, v19, v27, v30);
      swift_release();
      sub_1C124E840((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return v29;
    }
    uint64_t v33 = type metadata accessor for FormatOption;
    uint64_t v34 = (uint64_t)v16;
  }
  sub_1C124E840(v34, (uint64_t (*)(void))v33);
  return v29;
}

uint64_t sub_1C124D234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v39 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v39);
  uint64_t v37 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v41);
  uint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = (void *)a1;
  sub_1C0025648(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C124E840((uint64_t)v13, (uint64_t (*)(void))sub_1C00AB000);
    *uint64_t v10 = a2;
    v10[1] = a3;
    long long v38 = v10;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = v37;
    sub_1C124E8A0((uint64_t)v40, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v20 = *v18;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BFF81F7C();
      uint64_t v40 = (uint64_t *)((char *)v18 + *(int *)(v21 + 48));
      uint64_t v22 = *(void *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
      uint64_t v23 = *(void **)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v22, v23);
      swift_release();
      sub_1BFF81FF0();
      (*(void (**)(void *, uint64_t))(*(void *)(v24 - 8) + 8))(v40, v24);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v22 = *(void *)(v20 + 88);
      uint64_t v23 = *(void **)(v20 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v22, v23);
      swift_release();
    }
    uint64_t v31 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF1EAA0(v22, v23);
    sub_1BFE7E51C();
    swift_allocError();
    sub_1C124E8A0(v31, v32, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    swift_willThrow();
    uint64_t v29 = type metadata accessor for FormatLayoutError;
    uint64_t v30 = v31;
  }
  else
  {
    sub_1C00AB068((uint64_t)v13, (uint64_t)v17);
    uint64_t v25 = *((void *)v17 + 2);
    swift_retain();
    uint64_t v26 = v40;
    uint64_t v27 = v25;
    unint64_t v28 = v38;
    sub_1C00290F8(&v42, v40, v27);
    swift_release();
    if (!v28)
    {
      sub_1C0E4E0D0(v42, a2, a3, v36, v26, v35);
      swift_release();
    }
    uint64_t v29 = type metadata accessor for FormatOption;
    uint64_t v30 = (uint64_t)v17;
  }
  return sub_1C124E840(v30, (uint64_t (*)(void))v29);
}

void sub_1C124D6AC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v41 = a4;
  unint64_t v42 = a5;
  uint64_t v44 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v44);
  unint64_t v43 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v45);
  uint64_t v10 = (uint64_t *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0025648(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C124E840((uint64_t)v13, (uint64_t (*)(void))sub_1C00AB000);
    *uint64_t v10 = a2;
    v10[1] = a3;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = v43;
    sub_1C124E8A0((uint64_t)a1, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v20 = *v18;
    uint64_t v40 = v10;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BFF81F7C();
      unint64_t v43 = (uint64_t *)((char *)v18 + *(int *)(v21 + 48));
      int v22 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
      uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
      uint64_t v24 = *(void *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
      uint64_t v25 = *(void **)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v44 = v23;
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v24, v25);
      int v26 = v22;
      uint64_t v27 = (uint64_t)v40;
      swift_release();
      sub_1BFF81FF0();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v28 - 8) + 8))(v43, v28);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      int v34 = *(unsigned __int8 *)(v20 + 48);
      uint64_t v35 = *(void *)(v20 + 64);
      uint64_t v24 = *(void *)(v20 + 88);
      uint64_t v25 = *(void **)(v20 + 96);
      swift_bridgeObjectRetain();
      uint64_t v44 = v35;
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v24, v25);
      int v26 = v34;
      uint64_t v27 = (uint64_t)v40;
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF1EAA0(v24, v25);
    sub_1BFE7E51C();
    uint64_t v36 = (void *)swift_allocError();
    sub_1C124E8A0(v27, v37, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    if (v26)
    {
      uint64_t v38 = swift_allocObject();
      *(unsigned char *)(v38 + 16) = 2;
      *(void *)(v38 + 24) = 0x3FF0000000000000;
      *(unsigned char *)(v38 + 32) = 0;
      *unint64_t v42 = v38 | 0x1000000000000000;
      sub_1C124E840(v27, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);

      return;
    }
    swift_willThrow();
    uint64_t v32 = type metadata accessor for FormatLayoutError;
    uint64_t v33 = v27;
    goto LABEL_10;
  }
  sub_1C00AB068((uint64_t)v13, (uint64_t)v17);
  uint64_t v29 = *((void *)v17 + 2);
  swift_retain();
  uint64_t v30 = v29;
  uint64_t v31 = v46;
  sub_1C00290F8(&v47, a1, v30);
  swift_release();
  if (v31)
  {
    uint64_t v32 = type metadata accessor for FormatOption;
    uint64_t v33 = (uint64_t)v17;
LABEL_10:
    sub_1C124E840(v33, (uint64_t (*)(void))v32);
    return;
  }
  sub_1C0E4E14C(v47, a2, a3, v41, a1, v42);
  swift_release();
  sub_1C124E840((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatOption);
}

void sub_1C124DBE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a5;
  uint64_t v35 = a4;
  uint64_t v38 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v38);
  uint64_t v36 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v39);
  uint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0025648(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C124E840((uint64_t)v13, (uint64_t (*)(void))sub_1C00AB000);
    *uint64_t v10 = a2;
    v10[1] = a3;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = v36;
    sub_1C124E8A0(a1, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v20 = *v18;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BFF81F7C();
      uint64_t v37 = (uint64_t *)((char *)v18 + *(int *)(v21 + 48));
      LODWORD(v38) = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
      int v22 = v10;
      uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
      uint64_t v24 = *(void **)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v23, v24);
      uint64_t v25 = (uint64_t)v22;
      swift_release();
      sub_1BFF81FF0();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v26 - 8) + 8))(v37, v26);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      LODWORD(v38) = *(unsigned __int8 *)(v20 + 48);
      uint64_t v37 = v10;
      uint64_t v23 = *(void *)(v20 + 88);
      uint64_t v24 = *(void **)(v20 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v23, v24);
      uint64_t v25 = (uint64_t)v37;
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF1EAA0(v23, v24);
    sub_1BFE7E51C();
    uint64_t v32 = (void *)swift_allocError();
    sub_1C124E8A0(v25, v33, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    if (v38)
    {
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1C124E840(v25, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);

      return;
    }
    swift_willThrow();
    uint64_t v30 = type metadata accessor for FormatLayoutError;
    uint64_t v31 = v25;
  }
  else
  {
    sub_1C00AB068((uint64_t)v13, (uint64_t)v17);
    unint64_t v27 = *((void *)v17 + 2);
    swift_retain();
    unint64_t v28 = v27;
    uint64_t v29 = v37;
    sub_1C00290F8(a1, v28, &v40);
    swift_release();
    if (!v29)
    {
      sub_1C0E4E1CC(v40, a2, a3, v35, a1, v34);
      swift_release();
    }
    uint64_t v30 = type metadata accessor for FormatOption;
    uint64_t v31 = (uint64_t)v17;
  }
  sub_1C124E840(v31, (uint64_t (*)(void))v30);
}

uint64_t sub_1C124E0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v39 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v39);
  uint64_t v37 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v41);
  uint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v40 = (char *)a1;
  sub_1C0025648(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C124E840((uint64_t)v13, (uint64_t (*)(void))sub_1C00AB000);
    *uint64_t v10 = a2;
    v10[1] = a3;
    uint64_t v38 = v10;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = v37;
    sub_1C124E8A0((uint64_t)v40, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v20 = *v18;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BFF81F7C();
      unint64_t v40 = (char *)v18 + *(int *)(v21 + 48);
      uint64_t v22 = *(void *)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
      uint64_t v23 = *(void **)(v20 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v22, v23);
      swift_release();
      sub_1BFF81FF0();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v40, v24);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v22 = *(void *)(v20 + 88);
      uint64_t v23 = *(void **)(v20 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1E730(v22, v23);
      swift_release();
    }
    uint64_t v31 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF1EAA0(v22, v23);
    sub_1BFE7E51C();
    swift_allocError();
    sub_1C124E8A0(v31, v32, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    swift_willThrow();
    uint64_t v29 = type metadata accessor for FormatLayoutError;
    uint64_t v30 = v31;
  }
  else
  {
    sub_1C00AB068((uint64_t)v13, (uint64_t)v17);
    unint64_t v25 = *((void *)v17 + 2);
    swift_retain();
    uint64_t v26 = v40;
    unint64_t v27 = v25;
    unint64_t v28 = v38;
    sub_1C00290F8((uint64_t)v40, v27, &v42);
    swift_release();
    if (!v28)
    {
      sub_1C0E4F8B8(v42, a2, a3, v36, v26, v35);
      swift_release();
    }
    uint64_t v29 = type metadata accessor for FormatOption;
    uint64_t v30 = (uint64_t)v17;
  }
  return sub_1C124E840(v30, (uint64_t (*)(void))v29);
}

uint64_t FormatOptionBinding.modifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionBinding.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionBinding.modifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatOptionBinding.modifiers.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C124E5E8()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1BFEF9A78();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s8NewsFeed19FormatOptionBindingV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v5 = sub_1C00E3FD8(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_1C124E6D8(uint64_t a1)
{
  unint64_t result = sub_1C124E700();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C124E700()
{
  unint64_t result = qword_1EA1AD580;
  if (!qword_1EA1AD580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD580);
  }
  return result;
}

unint64_t sub_1C124E754(void *a1)
{
  a1[1] = sub_1BFE2DD44();
  a1[2] = sub_1BFE0637C();
  unint64_t result = sub_1C124E78C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C124E78C()
{
  unint64_t result = qword_1EA1AD588;
  if (!qword_1EA1AD588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1AD588);
  }
  return result;
}

uint64_t sub_1C124E7E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C124E7EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionBinding()
{
  return &type metadata for FormatOptionBinding;
}

uint64_t sub_1C124E840(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C124E8A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C124E908()
{
  return swift_deallocObject();
}

uint64_t FeedCursor.unwrappedFeedPool.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v2 = *v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C151FD8C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = (char *)v1 + *(void *)(v2 + 224);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v13, v7, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for FeedServiceError();
  swift_getWitnessTable();
  swift_allocError();
  *(void *)uint64_t v10 = 6;
  *(void *)(v10 + 8) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = 6;
  return swift_willThrow();
}

char *FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, unsigned char *a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned char *a12, uint64_t a13, unsigned char *a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v135 = a8;
  uint64_t v126 = a7;
  uint64_t v124 = a6;
  uint64_t v125 = a4;
  uint64_t v129 = a3;
  uint64_t v132 = a1;
  uint64_t v116 = *v28;
  uint64_t v30 = v116;
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1256608(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v115 = &v103[-v33];
  uint64_t v114 = type metadata accessor for FeedContext();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v142 = &v103[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = *(void *)(v30 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v131 = sub_1C151FD8C();
  uint64_t v141 = *(void *)(v131 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v131);
  uint64_t v127 = &v103[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v36);
  uint64_t v140 = &v103[-v38];
  sub_1C1256608(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v31);
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  uint64_t v123 = &v103[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v40);
  uint64_t v122 = &v103[-v42];
  uint64_t v43 = sub_1C151631C();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v139 = &v103[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v45);
  v138 = &v103[-v47];
  uint64_t v48 = sub_1C151FD8C();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v52 = &v103[-v51];
  uint64_t v144 = v35;
  uint64_t v143 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v137 = &v103[-v54];
  int v55 = *a5;
  uint64_t v136 = *a24;
  uint64_t v134 = a24[1];
  uint64_t v133 = a24[2];
  uint64_t v105 = *(unsigned __int8 **)a25;
  int v104 = *(unsigned __int8 *)(a25 + 8);
  int v112 = *(unsigned __int8 *)(a25 + 9);
  if (v53)
  {
    uint64_t v130 = v53;
  }
  else
  {
    uint64_t v56 = v28[3];
    uint64_t v132 = v28[2];
    uint64_t v130 = v56;
    swift_bridgeObjectRetain();
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v49 + 16))(v52, v129, v48);
  uint64_t v58 = v143;
  uint64_t v57 = v144;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v143 + 48))(v52, 1, v144) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v58 + 16))(v137, (uint64_t)v28 + *(void *)(*v28 + 256), v57);
    uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
    swift_bridgeObjectRetain();
    v59(v52, v48);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 32))(v137, v52, v57);
    swift_bridgeObjectRetain();
  }
  uint64_t v60 = v124;
  uint64_t v61 = v122;
  if (v125)
  {
    uint64_t v129 = v125;
    if (v55 != 7) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v129 = *(uint64_t *)((char *)v28 + *(void *)(*v28 + 264));
  swift_retain();
  if (v55 == 7) {
LABEL_9:
  }
    LOBYTE(v55) = *((unsigned char *)v28 + 32);
LABEL_10:
  unsigned __int8 v149 = v55;
  sub_1BFF97B00(v60, (uint64_t)v61, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  uint64_t v62 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v44 + 48);
  if (v62(v61, 1, v43) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v44 + 16))(v138, (uint64_t)v28 + qword_1EB93C670, v43);
    swift_retain();
    sub_1BFE549BC((uint64_t)v61, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32))(v138, v61, v43);
    swift_retain();
  }
  uint64_t v63 = v127;
  uint64_t v64 = v123;
  sub_1BFF97B00(v126, (uint64_t)v123, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  if (v62(v64, 1, v43) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v44 + 16))(v139, (uint64_t)v28 + qword_1EB93C640, v43);
    sub_1BFE549BC((uint64_t)v64, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32))(v139, v64, v43);
  }
  uint64_t v65 = v141;
  if (v135)
  {
    uint64_t v127 = v135;
    uint64_t v66 = a10;
    if (a9) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v127 = *(unsigned char **)((char *)v28 + qword_1EB93C678);
    swift_bridgeObjectRetain();
    uint64_t v66 = a10;
    if (a9)
    {
LABEL_18:
      uint64_t v126 = a9;
      uint64_t v67 = a11;
      if (v66) {
        goto LABEL_19;
      }
LABEL_25:
      uint64_t v125 = *(uint64_t *)((char *)v28 + qword_1EB93C738);
      swift_bridgeObjectRetain();
      uint64_t v68 = a12;
      if (v67) {
        goto LABEL_20;
      }
      goto LABEL_26;
    }
  }
  uint64_t v126 = *(uint64_t *)((char *)v28 + qword_1EB93C688);
  swift_bridgeObjectRetain();
  uint64_t v67 = a11;
  if (!v66) {
    goto LABEL_25;
  }
LABEL_19:
  uint64_t v125 = v66;
  uint64_t v68 = a12;
  if (v67)
  {
LABEL_20:
    uint64_t v124 = v67;
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v124 = *(uint64_t *)((char *)v28 + qword_1EB93C840);
  swift_bridgeObjectRetain();
LABEL_27:
  uint64_t v111 = a9;
  uint64_t v110 = v66;
  if (v68)
  {
    uint64_t v123 = v68;
  }
  else
  {
    uint64_t v123 = *(unsigned char **)((char *)v28 + qword_1EB93C680);
    swift_bridgeObjectRetain();
  }
  uint64_t v109 = v67;
  if (a13)
  {
    uint64_t v121 = a13;
  }
  else
  {
    uint64_t v121 = *(uint64_t *)((char *)v28 + qword_1EB93C740);
    swift_bridgeObjectRetain();
  }
  if (a15) {
    a14 = *(unsigned char **)((char *)v28 + qword_1EB93C698);
  }
  if (a17) {
    a16 = *(uint64_t *)((char *)v28 + qword_1EB93C638);
  }
  uint64_t v108 = v68;
  if (a19) {
    a18 = *(uint64_t *)((char *)v28 + qword_1EB93C648);
  }
  uint64_t v119 = a18;
  if (a20)
  {
    uint64_t v118 = a20;
  }
  else
  {
    uint64_t v118 = *(uint64_t *)((char *)v28 + qword_1EB93CB78);
    swift_bridgeObjectRetain();
  }
  uint64_t v106 = a23;
  uint64_t v122 = a14;
  uint64_t v120 = a16;
  uint64_t v107 = a13;
  if (a21)
  {
    uint64_t v117 = a21;
  }
  else
  {
    uint64_t v117 = *(uint64_t *)((char *)v28 + qword_1EB93CBC0);
    swift_bridgeObjectRetain();
  }
  uint64_t v72 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v65 + 16);
  uint64_t v73 = v131;
  v72(v63, a22, v131);
  uint64_t v74 = AssociatedTypeWitness;
  uint64_t v75 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v75 + 48))(v63, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v76 = (uint64_t)v28 + *(void *)(*v28 + 224);
    swift_beginAccess();
    v72(v140, v76, v73);
    uint64_t v77 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77(v63, v73);
  }
  else
  {
    uint64_t v78 = v140;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v75 + 32))(v140, v63, v74);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v75 + 56))(v78, 0, 1, v74);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v79 = v132;
  uint64_t v80 = v73;
  uint64_t v81 = v115;
  uint64_t v82 = v136;
  uint64_t v83 = v114;
  uint64_t v84 = v113;
  char v85 = v112;
  sub_1BFF97B00(v106, (uint64_t)v115, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v83) == 1)
  {
    sub_1C019CC1C((uint64_t)v28 + *(void *)(*v28 + 232), (uint64_t)v142);
    sub_1BFE549BC((uint64_t)v81, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
    if (v82)
    {
LABEL_50:
      uint64_t v86 = v134;
      uint64_t v87 = v133;
      goto LABEL_53;
    }
  }
  else
  {
    sub_1C019CBB8((uint64_t)v81, (uint64_t)v142);
    if (v82) {
      goto LABEL_50;
    }
  }
  __int16 v88 = (uint64_t *)((char *)v28 + *(void *)(*v28 + 240));
  uint64_t v82 = *v88;
  uint64_t v86 = v88[1];
  uint64_t v87 = v88[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_53:
  *(void *)&long long v147 = v82;
  *((void *)&v147 + 1) = v86;
  uint64_t v148 = v87;
  if (v85)
  {
    uint64_t v89 = (uint64_t)v28 + *(void *)(*v28 + 248);
    uint64_t v90 = *(unsigned __int8 **)v89;
    char v91 = *(unsigned char *)(v89 + 8);
  }
  else
  {
    char v91 = v104 & 1;
    uint64_t v90 = v105;
  }
  unint64_t v145 = v90;
  char v146 = v91;
  if (a26)
  {
    uint64_t v92 = a26;
    uint64_t v93 = a28;
    if (a27) {
      goto LABEL_58;
    }
LABEL_62:
    uint64_t v94 = *(uint64_t *)((char *)v28 + *(void *)(*v28 + 288));
    swift_bridgeObjectRetain();
    uint64_t v95 = v93;
    if (v93) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  uint64_t v92 = *(uint64_t *)((char *)v28 + *(void *)(*v28 + 280));
  swift_retain();
  uint64_t v93 = a28;
  if (!a27) {
    goto LABEL_62;
  }
LABEL_58:
  uint64_t v94 = a27;
  uint64_t v95 = v93;
  if (!v93)
  {
LABEL_59:
    uint64_t v96 = (uint64_t *)((char *)v28 + *(void *)(*v28 + 272));
    swift_beginAccess();
    uint64_t v95 = *v96;
    swift_retain();
  }
LABEL_60:
  sub_1BFE5E688(v136);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v97 = sub_1C12510A4();
  swift_allocObject();
  uint64_t v102 = v92;
  uint64_t v98 = v140;
  uint64_t v99 = v137;
  uint64_t v100 = sub_1C125568C(v79, v130, (uint64_t)v137, v129, &v149, (uint64_t)v138, (uint64_t)v139, (uint64_t)v127, v126, v125, v124, (uint64_t)v123, v121, (uint64_t)v122, v120, v119, v118, v117, (uint64_t)v140,
           (uint64_t)v142,
           &v147,
           &v145,
           v102,
           v94,
           v95,
           v97);
  (*(void (**)(unsigned char *, uint64_t))(v141 + 8))(v98, v80);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v143 + 8))(v99, v144);
  return v100;
}

{
  uint64_t v28;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned char *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(unsigned char *, uint64_t);
  unsigned char *v62;
  uint64_t v63;
  unsigned char *v64;
  uint64_t v65;
  unsigned int (*v66)(unsigned char *, uint64_t, uint64_t);
  unsigned char *v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned char *v72;
  void (*v76)(unsigned char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(unsigned char *, uint64_t);
  unsigned char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned char *v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  unsigned __int8 *v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned char *v101;
  unsigned char *v102;
  char *v103;
  uint64_t v105;
  unsigned char v106[12];
  int v107;
  unsigned __int8 *v108;
  uint64_t v109;
  uint64_t v110;
  unsigned char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  unsigned char *v118;
  unsigned char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned char *v126;
  unsigned char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned char *v131;
  uint64_t AssociatedTypeWitness;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned char *v139;
  uint64_t v140;
  unsigned char *v141;
  unsigned char *v142;
  unsigned char *v143;
  unsigned char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 *v148;
  char v149;
  long long v150;
  uint64_t v151;
  unsigned __int8 v152;

  uint64_t v139 = a8;
  uint64_t v130 = a7;
  uint64_t v128 = a6;
  uint64_t v129 = a4;
  uint64_t v133 = a3;
  uint64_t v136 = a1;
  uint64_t v120 = *(void *)v28;
  uint64_t v30 = v120;
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1256608(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v118 = &v106[-v33];
  uint64_t v117 = type metadata accessor for FeedContext();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  uint64_t v119 = &v106[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = *(void *)(v30 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v135 = sub_1C151FD8C();
  unint64_t v145 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v131 = &v106[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v37);
  uint64_t v144 = &v106[-v38];
  sub_1C1256608(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v31);
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v127 = &v106[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v41);
  uint64_t v126 = &v106[-v42];
  uint64_t v43 = sub_1C151631C();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v143 = &v106[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v46);
  uint64_t v142 = &v106[-v47];
  uint64_t v48 = sub_1C151FD8C();
  uint64_t v49 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v51 = &v106[-v50];
  long long v147 = v35;
  char v146 = *(void *)(v35 - 8);
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v141 = &v106[-v55];
  uint64_t v56 = *a5;
  uint64_t v140 = *a24;
  uint64_t v57 = a24[1];
  uint64_t v137 = a24[2];
  v138 = v57;
  uint64_t v108 = *(unsigned __int8 **)a25;
  uint64_t v107 = *(unsigned __int8 *)(a25 + 8);
  uint64_t v115 = *(unsigned __int8 *)(a25 + 9);
  if (v53)
  {
    uint64_t v134 = v53;
  }
  else
  {
    uint64_t v58 = *(void *)(v28 + 24);
    uint64_t v136 = *(void *)(v28 + 16);
    uint64_t v134 = v58;
    swift_bridgeObjectRetain();
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v49 + 16))(v51, v133, v48, v54);
  uint64_t v60 = v146;
  uint64_t v59 = v147;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v146 + 48))(v51, 1, v147) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v60 + 16))(v141, v28 + *(void *)(*(void *)v28 + 256), v59);
    uint64_t v61 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
    swift_bridgeObjectRetain();
    v61(v51, v48);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v60 + 32))(v141, v51, v59);
    swift_bridgeObjectRetain();
  }
  uint64_t v62 = v131;
  uint64_t v63 = v128;
  uint64_t v64 = v126;
  if (v129)
  {
    uint64_t v65 = v129;
    if (v56 != 7) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v65 = *(void *)(v28 + *(void *)(*(void *)v28 + 264));
  swift_retain();
  if (v56 == 7) {
LABEL_9:
  }
    LOBYTE(v56) = *(unsigned char *)(v28 + 32);
LABEL_10:
  long long v152 = v56;
  sub_1BFF97B00(v63, (uint64_t)v64, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  uint64_t v66 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v44 + 48);
  if (v66(v64, 1, v43) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v44 + 16))(v142, v28 + qword_1EB93C670, v43);
    swift_retain();
    sub_1BFE549BC((uint64_t)v64, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32))(v142, v64, v43);
    swift_retain();
  }
  uint64_t v67 = v127;
  sub_1BFF97B00(v130, (uint64_t)v127, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  uint64_t v68 = v66(v67, 1, v43);
  uint64_t v133 = v65;
  if (v68 == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v44 + 16))(v143, v28 + qword_1EB93C640, v43);
    sub_1BFE549BC((uint64_t)v67, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32))(v143, v67, v43);
  }
  uint64_t v69 = v145;
  if (v139)
  {
    uint64_t v131 = v139;
    uint64_t v70 = a10;
    if (a9) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v131 = *(unsigned char **)(v28 + qword_1EB93C678);
    swift_bridgeObjectRetain();
    uint64_t v70 = a10;
    if (a9)
    {
LABEL_18:
      uint64_t v130 = a9;
      uint64_t v71 = a11;
      if (v70) {
        goto LABEL_19;
      }
LABEL_25:
      uint64_t v129 = *(void *)(v28 + qword_1EB93C738);
      swift_bridgeObjectRetain();
      uint64_t v72 = a12;
      if (v71) {
        goto LABEL_20;
      }
      goto LABEL_26;
    }
  }
  uint64_t v130 = *(void *)(v28 + qword_1EB93C688);
  swift_bridgeObjectRetain();
  uint64_t v71 = a11;
  if (!v70) {
    goto LABEL_25;
  }
LABEL_19:
  uint64_t v129 = v70;
  uint64_t v72 = a12;
  if (v71)
  {
LABEL_20:
    uint64_t v128 = v71;
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v128 = *(void *)(v28 + qword_1EB93C840);
  swift_bridgeObjectRetain();
LABEL_27:
  uint64_t v114 = a9;
  uint64_t v113 = v70;
  if (v72)
  {
    uint64_t v127 = v72;
  }
  else
  {
    uint64_t v127 = *(unsigned char **)(v28 + qword_1EB93C680);
    swift_bridgeObjectRetain();
  }
  int v112 = v71;
  if (a13)
  {
    uint64_t v125 = a13;
  }
  else
  {
    uint64_t v125 = *(void *)(v28 + qword_1EB93C740);
    swift_bridgeObjectRetain();
  }
  uint64_t v111 = v72;
  if (a15) {
    a14 = *(unsigned char **)(v28 + qword_1EB93C698);
  }
  if (a17) {
    a16 = *(void *)(v28 + qword_1EB93C638);
  }
  uint64_t v110 = a13;
  if (a19) {
    a18 = *(void *)(v28 + qword_1EB93C648);
  }
  if (a20)
  {
    uint64_t v122 = a20;
  }
  else
  {
    uint64_t v122 = *(void *)(v28 + qword_1EB93CB78);
    swift_bridgeObjectRetain();
  }
  uint64_t v109 = a23;
  uint64_t v126 = a14;
  uint64_t v124 = a16;
  uint64_t v123 = a18;
  if (a21)
  {
    uint64_t v121 = a21;
  }
  else
  {
    uint64_t v121 = *(void *)(v28 + qword_1EB93CBC0);
    swift_bridgeObjectRetain();
  }
  uint64_t v76 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v69 + 16);
  uint64_t v77 = v135;
  v76(v62, a22, v135);
  uint64_t v78 = AssociatedTypeWitness;
  uint64_t v79 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v79 + 48))(v62, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v80 = v28 + *(void *)(*(void *)v28 + 224);
    swift_beginAccess();
    v76(v144, v80, v77);
    uint64_t v81 = *(void (**)(unsigned char *, uint64_t))(v69 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81(v62, v77);
  }
  else
  {
    uint64_t v82 = v144;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v79 + 32))(v144, v62, v78);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v79 + 56))(v82, 0, 1, v78);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v83 = v136;
  uint64_t v84 = v77;
  char v85 = (uint64_t)v119;
  uint64_t v86 = v118;
  uint64_t v87 = v117;
  __int16 v88 = v116;
  uint64_t v89 = v115;
  sub_1BFF97B00(v109, (uint64_t)v118, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87) == 1)
  {
    sub_1C019CC1C(v28 + *(void *)(*(void *)v28 + 232), v85);
    sub_1BFE549BC((uint64_t)v86, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
    uint64_t v90 = v140;
    if (v140)
    {
LABEL_50:
      uint64_t v92 = v137;
      char v91 = v138;
      goto LABEL_53;
    }
  }
  else
  {
    sub_1C019CBB8((uint64_t)v86, v85);
    uint64_t v90 = v140;
    if (v140) {
      goto LABEL_50;
    }
  }
  uint64_t v93 = (uint64_t *)(v28 + *(void *)(*(void *)v28 + 240));
  uint64_t v90 = *v93;
  char v91 = v93[1];
  uint64_t v92 = v93[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_53:
  *(void *)&uint64_t v150 = v90;
  *((void *)&v150 + 1) = v91;
  uint64_t v151 = v92;
  if (v89)
  {
    uint64_t v94 = v28 + *(void *)(*(void *)v28 + 248);
    uint64_t v95 = *(unsigned __int8 **)v94;
    uint64_t v96 = *(unsigned char *)(v94 + 8);
  }
  else
  {
    uint64_t v96 = v107 & 1;
    uint64_t v95 = v108;
  }
  uint64_t v148 = v95;
  unsigned __int8 v149 = v96;
  if (!a26)
  {
    uint64_t v97 = *(void *)(v28 + *(void *)(*(void *)v28 + 280));
    swift_retain();
    if (a27) {
      goto LABEL_58;
    }
LABEL_60:
    uint64_t v98 = *(void *)(v28 + *(void *)(*(void *)v28 + 288));
    swift_bridgeObjectRetain();
    goto LABEL_61;
  }
  uint64_t v97 = a26;
  if (!a27) {
    goto LABEL_60;
  }
LABEL_58:
  uint64_t v98 = a27;
LABEL_61:
  sub_1BFE5E688(v140);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v99 = sub_1C1253848(a28, v28);
  uint64_t v100 = sub_1C12510A4();
  swift_allocObject();
  uint64_t v105 = v97;
  uint64_t v101 = v144;
  uint64_t v102 = v141;
  int v103 = sub_1C125568C(v83, v134, (uint64_t)v141, v133, &v152, (uint64_t)v142, (uint64_t)v143, (uint64_t)v131, v130, v129, v128, (uint64_t)v127, v125, (uint64_t)v126, v124, v123, v122, v121, (uint64_t)v144,
           v85,
           &v150,
           &v148,
           v105,
           v98,
           v99,
           v100);
  (*(void (**)(unsigned char *, uint64_t))(v145 + 8))(v101, v84);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v146 + 8))(v102, v147);
  return v103;
}

uint64_t FeedCursor.canExpand.getter()
{
  uint64_t v20 = *v0;
  uint64_t v1 = *(void *)(v20 + 88);
  uint64_t v2 = *(void *)(v20 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = swift_checkMetadataState();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  int v13 = *((unsigned __int8 *)v0 + 32);
  if (((1 << v13) & 0x67) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 64))(v2, v1, v10);
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v8, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v14 = swift_getAssociatedConformanceWitness();
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(AssociatedTypeWitness, v14);
    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
    uint64_t v21 = v15;
    MEMORY[0x1F4188790](v16);
    *(&v19 - 2) = v2;
    *(&v19 - 1) = v1;
    swift_getAssociatedTypeWitness();
    sub_1C151ED5C();
    swift_getWitnessTable();
    char v17 = sub_1C151EA2C();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = v13 != 3;
  }
  return v17 & 1;
}

uint64_t FeedNextCursor.syncCursor.getter()
{
  if ((*(void *)(v0 + 16) & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_retain();
  }
}

uint64_t static FeedCursor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (char v5 = sub_1C1520A9C(), result = 0, (v5 & 1) != 0))
  {
    if (sub_1C1494758(*(unsigned char *)(a1 + 32), *(unsigned char *)(a2 + 32)))
    {
      type metadata accessor for FeedCursorGroup();
      swift_getWitnessTable();
      if (sub_1C151ED6C())
      {
        type metadata accessor for FeedDatabaseGroup();
        swift_getWitnessTable();
        if (sub_1C151ED6C())
        {
          type metadata accessor for FeedGroupEmitter();
          sub_1C151ED5C();
          swift_getWitnessTable();
          swift_getWitnessTable();
          if ((sub_1C151E42C() & 1) != 0
            && (sub_1C151ED6C() & 1) != 0
            && (sub_1C151ED6C() & 1) != 0
            && (sub_1C151ED6C() & 1) != 0
            && *(void *)(a1 + qword_1EB93C690) == *(void *)(a2 + qword_1EB93C690)
            && *(void *)(a1 + qword_1EB93C698) == *(void *)(a2 + qword_1EB93C698))
          {
            uint64_t v7 = a1 + *(void *)(*(void *)a1 + 248);
            double v8 = *(double *)v7;
            int v9 = *(unsigned __int8 *)(v7 + 8);
            uint64_t v10 = a2 + *(void *)(*(void *)a2 + 248);
            double v11 = *(double *)v10;
            unsigned int v12 = *(unsigned __int8 *)(v10 + 8);
            if (v9 == 1)
            {
              if (v8 == 0.0)
              {
                if (v11 == 0.0) {
                  return v12;
                }
                else {
                  return 0;
                }
              }
              else if (v11 == 0.0)
              {
                return 0;
              }
              else
              {
                return v12;
              }
            }
            if ((v12 & 1) == 0) {
              return v8 == v11;
            }
          }
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C1250170()
{
  *(void *)(v1 + 32) = v0;
  *(void *)(v1 + 40) = *v0;
  return MEMORY[0x1F4188298](sub_1C12501B8, 0, 0);
}

uint64_t sub_1C12501B8()
{
  uint64_t v1 = *(void *)(v0[4] + 16);
  v0[6] = v1;
  if (v1 < 0)
  {
    swift_retain();
    sub_1C1518CEC();
    uint64_t v4 = v0[2];
    v0[7] = v4;
    char v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    uint64_t v6 = type metadata accessor for FeedCursor();
    unint64_t v7 = sub_1C017F734();
    *char v5 = v0;
    v5[1] = sub_1C125030C;
    uint64_t v8 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187D90](v0 + 3, v4, v6, v7, v8);
  }
  else
  {
    int v9 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v2 = swift_retain();
    return v9(v2);
  }
}

uint64_t sub_1C125030C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C12504A8;
  }
  else {
    uint64_t v2 = sub_1C125043C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C125043C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C12504A8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

char *sub_1C1250510()
{
  uint64_t v52 = *v0;
  uint64_t v1 = v52;
  uint64_t v2 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v54 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C151FD8C();
  uint64_t v44 = v4;
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v5 = v45;
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v35 - v6;
  uint64_t v42 = (uint64_t)&v35 - v6;
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unsigned int v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v12;
  MEMORY[0x1F4188790](v10);
  uint64_t v49 = (uint64_t)&v35 - v13;
  uint64_t v51 = v0[2];
  uint64_t v56 = v0[3];
  uint64_t v50 = (uint64_t)v0 + *(void *)(v1 + 256);
  uint64_t v55 = *(uint64_t *)((char *)v0 + *(void *)(v1 + 264));
  v61[0] = *((unsigned char *)v0 + 32);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v14((char *)&v35 - v13, (char *)v0 + qword_1EB93C670, v8);
  v14(v12, (char *)v0 + qword_1EB93C640, v8);
  uint64_t v41 = *(uint64_t *)((char *)v0 + qword_1EB93C678);
  uint64_t v53 = *(uint64_t *)((char *)v0 + qword_1EB93C688);
  uint64_t v36 = *(uint64_t *)((char *)v0 + qword_1EB93C738);
  uint64_t v38 = *(uint64_t *)((char *)v0 + qword_1EB93C840);
  uint64_t v39 = *(uint64_t *)((char *)v0 + qword_1EB93C680);
  uint64_t v40 = *(uint64_t *)((char *)v0 + qword_1EB93C740);
  uint64_t v15 = *(uint64_t *)((char *)v0 + qword_1EB93C698);
  uint64_t v46 = *(uint64_t *)((char *)v0 + qword_1EB93C638);
  uint64_t v47 = v15;
  uint64_t v43 = *(uint64_t *)((char *)v0 + qword_1EB93C648);
  uint64_t v16 = *(uint64_t *)((char *)v0 + qword_1EB93CB78);
  uint64_t v37 = *(uint64_t *)((char *)v0 + qword_1EB93CBC0);
  uint64_t v17 = (uint64_t)v0 + *(void *)(*v0 + 224);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
  sub_1C019CC1C((uint64_t)v0 + *(void *)(*v0 + 232), v54);
  uint64_t v18 = (void *)*v0;
  uint64_t v19 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 240));
  uint64_t v20 = v19[1];
  uint64_t v21 = v19[2];
  *(void *)&long long v59 = *v19;
  *((void *)&v59 + 1) = v20;
  uint64_t v60 = v21;
  uint64_t v22 = (uint64_t)v0 + v18[31];
  uint64_t v23 = *(unsigned __int8 **)v22;
  LOBYTE(v22) = *(unsigned char *)(v22 + 8);
  uint64_t v57 = v23;
  char v58 = v22;
  uint64_t v35 = *(uint64_t *)((char *)v0 + v18[35]);
  uint64_t v24 = *(uint64_t *)((char *)v0 + v18[36]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v38;
  swift_bridgeObjectRetain();
  uint64_t v26 = v39;
  swift_bridgeObjectRetain();
  uint64_t v27 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v35;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1C12510A4();
  swift_allocObject();
  uint64_t v34 = v24;
  uint64_t v31 = v42;
  uint64_t v32 = sub_1C125568C(v51, v56, v50, v55, v61, v49, (uint64_t)v48, v41, v53, v36, v25, v26, v27, v47, v46, v43, v16, v28, v42,
          v54,
          &v59,
          &v57,
          v29,
          v34,
          0,
          v30);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v31, v44);
  swift_release();
  return v32;
}

uint64_t FeedCursor.feedMode.getter@<X0>(unsigned char *a1@<X8>)
{
  return FeedServiceConfigType.feedMode.getter(*(void *)(*(void *)v1 + 80), *(void *)(*(void *)v1 + 88), a1);
}

uint64_t sub_1C1250B60(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v48 = a3;
  uint64_t v49 = a5;
  int v50 = a4;
  uint64_t v38 = a1;
  uint64_t v8 = *v5;
  uint64_t v9 = sub_1C151631C();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v47 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v46 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v8 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1C151FD8C();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v37 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v37 - v19;
  (*(void (**)(char *, unsigned char *, uint64_t))(v21 + 16))((char *)&v37 - v19, &v6[*(void *)(v8 + 256)], v13);
  uint64_t v45 = sub_1BFE17EE0();
  uint64_t v44 = sub_1BFE180F0();
  uint64_t v43 = *(void *)&v6[qword_1EB93C680];
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1BFE17EAC();
  uint64_t v41 = sub_1BFE17DBC((uint64_t (*)(uint64_t))FeedCursor.allEmittedGroups.getter, (void (*)(void, void, void))type metadata accessor for FeedCursorGroup);
  uint64_t v22 = *(void *)&v6[qword_1EB93C740];
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1BFE180BC();
  uint64_t v39 = sub_1BFE17DBC((uint64_t (*)(uint64_t))sub_1C1253474, (void (*)(void, void, void))type metadata accessor for FeedDatabaseGroup);
  uint64_t v23 = &v6[*(void *)(*(void *)v6 + 224)];
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v15 + 16))(v18, v23, v14);
  uint64_t v24 = *(void *)&v6[qword_1EB93CB78];
  if (*(void *)(v24 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1BFEF2D8C(v38, a2);
    if (v26)
    {
      sub_1BFF6A008(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v54);
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  type metadata accessor for FeedGroupEmitterCursor();
  uint64_t v27 = v46;
  sub_1C019CC1C((uint64_t)&v6[*(void *)(*(void *)v6 + 232)], v46);
  uint64_t v28 = *(void *)v6;
  uint64_t v29 = &v6[*(void *)(*(void *)v6 + 248)];
  uint64_t v30 = *(void *)v29;
  LOBYTE(v29) = v29[8];
  uint64_t v52 = v30;
  char v53 = (char)v29;
  char v51 = v6[32];
  uint64_t v31 = *(void *)&v6[*(void *)(v28 + 280)];
  uint64_t v32 = *(void *)&v6[*(void *)(v28 + 288)];
  swift_retain();
  uint64_t v33 = v49;
  swift_bridgeObjectRetain();
  uint64_t v34 = v48;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v35 = (uint64_t)v47;
  sub_1C151630C();
  return sub_1C13654AC((uint64_t)v20, v45, v44, v43, v42, v41, v22, v40, v39, (uint64_t)v18, (uint64_t)&v54, v27, &v52, &v51, v31, v35, v50 & 1, v33, v34,
           v32);
}

uint64_t FeedCursor.absoluteSlotIndex.getter()
{
  if (sub_1C12510A4())
  {
    uint64_t v0 = FeedCursor.absoluteSlotIndex.getter();
    uint64_t v1 = FeedCursor.nextSlotIndex.getter();
    swift_release();
    uint64_t result = v0 + v1;
    if (__OFADD__(v0, v1)) {
      __break(1u);
    }
  }
  else
  {
    return FeedCursor.nextSlotIndex.getter();
  }
  return result;
}

uint64_t sub_1C12510A4()
{
  sub_1C1517E7C();
  uint64_t Strong = swift_weakLoadStrong();
  sub_1C1517E8C();
  return Strong;
}

uint64_t FeedNextCursor.identifier.getter()
{
  uint64_t v0 = sub_1C12555F8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C125205C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BFE17494(a1);
  return v2;
}

uint64_t sub_1C125209C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v66 = type metadata accessor for FeedContext;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1256608(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v72 = (uint64_t)v52 - v6;
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t v8 = *(void *)(v3 + 80);
  uint64_t v9 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C151FD8C();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v65 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v68 = (char *)v52 - v13;
  uint64_t v62 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1256608(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v4);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v59 = v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v52 - v18;
  uint64_t v69 = (uint64_t)v52 - v18;
  uint64_t v20 = sub_1C151FD8C();
  uint64_t v60 = *(void *)(v20 - 8);
  uint64_t v61 = v20;
  __n128 v21 = MEMORY[0x1F4188790](v20);
  uint64_t v71 = (uint64_t)v52 - v22;
  (*(void (**)(__n128))(*(void *)(v8 - 8) + 56))(v21);
  v79[0] = 0x2020403020102uLL >> (8 * *((unsigned char *)v1 + 32));
  uint64_t v23 = sub_1C151631C();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v19, 1, 1, v23);
  v24(v16, 1, 1, v23);
  type metadata accessor for FeedGroupEmitter();
  char v58 = (unsigned char *)sub_1C151ECBC();
  sub_1C151ED5C();
  swift_getTupleTypeMetadata2();
  sub_1C151ECBC();
  uint64_t v57 = sub_1C151E3BC();
  uint64_t v56 = sub_1C151ECBC();
  uint64_t v73 = v9;
  v78[5] = *(uint64_t *)((char *)v9 + qword_1EB93C680);
  v74[14] = v8;
  v74[15] = v7;
  uint64_t v25 = v7;
  uint64_t v67 = a1;
  v74[16] = a1;
  type metadata accessor for FeedCursorGroup();
  uint64_t v26 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  v52[1] = v26;
  char v53 = (unsigned char *)sub_1C152023C();
  v78[3] = *(uint64_t *)((char *)v9 + qword_1EB93C740);
  v74[8] = v8;
  v74[9] = v7;
  v74[10] = a1;
  type metadata accessor for FeedDatabaseGroup();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v27 = sub_1C152023C();
  v52[4] = v27;
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  long long v54 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 56);
  uint64_t v55 = v28 + 56;
  uint64_t v29 = (uint64_t)v68;
  v54(v68, 1, 1);
  uint64_t v30 = type metadata accessor for FeedContext();
  uint64_t v31 = v72;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v72, 1, 1, v30);
  uint64_t v32 = *(uint64_t *)((char *)v73 + *(void *)(*v73 + 240));
  v74[2] = v8;
  v74[3] = v25;
  v74[4] = v67;
  swift_bridgeObjectRetain();
  unint64_t v33 = sub_1C0622614((unint64_t)sub_1C1256274, (uint64_t)v74, v32);
  v52[2] = v8;
  v52[3] = v25;
  FeedJournal.init(entries:)(v33, v78);
  v77[0] = v78[0];
  v77[1] = v78[1];
  v77[2] = v78[2];
  uint64_t v75 = 0;
  __int16 v76 = 256;
  uint64_t v34 = (uint64_t)v59;
  uint64_t v35 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v71, 0, v79, v69, (uint64_t)v59, v58, v57, 0, v56, v53, v27, 0, 1, 0, 1, 0, 1,
          0,
          0,
          v29,
          v31,
          v77,
          (uint64_t)&v75,
          0,
          0,
          0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFE549BC(v72, &qword_1EB886BB0, (uint64_t (*)(uint64_t))v66);
  uint64_t v37 = v63;
  uint64_t v36 = v64;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v68, v64);
  uint64_t v38 = v34;
  uint64_t v39 = v35;
  uint64_t v40 = v62;
  sub_1BFE549BC(v38, (unint64_t *)&qword_1EB871180, v62);
  sub_1BFE549BC(v69, (unint64_t *)&qword_1EB871180, v40);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v71, v61);
  uint64_t v41 = v65;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v54)(v65, 1, 1, AssociatedTypeWitness);
  uint64_t v42 = &v39[*(void *)(*(void *)v39 + 224)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v42, v41, v36);
  swift_endAccess();
  uint64_t v43 = (uint64_t *)((char *)v73 + *(void *)(*v73 + 272));
  swift_beginAccess();
  if (*v43)
  {
    swift_retain();
    uint64_t v44 = sub_1C1253C88(v67);
    swift_release();
  }
  else
  {
    uint64_t v44 = 0;
  }
  uint64_t v45 = (uint64_t *)&v39[*(void *)(*(void *)v39 + 272)];
  swift_beginAccess();
  *uint64_t v45 = v44;
  swift_release();
  if (*v45)
  {
    swift_retain();
    swift_retain();
    swift_weakAssign();
    sub_1BFE17C28();
    swift_release();
    swift_release();
  }
  type metadata accessor for FeedNextCursor();
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = swift_retain();
  sub_1BFE17494(v47);
  uint64_t v48 = *(void *)(v46 + 16);
  swift_retain();
  uint64_t v49 = v46;
  while ((v48 & 0x8000000000000000) == 0)
  {
    swift_retain();
    if (!v48) {
      break;
    }
    v74[17] = *(void *)(v48 + qword_1EB93C680);
    swift_getWitnessTable();
    if ((sub_1C151F15C() & 1) == 0)
    {
      swift_release();
      break;
    }
    char v50 = FeedCursor.reachedEnd.getter();
    swift_release();
    if ((v50 & 1) == 0) {
      break;
    }
    swift_release();
    uint64_t v49 = sub_1BFE1751C();
    swift_release();
    if (!v49) {
      goto LABEL_15;
    }
    uint64_t v48 = *(void *)(v49 + 16);
    swift_retain();
  }
  swift_release();
LABEL_15:
  swift_release();
  return v49;
}

uint64_t sub_1C1252A78()
{
  uint64_t v1 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 272));
  swift_retain();
  while (1)
  {
    swift_beginAccess();
    uint64_t v2 = *v1;
    if (!v2) {
      break;
    }
    swift_retain();
    swift_retain();
    swift_weakAssign();
    sub_1BFE17C28();
    swift_release_n();
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3 < 0) {
      break;
    }
    swift_retain();
    uint64_t result = swift_release();
    if (!v3) {
      return result;
    }
    uint64_t v1 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 272));
  }
  return swift_release();
}

uint64_t sub_1C1252B58()
{
  if ((*(void *)(v0 + 16) & 0x8000000000000000) != 0) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t FeedCursor.identifier.getter()
{
  uint64_t v0 = sub_1BFE402EC();
  swift_bridgeObjectRetain();
  return v0;
}

void FeedCursor.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t FeedCursor.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1252BE4(&qword_1EB93C670, a1);
}

uint64_t FeedCursor.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1252BE4(&qword_1EB93C640, a1);
}

uint64_t sub_1C1252BE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t FeedCursor.totalGroupCount.getter()
{
  return *(void *)(v0 + qword_1EB93C690);
}

uint64_t FeedCursor.openEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.slottedEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.stagedEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.expandEmitters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.emittedGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.skippedSlotCount.getter()
{
  return *(void *)(v0 + qword_1EB93C698);
}

uint64_t FeedCursor.slotOffset.getter()
{
  return *(void *)(v0 + qword_1EB93C638);
}

uint64_t FeedCursor.slotAdjustment.getter()
{
  return *(void *)(v0 + qword_1EB93C648);
}

uint64_t FeedCursor.emitterCursors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursor.feedPool.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 224);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C151FD8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeedCursor.feedContext.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C019CC1C(v1 + *(void *)(*(void *)v1 + 232), a1);
}

uint64_t FeedCursor.feedJournal.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + *(void *)(*(void *)v1 + 240));
  uint64_t v3 = v2[1];
  uint64_t v4 = v2[2];
  *a1 = *v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void FeedCursor.cachePolicy.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 248));
  uint64_t v3 = *v2;
  LOBYTE(v2) = *((unsigned char *)v2 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = (_BYTE)v2;
}

uint64_t FeedCursor.serviceState.getter()
{
  return swift_retain();
}

uint64_t FeedCursor.nextCursor.getter()
{
  return swift_retain();
}

uint64_t FeedCursor.tracker.getter()
{
  return swift_retain();
}

uint64_t FeedCursor.sidecars.getter()
{
  return swift_bridgeObjectRetain();
}

char *FeedCursor.__allocating_init(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:parentCursor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long *a21,unsigned __int8 **a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v28 = sub_1C1255F7C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23,
          a24,
          a25,
          a26);
  uint64_t v29 = *(void *)(v26 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v30 = sub_1C151FD8C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a19, v30);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a3, v29);
  return v28;
}

char *FeedCursor.init(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:parentCursor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long *a21,unsigned __int8 **a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v28 = *v26;
  uint64_t v29 = sub_1C125568C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
          a20,
          a21,
          a22,
          a23,
          a24,
          a25,
          a26);
  uint64_t v30 = *(void *)(v28 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v31 = sub_1C151FD8C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(a19, v31);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a3, v30);
  return v29;
}

uint64_t sub_1C1253198()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48);
  uint64_t v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness) & 1;
}

uint64_t FeedCursor.activeEmitters.getter()
{
  type metadata accessor for FeedGroupEmitter();
  sub_1C151ED5C();
  sub_1C151E3FC();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C151EA0C();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1C151ECAC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedCursor.allEmittedGroups.getter()
{
  return sub_1C12534A8((uint64_t)&qword_1EB93C680, (void (*)(uint64_t))FeedCursor.allEmittedGroups.getter, (void (*)(void, uint64_t, uint64_t))type metadata accessor for FeedCursorGroup);
}

uint64_t sub_1C1253474()
{
  return sub_1C12534A8((uint64_t)&qword_1EB93C740, (void (*)(uint64_t))sub_1C1253474, (void (*)(void, uint64_t, uint64_t))type metadata accessor for FeedDatabaseGroup);
}

uint64_t sub_1C12534A8(uint64_t a1, void (*a2)(uint64_t), void (*a3)(void, uint64_t, uint64_t))
{
  uint64_t v6 = *v3;
  uint64_t v7 = (uint64_t)v3 + *(void *)(*v3 + 272);
  swift_beginAccess();
  if (*(void *)v7
    && (uint64_t v8 = *(void *)(*(void *)v7 + 16), (v8 & 0x8000000000000000) == 0)
    && (uint64_t v9 = swift_retain(), v8))
  {
    a2(v9);
    swift_release();
    uint64_t v11 = *(void *)(v6 + 80);
    uint64_t v10 = *(void *)(v6 + 88);
  }
  else
  {
    uint64_t v11 = *(void *)(v6 + 80);
    uint64_t v10 = *(void *)(v6 + 88);
    a3(0, v11, v10);
    sub_1C151ECBC();
  }
  a3(0, v11, v10);
  uint64_t v12 = sub_1C151ECAC();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C12535DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  sub_1BFE18054(v1, v1);
  uint64_t v2 = *(void *)(v1 - 8);
  swift_allocObject();
  uint64_t v3 = sub_1C151EC6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(void *)(*(void *)v0 + 256), v1);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 272);
  swift_beginAccess();
  if (*(void *)v5
    && (uint64_t v6 = *(void *)(*(void *)v5 + 16), (v6 & 0x8000000000000000) == 0)
    && (uint64_t v7 = swift_retain(), v6))
  {
    sub_1C12535DC(v7);
    swift_release();
  }
  else
  {
    sub_1C151ECBC();
  }
  sub_1BFE94A38(v3);
  uint64_t v8 = sub_1C151ECAC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C125376C@<X0>(uint64_t *a1@<X8>)
{
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v5)
  {
    sub_1C1519D5C();
    swift_release();
    sub_1C1519A4C();
    if (v1)
    {

      swift_release();
LABEL_5:
      uint64_t result = FeedDatabaseGroup.identifier.getter();
      *a1 = result;
      a1[1] = v4;
      return result;
    }
    uint64_t result = swift_release();
    if ((v6 & 0xFE) == 2) {
      goto LABEL_5;
    }
    *a1 = 0;
    a1[1] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1253848(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    type metadata accessor for FeedNextCursor();
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_1BFE17494(v3);
  }
  else
  {
    uint64_t v4 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 272));
    swift_beginAccess();
    uint64_t v2 = *v4;
    swift_retain();
  }
  return v2;
}

uint64_t sub_1C12538F0()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  uint64_t v8;

  type metadata accessor for FeedCursorGroup();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 88);
  uint64_t v2 = swift_checkMetadataState();
  v1(&v8, v2, AssociatedConformanceWitness);
  if ((v8 & 0xFE) != 2) {
    return 0;
  }
  uint64_t v3 = FeedCursorGroup.identifier.getter();
  uint64_t v5 = v4;
  type metadata accessor for FeedCursorTrackerSnapshot();
  v6._countAndFlagsBits = v3;
  v6._object = v5;
  LOBYTE(v3) = FeedCursorTrackerSnapshot.contains(identifier:)(v6);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C1253A78()
{
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  if (v7)
  {
    sub_1C1519D5C();
    swift_release();
    sub_1C1519A4C();
    if (v0)
    {

      swift_release();
    }
    else
    {
      swift_release();
      if ((v8 & 0xFE) != 2) {
        return 0;
      }
    }
    uint64_t v2 = FeedDatabaseGroup.identifier.getter();
    uint64_t v4 = v3;
    type metadata accessor for FeedCursorTrackerSnapshot();
    v5._countAndFlagsBits = v2;
    v5._object = v4;
    Swift::Bool v6 = FeedCursorTrackerSnapshot.contains(identifier:)(v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1C1253B98(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*(void *)(*result + 16))
  {
    uint64_t v2 = v1 + 32;
    sub_1BFE60390(v1 + 32, (uint64_t)v7);
    FeedJournalGroupResult.repooling.getter(&v8);
    sub_1BFE60270((uint64_t)v7);
    if ((v8 & 0xFE) == 2)
    {
      sub_1BFE60390(v2, (uint64_t)v7);
      uint64_t v3 = v7[0];
      uint64_t v4 = (void *)v7[1];
      swift_bridgeObjectRetain();
      sub_1BFE60270((uint64_t)v7);
      type metadata accessor for FeedCursorTrackerSnapshot();
      v5._countAndFlagsBits = v3;
      v5._object = v4;
      Swift::Bool v6 = FeedCursorTrackerSnapshot.contains(identifier:)(v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
    return (uint64_t *)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1253C88(uint64_t a1)
{
  if ((*(void *)(v1 + 16) & 0x8000000000000000) != 0)
  {
    return swift_retain();
  }
  else
  {
    swift_retain();
    uint64_t v3 = sub_1C125209C(a1);
    swift_release();
    return v3;
  }
}

uint64_t sub_1C1253D00(uint64_t *a1, uint64_t *a2)
{
  return static FeedCursor.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C1253D0C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1C1253D4C(a1);
  return v2;
}

uint64_t sub_1C1253D4C(uint64_t a1)
{
  swift_weakInit();
  *(void *)(v1 + 16) = a1 | 0x8000000000000000;
  swift_weakLoadStrong();
  swift_weakAssign();
  swift_release();
  return v1;
}

void *sub_1C1253DB0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  char v10 = *((unsigned char *)v0 + 32);
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = *(void *)(v1 + 80);
  v7[3] = *(void *)(v1 + 88);
  v7[4] = v6;
  v7[5] = v5;
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  char v8 = sub_1C1256298(v2, v3, &v10, v4, 0, (uint64_t)&unk_1EA1AD5C0, (uint64_t)v7);
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1C1253EF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 < 0)
  {
    uint64_t v6 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    sub_1C1256608(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    uint64_t v8 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 32) = 0x656E6961746E6F63;
    *(void *)(inited + 40) = 0xE900000000000072;
    *(void *)(inited + 48) = 0x727543636E797361;
    *(void *)(inited + 56) = 0xEB00000000726F73;
    *(void *)(inited + 72) = v8;
    *(void *)(inited + 80) = 1684957547;
    unint64_t v9 = 0xE400000000000000;
    *(void *)(inited + 88) = 0xE400000000000000;
    uint64_t v10 = 1852138835;
    uint64_t v4 = inited;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        goto LABEL_11;
      case 2:
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x6E657A6F7246;
        goto LABEL_11;
      case 3:
        unint64_t v9 = 0xEB00000000646565;
        uint64_t v10 = 0x4620666F20646E45;
        goto LABEL_11;
      case 4:
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x646568636143;
        goto LABEL_11;
      case 5:
        unint64_t v9 = 0xE800000000000000;
        uint64_t v11 = 0x6C6F6F706552;
        goto LABEL_10;
      case 6:
        unint64_t v9 = 0xE800000000000000;
        uint64_t v11 = 0x646E61707845;
LABEL_10:
        uint64_t v10 = v11 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
        goto LABEL_11;
      case 7:
        *(void *)(inited + 120) = v8;
        *(void *)(inited + 96) = 0x6E776F6E6B6E55;
        unint64_t v9 = 0xE700000000000000;
        goto LABEL_12;
      default:
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x657669746341;
LABEL_11:
        *(void *)(inited + 120) = v8;
        *(void *)(inited + 96) = v10;
LABEL_12:
        *(void *)(inited + 104) = v9;
        break;
    }
  }
  else
  {
    sub_1C1256608(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
    uint64_t v4 = swift_initStackObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C1527210;
    *(void *)(v4 + 32) = 0x656E6961746E6F63;
    *(void *)(v4 + 40) = 0xE900000000000072;
    uint64_t v5 = MEMORY[0x1E4FBB1A0];
    *(void *)(v4 + 48) = 0x726F73727563;
    *(void *)(v4 + 56) = 0xE600000000000000;
    *(void *)(v4 + 72) = v5;
    *(void *)(v4 + 80) = 1684957547;
    *(void *)(v4 + 88) = 0xE400000000000000;
    LOBYTE(v5) = *(unsigned char *)(a1 + 32);
    *(void *)(v4 + 120) = &type metadata for FeedCursorKind;
    *(unsigned char *)(v4 + 96) = v5;
  }
  swift_retain();
  sub_1BFF99224(v4);
  type metadata accessor for FeedNextCursor();
  a2[3] = sub_1C151870C();
  a2[4] = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_0(a2);
  sub_1C15186FC();
  return swift_release();
}

uint64_t sub_1C1254218@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1253EF4(*v1, a1);
}

uint64_t sub_1C1254228()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t FeedNextCursor.deinit()
{
  swift_release();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1C12542A8()
{
  uint64_t v0 = sub_1C12555F8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FeedNextCursor.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1BFE1751C();
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C1256608(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
    *(void *)(inited + 32) = 0x696669746E656469;
    *(void *)(inited + 40) = 0xEA00000000007265;
    uint64_t v7 = *(void *)((v1[2] & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v8 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = *(void *)((v1[2] & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    *(void *)(inited + 56) = v7;
    *(void *)(inited + 72) = v8;
    *(void *)(inited + 80) = 0x656E6961746E6F63;
    *(void *)(inited + 88) = 0xE900000000000072;
    uint64_t v9 = v1[2];
    uint64_t v10 = type metadata accessor for FeedNextCursor.Container();
    *(void *)(inited + 96) = v9;
    *(void *)(inited + 120) = v10;
    *(void *)(inited + 128) = 0x737275437478656ELL;
    *(void *)(inited + 168) = v3;
    *(void *)(inited + 136) = 0xEA0000000000726FLL;
    *(void *)(inited + 144) = v5;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BFF99224(inited);
    a1[3] = sub_1C151870C();
    a1[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_0(a1);
    sub_1C15186FC();
    return swift_release();
  }
  else
  {
    sub_1C1256608(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1527210;
    *(void *)(v12 + 32) = 0x696669746E656469;
    *(void *)(v12 + 40) = 0xEA00000000007265;
    uint64_t v13 = *(void *)((v1[2] & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v14 = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 48) = *(void *)((v1[2] & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    *(void *)(v12 + 56) = v13;
    *(void *)(v12 + 72) = v14;
    *(void *)(v12 + 80) = 0x656E6961746E6F63;
    *(void *)(v12 + 88) = 0xE900000000000072;
    uint64_t v15 = v1[2];
    *(void *)(v12 + 120) = type metadata accessor for FeedNextCursor.Container();
    *(void *)(v12 + 96) = v15;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BFF99224(v12);
    a1[3] = sub_1C151870C();
    a1[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_0(a1);
    return sub_1C15186FC();
  }
}

uint64_t sub_1C12545AC@<X0>(uint64_t *a1@<X8>)
{
  return FeedNextCursor.shortDescription.getter(a1);
}

uint64_t sub_1C12545D0()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t sub_1C1254624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_1C1256608(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v20 - v15;
  uint64_t v17 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  void v18[3] = 0;
  v18[4] = a5;
  v18[5] = a6;
  v18[6] = a1;
  v18[7] = a2;
  v18[8] = a3;
  v18[9] = a4;
  type metadata accessor for FeedCursor();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C1365330((uint64_t)v16, (uint64_t)&unk_1EA1AD5A0, (uint64_t)v18);
  *a7 = result;
  return result;
}

uint64_t sub_1C12547A4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_1C0120D54;
  return v12(a6, a7);
}

uint64_t sub_1C1254894()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = *(void *)(v1 + 80);
  v3[3] = *(void *)(v1 + 88);
  v3[4] = v2;
  sub_1C1518CFC();
  swift_release();
  return swift_release();
}

uint64_t sub_1C125498C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1256608(0, &qword_1EB882700, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = sub_1C151EE9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = v10;
  v13[7] = v12;
  swift_retain();
  sub_1C0C833AC((uint64_t)v9, (uint64_t)&unk_1EA1AD5B0, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1C1254B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a5;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 56) = v7;
  uint64_t v8 = type metadata accessor for FeedCursor();
  unint64_t v9 = sub_1C017F734();
  *uint64_t v7 = v5;
  v7[1] = sub_1C1254C1C;
  uint64_t v10 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187D90](v5 + 40, a4, v8, v9, v10);
}

uint64_t sub_1C1254C1C()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_1C10B1BD8;
  }
  else
  {
    uint64_t v1 = sub_1C1254D34;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C1254D34()
{
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_retain();
  sub_1C1255608();
  swift_release();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C1254DD8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a5;
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1256608(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  v5[6] = swift_task_alloc();
  v5[7] = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C151FD8C();
  v5[8] = v10;
  v5[9] = *(void *)(v10 - 8);
  v5[10] = swift_task_alloc();
  sub_1C1256608(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v9);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  uint64_t v11 = sub_1C151FD8C();
  v5[13] = v11;
  v5[14] = *(void *)(v11 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v12 = (void *)swift_task_alloc();
  v5[16] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_1C125507C;
  return v14(a1, a2);
}

uint64_t sub_1C125507C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C12551FC, 0, 0);
  }
}

uint64_t sub_1C12551FC()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[15];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[5];
  sub_1BFE1764C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  unsigned __int8 v27 = 7;
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v3, 1, 1, v9);
  v10(v4, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v11 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  memset(v28, 0, sizeof(v28));
  uint64_t v29 = 0;
  __int16 v30 = 256;
  uint64_t v12 = (void *)(v1 + *(void *)(*(void *)v1 + 272));
  swift_beginAccess();
  if (*v12)
  {
    swift_retain();
    uint64_t v13 = sub_1BFE17584();
    swift_release();
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v0[14];
  uint64_t v15 = v0[15];
  uint64_t v16 = v0[12];
  uint64_t v26 = v0[13];
  uint64_t v17 = v0[10];
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[9];
  uint64_t v24 = v0[8];
  uint64_t v20 = v0[6];
  uint64_t v25 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v15, 0, &v27, v16, v18, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          v17,
          v20,
          v28,
          (uint64_t)&v29,
          0,
          0,
          v13);
  swift_release();
  swift_release();
  swift_release();
  sub_1BFE549BC(v20, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v24);
  __n128 v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFE549BC(v18, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1BFE549BC(v16, (unint64_t *)&qword_1EB871180, v21);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(char *))v0[1];
  return v22(v25);
}

uint64_t sub_1C1255584()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1C12555C4()
{
  sub_1C1255584();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12555F8()
{
  return *(void *)((*(void *)(v0 + 16) & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
}

uint64_t sub_1C1255608()
{
  return sub_1C1517E8C();
}

char *sub_1C125568C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long *a21,unsigned __int8 **a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unsigned __int8 v27 = v26;
  uint64_t v87 = a8;
  uint64_t v95 = a7;
  uint64_t v96 = a6;
  uint64_t v79 = a5;
  uint64_t v69 = a4;
  uint64_t v62 = a3;
  uint64_t v76 = a2;
  uint64_t v75 = a1;
  uint64_t v94 = a26;
  uint64_t v80 = a25;
  uint64_t v74 = a23;
  uint64_t v93 = a24;
  uint64_t v73 = a20;
  uint64_t v91 = a18;
  uint64_t v92 = a19;
  uint64_t v89 = a16;
  uint64_t v90 = a17;
  uint64_t v88 = a15;
  uint64_t v85 = a13;
  uint64_t v86 = a14;
  uint64_t v83 = a11;
  uint64_t v84 = a12;
  uint64_t v81 = a9;
  uint64_t v82 = a10;
  uint64_t v28 = *(void **)v26;
  uint64_t v29 = v28[11];
  uint64_t v30 = v28[10];
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v65 = &v60[-v31];
  uint64_t v63 = swift_checkMetadataState();
  uint64_t v64 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  unint64_t v33 = &v60[-v32];
  uint64_t v34 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v34 - 8);
  int v61 = *v79;
  uint64_t v77 = *((void *)a21 + 2);
  uint64_t v79 = *a22;
  int v78 = *((unsigned __int8 *)a22 + 8);
  uint64_t v35 = &v27[v28[28]];
  uint64_t v66 = v35;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);
  long long v72 = *a21;
  v36(v35, 1, 1, v67);
  *(void *)&v27[*(void *)(*(void *)v27 + 272)] = 0;
  uint64_t v37 = *(void *)(*(void *)v27 + 296);
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  *(void *)&v27[v37] = sub_1C1517EBC();
  swift_weakInit();
  uint64_t v38 = v76;
  *((void *)v27 + 2) = v75;
  *((void *)v27 + 3) = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(&v27[*(void *)(*(void *)v27 + 256)], v62, v30);
  *(void *)&v27[*(void *)(*(void *)v27 + 264)] = v69;
  v27[32] = v61;
  uint64_t v39 = &v27[qword_1EB93C670];
  uint64_t v40 = sub_1C151631C();
  uint64_t v75 = *(void *)(v40 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  v41(v39, v96, v40);
  uint64_t v76 = v40;
  v41(&v27[qword_1EB93C640], v95, v40);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v29 + 64);
  swift_retain();
  uint64_t v43 = v29;
  uint64_t v44 = v73;
  v42(v30, v43);
  uint64_t v45 = v74;
  uint64_t v46 = v65;
  uint64_t v47 = v63;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v63, AssociatedConformanceWitness);
  (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v33, v47);
  uint64_t v48 = v80;
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t v50 = swift_getAssociatedConformanceWitness();
  uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
  (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v46, v49);
  *(void *)&v27[qword_1EB93C690] = v51;
  *(void *)&v27[qword_1EB93C678] = v87;
  *(void *)&v27[qword_1EB93C688] = v81;
  *(void *)&v27[qword_1EB93C738] = v82;
  *(void *)&v27[qword_1EB93C840] = v83;
  *(void *)&v27[qword_1EB93C680] = v84;
  *(void *)&v27[qword_1EB93C740] = v85;
  *(void *)&v27[qword_1EB93C698] = v86;
  *(void *)&v27[qword_1EB93C638] = v88;
  *(void *)&v27[qword_1EB93C648] = v89;
  *(void *)&v27[qword_1EB93CB78] = v90;
  *(void *)&v27[qword_1EB93CBC0] = v91;
  uint64_t v52 = v66;
  swift_beginAccess();
  uint64_t v53 = sub_1C151FD8C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 24))(v52, v92, v53);
  swift_endAccess();
  sub_1C019CC1C(v44, (uint64_t)&v27[*(void *)(*(void *)v27 + 232)]);
  long long v54 = &v27[*(void *)(*(void *)v27 + 240)];
  *(_OWORD *)long long v54 = v72;
  *((void *)v54 + 2) = v77;
  uint64_t v55 = &v27[*(void *)(*(void *)v27 + 248)];
  *(void *)uint64_t v55 = v79;
  v55[8] = v78;
  *(void *)&v27[*(void *)(*(void *)v27 + 280)] = v45;
  *(void *)&v27[*(void *)(*(void *)v27 + 288)] = v93;
  uint64_t v56 = &v27[*(void *)(*(void *)v27 + 272)];
  swift_beginAccess();
  *(void *)uint64_t v56 = v48;
  swift_retain();
  swift_retain();
  swift_release();
  swift_retain();
  sub_1C1255608();
  swift_release();
  if (v48)
  {
    swift_retain();
    swift_retain();
    swift_weakAssign();
    sub_1BFE17C28();
    swift_release();
    swift_release_n();
  }
  swift_release();
  swift_release();
  sub_1C019CB28(v44);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
  uint64_t v58 = v76;
  v57(v95, v76);
  v57(v96, v58);
  return v27;
}

char *sub_1C1255F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long *a21,unsigned __int8 **a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1C125568C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1C1256094()
{
  return sub_1C1253198() & 1;
}

uint64_t type metadata accessor for FeedNextCursor.Container()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C12560CC()
{
  return swift_getWitnessTable();
}

uint64_t method lookup function for FeedCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursor);
}

uint64_t dispatch thunk of FeedCursor.__allocating_init(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:emitterOutputs:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:parentCursor:)()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t method lookup function for FeedNextCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedNextCursor);
}

uint64_t sub_1C1256184()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedAsyncCursor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C1256210()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C125622C()
{
  return sub_1C12538F0() & 1;
}

uint64_t sub_1C1256250()
{
  return sub_1C1253A78() & 1;
}

unint64_t sub_1C1256274(uint64_t *a1)
{
  return (unint64_t)sub_1C1253B98(a1) & 1;
}

void *sub_1C1256298(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  uint64_t v16 = sub_1C151804C();
  MEMORY[0x1F4188790](v16 - 8);
  char v17 = *a3;
  swift_weakInit();
  v8[2] = a1;
  v8[3] = a2;
  *((unsigned char *)v8 + 32) = v17;
  v8[5] = a4;
  v8[7] = a6;
  v8[8] = a7;
  uint64_t v18 = *(void *)(v15 + 80);
  uint64_t v19 = *(void *)(v15 + 88);
  type metadata accessor for FeedCursor();
  sub_1C017F734();
  sub_1C151EEBC();
  sub_1C1518D2C();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v18;
  v20[3] = v19;
  v20[4] = a6;
  v20[5] = a7;
  v20[6] = a1;
  v20[7] = a2;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BFDA5AB8();
  v8[6] = sub_1C1518D0C();
  swift_weakAssign();
  return v8;
}

uint64_t sub_1C1256460(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  char v13 = *a3;
  swift_weakInit();
  type metadata accessor for FeedAsyncCursor();
  char v15 = v13;
  swift_allocObject();
  *(void *)(v7 + 16) = (unint64_t)sub_1C1256298(a1, a2, &v15, a4, 0, a5, a6) | 0x8000000000000000;
  return v7;
}

uint64_t sub_1C125653C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C1256460(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C12565B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12565F8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1254624(v1[4], v1[5], v1[6], v1[7], v1[2], v1[3], a1);
}

void sub_1C1256608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C125666C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12566B4(uint64_t a1)
{
  uint64_t v4 = (int *)v1[6];
  uint64_t v6 = v1[8];
  uint64_t v5 = v1[9];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1BFC542F4;
  uint64_t v7[2] = a1;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  unint64_t v8 = (void *)swift_task_alloc();
  v7[3] = v8;
  *unint64_t v8 = v7;
  v8[1] = sub_1C0120D54;
  return v10(v6, v5);
}

uint64_t sub_1C12567EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C125376C(a1);
}

uint64_t sub_1C1256808()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C1256840()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1256878(uint64_t *a1)
{
  return sub_1C125498C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C1256884()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12568CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[6];
  uint64_t v6 = v1[7];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1BFC542F4;
  return sub_1C1254B30(a1, v4, v5, v7, v6);
}

uint64_t sub_1C12569A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12569D8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  unint64_t v8 = (int *)v2[4];
  uint64_t v7 = v2[5];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_1C014AF5C;
  return sub_1C1254DD8(a1, a2, v8, v7, v6);
}

uint64_t FormatAuxiliaryNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatAuxiliaryNode.options.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatAuxiliaryNode.bind(binder:context:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v85 = a1;
  uint64_t v4 = type metadata accessor for FormatOption();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v69 - v9;
  uint64_t v11 = sub_1C0EC774C();
  if (v2)
  {
    swift_beginAccess();
    if (*(unsigned char *)(v1 + 56) == 1) {
      swift_willThrow();
    }
    else {
  }
    }
  else
  {
    uint64_t v12 = v11;
    uint64_t v84 = v5;
    uint64_t v97 = v10;
    uint64_t v83 = v4;
    char v13 = (uint64_t *)(v11 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
    int v14 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
    if (v14 == 255 || (v14 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA964((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      uint64_t v87 = 0;
      uint64_t v17 = *v13;
      uint64_t v16 = v13[1];
      uint64_t v18 = v13[3];
      uint64_t v77 = v13[2];
      uint64_t v20 = v13[4];
      uint64_t v19 = v13[5];
      uint64_t v79 = v20;
      uint64_t v80 = v19;
      swift_beginAccess();
      uint64_t v21 = *(void *)(v1 + 16);
      uint64_t v22 = *(void *)(v1 + 24);
      uint64_t v70 = (uint64_t *)(v3 + 48);
      uint64_t v71 = v21;
      swift_beginAccess();
      uint64_t v23 = v17;
      uint64_t v81 = v3;
      uint64_t v82 = v18;
      uint64_t v24 = *(void *)(v3 + 48);
      int64_t v25 = *(void *)(v24 + 16);
      uint64_t v76 = v7;
      uint64_t v73 = v16;
      uint64_t v74 = v23;
      uint64_t v72 = v22;
      uint64_t v78 = v12;
      int v75 = v14;
      if (v25)
      {
        uint64_t v26 = v23;
        uint64_t v27 = MEMORY[0x1E4FBC860];
        swift_retain();
        uint64_t v28 = v77;
        sub_1BFF19758(v26, v16, v77, v18, v79, v80, v14);
        *(void *)&long long v88 = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF9524C(0, v25, 0);
        uint64_t v29 = v24;
        uint64_t v30 = v88;
        uint64_t v31 = *(unsigned __int8 *)(v84 + 80);
        v69[1] = v29;
        uint64_t v32 = v29 + ((v31 + 32) & ~v31);
        uint64_t v86 = *(void *)(v84 + 72);
        uint64_t v33 = v28;
        do
        {
          uint64_t v34 = (uint64_t)v97;
          sub_1C019FFF0(v32, (uint64_t)v97);
          uint64_t v35 = swift_allocBox();
          sub_1C00AB068(v34, v36);
          *(void *)&long long v88 = v30;
          unint64_t v38 = *(void *)(v30 + 16);
          unint64_t v37 = *(void *)(v30 + 24);
          if (v38 >= v37 >> 1)
          {
            sub_1BFF9524C(v37 > 1, v38 + 1, 1);
            uint64_t v30 = v88;
          }
          *(void *)(v30 + 16) = v38 + 1;
          *(void *)(v30 + 8 * v38 + 32) = v35 | 0x6000000000000000;
          v32 += v86;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
        uint64_t v7 = v76;
        uint64_t v18 = v82;
      }
      else
      {
        uint64_t v39 = v23;
        swift_retain();
        uint64_t v40 = v77;
        sub_1BFF19758(v39, v16, v77, v18, v79, v80, v14);
        swift_bridgeObjectRetain();
        uint64_t v30 = MEMORY[0x1E4FBC860];
        uint64_t v33 = v40;
      }
      uint64_t v41 = (uint64_t)v97;
      int64_t v42 = *(void *)(v18 + 16);
      uint64_t v43 = MEMORY[0x1E4FBC860];
      if (v42)
      {
        *(void *)&long long v88 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1BFF9524C(0, v42, 0);
        uint64_t v43 = v88;
        uint64_t v44 = v18 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
        uint64_t v86 = *(void *)(v84 + 72);
        do
        {
          sub_1C019FFF0(v44, v41);
          uint64_t v45 = swift_allocBox();
          sub_1C00AB068(v41, v46);
          *(void *)&long long v88 = v43;
          unint64_t v48 = *(void *)(v43 + 16);
          unint64_t v47 = *(void *)(v43 + 24);
          if (v48 >= v47 >> 1)
          {
            sub_1BFF9524C(v47 > 1, v48 + 1, 1);
            uint64_t v43 = v88;
          }
          *(void *)(v43 + 16) = v48 + 1;
          *(void *)(v43 + 8 * v48 + 32) = v45 | 0x2000000000000000;
          v44 += v86;
          --v42;
          uint64_t v41 = (uint64_t)v97;
        }
        while (v42);
        uint64_t v18 = v82;
        swift_bridgeObjectRelease();
        uint64_t v7 = v76;
        uint64_t v33 = v77;
      }
      *(void *)&long long v88 = v30;
      sub_1BFF1B81C(v43);
      uint64_t v49 = v88;
      uint64_t v50 = v81;
      swift_beginAccess();
      uint64_t v51 = *(void *)(v50 + 40);
      memset(v96, 0, sizeof(v96));
      uint64_t v95 = 0;
      memset(v94, 0, sizeof(v94));
      memset(v93, 0, sizeof(v93));
      long long v88 = 0uLL;
      *(void *)uint64_t v89 = 1;
      *(_OWORD *)&v89[8] = 0u;
      long long v90 = 0u;
      long long v91 = 0u;
      uint64_t v92 = 0;
      swift_bridgeObjectRetain();
      uint64_t v97 = (char *)sub_1C0EC66B4(v71, v72, v49, v51, 0, 0, 0, MEMORY[0x1E4FBC860], (uint64_t *)v96, (uint64_t)v94, v93, (unint64_t *)&v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF1F8F4((uint64_t)v94, (uint64_t (*)(void))sub_1C0C397C8);
      uint64_t v53 = v73;
      uint64_t v52 = v74;
      *(void *)&long long v88 = v74;
      *((void *)&v88 + 1) = v73;
      *(void *)uint64_t v89 = v33;
      *(void *)&v89[8] = v18;
      uint64_t v54 = v79;
      uint64_t v55 = v80;
      *(void *)&v89[16] = v79;
      *(void *)&long long v90 = v80;
      uint64_t v56 = v33;
      uint64_t v57 = v85;
      sub_1C0461A24((uint64_t *)&v88);
      sub_1BFE18B7C(v52, v53, v56, v82, v54, v55, v75);
      uint64_t v58 = v81;
      swift_beginAccess();
      uint64_t v59 = *(void *)(v58 + 32);
      uint64_t v60 = *(void *)(v59 + 16);
      if (v60)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v86 = v59;
        int v61 = (void *)(v59 + 64);
        uint64_t v62 = (uint64_t)v97;
        while (1)
        {
          uint64_t v63 = *v61;
          long long v88 = *((_OWORD *)v61 - 2);
          *(_OWORD *)uint64_t v89 = *((_OWORD *)v61 - 1);
          *(void *)&v89[16] = v63;
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v64 = v87;
          FormatSourceMapNode.bind(binder:context:)(v57, v62);
          uint64_t v87 = v64;
          if (v64) {
            break;
          }
          v61 += 5;
          swift_bridgeObjectRelease();
          swift_release();
          if (!--v60)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v7 = v76;
            goto LABEL_29;
          }
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
LABEL_29:
        uint64_t v65 = *(void *)(*v70 + 16);
        uint64_t v66 = v87;
        if (v65)
        {
          uint64_t v67 = *v70 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
          uint64_t v68 = *(void *)(v84 + 72);
          uint64_t v86 = *v70;
          swift_bridgeObjectRetain_n();
          while (1)
          {
            sub_1C019FFF0(v67, (uint64_t)v7);
            *(void *)&long long v88 = *((void *)v7 + 2);
            swift_retain();
            FormatOptionValue.bind(binder:context:)(v57, (uint64_t)v97);
            if (v66) {
              break;
            }
            swift_release();
            sub_1BFF1F8F4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
            v67 += v68;
            if (!--v65)
            {
              swift_release();
              swift_bridgeObjectRelease_n();
              goto LABEL_36;
            }
          }
          swift_release();
          sub_1BFF1F8F4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_release();
LABEL_36:
          swift_release();
        }
      }
    }
    swift_release();
  }
}

uint64_t FormatAuxiliaryNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAuxiliaryNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatAuxiliaryNode.throws.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatAuxiliaryNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.options.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAuxiliaryNode.options.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.throws.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatAuxiliaryNode.throws.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAuxiliaryNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatAuxiliaryNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1257770(void *a1)
{
  return FormatAuxiliaryNode.encode(to:)(a1);
}

uint64_t sub_1C1257794(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatAuxiliaryNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void sub_1C12577A0(uint64_t a1)
{
}

uint64_t sub_1C12577C4(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = a2 + 48;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1C0F494D0(v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1C05550B8(a1, v12);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(*(void *)v9 + 16);
    if (v13)
    {
      uint64_t v14 = *(void *)v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v15 = *(void *)(v6 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1C019FFF0(v14, (uint64_t)v8);
        uint64_t v17 = *((void *)v8 + 2);
        swift_retain();
        sub_1C05B8C90(a1);
        swift_release();
        sub_1BFF1F8F4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v14 += v15;
        --v13;
      }
      while (v13);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1C12579CC(uint64_t a1)
{
  uint64_t v3 = *v1;
  memset(v5, 0, sizeof(v5));
  uint64_t v6 = 0;
  int v7 = 0;
  __int16 v8 = -16384;
  swift_retain();
  sub_1C0F4B418((uint64_t)v5, a1, v3);
  return swift_release();
}

uint64_t sub_1C1257A38(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFBA964(&qword_1EA1AD5C8, a2, (void (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1257A90(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFFBA964(&qword_1EB888A68, a2, (void (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode);
  a1[2] = sub_1BFFBA964(&qword_1EB866848, v3, (void (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode);
  uint64_t result = sub_1BFFBA964(&qword_1EA1AD5D0, v4, (void (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C1257B3C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFFBA964(&qword_1EA1AD5D8, a2, (void (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1257B94@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1257BE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1257C34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1257C84@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1257CD4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 56);
  return result;
}

uint64_t sub_1C1257D1C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 56) = v2;
  return result;
}

uint64_t method lookup function for FormatAuxiliaryNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAuxiliaryNode);
}

void sub_1C1257D78(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ColorPalette;
  *(void *)(a1 + 32) = &protocol witness table for ColorPalette;
}

uint64_t sub_1C1257D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1257DA4);
}

uint64_t sub_1C1257DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    __int16 v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C1257E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1257E78);
}

uint64_t sub_1C1257E78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C1515FDC();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataServiceBatchRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB868B60);
}

uint64_t *sub_1C1257F54(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    __int16 v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    uint64_t v9 = a3[7];
    unint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    if (*(uint64_t *)((char *)a2 + v9 + 24))
    {
      uint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      sub_1BFE95820(*v11, v13);
      *unint64_t v10 = v12;
      v10[1] = v13;
      uint64_t v14 = v11[3];
      v10[2] = v11[2];
      v10[3] = v14;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v16 = *((_OWORD *)v11 + 1);
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v16;
    }
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C12580B8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1C1515FDC();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  uint64_t v6 = (uint64_t *)(a1 + a2[7]);
  if (v6[3])
  {
    sub_1BFE95664(*v6, v6[1]);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1258194(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  uint64_t v8 = a3[7];
  uint64_t v9 = (uint64_t *)(a1 + v8);
  unint64_t v10 = (uint64_t *)(a2 + v8);
  if (*(void *)(a2 + v8 + 24))
  {
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_1BFE95820(*v10, v12);
    uint64_t *v9 = v11;
    v9[1] = v12;
    uint64_t v13 = v10[3];
    v9[2] = v10[2];
    v9[3] = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
  }
  uint64_t v15 = a3[8];
  long long v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *long long v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C12582A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  uint64_t v8 = a3[7];
  uint64_t v9 = (uint64_t *)(a1 + v8);
  unint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *(void *)(a1 + v8 + 24);
  uint64_t v12 = *(void *)(a2 + v8 + 24);
  if (v11)
  {
    if (v12)
    {
      uint64_t v13 = *v10;
      unint64_t v14 = v10[1];
      sub_1BFE95820(*v10, v14);
      uint64_t v15 = *v9;
      unint64_t v16 = v9[1];
      uint64_t *v9 = v13;
      v9[1] = v14;
      sub_1BFE95664(v15, v16);
      v9[2] = v10[2];
      v9[3] = v10[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C1259D18((uint64_t)v9, (uint64_t (*)(void))sub_1C125844C);
      long long v19 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v19;
    }
  }
  else if (v12)
  {
    uint64_t v17 = *v10;
    unint64_t v18 = v10[1];
    sub_1BFE95820(*v10, v18);
    uint64_t *v9 = v17;
    v9[1] = v18;
    v9[2] = v10[2];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v20;
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  void *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C125844C()
{
  if (!qword_1EA1AD5E0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AD5E0);
    }
  }
}

uint64_t sub_1C12584B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  unint64_t v10 = (_OWORD *)(a1 + v8);
  uint64_t v11 = (_OWORD *)(a2 + v8);
  long long v12 = v11[1];
  *unint64_t v10 = *v11;
  v10[1] = v12;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_1C1258588(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  if (!*(void *)(a1 + v8 + 24)) {
    goto LABEL_5;
  }
  if (!*(void *)(v10 + 24))
  {
    sub_1C1259D18(v9, (uint64_t (*)(void))sub_1C125844C);
LABEL_5:
    long long v14 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v14;
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)v9;
  unint64_t v12 = *(void *)(v9 + 8);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  sub_1BFE95664(v11, v12);
  uint64_t v13 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v13;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v15 = a3[8];
  unint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *unint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C12586BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C12586D0);
}

uint64_t sub_1C12586D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C1258794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C12587A8);
}

uint64_t sub_1C12587A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C1515FDC();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataServiceURLRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB868330);
}

uint64_t sub_1C1258888()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C125892C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1517F3C();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1C1258A9C();
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

void sub_1C1258A9C()
{
  if (!qword_1EB882B40)
  {
    sub_1C1517F3C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB882B40);
    }
  }
}

uint64_t sub_1C1258AF4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1517F3C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1C1258BC4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C1517F3C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1C1258A9C();
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1C1258CE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1517F3C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C1258A9C();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1C1258E78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1517F3C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C1258A9C();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1C1258F88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1517F3C();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C1258A9C();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C125910C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1259120);
}

uint64_t sub_1C1259120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C1258A9C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C12591D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C12591E4);
}

uint64_t sub_1C12591E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C1258A9C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataServiceResourceRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB8697E0);
}

void sub_1C12592AC()
{
}

uint64_t *sub_1C12592B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      uint64_t v11 = (char *)a1 + v10;
      int v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1C1517F3C();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        sub_1C1258A9C();
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      uint64_t v17 = sub_1C1515FDC();
      uint64_t v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16);
      v18(a1, a2, v17);
      uint64_t v19 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v18((uint64_t *)((char *)a1 + v19[5]), (uint64_t *)((char *)a2 + v19[5]), v17);
      v18((uint64_t *)((char *)a1 + v19[6]), (uint64_t *)((char *)a2 + v19[6]), v17);
      uint64_t v20 = v19[7];
      uint64_t v21 = (uint64_t *)((char *)a1 + v20);
      uint64_t v22 = (uint64_t *)((char *)a2 + v20);
      if (*(uint64_t *)((char *)a2 + v20 + 24))
      {
        uint64_t v23 = *v22;
        unint64_t v24 = v22[1];
        sub_1BFE95820(*v22, v24);
        *uint64_t v21 = v23;
        v21[1] = v24;
        uint64_t v25 = v22[3];
        v21[2] = v22[2];
        void v21[3] = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v26 = *((_OWORD *)v22 + 1);
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v26;
      }
      uint64_t v27 = v19[8];
      uint64_t v28 = (uint64_t *)((char *)a1 + v27);
      uint64_t v29 = (uint64_t *)((char *)a2 + v27);
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C12595A4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      uint64_t v8 = sub_1C1517F3C();
      uint64_t v13 = *(void *)(v8 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v7, 1, v8);
      if (result) {
        return result;
      }
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      uint64_t v12 = v7;
      uint64_t v11 = v8;
      break;
    case 1:
      uint64_t v9 = sub_1C1515FDC();
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      uint64_t v11 = v9;
      uint64_t v12 = a1;
      break;
    case 0:
      uint64_t v3 = sub_1C1515FDC();
      unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      int v5 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v4(a1 + v5[5], v3);
      v4(a1 + v5[6], v3);
      uint64_t v6 = (uint64_t *)(a1 + v5[7]);
      if (v6[3])
      {
        sub_1BFE95664(*v6, v6[1]);
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
  return v10(v12, v11);
}

void *sub_1C12597A4(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C1517F3C();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1C1258A9C();
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_1C1515FDC();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    uint64_t v14 = sub_1C1515FDC();
    uint64_t v15 = *(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(a1, a2, v14);
    uint64_t v16 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
    v15((void *)((char *)a1 + v16[5]), (void *)((char *)a2 + v16[5]), v14);
    v15((void *)((char *)a1 + v16[6]), (void *)((char *)a2 + v16[6]), v14);
    uint64_t v17 = v16[7];
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    if (*(void *)((char *)a2 + v17 + 24))
    {
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
      sub_1BFE95820(*v19, v21);
      *uint64_t v18 = v20;
      v18[1] = v21;
      uint64_t v22 = v19[3];
      v18[2] = v19[2];
      void v18[3] = v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
    }
    uint64_t v24 = v16[8];
    uint64_t v25 = (void *)((char *)a1 + v24);
    long long v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C1259A40(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C1259D18((uint64_t)a1, type metadata accessor for SportsDataServiceRequest);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1C1517F3C();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        sub_1C1258A9C();
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_1C1515FDC();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      uint64_t v13 = sub_1C1515FDC();
      uint64_t v14 = *(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(a1, a2, v13);
      uint64_t v15 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v14((void *)((char *)a1 + v15[5]), (void *)((char *)a2 + v15[5]), v13);
      v14((void *)((char *)a1 + v15[6]), (void *)((char *)a2 + v15[6]), v13);
      uint64_t v16 = v15[7];
      uint64_t v17 = (void *)((char *)a1 + v16);
      uint64_t v18 = (void *)((char *)a2 + v16);
      if (*(void *)((char *)a2 + v16 + 24))
      {
        uint64_t v19 = *v18;
        unint64_t v20 = v18[1];
        sub_1BFE95820(*v18, v20);
        *uint64_t v17 = v19;
        v17[1] = v20;
        v17[2] = v18[2];
        v17[3] = v18[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v21 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v21;
      }
      uint64_t v22 = v15[8];
      long long v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (void *)((char *)a2 + v22);
      *long long v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C1259D18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SportsDataServiceRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB867770);
}

_OWORD *sub_1C1259D98(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1517F3C();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1C1258A9C();
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_1C1515FDC();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  }
  else
  {
    uint64_t v12 = sub_1C1515FDC();
    uint64_t v13 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(a1, a2, v12);
    uint64_t v14 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
    v13((_OWORD *)((char *)a1 + v14[5]), (_OWORD *)((char *)a2 + v14[5]), v12);
    v13((_OWORD *)((char *)a1 + v14[6]), (_OWORD *)((char *)a2 + v14[6]), v12);
    uint64_t v15 = v14[7];
    uint64_t v16 = (_OWORD *)((char *)a1 + v15);
    uint64_t v17 = (_OWORD *)((char *)a2 + v15);
    long long v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_1C1259FEC(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1C1259D18((uint64_t)a1, type metadata accessor for SportsDataServiceRequest);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for SportsDataServiceResourceRequest(0) + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1C1517F3C();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1C1258A9C();
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_1C1515FDC();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    }
    else
    {
      uint64_t v12 = sub_1C1515FDC();
      uint64_t v13 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(a1, a2, v12);
      uint64_t v14 = (int *)type metadata accessor for SportsDataServiceURLRequest(0);
      v13((_OWORD *)((char *)a1 + v14[5]), (_OWORD *)((char *)a2 + v14[5]), v12);
      v13((_OWORD *)((char *)a1 + v14[6]), (_OWORD *)((char *)a2 + v14[6]), v12);
      uint64_t v15 = v14[7];
      uint64_t v16 = (_OWORD *)((char *)a1 + v15);
      uint64_t v17 = (_OWORD *)((char *)a2 + v15);
      long long v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
      *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C125A264()
{
  uint64_t result = type metadata accessor for SportsDataServiceURLRequest(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C1515FDC();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SportsDataServiceResourceRequest(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1C125A364(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C1517F3C();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1C1258A9C();
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_1C125A4E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1517F3C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1C125A5B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1517F3C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_1C1258A9C();
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1C125A6D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1517F3C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C1258A9C();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

void *sub_1C125A860(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C1517F3C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C1258A9C();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1C125A970(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1517F3C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C1258A9C();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C125AAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C125AB08);
}

uint64_t sub_1C125AB08(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C1258A9C();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C125ABB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C125ABCC);
}

void *sub_1C125ABCC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C1258A9C();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataServiceBatchResourceRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB86A7C8);
}

void sub_1C125AC94()
{
}

void sub_1C125ACA4()
{
  sub_1C1258A9C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *destroy for SportsDataServiceHTTPRequestMethod(uint64_t *result)
{
  if ((unint64_t)result[3] >= 0xFFFFFFFF)
  {
    sub_1BFE95664(*result, result[1]);
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SportsDataServiceHTTPRequestMethod(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[3];
  if (v4 < 0xFFFFFFFF)
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    uint64_t v5 = *a2;
    unint64_t v6 = a2[1];
    sub_1BFE95820(*a2, v6);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t *assignWithCopy for SportsDataServiceHTTPRequestMethod(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a2[3];
  if ((unint64_t)a1[3] < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      uint64_t v9 = *a2;
      unint64_t v10 = a2[1];
      sub_1BFE95820(*a2, v10);
      *a1 = v9;
      a1[1] = v10;
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v11;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    sub_1BFE95664(*a1, a1[1]);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  sub_1BFE95820(*a2, v6);
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  *a1 = v5;
  a1[1] = v6;
  sub_1BFE95664(v7, v8);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsDataServiceHTTPRequestMethod(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    sub_1BFE95664(*(void *)a1, *(void *)(a1 + 8));
    swift_bridgeObjectRelease();
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  uint64_t v5 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1BFE95664(v5, v6);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsDataServiceHTTPRequestMethod(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataServiceHTTPRequestMethod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_1C125B018(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C125B030(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[3] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataServiceHTTPRequestMethod()
{
  return &type metadata for SportsDataServiceHTTPRequestMethod;
}

BOOL sub_1C125B064(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a2[3];
  if (!a1[3]) {
    return v2 == 0;
  }
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  sub_1BFE95820(*a1, v4);
  if (v2)
  {
    sub_1BFE95820(v5, v6);
    char v7 = sub_1C10CA134(v3, v4, v5, v6);
    sub_1BFE95664(v5, v6);
    sub_1BFE95664(v3, v4);
    return v7 & 1;
  }
  else
  {
    sub_1BFE95664(v3, v4);
    return 0;
  }
}

uint64_t static CoverView.loading.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C151BECC();
  uint64_t v3 = sub_1C151BEBC();
  uint64_t v4 = MEMORY[0x1E4FACFE8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = v3;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v7 = sub_1C151E6DC();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  a1[5] = v7;
  a1[6] = v9;
  uint64_t v10 = *MEMORY[0x1E4FAD858];
  uint64_t v11 = sub_1C151CCEC();
  int v12 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);
  return v12(a1, v10, v11);
}

uint64_t sub_1C125B264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_1C125CD68(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

uint64_t sub_1C125B2C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v16 = a4;
    uint64_t v17 = a5;
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      swift_retain();
      uint64_t v11 = swift_retain_n();
      int v12 = sub_1BFF273E0(v11);
      char v14 = (v13 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v12)(a2, a1)
          : ((uint64_t (*)(uint64_t))v12)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v14) {
        break;
      }
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        a5 = v17;
        a4 = v16;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *uint64_t v17 = v10;
  }
  else
  {
LABEL_9:
    *a5 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C125B438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v7 = a5;
  uint64_t v8 = a4;
  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v20 = a6;
    long long v23 = a7;
    swift_bridgeObjectRetain();
    uint64_t v11 = (uint64_t *)(a3 + 56);
    while (1)
    {
      uint64_t v13 = *(v11 - 1);
      uint64_t v12 = *v11;
      uint64_t v14 = *(v11 - 2);
      swift_retain();
      swift_retain_n();
      swift_retain();
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = sub_1BFF273E0(v15);
      char v18 = (v17 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v16)(a2, a1)
          : ((uint64_t (*)(uint64_t))v16)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v18) {
        break;
      }
      v11 += 4;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        a7 = v23;
        uint64_t v8 = a4;
        uint64_t v7 = a5;
        a6 = v20;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
    *long long v23 = v14;
    v23[1] = v13;
    v23[2] = v12;
  }
  else
  {
LABEL_9:
    *a7 = v8;
    a7[1] = v7;
    a7[2] = a6;
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C125B60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v16 = a4;
    char v17 = a5;
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      swift_retain();
      uint64_t v11 = swift_retain_n();
      uint64_t v12 = sub_1BFF273E0(v11);
      char v14 = (v13 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v12)(a2, a1)
          : ((uint64_t (*)(uint64_t))v12)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v14) {
        break;
      }
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        a5 = v17;
        a4 = v16;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *char v17 = v10;
  }
  else
  {
LABEL_9:
    *a5 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C125B77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v4 = *v9;
      swift_retain();
      uint64_t v10 = swift_retain_n();
      uint64_t v11 = sub_1BFF273E0(v10);
      char v13 = (v12 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v11)(a2, a1)
          : ((uint64_t (*)(uint64_t))v11)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v13) {
        break;
      }
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = a4;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    swift_retain();
  }
  return v4;
}

uint64_t sub_1C125B8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1BFF35CFC(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BFF415D4, (void (*)(uint64_t))sub_1BFF4160C, a5);
}

uint64_t sub_1C125B8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v4 = *v9;
      swift_retain();
      uint64_t v10 = swift_retain_n();
      uint64_t v11 = sub_1BFF273E0(v10);
      char v13 = (v12 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v11)(a2, a1)
          : ((uint64_t (*)(uint64_t))v11)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v13) {
        break;
      }
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = a4;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    swift_retain();
  }
  return v4;
}

uint64_t static FormatAsyncImageContent.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v67 - v8;
  unint64_t v10 = *a1;
  unint64_t v11 = *a2;
  switch(v10 >> 60)
  {
    case 1uLL:
      if (v11 >> 60 != 1) {
        goto LABEL_32;
      }
      uint64_t v19 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v20 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x70);
      char v21 = *(unsigned char *)(v19 + 104);
      __int16 v22 = *(_WORD *)(v19 + 64);
      char v23 = *(unsigned char *)(v19 + 40);
      uint64_t v24 = *(void *)(v19 + 32);
      uint64_t v25 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v26 = *(void *)(v25 + 32);
      char v27 = *(unsigned char *)(v25 + 40);
      __int16 v28 = *(_WORD *)(v25 + 64);
      char v29 = *(unsigned char *)(v25 + 104);
      uint64_t v30 = *(void *)(v25 + 112);
      *(_OWORD *)uint64_t v74 = *(_OWORD *)(v19 + 16);
      *(void *)&v74[16] = v24;
      v74[24] = v23;
      long long v75 = *(_OWORD *)(v19 + 48);
      __int16 v76 = v22;
      long long v77 = *(_OWORD *)(v19 + 72);
      long long v78 = *(_OWORD *)(v19 + 88);
      char v79 = v21;
      uint64_t v80 = v20;
      v67[0] = *(_OWORD *)(v25 + 16);
      *(void *)&v67[1] = v26;
      BYTE8(v67[1]) = v27;
      long long v68 = *(_OWORD *)(v25 + 48);
      __int16 v69 = v28;
      long long v70 = *(_OWORD *)(v25 + 72);
      long long v71 = *(_OWORD *)(v25 + 88);
      char v72 = v29;
      uint64_t v73 = v30;
      swift_retain();
      swift_retain();
      char v18 = _s8NewsFeed17FormatSymbolImageV2eeoiySbAC_ACtFZ_0((long long *)v74, v67);
      goto LABEL_21;
    case 2uLL:
      if (v11 >> 60 != 2) {
        goto LABEL_32;
      }
      uint64_t v31 = v10 & 0xFFFFFFFFFFFFFFFLL;
      char v32 = *(unsigned char *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v33 = *(void *)(v31 + 24);
      uint64_t v34 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v35 = *(void *)(v34 + 16);
      uint64_t v36 = *(void *)(v34 + 24);
      char v37 = *(unsigned char *)(v34 + 64);
      *(void *)uint64_t v74 = *(void *)(v31 + 16);
      *(void *)&v74[8] = v33;
      long long v38 = *(_OWORD *)(v31 + 48);
      *(_OWORD *)&v74[16] = *(_OWORD *)(v31 + 32);
      long long v75 = v38;
      LOBYTE(v76) = v32;
      *(void *)&v67[0] = v35;
      *((void *)&v67[0] + 1) = v36;
      long long v39 = *(_OWORD *)(v34 + 48);
      v67[1] = *(_OWORD *)(v34 + 32);
      long long v68 = v39;
      LOBYTE(v69) = v37;
      swift_retain();
      swift_retain();
      char v18 = _s8NewsFeed17FormatBundleImageV2eeoiySbAC_ACtFZ_0((uint64_t)v74, (uint64_t)v67);
      goto LABEL_21;
    case 3uLL:
      if (v11 >> 60 != 3) {
        goto LABEL_32;
      }
      uint64_t v41 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v40 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v42 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v43 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v44 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v45 = *(void *)(v43 + 24);
      uint64_t v46 = *(void *)(v43 + 32);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      char v47 = sub_1C125C968(v42, v41, v40, v44, v45, v46, (uint64_t (*)(long long *, long long *))_s8NewsFeed20FormatCommandBindingO2eeoiySbAC_ACtFZ_0, sub_1C00F0710, (uint64_t (*)(long long *, long long *))static FormatAsyncImageContent.== infix(_:_:));
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return v47 & 1;
    case 4uLL:
      if (v11 >> 60 != 4) {
        goto LABEL_32;
      }
      uint64_t v48 = swift_projectBox();
      uint64_t v49 = swift_projectBox();
      sub_1BFF83D94(v48, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      sub_1BFF83D94(v49, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      swift_retain();
      swift_retain();
      char v47 = _s8NewsFeed17FormatRemoteImageV2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v6);
      sub_1C0FE43F4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      sub_1C0FE43F4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      swift_release();
      swift_release();
      return v47 & 1;
    case 5uLL:
      if (v11 >> 60 != 5) {
        goto LABEL_32;
      }
      uint64_t v51 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v52 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v53 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v54 = *(void *)(v52 + 24);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (sub_1C00F06F8(v51, v53))
      {
        *(void *)uint64_t v74 = v50;
        *(void *)&v67[0] = v54;
        char v47 = static FormatAsyncImageContent.== infix(_:_:)(v74, v67);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return v47 & 1;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 6uLL:
      if (v11 >> 60 != 6) {
        goto LABEL_32;
      }
      uint64_t v56 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v55 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v57 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v58 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)uint64_t v74 = v56;
      *(void *)&v74[8] = v55;
      *(void *)&v67[0] = v57;
      *((void *)&v67[0] + 1) = v58;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatAsyncImageContent.== infix(_:_:)(v74, v67) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_31;
      }
      char v59 = static FormatAsyncImageContent.== infix(_:_:)(&v74[8], (char *)v67 + 8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v59 & 1) == 0) {
        goto LABEL_32;
      }
      goto LABEL_27;
    case 7uLL:
      if (v11 >> 60 != 7) {
        goto LABEL_32;
      }
      uint64_t v60 = v11 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v61 = *(void *)(v60 + 16);
      *(void *)uint64_t v74 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(_OWORD *)&v74[8] = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&v67[0] = v61;
      *(long long *)((char *)v67 + 8) = *(_OWORD *)(v60 + 24);
      swift_retain();
      swift_retain();
      char v18 = _s8NewsFeed16FormatStyleImageV2eeoiySbAC_ACtFZ_0((uint64_t *)v74, (uint64_t *)v67);
      goto LABEL_21;
    case 8uLL:
      if (v11 >> 60 != 8) {
        goto LABEL_32;
      }
      uint64_t v62 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v63 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v64 = *(void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)uint64_t v74 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)&v74[8] = v62;
      *(void *)&v67[0] = v63;
      *((void *)&v67[0] + 1) = v64;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatAsyncImageContent.== infix(_:_:)(v74, v67))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v65 = sub_1C00F06E0(v62, v64);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if (v65)
        {
LABEL_27:
          char v47 = 1;
          return v47 & 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_31:
        swift_release();
      }
LABEL_32:
      char v47 = 0;
      return v47 & 1;
    case 9uLL:
      if (v11 != 0x9000000000000000) {
        goto LABEL_32;
      }
      swift_release();
      char v47 = 1;
      return v47 & 1;
    default:
      if (v11 >> 60) {
        goto LABEL_32;
      }
      char v12 = *(unsigned char *)(v10 + 56);
      uint64_t v13 = *(void *)(v10 + 48);
      uint64_t v14 = *(void *)(v11 + 48);
      char v15 = *(unsigned char *)(v11 + 56);
      long long v16 = *(_OWORD *)(v10 + 32);
      *(_OWORD *)uint64_t v74 = *(_OWORD *)(v10 + 16);
      *(_OWORD *)&v74[16] = v16;
      *(void *)&long long v75 = v13;
      BYTE8(v75) = v12;
      long long v17 = *(_OWORD *)(v11 + 32);
      v67[0] = *(_OWORD *)(v11 + 16);
      v67[1] = v17;
      *(void *)&long long v68 = v14;
      BYTE8(v68) = v15;
      swift_retain();
      swift_retain();
      char v18 = _s8NewsFeed22FormatImageNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v74, (uint64_t)v67);
LABEL_21:
      char v47 = v18;
      swift_release();
      swift_release();
      return v47 & 1;
  }
}

void *sub_1C125C29C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(a4 + 32);
  char v10 = *(unsigned char *)(a4 + 41);
  unsigned int v11 = *(unsigned __int8 *)(a4 + 40);
  v19[0] = *(void *)(a4 + 16);
  v19[1] = v8;
  v19[2] = v9;
  char v20 = v11;
  char v21 = v10;
  swift_retain();
  sub_1C125CCB0(v19[0], v8, v9, v11, v10, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
  uint64_t v12 = sub_1BFF5AB10(a1);
  sub_1C125CCB0(v19[0], v8, v9, v11, v10, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
  uint64_t result = (void *)swift_release();
  if (!v6)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C125CEAC(v14, a2);
    swift_bridgeObjectRelease();
    uint64_t v22 = a6;
    swift_retain();
    a2(v19, &v22);
    swift_release();
    uint64_t v16 = v19[0];
    sub_1BFF5AAC4(0, &qword_1EB867628, (uint64_t)&type metadata for FormatAccessibilityData, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue);
    uint64_t result = (void *)swift_allocObject();
    result[3] = v15;
    result[4] = v16;
    result[2] = v12;
  }
  return result;
}

void *sub_1C125C4A0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(a4 + 32);
  char v10 = *(unsigned char *)(a4 + 41);
  unsigned int v11 = *(unsigned __int8 *)(a4 + 40);
  uint64_t v20 = *(void *)(a4 + 16);
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  char v23 = v11;
  char v24 = v10;
  swift_retain();
  sub_1C125CCB0(v20, v8, v9, v11, v10, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
  uint64_t v12 = sub_1BFF5AB10(a1);
  sub_1C125CCB0(v20, v8, v9, v11, v10, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
  uint64_t result = (void *)swift_release();
  if (!v6)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C125D1FC(v14, a2);
    swift_bridgeObjectRelease();
    uint64_t v25 = a6;
    swift_retain();
    a2(&v20, &v25);
    swift_release();
    uint64_t v16 = v20;
    uint64_t v17 = v21;
    sub_1BFF5AAC4(0, &qword_1EB867630, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue);
    uint64_t result = (void *)swift_allocObject();
    result[4] = v16;
    result[5] = v17;
    result[2] = v12;
    result[3] = v15;
  }
  return result;
}

void *sub_1C125C6A4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(a4 + 32);
  char v10 = *(unsigned char *)(a4 + 41);
  unsigned int v11 = *(unsigned __int8 *)(a4 + 40);
  v19[0] = *(void *)(a4 + 16);
  v19[1] = v8;
  v19[2] = v9;
  char v20 = v11;
  char v21 = v10;
  swift_retain();
  sub_1C125CCB0(v19[0], v8, v9, v11, v10, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
  uint64_t v12 = sub_1BFF5AB10(a1);
  sub_1C125CCB0(v19[0], v8, v9, v11, v10, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
  uint64_t result = (void *)swift_release();
  if (!v6)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C125D3B0(v14, a2);
    swift_bridgeObjectRelease();
    uint64_t v22 = a6;
    swift_retain();
    a2(v19, &v22);
    swift_release();
    uint64_t v16 = v19[0];
    sub_1BFF5AAC4(0, &qword_1EA1AD5E8, (uint64_t)&type metadata for FormatMenuGroupableData, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue);
    uint64_t result = (void *)swift_allocObject();
    result[3] = v15;
    result[4] = v16;
    result[2] = v12;
  }
  return result;
}

uint64_t sub_1C125C8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C125C968(a1, a2, a3, a4, a5, a6, (uint64_t (*)(long long *, long long *))static FormatCommandBinding.== infix(_:_:), sub_1C00E1EF8, (uint64_t (*)(long long *, long long *))static FormatAccessibilityContent.== infix(_:_:)) & 1;
}

uint64_t sub_1C125C908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C125C968(a1, a2, a3, a4, a5, a6, (uint64_t (*)(long long *, long long *))static FormatCommandBinding.== infix(_:_:), sub_1C00EF224, (uint64_t (*)(long long *, long long *))static FormatSyncImageContent.== infix(_:_:)) & 1;
}

uint64_t sub_1C125C968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(long long *, long long *), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(long long *, long long *))
{
  uint64_t v14 = *(void *)(a1 + 32);
  __int16 v15 = *(_WORD *)(a1 + 40);
  uint64_t v16 = *(void *)(a4 + 32);
  __int16 v17 = *(_WORD *)(a4 + 40);
  long long v23 = *(_OWORD *)(a1 + 16);
  uint64_t v24 = v14;
  __int16 v25 = v15;
  long long v20 = *(_OWORD *)(a4 + 16);
  uint64_t v21 = v16;
  __int16 v22 = v17;
  if (a7(&v23, &v20) & 1) != 0 && (a8(a2, a5))
  {
    *(void *)&long long v23 = a3;
    *(void *)&long long v20 = a6;
    char v18 = a9(&v23, &v20);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1C125CA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = *(void *)(a1 + 32);
  __int16 v15 = *(_WORD *)(a1 + 40);
  uint64_t v16 = *(void *)(a5 + 32);
  __int16 v17 = *(_WORD *)(a5 + 40);
  long long v22 = *(_OWORD *)(a1 + 16);
  uint64_t v23 = v14;
  __int16 v24 = v15;
  long long v19 = *(_OWORD *)(a5 + 16);
  uint64_t v20 = v16;
  __int16 v21 = v17;
  if ((static FormatCommandBinding.== infix(_:_:)(&v22, &v19) & 1) == 0 || (sub_1C00F0CE0(a2, a6) & 1) == 0) {
    return 0;
  }
  if (a3 == a7 && a4 == a8) {
    return 1;
  }
  return sub_1C1520A9C();
}

unint64_t sub_1C125CB28(uint64_t a1)
{
  unint64_t result = sub_1C0036630();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C125CB50()
{
  unint64_t result = qword_1EB891A28;
  if (!qword_1EB891A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891A28);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAsyncImageContent()
{
  return &type metadata for FormatAsyncImageContent;
}

uint64_t sub_1C125CBB4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C125CBF8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C125CC40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C125CC78()
{
  return swift_deallocObject();
}

uint64_t sub_1C125CCB0(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, void))
{
  switch((4 * a5) | (a4 >> 2) & 3)
  {
    case 0u:
      unint64_t result = sub_1C00AB700(result, a2, a3, a4, a6, a6);
      break;
    case 3u:
      unint64_t result = a7();
      break;
    case 6u:
      unint64_t result = sub_1C00AB750(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      unint64_t result = a8(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C125CD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF6236C(0, v4, 0);
    uint64_t v5 = v20;
    uint64_t v7 = a1 + 48;
    do
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFE6F228(a2, a3, a4);
      uint64_t v10 = v9;
      char v12 = v11;
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v14 = *(void *)(v20 + 16);
      unint64_t v13 = *(void *)(v20 + 24);
      if (v14 >= v13 >> 1) {
        sub_1BFF6236C(v13 > 1, v14 + 1, 1);
      }
      v7 += 24;
      *(void *)(v20 + 16) = v14 + 1;
      uint64_t v15 = v20 + 24 * v14;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v10;
      *(unsigned char *)(v15 + 48) = v12 & 1;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1C125CEAC(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t *))
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F7098(0, v4, 0);
    uint64_t v5 = v22;
    uint64_t v7 = (void *)(a1 + 56);
    while (1)
    {
      int64_t v18 = v4;
      uint64_t v8 = *(v7 - 3);
      uint64_t v9 = *(v7 - 2);
      char v10 = *((unsigned char *)v7 - 8);
      uint64_t v11 = *v7;
      v19[1] = v8;
      v19[2] = v9;
      char v20 = v10;
      uint64_t v21 = v11;
      sub_1BFF5B7E0(v8, v9, v10);
      swift_retain();
      sub_1BFF5B7E0(v8, v9, v10);
      a2(v19, &v21);
      if (v3) {
        break;
      }
      sub_1BFF5B7CC(v8, v9, v10);
      swift_release();
      uint64_t v12 = v19[0];
      uint64_t v22 = v5;
      unint64_t v14 = *(void *)(v5 + 16);
      unint64_t v13 = *(void *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F7098(v13 > 1, v14 + 1, 1);
        uint64_t v5 = v22;
      }
      v7 += 4;
      *(void *)(v5 + 16) = v14 + 1;
      uint64_t v15 = v5 + 32 * v14;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v9;
      *(unsigned char *)(v15 + 48) = v10;
      *(void *)(v15 + 56) = v12;
      uint64_t v3 = 0;
      int64_t v4 = v18 - 1;
      if (v18 == 1) {
        return v5;
      }
    }
    sub_1BFF5B7CC(v8, v9, v10);
    sub_1BFF5B7CC(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_1C125D054(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t *))
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1BFF5CAC4(0, v4, 0);
    uint64_t v5 = v22;
    uint64_t v7 = (void *)(a1 + 56);
    while (1)
    {
      int64_t v18 = v4;
      uint64_t v8 = *(v7 - 3);
      uint64_t v9 = *(v7 - 2);
      char v10 = *((unsigned char *)v7 - 8);
      uint64_t v11 = *v7;
      v19[1] = v8;
      v19[2] = v9;
      char v20 = v10;
      uint64_t v21 = v11;
      sub_1BFF5B7E0(v8, v9, v10);
      swift_retain();
      sub_1BFF5B7E0(v8, v9, v10);
      a2(v19, &v21);
      if (v3) {
        break;
      }
      sub_1BFF5B7CC(v8, v9, v10);
      swift_release();
      uint64_t v12 = v19[0];
      uint64_t v22 = v5;
      unint64_t v14 = *(void *)(v5 + 16);
      unint64_t v13 = *(void *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BFF5CAC4(v13 > 1, v14 + 1, 1);
        uint64_t v5 = v22;
      }
      v7 += 4;
      *(void *)(v5 + 16) = v14 + 1;
      uint64_t v15 = v5 + 32 * v14;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v9;
      *(unsigned char *)(v15 + 48) = v10;
      *(void *)(v15 + 56) = v12;
      uint64_t v3 = 0;
      int64_t v4 = v18 - 1;
      if (v18 == 1) {
        return v5;
      }
    }
    sub_1BFF5B7CC(v8, v9, v10);
    sub_1BFF5B7CC(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_1C125D1FC(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t *))
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C05F7768(0, v4, 0);
    uint64_t v5 = v24;
    uint64_t v7 = (void *)(a1 + 56);
    while (1)
    {
      int64_t v20 = v4;
      uint64_t v8 = *(v7 - 3);
      uint64_t v9 = *(v7 - 2);
      char v10 = *((unsigned char *)v7 - 8);
      uint64_t v11 = *v7;
      v21[2] = v8;
      void v21[3] = v9;
      char v22 = v10;
      uint64_t v23 = v11;
      sub_1BFF5B7E0(v8, v9, v10);
      swift_retain();
      sub_1BFF5B7E0(v8, v9, v10);
      a2(v21, &v23);
      if (v3) {
        break;
      }
      sub_1BFF5B7CC(v8, v9, v10);
      swift_release();
      uint64_t v12 = v21[0];
      uint64_t v13 = v21[1];
      uint64_t v24 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t v17 = v21[0];
        sub_1C05F7768(v14 > 1, v15 + 1, 1);
        uint64_t v12 = v17;
        uint64_t v5 = v24;
      }
      v7 += 4;
      *(void *)(v5 + 16) = v15 + 1;
      uint64_t v16 = v5 + 40 * v15;
      *(void *)(v16 + 32) = v8;
      *(void *)(v16 + 40) = v9;
      *(unsigned char *)(v16 + 48) = v10;
      *(void *)(v16 + 56) = v12;
      *(void *)(v16 + 64) = v13;
      uint64_t v3 = 0;
      int64_t v4 = v20 - 1;
      if (v20 == 1) {
        return v5;
      }
    }
    sub_1BFF5B7CC(v8, v9, v10);
    sub_1BFF5B7CC(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_1C125D3B0(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t *))
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F8824(0, v4, 0);
    uint64_t v5 = v22;
    uint64_t v7 = (void *)(a1 + 56);
    while (1)
    {
      int64_t v18 = v4;
      uint64_t v8 = *(v7 - 3);
      uint64_t v9 = *(v7 - 2);
      char v10 = *((unsigned char *)v7 - 8);
      uint64_t v11 = *v7;
      v19[1] = v8;
      v19[2] = v9;
      char v20 = v10;
      uint64_t v21 = v11;
      sub_1BFF5B7E0(v8, v9, v10);
      swift_retain();
      sub_1BFF5B7E0(v8, v9, v10);
      a2(v19, &v21);
      if (v3) {
        break;
      }
      sub_1BFF5B7CC(v8, v9, v10);
      swift_release();
      uint64_t v12 = v19[0];
      uint64_t v22 = v5;
      unint64_t v14 = *(void *)(v5 + 16);
      unint64_t v13 = *(void *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F8824(v13 > 1, v14 + 1, 1);
        uint64_t v5 = v22;
      }
      v7 += 4;
      *(void *)(v5 + 16) = v14 + 1;
      uint64_t v15 = v5 + 32 * v14;
      *(void *)(v15 + 32) = v8;
      *(void *)(v15 + 40) = v9;
      *(unsigned char *)(v15 + 48) = v10;
      *(void *)(v15 + 56) = v12;
      uint64_t v3 = 0;
      int64_t v4 = v18 - 1;
      if (v18 == 1) {
        return v5;
      }
    }
    sub_1BFF5B7CC(v8, v9, v10);
    sub_1BFF5B7CC(v8, v9, v10);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t Blueprint<>.adGroupData(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v37 = a2;
  uint64_t v4 = sub_1C151D46C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v36 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v33 = (char *)&v32 - v10;
  MEMORY[0x1F4188790](v11);
  char v32 = (char *)&v32 - v12;
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v41 = v6;
  long long v38 = *(_OWORD *)(a1 + 24);
  long long v42 = v38;
  uint64_t v43 = v13;
  uint64_t v14 = sub_1C151AA8C();
  uint64_t v15 = sub_1C151FD8C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  int64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v32 - v21;
  sub_1C151A31C();
  sub_1C151A2EC();
  sub_1C151CC4C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v23 = sub_1C151D4AC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v40, 1, 1, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v18, v14);
    __int16 v25 = v32;
    sub_1C151AA1C();
    uint64_t v26 = v37;
    (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v6, v37);
    char v27 = *(void (**)(char *, uint64_t))(v35 + 8);
    v27(v25, v6);
    __int16 v28 = v33;
    sub_1C151AA1C();
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v6, v26);
    v27(v28, v6);
    char v29 = v34;
    sub_1C151AA1C();
    (*(void (**)(uint64_t, uint64_t))(v26 + 32))(v6, v26);
    v27(v29, v6);
    uint64_t v30 = v40;
    sub_1C151D47C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v14);
    uint64_t v31 = sub_1C151D4AC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

uint64_t Blueprint<>.adGroupData(for:)@<X0>(uint64_t a1@<X1>, void (**a2)(void, void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = sub_1C151D46C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v23 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v23 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v25 = v7;
  long long v26 = *(_OWORD *)(a1 + 24);
  uint64_t v27 = v18;
  sub_1C151AA8C();
  sub_1C151AA1C();
  a2[2](v7, a2);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v17, v7);
  sub_1C151AA1C();
  a2[3](v7, a2);
  v19(v14, v7);
  sub_1C151AA1C();
  a2[4](v7, a2);
  v19(v11, v7);
  uint64_t v20 = v24;
  sub_1C151D47C();
  uint64_t v21 = sub_1C151D4AC();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
}

ValueMetadata *type metadata accessor for A18_V12()
{
  return &type metadata for A18_V12;
}

uint64_t sub_1C125DC9C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1260F28(0, &qword_1EA1AD6A0, (uint64_t (*)(void))sub_1C1260ED4, (uint64_t)&type metadata for A18_V12.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1260ED4();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C1260F90(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C125DEE4(uint64_t a1)
{
  unint64_t v2 = sub_1C1260ED4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C125DF20(uint64_t a1)
{
  unint64_t v2 = sub_1C1260ED4();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C125DF5C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1260C24(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C125DFA4(void *a1)
{
  return sub_1C125DC9C(a1);
}

uint64_t sub_1C125DFBC()
{
  sub_1C12608C8();
  return sub_1C151798C();
}

uint64_t sub_1C125E038@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C1260F28(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C125E0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v44 = a1;
  uint64_t v41 = a3;
  unint64_t v45 = sub_1C151635C();
  uint64_t v6 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v52 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v41 - v12;
  uint64_t v47 = (uint64_t)&v41 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  MEMORY[0x1F4188790](v14);
  char v16 = *v3;
  int v46 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v19 = a1;
  uint64_t v20 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1AFA4(v19, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v50 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v43 = sub_1C151633C();
  uint64_t v42 = v21;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v45);
  uint64_t v63 = &type metadata for A18_V12;
  unint64_t v45 = sub_1C01862E4();
  unint64_t v64 = v45;
  LOBYTE(v61) = v16;
  *((void *)&v61 + 1) = v17;
  unsigned __int8 v62 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v22 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v23;
  uint64_t v57 = 95;
  unint64_t v58 = 0xE100000000000000;
  uint64_t v55 = 45;
  unint64_t v56 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v24 = sub_1C151FEBC();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *(void *)(v22 + 16) = v24;
  *(void *)(v22 + 24) = v26;
  uint64_t v27 = (uint64_t *)(v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v28 = v42;
  *uint64_t v27 = v43;
  v27[1] = v28;
  sub_1BFC66384((uint64_t)&v61, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v20, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v29, 0, 1, v49);
  uint64_t v30 = (uint64_t)v52;
  uint64_t v31 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C(v47, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v31, 0, 1, v54);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
  sub_1BFFFC630(v17, v18);
  uint64_t v63 = &type metadata for A18_V12;
  unint64_t v64 = v45;
  LOBYTE(v61) = v46;
  *((void *)&v61 + 1) = v17;
  unsigned __int8 v62 = v18;
  sub_1BFF1AFA4(v51, v30, (uint64_t (*)(void))v50);
  sub_1BFFFC7A0(v17, v18);
  uint64_t v32 = v65;
  uint64_t v33 = sub_1C001E608((uint64_t)&unk_1F1B837D8, 0, 0, 0, 4, 0, 0, 0);
  if (v32)
  {
    swift_release();
    sub_1BFF1F524(v30, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
  }
  else
  {
    uint64_t v34 = v33;
    uint64_t v35 = v41;
    uint64_t v36 = sub_1C001E608((uint64_t)&unk_1F1B83800, 0, 0, 0, 0, 0, 0, 0);
    uint64_t v59 = v34;
    sub_1C0018900(v36);
    uint64_t v38 = v59;
    uint64_t v39 = type metadata accessor for A18_V12.Bound();
    v35[3] = v39;
    v35[4] = sub_1C1260F90(&qword_1EA1AD600, (void (*)(uint64_t))type metadata accessor for A18_V12.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    uint64_t *boxed_opaque_existential_0 = v22;
    sub_1BFC773DC(&v61, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v30, (uint64_t)boxed_opaque_existential_0 + *(int *)(v39 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v39 + 28)) = v38;
  }
  return result;
}

uint64_t sub_1C125E6C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  *(void *)&long long v29 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  long long v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A18_V12.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v36);
  sub_1BFC66384(v9 + 56, (uint64_t)v35);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v36, inited + 16);
  sub_1BFC773DC(v35, inited + 56);
  *(double *)(inited + 96) = v11;
  v34[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v34, v40);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  v32[2] = v2;
  v32[3] = v40;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C126084C, (uint64_t)v32, v13, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v14;
  sub_1C018C2A4(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v16 = v15;
  sub_1C018C3C0(&qword_1EA197690);
  v28[1] = v16;
  uint64_t v17 = sub_1C151F0BC();
  uint64_t v18 = *MEMORY[0x1E4FAB6D8];
  uint64_t v19 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v29);
  uint64_t v31 = v17;
  sub_1C1260980(0, &qword_1EA1AD620, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C1517BFC();
  long long v29 = v36;
  uint64_t v21 = v37;
  uint64_t v22 = v38;
  *(void *)&long long v36 = v14;
  *(void *)&v35[0] = v39;
  MEMORY[0x1F4188790](v20);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C018C3C0((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = v23;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v24 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = v30;
  unsigned char *v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((void *)v25 + 3) = v21;
  *((void *)v25 + 4) = v22;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *((void *)v25 + 5) = v24;
  *((void *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_1C125EBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C125EC90(uint64_t a1, uint64_t a2)
{
  sub_1C1260F28(0, &qword_1EA1AD638, (uint64_t (*)(void))sub_1C1260874, (uint64_t)&type metadata for A18_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 18;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  double v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C1260980(0, &qword_1EA1AD640, MEMORY[0x1E4FAB6F0]);
  sub_1C126093C(&qword_1EA1AD648, &qword_1EA1AD640, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C125EE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  sub_1C1260F28(0, &qword_1EA1AD638, (uint64_t (*)(void))sub_1C1260874, (uint64_t)&type metadata for A18_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v24 - v5);
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    unsigned int v30 = *MEMORY[0x1E4FAB4E8];
    unsigned int v29 = *MEMORY[0x1E4FAB940];
    uint64_t v27 = (void (**)(uint64_t *, uint64_t))(v4 + 8);
    uint64_t v28 = (void (**)(uint64_t *, void, uint64_t))(v4 + 104);
    unsigned int v26 = *MEMORY[0x1E4FABA28];
    unsigned int v25 = *MEMORY[0x1E4FAB638];
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    long long v24 = xmmword_1C1529AE0;
    uint64_t v31 = v7;
    uint64_t v32 = a2;
    do
    {
      if (*(void *)(*(void *)(a2 + 8 * v8 + 32) + 16) == 3)
      {
        uint64_t v9 = v34;
        uint64_t v38 = v34;
        uint64_t v10 = sub_1C151729C();
        uint64_t v11 = swift_allocBox();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, v30, v10);
        *uint64_t v6 = v11;
        uint64_t v13 = *v28;
        uint64_t v14 = v33;
        (*v28)(v6, v29, v33);
        uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
        sub_1C1260980(0, &qword_1EA1AD650, MEMORY[0x1E4FAB4D0]);
        uint64_t v36 = v16;
        uint64_t v35 = sub_1C126093C(&qword_1EA1AD658, &qword_1EA1AD650, v15);
        swift_bridgeObjectRetain();
        sub_1C151738C();
        uint64_t v37 = *v27;
        v37(v6, v14);
        uint64_t v38 = v9;
        v13(v6, v26, v14);
        sub_1C1260A04();
        sub_1C1260F28(0, &qword_1EA1AD668, (uint64_t (*)(void))sub_1C1260874, (uint64_t)&type metadata for A18_V12.Layout, MEMORY[0x1E4FAB678]);
        uint64_t v18 = v17;
        uint64_t v19 = *(void *)(v17 - 8);
        unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v24;
        uint64_t v22 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, v25, v18);
        MEMORY[0x1F4188790](v22);
        sub_1C151731C();
        a2 = v32;
        swift_bridgeObjectRelease();
        uint64_t v23 = v14;
        uint64_t v7 = v31;
        v37(v6, v23);
        swift_bridgeObjectRelease();
      }
      ++v8;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
}

void sub_1C125F2C4(uint64_t a1, uint64_t a2)
{
  sub_1C1260F28(0, &qword_1EA1AD638, (uint64_t (*)(void))sub_1C1260874, (uint64_t)&type metadata for A18_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v10 + 72);
    unsigned int v18 = *MEMORY[0x1E4FABA10];
    uint64_t v16 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v17 = (uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104);
    uint64_t v15 = a2;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v20 = a1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 6;
      *uint64_t v8 = v12;
      uint64_t v13 = (*v17)(v8, v18, v5);
      MEMORY[0x1F4188790](v13);
      uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C1260980(0, &qword_1EA1AD650, MEMORY[0x1E4FAB4D0]);
      sub_1C126093C(&qword_1EA1AD658, &qword_1EA1AD650, v14);
      sub_1C151734C();
      (*v16)(v8, v5);
      v11 += v19;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C125F590(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v35 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v36 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1260F28(0, &qword_1EA1AD638, (uint64_t (*)(void))sub_1C1260874, (uint64_t)&type metadata for A18_V12.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&KeyPath - v15;
  uint64_t v40 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = *MEMORY[0x1E4FAB9E0];
  unsigned int v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  uint64_t v39 = v13;
  v18(v16, v17, v13);
  uint64_t v19 = (char *)v11 + v9[7];
  uint64_t v20 = *MEMORY[0x1E4FAB8C8];
  uint64_t v21 = sub_1C1517A7C();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  uint64_t v23 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[8]) = 0;
  long long v24 = *v23;
  *(void *)((char *)v11 + v9[9]) = v24;
  uint64_t v25 = qword_1EB87CC48;
  id v26 = v24;
  if (v25 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  uint64_t v27 = swift_release();
  __n128 v28 = MEMORY[0x1F4188790](v27);
  uint64_t v29 = v35;
  *(&KeyPath - 4) = v34;
  *(&KeyPath - 3) = (uint64_t)v11;
  unint64_t v32 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v36, *MEMORY[0x1E4FAB8F8], v29, v28);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
  sub_1BFF1F524((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  unsigned int v30 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C1260980(0, &qword_1EA1AD650, MEMORY[0x1E4FAB4D0]);
  sub_1C126093C(&qword_1EA1AD658, &qword_1EA1AD650, v30);
  unint64_t v32 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v39);
}

uint64_t sub_1C125FA98@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V12.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C125FB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C125E0F4(a1, a2, a3);
}

uint64_t sub_1C125FBA0()
{
  return sub_1C12BC2C8();
}

unint64_t sub_1C125FBB0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C125FBE0();
  unint64_t result = sub_1C125FC34();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C125FBE0()
{
  unint64_t result = qword_1EA1AD5F0;
  if (!qword_1EA1AD5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD5F0);
  }
  return result;
}

unint64_t sub_1C125FC34()
{
  unint64_t result = qword_1EA1AD5F8;
  if (!qword_1EA1AD5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD5F8);
  }
  return result;
}

uint64_t type metadata accessor for A18_V12.Bound()
{
  uint64_t result = qword_1EA1AD608;
  if (!qword_1EA1AD608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C125FCD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F524((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  long long v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F524(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C1260168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F524((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F524(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C12605C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C12605D8);
}

uint64_t sub_1C12605D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C1260688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C126069C);
}

void *sub_1C126069C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C1260744()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C12607F4(uint64_t a1)
{
  uint64_t result = sub_1C1260F90(&qword_1EA1AD618, (void (*)(uint64_t))type metadata accessor for A18_V12.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C126084C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C125EBB8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C126086C(uint64_t a1)
{
  return sub_1C125EC90(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C1260874()
{
  unint64_t result = qword_1EA1AD628;
  if (!qword_1EA1AD628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD628);
  }
  return result;
}

unint64_t sub_1C12608C8()
{
  unint64_t result = qword_1EA1AD630;
  if (!qword_1EA1AD630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD630);
  }
  return result;
}

uint64_t sub_1C126091C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C125FA98(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C1260924()
{
  return swift_deallocObject();
}

void sub_1C1260934(uint64_t a1)
{
  sub_1C125EE7C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C126093C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1260980(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1260980(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V12.Layout;
    v8[1] = &type metadata for A18_V12.Layout.Attributes;
    v8[2] = sub_1C1260874();
    v8[3] = sub_1C12608C8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C1260A04()
{
  if (!qword_1EA1AD660)
  {
    sub_1C1260F28(255, &qword_1EA1AD668, (uint64_t (*)(void))sub_1C1260874, (uint64_t)&type metadata for A18_V12.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AD660);
    }
  }
}

void sub_1C1260A94(uint64_t a1)
{
  sub_1C125F2C4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1260A9C(uint64_t a1)
{
  return sub_1C125F590(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V12.Layout.Attributes()
{
  return &type metadata for A18_V12.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V12.Layout()
{
  return &type metadata for A18_V12.Layout;
}

unint64_t sub_1C1260AC8()
{
  unint64_t result = qword_1EA1AD670;
  if (!qword_1EA1AD670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD670);
  }
  return result;
}

unint64_t sub_1C1260B20()
{
  unint64_t result = qword_1EA1AD678;
  if (!qword_1EA1AD678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD678);
  }
  return result;
}

unint64_t sub_1C1260B78()
{
  unint64_t result = qword_1EA1AD680;
  if (!qword_1EA1AD680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD680);
  }
  return result;
}

unint64_t sub_1C1260BD0()
{
  unint64_t result = qword_1EA1AD688;
  if (!qword_1EA1AD688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD688);
  }
  return result;
}

uint64_t sub_1C1260C24@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C1260F28(0, &qword_1EA1AD690, (uint64_t (*)(void))sub_1C1260ED4, (uint64_t)&type metadata for A18_V12.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1260ED4();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C1260F90(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C1260ED4()
{
  unint64_t result = qword_1EA1AD698;
  if (!qword_1EA1AD698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD698);
  }
  return result;
}

void sub_1C1260F28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C1260F90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V12.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12610A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V12.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V12.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C12610E0()
{
  unint64_t result = qword_1EA1AD6A8;
  if (!qword_1EA1AD6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD6A8);
  }
  return result;
}

unint64_t sub_1C1261138()
{
  unint64_t result = qword_1EA1AD6B0;
  if (!qword_1EA1AD6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD6B0);
  }
  return result;
}

unint64_t sub_1C1261190()
{
  unint64_t result = qword_1EA1AD6B8;
  if (!qword_1EA1AD6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD6B8);
  }
  return result;
}

uint64_t FormatAnimationData.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatAnimationData.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatAnimationData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAnimationData);
}

BOOL static FormatMenuItemBinding.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_1C126127C(uint64_t a1)
{
  unint64_t result = sub_1C12612A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12612A4()
{
  unint64_t result = qword_1EA1AD6C0;
  if (!qword_1EA1AD6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD6C0);
  }
  return result;
}

unint64_t sub_1C12612F8(void *a1)
{
  a1[1] = sub_1C08E459C();
  a1[2] = sub_1C08E5110();
  unint64_t result = sub_1C1261330();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1261330()
{
  unint64_t result = qword_1EA1AD6C8;
  if (!qword_1EA1AD6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD6C8);
  }
  return result;
}

uint64_t sub_1C1261384@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatMenuItemBinding.init(from:)(a1, a2);
}

uint64_t sub_1C126139C(void *a1)
{
  return FormatMenuItemBinding.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatMenuItemBinding(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1261480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuItemBinding()
{
  return &type metadata for FormatMenuItemBinding;
}

uint64_t TagServiceType.fetchTags(for:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(self, sel_defaultCachePolicy);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, v8, a2, a3, a4);

  return v9;
}

uint64_t TagService.__allocating_init(tagController:subscriptionController:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t TagServiceType.fetchTags(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_defaultCachePolicy);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(a3 + 24))(a1, v6, a2, a3);

  return v7;
}

uint64_t TagServiceType.fetchTags(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32);
  return v9(a1, a2, v8, a3, a4);
}

uint64_t TagServiceType.fetchSubscribedTags()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = FCCurrentQoSOrUtilityIfMain();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 48);
  return v5(v4, a1, a2);
}

uint64_t TagService.init(tagController:subscriptionController:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t TagService.fetchTag(for:)(uint64_t a1, uint64_t a2)
{
  sub_1BFEF9A78();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  uint64_t v5 = self;
  swift_bridgeObjectRetain();
  id v9 = objc_msgSend(v5, sel_defaultCachePolicy);
  FCCurrentQoSOrUtilityIfMain();
  sub_1C1262450(0, (unint64_t *)&unk_1EB8714A0, (uint64_t (*)(uint64_t))sub_1BFC8BAC0, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1C151911C();
  swift_bridgeObjectRelease();

  id v6 = (void *)sub_1C1518E7C();
  sub_1BFFB52BC();
  uint64_t v7 = sub_1C1518FEC();
  swift_release();

  return v7;
}

uint64_t sub_1C1261850(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1C1262638();
    swift_allocError();
    *uint64_t v4 = 1;
    return swift_willThrow();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C18C7CB0](0, v1);
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1C1262450(0, &qword_1EB85AB68, (uint64_t (*)(uint64_t))sub_1BFFB52BC, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1C151908C();
  }
  __break(1u);
  return result;
}

uint64_t TagService.fetchTags(for:cachePolicy:qualityOfService:)()
{
  return sub_1C151911C();
}

void sub_1C1261A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = *(void **)(a5 + 16);
  swift_retain();
  sub_1BFD430AC(a6);
  uint64_t v18 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a3;
  void v19[3] = a4;
  void v19[4] = sub_1BFD35690;
  v19[5] = v16;
  v19[6] = a6;
  void v21[4] = sub_1C12626D4;
  v21[5] = v19;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 1107296256;
  v21[2] = sub_1C1261CCC;
  void v21[3] = &block_descriptor_17_0;
  uint64_t v20 = _Block_copy(v21);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v17, sel_fetchTagsForTagIDs_cachePolicy_qualityOfService_completionHandler_, v18, a7, a8, v20);
  _Block_release(v20);
}

void sub_1C1261BAC(uint64_t a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  if (a2)
  {
    id v9 = a2;
    ((void (*)(id))a3)(a2);
    id v10 = a2;
LABEL_3:

    return;
  }
  if (!a1)
  {
    sub_1C1262638();
    uint64_t v15 = swift_allocError();
    *uint64_t v16 = 0;
    a3();
    id v10 = (id)v15;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0B6CC64(a7, a1);
  swift_bridgeObjectRelease();
  a5(v14);
  swift_bridgeObjectRelease();
}

uint64_t sub_1C1261CCC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BFFB52BC();
    uint64_t v4 = sub_1C151E33C();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t TagService.cachedDislikedTagIDs()()
{
  return sub_1C1261D88((SEL *)&selRef_mutedTagIDs);
}

uint64_t TagService.cachedSubscribedTagIDs()()
{
  return sub_1C1261D88((SEL *)&selRef_subscribedTagIDs);
}

uint64_t sub_1C1261D88(SEL *a1)
{
  id v2 = [*(id *)(v1 + 24) *a1];
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  int v3 = v2;
  uint64_t v4 = sub_1C151EBCC();

  return v4;
}

uint64_t TagService.fetchSubscribedTags(qualityOfService:)()
{
  return sub_1C151911C();
}

void sub_1C1261E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = *(void **)(a5 + 24);
  swift_retain();
  uint64_t v14 = (void *)_sSo17OS_dispatch_queueC8NewsFeedE6global16qualityOfServiceABSo09NSQualityhI0V_tFZ_0(a6);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = sub_1BFD35690;
  v15[3] = v12;
  v15[4] = a3;
  v15[5] = a4;
  v17[4] = sub_1C126262C;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1C10AF224;
  v17[3] = &block_descriptor_100;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_fetchAllTagsWithCallbackQueue_maximumCachedAge_qualityOfService_completion_, v14, a6, v16, 1.79769313e308);
  _Block_release(v16);
}

void sub_1C1261FD0(void *a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(id))
{
  if (a1)
  {
    id v10 = a1;
    a3();
    id v6 = v10;
LABEL_4:

    return;
  }
  if (a2)
  {
    id v9 = a2;
    a5(a2);
    id v6 = a2;
    goto LABEL_4;
  }
}

uint64_t TagService.deinit()
{
  return v0;
}

uint64_t TagService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C1262108(uint64_t a1, uint64_t a2)
{
  return TagService.fetchTag(for:)(a1, a2);
}

uint64_t sub_1C126212C()
{
  id v2 = objc_msgSend(self, sel_defaultCachePolicy);
  FCCurrentQoSOrUtilityIfMain();
  sub_1C1262450(0, (unint64_t *)&unk_1EB8714A0, (uint64_t (*)(uint64_t))sub_1BFC8BAC0, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v0 = sub_1C151911C();

  return v0;
}

uint64_t sub_1C1262200()
{
  return sub_1C151911C();
}

uint64_t sub_1C12622A8()
{
  return sub_1C151911C();
}

uint64_t sub_1C126233C(uint64_t a1, uint64_t a2)
{
  return sub_1C12623E4(a1, a2, (SEL *)&selRef_mutedTagIDs);
}

uint64_t sub_1C1262348()
{
  return sub_1C151911C();
}

uint64_t sub_1C12623D8(uint64_t a1, uint64_t a2)
{
  return sub_1C12623E4(a1, a2, (SEL *)&selRef_subscribedTagIDs);
}

uint64_t sub_1C12623E4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*(id *)(*(void *)v3 + 24) *a3];
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C151EBCC();

  return v6;
}

void sub_1C1262444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1261A1C(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5]);
}

void sub_1C1262450(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C12624B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1261E74(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

unint64_t sub_1C12624BC()
{
  unint64_t result = qword_1EB85DFB8;
  if (!qword_1EB85DFB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB85DFB8);
  }
  return result;
}

uint64_t dispatch thunk of TagServiceType.fetchTag(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TagServiceType.fetchTags(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TagServiceType.fetchTags(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of TagServiceType.fetchTags(for:cachePolicy:qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of TagServiceType.cachedDislikedTagIDs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TagServiceType.fetchSubscribedTags(qualityOfService:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of TagServiceType.cachedSubscribedTagIDs()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t method lookup function for TagService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TagService);
}

uint64_t dispatch thunk of TagService.__allocating_init(tagController:subscriptionController:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C12625B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12625EC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C126262C(void *a1, void *a2)
{
  sub_1C1261FD0(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(id))(v2 + 32));
}

unint64_t sub_1C1262638()
{
  unint64_t result = qword_1EA1AD6D0;
  if (!qword_1EA1AD6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD6D0);
  }
  return result;
}

uint64_t sub_1C126268C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C12626D4(uint64_t a1, void *a2)
{
  sub_1C1261BAC(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

unsigned char *storeEnumTagSinglePayload for TagService.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12627B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagService.Errors()
{
  return &type metadata for TagService.Errors;
}

unint64_t sub_1C12627EC()
{
  unint64_t result = qword_1EA1AD6D8;
  if (!qword_1EA1AD6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD6D8);
  }
  return result;
}

unint64_t sub_1C1262854()
{
  unint64_t result = qword_1EB88CCB0;
  if (!qword_1EB88CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88CCB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatSlotTransformBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1262974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotTransformBehavior()
{
  return &type metadata for FormatSlotTransformBehavior;
}

uint64_t SportsDataVisualization.kind.getter()
{
  uint64_t result = 0x65726F6373;
  switch(*v0 >> 61)
  {
    case 1:
      uint64_t result = 0x676E69646E617473;
      break;
    case 2:
      uint64_t result = 0x74656B63617262;
      break;
    case 3:
      uint64_t result = 0x65726F6353786F62;
      break;
    case 4:
      uint64_t result = 0x726F6353656E696CLL;
      break;
    case 5:
      uint64_t result = 0x65527972756A6E69;
      break;
    case 6:
      uint64_t result = 0x6579616C5079656BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t SportsDataVisualization.umcCanonicalId.getter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0 >> 61)
  {
    case 1uLL:
      v1 &= 0x1FFFFFFFFFFFFFFFuLL;
      goto LABEL_4;
    case 2uLL:
      swift_retain();
      uint64_t v2 = SportsBracketGroupDataVisualization.umcCanonicalId.getter();
      swift_release();
      return v2;
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
      uint64_t v2 = *(void *)(*(void *)((v1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) + 32);
      goto LABEL_5;
    default:
LABEL_4:
      uint64_t v2 = *(void *)(*(void *)(v1 + 16) + 40);
LABEL_5:
      swift_bridgeObjectRetain();
      return v2;
  }
}

uint64_t SportsDataVisualization.urlDataSources.getter()
{
  switch(*v0 >> 61)
  {
    case 2:
      swift_retain();
      uint64_t v1 = SportsBracketGroupDataVisualization.urlDataSources.getter();
      swift_release();
      uint64_t result = v1;
      break;
    default:
      uint64_t result = swift_bridgeObjectRetain();
      break;
  }
  return result;
}

uint64_t SportsDataVisualization.identifier.getter()
{
  sub_1C126638C(0, (unint64_t *)&qword_1EB885098, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], &qword_1EB8900F0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v10 - v4;
  switch(*v0 >> 61)
  {
    case 1:
      uint64_t v6 = 0x676E69646E617473;
      goto LABEL_6;
    case 2:
      strcpy((char *)v10, "bracket::");
      WORD1(v10[1]) = 0;
      HIDWORD(v10[1]) = -385875968;
      sub_1C00FD9D4();
      swift_retain();
      sub_1C151938C();
      sub_1C0655634();
      sub_1C151E55C();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1C151E80C();
      swift_release();
      goto LABEL_12;
    case 3:
      uint64_t v6 = 0x65726F6353786F62;
LABEL_6:
      unint64_t v7 = 0xEA00000000003A3ALL;
      goto LABEL_10;
    case 4:
      uint64_t v6 = 0x726F6353656E696CLL;
      unint64_t v7 = 0xEB000000003A3A65;
      goto LABEL_10;
    case 5:
      v10[0] = 0;
      v10[1] = 0xE000000000000000;
      swift_retain();
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v10, "injuryReport::");
      HIBYTE(v10[1]) = -18;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 6:
      uint64_t v6 = 0x6579616C5079656BLL;
      unint64_t v7 = 0xEB000000003A3A72;
      goto LABEL_10;
    default:
      uint64_t v6 = 0x3A3A65726F6373;
      unint64_t v7 = 0xE700000000000000;
LABEL_10:
      v10[0] = v6;
      v10[1] = v7;
      swift_retain();
      swift_bridgeObjectRetain();
LABEL_11:
      sub_1C151E80C();
      swift_release();
LABEL_12:
      swift_bridgeObjectRelease();
      return v10[0];
  }
}

uint64_t SportsDataVisualization.event.getter()
{
  uint64_t result = 0;
  switch(*v0 >> 61)
  {
    case 1:
    case 2:
      return result;
    default:
      uint64_t result = swift_unknownObjectRetain();
      break;
  }
  return result;
}

void SportsDataVisualization.config.getter(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config;
      goto LABEL_10;
    case 2uLL:
      sub_1C00FD9D4();
      swift_retain();
      sub_1C151939C();
      uint64_t v6 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
      uint64_t v7 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
      uint64_t v8 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
      uint64_t v9 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
      uint64_t v10 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
      uint64_t v11 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 40);
      sub_1C025C670(v6, v7);
      swift_release();
      swift_release();
      *a1 = v6;
      a1[1] = v7;
      a1[2] = v8;
      a1[3] = v9;
      a1[4] = v10;
      a1[5] = v11;
      return;
    case 3uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config;
      goto LABEL_10;
    case 4uLL:
      *((_OWORD *)a1 + 1) = 0u;
      *((_OWORD *)a1 + 2) = 0u;
      *(_OWORD *)a1 = 0u;
      return;
    case 5uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config;
      goto LABEL_10;
    case 6uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config;
      goto LABEL_10;
    default:
      uint64_t v4 = *(void *)(v3 + 16);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_config;
LABEL_10:
      uint64_t v12 = (uint64_t *)(v4 + *v5);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = v12[2];
      uint64_t v16 = v12[3];
      uint64_t v17 = v12[4];
      uint64_t v18 = v12[5];
      *a1 = *v12;
      a1[1] = v14;
      a1[2] = v15;
      a1[3] = v16;
      a1[4] = v17;
      a1[5] = v18;
      sub_1C025C670(v13, v14);
      return;
  }
}

uint64_t SportsDataVisualization.partialSelector.getter()
{
  uint64_t result = 0x65726F6373;
  switch(*v0 >> 61)
  {
    case 1:
      uint64_t result = 0x676E69646E617473;
      break;
    case 2:
      uint64_t result = 0x74656B63617262;
      break;
    case 3:
      uint64_t result = 0x726F63732D786F62;
      break;
    case 4:
      uint64_t result = 0x6F63732D656E696CLL;
      break;
    case 5:
      uint64_t result = 0x722D7972756A6E69;
      break;
    case 6:
      uint64_t result = 0x79616C702D79656BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t SportsDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_configuredEmbedUrl;
      goto LABEL_9;
    case 2uLL:
      sub_1C00FD9D4();
      swift_retain();
      sub_1C151939C();
      uint64_t v6 = v12 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_configuredEmbedUrl;
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v6, v7);
      swift_release();
      return swift_release();
    case 3uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_configuredEmbedUrl;
      goto LABEL_9;
    case 4uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl;
      goto LABEL_9;
    case 5uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_configuredEmbedUrl;
      goto LABEL_9;
    case 6uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl;
      goto LABEL_9;
    default:
      uint64_t v4 = *(void *)(v3 + 16);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_embedUrl;
LABEL_9:
      uint64_t v9 = v4 + *v5;
      uint64_t v10 = sub_1C1515FDC();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
      return v11(a1, v9, v10);
  }
}

uint64_t SportsDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_embedUrl;
      goto LABEL_9;
    case 2uLL:
      sub_1C00FD9D4();
      swift_retain();
      sub_1C151939C();
      uint64_t v6 = v12 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_embedUrl;
      uint64_t v7 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v6, v7);
      swift_release();
      return swift_release();
    case 3uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_embedUrl;
      goto LABEL_9;
    case 4uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl;
      goto LABEL_9;
    case 5uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_embedUrl;
      goto LABEL_9;
    case 6uLL:
      uint64_t v4 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl;
      goto LABEL_9;
    default:
      uint64_t v4 = *(void *)(v3 + 16);
      uint64_t v5 = &OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_embedUrl;
LABEL_9:
      uint64_t v9 = v4 + *v5;
      uint64_t v10 = sub_1C1515FDC();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
      return v11(a1, v9, v10);
  }
}

void SportsDataVisualization.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1 >> 61;
}

uint64_t SportsDataVisualization.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C1264C40(0, &qword_1EB86B688, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1264B60();
  sub_1C1520EBC();
  if (!v2)
  {
    char v27 = 0;
    sub_1C1264BB4();
    sub_1C15206EC();
    switch((char)v26)
    {
      case 1:
        type metadata accessor for SportsStandingDataVisualization();
        char v27 = 1;
        sub_1C12649C8(&qword_1EA1AD6E8, (void (*)(uint64_t))type metadata accessor for SportsStandingDataVisualization);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v13 = v26;
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v13;
        *a2 = v14 | 0x2000000000000000;
        break;
      case 2:
        type metadata accessor for SportsBracketGroupDataVisualization();
        char v27 = 1;
        sub_1C12649C8(&qword_1EA1AD6E0, (void (*)(uint64_t))type metadata accessor for SportsBracketGroupDataVisualization);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v15 = v26;
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v15;
        *a2 = v16 | 0x4000000000000000;
        break;
      case 3:
        type metadata accessor for SportsBoxScoreDataVisualization();
        char v27 = 1;
        sub_1C12649C8(&qword_1EA1A7CF0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v17 = v26;
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v17;
        *a2 = v18 | 0x6000000000000000;
        break;
      case 4:
        type metadata accessor for SportsLineScoreDataVisualization();
        char v27 = 1;
        sub_1C12649C8(&qword_1EA1A7D00, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v19 = v26;
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v19;
        *a2 = v20 | 0x8000000000000000;
        break;
      case 5:
        type metadata accessor for SportsInjuryReportDataVisualization();
        char v27 = 1;
        sub_1C12649C8(&qword_1EA1A7D10, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v21 = v26;
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v21;
        *a2 = v22 | 0xA000000000000000;
        break;
      case 6:
        type metadata accessor for SportsKeyPlayerDataVisualization();
        char v27 = 1;
        sub_1C12649C8(&qword_1EA1A7D20, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v23 = v26;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v23;
        *a2 = v24 | 0xC000000000000000;
        break;
      default:
        type metadata accessor for SportsScoreDataVisualization();
        char v27 = 1;
        sub_1C12649C8((unint64_t *)&unk_1EB868798, (void (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization);
        sub_1C15206EC();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        uint64_t v11 = v26;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v11;
        *a2 = v12;
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t SportsDataVisualization.encode(to:)(void *a1)
{
  sub_1C1264C40(0, &qword_1EB86B908, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - v7;
  unint64_t v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1264B60();
  sub_1C1520F0C();
  switch(v9 >> 61)
  {
    case 1uLL:
      uint64_t v13 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v21) = 1;
      char v22 = 0;
      sub_1C1264CA4();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v21 = v13;
        char v22 = 1;
        type metadata accessor for SportsStandingDataVisualization();
        uint64_t v11 = (unint64_t *)&unk_1EA1AD6F8;
        uint64_t v12 = type metadata accessor for SportsStandingDataVisualization;
        goto LABEL_16;
      }
      break;
    case 2uLL:
      uint64_t v14 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v21) = 2;
      char v22 = 0;
      sub_1C1264CA4();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v21 = v14;
        char v22 = 1;
        type metadata accessor for SportsBracketGroupDataVisualization();
        uint64_t v11 = (unint64_t *)&unk_1EA1AD6F0;
        uint64_t v12 = type metadata accessor for SportsBracketGroupDataVisualization;
        goto LABEL_16;
      }
      break;
    case 3uLL:
      uint64_t v15 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v21) = 3;
      char v22 = 0;
      sub_1C1264CA4();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v21 = v15;
        char v22 = 1;
        type metadata accessor for SportsBoxScoreDataVisualization();
        uint64_t v11 = &qword_1EA1A7C90;
        uint64_t v12 = type metadata accessor for SportsBoxScoreDataVisualization;
        goto LABEL_16;
      }
      break;
    case 4uLL:
      uint64_t v16 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v21) = 4;
      char v22 = 0;
      sub_1C1264CA4();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v21 = v16;
        char v22 = 1;
        type metadata accessor for SportsLineScoreDataVisualization();
        uint64_t v11 = &qword_1EA1A7CA8;
        uint64_t v12 = type metadata accessor for SportsLineScoreDataVisualization;
        goto LABEL_16;
      }
      break;
    case 5uLL:
      uint64_t v17 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v21) = 5;
      char v22 = 0;
      sub_1C1264CA4();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v21 = v17;
        char v22 = 1;
        type metadata accessor for SportsInjuryReportDataVisualization();
        uint64_t v11 = &qword_1EA1A7CC0;
        uint64_t v12 = type metadata accessor for SportsInjuryReportDataVisualization;
        goto LABEL_16;
      }
      break;
    case 6uLL:
      uint64_t v18 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v21) = 6;
      char v22 = 0;
      sub_1C1264CA4();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v21 = v18;
        char v22 = 1;
        type metadata accessor for SportsKeyPlayerDataVisualization();
        uint64_t v11 = &qword_1EA1A7CD8;
        uint64_t v12 = type metadata accessor for SportsKeyPlayerDataVisualization;
        goto LABEL_16;
      }
      break;
    default:
      uint64_t v10 = *(void *)(v9 + 16);
      LOBYTE(v21) = 0;
      char v22 = 0;
      sub_1C1264CA4();
      swift_retain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v21 = v10;
        char v22 = 1;
        type metadata accessor for SportsScoreDataVisualization();
        uint64_t v11 = &qword_1EB868790;
        uint64_t v12 = type metadata accessor for SportsScoreDataVisualization;
LABEL_16:
        sub_1C12649C8(v11, (void (*)(uint64_t))v12);
        sub_1C152080C();
      }
      break;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1C126432C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C126438C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C12643F0(uint64_t a1)
{
  unint64_t v2 = sub_1C1264B60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C126442C(uint64_t a1)
{
  unint64_t v2 = sub_1C1264B60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1264468(unsigned __int8 *a1, char *a2)
{
  return sub_1C14819D4(*a1, *a2);
}

uint64_t sub_1C1264474()
{
  return sub_1C044DC84();
}

uint64_t sub_1C1264480()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12645A8()
{
  return sub_1C044DC84();
}

uint64_t sub_1C12645B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1266340();
  *a1 = result;
  return result;
}

void sub_1C12645E0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x65726F6373;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x676E69646E617473;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x74656B63617262;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0x65726F6353786F62;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 4:
      *(void *)a1 = 0x726F6353656E696CLL;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    case 5:
      strcpy((char *)a1, "injuryReport");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 6:
      *(void *)a1 = 0x6579616C5079656BLL;
      *(void *)(a1 + 8) = 0xE900000000000072;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C12646EC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C126474C()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C126479C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsDataVisualization.init(from:)(a1, a2);
}

uint64_t sub_1C12647B4(void *a1)
{
  return SportsDataVisualization.encode(to:)(a1);
}

uint64_t SportsDataVisualization.hash(into:)()
{
  SportsDataVisualization.identifier.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t SportsDataVisualization.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1264898()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1264900()
{
  SportsDataVisualization.identifier.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1264964()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12649C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8NewsFeed23SportsDataVisualizationO2eeoiySbAC_ACtFZ_0(void *a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  switch(*a1 >> 61)
  {
    case 1:
      if (v2 >> 61 == 1) {
        goto LABEL_3;
      }
      goto LABEL_9;
    case 2:
      if (v2 >> 61 == 2) {
        goto LABEL_3;
      }
      goto LABEL_9;
    case 3:
      if (v2 >> 61 == 3) {
        goto LABEL_3;
      }
      goto LABEL_9;
    case 4:
      if (v2 >> 61 == 4) {
        goto LABEL_3;
      }
      goto LABEL_9;
    case 5:
      if (v2 >> 61 == 5) {
        goto LABEL_3;
      }
      goto LABEL_9;
    case 6:
      if (v2 >> 61 == 6) {
        goto LABEL_3;
      }
      goto LABEL_9;
    default:
      if (v2 >> 61)
      {
LABEL_9:
        char v7 = 0;
      }
      else
      {
LABEL_3:
        uint64_t v3 = SportsDataVisualization.identifier.getter();
        uint64_t v5 = v4;
        if (v3 == SportsDataVisualization.identifier.getter() && v5 == v6) {
          char v7 = 1;
        }
        else {
          char v7 = sub_1C1520A9C();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return v7 & 1;
  }
}

unint64_t sub_1C1264B60()
{
  unint64_t result = qword_1EB867578;
  if (!qword_1EB867578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867578);
  }
  return result;
}

unint64_t sub_1C1264BB4()
{
  unint64_t result = qword_1EB8675A0;
  if (!qword_1EB8675A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8675A0);
  }
  return result;
}

uint64_t sub_1C1264C08()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C1264C40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1264B60();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C1264CA4()
{
  unint64_t result = qword_1EB867590;
  if (!qword_1EB867590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867590);
  }
  return result;
}

unint64_t sub_1C1264CFC()
{
  unint64_t result = qword_1EB86BEE8;
  if (!qword_1EB86BEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BEE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualization()
{
  return &type metadata for SportsDataVisualization;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualization.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1264E2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualization.CodingType()
{
  return &type metadata for SportsDataVisualization.CodingType;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1264F30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualization.CodingKeys()
{
  return &type metadata for SportsDataVisualization.CodingKeys;
}

unint64_t sub_1C1264F6C()
{
  unint64_t result = qword_1EA1AD700;
  if (!qword_1EA1AD700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD700);
  }
  return result;
}

unint64_t sub_1C1264FC4()
{
  unint64_t result = qword_1EA1AD708;
  if (!qword_1EA1AD708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD708);
  }
  return result;
}

unint64_t sub_1C126501C()
{
  unint64_t result = qword_1EB867588;
  if (!qword_1EB867588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867588);
  }
  return result;
}

unint64_t sub_1C1265074()
{
  unint64_t result = qword_1EB867580;
  if (!qword_1EB867580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867580);
  }
  return result;
}

unint64_t sub_1C12650C8()
{
  unint64_t result = qword_1EB867598;
  if (!qword_1EB867598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867598);
  }
  return result;
}

void *sub_1C126511C(uint64_t a1, unint64_t *a2)
{
  sub_1C126638C(0, &qword_1EA1AD710, (unint64_t *)&unk_1EA19C618, (uint64_t)&type metadata for FormatInspectionGroup, &qword_1EA1AD718);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v81 - v7;
  unint64_t v9 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
  {
    switch(v9 >> 61)
    {
      case 1uLL:
        uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C126642C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        sub_1C126642C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v23);
        sub_1C0181BEC(0);
        unint64_t v26 = (*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x676E69646E617453, 0xE800000000000000, (void *)(v27 + v26));
        uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27 + v26, 0, 1, v28);
        sub_1C09BCFA4(0xD000000000000019, 0x80000001C1632E70, 0, 0, v27, &v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v29 = swift_allocObject();
        *(void *)(inited + 32) = v29;
        *(void *)(v29 + 48) = v85;
        long long v30 = v84;
        *(_OWORD *)(v29 + 16) = v83;
        *(_OWORD *)(v29 + 32) = v30;
        uint64_t v31 = swift_retain();
        uint64_t v32 = sub_1C09D4D90(v31);
        goto LABEL_13;
      case 2uLL:
        v81[1] = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C126642C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v34 = swift_initStackObject();
        *(_OWORD *)(v34 + 16) = xmmword_1C1527210;
        sub_1C126642C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v33);
        sub_1C0181BEC(0);
        unint64_t v36 = (*(unsigned __int8 *)(*(void *)(v35 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x74656B63617242, 0xE700000000000000, (void *)(v37 + v36));
        uint64_t v38 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37 + v36, 0, 1, v38);
        sub_1C09BCFA4(0xD000000000000019, 0x80000001C1632E70, 0, 0, v37, &v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v34 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v34 + 64) = &off_1F1BDEC90;
        uint64_t v39 = swift_allocObject();
        v81[0] = v81;
        *(void *)(v34 + 32) = v39;
        *(void *)(v39 + 48) = v85;
        long long v40 = v84;
        *(_OWORD *)(v39 + 16) = v83;
        *(_OWORD *)(v39 + 32) = v40;
        MEMORY[0x1F4188790](v39);
        v81[-2] = a1;
        sub_1C00FD9D4();
        swift_retain_n();
        sub_1C151938C();
        MEMORY[0x1C18C0EE0](v82, v5);
        uint64_t v41 = sub_1C0234BB4(v82[0]);
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_1C131B79C(v41);
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        swift_release();
        *(void *)(v34 + 96) = &type metadata for FormatInspection;
        *(void *)(v34 + 104) = &off_1F1C29D30;
        *(void *)(v34 + 72) = v42;
        uint64_t v43 = sub_1C131B79C(v34);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        goto LABEL_14;
      case 3uLL:
        uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C126642C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        sub_1C126642C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v44);
        sub_1C0181BEC(0);
        unint64_t v46 = (*(unsigned __int8 *)(*(void *)(v45 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v45 - 8) + 80);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_1C1529AE0;
        uint64_t v48 = (void *)(v47 + v46);
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x726F635320786F42, 0xE900000000000065, v48);
        uint64_t v49 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
        sub_1C09BCFA4(0xD000000000000019, 0x80000001C1632E70, 0, 0, v47, &v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v50 = swift_allocObject();
        *(void *)(inited + 32) = v50;
        *(void *)(v50 + 48) = v85;
        long long v51 = v84;
        *(_OWORD *)(v50 + 16) = v83;
        *(_OWORD *)(v50 + 32) = v51;
        uint64_t v52 = swift_retain();
        uint64_t v32 = sub_1C0A463C0(v52);
        goto LABEL_13;
      case 4uLL:
        uint64_t v53 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C126642C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        sub_1C126642C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v53);
        sub_1C0181BEC(0);
        unint64_t v55 = (*(unsigned __int8 *)(*(void *)(v54 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v54 - 8) + 80);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1C1529AE0;
        uint64_t v57 = (void *)(v56 + v55);
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6F635320656E694CLL, 0xEA00000000006572, v57);
        uint64_t v58 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
        sub_1C09BCFA4(0xD000000000000019, 0x80000001C1632E70, 0, 0, v56, &v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v59 = swift_allocObject();
        *(void *)(inited + 32) = v59;
        *(void *)(v59 + 48) = v85;
        long long v60 = v84;
        *(_OWORD *)(v59 + 16) = v83;
        *(_OWORD *)(v59 + 32) = v60;
        uint64_t v61 = swift_retain();
        uint64_t v32 = sub_1C025E110(v61);
        goto LABEL_13;
      case 5uLL:
        unsigned __int8 v62 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C126642C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        sub_1C126642C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v62);
        sub_1C0181BEC(0);
        unint64_t v64 = (*(unsigned __int8 *)(*(void *)(v63 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v63 - 8) + 80);
        uint64_t v65 = swift_allocObject();
        *(_OWORD *)(v65 + 16) = xmmword_1C1529AE0;
        uint64_t v66 = (void *)(v65 + v64);
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x52207972756A6E49, 0xED000074726F7065, v66);
        uint64_t v67 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 0, 1, v67);
        sub_1C09BCFA4(0xD000000000000019, 0x80000001C1632E70, 0, 0, v65, &v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v68 = swift_allocObject();
        *(void *)(inited + 32) = v68;
        *(void *)(v68 + 48) = v85;
        long long v69 = v84;
        *(_OWORD *)(v68 + 16) = v83;
        *(_OWORD *)(v68 + 32) = v69;
        uint64_t v70 = swift_retain();
        uint64_t v32 = sub_1C0AB6BE8(v70);
        goto LABEL_13;
      case 6uLL:
        long long v71 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C126642C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        sub_1C126642C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v71);
        sub_1C0181BEC(0);
        unint64_t v73 = (*(unsigned __int8 *)(*(void *)(v72 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v72 - 8) + 80);
        uint64_t v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_1C1529AE0;
        long long v75 = (void *)(v74 + v73);
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x79616C502079654BLL, 0xEA00000000007265, v75);
        uint64_t v76 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
        sub_1C09BCFA4(0xD000000000000019, 0x80000001C1632E70, 0, 0, v74, &v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v77 = swift_allocObject();
        *(void *)(inited + 32) = v77;
        *(void *)(v77 + 48) = v85;
        long long v78 = v84;
        *(_OWORD *)(v77 + 16) = v83;
        *(_OWORD *)(v77 + 32) = v78;
        unint64_t v79 = swift_retain();
        uint64_t v32 = sub_1C12AF3F4(v79);
LABEL_13:
        uint64_t v80 = v32;
        swift_release();
        *(void *)(inited + 96) = &type metadata for FormatInspection;
        *(void *)(inited + 104) = &off_1F1C29D30;
        *(void *)(inited + 72) = v80;
        uint64_t v43 = sub_1C131B79C(inited);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
LABEL_14:
        swift_release();
        unint64_t result = v43;
        break;
      default:
        uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C126642C(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
        sub_1C126642C(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v12);
        sub_1C0181BEC(0);
        unint64_t v15 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x65726F6353, 0xE500000000000000, (void *)(v16 + v15));
        uint64_t v17 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16 + v15, 0, 1, v17);
        sub_1C09BCFA4(0xD000000000000019, 0x80000001C1632E70, 0, 0, v16, &v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v13 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v13 + 64) = &off_1F1BDEC90;
        uint64_t v18 = swift_allocObject();
        *(void *)(v13 + 32) = v18;
        long long v19 = v84;
        *(_OWORD *)(v18 + 16) = v83;
        *(_OWORD *)(v18 + 32) = v19;
        *(void *)(v18 + 48) = v85;
        uint64_t v20 = swift_retain();
        uint64_t v21 = sub_1C137C504(v20);
        swift_release();
        *(void *)(v13 + 96) = &type metadata for FormatInspection;
        *(void *)(v13 + 104) = &off_1F1C29D30;
        *(void *)(v13 + 72) = v21;
        char v22 = sub_1C131B79C(v13);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_release();
        unint64_t result = v22;
        break;
    }
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v10);
  }
  return result;
}

uint64_t sub_1C1266340()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

void sub_1C126638C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1BFC6CA08(255, a3);
    sub_1BFD989C8(a5, a3);
    unint64_t v8 = sub_1C15193BC();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C126642C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1266490()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12664D8@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C137712C(a1, a2);
}

uint64_t static FormatContentSubgroupFilterRequirements.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t FormatContentSubgroupFilterRequirements.minNumberOfItems.getter()
{
  return *(void *)v0;
}

unint64_t sub_1C1266534()
{
  return 0xD000000000000010;
}

uint64_t sub_1C1266550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C1266D9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C126657C(uint64_t a1)
{
  unint64_t v2 = sub_1C1266744();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12665B8(uint64_t a1)
{
  unint64_t v2 = sub_1C1266744();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterRequirements.encode(to:)(void *a1)
{
  sub_1C1266924(0, &qword_1EB86B9F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1266744();
  sub_1C1520F0C();
  sub_1C152077C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C1266744()
{
  unint64_t result = qword_1EB86A990;
  if (!qword_1EB86A990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A990);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterRequirements.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1266924(0, &qword_1EB86B7D8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1266744();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = sub_1C152063C();
    char v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v12 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C1266924(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1266744();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C1266988(void *a1)
{
  a1[1] = sub_1C0C32518();
  a1[2] = sub_1C0C325D0();
  unint64_t result = sub_1C12669C0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12669C0()
{
  unint64_t result = qword_1EA1AD720;
  if (!qword_1EA1AD720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD720);
  }
  return result;
}

uint64_t sub_1C1266A14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatContentSubgroupFilterRequirements.init(from:)(a1, a2);
}

uint64_t sub_1C1266A2C(void *a1)
{
  sub_1C1266924(0, &qword_1EB86B9F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1266744();
  sub_1C1520F0C();
  sub_1C152077C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C1266B7C(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8)) {
      return 1;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRequirements()
{
  return &type metadata for FormatContentSubgroupFilterRequirements;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupFilterRequirements.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C1266C5CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterRequirements.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterRequirements.CodingKeys;
}

unint64_t sub_1C1266C98()
{
  unint64_t result = qword_1EA1AD728;
  if (!qword_1EA1AD728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD728);
  }
  return result;
}

unint64_t sub_1C1266CF0()
{
  unint64_t result = qword_1EB86A9A0;
  if (!qword_1EB86A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A9A0);
  }
  return result;
}

unint64_t sub_1C1266D48()
{
  unint64_t result = qword_1EB86A998;
  if (!qword_1EB86A998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A998);
  }
  return result;
}

uint64_t sub_1C1266D9C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C15FC990)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t FormatFontScalingData.maxSize.getter()
{
  return *(void *)v0;
}

void FormatFontScalingData.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

uint64_t FormatFontScalingStyle.description.getter()
{
  uint64_t result = 2036625250;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74756F6C6C6163;
      break;
    case 2:
      uint64_t result = 0x316E6F6974706163;
      break;
    case 3:
      uint64_t result = 0x326E6F6974706163;
      break;
    case 4:
      uint64_t result = 0x65746F6E746F6F66;
      break;
    case 5:
      uint64_t result = 0x656E696C64616568;
      break;
    case 6:
      uint64_t result = 0x6C64616568627573;
      break;
    case 7:
      uint64_t result = 0x746954656772616CLL;
      break;
    case 8:
      uint64_t result = 0x31656C746974;
      break;
    case 9:
      uint64_t result = 0x32656C746974;
      break;
    case 0xA:
      uint64_t result = 0x33656C746974;
      break;
    case 0xB:
      uint64_t result = 0x326E6F6974636573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C1267014()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C126707C()
{
  FormatFontScalingStyle.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12670E0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C1267144@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatFontScalingStyle.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C1267170(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1482550(*a1, *a2);
}

uint64_t _s8NewsFeed17FormatFontScalingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int16 v2 = *(_WORD *)(a1 + 8);
  __int16 v3 = *(_WORD *)(a2 + 8);
  if ((v2 & 0xFF00) == 0xC00) {
    return (v3 & 0xFF00) == 3072;
  }
  if ((v3 & 0xFF00) == 0xC00) {
    return 0;
  }
  if (v2)
  {
    if ((v3 & 1) == 0) {
      return 0;
    }
  }
  else if ((v3 & 1) != 0 || *(double *)a1 != *(double *)a2)
  {
    return 0;
  }
  uint64_t v5 = FormatFontScalingStyle.rawValue.getter();
  uint64_t v7 = v6;
  if (v5 == FormatFontScalingStyle.rawValue.getter() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v9 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v9 & 1) != 0;
}

uint64_t _s8NewsFeed21FormatFontScalingDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
LABEL_3:
      char v3 = 0;
      return v3 & 1;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      goto LABEL_3;
    }
  }
  uint64_t v4 = FormatFontScalingStyle.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == FormatFontScalingStyle.rawValue.getter() && v6 == v7) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

unint64_t sub_1C1267350(uint64_t a1)
{
  unint64_t result = sub_1C1267378();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1267378()
{
  unint64_t result = qword_1EA1AD730;
  if (!qword_1EA1AD730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD730);
  }
  return result;
}

uint64_t sub_1C12673CC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1267708(a1, a2, a3, (uint64_t (*)(void))sub_1BFDEE468, (uint64_t (*)(void))sub_1BFE65450, (uint64_t (*)(void))sub_1C126740C);
}

unint64_t sub_1C126740C()
{
  unint64_t result = qword_1EA1AD738;
  if (!qword_1EA1AD738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD738);
  }
  return result;
}

unint64_t sub_1C1267460(uint64_t a1)
{
  unint64_t result = sub_1C1267488();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1267488()
{
  unint64_t result = qword_1EA1AD740;
  if (!qword_1EA1AD740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD740);
  }
  return result;
}

uint64_t sub_1C12674DC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1267708(a1, a2, a3, (uint64_t (*)(void))sub_1BFD83280, (uint64_t (*)(void))sub_1BFD7A144, (uint64_t (*)(void))sub_1C126751C);
}

unint64_t sub_1C126751C()
{
  unint64_t result = qword_1EA1AD748;
  if (!qword_1EA1AD748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD748);
  }
  return result;
}

unint64_t sub_1C1267574()
{
  unint64_t result = qword_1EA1AD750;
  if (!qword_1EA1AD750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD750);
  }
  return result;
}

unint64_t sub_1C12675C8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C12675F8();
  unint64_t result = sub_1BFCCBD9C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C12675F8()
{
  unint64_t result = qword_1EA1AD758;
  if (!qword_1EA1AD758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD758);
  }
  return result;
}

unint64_t sub_1C126764C(uint64_t a1)
{
  unint64_t result = sub_1C1267674();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1267674()
{
  unint64_t result = qword_1EA1AD760;
  if (!qword_1EA1AD760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD760);
  }
  return result;
}

uint64_t sub_1C12676C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1267708(a1, a2, a3, (uint64_t (*)(void))sub_1BFD83788, (uint64_t (*)(void))sub_1BFDCC42C, (uint64_t (*)(void))sub_1C1267574);
}

uint64_t sub_1C1267708(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFontScaling(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF4 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 244);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 0xC;
  unsigned int v5 = v3 - 12;
  if (!v4) {
    unsigned int v5 = -1;
  }
  if (v5 + 1 >= 2) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C12677A0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 9);
  if (v1 >= 0xC) {
    return v1 - 11;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C12677B4(uint64_t result, unsigned int a2)
{
  if (a2 > 0xF4)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 245;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 9) = a2 + 11;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFontScaling()
{
  return &type metadata for FormatFontScaling;
}

uint64_t getEnumTagSinglePayload for FormatFontScalingData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 0xC;
  int v5 = v3 - 12;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatFontScalingData()
{
  return &type metadata for FormatFontScalingData;
}

ValueMetadata *type metadata accessor for FormatFontScalingStyle()
{
  return &type metadata for FormatFontScalingStyle;
}

uint64_t initializeWithCopy for FormatSourceMap(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatSourceMap(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for FormatSourceMap(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDebuggerBreakpoint()
{
  return &type metadata for FormatDebuggerBreakpoint;
}

uint64_t sub_1C1267960(unint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
  {
    if ((a3 & 1) == 0)
    {
      unint64_t v8 = a1;
      uint64_t v9 = a4;
      return static FormatOptionValue.< infix(_:_:)(&v9, &v8) & 1;
    }
    return 0;
  }
  if ((a3 & 1) == 0 || a4 == a1 && a5 == a2) {
    return 0;
  }
  return sub_1C1520A9C();
}

uint64_t sub_1C12679E4(char a1, char a2)
{
  uint64_t v2 = 0x64656C6261736964;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v5 = 0x64656C6261736964;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64657375636F66;
      break;
    case 2:
      uint64_t v5 = 0x6867696C68676968;
      unint64_t v3 = 0xEB00000000646574;
      break;
    case 3:
      uint64_t v5 = 0x64657463656C6573;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a1)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x64657375636F66) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6867696C68676968;
      unint64_t v6 = 0xEB00000000646574;
      goto LABEL_9;
    case 3:
      if (v5 == 0x64657463656C6573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 0;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1C1267B80(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 0x73676E69646E6962;
  }
  else {
    uint64_t v3 = 0x736E6F6974706FLL;
  }
  if (a2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a1) {
    uint64_t v5 = 0x73676E69646E6962;
  }
  else {
    uint64_t v5 = 0x736E6F6974706FLL;
  }
  if (a1) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C1267C2C(char a1, char a2)
{
  LOBYTE(v2) = a1;
  unint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x80000001C15FF830;
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v5 = 0xD000000000000021;
    }
    else {
      unint64_t v5 = 0x7461636572706564;
    }
    if (a2 == 1) {
      unint64_t v6 = 0x80000001C15FF850;
    }
    else {
      unint64_t v6 = 0xEA00000000006465;
    }
    int v2 = v2;
    if (!(_BYTE)v2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x80000001C15FF830;
  int v2 = v2;
  if ((_BYTE)v2)
  {
LABEL_9:
    if (v2 == 1) {
      unint64_t v3 = 0xD000000000000021;
    }
    else {
      unint64_t v3 = 0x7461636572706564;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001C15FF850;
    }
    else {
      unint64_t v4 = 0xEA00000000006465;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v4) {
    char v7 = 0;
  }
  else {
    char v7 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C1267D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5 == a1 && a6 == a2 || (sub_1C1520A9C() & 1) != 0)
  {
    if (a7 == a3) {
      return a8 < a4;
    }
    else {
      return a7 < a3;
    }
  }
  else
  {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C1267E14()
{
  uint64_t v0 = FormatFontTrait.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C1267EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - v9;
  sub_1BFEC3EE8();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(type metadata accessor for FormatMetadata() + 28);
  v26[0] = a1;
  v26[1] = a2;
  uint64_t v16 = a2 + v15;
  uint64_t v17 = a1 + v15;
  uint64_t v18 = (uint64_t)&v14[*(int *)(v12 + 56)];
  long long v19 = (void (*)(uint64_t))MEMORY[0x1E4FAB0A8];
  sub_1C1269EA4(v16, (uint64_t)v14, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  sub_1C1269EA4(v17, v18, &qword_1EB871500, v19);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(v19) = v20(v14, 1, v4);
  int v21 = v20((char *)v18, 1, v4);
  if (v19 == 1)
  {
    if (v21 == 1)
    {
      sub_1C151922C();
      sub_1BFDB1C90();
      char v24 = sub_1C151E57C();
    }
    else
    {
      sub_1C1269F10(v18, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      char v24 = 0;
    }
  }
  else if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    char v24 = 1;
  }
  else
  {
    char v22 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v22(v10, v14, v4);
    v22(v7, (char *)v18, v4);
    sub_1BFDB1C90();
    char v24 = sub_1C151E57C();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v7, v4);
    v23(v10, v4);
  }
  return v24 & 1;
}

uint64_t sub_1C12681C8()
{
  uint64_t v0 = FormatItemKind.description.getter();
  uint64_t v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_1C1268270(unint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    if ((a3 & 1) != 0 && (a4 != a1 || a5 != a2))
    {
      char v6 = sub_1C1520A9C();
      return (v6 & 1) == 0;
    }
    goto LABEL_7;
  }
  if (a3)
  {
LABEL_7:
    char v6 = 0;
    return (v6 & 1) == 0;
  }
  unint64_t v8 = a1;
  uint64_t v9 = a4;
  char v6 = static FormatOptionValue.< infix(_:_:)(&v9, &v8);
  return (v6 & 1) == 0;
}

uint64_t sub_1C12682EC(char a1, char a2)
{
  uint64_t v2 = 0x64656C6261736964;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v5 = 0x64656C6261736964;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64657375636F66;
      break;
    case 2:
      uint64_t v5 = 0x6867696C68676968;
      unint64_t v3 = 0xEB00000000646574;
      break;
    case 3:
      uint64_t v5 = 0x64657463656C6573;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a1)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x64657375636F66) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6867696C68676968;
      unint64_t v6 = 0xEB00000000646574;
      goto LABEL_9;
    case 3:
      if (v5 == 0x64657463656C6573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6)
      {
        swift_bridgeObjectRelease_n();
        char v7 = 1;
      }
      else
      {
LABEL_14:
        char v8 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v7 = v8 ^ 1;
      }
      return v7 & 1;
  }
}

uint64_t sub_1C1268494(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 0x73676E69646E6962;
  }
  else {
    uint64_t v3 = 0x736E6F6974706FLL;
  }
  if (a2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a1) {
    uint64_t v5 = 0x73676E69646E6962;
  }
  else {
    uint64_t v5 = 0x736E6F6974706FLL;
  }
  if (a1) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1C126854C(char a1, char a2)
{
  LOBYTE(v2) = a1;
  unint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x80000001C15FF830;
  if (a2)
  {
    if (a2 == 1) {
      unint64_t v5 = 0xD000000000000021;
    }
    else {
      unint64_t v5 = 0x7461636572706564;
    }
    if (a2 == 1) {
      unint64_t v6 = 0x80000001C15FF850;
    }
    else {
      unint64_t v6 = 0xEA00000000006465;
    }
    int v2 = v2;
    if (!(_BYTE)v2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x80000001C15FF830;
  int v2 = v2;
  if ((_BYTE)v2)
  {
LABEL_9:
    if (v2 == 1) {
      unint64_t v3 = 0xD000000000000021;
    }
    else {
      unint64_t v3 = 0x7461636572706564;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001C15FF850;
    }
    else {
      unint64_t v4 = 0xEA00000000006465;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v4)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

BOOL sub_1C1268670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5 == a1 && a6 == a2 || (sub_1C1520A9C() & 1) != 0)
  {
    if (a7 == a3) {
      char v12 = a8 < a4;
    }
    else {
      char v12 = a7 < a3;
    }
  }
  else
  {
    char v12 = sub_1C1520A9C();
  }
  return (v12 & 1) == 0;
}

uint64_t sub_1C1268728()
{
  uint64_t v0 = FormatFontTrait.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1C12687D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - v9;
  sub_1BFEC3EE8();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(type metadata accessor for FormatMetadata() + 28);
  v26[0] = a1;
  v26[1] = a2;
  uint64_t v16 = a2 + v15;
  uint64_t v17 = a1 + v15;
  uint64_t v18 = (uint64_t)&v14[*(int *)(v12 + 56)];
  long long v19 = (void (*)(uint64_t))MEMORY[0x1E4FAB0A8];
  sub_1C1269EA4(v16, (uint64_t)v14, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  sub_1C1269EA4(v17, v18, &qword_1EB871500, v19);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(v19) = v20(v14, 1, v4);
  int v21 = v20((char *)v18, 1, v4);
  if (v19 == 1)
  {
    if (v21 == 1)
    {
      sub_1C151922C();
      sub_1BFDB1C90();
      char v24 = sub_1C151E57C();
    }
    else
    {
      sub_1C1269F10(v18, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      char v24 = 0;
    }
  }
  else if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    char v24 = 1;
  }
  else
  {
    char v22 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v22(v10, v14, v4);
    v22(v7, (char *)v18, v4);
    sub_1BFDB1C90();
    char v24 = sub_1C151E57C();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v7, v4);
    v23(v10, v4);
  }
  return (v24 & 1) == 0;
}

uint64_t sub_1C1268AEC()
{
  uint64_t v0 = FormatItemKind.description.getter();
  uint64_t v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1C1268BA0(uint64_t a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if ((a6 & 1) != 0 && (a1 != a4 || a2 != a5))
    {
      char v6 = sub_1C1520A9C();
      return (v6 & 1) == 0;
    }
    goto LABEL_7;
  }
  if (a6)
  {
LABEL_7:
    char v6 = 0;
    return (v6 & 1) == 0;
  }
  unint64_t v8 = a4;
  uint64_t v9 = a1;
  char v6 = static FormatOptionValue.< infix(_:_:)(&v9, &v8);
  return (v6 & 1) == 0;
}

uint64_t sub_1C1268C0C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64656C6261736964;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64656C6261736964;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64657375636F66;
      break;
    case 2:
      uint64_t v5 = 0x6867696C68676968;
      unint64_t v3 = 0xEB00000000646574;
      break;
    case 3:
      uint64_t v5 = 0x64657463656C6573;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x64657375636F66) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6867696C68676968;
      unint64_t v6 = 0xEB00000000646574;
      goto LABEL_9;
    case 3:
      if (v5 == 0x64657463656C6573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6)
      {
        swift_bridgeObjectRelease_n();
        char v7 = 1;
      }
      else
      {
LABEL_14:
        char v8 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v7 = v8 ^ 1;
      }
      return v7 & 1;
  }
}

uint64_t sub_1C1268DB0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73676E69646E6962;
  }
  else {
    uint64_t v3 = 0x736E6F6974706FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73676E69646E6962;
  }
  else {
    uint64_t v5 = 0x736E6F6974706FLL;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_1C1268E64(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x80000001C15FF830;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000021;
    }
    else {
      unint64_t v5 = 0x7461636572706564;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001C15FF850;
    }
    else {
      unint64_t v6 = 0xEA00000000006465;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x80000001C15FF830;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000021;
    }
    else {
      unint64_t v2 = 0x7461636572706564;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x80000001C15FF850;
    }
    else {
      unint64_t v3 = 0xEA00000000006465;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v8 = 1;
  }
  else
  {
    char v9 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v8 = v9 ^ 1;
  }
  return v8 & 1;
}

BOOL sub_1C1268F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6 || (sub_1C1520A9C() & 1) != 0)
  {
    if (a3 == a7) {
      char v12 = a4 < a8;
    }
    else {
      char v12 = a3 < a7;
    }
  }
  else
  {
    char v12 = sub_1C1520A9C();
  }
  return (v12 & 1) == 0;
}

uint64_t sub_1C126903C()
{
  uint64_t v0 = FormatFontTrait.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FormatFontTrait.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1C12690E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - v9;
  sub_1BFEC3EE8();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(type metadata accessor for FormatMetadata() + 28);
  v26[0] = a1;
  v26[1] = a2;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = (uint64_t)&v14[*(int *)(v12 + 56)];
  long long v19 = (void (*)(uint64_t))MEMORY[0x1E4FAB0A8];
  sub_1C1269EA4(v16, (uint64_t)v14, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  sub_1C1269EA4(v17, v18, &qword_1EB871500, v19);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(v19) = v20(v14, 1, v4);
  int v21 = v20((char *)v18, 1, v4);
  if (v19 == 1)
  {
    if (v21 == 1)
    {
      sub_1C151922C();
      sub_1BFDB1C90();
      char v24 = sub_1C151E57C();
    }
    else
    {
      sub_1C1269F10(v18, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      char v24 = 0;
    }
  }
  else if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    char v24 = 1;
  }
  else
  {
    char v22 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v22(v10, v14, v4);
    v22(v7, (char *)v18, v4);
    sub_1BFDB1C90();
    char v24 = sub_1C151E57C();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v7, v4);
    v23(v10, v4);
  }
  return (v24 & 1) == 0;
}

uint64_t sub_1C1269400()
{
  uint64_t v0 = FormatItemKind.description.getter();
  uint64_t v2 = v1;
  if (v0 == FormatItemKind.description.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_1C12694B4(uint64_t a1)
{
  sub_1C1269E50(0, &qword_1EA1A5280, (void (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v21 - v4;
  uint64_t v6 = type metadata accessor for FormatDebuggerContext();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *v1;
  uint64_t v11 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v12 = v1[3];
  sub_1C1269EA4(a1, (uint64_t)v5, &qword_1EA1A5280, (void (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    uint64_t v15 = v13;
    sub_1C1018B38((uint64_t)v5, (uint64_t)v9);
    uint64_t v17 = v9[2];
    uint64_t v16 = v9[3];
    uint64_t v18 = v12;
    if (v10 == *v9 && v11 == v9[1])
    {
      if (v15 != v17)
      {
        BOOL v14 = 0;
        goto LABEL_13;
      }
    }
    else
    {
      BOOL v14 = 0;
      if ((sub_1C1520A9C() & 1) == 0 || v15 != v17) {
        goto LABEL_13;
      }
    }
    BOOL v14 = v18 == v16;
LABEL_13:
    sub_1C1269DF4((uint64_t)v9);
    return v14;
  }
  sub_1C1269F10((uint64_t)v5, &qword_1EA1A5280, (void (*)(uint64_t))type metadata accessor for FormatDebuggerContext);
  return 0;
}

uint64_t sub_1C12696B0(void *a1)
{
  sub_1C1269D90(0, &qword_1EA1AD780, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  v11[0] = *(_OWORD *)v1;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1269D3C();
  sub_1C1520F0C();
  v11[1] = v11[0];
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_1C0F4CAD0();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C1269820@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1269D90(0, &qword_1EA1AD770, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1269D3C();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1BFEB3CF0();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v10 = v13[1];
    long long v11 = v14;
    *(void *)a2 = v13[0];
    *(void *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C12699C4()
{
  return 0x614D656372756F73;
}

uint64_t sub_1C12699E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x614D656372756F73 && a2 == 0xE900000000000070)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C1269A84(uint64_t a1)
{
  unint64_t v2 = sub_1C1269D3C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1269AC0(uint64_t a1)
{
  unint64_t v2 = sub_1C1269D3C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C1269B00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1269820(a1, a2);
}

uint64_t sub_1C1269B18(void *a1)
{
  return sub_1C12696B0(a1);
}

unint64_t sub_1C1269B34()
{
  unint64_t result = qword_1EA1AD768;
  if (!qword_1EA1AD768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD768);
  }
  return result;
}

uint64_t sub_1C1269B8C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1269BBC(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1C1268670);
}

uint64_t sub_1C1269BA4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1269BBC(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_1C1268F84);
}

uint64_t sub_1C1269BBC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]) & 1;
}

uint64_t sub_1C1269BF8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1269BBC(a1, a2, a3, a4, sub_1C1267D44);
}

BOOL sub_1C1269C10(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  BOOL result = 0;
  if (v6 || (sub_1C1520A9C()) && v2 == v5 && v3 == v4) {
    return 1;
  }
  return result;
}

uint64_t sub_1C1269C80(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_1C1520A9C() & 1) != 0)
  {
    if (v2 == v4) {
      return v3 < v5;
    }
    else {
      return v2 < v4;
    }
  }
  else
  {
    return sub_1C1520A9C();
  }
}

unint64_t sub_1C1269D3C()
{
  unint64_t result = qword_1EA1AD778;
  if (!qword_1EA1AD778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD778);
  }
  return result;
}

void sub_1C1269D90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1269D3C();
    unint64_t v7 = a3(a1, &type metadata for FormatDebuggerBreakpoint.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C1269DF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatDebuggerContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1269E50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1269EA4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1269E50(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1269F10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1269E50(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FormatDebuggerBreakpoint.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C126A008);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDebuggerBreakpoint.CodingKeys()
{
  return &type metadata for FormatDebuggerBreakpoint.CodingKeys;
}

unint64_t sub_1C126A044()
{
  unint64_t result = qword_1EA1AD788;
  if (!qword_1EA1AD788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD788);
  }
  return result;
}

unint64_t sub_1C126A09C()
{
  unint64_t result = qword_1EA1AD790;
  if (!qword_1EA1AD790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD790);
  }
  return result;
}

unint64_t sub_1C126A0F4()
{
  unint64_t result = qword_1EA1AD798;
  if (!qword_1EA1AD798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD798);
  }
  return result;
}

uint64_t FeedLoadingGate.whenLifted.getter()
{
  uint64_t result = MEMORY[0x1C18C0080]();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t FeedLoadingGate.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  FeedLoadingGate.init()();
  return v0;
}

uint64_t FeedLoadingGate.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v2);
  sub_1BFD657AC();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C151856C();
  uint64_t v3 = v0 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth) = 0;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_lock;
  sub_1BFD65808();
  sub_1BFD6565C(0, (unint64_t *)&unk_1EB880C60, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBB320]);
  sub_1BFD656C0();
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  *(void *)(v1 + v5) = sub_1C1517EBC();
  sub_1BFCCB57C();
  uint64_t v6 = (void *)sub_1C151FD3C();
  *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_log) = v6;
  id v7 = v6;
  sub_1C151F38C();
  sub_1C15197BC();

  return v1;
}

uint64_t FeedLoadingGate.__allocating_init(log:)(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1BFC6B534(a1);

  return v2;
}

Swift::Void __swiftcall FeedLoadingGate.push(reason:)(Swift::String reason)
{
  object = reason._object;
  uint64_t countAndFlagsBits = reason._countAndFlagsBits;
  uint64_t v4 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - v8;
  sub_1C1517E7C();
  sub_1BFD6565C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C152A660;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 64) = sub_1BFE9C558();
  *(void *)(v10 + 32) = countAndFlagsBits;
  *(void *)(v10 + 40) = object;
  uint64_t v11 = v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BFD63E68(v11, (uint64_t)v9);
  sub_1BFD63E68((uint64_t)v9, (uint64_t)v6);
  uint64_t v12 = sub_1C151631C();
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v6, 1, v12);
  swift_bridgeObjectRetain();
  if (v13 != 1) {
    sub_1BFD63E0C((uint64_t)v6);
  }
  sub_1BFD63E0C((uint64_t)v9);
  uint64_t v14 = MEMORY[0x1E4FBB390];
  uint64_t v15 = MEMORY[0x1E4FBB3C8];
  *(void *)(v10 + 96) = MEMORY[0x1E4FBB390];
  *(void *)(v10 + 104) = v15;
  *(unsigned char *)(v10 + 72) = v13 != 1;
  char v16 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift);
  *(void *)(v10 + 136) = v14;
  *(void *)(v10 + 144) = v15;
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth;
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth);
  uint64_t v19 = MEMORY[0x1E4FBB550];
  *(unsigned char *)(v10 + 112) = v16;
  uint64_t v20 = MEMORY[0x1E4FBB5C8];
  *(void *)(v10 + 176) = v19;
  *(void *)(v10 + 184) = v20;
  *(void *)(v10 + 152) = v18;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v1 + v17);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + v17) = v23;
    sub_1BFD63EEC(countAndFlagsBits, (uint64_t)object);
    sub_1C1517E8C();
  }
}

Swift::Void __swiftcall FeedLoadingGate.pop(reason:)(Swift::String reason)
{
  object = reason._object;
  uint64_t countAndFlagsBits = reason._countAndFlagsBits;
  uint64_t v4 = type metadata accessor for FeedLoadingGate.Seal(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - v8;
  sub_1C1517E7C();
  sub_1BFD6565C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C152A660;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 64) = sub_1BFE9C558();
  *(void *)(v10 + 32) = countAndFlagsBits;
  *(void *)(v10 + 40) = object;
  uint64_t v11 = v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal;
  swift_beginAccess();
  sub_1BFD63E68(v11, (uint64_t)v9);
  sub_1BFD63E68((uint64_t)v9, (uint64_t)v6);
  uint64_t v12 = sub_1C151631C();
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v6, 1, v12);
  swift_bridgeObjectRetain();
  if (v13 != 1) {
    sub_1BFD63E0C((uint64_t)v6);
  }
  sub_1BFD63E0C((uint64_t)v9);
  uint64_t v14 = MEMORY[0x1E4FBB390];
  uint64_t v15 = MEMORY[0x1E4FBB3C8];
  *(void *)(v10 + 96) = MEMORY[0x1E4FBB390];
  *(void *)(v10 + 104) = v15;
  *(unsigned char *)(v10 + 72) = v13 != 1;
  char v16 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForLift);
  *(void *)(v10 + 136) = v14;
  *(void *)(v10 + 144) = v15;
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth;
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_waitingForPopDepth);
  uint64_t v19 = MEMORY[0x1E4FBB550];
  *(unsigned char *)(v10 + 112) = v16;
  uint64_t v20 = MEMORY[0x1E4FBB5C8];
  *(void *)(v10 + 176) = v19;
  *(void *)(v10 + 184) = v20;
  *(void *)(v10 + 152) = v18;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v1 + v17);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + v17) = v23;
    sub_1BFD63EEC(countAndFlagsBits, (uint64_t)object);
    sub_1C1517E8C();
  }
}

uint64_t FeedLoadingGate.deinit()
{
  swift_release();
  sub_1BFD63E0C(v0 + OBJC_IVAR____TtC8NewsFeed15FeedLoadingGate_seal);
  swift_release();

  return v0;
}

uint64_t sub_1C126A96C()
{
  return type metadata accessor for FeedLoadingGate(0);
}

uint64_t method lookup function for FeedLoadingGate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedLoadingGate);
}

uint64_t dispatch thunk of FeedLoadingGate.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedLoadingGate.__allocating_init(log:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t *sub_1C126A9B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1C151631C();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_1C126AB00(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1C126AC10(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1C126AD84(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1C126AE94(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1C126B008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C126B01C);
}

uint64_t sub_1C126B01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C126B088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C126B09C);
}

uint64_t sub_1C126B09C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1C151631C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C126B11C(uint64_t a1)
{
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C126B184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

id sub_1C126B1F4(char a1)
{
  if (a1) {
    return (id)sub_1C126B758();
  }
  else {
    return *(id *)(v1 + 24);
  }
}

void sub_1C126B204(void *a1, char a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C151811C();
  uint64_t v12 = v11;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v4 + 40);
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_1BFEF2D8C(v10, v12), (v15 & 1) != 0))
  {
    char v16 = *(void **)(*(void *)(v13 + 56) + 8 * v14);
    swift_endAccess();
    id v17 = v16;
    swift_bridgeObjectRelease();
    id v18 = sub_1C126B938(a2 & 1);
    a3();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v19 = a1[3];
    uint64_t v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    uint64_t v21 = *(void **)(v5 + 24);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    sub_1BFC66384((uint64_t)a1, (uint64_t)v25);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    sub_1BFC773DC(v25, v23 + 24);
    *(void *)(v23 + 64) = a3;
    *(void *)(v23 + 72) = a4;
    *(unsigned char *)(v23 + 80) = a2 & 1;
    uint64_t v24 = *(void *)(v20 + 8);
    swift_retain();
    swift_retain();
    sub_1C135BADC(v21, (void (*)(void))sub_1C126C010, v23, v19, v24);
    swift_release();
    swift_release();
  }
}

void sub_1C126B3D4(uint64_t a1, void (*a2)(id), void (*a3)(id))
{
  uint64_t v4 = v3;
  uint64_t v39 = a3;
  uint64_t v7 = type metadata accessor for FeedGroupItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = FeedGroupItem.debugIdentifier.getter();
  uint64_t v16 = v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(v3 + 40);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1BFEF2D8C(v14, v16), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
    swift_endAccess();
    id v21 = v20;
    swift_bridgeObjectRelease();
    a2(v21);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v22 = *(void **)(v4 + 24);
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    sub_1C0605E34(a1, (uint64_t)v13);
    sub_1C0605E34((uint64_t)v13, (uint64_t)v10);
    unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v25 = (v9 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    sub_1C111D600((uint64_t)v13, v26 + v24);
    uint64_t v27 = (void (**)(id))(v26 + v25);
    uint64_t v28 = v39;
    *uint64_t v27 = a2;
    v27[1] = v28;
    swift_retain_n();
    swift_retain_n();
    id v29 = FeedGroupItem.debugAssetHandle.getter();
    if (v29)
    {
      long long v30 = v29;
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
      uint64_t v31 = (void *)sub_1C151F56C();
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = v30;
      v32[3] = v22;
      uint64_t v33 = v22;
      void v32[4] = sub_1C126CDC4;
      v32[5] = v26;
      aBlock[4] = sub_1C126CEB0;
      aBlock[5] = v32;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BFC9FC68;
      aBlock[3] = &block_descriptor_20_1;
      uint64_t v34 = _Block_copy(aBlock);
      id v35 = v30;
      id v36 = v33;
      swift_retain();
      swift_release();
      id v37 = objc_msgSend(v35, sel_downloadIfNeededWithCompletionQueue_completion_, v31, v34);
      _Block_release(v34);
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
      sub_1C126BDF4(0, v23, (uint64_t)v10, a2);
      swift_release();
      swift_release();
    }
    sub_1C0605E98((uint64_t)v10);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1C126B758()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
LABEL_5:
    id v14 = v1;
    return (uint64_t)v2;
  }
  uint64_t v3 = *(void **)(v0 + 24);
  objc_msgSend(v3, sel_size);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v4, v5);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C126CF04;
  *(void *)(v8 + 24) = v7;
  v15[4] = sub_1C066AC30;
  v15[5] = v8;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  v15[2] = sub_1BFD2E6D0;
  v15[3] = &block_descriptor_31_2;
  uint64_t v9 = _Block_copy(v15);
  id v10 = v3;
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v6, sel_imageWithActions_, v9);

  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v6 & 1) == 0)
  {
    uint64_t v13 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v11;
    id v2 = v11;

    uint64_t v1 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1C126B938(char a1)
{
  if (a1)
  {
    objc_msgSend(v1, sel_size);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v2, v3);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v1;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1C126C024;
    *(void *)(v6 + 24) = v5;
    aBlock[4] = sub_1BFD2E744;
    aBlock[5] = v6;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFD2E6D0;
    aBlock[3] = &block_descriptor_101;
    uint64_t v7 = _Block_copy(aBlock);
    id v8 = v1;
    swift_retain();
    swift_release();
    id v9 = objc_msgSend(v4, sel_imageWithActions_, v7);

    _Block_release(v7);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if (v4) {
      __break(1u);
    }
    else {
      return v9;
    }
  }
  else
  {
    return v1;
  }
  return result;
}

void *sub_1C126BB20()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_lightGrayColor);
  double v3 = self;
  double v4 = *MEMORY[0x1E4FB09B8];
  id v5 = objc_msgSend(v3, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09B8]);
  uint64_t v6 = sub_1C06680BC(0, 4271950, 0xE300000000000000, v2, v5, 22.0, 22.0);

  v0[2] = v6;
  id v7 = objc_msgSend(v1, sel_systemGrayColor);
  id v8 = objc_msgSend(v1, sel_lightGrayColor);
  id v9 = objc_msgSend(v3, sel_systemFontOfSize_weight_, 12.0, v4);
  uint64_t v10 = sub_1C06680BC(v7, 0, 0, v8, v9, 22.0, 22.0);

  v0[3] = v10;
  v0[4] = 0;
  v0[5] = MEMORY[0x1E4FBC868];
  return v0;
}

void sub_1C126BC8C(void *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, char a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    if (a1) {
      id v12 = a1;
    }
    else {
      id v12 = *(id *)(Strong + 16);
    }
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    id v13 = a1;
    uint64_t v14 = sub_1C151811C();
    uint64_t v16 = v15;
    swift_beginAccess();
    id v17 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *(void *)(v11 + 40);
    *(void *)(v11 + 40) = 0x8000000000000000;
    sub_1C1067E28((uint64_t)v17, v14, v16, isUniquelyReferenced_nonNull_native);
    *(void *)(v11 + 40) = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v19 = sub_1C126B938(a6 & 1);
    a4();
    swift_release();
  }
}

void sub_1C126BDF4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    if (a1) {
      id v8 = a1;
    }
    else {
      id v8 = *(id *)(Strong + 16);
    }
    id v9 = a1;
    uint64_t v10 = FeedGroupItem.debugIdentifier.getter();
    uint64_t v12 = v11;
    swift_beginAccess();
    id v13 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *(void *)(v7 + 40);
    *(void *)(v7 + 40) = 0x8000000000000000;
    sub_1C1067E28((uint64_t)v13, v10, v12, isUniquelyReferenced_nonNull_native);
    *(void *)(v7 + 40) = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    a4(v13);
    swift_release();
  }
}

uint64_t sub_1C126BF1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatImageCache()
{
  return self;
}

uint64_t sub_1C126BF90()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C126BFC8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

void sub_1C126C010(void *a1)
{
  sub_1C126BC8C(a1, *(void *)(v1 + 16), (void *)(v1 + 24), *(void (**)(void))(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80));
}

id sub_1C126C024()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_drawAtPoint_blendMode_alpha_, 0, 0.0, 0.0, 0.2);
}

uint64_t sub_1C126C048()
{
  return swift_deallocObject();
}

uint64_t sub_1C126C058()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FeedGroupItem() - 8) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v1 + 24) & ~v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();

      break;
    case 1u:

      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v2 + 128) >= 0x11uLL) {
        goto LABEL_9;
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for FeedWeather(0);
      uint64_t v4 = v2 + *(int *)(v3 + 28);
      uint64_t v5 = sub_1C151E2BC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      uint64_t v6 = v2 + *(int *)(v3 + 36);
      sub_1C0092BC8();
      uint64_t v8 = v7;
      id v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v9(v6, v7);
      uint64_t v10 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v9(v6 + v10[5], v8);
      v9(v6 + v10[6], v8);
      v9(v6 + v10[7], v8);
      goto LABEL_9;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 240) >= 0x11uLL) {
LABEL_9:
      }
        swift_bridgeObjectRelease();
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v11 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v12 = v11[10];
      uint64_t v13 = v2 + v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
      {
        uint64_t v15 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);

        uint64_t v16 = v13 + *(int *)(v14 + 28);
        uint64_t v17 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      }
      uint64_t v18 = v2 + v11[11];
      uint64_t v19 = sub_1C151D2DC();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
      if (*(void *)(v2 + v11[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v2 + v11[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }

      break;
    case 6u:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      id v21 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v22 = v2 + v21[8];
      uint64_t v23 = sub_1C1515FDC();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v63(v22, v23);
      uint64_t v25 = v2 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23)) {
        v63(v25, v23);
      }
      swift_release();
      swift_release();
      uint64_t v26 = v2 + v21[12];
      uint64_t v27 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v27 - 1) + 48))(v26, 1, v27))
      {
        uint64_t v62 = v23;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v28 = v27[10];
        uint64_t v29 = v26 + v28 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v30 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30))
        {
          uint64_t v31 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v29, v31);

          v63(v29 + *(int *)(v30 + 28), v62);
        }
        uint64_t v32 = v26 + v27[11];
        uint64_t v33 = sub_1C151D2DC();
        uint64_t v61 = *(void *)(v33 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v32, 1, v33)) {
          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v32, v33);
        }
        if (*(void *)(v26 + v27[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v23 = v62;
        if (*(void *)(v26 + v27[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v34 = v2 + v21[13];
      uint64_t v35 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v36 = type metadata accessor for GenericDataVisualization();
          v63(v34 + *(int *)(v36 + 20), v23);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      break;
    case 7u:

      break;
    case 8u:
      goto LABEL_49;
    case 9u:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 88);
      }
      if (*(void *)(v2 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 128);
      }
      if (*(void *)(v2 + 192)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 168);
      }
      break;
    case 0xAu:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_49:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 0xBu:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v37 = v2 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v38 = v37 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_68;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v42 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v38, 1, v42))
            {
              uint64_t v43 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v38, v43);
            }
          }
          uint64_t v44 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v45 = v38 + *(int *)(v44 + 20);
          int v46 = swift_getEnumCaseMultiPayload();
          if (v46 == 5 || v46 == 4)
          {
            uint64_t v47 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v45, 1, v47))
            {
              uint64_t v48 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v45, v48);
            }
          }
          v38 += *(int *)(v44 + 24);
LABEL_68:
          int v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 5 || v49 == 4)
          {
            uint64_t v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v38, 1, v50))goto LABEL_79; {
          }
            }
          goto LABEL_56;
        case 2u:
          uint64_t v51 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v38, 1, v51)) {
            goto LABEL_56;
          }
          uint64_t v52 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v38, v52);
          uint64_t v53 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v54 = v38 + *(int *)(v53 + 24);
          swift_bridgeObjectRelease();
          unint64_t v55 = *(void *)(v54 + 24);
          if (v55 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v54 + 16), v55);
          }
          swift_bridgeObjectRelease();
          goto LABEL_9;
        case 3u:
          uint64_t v56 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v57 = v38 + *(int *)(v56 + 24);
          uint64_t v58 = type metadata accessor for PuzzleStreak();
          uint64_t v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48);
          if (!v59(v57, 1, v58))
          {
            uint64_t v60 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v57, v60);
          }
          v38 += *(int *)(v56 + 28);
          if (v59(v38, 1, v58)) {
            goto LABEL_56;
          }
LABEL_79:
          uint64_t v39 = sub_1C151555C();
          break;
        default:
          goto LABEL_56;
      }
      goto LABEL_55;
    case 0xCu:
      swift_bridgeObjectRelease();
      uint64_t v38 = v2 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v39 = sub_1C151D6DC();
LABEL_55:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      break;
    default:
      break;
  }
LABEL_56:
  swift_release();
  return swift_deallocObject();
}

void sub_1C126CDC4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FeedGroupItem() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void (**)(id))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C126BDF4(a1, v5, v1 + v4, v6);
}

uint64_t sub_1C126CE68()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C126CEB0()
{
  sub_1C135BC40(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void *))(v0 + 32));
}

uint64_t sub_1C126CEBC()
{
  return swift_deallocObject();
}

uint64_t sub_1C126CEF4()
{
  return swift_deallocObject();
}

uint64_t sub_1C126CF14()
{
  sub_1BFDCB9B4(v0 + 24, (uint64_t)v6);
  sub_1BFDCB9B4((uint64_t)v6, (uint64_t)&v7);
  if (v8)
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v5, "Running ");
    BYTE1(v5[1]) = 0;
    WORD1(v5[1]) = 0;
    HIDWORD(v5[1]) = -402653184;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C152088C();
  }
  else
  {
    double v1 = v7;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v5, "Completed in ");
    HIWORD(v5[1]) = -4864;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    if (qword_1EA194BE8 != -1) {
      swift_once();
    }
    id v2 = objc_msgSend((id)qword_1EA1AD7A0, sel_stringFromTimeInterval_, v1 / 1000.0);
    if (v2)
    {
      uint64_t v3 = v2;
      sub_1C151E62C();
    }
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v5[0];
}

void sub_1C126D168()
{
  if (!qword_1EB8900F8)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8900F8);
    }
  }
}

id sub_1C126D1C0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
  objc_msgSend(v0, sel_setUnitsStyle_, 2);
  id result = objc_msgSend(v0, sel_setAllowedUnits_, 32992);
  qword_1EA1AD7A0 = (uint64_t)v0;
  return result;
}

uint64_t initializeWithCopy for DebugFormatTestSuiteResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatTestSuiteResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for DebugFormatTestSuiteResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatTestSuiteResult()
{
  return &type metadata for DebugFormatTestSuiteResult;
}

uint64_t FeedServiceDebugger.__allocating_init(blueprintProvider:cursorContainerBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v6 + 88) - 8) + 32))(v6 + *(void *)(*(void *)v6 + 112), a1);
  double v7 = (void *)(v6 + *(void *)(*(void *)v6 + 120));
  *double v7 = a2;
  v7[1] = a3;
  return v6;
}

uint64_t FeedServiceDebugger.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 88) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  swift_release();
  return v0;
}

uint64_t FeedServiceDebugger.__deallocating_deinit()
{
  FeedServiceDebugger.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedServiceDebugger.debug(groupIdentifier:debugGroupIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v39 = a3;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v35 = *v4;
  uint64_t v5 = v35;
  uint64_t v6 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedConformanceWitness();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = v10;
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = v12;
  uint64_t v13 = sub_1C151CC9C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = *(uint64_t (**)(char *))((char *)v4 + *(void *)(v5 + 120));
  sub_1C151B3FC();
  uint64_t v18 = v17(v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((~v18 & 0xF000000000000007) != 0)
  {
    sub_1BFEE822C(0, (unint64_t *)&unk_1EB8945A0, MEMORY[0x1E4FAC148]);
    uint64_t v28 = *(void *)(sub_1C151A95C() - 8);
    uint64_t v29 = *(void *)(v28 + 72);
    unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1C152C7F0;
    static RadarAttachment.feedCursorContainer<A>(cursorContainer:)(v18, (uint64_t *)(v27 + v30));
    FeedCursorContainer.feedContext.getter(v18, (uint64_t)v8);
    static RadarAttachment.feedContext(feedContext:)((uint64_t)v8, (uint64_t *)(v27 + v30 + v29));
    sub_1C019CB28((uint64_t)v8);
    uint64_t v31 = v39;
    uint64_t v32 = v38;
    if (!v38)
    {
      uint64_t v32 = v37;
      swift_bridgeObjectRetain();
      uint64_t v31 = v36;
    }
    swift_bridgeObjectRetain();
    static RadarAttachment.feedGroupJournal<A>(cursorContainer:identifier:)(v18, v31, v32, (uint64_t *)(v27 + v30 + 2 * v29));
    swift_bridgeObjectRelease();
    sub_1BFE14324(v18);
  }
  else
  {
    uint64_t v19 = v38;
    if (qword_1EB87B060 != -1) {
      swift_once();
    }
    id v20 = (id)qword_1EB93C700;
    sub_1C151F36C();
    sub_1BFEE822C(0, (unint64_t *)&qword_1EB895EB0, (void (*)(uint64_t))sub_1C0062478);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
    uint64_t v22 = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v23 = sub_1BFE9C558();
    *(void *)(v21 + 64) = v23;
    uint64_t v24 = v37;
    *(void *)(v21 + 32) = v36;
    *(void *)(v21 + 40) = v24;
    uint64_t v40 = v39;
    uint64_t v41 = v19;
    sub_1BFF97D54();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1C151E6AC();
    *(void *)(v21 + 96) = v22;
    *(void *)(v21 + 104) = v23;
    *(void *)(v21 + 72) = v25;
    *(void *)(v21 + 80) = v26;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v27;
}

uint64_t sub_1C126D9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FeedServiceDebugger.debug(groupIdentifier:debugGroupIdentifier:)(a1, a2, a3, a4);
}

uint64_t method lookup function for FeedServiceDebugger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedServiceDebugger);
}

uint64_t dispatch thunk of FeedServiceDebugger.__allocating_init(blueprintProvider:cursorContainerBlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_1C126DA14(char a1, uint64_t a2, void *a3, void (*a4)(id))
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  char v8 = (void *)MEMORY[0x1C18C9C60](v7);
  if (v8)
  {
    id v9 = v8;
    id v10 = objc_msgSend(v8, sel_view);

    if (v10)
    {
      if (a1)
      {
        objc_msgSend(v10, sel_bounds);
        objc_msgSend(a3, sel_setFrame_);
        objc_msgSend(a3, sel_setAutoresizingMask_, 18);
        id v11 = objc_msgSend(v10, sel_addSubview_, a3);
      }
      else
      {
        id v11 = objc_msgSend(a3, sel_removeFromSuperview);
      }
      a4(v11);
    }
  }
}

uint64_t FormatViewController.isBeingUsedAsPlugin.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C126DB54(unsigned __int8 *a1, void *a2)
{
  uint64_t v4 = sub_1C151BE0C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a1;
  id v9 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  unsigned char *v9 = v8;
  id v10 = (unsigned int *)MEMORY[0x1E4FACE38];
  if (!v8) {
    id v10 = (unsigned int *)MEMORY[0x1E4FACE30];
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v10, v4);
  return sub_1C151B90C();
}

uint64_t FormatViewController.isBeingUsedAsPlugin.setter(char a1)
{
  uint64_t v3 = sub_1C151BE0C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  *uint64_t v7 = a1;
  int v8 = (unsigned int *)MEMORY[0x1E4FACE38];
  if ((a1 & 1) == 0) {
    int v8 = (unsigned int *)MEMORY[0x1E4FACE30];
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v8, v3);
  return sub_1C151B90C();
}

void (*FormatViewController.isBeingUsedAsPlugin.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1C151BE0C();
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin;
  v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1C126DE64;
}

void sub_1C126DE64(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if (a2)
  {
    uint64_t v4 = (void *)v3[6];
  }
  else
  {
    uint64_t v4 = (void *)v3[6];
    if (*(unsigned char *)(v3[3] + v3[7])) {
      uint64_t v5 = (unsigned int *)MEMORY[0x1E4FACE38];
    }
    else {
      uint64_t v5 = (unsigned int *)MEMORY[0x1E4FACE30];
    }
    (*(void (**)(void, void, void))(v3[5] + 104))(v3[6], *v5, v3[4]);
    sub_1C151B90C();
  }
  free(v4);
  free(v3);
}

uint64_t FormatViewController.pluggableDelegate.getter()
{
  return sub_1C019A6B4(&OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate);
}

uint64_t FormatViewController.pluggableDelegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C019A70C(a1, a2, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate);
}

uint64_t (*FormatViewController.pluggableDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

uint64_t FormatViewController.pluginIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatViewController.pluginIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatViewController.pluginIdentifier.modify())()
{
  return j__swift_endAccess;
}

id FormatViewController.blueprintViewController.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController);
}

uint64_t FormatViewController.blueprintLayoutProvider.getter()
{
  return swift_retain();
}

uint64_t FormatViewController.selectionProvider.getter()
{
  return sub_1C019A6B4(&OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider);
}

uint64_t FormatViewController.selectionProvider.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C019A70C(a1, a2, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider);
}

uint64_t (*FormatViewController.selectionProvider.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

char *sub_1C126E188(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = sub_1C1518A5C();
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin] = 0;
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = &v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
  void *v15 = 0;
  v15[1] = 0;
  uint64_t v16 = &v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventManager;
  sub_1C12736C0();
  swift_allocObject();
  uint64_t v18 = v6;
  *(void *)&v6[v17] = sub_1C15180FC();
  *(void *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController____lazy_storage___maskLayer] = 0;
  uint64_t v19 = &v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler];
  *(void *)uint64_t v19 = a1;
  *((void *)v19 + 1) = a2;
  *(void *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController] = a3;
  *(void *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintLayoutProvider] = a4;
  *(void *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_commands] = a5;
  *(void *)&v18[OBJC_IVAR____TtC8NewsFeed20FormatViewController_tipManager] = v29;
  swift_unknownObjectRetain();
  id v20 = a3;
  swift_retain();
  swift_retain();
  swift_retain();

  v30.receiver = v18;
  v30.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v30, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v21[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler] + 24) = &off_1F1C23638;
  swift_unknownObjectWeakAssign();
  uint64_t v22 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController];
  unint64_t v23 = v21;
  id v24 = v22;
  sub_1C151B95C();

  sub_1C00BAF18((uint64_t)&unk_1F1B89980);
  sub_1C1518A4C();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1C15180EC();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  swift_release();
  return v23;
}

uint64_t sub_1C126E4B4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1);
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = *(void *)(*(void *)(result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 56);
    swift_unknownObjectRetain();
    v6(ObjectType, v4);

    return swift_unknownObjectRelease();
  }
  return result;
}

id FormatViewController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_retain();
  sub_1C1519F6C();
  swift_release();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id FormatViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void FormatViewController.init(nibName:bundle:)()
{
}

void sub_1C126E828(uint64_t a1, uint64_t a2)
{
  sub_1C1272CCC(&qword_1EA1AD828, a2, (void (*)(uint64_t))type metadata accessor for FormatViewController);
  JUMPOUT(0x1C18C4650);
}

Swift::Void __swiftcall FormatViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C151759C();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x1F4188790](v3).n128_u64[0];
  id v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50.receiver = v0;
  v50.super_class = ObjectType;
  objc_msgSendSuper2(&v50, sel_viewDidLoad, v5);
  int v8 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController];
  objc_msgSend(v0, sel_addChildViewController_, v8);
  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v8, sel_view);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = v11;
  objc_msgSend(v10, sel_addSubview_, v11);

  objc_msgSend(v8, sel_didMoveToParentViewController_, v1);
  id v13 = objc_msgSend(v8, sel_view);
  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v14 = v13;
  id v15 = objc_msgSend(v1, sel_view);
  if (!v15)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v16 = v15;
  objc_msgSend(v15, sel_bounds);
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  objc_msgSend(v14, sel_setFrame_, v18, v20, v22, v24);
  id v25 = objc_msgSend(v1, sel_traitCollection);
  sub_1C151B8DC();
  uint64_t v26 = (void *)sub_1C151B41C();
  swift_release();
  id v27 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v26, sel_setBackgroundColor_, v27);

  sub_1C151B8DC();
  uint64_t v28 = (void *)sub_1C151B41C();
  swift_release();
  objc_msgSend(v28, sel_setShowsHorizontalScrollIndicator_, 0);

  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4FAB6B0], v3);
  id v30 = objc_allocWithZone((Class)sub_1C15177EC());
  swift_retain();
  uint64_t v31 = (void *)sub_1C15177DC();
  if (qword_1EB87B0E0 != -1) {
    swift_once();
  }
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = v32;
  v33[3] = v31;
  v33[4] = sub_1C126EE74;
  v33[5] = v29;
  sub_1C1272CCC(&qword_1EB866C10, v34, (void (*)(uint64_t))type metadata accessor for FormatViewController);
  id v35 = v31;
  swift_retain();
  sub_1C1516FCC();
  swift_release();
  if (v49[15] != 1)
  {
    swift_release_n();
    goto LABEL_12;
  }
  id v36 = v35;
  id v37 = objc_msgSend(v1, sel_view);
  if (!v37) {
    goto LABEL_17;
  }
  uint64_t v38 = v37;
  objc_msgSend(v37, sel_bounds);
  double v40 = v39;
  double v42 = v41;
  double v44 = v43;
  double v46 = v45;

  objc_msgSend(v36, sel_setFrame_, v40, v42, v44, v46);
  objc_msgSend(v36, sel_setAutoresizingMask_, 18);
  id v47 = objc_msgSend(v1, sel_view);
  if (v47)
  {
    uint64_t v48 = v47;
    objc_msgSend(v47, sel_addSubview_, v36);
    swift_release_n();

LABEL_12:
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1C126EDA4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C126EDDC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController);

    sub_1C151B8DC();
    double v5 = (void *)sub_1C151B41C();
    swift_release();
    objc_msgSend(v5, sel_reloadData);
  }
}

void sub_1C126EE74()
{
  sub_1C126EDDC(v0);
}

Swift::Void __swiftcall FormatViewController.viewWillLayoutSubviews()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1C151B62C();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.receiver = v0;
  v32.super_class = ObjectType;
  objc_msgSendSuper2(&v32, sel_viewWillLayoutSubviews, v4);
  id v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintViewController], sel_view);
  if (v7)
  {
    int v8 = v7;
    id v9 = objc_msgSend(v0, sel_view);
    if (v9)
    {
      uint64_t v10 = v9;
      objc_msgSend(v9, sel_bounds);
      double v12 = v11;
      double v14 = v13;
      double v16 = v15;
      double v18 = v17;

      objc_msgSend(v8, sel_setFrame_, v12, v14, v16, v18);
      sub_1C151B8DC();
      double v19 = (void *)sub_1C151B41C();
      swift_release();
      sub_1C151B91C();
      swift_getObjectType();
      sub_1C151C3FC();
      swift_unknownObjectRelease();
      sub_1C151B53C();
      double v21 = v20;
      double v23 = v22;
      double v25 = v24;
      double v27 = v26;
      uint64_t v28 = *(void (**)(char *, uint64_t))(v3 + 8);
      v28(v6, v2);
      objc_msgSend(v19, sel_setLayoutMargins_, v21, v23, v25, v27);

      sub_1C151B8DC();
      uint64_t v29 = (void *)sub_1C151B41C();
      swift_release();
      sub_1C151B8DC();
      id v30 = (void *)sub_1C151B41C();
      swift_release();
      objc_msgSend(v30, sel_contentInset);

      sub_1C151B91C();
      swift_getObjectType();
      sub_1C151C3FC();
      swift_unknownObjectRelease();
      sub_1C151B53C();
      v28(v6, v2);
      sub_1C151F2CC();
      objc_msgSend(v29, sel_setContentInset_);

      sub_1C151B8DC();
      uint64_t v31 = (void *)sub_1C151B41C();
      swift_release();
      objc_msgSend(v31, sel_setClipsToBounds_, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall FormatViewController.viewDidLayoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_viewDidLayoutSubviews);
  sub_1C151B8DC();
  uint64_t v1 = (void *)sub_1C151B41C();
  swift_release();
  objc_msgSend(v1, sel_layoutIfNeeded);

  sub_1C15180DC();
}

Swift::Void __swiftcall FormatViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  objc_super v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C1273878(0, &qword_1EB8711A8, MEMORY[0x1E4F27DE8]);
  *(void *)&double v6 = MEMORY[0x1F4188790](v5 - 8).n128_u64[0];
  int v8 = (char *)&v13 - v7;
  v14.receiver = v2;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, sel_viewWillAppear_, a1, v6);
  id v9 = &v2[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider];
  swift_beginAccess();
  if (MEMORY[0x1C18C9C60](v9))
  {
    swift_getObjectType();
    uint64_t v10 = sub_1C151677C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    sub_1C151C66C();
    swift_unknownObjectRelease();
  }
  sub_1C151B8DC();
  double v11 = (void *)sub_1C151B41C();
  swift_release();
  uint64_t v12 = sub_1C151677C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  sub_1C151F41C();

  sub_1C1272C18((uint64_t)v8, &qword_1EB8711A8, MEMORY[0x1E4F27DE8]);
  if (qword_1EB864548 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C151AABC();
  swift_release();
}

Swift::Void __swiftcall FormatViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_viewDidAppear_, a1);
  sub_1C1519FAC();
}

Swift::Void __swiftcall FormatViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  objc_super v2 = v1;
  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewWillDisappear_, a1);
  sub_1C151AACC();
  sub_1C1519F7C();
}

Swift::Void __swiftcall FormatViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, isa);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  sub_1C151B8DC();
  objc_super v4 = (void *)sub_1C151B41C();
  swift_release();
  id v5 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  sub_1C151B8DC();
  double v6 = (void *)sub_1C151B41C();
  swift_release();
  objc_msgSend(v6, sel_setShowsHorizontalScrollIndicator_, 0);
}

double FormatViewController.pluginLayoutTransitionManager.getter@<D0>(uint64_t a1@<X8>)
{
  sub_1C151B93C();
  uint64_t v2 = v8;
  if (v8)
  {
    uint64_t v3 = v9;
    objc_super v4 = __swift_project_boxed_opaque_existential_1(v7, v8);
    *(void *)(a1 + 24) = v2;
    *(void *)(a1 + 32) = *(void *)(v3 + 8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v2 - 8) + 16))(boxed_opaque_existential_0, v4, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1C1272C18((uint64_t)v7, &qword_1EA1AD7F0, (void (*)(uint64_t))sub_1C1272C74);
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t FormatViewController.pluginItemCount.getter()
{
  return sub_1C126FBE0(MEMORY[0x1E4FAD820]);
}

uint64_t FormatViewController.pluginVisibleItemCount.getter()
{
  sub_1C1272E10(0, (unint64_t *)&unk_1EB864180, MEMORY[0x1E4FABFE0]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v5 = (char *)v8 - v4;
  v8[1] = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintLayoutProvider);
  sub_1C1272E10(0, (unint64_t *)&qword_1EB896598, MEMORY[0x1E4FAC9A0]);
  sub_1C0B7F7E4();
  sub_1C151BE7C();
  uint64_t v6 = sub_1C151A76C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t FormatViewController.pluginItemIdentifiers.getter()
{
  return sub_1C126FBE0(MEMORY[0x1E4FAD828]);
}

uint64_t sub_1C126FBE0(uint64_t (*a1)(uint64_t))
{
  sub_1C1272D14(0, &qword_1EB864568, MEMORY[0x1E4FAD830]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v9 - v5;
  sub_1C151B8FC();
  v9[0] = v9[1];
  sub_1C1272D14(0, (unint64_t *)&qword_1EB8641D0, MEMORY[0x1E4FAC2D8]);
  sub_1C0B7F7B0();
  sub_1C151B3FC();
  swift_release();
  uint64_t v7 = a1(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t FormatViewController.initialize(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  void v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = *(void *)(v5 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(void (*)(), void *, uint64_t, uint64_t))(v8 + 32);
  swift_retain();
  swift_retain();
  v10(sub_1C1272ED8, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

void sub_1C126FE40(uint64_t a1, void (*a2)(double, double), uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = (void *)swift_allocObject();
    void v8[2] = v7;
    v8[3] = a2;
    void v8[4] = a3;
    id v9 = v7;
    swift_retain();
    sub_1C151950C();
    swift_release();
    sub_1C15180DC();
  }
  else
  {
    a2(0.0, 0.0);
  }
}

uint64_t FormatViewController.relayout(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  void v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = *(void *)(v5 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v8 + 48);
  swift_retain();
  swift_retain();
  v10(sub_1C1272EE8, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1C127001C(uint64_t a1, uint64_t (*a2)(double, double), uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  if (!v6) {
    return a2(0.0, 0.0);
  }
  uint64_t v7 = (void *)v6;
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v7;
  v8[3] = a2;
  void v8[4] = a3;
  id v9 = v7;
  swift_retain();
  sub_1C151950C();

  return swift_release();
}

uint64_t sub_1C12700E4(uint64_t a1, uint64_t (*a2)(double, double))
{
  uint64_t v4 = sub_1C151B62C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151B91C();
  swift_getObjectType();
  sub_1C151C3FC();
  swift_unknownObjectRelease();
  sub_1C151B61C();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C151B8DC();
  uint64_t v10 = (void *)sub_1C151B41C();
  swift_release();
  id v11 = objc_msgSend(v10, sel_collectionViewLayout);

  objc_msgSend(v11, sel_collectionViewContentSize);
  double v13 = v12;

  uint64_t result = a2(v9, v13);
  uint64_t v15 = a1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize;
  *(double *)uint64_t v15 = v9;
  *(double *)(v15 + 8) = v13;
  *(unsigned char *)(v15 + 16) = 0;
  return result;
}

uint64_t sub_1C1270284()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v1);
}

uint64_t sub_1C12702D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1C1270348(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C18C9C60](v6);
  uint64_t v8 = *(void *)(v6 + 8);
  v3[3] = v7;
  v3[4] = v8;
  return sub_1C019A6A4;
}

uint64_t sub_1C12703D4()
{
  uint64_t v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C1270420(char a1)
{
  uint64_t v3 = sub_1C151BE0C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (unsigned char *)(*v1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  swift_beginAccess();
  *uint64_t v7 = a1;
  uint64_t v8 = (unsigned int *)MEMORY[0x1E4FACE38];
  if ((a1 & 1) == 0) {
    uint64_t v8 = (unsigned int *)MEMORY[0x1E4FACE30];
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v8, v3);
  return sub_1C151B90C();
}

void (*sub_1C1270540(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = sub_1C151BE0C();
  v3[3] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[4] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  uint64_t v7 = *v1;
  v3[5] = v6;
  v3[6] = v7;
  v3[7] = OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin;
  swift_beginAccess();
  return sub_1C1270610;
}

void sub_1C1270610(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if (a2)
  {
    uint64_t v4 = (void *)v3[5];
  }
  else
  {
    uint64_t v4 = (void *)v3[5];
    if (*(unsigned char *)(v3[6] + v3[7])) {
      uint64_t v5 = (unsigned int *)MEMORY[0x1E4FACE38];
    }
    else {
      uint64_t v5 = (unsigned int *)MEMORY[0x1E4FACE30];
    }
    (*(void (**)(void, void, void))(v3[4] + 104))(v3[5], *v5, v3[3]);
    sub_1C151B90C();
  }
  free(v4);
  free(v3);
}

uint64_t sub_1C12706C0(uint64_t a1, uint64_t a2)
{
  return sub_1C1270834(a1, a2, MEMORY[0x1E4FAD820]);
}

uint64_t sub_1C12706D8()
{
  sub_1C1272E10(0, (unint64_t *)&unk_1EB864180, MEMORY[0x1E4FABFE0]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v8 - v4;
  v8[1] = *(void *)(*v0 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_blueprintLayoutProvider);
  sub_1C1272E10(0, (unint64_t *)&qword_1EB896598, MEMORY[0x1E4FAC9A0]);
  sub_1C0B7F7E4();
  sub_1C151BE7C();
  uint64_t v6 = sub_1C151A76C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_1C127081C(uint64_t a1, uint64_t a2)
{
  return sub_1C1270834(a1, a2, MEMORY[0x1E4FAD828]);
}

uint64_t sub_1C1270834(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1272D14(0, &qword_1EB864568, MEMORY[0x1E4FAD830]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - v7;
  sub_1C151B8FC();
  v11[0] = v11[1];
  sub_1C1272D14(0, (unint64_t *)&qword_1EB8641D0, MEMORY[0x1E4FAC2D8]);
  sub_1C0B7F7B0();
  sub_1C151B3FC();
  swift_release();
  uint64_t v9 = a3(v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

double sub_1C127099C@<D0>(uint64_t a1@<X8>)
{
  sub_1C151B93C();
  uint64_t v2 = v8;
  if (v8)
  {
    uint64_t v3 = v9;
    uint64_t v4 = __swift_project_boxed_opaque_existential_1(v7, v8);
    *(void *)(a1 + 24) = v2;
    *(void *)(a1 + 32) = *(void *)(v3 + 8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v2 - 8) + 16))(boxed_opaque_existential_0, v4, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1C1272C18((uint64_t)v7, &qword_1EA1AD7F0, (void (*)(uint64_t))sub_1C1272C74);
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C1270A88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  void v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = *(void *)(v5 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(void (*)(), void *, uint64_t, uint64_t))(v8 + 32);
  swift_retain();
  swift_retain();
  v10(sub_1C12738D4, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1C1270B88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  void v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = *(void *)(v5 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v8 + 48);
  swift_retain();
  swift_retain();
  v10(sub_1C12738D0, v7, ObjectType, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_1C1270C88(uint64_t result, double a2, double a3)
{
  uint64_t v3 = (double *)(result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize);
  if ((*(unsigned char *)(result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize + 16) & 1) != 0
    || *v3 != a2
    || v3[1] != a3)
  {
    uint64_t v4 = result + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate;
    swift_beginAccess();
    double result = MEMORY[0x1C18C9C60](v4);
    if (result)
    {
      swift_getObjectType();
      sub_1C1272CCC((unint64_t *)&qword_1EB866C20, v5, (void (*)(uint64_t))type metadata accessor for FormatViewController);
      sub_1C151C21C();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t FormatViewController.formatBlueprintViewCellProvider(_:handleAction:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1272EF4(a2, a3);
}

uint64_t sub_1C1270D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1272EF4(a2, a3);
}

Swift::Void __swiftcall FormatViewController.blueprintReadableContentGuideDidChange(_:)(UILayoutGuide a1)
{
  id v2 = objc_msgSend(v1, sel_navigationController);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_navigationBar);

    sub_1C151F93C();
  }
}

uint64_t FormatViewController.blueprint(_:didSelect:at:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatBlueprintItemSelectionContext(0);
  *(void *)&double v12 = MEMORY[0x1F4188790](v11).n128_u64[0];
  objc_super v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(v5, sel_tabBarSplitViewFocusable, v12);
  if (v15)
  {
    objc_msgSend(v15, sel_toggleSplitViewFocusTo_, 2);
    swift_unknownObjectRelease();
  }
  uint64_t v16 = *(void *)&v5[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler];
  uint64_t v17 = sub_1C151BD0C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v10, a4, v17);
  sub_1C1273330();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 0, 2, v18);
  double v19 = &v5[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
  uint64_t result = swift_beginAccess();
  uint64_t v21 = *((void *)v19 + 1);
  if (v21)
  {
    uint64_t v22 = *(void *)v19;
    sub_1C1273380((uint64_t)v10, (uint64_t)v14);
    double v23 = &v14[*(int *)(v11 + 20)];
    *(void *)double v23 = v22;
    *((void *)v23 + 1) = v21;
    uint64_t v24 = *(void *)(v16 + 112);
    uint64_t ObjectType = swift_getObjectType();
    double v26 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v24 + 32);
    swift_bridgeObjectRetain();
    v26(a2, v14, ObjectType, v24);
    if (MEMORY[0x1C18C9C60](v16 + 32))
    {
      uint64_t v27 = *(void *)(v16 + 40);
      uint64_t v28 = swift_getObjectType();
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v27 + 8))(a2, v14, v28, v27);
      swift_unknownObjectRelease();
    }
    return sub_1BFE68B20((uint64_t)v14, type metadata accessor for FormatBlueprintItemSelectionContext);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:previewViewControllerFor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v5[1];
  if (v7)
  {
    uint64_t v8 = *v5;
    if (!MEMORY[0x1C18C9C60](v4 + 32)) {
      return 0;
    }
    uint64_t v9 = *(void *)(v4 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    uint64_t v12 = v11(a2, v8, v7, ObjectType, v9);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:didStartImpression:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v5[1];
  if (v7)
  {
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(v4 + 112);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:createdImpression:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v5[1];
  if (v7)
  {
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(v4 + 112);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FormatViewController.blueprint(_:cancelledImpression:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v5[1];
  if (v7)
  {
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(v4 + 112);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void FormatViewController.blueprint(_:layoutOptionsDidChange:triggeredBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151C46C();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a3, v5, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v10 == *MEMORY[0x1E4FAD508])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_9:
    objc_super v14 = (unsigned char *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
    swift_beginAccess();
    if ((*v14 & 1) == 0)
    {
      uint64_t v15 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t (*)(), void, uint64_t, uint64_t))(v15 + 48))(nullsub_1, 0, ObjectType, v15);
    }
    return;
  }
  if (v10 == *MEMORY[0x1E4FAD4E0])
  {
    uint64_t v11 = (unsigned char *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
    swift_beginAccess();
    if ((*v11 & 1) == 0)
    {
      uint64_t v12 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler) + 56);
      uint64_t v13 = swift_getObjectType();
      (*(void (**)(uint64_t (*)(), void, uint64_t, uint64_t))(v12 + 32))(nullsub_1, 0, v13, v12);
    }
  }
  else
  {
    if (v10 == *MEMORY[0x1E4FAD500]) {
      goto LABEL_9;
    }
    if (v10 == *MEMORY[0x1E4FAD530]) {
      return;
    }
    if (v10 == *MEMORY[0x1E4FAD4E8]) {
      goto LABEL_9;
    }
    if (v10 != *MEMORY[0x1E4FAD510])
    {
      if (v10 == *MEMORY[0x1E4FAD528])
      {
        sub_1C151B8DC();
        uint64_t v17 = (void *)sub_1C151B41C();
        swift_release();
        objc_msgSend(v17, sel_reloadData);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
  }
}

void sub_1C12716E0()
{
  id v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_navigationBar);

    sub_1C151F93C();
  }
}

uint64_t sub_1C1271784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1C12717F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1C1271858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AC0](a1, a2, ObjectType, a4);
}

uint64_t sub_1C12718B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1C127191C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v5[1];
  if (v7)
  {
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(v4 + 112);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12719E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1C1271A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1C1271A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1C1271AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v5[1];
  if (v7)
  {
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(v4 + 112);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1271BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD8](a1, a2, ObjectType, a4);
}

uint64_t sub_1C1271C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v5[1];
  if (v7)
  {
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(v4 + 112);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
    swift_bridgeObjectRetain();
    v11(a2, v8, v7, ObjectType, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1271CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162B28](a1, a2, ObjectType, a4);
}

uint64_t sub_1C1271D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AD0](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1C1271D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AE8](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1C1271E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1C1271E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1C1271EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AB8](a1, ObjectType, a3);
}

uint64_t sub_1C1271EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1C1271F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162A88](a1, ObjectType, a3);
}

uint64_t sub_1C1271F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162B20](a1, a2, ObjectType, a4);
}

uint64_t sub_1C1271FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162B30](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_1C1272050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AA0](a1, a2, ObjectType, a4);
}

uint64_t sub_1C12720A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return MEMORY[0x1F4162AA0](a1, a2, ObjectType, a4);
}

uint64_t FormatViewController.responder.getter()
{
  return sub_1C151B97C();
}

uint64_t sub_1C127212C()
{
  return sub_1C151B97C();
}

uint64_t FormatViewController.startTraversing(direction:)()
{
  return sub_1C151B8EC();
}

uint64_t FormatViewController.isSelectable.getter()
{
  return 1;
}

Swift::Void __swiftcall FormatViewController.viewWillAppear()()
{
}

Swift::Void __swiftcall FormatViewController.viewDidAppear()()
{
}

Swift::Void __swiftcall FormatViewController.viewWillDisappear()()
{
}

Swift::Void __swiftcall FormatViewController.viewDidDisappear()()
{
}

uint64_t sub_1C1272250(void (*a1)(void))
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  uint64_t result = swift_beginAccess();
  if (*v3 == 1)
  {
    sub_1C151B8DC();
    a1();
    return swift_release();
  }
  return result;
}

void sub_1C12722D0()
{
}

uint64_t sub_1C12722F4(uint64_t a1, uint64_t a2)
{
  return sub_1C1272354(a1, a2, MEMORY[0x1E4FAC710]);
}

uint64_t sub_1C127230C(uint64_t a1, uint64_t a2)
{
  return sub_1C1272354(a1, a2, MEMORY[0x1E4FAC708]);
}

uint64_t sub_1C1272324(uint64_t a1, uint64_t a2)
{
  return sub_1C1272354(a1, a2, MEMORY[0x1E4FAC720]);
}

uint64_t sub_1C127233C(uint64_t a1, uint64_t a2)
{
  return sub_1C1272354(a1, a2, MEMORY[0x1E4FAC718]);
}

uint64_t sub_1C1272354(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = (unsigned char *)(*v3 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  uint64_t result = swift_beginAccess();
  if (*v5 == 1)
  {
    sub_1C151B8DC();
    a3();
    return swift_release();
  }
  return result;
}

uint64_t FormatViewController.shouldMonitorMotion.getter()
{
  return 0;
}

uint64_t FormatViewController.shouldMonitorScroll.getter()
{
  sub_1C151B8DC();
  uint64_t v0 = (void *)sub_1C151B41C();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1)
  {
    swift_getObjectType();
    LOBYTE(v1) = sub_1C151C25C();
  }

  return v1 & 1;
}

void FormatViewController.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  sub_1C151B8DC();
  id v1 = (id)sub_1C151B41C();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v0 = v1;
  }
  else {
    id v0 = 0;
  }
  if (v0)
  {
    swift_getObjectType();
    sub_1C151C26C();
  }
}

uint64_t sub_1C1272530()
{
  sub_1C151B8DC();
  id v0 = (void *)sub_1C151B41C();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v1 = v0;
  }
  else {
    id v1 = 0;
  }
  if (v1)
  {
    swift_getObjectType();
    LOBYTE(v1) = sub_1C151C25C();
  }

  return v1 & 1;
}

void sub_1C12725C4()
{
  sub_1C151B8DC();
  id v1 = (id)sub_1C151B41C();
  swift_release();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v0 = v1;
  }
  else {
    id v0 = 0;
  }
  if (v0)
  {
    swift_getObjectType();
    sub_1C151C26C();
  }
}

void sub_1C1272680(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  MEMORY[0x1F4188790](v5 - 8);
  double v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for FormatBlueprintItemSelectionContext(0);
  MEMORY[0x1F4188790](v41);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1273878(0, &qword_1EA1AD830, (void (*)(uint64_t))sub_1C00BE41C);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v39 - v10;
  sub_1C00BE41C();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  MEMORY[0x1F4188790](v12);
  objc_super v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1272D14(0, &qword_1EB864568, MEMORY[0x1E4FAD830]);
  uint64_t v16 = v15;
  uint64_t v43 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = *a1;
  uint64_t v20 = a1[2];
  swift_beginAccess();
  uint64_t v21 = MEMORY[0x1C18C9C60](a3 + 16);
  if (v21)
  {
    uint64_t v22 = (char *)v21;
    if (v19 && v20)
    {
      double v40 = v8;
      sub_1C151B8FC();
      uint64_t v47 = v46;
      sub_1C1272D14(0, (unint64_t *)&qword_1EB8641D0, MEMORY[0x1E4FAC2D8]);
      sub_1C0B7F7B0();
      sub_1C151B3FC();
      swift_release();
      sub_1C151CC0C();
      uint64_t v24 = v44;
      uint64_t v23 = v45;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v11, 1, v45) == 1)
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v16);

        sub_1C1272C18((uint64_t)v11, &qword_1EA1AD830, (void (*)(uint64_t))sub_1C00BE41C);
        return;
      }
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v14, v11, v23);
      double v25 = *(char **)&v22[OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler];
      uint64_t v26 = (uint64_t)v42;
      sub_1C151BCFC();
      sub_1C1273330();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 2, v27);
      uint64_t v28 = &v22[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
      swift_beginAccess();
      uint64_t v29 = *((void *)v28 + 1);
      if (!v29)
      {
        __break(1u);
        return;
      }
      uint64_t v30 = *(void *)v28;
      uint64_t v31 = (uint64_t)v40;
      sub_1C1273380(v26, (uint64_t)v40);
      objc_super v32 = (void *)(v31 + *(int *)(v41 + 20));
      *objc_super v32 = v30;
      v32[1] = v29;
      uint64_t v33 = *((void *)v25 + 14);
      uint64_t ObjectType = swift_getObjectType();
      double v42 = v25;
      uint64_t v35 = ObjectType;
      uint64_t v41 = *(void *)(v33 + 32);
      swift_bridgeObjectRetain();
      id v36 = v42;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v41)(v14, v31, v35, v33);
      if (MEMORY[0x1C18C9C60](v36 + 32))
      {
        uint64_t v37 = *((void *)v36 + 5);
        uint64_t v38 = swift_getObjectType();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 8))(v14, v31, v38, v37);
        swift_unknownObjectRelease();
      }
      sub_1BFE68B20(v31, type metadata accessor for FormatBlueprintItemSelectionContext);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v45);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v16);
    }
  }
}

uint64_t sub_1C1272B94()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1C1272BDC(char *a1)
{
  sub_1C126DA14(*a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(id))(v1 + 32));
}

uint64_t type metadata accessor for FormatViewController()
{
  return self;
}

void sub_1C1272C10(uint64_t *a1, uint64_t a2)
{
  sub_1C1272680(a1, a2, v2);
}

uint64_t sub_1C1272C18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1273878(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C1272C74()
{
  unint64_t result = qword_1EA1AD7F8;
  if (!qword_1EA1AD7F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1AD7F8);
  }
  return result;
}

uint64_t sub_1C1272CCC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1272D14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatSectionDescriptor();
    v8[1] = type metadata accessor for FormatModel();
    void v8[2] = sub_1C1272CCC((unint64_t *)&unk_1EB8674A0, 255, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    v8[3] = sub_1C1272CCC((unint64_t *)&qword_1EB8656D0, 255, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C1272E10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for FormatLayoutSectionDescriptor(255);
    v8[1] = &type metadata for FormatLayoutModel;
    void v8[2] = sub_1C1272CCC((unint64_t *)&qword_1EB896870, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
    v8[3] = sub_1C007D02C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C1272ED8()
{
  sub_1C126FE40(*(void *)(v0 + 16), *(void (**)(double, double))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C1272EE8()
{
  return sub_1C127001C(*(void *)(v0 + 16), *(uint64_t (**)(double, double))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C1272EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v4 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = type metadata accessor for FormatBlueprintItemSelectionContext(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = type metadata accessor for FeedAction(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v47 - v20;
  sub_1C1125578(a1, (uint64_t)&v47 - v20);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1BFE68B20((uint64_t)v21, type metadata accessor for FeedAction);
  }
  sub_1C1125578((uint64_t)v21, (uint64_t)v18);
  if (*v18)
  {
    if (*v18 == 1) {
      return sub_1BFE68B20((uint64_t)v21, type metadata accessor for FeedAction);
    }
    uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
    sub_1C1273330();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 2, 2, v23);
    uint64_t v24 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
    uint64_t result = swift_beginAccess();
    uint64_t v26 = v24[1];
    if (v26)
    {
      uint64_t v27 = *v24;
      sub_1C1273380((uint64_t)v6, (uint64_t)v12);
      uint64_t v28 = &v12[*(int *)(v10 + 20)];
      *(void *)uint64_t v28 = v27;
      *((void *)v28 + 1) = v26;
      uint64_t v29 = *(void *)(v22 + 112);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v29 + 32);
      swift_bridgeObjectRetain();
      uint64_t v32 = v47;
      v31(v47, v12, ObjectType, v29);
      if (!MEMORY[0x1C18C9C60](v22 + 32))
      {
LABEL_12:
        sub_1BFE68B20((uint64_t)v12, type metadata accessor for FormatBlueprintItemSelectionContext);
        return sub_1BFE68B20((uint64_t)v21, type metadata accessor for FeedAction);
      }
      uint64_t v33 = *(void *)(v22 + 40);
      uint64_t v34 = swift_getObjectType();
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v33 + 8))(v32, v12, v34, v33);
LABEL_10:
      swift_unknownObjectRelease();
      goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
    uint64_t v35 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventHandler);
    sub_1C1273330();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v9, 1, 2, v36);
    uint64_t v37 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier);
    uint64_t result = swift_beginAccess();
    uint64_t v38 = v37[1];
    if (v38)
    {
      uint64_t v39 = *v37;
      sub_1C1273380((uint64_t)v9, (uint64_t)v15);
      double v40 = &v15[*(int *)(v10 + 20)];
      *(void *)double v40 = v39;
      *((void *)v40 + 1) = v38;
      uint64_t v41 = *(void *)(v35 + 112);
      uint64_t v42 = swift_getObjectType();
      uint64_t v43 = *(void (**)(uint64_t, char *, uint64_t, uint64_t))(v41 + 32);
      swift_bridgeObjectRetain();
      uint64_t v44 = v47;
      v43(v47, v15, v42, v41);
      if (!MEMORY[0x1C18C9C60](v35 + 32))
      {
        uint64_t v12 = v15;
        goto LABEL_12;
      }
      uint64_t v45 = *(void *)(v35 + 40);
      uint64_t v46 = swift_getObjectType();
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v45 + 8))(v44, v15, v46, v45);
      uint64_t v12 = v15;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

void sub_1C1273330()
{
  if (!qword_1EA1AD808)
  {
    unint64_t v0 = sub_1C151BD0C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1AD808);
    }
  }
}

uint64_t sub_1C1273380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatBlueprintItemSelectionContext.Action(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12733E4(uint64_t a1, uint64_t a2)
{
  return sub_1C1272CCC(&qword_1EA1AD810, a2, (void (*)(uint64_t))type metadata accessor for FormatViewController);
}

uint64_t sub_1C127342C()
{
  return sub_1C1272CCC((unint64_t *)&unk_1EB8674A0, 255, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
}

uint64_t sub_1C1273478()
{
  return sub_1C1272CCC((unint64_t *)&qword_1EB8656D0, 255, (void (*)(uint64_t))type metadata accessor for FormatModel);
}

uint64_t sub_1C12734C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1C127351C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate, a2);
}

uint64_t sub_1C1273528(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate);
}

uint64_t sub_1C1273534@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider, a2);
}

uint64_t sub_1C1273540(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider);
}

uint64_t method lookup function for FormatViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatViewController);
}

unsigned char *storeEnumTagSinglePayload for FormatViewController.Event(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1273630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatViewController.Event()
{
  return &type metadata for FormatViewController.Event;
}

unint64_t sub_1C127366C()
{
  unint64_t result = qword_1EB8612F0[0];
  if (!qword_1EB8612F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB8612F0);
  }
  return result;
}

void sub_1C12736C0()
{
  if (!qword_1EB862928)
  {
    sub_1C00BB07C();
    unint64_t v0 = sub_1C151810C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB862928);
    }
  }
}

uint64_t sub_1C127371C()
{
  return sub_1C126E4B4(v0);
}

void sub_1C1273724()
{
  v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_isBeingUsedAsPlugin] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluggableDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_pluginIdentifier];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_lastComputedSize];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed20FormatViewController_eventManager;
  sub_1C12736C0();
  swift_allocObject();
  *(void *)&v0[v3] = sub_1C15180FC();
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed20FormatViewController____lazy_storage___maskLayer] = 0;

  sub_1C152040C();
  __break(1u);
}

uint64_t objectdestroy_41Tm()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C1273878(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL static SharingChannelActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SharingChannelActivity.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SharingChannelActivity.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C1273968()
{
  unint64_t result = qword_1EA1AD838[0];
  if (!qword_1EA1AD838[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1AD838);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharingChannelActivity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1273A88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingChannelActivity()
{
  return &type metadata for SharingChannelActivity;
}

uint64_t static CoverIssueViewLayout.makeLayoutForChannelFeed(context:factories:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  __n128 v5 = MEMORY[0x1F4188790](v4);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  (*(void (**)(unsigned char *, void, __n128))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB8F8], v5);
  sub_1C0350724(0, (unint64_t *)&qword_1EB85C830, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  return sub_1C1517BEC();
}

uint64_t sub_1C1273BEC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v37 - v9;
  uint64_t v11 = a2[40];
  uint64_t v12 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v11);
  double v13 = (*(double (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  if (qword_1EB85E720 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB93C2A0, sel_size);
  double v16 = v13 * (v14 / v15);
  uint64_t v17 = a2[40];
  uint64_t v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v17);
  double v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
  uint64_t v20 = a2[40];
  uint64_t v21 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v20);
  double v22 = (*(double (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
  double v23 = v19 + v22 + v22;
  uint64_t v39 = a1;
  uint64_t v24 = *MEMORY[0x1E4FABA28];
  uint64_t v38 = a1;
  double v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 104);
  uint64_t v26 = v25(v10, v24, v7);
  v37[1] = v37;
  MEMORY[0x1F4188790](v26);
  v37[-6] = a3;
  v37[-5] = a2;
  uint64_t v33 = 0x4030000000000000;
  double v34 = v16;
  double v36 = v23;
  uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0350724(0, &qword_1EB85C7F8, MEMORY[0x1E4FAB6F0]);
  uint64_t v29 = v28;
  uint64_t v30 = sub_1C03507A8(&qword_1EB85C7F0, &qword_1EB85C7F8, v27);
  uint64_t v35 = v30;
  sub_1C151734C();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v31(v10, v7);
  uint64_t v39 = v38;
  v25(v10, *MEMORY[0x1E4FAB9E0], v7);
  uint64_t v35 = v29;
  double v36 = *(double *)&v30;
  uint64_t v33 = (uint64_t)sub_1C1276324;
  double v34 = 0.0;
  sub_1C15173FC();
  return ((uint64_t (*)(char *, uint64_t))v31)(v10, v7);
}

uint64_t sub_1C1273FA0(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v62 = a2;
  uint64_t v76 = a1;
  sub_1C0C27518();
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v65 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  double v15 = (uint64_t *)((char *)&v60 - v14);
  *(void *)&v94[0] = a1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0x4024000000000000;
  uint64_t *v15 = v16;
  uint64_t v18 = v11 + 104;
  uint64_t v17 = *(void (**)(uint64_t *))(v11 + 104);
  unsigned int v74 = *MEMORY[0x1E4FABA08];
  v17(v15);
  double v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v21 = v20;
  uint64_t v70 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v19);
  uint64_t v71 = v21;
  sub_1C151738C();
  double v22 = *(void (**)(uint64_t *, uint64_t))(v11 + 8);
  uint64_t v75 = v11 + 8;
  long long v69 = v22;
  v22(v15, v10);
  uint64_t v93 = v76;
  uint64_t KeyPath = swift_getKeyPath();
  double v23 = v61;
  uint64_t v68 = v10;
  uint64_t v72 = v17;
  uint64_t v73 = v18;
  ((void (*)(void))v17)();
  uint64_t v92 = *(void *)(v62 + 24);
  long long v24 = *(_OWORD *)(a3 + 88);
  long long v25 = *(_OWORD *)(a3 + 120);
  long long v95 = *(_OWORD *)(a3 + 104);
  v96[0] = v25;
  *(_OWORD *)((char *)v96 + 9) = *(_OWORD *)(a3 + 129);
  long long v26 = *(_OWORD *)(a3 + 24);
  long long v27 = *(_OWORD *)(a3 + 56);
  _OWORD v94[2] = *(_OWORD *)(a3 + 40);
  v94[3] = v27;
  v94[4] = *(_OWORD *)(a3 + 72);
  v94[5] = v24;
  v94[0] = *(_OWORD *)(a3 + 8);
  v94[1] = v26;
  uint64_t v28 = *(void **)&v94[0];
  if ((void)v24 == 1 || (uint64_t v29 = (void *)*((void *)&v95 + 1)) == 0)
  {
    swift_retain();
    sub_1C0187FB0((uint64_t)v94);
    FCIssue.issueCoverModel.getter((uint64_t)&v88);
    sub_1C01880A4((uint64_t)v94);
    uint64_t v28 = v88;
    uint64_t v30 = v89;
    long long v36 = *(_OWORD *)v90;
    long long v33 = *(_OWORD *)&v90[16];
    uint64_t v35 = *(void *)&v90[32];
    char v34 = v91;
  }
  else
  {
    uint64_t v30 = *(void *)&v96[0];
    long long v88 = *(void **)&v94[0];
    uint64_t v89 = *(void *)&v96[0];
    *(void *)long long v90 = *((void *)&v95 + 1);
    memset(&v90[8], 0, 32);
    char v91 = 0;
    swift_retain();
    id v31 = v29;
    id v32 = v28;
    long long v33 = 0uLL;
    char v34 = 0;
    uint64_t v35 = 0;
    long long v36 = (unint64_t)v29;
  }
  uint64_t v82 = v28;
  uint64_t v83 = v30;
  long long v84 = v36;
  long long v85 = v33;
  uint64_t v86 = v35;
  char v87 = v34;
  uint64_t v37 = (void *)(a3 + 296);
  uint64_t v63 = a3;
  uint64_t v38 = *(void *)(a3 + 320);
  uint64_t v39 = *(void *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1(v37, v38);
  double v40 = (*(double (**)(uint64_t, uint64_t))(v39 + 64))(v38, v39);
  char v77 = 0;
  uint64_t v78 = 0x4010000000000000;
  double v79 = v40;
  uint64_t v80 = -1;
  uint64_t v81 = 0x3FE0000000000000;
  sub_1C0C2762C(0, &qword_1EB85C7C0, (uint64_t (*)(void))sub_1C0165C0C, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, MEMORY[0x1E4FAB4F0]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1C01BC7F0();
  sub_1C0C27694();
  sub_1C0C274D0(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  uint64_t v41 = v65;
  sub_1C15175AC();
  sub_1C151736C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v67);
  uint64_t v43 = v68;
  uint64_t v42 = v69;
  v69((uint64_t *)v23, v68);
  uint64_t v44 = v76;
  long long v88 = v76;
  uint64_t v45 = swift_allocObject();
  *(double *)(v45 + 16) = a4;
  uint64_t *v15 = v45;
  ((void (*)(uint64_t *, void, uint64_t))v72)(v15, v74, v43);
  sub_1C151738C();
  v42(v15, v43);
  long long v88 = v44;
  sub_1BFF35C38();
  uint64_t v47 = v46;
  uint64_t v48 = swift_allocBox();
  uint64_t v50 = v49;
  uint64_t v51 = v49 + *(int *)(v47 + 48);
  uint64_t v52 = *MEMORY[0x1E4FAB790];
  uint64_t v53 = sub_1C151786C();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104);
  v54(v50, v52, v53);
  v54(v51, *MEMORY[0x1E4FAB7B0], v53);
  uint64_t *v15 = v48;
  unint64_t v55 = v72;
  uint64_t v56 = ((uint64_t (*)(uint64_t *, void, uint64_t))v72)(v15, *MEMORY[0x1E4FAB9E8], v43);
  MEMORY[0x1F4188790](v56);
  sub_1C151731C();
  uint64_t v57 = (uint64_t (*)(uint64_t *, uint64_t))v69;
  v69(v15, v43);
  long long v88 = v76;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = 0x4024000000000000;
  uint64_t *v15 = v58;
  ((void (*)(uint64_t *, void, uint64_t))v55)(v15, v74, v43);
  sub_1C151738C();
  return v57(v15, v43);
}

uint64_t sub_1C1274760(void *a1)
{
  return sub_1C1273FA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1C1274770(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t KeyPath = a1;
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (void *)((char *)v78 - v11);
  uint64_t v13 = *(void *)(a2 + 56);
  sub_1C01BC5C8(a2, (uint64_t)v89);
  uint64_t v85 = a2;
  uint64_t v86 = v10;
  if (v13)
  {
    char v14 = v90;
    sub_1C01BC710((uint64_t)v89);
    if ((v14 & 8) == 0)
    {
      uint64_t v88 = KeyPath;
      sub_1BFF35C38();
      uint64_t v16 = v15;
      uint64_t v17 = swift_allocBox();
      double v19 = v18;
      uint64_t v82 = (uint64_t *)((char *)v18 + *(int *)(v16 + 48));
      uint64_t v83 = v17;
      uint64_t v20 = swift_allocObject();
      *(double *)(v20 + 16) = a3;
      *double v19 = v20;
      uint64_t v84 = v9;
      uint64_t v21 = *MEMORY[0x1E4FAB798];
      uint64_t v22 = sub_1C151786C();
      double v23 = *(void (**)(void))(*(void *)(v22 - 8) + 104);
      ((void (*)(uint64_t *, uint64_t, uint64_t))v23)(v19, v21, v22);
      uint64_t v24 = swift_allocObject();
      long long v25 = (void *)(a2 + 296);
      long long v26 = v12;
      uint64_t v27 = *(void *)(a2 + 320);
      uint64_t v28 = *(void *)(v85 + 328);
      __swift_project_boxed_opaque_existential_1(v25, v27);
      *(double *)(v24 + 16) = (*(double (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
      *uint64_t v82 = v24;
      uint64_t v9 = v84;
      v23();
      *long long v26 = v83;
      uint64_t v29 = *(uint64_t (**)(uint64_t *, void, uint64_t))(v86 + 104);
      uint64_t v30 = v29(v26, *MEMORY[0x1E4FAB9E8], v9);
      MEMORY[0x1F4188790](v30);
      v78[-4] = v85;
      *(double *)&v78[-3] = a3;
      id v31 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
      uint64_t v77 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v31);
      sub_1C151734C();
      id v32 = *(void (**)(uint64_t *, uint64_t))(v86 + 8);
      v32(v26, v9);
      uint64_t v88 = KeyPath;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = 0x4010000000000000;
      *long long v26 = v33;
      v29(v26, *MEMORY[0x1E4FABA00], v9);
      uint64_t v10 = v86;
      uint64_t v12 = v26;
      sub_1C151738C();
      v32(v26, v9);
    }
  }
  else
  {
    sub_1C01BC710((uint64_t)v89);
  }
  uint64_t v88 = KeyPath;
  sub_1BFF35C38();
  uint64_t v35 = v34;
  uint64_t v79 = v34;
  uint64_t v36 = swift_allocBox();
  uint64_t v38 = v37;
  uint64_t v82 = (uint64_t *)((char *)v37 + *(int *)(v35 + 48));
  uint64_t v83 = v36;
  uint64_t v39 = v10;
  uint64_t v40 = sub_1C151786C();
  uint64_t v41 = swift_allocBox();
  uint64_t v43 = v42;
  uint64_t v44 = swift_allocObject();
  *(double *)(v44 + 16) = a5;
  *uint64_t v43 = v44;
  int v45 = *MEMORY[0x1E4FAB798];
  uint64_t v46 = *(void (**)(uint64_t *))(*(void *)(v40 - 8) + 104);
  uint64_t v47 = v9;
  v78[1] = (v40 - 8) & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
  LODWORD(v84) = v45;
  v46(v43);
  *uint64_t v38 = v41;
  ((void (*)(uint64_t *, void, uint64_t))v46)(v38, *MEMORY[0x1E4FAB7A0], v40);
  ((void (*)(uint64_t *, void, uint64_t))v46)(v82, *MEMORY[0x1E4FAB7B0], v40);
  *uint64_t v12 = v83;
  int v48 = *MEMORY[0x1E4FAB9E8];
  uint64_t v49 = *(uint64_t **)(v39 + 104);
  unint64_t v81 = (v39 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  uint64_t v82 = v49;
  LODWORD(v83) = v48;
  uint64_t v50 = ((uint64_t (*)(uint64_t *))v49)(v12);
  MEMORY[0x1F4188790](v50);
  uint64_t v51 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v53 = v52;
  uint64_t v77 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v51);
  uint64_t v85 = v53;
  sub_1C151731C();
  uint64_t v54 = *(void (**)(uint64_t *, uint64_t))(v39 + 8);
  uint64_t v80 = (v39 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v55 = v12;
  uint64_t v56 = v12;
  uint64_t v57 = v79;
  v54(v56, v47);
  v89[0] = KeyPath;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v58 = swift_allocBox();
  uint64_t v60 = v59;
  uint64_t v61 = (uint64_t *)((char *)v59 + *(int *)(v57 + 48));
  uint64_t v62 = swift_allocObject();
  *(double *)(v62 + 16) = a5;
  *uint64_t v60 = v62;
  sub_1C151786C();
  uint64_t v63 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104);
  unint64_t v64 = v60;
  uint64_t v65 = v84;
  v63(v64, v84, v40);
  uint64_t v66 = swift_allocObject();
  *(double *)(v66 + 16) = a5;
  *uint64_t v61 = v66;
  v63(v61, v65, v40);
  *unint64_t v55 = v58;
  ((void (*)(uint64_t *, void, uint64_t))v82)(v55, v83, v47);
  sub_1C0350804();
  sub_1C0C2762C(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v68 = v67;
  uint64_t v69 = *(void *)(v67 - 8);
  unint64_t v70 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_1C1529AE0;
  unint64_t v72 = v71 + v70;
  uint64_t v73 = *MEMORY[0x1E4FAB610];
  sub_1C0C2762C(0, &qword_1EB85C7C8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 104))(v72, v73, v74);
  (*(void (**)(unint64_t, void, uint64_t))(v69 + 104))(v72, *MEMORY[0x1E4FAB620], v68);
  uint64_t v75 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v75);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v86 + 8))(v55, v47);
}

uint64_t sub_1C1275480(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t KeyPath = a1;
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v37 - v11);
  uint64_t v44 = a1;
  uint64_t v13 = swift_allocObject();
  char v14 = a2 + 37;
  uint64_t v15 = a2[40];
  uint64_t v16 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v15);
  double v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  uint64_t v19 = a2[40];
  uint64_t v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(v14, v19);
  *(double *)(v13 + 16) = (v17 - (*(double (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18)) * 0.5;
  *uint64_t v12 = v13;
  uint64_t v20 = *MEMORY[0x1E4FABA08];
  uint64_t v43 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 104);
  uint64_t v37 = v9;
  v43(v12, v20, v9);
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  uint64_t v40 = v22;
  uint64_t v39 = sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v21);
  sub_1C151738C();
  double v23 = *(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8);
  uint64_t v41 = v10 + 8;
  uint64_t v42 = v23;
  v23(v12, v9);
  uint64_t v44 = KeyPath;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v25 = v24;
  uint64_t v26 = swift_allocBox();
  uint64_t v28 = v27;
  uint64_t v29 = (uint64_t *)((char *)v27 + *(int *)(v25 + 48));
  uint64_t v30 = swift_allocObject();
  *(double *)(v30 + 16) = a3;
  *uint64_t v28 = v30;
  uint64_t v31 = *MEMORY[0x1E4FAB798];
  uint64_t v32 = sub_1C151786C();
  uint64_t v33 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);
  v33(v28, v31, v32);
  uint64_t v34 = swift_allocObject();
  *(double *)(v34 + 16) = a4;
  *uint64_t v29 = v34;
  v33(v29, v31, v32);
  *uint64_t v12 = v26;
  uint64_t v35 = v37;
  v43(v12, *MEMORY[0x1E4FAB9E8], v37);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return v42(v12, v35);
}

uint64_t sub_1C1275874(uint64_t a1, void *a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v23 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v22 - v6);
  uint64_t v25 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v9 = v8;
  uint64_t v22 = swift_allocBox();
  uint64_t v11 = v10;
  uint64_t v12 = (uint64_t *)((char *)v10 + *(int *)(v9 + 48));
  uint64_t v13 = sub_1C151786C();
  uint64_t v14 = swift_allocBox();
  sub_1C151785C();
  *uint64_t v11 = v14;
  uint64_t v15 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104);
  v15(v11, *MEMORY[0x1E4FAB7A0], v13);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = a2[40];
  uint64_t v18 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v17);
  *(double *)(v16 + 16) = (*(double (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  *uint64_t v12 = v16;
  v15(v12, *MEMORY[0x1E4FAB798], v13);
  uint64_t v19 = v23;
  *uint64_t v7 = v22;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB9E8], v19);
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v20);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t sub_1C1275B80(uint64_t a1, uint64_t a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v20 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 360);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v18);
    sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    id v19 = v17;
    sub_1C151737C();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1275EC0(uint64_t a1, uint64_t a2)
{
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v28 - v7);
  uint64_t v9 = sub_1C151E24C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v13 = *(void *)(a2 + 360);
  if ((*(unsigned char *)(v13 + qword_1EB8739C0) & 1) != 0
    || (sub_1BFE4597C(),
        *uint64_t v12 = sub_1C151F56C(),
        (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBD8], v9),
        char v14 = sub_1C151E26C(),
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    uint64_t v16 = swift_allocObject();
    uint64_t v17 = *(void **)(v13 + *(void *)(*(void *)v13 + 136));
    *(void *)(v16 + 16) = v17;
    *uint64_t v8 = v16;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB9C0], v5);
    sub_1C0350804();
    sub_1C0C2762C(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t v21 = *(void *)(v20 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
    unint64_t v24 = v23 + v22;
    id v25 = v17;
    sub_1C15179DC();
    uint64_t v26 = *(void (**)(unint64_t, void, uint64_t))(v20 + 104);
    v26(v24, *MEMORY[0x1E4FAB550], v19);
    sub_1C15179DC();
    v26(v24 + v21, *MEMORY[0x1E4FAB560], v19);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0350724(0, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
    sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, v27);
    sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
    sub_1C151737C();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1276324(void *a1)
{
  v25[1] = *a1;
  sub_1C0C2762C(0, &qword_1EB85C840, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FABA30]);
  uint64_t v26 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - v4);
  uint64_t v27 = a1;
  v25[0] = swift_getKeyPath();
  sub_1BFF35C38();
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)(v9 + *(int *)(v7 + 48));
  uint64_t v12 = *MEMORY[0x1E4FAB790];
  uint64_t v13 = sub_1C151786C();
  char v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  v14(v10, v12, v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0x4000000000000000;
  *uint64_t v11 = v15;
  v14((uint64_t)v11, *MEMORY[0x1E4FAB798], v13);
  *uint64_t v5 = v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB9E8], v26);
  sub_1C0350804();
  sub_1C0C2762C(0, &qword_1EB85C7D8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB678]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
  unint64_t v21 = v20 + v19;
  uint64_t v22 = *MEMORY[0x1E4FAB5E8];
  sub_1C0C2762C(0, &qword_1EB85C7C8, (uint64_t (*)(void))sub_1C01BC7F0, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E4FAB618]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v21, *MEMORY[0x1E4FAB620], v17);
  sub_1C03507A8(&qword_1EB85C798, &qword_1EB85C7A0, MEMORY[0x1E4FAB4D0]);
  sub_1C0C274D0(&qword_1EB871260, (void (*)(uint64_t))sub_1BFE13974);
  sub_1C151737C();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v26);
}

uint64_t sub_1C127673C()
{
  return swift_deallocObject();
}

uint64_t sub_1C127674C(uint64_t a1)
{
  return sub_1C1274770(a1, *(void *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_1C127675C(uint64_t a1)
{
  return sub_1C1275EC0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1276764(uint64_t a1)
{
  return sub_1C1275B80(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C127676C(uint64_t a1)
{
  return sub_1C1275874(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C1276774(uint64_t a1)
{
  return sub_1C1275480(a1, *(void **)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1C1276780()
{
  return swift_deallocObject();
}

uint64_t static FormatCodingSafeishArrayStrategy.decode(rawValue:)()
{
  return sub_1BFE7AB14();
}

uint64_t sub_1C12767D0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BFE7AABC(a1, a2, (uint64_t (*)(uint64_t, void, void, void))static FormatCodingSafeishArrayStrategy.decode(rawValue:), a3);
}

uint64_t static FormatCodingNilArrayStrategy.defaultValue.getter()
{
  return 0;
}

BOOL static FormatCodingNilArrayStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return a1 != 0;
}

uint64_t static FormatCodingNilArrayStrategy.decode(rawValue:)()
{
  return sub_1C1517E5C();
}

BOOL sub_1C1276844(uint64_t *a1)
{
  return static FormatCodingNilArrayStrategy.shouldEncode(wrappedValue:)(*a1);
}

uint64_t sub_1C127684C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static FormatCodingNilArrayStrategy.decode(rawValue:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C1276884()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C12768CC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1276908(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1276948()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C12769C0()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for FormatCodingSafeishArrayStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FormatCodingNilArrayStrategy()
{
  return __swift_instantiateGenericMetadata();
}

id CoverIssueColorPalette.backgroundColor.getter()
{
  return *v0;
}

id CoverIssueColorPalette.titleColor.getter()
{
  return *(id *)(v0 + 8);
}

id CoverIssueColorPalette.dateFgColor.getter()
{
  return *(id *)(v0 + 16);
}

id CoverIssueColorPalette.badgeFgColor.getter()
{
  return *(id *)(v0 + 24);
}

id CoverIssueColorPalette.badgeNewBgColor.getter()
{
  return *(id *)(v0 + 32);
}

id CoverIssueColorPalette.badgeSuggestedBgColor.getter()
{
  return *(id *)(v0 + 40);
}

id CoverIssueColorPalette.downloadProgressTintColor.getter()
{
  return *(id *)(v0 + 48);
}

id CoverIssueColorPalette.downloadTrackTintColor.getter()
{
  return *(id *)(v0 + 56);
}

id CoverIssueColorPalette.followButtonBackgroundColor.getter()
{
  return *(id *)(v0 + 64);
}

id sub_1C1276AB8()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_whiteColor);
  id v2 = objc_msgSend(v0, sel_blackColor);
  id v3 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  id v4 = objc_msgSend(v0, sel_blackColor);
  id v5 = objc_msgSend(v0, sel_whiteColor);
  id v6 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  id v7 = objc_msgSend(v0, sel_secondaryLabelColor);
  id v8 = objc_msgSend(v0, sel_whiteColor);
  id v9 = objc_msgSend(v0, sel_redColor);
  id v10 = objc_msgSend(v0, sel_grayColor);
  id v11 = objc_msgSend(v0, sel_grayColor);
  id v12 = objc_msgSend(v0, sel_grayColor);
  id v13 = objc_msgSend(v12, sel_colorWithAlphaComponent_, 0.3);

  id result = objc_msgSend(v0, sel_systemPinkColor);
  qword_1EA1AD8C0 = (uint64_t)v3;
  *(void *)algn_1EA1AD8C8 = v6;
  qword_1EA1AD8D0 = (uint64_t)v7;
  unk_1EA1AD8D8 = v8;
  qword_1EA1AD8E0 = (uint64_t)v9;
  unk_1EA1AD8E8 = v10;
  qword_1EA1AD8F0 = (uint64_t)v11;
  unk_1EA1AD8F8 = v13;
  qword_1EA1AD900 = (uint64_t)result;
  return result;
}

void __swiftcall CoverIssueColorPalette.init(backgroundColor:titleColor:dateFgColor:badgeFgColor:badgeNewBgColor:badgeSuggestedBgColor:downloadProgressTintColor:downloadTrackTintColor:followButtonBackgroundColor:)(NewsFeed::CoverIssueColorPalette *__return_ptr retstr, UIColor backgroundColor, UIColor titleColor, UIColor dateFgColor, UIColor badgeFgColor, UIColor badgeNewBgColor, UIColor badgeSuggestedBgColor, UIColor downloadProgressTintColor, UIColor downloadTrackTintColor, UIColor followButtonBackgroundColor)
{
  retstr->backgroundColor = backgroundColor;
  retstr->titleColor = titleColor;
  retstr->dateFgColor = dateFgColor;
  retstr->badgeFgColor = badgeFgColor;
  retstr->badgeNewBgColor = badgeNewBgColor;
  retstr->badgeSuggestedBgColor = badgeSuggestedBgColor;
  retstr->downloadProgressTintColor = downloadProgressTintColor;
  retstr->downloadTrackTintColor = downloadTrackTintColor;
  retstr->followButtonBackgroundColor = followButtonBackgroundColor;
}

id static CoverIssueColorPalette.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA194BF0 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA1AD8C0;
  id v3 = *(void **)algn_1EA1AD8C8;
  id v4 = (void *)qword_1EA1AD8D0;
  id v5 = (void *)unk_1EA1AD8D8;
  id v6 = (void *)qword_1EA1AD8E0;
  id v7 = (void *)unk_1EA1AD8E8;
  id v8 = (void *)qword_1EA1AD8F0;
  id v9 = (void *)unk_1EA1AD8F8;
  uint64_t v10 = qword_1EA1AD900;
  id v20 = (id)qword_1EA1AD900;
  *a1 = qword_1EA1AD8C0;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  id v11 = v2;
  id v12 = v3;
  id v13 = v4;
  id v14 = v5;
  id v15 = v6;
  id v16 = v7;
  id v17 = v8;
  id v18 = v9;
  return v20;
}

void destroy for CoverIssueColorPalette(uint64_t a1)
{
  id v2 = *(void **)(a1 + 64);
}

void *initializeWithCopy for CoverIssueColorPalette(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = *(void **)(a2 + 32);
  id v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  id v9 = *(void **)(a2 + 48);
  uint64_t v10 = *(void **)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  id v11 = *(void **)(a2 + 64);
  a1[8] = v11;
  id v12 = v3;
  id v13 = v4;
  id v14 = v5;
  id v15 = v6;
  id v16 = v7;
  id v17 = v8;
  id v18 = v9;
  id v19 = v10;
  id v20 = v11;
  return a1;
}

uint64_t assignWithCopy for CoverIssueColorPalette(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  id v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 32);
  id v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 40);
  id v20 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 48);
  uint64_t v23 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v22;
  id v24 = v22;

  id v25 = *(void **)(a2 + 56);
  uint64_t v26 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v25;
  id v27 = v25;

  uint64_t v28 = *(void **)(a2 + 64);
  uint64_t v29 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v28;
  id v30 = v28;

  return a1;
}

uint64_t assignWithTake for CoverIssueColorPalette(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  id v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  id v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for CoverIssueColorPalette(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverIssueColorPalette(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverIssueColorPalette()
{
  return &type metadata for CoverIssueColorPalette;
}

uint64_t _s8NewsFeed28FormatBindingImageExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  int v4 = *(unsigned __int8 *)(a1 + 41);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  int v7 = *(unsigned __int8 *)(a2 + 41);
  long long v8 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v8;
  uint64_t v15 = v2;
  char v16 = v3;
  long long v9 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v9;
  uint64_t v12 = v5;
  char v13 = v6;
  return _s8NewsFeed22FormatImageNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v14, (uint64_t)v11) & ~(v4 ^ v7) & 1;
}

unint64_t sub_1C1277168(uint64_t a1)
{
  unint64_t result = sub_1C1277190();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1277190()
{
  unint64_t result = qword_1EA1AD908;
  if (!qword_1EA1AD908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD908);
  }
  return result;
}

unint64_t sub_1C12771E4(void *a1)
{
  a1[1] = sub_1BFDEC9E4();
  a1[2] = sub_1BFDC3188();
  unint64_t result = sub_1C127721C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C127721C()
{
  unint64_t result = qword_1EA1AD910;
  if (!qword_1EA1AD910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD910);
  }
  return result;
}

uint64_t initializeWithCopy for FormatBindingImageExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BFF2B584(*(void *)a2, v5, v6, v7, v8, v9);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t assignWithCopy for FormatBindingImageExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BFF2B584(*(void *)a2, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  unint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  unsigned int v15 = *(unsigned __int8 *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  sub_1BFF01078(v10, v11, v12, v13, v14, v15);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t assignWithTake for FormatBindingImageExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v4;
  unsigned int v12 = *(unsigned __int8 *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v5;
  sub_1BFF01078(v6, v7, v8, v9, v10, v12);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBindingImageExpression()
{
  return &type metadata for FormatBindingImageExpression;
}

uint64_t static FormatGrayscaleColor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_1C127743C(uint64_t a1)
{
  unint64_t result = sub_1C1277464();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1277464()
{
  unint64_t result = qword_1EA1AD918;
  if (!qword_1EA1AD918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD918);
  }
  return result;
}

uint64_t sub_1C12774B8(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2)
  {
    char v2 = *(unsigned char *)(a2 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      if (*(unsigned char *)(a2 + 16)) {
        return 1;
      }
    }
    else
    {
      if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
        char v2 = 1;
      }
      if ((v2 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_1C12774FC(void *a1)
{
  a1[1] = sub_1C087B234();
  a1[2] = sub_1C08FE2E0();
  unint64_t result = sub_1C1277534();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1277534()
{
  unint64_t result = qword_1EA1AD920;
  if (!qword_1EA1AD920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD920);
  }
  return result;
}

uint64_t sub_1C1277588@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGrayscaleColor.init(from:)(a1, a2);
}

uint64_t sub_1C12775A0(void *a1)
{
  return FormatGrayscaleColor.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatGrayscaleColor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatGrayscaleColor()
{
  return &type metadata for FormatGrayscaleColor;
}

uint64_t FormatAdMetricsData.nativeAdInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C151D2DC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D2DC();
  char v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for FormatAdMetricsData(uint64_t a1)
{
  uint64_t v2 = sub_1C151D2DC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D2DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D2DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D2DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for FormatAdMetricsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D2DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAdMetricsData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C12778D0);
}

uint64_t sub_1C12778D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D2DC();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatAdMetricsData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1277950);
}

uint64_t sub_1C1277950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151D2DC();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

Swift::Bool __swiftcall FeedCursorTrackerSnapshot.contains(identifier:)(Swift::String identifier)
{
  return sub_1BFF896B4(identifier._countAndFlagsBits, (uint64_t)identifier._object, *(void *)(v2 + *(int *)(v1 + 36)));
}

uint64_t FeedCursorTracker.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v5(a1, v3, AssociatedTypeWitness);
}

uint64_t sub_1C1277B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = *(void *)(AssociatedConformanceWitness + 8);
  *a5 = sub_1C151811C();
  a5[1] = v11;
  unsigned int v12 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v13 = type metadata accessor for FeedCursorTrackerGroup();
  v12(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v14 = (char *)a5 + *(int *)(v13 + 40);
  uint64_t v15 = sub_1C151631C();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  uint64_t v41 = a4;
  (*(void (**)(char *, uint64_t))(v37 + 16))(v14, a4);
  char v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v17 = (uint64_t)v16;
  if (v16)
  {
    id v18 = objc_msgSend(v16, sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v19 = sub_1C151E62C();
    uint64_t v17 = v20;
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v42 = a1;
  uint64_t v43 = a5;
  id v21 = (uint64_t *)((char *)a5 + *(int *)(v13 + 44));
  *id v21 = v19;
  v21[1] = v17;
  uint64_t v40 = AssociatedTypeWitness;
  unint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(AssociatedTypeWitness, v10);
  unint64_t v23 = v22;
  uint64_t v39 = v13;
  if (v22 >> 62) {
    uint64_t v24 = sub_1C15204BC();
  }
  else {
    uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (!v24)
  {
LABEL_15:
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v38);
    (*(void (**)(uint64_t))(*(void *)(v40 - 8) + 8))(v42);
    uint64_t result = swift_bridgeObjectRelease();
    *(uint64_t *)((char *)v43 + *(int *)(v39 + 48)) = v25;
    uint64_t v36 = (uint64_t *)((char *)v43 + *(int *)(v39 + 52));
    *uint64_t v36 = a2;
    v36[1] = a3;
    return result;
  }
  uint64_t v46 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF661B8(0, v24 & ~(v24 >> 63), 0);
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = 0;
    uint64_t v25 = v46;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        uint64_t v28 = (void *)MEMORY[0x1C18C7CB0](v27, v23);
      }
      else
      {
        uint64_t v28 = *(void **)(v23 + 8 * v27 + 32);
        swift_unknownObjectRetain();
      }
      id v29 = objc_msgSend(v28, sel_itemID);
      uint64_t v30 = sub_1C151E62C();
      uint64_t v32 = v31;
      swift_unknownObjectRelease();

      unint64_t v34 = *(void *)(v46 + 16);
      unint64_t v33 = *(void *)(v46 + 24);
      if (v34 >= v33 >> 1) {
        sub_1BFF661B8(v33 > 1, v34 + 1, 1);
      }
      ++v27;
      *(void *)(v46 + 16) = v34 + 1;
      unint64_t v35 = v46 + 16 * v34;
      *(void *)(v35 + 32) = v30;
      *(void *)(v35 + 40) = v32;
    }
    while (v24 != v27);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t FeedCursorTrackerSnapshot.context.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t FeedCursorTrackerSnapshot.seenIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorTrackerSnapshot.seenItemIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorTrackerSnapshot.date(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for FeedCursorTrackerGroup();
  uint64_t v10 = sub_1C151FD8C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v21 - v12;
  uint64_t v14 = *(void *)(v4 + *(int *)(a3 + 44));
  v21[0] = a1;
  v21[1] = a2;
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C5F70](v21, v14, MEMORY[0x1E4FBB1A0], v9, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v16 = sub_1C151631C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
  else
  {
    id v18 = &v13[*(int *)(v9 + 40)];
    uint64_t v19 = sub_1C151631C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(a4, v18, v19);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(a4, 0, 1, v19);
  }
}

uint64_t FeedCursorTrackerSnapshot.groups(for:)()
{
  return sub_1C151E9CC();
}

uint64_t sub_1C127838C()
{
  return sub_1C151E5CC() & 1;
}

uint64_t FeedCursorTrackerSnapshot.description.getter()
{
  return sub_1C151EFCC();
}

uint64_t sub_1C1278504@<X0>(char *a1@<X0>, void (*a2)(void *__return_ptr, uint64_t, uint64_t, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *((void *)a1 + 1);
  type metadata accessor for FeedCursorTrackerGroup();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  a2(v10, v6, v7, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
  return sub_1C0088320((uint64_t)v10, a3);
}

uint64_t FeedCursorTrackerGroup.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorTrackerGroup.kind.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t FeedCursorTrackerGroup.seenDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t FeedCursorTrackerGroup.tagIdentifier.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FeedCursorTrackerGroup.itemIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorTrackerGroup.sessionIdentifier.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C12787F8()
{
  return sub_1C127838C() & 1;
}

uint64_t method lookup function for FeedCursorTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursorTracker);
}

uint64_t dispatch thunk of FeedCursorTracker.__allocating_init(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FeedCursorTracker.__allocating_init(snapshot:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t *sub_1C127885C(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v10 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C1278A50(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C1278BAC(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1C1278D5C(uint64_t *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = *(void *)(v10 + 64) + 7;
  if ((v11 | (unint64_t)v6) > 7
    || ((*(_DWORD *)(v10 + 80) | v6) & 0x100000) != 0
    || ((((((v13 + ((v12 + ((v6 + 16) & ~(unint64_t)v6)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    unint64_t v22 = (uint64_t *)(v16
                    + (((v11 | v6) & 0xF8 ^ 0x1F8) & ((v11 | v6) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v11;
    uint64_t v32 = v9;
    uint64_t v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    uint64_t v19 = (char *)a2 + v7;
    uint64_t v20 = ((unint64_t)a1 + v7 + 16) & ~v7;
    uint64_t v21 = (unint64_t)(v19 + 16) & ~v7;
    unint64_t v22 = a1;
    unint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, AssociatedTypeWitness);
    uint64_t v24 = (v20 + v12) & v17;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v24, (v21 + v12) & v17, v32);
    uint64_t v25 = (void *)((v13 + v24) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (void *)((v13 + ((v21 + v12) & v17)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v25 = *v26;
    v25[1] = v26[1];
    uint64_t v27 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = (void *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v27 = *v28;
    id v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
    *id v29 = *v30;
    v29[1] = v30[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v22;
}

void *sub_1C1279054(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5 + 24;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v8, v9, AssociatedTypeWitness);
  uint64_t v10 = *(void *)(v6 + 40);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v10 + v14 + v8) & ~v14;
  uint64_t v16 = (v10 + v14 + v9) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v15, v16, v11);
  uint64_t v17 = *(void *)(v13 + 40) + 7;
  uint64_t v18 = (void *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  v21 += 15;
  *uint64_t v20 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v23 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v23 = *(void *)(v21 & 0xFFFFFFFFFFFFFFF8);
  v23[1] = *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C127928C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v9, AssociatedTypeWitness);
  uint64_t v10 = *(void *)(v6 + 32);
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v10 + v14 + v8) & ~v14;
  uint64_t v16 = (v10 + v14 + v9) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v15, v16, v11);
  uint64_t v17 = *(void *)(v13 + 32) + 7;
  uint64_t v18 = (_OWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  *(_OWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C1279460(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v9, v10, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = sub_1C151631C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v11 + v15 + v9) & ~v15;
  uint64_t v17 = (v11 + v15 + v10) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40))(v16, v17, v12);
  uint64_t v18 = *(void *)(v14 + 24) + 7;
  uint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRelease();
  unint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)v22;
  v22 += 15;
  *unint64_t v21 = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *(void *)(v22 & 0xFFFFFFFFFFFFFFF8);
  v24[1] = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C12796AC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1278504(a1, *(void (**)(void *__return_ptr, uint64_t, uint64_t, char *))(v2 + 32), a2);
}

void sub_1C12796CC()
{
  if (!qword_1EB8616A0[0])
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, qword_1EB8616A0);
    }
  }
}

uint64_t sub_1C1279724(void *a1)
{
  uint64_t v3 = v1;
  sub_1C1279E80(0, &qword_1EA1AD928, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1279960();
  sub_1C1520F0C();
  char v14 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v13 = 1;
    sub_1C152074C();
    uint64_t v12 = *(void *)(v3 + 32);
    v11[15] = 2;
    sub_1C045A220();
    sub_1C0DF0DD0((unint64_t *)&qword_1EA19B790, (void (*)(void))sub_1C045A2E8);
    sub_1C152080C();
    v11[14] = 3;
    sub_1C15207DC();
    v11[13] = 4;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C1279960()
{
  unint64_t result = qword_1EB86A858;
  if (!qword_1EB86A858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A858);
  }
  return result;
}

unint64_t sub_1C12799B4()
{
  unint64_t result = 0x6449676174;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6449636D75;
      break;
    case 2:
      unint64_t result = 0x6E6572646C696863;
      break;
    case 3:
      unint64_t result = 0x6E65646469487369;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C1279A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C127A2F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C1279A80(uint64_t a1)
{
  unint64_t v2 = sub_1C1279960();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C1279ABC(uint64_t a1)
{
  unint64_t v2 = sub_1C1279960();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C1279AF8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C1279B54(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 26) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_1C1279B3C(void *a1)
{
  return sub_1C1279724(a1);
}

uint64_t sub_1C1279B54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1279E80(0, &qword_1EB86B7C8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1279960();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v26 = 1;
  uint64_t v20 = sub_1C152060C();
  uint64_t v21 = v13;
  char v25 = 3;
  int v19 = sub_1C152061C();
  sub_1C045A220();
  char v24 = 2;
  sub_1C0DF0DD0(&qword_1EB86B298, (void (*)(void))sub_1C0DF0E3C);
  sub_1C15206EC();
  uint64_t v18 = v22;
  char v23 = 4;
  char v14 = sub_1C152061C();
  v19 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  uint64_t v16 = v21;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 41) = v14 & 1;
  return result;
}

void sub_1C1279E80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1279960();
    unint64_t v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SportsTaxonomyGraphResourceEntityNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1279FB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceEntityNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceEntityNode.CodingKeys;
}

uint64_t initializeWithCopy for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t assignWithTake for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsTaxonomyGraphResourceEntityNode(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceEntityNode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceEntityNode()
{
  return &type metadata for SportsTaxonomyGraphResourceEntityNode;
}

unint64_t sub_1C127A1F0()
{
  unint64_t result = qword_1EA1AD930;
  if (!qword_1EA1AD930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD930);
  }
  return result;
}

unint64_t sub_1C127A248()
{
  unint64_t result = qword_1EB86A868;
  if (!qword_1EB86A868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A868);
  }
  return result;
}

unint64_t sub_1C127A2A0()
{
  unint64_t result = qword_1EB86A860;
  if (!qword_1EB86A860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A860);
  }
  return result;
}

uint64_t sub_1C127A2F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449636D75 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E65646469487369 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1615CD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t SportsTaxonomyGraphRootNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

void *SportsTaxonomyGraphRootNode.childrenTagIds()()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v6 = *(void *)(v1 + 8 * v3 + 32);
    switch(v6 >> 62)
    {
      case 1uLL:
      case 2uLL:
        uint64_t v7 = *(void *)((v6 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v8 = *(void *)(v7 + 24);
        uint64_t v9 = *(void *)(v7 + 16);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1BFEF9B68(0, v4[2] + 1, 1, v4);
        }
        unint64_t v11 = v4[2];
        unint64_t v10 = v4[3];
        if (v11 >= v10 >> 1) {
          uint64_t v4 = sub_1BFEF9B68((void *)(v10 > 1), v11 + 1, 1, v4);
        }
        v4[2] = v11 + 1;
        uint64_t v5 = &v4[2 * v11];
        v5[4] = v9;
        v5[5] = v8;
        break;
      default:
        break;
    }
    ++v3;
  }
  while (v2 != v3);
  swift_bridgeObjectRelease_n();
  return v4;
}

uint64_t SportsTaxonomyGraphRootNode.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraphRootNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SportsTaxonomyGraphRootNode()
{
  return self;
}

uint64_t method lookup function for SportsTaxonomyGraphRootNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsTaxonomyGraphRootNode);
}

uint64_t destroy for FormatInspectionFrame()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatInspectionFrame(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatInspectionFrame(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for FormatInspectionFrame(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatInspectionFrame(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatInspectionFrame(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionFrame()
{
  return &type metadata for FormatInspectionFrame;
}

unsigned char *storeEnumTagSinglePayload for FormatInspectionFrameDisplay(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C127A9D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionFrameDisplay()
{
  return &type metadata for FormatInspectionFrameDisplay;
}

unint64_t sub_1C127AA0C()
{
  unint64_t result = qword_1EA1AD938;
  if (!qword_1EA1AD938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD938);
  }
  return result;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatSupplementaryNodeDataLayoutAttributes.frame.getter()
{
  return *(double *)(*(void *)(v0
                               + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 16);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 144);
  uint64_t v5 = *(void *)(v2 + 168);
  uint64_t v6 = *(void *)(v2 + 176);
  uint64_t v7 = *(void *)(v2 + 184);
  uint64_t v8 = *(void *)(v2 + 192);
  uint64_t v9 = *(void *)(v2 + 200);
  char v10 = *(unsigned char *)(v2 + 208);
  uint64_t v11 = *(void *)(v2 + 216);
  uint64_t v12 = *(void *)(v2 + 224);
  char v13 = *(unsigned char *)(v2 + 232);
  *(void *)a1 = *(void *)(v2 + 128);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v2 + 152);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.formatImageRequests(options:inventory:)(uint64_t a1, uint64_t a2)
{
  return sub_1BFFCDAA8(a1, a2);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.dataLayoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.renderKeyIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.pinTrait.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFD3E2B4(v1 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, a1, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.rubberbandTrait.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFD3E2B4(v1 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, a1, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.dataAccessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatSupplementaryNodeDataLayoutAttributes.accessibilityRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 233);
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFCB3A60(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  sub_1BFCB3A60(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  swift_release();
  sub_1C017C418(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_sourceItemData), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_sourceItemData + 8));
  return v0;
}

uint64_t FormatSupplementaryNodeDataLayoutAttributes.__deallocating_deinit()
{
  FormatSupplementaryNodeDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C127AEA0()
{
  uint64_t v1 = *(void *)(*(void *)(*v0
                             + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C127AEE0()
{
  return type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes();
}

uint64_t method lookup function for FormatSupplementaryNodeDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSupplementaryNodeDataLayoutAttributes);
}

uint64_t sub_1C127AF00(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9)
{
  uint64_t v10 = v9;
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v35 = sub_1C151635C();
  uint64_t v17 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  int v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a2;
  long long v34 = *a9;
  uint64_t v33 = *((void *)a9 + 2);
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = v20;
  *(void *)(v10 + 56) = a4;
  *(unsigned char *)(v10 + 64) = a5 & 1;
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FAD3E0];
  uint64_t v22 = a6;
  sub_1BFD3E2B4(a6, v10 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_pinTrait, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
  char v23 = (void (*)(uint64_t))MEMORY[0x1E4FAD628];
  uint64_t v24 = v31;
  sub_1BFD3E2B4(v31, v10 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_rubberbandTrait, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
  *(void *)(v10 + 48) = a3;
  *(void *)(v10 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes) = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151634C();
  uint64_t v25 = sub_1C151633C();
  uint64_t v27 = v26;
  sub_1BFCB3A60(v24, &qword_1EB882B90, v23);
  sub_1BFCB3A60(v22, &qword_1EB87C7F8, v21);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v35);
  *(void *)(v10 + 16) = v25;
  *(void *)(v10 + 24) = v27;
  uint64_t v28 = v10 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_sourceItemData;
  *(_OWORD *)uint64_t v28 = v34;
  *(void *)(v28 + 16) = v33;
  return v10;
}

id EmptyView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id EmptyView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id EmptyView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmptyView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id EmptyView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C127B374()
{
  sub_1C0065A90(&qword_1EB879A20);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C127B3CC(void *a1)
{
  sub_1C127BB4C(0, &qword_1EA1AD950, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C127BAF8();
  sub_1C1520F0C();
  v9[15] = 0;
  sub_1C15207CC();
  if (!v1)
  {
    v9[14] = 1;
    sub_1C15207CC();
    v9[13] = 2;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C127B568()
{
  uint64_t v1 = 1701869940;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F727265;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C127B5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C127BDBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C127B5E4(uint64_t a1)
{
  unint64_t v2 = sub_1C127BAF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C127B620(uint64_t a1)
{
  unint64_t v2 = sub_1C127BAF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C127B65C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C127B84C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C127B6A0(void *a1)
{
  return sub_1C127B3CC(a1);
}

uint64_t sub_1C127B6B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1C0BAB8E4(0, &qword_1EA1A2778, (uint64_t (*)(uint64_t))sub_1C03A1444, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  long long v15 = v1[1];
  sub_1BFF27ECC();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v6 = sub_1C151FE5C();
  uint64_t v8 = v7;
  sub_1C0A1B2E8();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  *(void *)(v9 + 32) = 0x696669746E656449;
  *(void *)(v9 + 40) = 0xEA00000000007265;
  uint64_t v11 = MEMORY[0x1E4FBB208];
  long long v15 = *v2;
  long long v10 = v15;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v11;
  *(_OWORD *)(v9 + 48) = v10;
  *(unsigned char *)(v9 + 88) = 0;
  *(void *)(v9 + 96) = 0x726F727245;
  *(void *)(v9 + 104) = 0xE500000000000000;
  long long v14 = v2[2];
  long long v12 = v14;
  *(void *)(v9 + 136) = v5;
  *(void *)(v9 + 144) = v11;
  *(_OWORD *)(v9 + 112) = v12;
  *(unsigned char *)(v9 + 152) = 0;
  *(void *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(void *)(inited + 64) = &off_1F1B9F170;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = v9;
  sub_1BFF59A8C((uint64_t)&v15);
  sub_1BFF59A8C((uint64_t)&v14);
  uint64_t result = sub_1C03A101C(inited);
  a1[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a1[4] = (uint64_t)&off_1F1B9F238;
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionError()
{
  return &type metadata for DebugInspectionError;
}

uint64_t sub_1C127B84C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C127BB4C(0, &qword_1EA1AD940, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C127BAF8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_1C152069C();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  return result;
}

unint64_t sub_1C127BAF8()
{
  unint64_t result = qword_1EA1AD948;
  if (!qword_1EA1AD948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD948);
  }
  return result;
}

void sub_1C127BB4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C127BAF8();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionError.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C127BC7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionError.CodingKeys()
{
  return &type metadata for DebugInspectionError.CodingKeys;
}

unint64_t sub_1C127BCB8()
{
  unint64_t result = qword_1EA1AD958;
  if (!qword_1EA1AD958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD958);
  }
  return result;
}

unint64_t sub_1C127BD10()
{
  unint64_t result = qword_1EA1AD960;
  if (!qword_1EA1AD960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD960);
  }
  return result;
}

unint64_t sub_1C127BD68()
{
  unint64_t result = qword_1EA1AD968;
  if (!qword_1EA1AD968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD968);
  }
  return result;
}

uint64_t sub_1C127BDBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C127C098(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1489428(*a1, *a2);
}

uint64_t sub_1C127C0A4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C127C10C()
{
  FormatItemTrait.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C127C170@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatItemTrait.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C127C198(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C127C1C8();
  unint64_t result = sub_1BFCC2960();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C127C1C8()
{
  unint64_t result = qword_1EA1AD970;
  if (!qword_1EA1AD970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD970);
  }
  return result;
}

unint64_t sub_1C127C21C(uint64_t a1)
{
  unint64_t result = sub_1C08B3F38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C127C244(void *a1)
{
  a1[1] = sub_1C0080144();
  a1[2] = sub_1C0080240();
  unint64_t result = sub_1C0080198();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatItemTrait()
{
  return &type metadata for FormatItemTrait;
}

uint64_t SportsTaxonomyGraph.rootNode.getter()
{
  return swift_retain();
}

uint64_t SportsTaxonomyGraph.allTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C127C38C()
{
  unint64_t v1 = *v0;
  sub_1C1520DBC();
  switch(v1 >> 62)
  {
    case 1uLL:
    case 2uLL:
      swift_bridgeObjectRetain();
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease_n();
      break;
    default:
      sub_1C1520DDC();
      break;
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C127C464()
{
  switch(*v0 >> 62)
  {
    case 1:
    case 2:
      swift_bridgeObjectRetain();
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t result = swift_bridgeObjectRelease_n();
      break;
    default:
      uint64_t result = sub_1C1520DDC();
      break;
  }
  return result;
}

uint64_t sub_1C127C520()
{
  unint64_t v1 = *v0;
  sub_1C1520DBC();
  switch(v1 >> 62)
  {
    case 1uLL:
    case 2uLL:
      swift_bridgeObjectRetain();
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease_n();
      break;
    default:
      sub_1C1520DDC();
      break;
  }
  return sub_1C1520E0C();
}

void *sub_1C127C5F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  type metadata accessor for SportsTaxonomyGraphRootNode();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC860];
  v1[2] = v3;
  unint64_t v75 = sub_1C018D010(v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  v74[0] = v5;
  swift_retain();
  uint64_t v6 = MEMORY[0x1E4FBC870];
  sub_1C127CD00(v2, v74, (uint64_t *)&v75, MEMORY[0x1E4FBC870]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_retain();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1C1047660(v7);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v73 = v6;
  uint64_t v65 = v1;
  uint64_t v8 = v1[2];
  swift_beginAccess();
  uint64_t v72 = *(void *)(v8 + 16);
  uint64_t v71 = v6;
  if (*(void *)(v72 + 16))
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    do
    {
      unint64_t v10 = *(void *)(v9 + 32);
      swift_retain();
      sub_1C0247960(0, 1);
      if ((v10 >> 62) >= 2)
      {
        swift_beginAccess();
        uint64_t v11 = swift_bridgeObjectRetain();
        sub_1C1047660(v11);
      }
      swift_retain();
      sub_1C02B5634((uint64_t *)&v70, v10);
      swift_release();
      switch(v10 >> 62)
      {
        case 1uLL:
        case 2uLL:
          uint64_t v12 = *(void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = *(void *)(v12 + 24);
          uint64_t v14 = *(void *)(v12 + 16);
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C((uint64_t *)&v70, v14, v13);
          swift_release();
          swift_bridgeObjectRelease();
          break;
        default:
          swift_release();
          break;
      }
      uint64_t v9 = v72;
    }
    while (*(void *)(v72 + 16));
    uint64_t v6 = v73;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v16 = (void *)sub_1C018D010(MEMORY[0x1E4FBC860]);
  unint64_t v66 = sub_1C018D010(v15);
  uint64_t v17 = v6 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v6 + 56);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v22 = 0;
  int64_t v67 = v21;
  if (!v20) {
    goto LABEL_17;
  }
  while (2)
  {
    unint64_t v23 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v24 = v23 | (v22 << 6);
LABEL_15:
    unint64_t v25 = *(void *)(*(void *)(v6 + 48) + 8 * v24);
    switch(v25 >> 62)
    {
      case 1uLL:
      case 2uLL:
        uint64_t v29 = *(void *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v30 = *(void *)(v29 + 16);
        uint64_t v31 = *(void *)(v29 + 24);
        swift_bridgeObjectRetain();
        swift_retain_n();
        uint64_t v32 = (uint64_t)v16;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v70 = (void *)v32;
        uint64_t v68 = v30;
        unint64_t v35 = sub_1BFEF2D8C(v30, v31);
        uint64_t v36 = *(void *)(v32 + 16);
        BOOL v37 = (v34 & 1) == 0;
        uint64_t v38 = v36 + v37;
        if (__OFADD__(v36, v37)) {
          goto LABEL_64;
        }
        char v39 = v34;
        if (*(void *)(v32 + 24) >= v38)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v16 = v70;
            if (v34) {
              goto LABEL_40;
            }
          }
          else
          {
            sub_1C106A860();
            uint64_t v16 = v70;
            if (v39) {
              goto LABEL_40;
            }
          }
        }
        else
        {
          sub_1C10545E4(v38, isUniquelyReferenced_nonNull_native);
          unint64_t v40 = sub_1BFEF2D8C(v68, v31);
          if ((v39 & 1) != (v41 & 1)) {
            goto LABEL_69;
          }
          unint64_t v35 = v40;
          uint64_t v16 = v70;
          if (v39)
          {
LABEL_40:
            uint64_t v45 = v16[7];
            swift_release();
            *(void *)(v45 + 8 * v35) = v25;
            goto LABEL_41;
          }
        }
        v16[(v35 >> 6) + 8] |= 1 << v35;
        uint64_t v42 = (uint64_t *)(v16[6] + 16 * v35);
        *uint64_t v42 = v68;
        v42[1] = v31;
        *(void *)(v16[7] + 8 * v35) = v25;
        uint64_t v43 = v16[2];
        BOOL v26 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v26) {
          goto LABEL_65;
        }
        v16[2] = v44;
        swift_bridgeObjectRetain();
LABEL_41:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v46 = *(void *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v47 = *(void *)(v46 + 40);
        if (v47)
        {
          unint64_t v64 = v16;
          uint64_t v48 = *(void *)(v46 + 32);
          swift_retain();
          swift_bridgeObjectRetain();
          char v49 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v70 = (void *)v66;
          uint64_t v69 = v48;
          unint64_t v51 = sub_1BFEF2D8C(v48, v47);
          uint64_t v52 = *(void *)(v66 + 16);
          BOOL v53 = (v50 & 1) == 0;
          uint64_t v54 = v52 + v53;
          if (__OFADD__(v52, v53)) {
            goto LABEL_67;
          }
          char v55 = v50;
          if (*(void *)(v66 + 24) >= v54)
          {
            if ((v49 & 1) == 0) {
              sub_1C106A860();
            }
          }
          else
          {
            sub_1C10545E4(v54, v49);
            unint64_t v56 = sub_1BFEF2D8C(v69, v47);
            if ((v55 & 1) != (v57 & 1)) {
              goto LABEL_69;
            }
            unint64_t v51 = v56;
          }
          uint64_t v16 = v64;
          uint64_t v58 = v70;
          unint64_t v66 = (unint64_t)v70;
          if (v55)
          {
            uint64_t v59 = v70[7];
            swift_release();
            *(void *)(v59 + 8 * v51) = v25;
          }
          else
          {
            v70[(v51 >> 6) + 8] |= 1 << v51;
            uint64_t v60 = (uint64_t *)(v58[6] + 16 * v51);
            *uint64_t v60 = v69;
            v60[1] = v47;
            *(void *)(v58[7] + 8 * v51) = v25;
            uint64_t v61 = v58[2];
            BOOL v26 = __OFADD__(v61, 1);
            uint64_t v62 = v61 + 1;
            if (v26) {
              goto LABEL_68;
            }
            v58[2] = v62;
            swift_bridgeObjectRetain();
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        int64_t v21 = v67;
        uint64_t v17 = v6 + 56;
        if (v20) {
          continue;
        }
LABEL_17:
        BOOL v26 = __OFADD__(v22++, 1);
        if (v26)
        {
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          sub_1C1520CFC();
          __break(1u);
          JUMPOUT(0x1C127CCE0);
        }
        if (v22 >= v21) {
          goto LABEL_62;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v22);
        if (v27) {
          goto LABEL_31;
        }
        int64_t v28 = v22 + 1;
        if (v22 + 1 >= v21) {
          goto LABEL_62;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v28);
        if (v27) {
          goto LABEL_30;
        }
        int64_t v28 = v22 + 2;
        if (v22 + 2 >= v21) {
          goto LABEL_62;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v28);
        if (v27) {
          goto LABEL_30;
        }
        int64_t v28 = v22 + 3;
        if (v22 + 3 >= v21) {
          goto LABEL_62;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v28);
        if (v27) {
          goto LABEL_30;
        }
        int64_t v28 = v22 + 4;
        if (v22 + 4 >= v21) {
          goto LABEL_62;
        }
        unint64_t v27 = *(void *)(v17 + 8 * v28);
        if (v27) {
          goto LABEL_30;
        }
        int64_t v28 = v22 + 5;
        if (v22 + 5 < v21)
        {
          unint64_t v27 = *(void *)(v17 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              int64_t v22 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_66;
              }
              if (v22 >= v21) {
                goto LABEL_62;
              }
              unint64_t v27 = *(void *)(v17 + 8 * v22);
              ++v28;
              if (v27) {
                goto LABEL_31;
              }
            }
          }
LABEL_30:
          int64_t v22 = v28;
LABEL_31:
          unint64_t v20 = (v27 - 1) & v27;
          unint64_t v24 = __clz(__rbit64(v27)) + (v22 << 6);
          goto LABEL_15;
        }
LABEL_62:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = v65;
        v65[3] = v16;
        v65[4] = v66;
        v65[5] = v71;
        return result;
      default:
        if (!v20) {
          goto LABEL_17;
        }
        continue;
    }
  }
}

void *sub_1C127CD00(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v9 = *(void *)(a1 + 8 * v7++ + 32);
    switch(v9 >> 62)
    {
      case 1uLL:
        long long v10 = *(_OWORD *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        v30[0] = *(_OWORD *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        v30[1] = v10;
        char v31 = *(unsigned char *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
        uint64_t v26 = v24;
        swift_retain();
        sub_1C127D768((uint64_t)v30, &v26, a3, a4, (unint64_t *)&v27);
        goto LABEL_9;
      case 2uLL:
        long long v11 = *(_OWORD *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        long long v28 = *(_OWORD *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        v29[0] = v11;
        *(_OWORD *)((char *)v29 + 10) = *(_OWORD *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x2A);
        uint64_t v26 = v24;
        swift_retain();
        sub_1C127D2A4((uint64_t)&v28, &v26, a3, a4, &v27);
LABEL_9:
        uint64_t v12 = v27;
        if ((~v27 & 0xF000000000000007) != 0)
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1C0EDFFB0(0, v8[2] + 1, 1, v8);
          }
          unint64_t v14 = v8[2];
          unint64_t v13 = v8[3];
          if (v14 >= v13 >> 1) {
            uint64_t v8 = sub_1C0EDFFB0((void *)(v13 > 1), v14 + 1, 1, v8);
          }
          void v8[2] = v14 + 1;
          v8[v14 + 4] = v12;
          sub_1C04455A4(v12);
        }
        swift_release();
        break;
      case 3uLL:
        uint64_t v15 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        int v16 = *(unsigned __int8 *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        int v17 = *(unsigned __int8 *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x19);
        int v18 = *(unsigned __int8 *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x1A);
        uint64_t v26 = v24;
        swift_retain();
        if (v17) {
          int v19 = 256;
        }
        else {
          int v19 = 0;
        }
        sub_1C127DB7C(v15, v19 | (v18 << 16) | v16, &v26, (uint64_t)a3, a4, (unint64_t *)&v27);
        uint64_t v20 = v27;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1C0EDFFB0(0, v8[2] + 1, 1, v8);
        }
        unint64_t v22 = v8[2];
        unint64_t v21 = v8[3];
        if (v22 >= v21 >> 1) {
          uint64_t v8 = sub_1C0EDFFB0((void *)(v21 > 1), v22 + 1, 1, v8);
        }
        void v8[2] = v22 + 1;
        v8[v22 + 4] = v20;
        swift_release();
        swift_release();
        break;
      default:
        break;
    }
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

Swift::String_optional __swiftcall SportsTaxonomyGraph.tagId(for:)(Swift::String a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  if (!*(void *)(v2 + 16)) {
    goto LABEL_7;
  }
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1BFEF2D8C(countAndFlagsBits, (uint64_t)object);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v9 = 0;
    long long v10 = 0;
    goto LABEL_8;
  }
  unint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
  swift_retain();
  swift_bridgeObjectRelease();
  switch(v7 >> 62)
  {
    case 1uLL:
    case 2uLL:
      uint64_t v8 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(void **)(v8 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      break;
    default:
      swift_release();
      goto LABEL_7;
  }
LABEL_8:
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  result.value._object = v12;
  result.value._uint64_t countAndFlagsBits = v11;
  return result;
}

Swift::String_optional __swiftcall SportsTaxonomyGraph.umcCanonicalId(for:)(Swift::String a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (!*(void *)(v2 + 16)) {
    goto LABEL_7;
  }
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1BFEF2D8C(countAndFlagsBits, (uint64_t)object);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v9 = 0;
    long long v10 = 0;
    goto LABEL_8;
  }
  unint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
  swift_retain();
  swift_bridgeObjectRelease();
  switch(v7 >> 62)
  {
    case 1uLL:
    case 2uLL:
      uint64_t v8 = *(void *)((v7 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v9 = *(void *)(v8 + 32);
      long long v10 = *(void **)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_release();
      break;
    default:
      swift_release();
      goto LABEL_7;
  }
LABEL_8:
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  result.value._object = v12;
  result.value._uint64_t countAndFlagsBits = v11;
  return result;
}

uint64_t SportsTaxonomyGraph.node(for:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 24);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_7;
  }
  uint64_t v7 = result;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(v7, a2);
  if ((v9 & 1) == 0)
  {
    Swift::String_optional result = swift_bridgeObjectRelease();
LABEL_7:
    *a3 = 0xF000000000000007;
    return result;
  }
  *a3 = *(void *)(*(void *)(v5 + 56) + 8 * v8);
  swift_retain();
  return swift_bridgeObjectRelease();
}

uint64_t SportsTaxonomyGraph.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraph.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1C127D2A4(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v11 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  char v12 = sub_1BFF896B4(v11, v10, a4);
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C15198DC();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB863FB8);
    sub_1C127DEF4(a1);
    unint64_t v14 = sub_1C15198AC();
    os_log_type_t v15 = sub_1C151F38C();
    if (os_log_type_enabled(v14, v15))
    {
      int v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v34[0] = v17;
      *(_DWORD *)int v16 = 136315138;
      swift_bridgeObjectRetain();
      v35[0] = sub_1BFDA76EC(v11, v10, v34);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      sub_1C127DF40(a1);
      _os_log_impl(&dword_1BFC31000, v14, v15, "Taxonomy graph contains loop. Node with tagId=%s is it's own ancestor. Ignoring descendent node.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v17, -1, -1);
      MEMORY[0x1C18C9B00](v16, -1, -1);
    }
    else
    {
      sub_1C127DF40(a1);
    }

    uint64_t v21 = 0xF000000000000007;
  }
  else
  {
    uint64_t v18 = *a3;
    if (*(void *)(*a3 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1BFEF2D8C(v11, v10);
      if (v20)
      {
        uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
        swift_retain();
        swift_bridgeObjectRelease();
        v34[0] = v21;
        v35[0] = v9;
        sub_1C0F47FBC(v35);
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C0D6B3B4(a1 + 16, (uint64_t)v35);
    __int16 v22 = *(_WORD *)(a1 + 40);
    type metadata accessor for SportsTaxonomyGraphEntityNode();
    uint64_t v33 = v9;
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 56) = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 64) = v24;
    *(void *)(v23 + 16) = v11;
    *(void *)(v23 + 24) = v10;
    sub_1C0D6B3B4((uint64_t)v35, v23 + 32);
    *(_WORD *)(v23 + 48) = v22;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    unint64_t v32 = v25 | 0x8000000000000000;
    sub_1BFFF7C50(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *(void *)(inited + 32) = v11;
    *(void *)(inited + 40) = v10;
    swift_bridgeObjectRetain_n();
    sub_1BFF59A8C((uint64_t)v35);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1BFFB9A98(inited, a4);
    swift_setDeallocating();
    uint64_t v21 = v32;
    swift_arrayDestroy();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34[0] = *a3;
    *a3 = 0x8000000000000000;
    sub_1C10655DC(v32, v11, v10, isUniquelyReferenced_nonNull_native);
    *a3 = v34[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34[0] = v33;
    type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
    swift_allocObject();
    swift_retain();
    sub_1C03EBEF8(v34);
    uint64_t v29 = swift_beginAccess();
    MEMORY[0x1C18C66D0](v29);
    if (*(void *)((*(void *)(v23 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v23 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1C151EC8C();
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
    uint64_t v30 = *(void *)(a1 + 32);
    v34[0] = v32;
    sub_1C127CD00(v30, v34, a3, v27);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1C1047660(v31);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_15:
  *a5 = v21;
}

void sub_1C127D768(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v9 = *a2;
  uint64_t v11 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  LOBYTE(a4) = sub_1BFF896B4(v11, v10, a4);
  swift_bridgeObjectRelease();
  if (a4)
  {
    if (qword_1EB863FD0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C15198DC();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB863FB8);
    sub_1C0D6B3B4(a1 + 16, (uint64_t)v26);
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v26);
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v26);
    uint64_t v13 = sub_1C15198AC();
    os_log_type_t v14 = sub_1C151F36C();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      v27[0] = v16;
      *(_DWORD *)os_log_type_t v15 = 136446210;
      swift_bridgeObjectRetain();
      sub_1BFDA76EC(v11, v10, v27);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      sub_1BFF5E6C8((uint64_t)v26);
      swift_bridgeObjectRelease();
      sub_1BFF5E6C8((uint64_t)v26);
      _os_log_impl(&dword_1BFC31000, v13, v14, "Taxonomy graph contains loop. Node with tagId=%{public}s is it's own ancestor. Ignoring descendent node.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v16, -1, -1);
      MEMORY[0x1C18C9B00](v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BFF5E6C8((uint64_t)v26);
      swift_bridgeObjectRelease();
      sub_1BFF5E6C8((uint64_t)v26);
    }

    unint64_t v20 = 0xF000000000000007;
  }
  else
  {
    uint64_t v17 = *a3;
    if (*(void *)(*a3 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_1BFEF2D8C(v11, v10);
      if (v19)
      {
        unint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
        swift_retain();
        swift_bridgeObjectRelease();
        v26[0] = v20;
        v27[0] = v9;
        sub_1C0F47FBC(v27);
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C0D6B3B4(a1 + 16, (uint64_t)v27);
    char v21 = *(unsigned char *)(a1 + 32);
    type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 56) = MEMORY[0x1E4FBC860];
    *(void *)(v22 + 16) = v11;
    *(void *)(v22 + 24) = v10;
    sub_1C0D6B3B4((uint64_t)v27, v22 + 32);
    *(unsigned char *)(v22 + 48) = v21;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    unint64_t v20 = v23 | 0x4000000000000000;
    swift_bridgeObjectRetain_n();
    sub_1BFF59A8C((uint64_t)v27);
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26[0] = *a3;
    *a3 = 0x8000000000000000;
    sub_1C10655DC(v20, v11, v10, isUniquelyReferenced_nonNull_native);
    *a3 = v26[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26[0] = v9;
    type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
    swift_allocObject();
    swift_retain();
    sub_1C03EBEF8(v26);
    uint64_t v25 = swift_beginAccess();
    MEMORY[0x1C18C66D0](v25);
    if (*(void *)((*(void *)(v22 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v22 + 56) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1C151EC8C();
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
    swift_release();
  }
LABEL_15:
  *a5 = v20;
}

uint64_t sub_1C127DB7C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  __int16 v8 = a2;
  uint64_t v10 = *a3;
  if ((a2 & 0x10000) != 0) {
    uint64_t v11 = 2;
  }
  else {
    uint64_t v11 = 1;
  }
  type metadata accessor for SportsTaxonomyGraphSectionNode();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 40) = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 48) = v13;
  *(unsigned char *)(v12 + 16) = v8 & 1;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = v11;
  *(unsigned char *)(v12 + 17) = HIBYTE(v8) & 1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  v20[0] = v10;
  type metadata accessor for SportsTaxonomyGraphNodeWeakReference();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1C03EBEF8(v20);
  uint64_t v15 = swift_beginAccess();
  MEMORY[0x1C18C66D0](v15);
  if (*(void *)((*(void *)(v12 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v12 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1C151EC8C();
  unint64_t v16 = v14 | 0xC000000000000000;
  sub_1C151ECEC();
  sub_1C151EBEC();
  swift_endAccess();
  v20[0] = v16;
  sub_1C127CD00(a1, v20, a4, a5);
  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_1C1047660(v17);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a6 = v16;
  return result;
}

uint64_t method lookup function for SportsTaxonomyGraph(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsTaxonomyGraph);
}

uint64_t sub_1C127DD60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C127DD98(void *a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  switch(*a1 >> 62)
  {
    case 1:
    case 2:
      uint64_t v5 = *(void *)((*a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v3 = *(void *)(v5 + 16);
      uint64_t v4 = *(void *)(v5 + 24);
      swift_bridgeObjectRetain();
      break;
    default:
      break;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      uint64_t v8 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v6 = *(void *)(v8 + 16);
      uint64_t v7 = *(void *)(v8 + 24);
      swift_bridgeObjectRetain();
      break;
    default:
      break;
  }
  if (v4)
  {
    if (v7)
    {
      if (v3 == v6 && v4 == v7)
      {
        swift_bridgeObjectRelease();
        char v9 = 1;
      }
      else
      {
        char v9 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v9 = 0;
    }
  }
  else
  {
    if (!v7)
    {
      char v9 = 1;
      return v9 & 1;
    }
    char v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1C127DEF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C127DF40(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraph.SportsTaxonomyGraphNodeHasher()
{
  return &type metadata for SportsTaxonomyGraph.SportsTaxonomyGraphNodeHasher;
}

unint64_t sub_1C127DF9C()
{
  unint64_t result = qword_1EB866988;
  if (!qword_1EB866988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866988);
  }
  return result;
}

uint64_t sub_1C127DFF0()
{
  uint64_t v1 = sub_1C151CCDC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1C151CCEC();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  char v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];

  swift_retain();
  sub_1C151709C();
  uint64_t result = swift_release();
  if (v19[8] == 1) {
    return sub_1C127F18C();
  }
  if (!*(void *)(*(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] + 16))
  {
    uint64_t v11 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner];
    uint64_t result = swift_beginAccess();
    if (!*(void *)v11)
    {
      sub_1C1282D90();
      uint64_t v13 = (uint64_t *)&v9[*(int *)(v12 + 48)];
      uint64_t v14 = &v9[*(int *)(v12 + 64)];
      sub_1C151A82C();
      uint64_t v15 = sub_1C151ABDC();
      uint64_t v16 = MEMORY[0x1E4FAC1C8];
      v13[3] = v15;
      v13[4] = v16;
      __swift_allocate_boxed_opaque_existential_0(v13);
      sub_1C151ABBC();
      uint64_t v17 = *MEMORY[0x1E4FAC3F0];
      uint64_t v18 = sub_1C151B06C();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v14, v17, v18);
      (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E4FAD868], v5);
      (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD880], v1);
      sub_1C151AB7C();
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

id sub_1C127E354()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1C151CCDC();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v31 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1C151CCEC();
  uint64_t v30 = *(void *)(v32 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v32).n128_u64[0];
  uint64_t v29 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37.receiver = v0;
  v37.super_class = ObjectType;
  unint64_t v35 = ObjectType;
  objc_msgSendSuper2(&v37, sel_viewDidLoad, v4);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    double v7 = result;
    id v8 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    sub_1BFE4DBE0();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C15847D0;
    uint64_t v10 = (void *)sub_1C151E5EC();
    uint64_t v11 = self;
    id v12 = objc_msgSend(v11, sel_systemImageNamed_, v10);

    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    uint64_t v14 = v0;
    id v15 = objc_msgSend(v13, sel_initWithImage_style_target_action_, v12, 0, v14, sel_runTests);

    *(void *)(v9 + 32) = v15;
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    *(void *)(v9 + 40) = sub_1C151F3BC();
    *(void *)(v9 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, *(void *)&v14[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel]);
    *(void *)(v9 + 56) = sub_1C151F3BC();
    uint64_t v16 = (void *)sub_1C151E5EC();
    id v17 = objc_msgSend(v11, sel_systemImageNamed_, v16);

    id v18 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    char v19 = v14;
    id v20 = objc_msgSend(v18, sel_initWithImage_style_target_action_, v17, 0, v19, sel_showTOCWithSender_);

    *(void *)(v9 + 64) = v20;
    uint64_t v36 = v9;
    sub_1C151EBEC();
    char v21 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setToolbarItems_, v21);

    uint64_t v22 = *(void **)&v19[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView];
    objc_msgSend(v22, sel_setDataSource_, v19);
    objc_msgSend(v22, sel_setDelegate_, v19);
    objc_msgSend(v22, sel_setAlwaysBounceVertical_, 1);
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v22, sel_setTableFooterView_, v23);

    type metadata accessor for SubtitleTableViewCell();
    sub_1C151F26C();
    type metadata accessor for LoadingTableViewCell();
    sub_1C151F26C();
    id result = objc_msgSend(v19, sel_view);
    if (result)
    {
      uint64_t v24 = result;
      objc_msgSend(result, sel_addSubview_, v22);

      sub_1C151AB8C();
      uint64_t v25 = v29;
      static CoverView.loading.getter(v29);
      uint64_t v27 = v33;
      uint64_t v26 = v34;
      long long v28 = v31;
      (*(void (**)(char *, void, uint64_t))(v33 + 104))(v31, *MEMORY[0x1E4FAD888], v34);
      sub_1C151AB7C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
      (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v25, v32);
      swift_retain();
      sub_1C15170BC();
      swift_release();
      sub_1C15170CC();
      swift_release();
      swift_retain();
      sub_1C15170BC();
      swift_release();
      sub_1C15170CC();
      swift_release();
      swift_retain();
      sub_1C15170BC();
      swift_release();
      sub_1C15170CC();
      swift_release();
      swift_retain();
      sub_1C15170BC();
      swift_release();
      sub_1C15170CC();
      swift_release();
      swift_retain();
      sub_1C15170BC();
      swift_release();
      sub_1C151708C();
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C127EA5C()
{
  return sub_1C127DFF0();
}

void sub_1C127EA80(char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  sub_1BFF9E8AC(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  double v4 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v5 = *v4;
  *(void *)(inited + 32) = *v4;
  id v33 = self;
  id v32 = v5;
  id v6 = objc_msgSend(v33, sel_systemFontOfSize_, 10.0);
  uint64_t v7 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v6;
  id v8 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v8;
  uint64_t v9 = self;
  id v10 = v8;
  uint64_t v11 = &selRef_systemGreenColor;
  int v31 = v2;
  if (!v2) {
    uint64_t v11 = &selRef_systemRedColor;
  }
  id v12 = [v9 *v11];
  uint64_t v13 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 80) = v12;
  sub_1BFF991DC(inited);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  id v15 = (void *)sub_1C151E5EC();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  uint64_t v16 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  uint64_t v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1527210;
  *(void *)(v18 + 32) = v32;
  id v19 = v32;
  *(void *)(v18 + 40) = objc_msgSend(v33, sel_systemFontOfSize_, 10.0);
  *(void *)(v18 + 64) = v7;
  *(void *)(v18 + 72) = v10;
  id v20 = self;
  id v21 = v10;
  id v22 = objc_msgSend(v20, sel_secondaryLabelColor);
  *(void *)(v18 + 104) = v13;
  *(void *)(v18 + 80) = v22;
  sub_1BFF991DC(v18);
  id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v24 = (void *)sub_1C151E5EC();
  uint64_t v25 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  objc_msgSend(v17, sel_appendAttributedString_, v26);
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel], sel_setAttributedText_, v17);
  id v27 = objc_msgSend(a1, sel_view);
  if (!v27)
  {
    __break(1u);
    goto LABEL_9;
  }
  long long v28 = v27;
  objc_msgSend(v27, sel_setNeedsLayout);

  id v29 = objc_msgSend(a1, sel_view);
  if (!v29)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v30 = v29;
  objc_msgSend(v29, sel_layoutIfNeeded);

  if (v31) {
    sub_1C127DFF0();
  }
}

uint64_t type metadata accessor for DebugFormatTestViewController()
{
  return self;
}

uint64_t sub_1C127F18C()
{
  uint64_t v1 = v0;
  int v2 = (int *)type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v2);
  double v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B43AD0(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DebugFormatEditorLayoutContext();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = MEMORY[0x1F4188790](v8).n128_u64[0];
  id v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);

  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView], sel_reloadData);
  uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor];
  swift_retain();
  sub_1C151894C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    id v14 = (uint64_t (*)(void))sub_1C0B43AD0;
    uint64_t v15 = (uint64_t)v7;
    return sub_1C1282C88(v15, v14);
  }
  sub_1C1282BD0((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
  uint64_t v16 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages];
  memcpy(v42, &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages], 0x150uLL);
  memcpy(v41, &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages], sizeof(v41));
  sub_1C09C3F4C((uint64_t)v42);
  unint64_t v17 = sub_1C142048C();
  if (v17 >> 62) {
    uint64_t v18 = sub_1C15204BC();
  }
  else {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1C09C51F8((uint64_t)v42);
  if (!v18)
  {
    id v14 = (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext;
    uint64_t v15 = (uint64_t)v12;
    return sub_1C1282C88(v15, v14);
  }
  uint64_t v38 = v16;
  id v19 = &v12[*(int *)(v8 + 20)];
  uint64_t v20 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v4, v19, v20);
  id v21 = &v4[v2[5]];
  uint64_t v22 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v12, v22);
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key;
  uint64_t v24 = v13 + v23 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 28);
  uint64_t v25 = *(void *)(v24 + v2[10]);
  sub_1C1282CE8(v24 + v2[6], (uint64_t)&v4[v2[6]], type metadata accessor for FeedLayoutSolverOptions);
  swift_retain();
  sub_1C15174BC();
  uint64_t v27 = v26;
  swift_retain();
  sub_1C151709C();
  swift_release();
  char v28 = v41[0];
  swift_retain();
  sub_1C151894C();
  swift_release();
  char v29 = v40[0];
  type metadata accessor for FormatLayoutSizeSnapshot();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1BFE9C5F8(MEMORY[0x1E4FBC860]);
  *(void *)&v4[v2[10]] = v25;
  *(void *)&v4[v2[7]] = 0;
  *(void *)&v4[v2[8]] = v27;
  v4[v2[9]] = v28;
  v4[v2[11]] = v29;
  *(void *)&v4[v2[12]] = v30;
  int v31 = &v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner];
  swift_beginAccess();
  if (*(void *)v31)
  {
    v41[0] = 1;
    swift_retain();
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    swift_release();
  }
  type metadata accessor for DebugFormatTestRunner();
  swift_allocObject();
  uint64_t v32 = swift_retain();
  *(void *)int v31 = sub_1C09C0294(v32);
  swift_release();
  swift_beginAccess();
  uint64_t v33 = *(void *)v31;
  uint64_t v34 = v38;
  if (v33)
  {
    swift_endAccess();
    memcpy(v40, v34, 0x150uLL);
    memcpy(v39, v34, sizeof(v39));
    uint64_t v35 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_1C09C3F4C((uint64_t)v40);
    swift_retain();
    sub_1C09C0564(v39, (uint64_t)v4, (uint64_t)sub_1C1282D88, v35);
    swift_release();
    swift_release();
    memcpy(v41, v39, sizeof(v41));
    sub_1C09C51F8((uint64_t)v41);
    sub_1C1282C88((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C1282C88((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
    return swift_release();
  }
  else
  {
    sub_1C1282C88((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    sub_1C1282C88((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DebugFormatEditorLayoutContext);
    return swift_endAccess();
  }
}

uint64_t sub_1C127F7DC()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner);
  swift_beginAccess();
  if (*v1)
  {
    swift_retain();
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    swift_release();
  }
  *uint64_t v1 = 0;
  return swift_release();
}

void sub_1C127F8C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151CCDC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1C151CCEC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1C18C9C60](a4 + 16);
  if (v16)
  {
    unint64_t v17 = (char *)v16;
    int v20 = a3;
    uint64_t v18 = (void *)(v16 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner);
    swift_beginAccess();
    if (!*v18) {
      goto LABEL_6;
    }
    if (*v18 != a1) {
      goto LABEL_6;
    }
    (*(void (**)(unsigned char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FAD860], v12);
    (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAD880], v8);
    sub_1C151AB7C();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    *(void *)&v17[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView], sel_reloadData);
    if (v20)
    {
      *uint64_t v18 = 0;

      swift_release();
    }
    else
    {
LABEL_6:
    }
  }
}

void sub_1C127FBA4(uint64_t a1)
{
  uint64_t v60 = a1;
  sub_1C0181BEC(0);
  v59[0] = v1;
  uint64_t v69 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (void *)((char *)v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF9E8AC(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  long long v62 = xmmword_1C1527210;
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v63 = (void *)inited;
  v59[1] = inited + 32;
  *(void *)&v78[0] = MEMORY[0x1E4FBC860];
  sub_1C05F62D0(0, 5, 0);
  uint64_t v5 = *(void *)&v78[0];
  id v73 = self;
  uint64_t v6 = 0;
  uint64_t v68 = (uint64_t)"r to create the layout";
  unint64_t v67 = (unint64_t)"v20@0:8B16";
  unint64_t v66 = (unint64_t)"RROR view for internal builds";
  unint64_t v65 = (unint64_t)" the layout was skipped";
  unint64_t v64 = (unint64_t)"ve a thumbnail image";
  do
  {
    uint64_t v7 = byte_1F1B8A440[v6 + 32];
    id v8 = sub_1C112C0C8(byte_1F1B8A440[v6 + 32]);
    id v9 = objc_msgSend(v73, sel_configurationWithPointSize_, 15.0, v59[0]);
    uint64_t v74 = (void (*)(uint64_t *, void, uint64_t, uint64_t))objc_msgSend(v8, sel_imageWithConfiguration_, v9);

    unint64_t v10 = 0xD000000000000024;
    unint64_t v11 = v68 | 0x8000000000000000;
    unint64_t v12 = 0xE700000000000000;
    uint64_t v13 = 0x73736563637553;
    uint64_t v14 = &selRef_systemGreenColor;
    switch(v7)
    {
      case 1:
        unint64_t v10 = 0xD000000000000057;
        unint64_t v11 = v66 | 0x8000000000000000;
        unint64_t v12 = 0xE400000000000000;
        uint64_t v14 = &selRef_systemGrayColor;
        uint64_t v13 = 1885956947;
        break;
      case 2:
        break;
      case 3:
        unint64_t v10 = 0xD000000000000056;
        unint64_t v11 = v65 | 0x8000000000000000;
        uint64_t v13 = 0x676E696E726157;
        uint64_t v14 = &selRef_systemYellowColor;
        break;
      case 4:
        unint64_t v10 = 0xD00000000000006DLL;
        unint64_t v11 = v64 | 0x8000000000000000;
        unint64_t v12 = 0xE500000000000000;
        uint64_t v13 = 0x726F727245;
        uint64_t v14 = &selRef_systemRedColor;
        break;
      default:
        unint64_t v10 = 0xD00000000000004BLL;
        unint64_t v11 = v67 | 0x8000000000000000;
        unint64_t v12 = 0xE800000000000000;
        uint64_t v13 = 0x64656C6261736944;
        uint64_t v14 = &selRef_systemGray2Color;
        break;
    }
    id v15 = [self *v14];
    uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
    unint64_t v17 = (uint64_t *)((char *)v3 + *(int *)(v16 + 24));
    *unint64_t v17 = v74;
    v17[1] = v15;
    uint64_t v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = *(void *)(v18 - 8);
    int v20 = *(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56);
    uint64_t v70 = v18;
    uint64_t v72 = v20;
    uint64_t v71 = v19 + 56;
    v20(v17, 0, 1, v18);
    *uint64_t v3 = v13;
    v3[1] = v12;
    v3[2] = v10;
    v3[3] = v11;
    id v21 = (char *)v3 + *(int *)(v16 + 28);
    *(void *)id v21 = 0;
    *((void *)v21 + 1) = 0;
    v21[16] = -1;
    uint64_t v74 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v74(v3, 0, 1, v16);
    *(void *)&v78[0] = v5;
    unint64_t v23 = *(void *)(v5 + 16);
    unint64_t v22 = *(void *)(v5 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1C05F62D0(v22 > 1, v23 + 1, 1);
      uint64_t v5 = *(void *)&v78[0];
    }
    ++v6;
    *(void *)(v5 + 16) = v23 + 1;
    unint64_t v24 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    uint64_t v25 = *(void *)(v69 + 72);
    sub_1C1282BD0((uint64_t)v3, v5 + v24 + v25 * v23, (uint64_t (*)(void))sub_1C0181BEC);
  }
  while (v6 != 5);
  sub_1C09BCFA4(0x7974697265766553, 0xE800000000000000, 0, 0, v5, v76);
  swift_release();
  uint64_t v26 = v63;
  v63[7] = &type metadata for FormatInspectionGroup;
  v26[8] = &off_1F1BDEC90;
  uint64_t v27 = swift_allocObject();
  v26[4] = v27;
  *(void *)(v27 + 48) = v77;
  long long v28 = v76[1];
  *(_OWORD *)(v27 + 16) = v76[0];
  *(_OWORD *)(v27 + 32) = v28;
  sub_1BFF9E8AC(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v62;
  char v29 = (void *)sub_1C151E5EC();
  uint64_t v30 = self;
  id v31 = objc_msgSend(v30, sel_systemImageNamed_, v29);

  if (!v31)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v32 = (uint64_t *)(v69 + v24);
  id v33 = objc_msgSend(v73, sel_configurationWithPointSize_, 15.0);
  id v34 = objc_msgSend(v31, sel_imageWithConfiguration_, v33);

  uint64_t v68 = self;
  id v35 = objc_msgSend((id)v68, sel_whiteColor);
  uint64_t v36 = (uint64_t *)((char *)v32 + *(int *)(v16 + 24));
  *uint64_t v36 = v34;
  v36[1] = v35;
  uint64_t v37 = v70;
  swift_storeEnumTagMultiPayload();
  v72(v36, 0, 1, v37);
  *uint64_t v32 = 0xD000000000000017;
  v32[1] = 0x80000001C163A1A0;
  v32[2] = 0xD00000000000003ALL;
  v32[3] = 0x80000001C163A1C0;
  uint64_t v38 = (char *)v32 + *(int *)(v16 + 28);
  *(void *)uint64_t v38 = 0;
  *((void *)v38 + 1) = 0;
  v38[16] = -1;
  v74(v32, 0, 1, v16);
  char v39 = (void *)sub_1C151E5EC();
  id v40 = objc_msgSend(v30, sel_systemImageNamed_, v39);

  if (!v40)
  {
LABEL_14:
    __break(1u);
    JUMPOUT(0x1C12806D0);
  }
  char v41 = (uint64_t *)((char *)v32 + v25);
  id v42 = objc_msgSend(v73, sel_configurationWithPointSize_, 15.0);
  id v43 = objc_msgSend(v40, sel_imageWithConfiguration_, v42);

  id v44 = objc_msgSend((id)v68, sel_whiteColor);
  uint64_t v45 = (uint64_t *)((char *)v32 + v25 + *(int *)(v16 + 24));
  *uint64_t v45 = v43;
  v45[1] = v44;
  swift_storeEnumTagMultiPayload();
  v72(v45, 0, 1, v37);
  *char v41 = 0xD00000000000001ALL;
  v41[1] = 0x80000001C163A200;
  v41[2] = 0xD000000000000044;
  v41[3] = 0x80000001C163A220;
  uint64_t v46 = (char *)v41 + *(int *)(v16 + 28);
  *(void *)uint64_t v46 = 0;
  *((void *)v46 + 1) = 0;
  v46[16] = -1;
  v74(v41, 0, 1, v16);
  sub_1C09BCFA4(0x736D657449, 0xE500000000000000, 0, 0, v69, v78);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v26[12] = &type metadata for FormatInspectionGroup;
  v26[13] = &off_1F1BDEC90;
  uint64_t v47 = swift_allocObject();
  v26[9] = v47;
  *(void *)(v47 + 48) = v79;
  long long v48 = v78[1];
  *(_OWORD *)(v47 + 16) = v78[0];
  *(_OWORD *)(v47 + 32) = v48;
  char v49 = sub_1C131B79C((uint64_t)v26);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  uint64_t v50 = *(void *)(v61 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
  swift_retain();
  uint64_t v51 = sub_1C131B4D4((uint64_t)v49);
  swift_bridgeObjectRelease();
  uint64_t v52 = (objc_class *)type metadata accessor for DebugFormatInspectorPaneViewController();
  BOOL v53 = objc_allocWithZone(v52);
  v53[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v53[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(void *)&v53[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v53[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
  uint64_t v54 = &v53[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *uint64_t v54 = 0;
  v54[1] = 0xE000000000000000;
  uint64_t v55 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  id v56 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  char v57 = v53;
  *(void *)&v53[v55] = objc_msgSend(v56, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v57[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(void *)&v57[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v50;
  *(void *)&v57[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v51;
  *(void *)&v57[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v51;
  *(void *)&v57[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
  swift_retain();
  swift_bridgeObjectRetain();

  v75.receiver = v57;
  v75.super_class = v52;
  id v58 = objc_msgSendSuper2(&v75, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v58, sel_setTitle_, 0);
  swift_release();
  sub_1C12806E4(v58, 0, v60);
}

id sub_1C12806E4(void *a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(a1, sel_setModalPresentationStyle_, 7);
  id v7 = objc_msgSend(a1, sel_popoverPresentationController);
  objc_msgSend(v7, sel_setBarButtonItem_, a3);

  id v8 = objc_msgSend(a1, sel_popoverPresentationController);
  objc_msgSend(v8, sel_setSourceView_, a2);

  id v9 = objc_msgSend(a1, sel_popoverPresentationController);
  if (v9)
  {
    unint64_t v10 = v9;
    objc_msgSend(v9, sel_setPermittedArrowDirections_, 4);
  }
  return objc_msgSend(v3, sel_presentViewController_animated_completion_, a1, 1, 0);
}

unint64_t sub_1C12808B8()
{
  uint64_t v1 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v108[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for DebugFormatTestSuiteResultItem();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  id v7 = &v108[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections);
  if (result >= *(void *)(v9 + 16))
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v10 = v9 + 40 * result;
  uint64_t v11 = *(void *)(v10 + 40);
  uint64_t v13 = *(void *)(v10 + 48);
  uint64_t v12 = *(void *)(v10 + 56);
  unsigned int v14 = *(unsigned __int8 *)(v10 + 64);
  if (v14 >> 6)
  {
    if (v14 >> 6 == 1)
    {
      uint64_t v113 = *(void *)(v10 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C151675C();
      if ((result & 0x8000000000000000) == 0)
      {
        if (result < *(void *)(v13 + 16))
        {
          sub_1C1282CE8(v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * result, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatTestSuiteResultItem);
          uint64_t v15 = type metadata accessor for DebugFormatTestSuiteScopeResult();
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v7, 1, v15) == 1)
          {
            type metadata accessor for LoadingTableViewCell();
            uint64_t v16 = (char *)sub_1C151F24C();
            objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView], sel_startAnimating);
            uint64_t v17 = v113;
            uint64_t v18 = v11;
            uint64_t v19 = v13;
            uint64_t v20 = v12;
            unsigned __int8 v21 = v14;
          }
          else
          {
            uint64_t v112 = v13;
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            unsigned int v109 = v14;
            if (EnumCaseMultiPayload != 1)
            {
              sub_1C1282BD0((uint64_t)v7, (uint64_t)v3, type metadata accessor for DebugFormatTestCaseResult);
              type metadata accessor for SubtitleTableViewCell();
              uint64_t v16 = (char *)sub_1C151F24C();
              id v77 = objc_msgSend(v16, sel_textLabel);
              if (v77)
              {
                uint64_t v78 = v77;
                objc_msgSend(v77, sel_setNumberOfLines_, 0);
              }
              id v79 = objc_msgSend(v16, sel_textLabel);
              if (v79)
              {
                uint64_t v80 = v79;
                id v81 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
                objc_msgSend(v80, sel_setFont_, v81);
              }
              id v82 = objc_msgSend(v16, sel_detailTextLabel);
              if (v82)
              {
                uint64_t v83 = v82;
                objc_msgSend(v82, sel_setNumberOfLines_, 0);
              }
              id v84 = objc_msgSend(v16, sel_detailTextLabel);
              if (v84)
              {
                uint64_t v85 = v84;
                id v86 = objc_msgSend(self, sel_secondaryLabelColor);
                objc_msgSend(v85, sel_setTextColor_, v86);
              }
              id v87 = objc_msgSend(v16, sel_detailTextLabel);
              if (v87)
              {
                uint64_t v88 = v87;
                id v89 = objc_msgSend(self, sel_systemFontOfSize_, 12.0);
                objc_msgSend(v88, sel_setFont_, v89);
              }
              objc_msgSend(v16, sel_setAccessoryType_, 1);
              id v90 = objc_msgSend(v16, sel_textLabel);
              if (v90)
              {
                char v91 = v90;
                uint64_t v92 = swift_bridgeObjectRetain();
                sub_1C0982304(v92);
                uint64_t v94 = v93;
                swift_bridgeObjectRelease();
                objc_msgSend(v91, sel_setAttributedText_, v94);
              }
              id v95 = objc_msgSend(v16, sel_detailTextLabel);
              if (v95)
              {
                uint64_t v96 = v95;
                sub_1C01CDB50();
                uint64_t v97 = (void *)sub_1C151E5EC();
                swift_bridgeObjectRelease();
                objc_msgSend(v96, sel_setText_, v97);
              }
              id v98 = objc_msgSend(v16, sel_imageView);
              if (v98)
              {
                uint64_t v99 = v98;
                char v100 = sub_1C01CE1A4();
                id v101 = sub_1C112C0C8(v100);
                id v102 = objc_msgSend(self, sel_configurationWithPointSize_, 15.0);
                id v103 = objc_msgSend(v101, sel_imageWithConfiguration_, v102);

                objc_msgSend(v99, sel_setImage_, v103);
              }
              id v104 = objc_msgSend(v16, sel_imageView);
              if (v104)
              {
                uint64_t v105 = v104;
                char v106 = sub_1C01CE1A4();
                id v107 = sub_1C112C2C4(v106);
                objc_msgSend(v105, sel_setTintColor_, v107);
              }
              sub_1C1282B38(v113, v11, v112, v12, v109);
              sub_1C1282C88((uint64_t)v3, type metadata accessor for DebugFormatTestCaseResult);
              return (unint64_t)v16;
            }
            uint64_t v47 = *(void *)v7;
            LODWORD(v111) = v7[16];
            long long v48 = (void *)*((void *)v7 + 3);
            uint64_t v110 = *((void *)v7 + 5);
            type metadata accessor for SubtitleTableViewCell();
            uint64_t v16 = (char *)sub_1C151F24C();
            id v49 = objc_msgSend(v16, sel_textLabel);
            if (v49)
            {
              uint64_t v50 = v49;
              objc_msgSend(v49, sel_setNumberOfLines_, 0);
            }
            id v51 = objc_msgSend(v16, sel_textLabel);
            if (v51)
            {
              uint64_t v52 = v51;
              id v53 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
              objc_msgSend(v52, sel_setFont_, v53);
            }
            id v54 = objc_msgSend(v16, sel_detailTextLabel);
            if (v54)
            {
              uint64_t v55 = v54;
              objc_msgSend(v54, sel_setNumberOfLines_, 0);
            }
            id v56 = objc_msgSend(v16, sel_detailTextLabel);
            if (v56)
            {
              char v57 = v56;
              id v58 = objc_msgSend(self, sel_secondaryLabelColor);
              objc_msgSend(v57, sel_setTextColor_, v58);
            }
            id v59 = objc_msgSend(v16, sel_detailTextLabel);
            if (v59)
            {
              uint64_t v60 = v59;
              id v61 = objc_msgSend(self, sel_systemFontOfSize_, 12.0);
              objc_msgSend(v60, sel_setFont_, v61);
            }
            objc_msgSend(v16, sel_setAccessoryType_, 1);
            id v62 = objc_msgSend(v16, sel_textLabel);
            if (v62)
            {
              uint64_t v63 = v62;
              sub_1C0982304(v47);
              unint64_t v65 = v64;
              objc_msgSend(v63, sel_setAttributedText_, v64);
            }
            id v66 = objc_msgSend(v16, sel_detailTextLabel);
            uint64_t v67 = v112;
            if (v66)
            {
              uint64_t v68 = v66;
              objc_msgSend(v66, sel_setAttributedText_, v48);
            }
            id v69 = objc_msgSend(v16, sel_imageView);
            if (v69)
            {
              uint64_t v70 = v69;
              id v71 = sub_1C112C0C8(v111);
              id v72 = objc_msgSend(self, sel_configurationWithPointSize_, 15.0);
              id v73 = objc_msgSend(v71, sel_imageWithConfiguration_, v72);

              uint64_t v67 = v112;
              objc_msgSend(v70, sel_setImage_, v73);
            }
            id v74 = objc_msgSend(v16, sel_imageView);
            if (v74)
            {
              objc_super v75 = v74;
              id v76 = sub_1C112C2C4(v111);
              objc_msgSend(v75, sel_setTintColor_, v76);
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v17 = v113;
            uint64_t v18 = v11;
            uint64_t v19 = v67;
            uint64_t v20 = v12;
            unsigned __int8 v21 = v109;
          }
          goto LABEL_69;
        }
        goto LABEL_74;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    type metadata accessor for LoadingTableViewCell();
    uint64_t v16 = (char *)sub_1C151F24C();
    objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView], sel_startAnimating);
    return (unint64_t)v16;
  }
  uint64_t v22 = *(void *)(v10 + 32);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (result < *(void *)(v22 + 16))
  {
    uint64_t v111 = v11;
    uint64_t v112 = v12;
    uint64_t v23 = v13;
    uint64_t v113 = v22;
    uint64_t v110 = *(void *)(v22 + 32 * result + 48);
    type metadata accessor for SubtitleTableViewCell();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = (char *)sub_1C151F24C();
    id v24 = objc_msgSend(v16, sel_textLabel);
    if (v24)
    {
      uint64_t v25 = v24;
      objc_msgSend(v24, sel_setNumberOfLines_, 0);
    }
    id v26 = objc_msgSend(v16, sel_textLabel);
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = objc_msgSend(self, sel_systemFontOfSize_, 15.0);
      objc_msgSend(v27, sel_setFont_, v28);
    }
    id v29 = objc_msgSend(v16, sel_detailTextLabel);
    if (v29)
    {
      uint64_t v30 = v29;
      objc_msgSend(v29, sel_setNumberOfLines_, 0);
    }
    id v31 = objc_msgSend(v16, sel_detailTextLabel);
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = objc_msgSend(self, sel_secondaryLabelColor);
      objc_msgSend(v32, sel_setTextColor_, v33);
    }
    id v34 = objc_msgSend(v16, sel_detailTextLabel);
    if (v34)
    {
      id v35 = v34;
      id v36 = objc_msgSend(self, sel_systemFontOfSize_, 12.0);
      objc_msgSend(v35, sel_setFont_, v36);
    }
    objc_msgSend(v16, sel_setAccessoryType_, 0);
    id v37 = objc_msgSend(v16, sel_textLabel);
    if (v37)
    {
      uint64_t v38 = v37;
      char v39 = (void *)sub_1C151E5EC();
      objc_msgSend(v38, sel_setText_, v39);
    }
    id v40 = objc_msgSend(v16, sel_detailTextLabel);
    if (v40)
    {
      char v41 = v40;
      id v42 = (void *)sub_1C151E5EC();
      objc_msgSend(v41, sel_setText_, v42);
    }
    id v43 = objc_msgSend(v16, sel_imageView);
    uint64_t v44 = v111;
    if (!v43)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = v112;
      uint64_t v17 = v113;
      uint64_t v18 = v44;
      uint64_t v19 = v23;
      unsigned __int8 v21 = v14;
LABEL_69:
      sub_1C1282B38(v17, v18, v19, v20, v21);
      return (unint64_t)v16;
    }
    uint64_t v45 = v43;
    objc_msgSend(v43, sel_setImage_, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C1282B38(v113, v44, v23, v112, v14);

    return (unint64_t)v16;
  }
LABEL_76:
  __break(1u);
  return result;
}

unint64_t sub_1C12818F4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DebugFormatTestCaseResult(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v92 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DebugFormatTestSuiteResultItem();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)sub_1C151670C();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v16, 1);

  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections);
  if (result >= *(void *)(v18 + 16))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v93 = a1;
  uint64_t v19 = v18 + 40 * result;
  unsigned __int8 v20 = *(unsigned char *)(v19 + 64);
  if ((v20 & 0xC0) != 0x40) {
    return result;
  }
  uint64_t v88 = v2;
  uint64_t v21 = *(void *)(v19 + 40);
  uint64_t v89 = *(void *)(v19 + 32);
  uint64_t v22 = *(void *)(v19 + 48);
  uint64_t v91 = *(void *)(v19 + 56);
  uint64_t v90 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_30;
  }
  if (result >= *(void *)(v22 + 16))
  {
LABEL_31:
    __break(1u);
    return result;
  }
  sub_1C1282CE8(v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * result, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DebugFormatTestSuiteResultItem);
  uint64_t v23 = type metadata accessor for DebugFormatTestSuiteScopeResult();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v15, 1, v23) == 1) {
    return sub_1C1282B38(v89, v90, v22, v91, v20);
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = *(void *)v15;
    uint64_t v25 = *((void *)v15 + 1);
    char v26 = v15[16];
    uint64_t v27 = (void *)*((void *)v15 + 3);
    char v28 = v15[32];
    uint64_t v29 = *((void *)v15 + 5);
    uint64_t v30 = *(void *)(v88 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
    *(void *)&long long v97 = v24;
    *((void *)&v97 + 1) = v25;
    LOBYTE(v98) = v26;
    *((void *)&v98 + 1) = v27;
    LOBYTE(v99) = v28;
    uint64_t v100 = v29;
    id v31 = objc_allocWithZone((Class)type metadata accessor for DebugFormatTestCaseMultiResultViewController());
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v32 = v27;
    swift_bridgeObjectRetain();
    id v33 = sub_1C0AC7184(v30, (uint64_t *)&v97);
    id v34 = (void *)sub_1C151670C();
    id v35 = objc_msgSend(v93, sel_cellForRowAtIndexPath_, v34);

    sub_1C12806E4(v33, (uint64_t)v35, 0);
    sub_1C1282B38(v89, v90, v22, v91, v20);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = v92;
    sub_1C1282BD0((uint64_t)v15, v92, type metadata accessor for DebugFormatTestCaseResult);
    sub_1C1282CE8(v36 + *(int *)(v10 + 24), (uint64_t)v6, type metadata accessor for DebugFormatTestCaseResult.Result);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload >= 2)
    {
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v43 = *((void *)v6 + 37);
        uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E8AC(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        long long v87 = xmmword_1C1529AE0;
        *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
        Class v86 = (Class)(inited + 32);
        sub_1BFF9E8AC(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v44);
        sub_1C0181BEC(0);
        unint64_t v47 = (*(unsigned __int8 *)(*(void *)(v46 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v46 - 8) + 80);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = v87;
        id v49 = (void *)(v48 + v47);
        *(void *)&long long v97 = 0;
        *((void *)&v97 + 1) = 0xE000000000000000;
        *(void *)&long long v87 = v43;
        uint64_t v96 = v43;
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        sub_1C152036C();
        uint64_t v50 = HIBYTE(*((void *)&v97 + 1)) & 0xFLL;
        if ((*((void *)&v97 + 1) & 0x2000000000000000) == 0) {
          uint64_t v50 = v97 & 0xFFFFFFFFFFFFLL;
        }
        if (v50)
        {
          *((void *)&v98 + 1) = MEMORY[0x1E4FBB1A0];
        }
        else
        {
          swift_bridgeObjectRelease();
          long long v97 = 0u;
          long long v98 = 0u;
        }
        sub_1C042F9B0(0, 0xE000000000000000, (uint64_t)&v97, v49);
        uint64_t v59 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v49, 0, 1, v59);
        sub_1C09BCFA4(0x72724520646E6942, 0xEA0000000000726FLL, 0, 0, v48, &v97);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(inited + 64) = &off_1F1BDEC90;
        uint64_t v60 = swift_allocObject();
        *(void *)(inited + 32) = v60;
        *(void *)(v60 + 48) = v99;
        long long v61 = v98;
        *(_OWORD *)(v60 + 16) = v97;
        *(_OWORD *)(v60 + 32) = v61;
        id v62 = sub_1C131B79C(inited);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        uint64_t v63 = *(void *)(v88 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
        swift_retain();
        uint64_t v64 = sub_1C131B4D4((uint64_t)v62);
        swift_bridgeObjectRelease();
        Class v86 = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
        unint64_t v65 = objc_allocWithZone(v86);
        v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
        v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
        *(void *)&v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
        *(_OWORD *)&v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
        id v66 = &v65[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
        *id v66 = 0;
        v66[1] = 0xE000000000000000;
        uint64_t v67 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
        id v68 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
        id v69 = v65;
        *(void *)&v65[v67] = objc_msgSend(v68, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
        *(void *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
        *(void *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v63;
        *(void *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v64;
        *(void *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v64;
        *(void *)&v69[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
        swift_retain();
        swift_bridgeObjectRetain();

        v94.receiver = v69;
        v94.super_class = v86;
        id v70 = objc_msgSendSuper2(&v94, sel_initWithNibName_bundle_, 0, 0);
        objc_msgSend(v70, sel_setTitle_, 0);
        swift_release();
        id v71 = (void *)sub_1C151670C();
        id v72 = objc_msgSend(v93, sel_cellForRowAtIndexPath_, v71);
      }
      else
      {
        uint64_t v51 = *((void *)v6 + 37);
        uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E8AC(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v53 = swift_initStackObject();
        long long v87 = xmmword_1C1529AE0;
        *(_OWORD *)(v53 + 16) = xmmword_1C1529AE0;
        Class v86 = (Class)(v53 + 32);
        sub_1BFF9E8AC(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v52);
        sub_1C0181BEC(0);
        unint64_t v55 = (*(unsigned __int8 *)(*(void *)(v54 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v54 - 8) + 80);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = v87;
        char v57 = (void *)(v56 + v55);
        *(void *)&long long v97 = 0;
        *((void *)&v97 + 1) = 0xE000000000000000;
        *(void *)&long long v87 = v51;
        uint64_t v96 = v51;
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        sub_1C152036C();
        uint64_t v58 = HIBYTE(*((void *)&v97 + 1)) & 0xFLL;
        if ((*((void *)&v97 + 1) & 0x2000000000000000) == 0) {
          uint64_t v58 = v97 & 0xFFFFFFFFFFFFLL;
        }
        if (v58)
        {
          *((void *)&v98 + 1) = MEMORY[0x1E4FBB1A0];
        }
        else
        {
          swift_bridgeObjectRelease();
          long long v97 = 0u;
          long long v98 = 0u;
        }
        sub_1C042F9B0(0, 0xE000000000000000, (uint64_t)&v97, v57);
        uint64_t v73 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v57, 0, 1, v73);
        sub_1C09BCFA4(0x2064696C61766E49, 0xEE0074756F79614CLL, 0, 0, v56, &v97);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v53 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v53 + 64) = &off_1F1BDEC90;
        uint64_t v74 = swift_allocObject();
        *(void *)(v53 + 32) = v74;
        *(void *)(v74 + 48) = v99;
        long long v75 = v98;
        *(_OWORD *)(v74 + 16) = v97;
        *(_OWORD *)(v74 + 32) = v75;
        id v76 = sub_1C131B79C(v53);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        uint64_t v77 = *(void *)(v88 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor);
        swift_retain();
        uint64_t v78 = sub_1C131B4D4((uint64_t)v76);
        swift_bridgeObjectRelease();
        Class v86 = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
        id v79 = objc_allocWithZone(v86);
        v79[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
        v79[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
        *(void *)&v79[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
        *(_OWORD *)&v79[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1C1584820;
        uint64_t v80 = &v79[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
        *uint64_t v80 = 0;
        v80[1] = 0xE000000000000000;
        uint64_t v81 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
        id v82 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
        uint64_t v83 = v79;
        *(void *)&v79[v81] = objc_msgSend(v82, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
        *(void *)&v83[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
        *(void *)&v83[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = v77;
        *(void *)&v83[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = v78;
        *(void *)&v83[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = v78;
        *(void *)&v83[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = 0;
        swift_retain();
        swift_bridgeObjectRetain();

        v95.receiver = v83;
        v95.super_class = v86;
        id v70 = objc_msgSendSuper2(&v95, sel_initWithNibName_bundle_, 0, 0);
        objc_msgSend(v70, sel_setTitle_, 0);
        swift_release();
        id v71 = (void *)sub_1C151670C();
        id v72 = objc_msgSend(v93, sel_cellForRowAtIndexPath_, v71);
      }
      id v84 = v72;

      sub_1C12806E4(v70, (uint64_t)v84, 0);
      sub_1C1282B38(v89, v90, v22, v91, v20);
      sub_1C1282C88(v92, type metadata accessor for DebugFormatTestCaseResult);
      return sub_1BFFD07D8((uint64_t)v6);
    }
    else
    {
      sub_1C1282BD0((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
      id v38 = objc_allocWithZone((Class)type metadata accessor for DebugFormatTestCasePreviewNavigationController());
      uint64_t v39 = swift_retain();
      id v40 = sub_1C14B7420(v39, (uint64_t)v9);
      char v41 = (void *)sub_1C151670C();
      id v42 = objc_msgSend(v93, sel_cellForRowAtIndexPath_, v41);

      sub_1C12806E4(v40, (uint64_t)v42, 0);
      sub_1C1282B38(v89, v90, v22, v91, v20);
      return sub_1C1282C88(v36, type metadata accessor for DebugFormatTestCaseResult);
    }
  }
}

uint64_t sub_1C12828FC()
{
  return 0x7374736554;
}

id sub_1C1282910()
{
  uint64_t v0 = (void *)sub_1C151E5EC();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  return v1;
}

id sub_1C1282988(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages;
  uint64_t v5 = qword_1EA194C50;
  uint64_t v6 = v1;
  if (v5 != -1) {
    swift_once();
  }
  memcpy(__dst, &byte_1EA2B5418, sizeof(__dst));
  memmove(&v6[v4], &byte_1EA2B5418, 0x150uLL);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView;
  id v8 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  sub_1C09C3F4C((uint64_t)__dst);
  *(void *)&v6[v7] = objc_msgSend(v8, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = MEMORY[0x1E4FBC860];
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner] = 0;
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  *(void *)&v6[v9] = sub_1C151AB9C();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel;
  *(void *)&v6[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v6[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_editor] = a1;
  swift_retain();

  v12.receiver = v6;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1C1282B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >> 6)
  {
    if (a5 >> 6 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1282B88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1282BD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1282C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >> 6)
  {
    if (a5 >> 6 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1282C88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1282CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1282D50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C1282D88(uint64_t a1, uint64_t a2, int a3)
{
  sub_1C127F8C0(a1, a2, a3, v3);
}

void sub_1C1282D90()
{
  if (!qword_1EA1AD9C0)
  {
    sub_1C151A83C();
    sub_1BFC845BC(255, &qword_1EA1AD9C8);
    sub_1C151B06C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA1AD9C0);
    }
  }
}

void sub_1C1282E2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages;
  if (qword_1EA194C50 != -1) {
    swift_once();
  }
  memcpy(__dst, &byte_1EA2B5418, sizeof(__dst));
  memmove(&v1[v2], &byte_1EA2B5418, 0x150uLL);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_tableView;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  sub_1C09C3F4C((uint64_t)__dst);
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_sections] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_runner] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_coverViewManager;
  sub_1C151ABAC();
  swift_allocObject();
  *(void *)&v1[v5] = sub_1C151AB9C();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_toolbarLabel;
  *(void *)&v1[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

uint64_t EngagementBannerViewRenderer.render(for:with:in:)(int a1, double *a2, char *a3)
{
  double v5 = a2[4];
  double v6 = a2[5];
  double v7 = a2[6];
  double v8 = a2[7];
  objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
  uint64_t v9 = (id *)&a3[OBJC_IVAR____TtC8NewsFeed20EngagementBannerView_engagementView];
  swift_beginAccess();
  if (*v9)
  {
    objc_msgSend(*v9, sel_setFrame_, v5, v6, v7, v8);
    if (*v9)
    {
      id v10 = *v9;
      v14.origin.x = v5;
      v14.origin.y = v6;
      v14.size.width = v7;
      v14.size.height = v8;
      objc_msgSend(v10, sel_setHidden_, CGRectGetHeight(v14) == 0.0);
    }
  }
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  type metadata accessor for FeedEngagementBanner();
  unint64_t v11 = sub_1C151955C();
  sub_1C0BAAE20(a3, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t EngagementBannerViewRenderer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t EngagementBannerViewRenderer.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C1283150(int a1, double *a2, char *a3)
{
  return EngagementBannerViewRenderer.render(for:with:in:)(a1, a2, a3);
}

uint64_t dispatch thunk of EngagementBannerViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for EngagementBannerViewRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EngagementBannerViewRenderer);
}

uint64_t FeedItemRendererPipelineProcessor.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  sub_1C0090C38(v0 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions, &qword_1EB894688, MEMORY[0x1E4FAC150]);
  return v0;
}

uint64_t FeedItemRendererPipelineProcessor.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  sub_1C0090C38(v0 + OBJC_IVAR____TtC8NewsFeed33FeedItemRendererPipelineProcessor_lastRendererOptions, &qword_1EB894688, MEMORY[0x1E4FAC150]);
  return swift_deallocClassInstance();
}

uint64_t (*FeedItemRendererPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))(void)
{
  return sub_1BFE47F1C(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1C12832EC()
{
  uint64_t v0 = sub_1C151A9BC();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  id v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  double v7 = (char *)&v46 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v46 - v8;
  sub_1C151B50C();
  char v10 = sub_1C151A99C();
  unint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v9, v0);
  sub_1C151B50C();
  if (v10)
  {
    sub_1C151A9AC();
    CGFloat y = v13;
    CGFloat x = v12;
    v11(v9, v0);
    sub_1C151B50C();
    sub_1C151A97C();
    v11(v7, v0);
    sub_1C151B50C();
    sub_1C151A96C();
    v11(v4, v0);
    return sub_1C151BCCC();
  }
  else
  {
    sub_1C151A97C();
    CGFloat y = v16;
    CGFloat x = v15;
    v11(v9, v0);
    sub_1C151B50C();
    sub_1C151A96C();
    v11(v7, v0);
    uint64_t v17 = sub_1C151BCCC();
    unint64_t v18 = MEMORY[0x1E4FBC860];
    if (v17) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    sub_1C151B50C();
    sub_1C151A9AC();
    CGFloat x = v20;
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    v11(v9, v0);
    sub_1C151B50C();
    sub_1C151A9AC();
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;
    v11(v7, v0);
    v50.origin.CGFloat x = v28;
    v50.origin.CGFloat y = v30;
    v50.size.width = v32;
    v50.size.height = v34;
    CGFloat v35 = -CGRectGetWidth(v50);
    sub_1C151B50C();
    sub_1C151A9AC();
    CGFloat v37 = v36;
    CGFloat v39 = v38;
    CGFloat v41 = v40;
    CGFloat v43 = v42;
    v11(v7, v0);
    v51.origin.CGFloat x = v37;
    v51.origin.CGFloat y = v39;
    v51.size.width = v41;
    v51.size.height = v43;
    CGFloat v44 = -CGRectGetHeight(v51);
    v52.origin.CGFloat x = x;
    v52.origin.CGFloat y = v22;
    v52.size.width = v24;
    v52.size.height = v26;
    CGRect v53 = CGRectInset(v52, v35, v44);
    CGFloat y = v53.origin.y;
    CGFloat x = v53.origin.x;
    sub_1C151B50C();
    sub_1C151A97C();
    v11(v9, v0);
    sub_1C151B50C();
    sub_1C151A96C();
    v11(v7, v0);
    unint64_t v45 = sub_1C151BCCC();
    if (!v45) {
      unint64_t v45 = v18;
    }
    uint64_t v49 = v19;
    sub_1BFE4F24C(v45);
    return v49;
  }
}

void sub_1C1283758(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1BFE4D370(a2, (uint64_t)&v12);
  if (!v13)
  {
    sub_1BFE4D174((uint64_t)&v12, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0, MEMORY[0x1E4FACD60]);
    return;
  }
  sub_1BFC773DC(&v12, (uint64_t)v14);
  char v5 = *(unsigned char *)(v2
                + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_isLiveResizing);
  sub_1BFC66384((uint64_t)v14, (uint64_t)&v12);
  if (v5)
  {
    __swift_project_boxed_opaque_existential_1(&v12, v13);
    char v6 = ProcessedImageRequestType.isDownloaded.getter();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    if (v6)
    {
      dispatch_group_enter(*(dispatch_group_t *)(v3
                                               + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup));
      char v7 = 1;
      goto LABEL_8;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  char v7 = 0;
LABEL_8:
  uint64_t v8 = *(void *)(v3
                 + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3
              + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_prewarmedRequestCount) = v10;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v11 = swift_allocObject();
    *(unsigned char *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v3;
    swift_retain();
    sub_1C151A51C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
}

uint64_t sub_1C12838F4()
{
  sub_1C0358E80(v0+ OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_imageRequestOptions);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC8NewsFeed33FeedItemRendererPipelineProcessorP33_D1D725D6BA23D5C832E553645D2883FA7Context_loadingGroup));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C1283988()
{
  return type metadata accessor for FeedItemRendererPipelineProcessor(0);
}

uint64_t method lookup function for FeedItemRendererPipelineProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedItemRendererPipelineProcessor);
}

uint64_t sub_1C12839A8()
{
  return type metadata accessor for FeedItemRendererPipelineProcessor.Context(0);
}

uint64_t sub_1C12839B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C151677C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12839F4()
{
  swift_release();
  return swift_deallocObject();
}

id TagActivityItemsConfiguration.__allocating_init(tag:)(void *a1)
{
  swift_getObjectType();
  return sub_1C1283FAC(a1, v1);
}

id TagActivityItemsConfiguration.init(tag:)(void *a1)
{
  swift_getObjectType();
  return sub_1C1283FF4(a1, v1);
}

id TagActivityItemsConfiguration.__allocating_init(objects:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_1BFC9DBE8(0, &qword_1EA19A1F0);
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id TagActivityItemsConfiguration.init(objects:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1BFC9DBE8(0, &qword_1EA19A1F0);
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id TagActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_1C036AFB4();
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

id TagActivityItemsConfiguration.init(itemProviders:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C036AFB4();
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

id TagActivityItemsConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C1283E7C(uint64_t a1@<X0>, Class *a2@<X1>, SEL *a3@<X2>, void *a4@<X8>)
{
  id v8 = objc_allocWithZone((Class)type metadata accessor for TagImageShareAttributeProvider());
  swift_unknownObjectRetain();
  id v9 = objc_msgSend(v8, sel_init);
  id v10 = objc_msgSend(objc_allocWithZone(*a2), *a3, a1, v9);
  swift_unknownObjectRelease();

  *a4 = v10;
}

void sub_1C1283F10(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for TagImageShareAttributeProvider());
  swift_unknownObjectRetain();
  id v5 = objc_msgSend(v4, sel_init);
  char v6 = (void *)_s8NewsFeed30TagImageShareAttributeProviderC05shareD03forSo7UIImageCSo14FCTagProviding_p_tF_0(a1);

  id v7 = objc_msgSend(objc_allocWithZone((Class)NETagLinkPresentationSource), sel_initWithTag_image_, a1, v6);
  swift_unknownObjectRelease();

  *a2 = v7;
}

id sub_1C1283FAC(void *a1, Class a2)
{
  id v3 = objc_allocWithZone(a2);
  return sub_1C1283FF4(a1, v3);
}

id sub_1C1283FF4(void *a1, void *a2)
{
  sub_1BFE4DBE0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C15320F0;
  id v5 = (objc_class *)type metadata accessor for SharingTagTextActivityItemSource();
  *(void *)(v4 + 32) = sub_1C1304A3C(a1, v5);
  char v6 = (objc_class *)type metadata accessor for SharingTagURLActivityItemSource();
  id v7 = (void *)swift_unknownObjectRetain();
  uint64_t v8 = sub_1C1284134(v7);
  *(void *)(v4 + 40) = sub_1C0C188F0((uint64_t)a1, v8, v6);
  sub_1C151EBEC();
  sub_1BFC9DBE8(0, (unint64_t *)&unk_1EA1A32A0);
  id v9 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a2, sel_initNAWithActivityItemSources_, v9);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t type metadata accessor for TagActivityItemsConfiguration()
{
  return self;
}

uint64_t sub_1C1284134(void *a1)
{
  uint64_t v2 = sub_1C151804C();
  id v3 = objc_msgSend(a1, sel_asSportsEvent, MEMORY[0x1F4188790](v2).n128_f64[0]);
  if (v3
    || (id v3 = objc_msgSend(a1, sel_asSports)) != 0
    || (id v3 = objc_msgSend(a1, sel_asPuzzleType)) != 0)
  {
    *(void *)(swift_allocObject() + 16) = v3;
    sub_1BFDA5B64((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFDA5D04();
    sub_1BFDA5B64((unint64_t *)&qword_1EB879C40, (void (*)(uint64_t))sub_1BFDA5D04);
    swift_unknownObjectRetain();
    sub_1C151FFBC();
    sub_1C097AA34();
    swift_allocObject();
    uint64_t v4 = sub_1C1518D1C();
    swift_unknownObjectRelease();
  }
  else
  {
    *(void *)(swift_allocObject() + 16) = a1;
    sub_1BFDA5B64((unint64_t *)&qword_1EB8713E0, MEMORY[0x1E4FAA910]);
    sub_1BFDA5D04();
    sub_1BFDA5B64((unint64_t *)&qword_1EB879C40, (void (*)(uint64_t))sub_1BFDA5D04);
    swift_unknownObjectRetain();
    sub_1C151FFBC();
    sub_1C097AA34();
    swift_allocObject();
    return sub_1C1518D1C();
  }
  return v4;
}

uint64_t sub_1C1284620()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C1284658(void *a1@<X8>)
{
  sub_1C1283F10(*(void **)(v1 + 16), a1);
}

id sub_1C1284660@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)NEPuzzleTagLinkPresentationSource), sel_initWithPuzzleTag_, *(void *)(v1 + 16));
  *a1 = result;
  return result;
}

void sub_1C12846A4(void *a1@<X8>)
{
  sub_1C1283E7C(*(void *)(v1 + 16), (Class *)off_1E6414D90, (SEL *)&selRef_initWithSportsTag_tagImageProvider_, a1);
}

void sub_1C12846D0(void *a1@<X8>)
{
  sub_1C1283E7C(*(void *)(v1 + 16), (Class *)off_1E6414D88, (SEL *)&selRef_initWithSportsEvent_tagImageProvider_, a1);
}

uint64_t FormatImageNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C12847C4()
{
  uint64_t v1 = v0;
  sub_1BFE79DD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v36 - v3;
  swift_beginAccess();
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v7 = v0[5];
  uint64_t v37 = v0[4];
  swift_beginAccess();
  uint64_t v8 = v0[6];
  uint64_t v60 = v0[7];
  swift_beginAccess();
  uint64_t v9 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C096BE30(v9);
    uint64_t v10 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v44 = 0;
  }
  uint64_t v11 = v1[9];
  if ((~v11 & 0xF000000000000007) != 0)
  {
    v56[0] = v1[9];
    sub_1C0EF4E60(v48, v10);
    uint64_t v11 = *(void *)&v48[0];
  }
  uint64_t v59 = v11;
  uint64_t v12 = v1[10];
  uint64_t v39 = v5;
  uint64_t v38 = v7;
  uint64_t v45 = v8;
  if (v12) {
    uint64_t v43 = sub_1C096BB70(v12);
  }
  else {
    uint64_t v43 = 0;
  }
  char v58 = *((unsigned char *)v1 + 88);
  uint64_t v13 = v1[12];
  uint64_t v14 = v1[13];
  char v15 = *((unsigned char *)v1 + 112);
  v56[0] = v13;
  v56[1] = v14;
  char v57 = v15;
  unint64_t v16 = v1[15];
  unint64_t v55 = v16;
  char v54 = *((unsigned char *)v1 + 128);
  uint64_t v17 = v1[17];
  uint64_t v18 = v1[18];
  long long v42 = *(_OWORD *)(v1 + 19);
  uint64_t v19 = v1[21];
  long long v41 = *((_OWORD *)v1 + 11);
  long long v40 = *((_OWORD *)v1 + 12);
  uint64_t v20 = v1[26];
  int v21 = *((unsigned __int8 *)v1 + 216);
  if (v21 == 254)
  {
    sub_1BFEF6828(v13, v14, v15);
    sub_1BFEF6854(v16);
  }
  else
  {
    v46[0] = v19;
    sub_1BFEF6828(v13, v14, v15);
    sub_1BFEF6854(v16);
    sub_1C10E55EC(v48);
    uint64_t v19 = *(void *)&v48[0];
    uint64_t v18 = v18;
  }
  *(void *)&v48[0] = v17;
  *((void *)&v48[0] + 1) = v18;
  v48[1] = v42;
  uint64_t v49 = v19;
  long long v50 = v41;
  long long v51 = v40;
  uint64_t v52 = v20;
  char v53 = v21;
  uint64_t v22 = v1[28];
  if ((~v22 & 0xF000000000000007) != 0)
  {
    uint64_t v47 = v1[28];
    sub_1C10E55EC(v46);
    uint64_t v22 = v46[0];
  }
  uint64_t v47 = v22;
  char v23 = *((unsigned char *)v1 + 232);
  uint64_t v25 = v1[30];
  uint64_t v24 = v1[31];
  if (!v25)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    if (!v24)
    {
LABEL_20:
      sub_1BFEF68E8(v25);
      goto LABEL_21;
    }
LABEL_18:
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_1C096B6BC(v27);
    swift_bridgeObjectRelease();
    sub_1BFEF68E8(v25);
    uint64_t v24 = v28;
    goto LABEL_21;
  }
  if (v25 != 1)
  {
    sub_1BFEF6864(v1[30]);
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_1C096B6BC(v29);
    swift_bridgeObjectRelease();
    if (!v24) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  uint64_t v26 = 1;
LABEL_21:
  uint64_t v30 = v6;
  uint64_t v31 = v39;
  uint64_t v32 = v38;
  uint64_t v33 = v37;
  v46[0] = v26;
  v46[1] = v24;
  sub_1BFEF6CE8((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, (uint64_t)v4);
  uint64_t v34 = swift_allocObject();
  FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v30, v31, v33, v32, v45, &v60, v44, &v59, v43, &v58, v56, (uint64_t *)&v55, &v54, v48, &v47, v23, v46, (uint64_t)v4);
  return v34;
}

uint64_t FormatImageNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNodeStyle.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatImageNodeStyle.class.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatImageNodeStyle.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNodeStyle.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatImageNodeStyle.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNodeStyle.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatImageNodeStyle.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatImageNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatImageNodeStyle.contentMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 88);
}

uint64_t FormatImageNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

unint64_t FormatImageNodeStyle.renderingMode.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 120);
  *a1 = v2;
  return sub_1BFEF6854(v2);
}

void FormatImageNodeStyle.resize.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

uint64_t FormatImageNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 144);
  uint64_t v4 = *(void *)(v1 + 152);
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v6 = *(void *)(v1 + 168);
  uint64_t v7 = *(void *)(v1 + 176);
  uint64_t v8 = *(void *)(v1 + 184);
  uint64_t v9 = *(void *)(v1 + 192);
  uint64_t v10 = *(void *)(v1 + 200);
  uint64_t v11 = *(void *)(v1 + 208);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 216);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatImageNodeStyle.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 224);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatImageNodeStyle.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 232);
}

uint64_t FormatImageNodeStyle.request.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 240);
  uint64_t v3 = *(void *)(v1 + 248);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEF6864(v2);
}

uint64_t FormatImageNodeStyle.imageMask.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEF6CE8(v1 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, a1);
}

uint64_t FormatImageNodeStyle.__allocating_init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, char *a10, uint64_t *a11, uint64_t *a12, char *a13, long long *a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t v23 = swift_allocObject();
  FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  return v23;
}

uint64_t sub_1C1285010(void *a1, void *a2)
{
  return static FormatImageNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatImageNodeStyle.Selector.selector.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1BFEF683C(v2);
}

uint64_t FormatImageNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFEF6828(v2, v3, v4);
}

uint64_t FormatImageNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 112);
  uint64_t v10 = *(void *)(v1 + 120);
  uint64_t v11 = *(void *)(v1 + 128);
  unsigned __int8 v12 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v12;
  return sub_1BFEF8708(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatImageNodeStyle.Selector.tintColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 144);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatImageNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

void FormatImageNodeStyle.Selector.resize.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 153);
}

void FormatImageNodeStyle.Selector.contentMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 154);
}

unint64_t FormatImageNodeStyle.Selector.renderingMode.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 160);
  *a1 = v2;
  return sub_1BFEF6854(v2);
}

uint64_t FormatImageNodeStyle.Selector.alpha.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 168);
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNodeStyle.Selector.request.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 192);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFEF6864(v2);
}

uint64_t sub_1C1285108()
{
  uint64_t v1 = *v0;
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v3 = *(void *)(v1 + 72);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    uint64_t v6 = &protocol witness table for FormatBackground;
    uint64_t v5 = &type metadata for FormatBackground;
    uint64_t v4 = *(void *)(v1 + 72);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = v6;
  sub_1BFEF683C(v3);
  uint64_t v7 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v7;
}

uint64_t sub_1C128520C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 200);
  return result;
}

BOOL _s8NewsFeed20FormatImageNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v69 = *(void *)(a1 + 56);
  uint64_t v70 = *(void *)(a1 + 64);
  uint64_t v71 = *(void *)(a1 + 72);
  uint64_t v72 = *(void *)(a1 + 80);
  uint64_t v73 = *(void *)(a1 + 88);
  uint64_t v74 = *(void *)(a1 + 96);
  uint64_t v75 = *(void *)(a1 + 104);
  uint64_t v76 = *(void *)(a1 + 112);
  uint64_t v68 = *(void *)(a1 + 120);
  uint64_t v77 = *(void *)(a1 + 128);
  int v78 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v56 = *(void *)(a1 + 144);
  int v54 = *(unsigned __int8 *)(a1 + 152);
  int v52 = *(unsigned __int8 *)(a1 + 153);
  int v49 = *(unsigned __int8 *)(a1 + 154);
  unint64_t v48 = *(void *)(a1 + 160);
  uint64_t v46 = *(void *)(a1 + 168);
  uint64_t v44 = *(void *)(a1 + 176);
  uint64_t v42 = *(void *)(a1 + 184);
  uint64_t v40 = *(void *)(a1 + 192);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  unsigned int v11 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v59 = *(void *)(a2 + 56);
  uint64_t v60 = *(void *)(a2 + 64);
  uint64_t v61 = *(void *)(a2 + 72);
  uint64_t v62 = *(void *)(a2 + 80);
  uint64_t v63 = *(void *)(a2 + 88);
  uint64_t v64 = *(void *)(a2 + 96);
  uint64_t v65 = *(void *)(a2 + 104);
  uint64_t v66 = *(void *)(a2 + 112);
  uint64_t v57 = *(void *)(a2 + 128);
  uint64_t v58 = *(void *)(a2 + 120);
  int v67 = *(unsigned __int8 *)(a2 + 136);
  uint64_t v55 = *(void *)(a2 + 144);
  int v53 = *(unsigned __int8 *)(a2 + 152);
  int v50 = *(unsigned __int8 *)(a2 + 154);
  int v51 = *(unsigned __int8 *)(a2 + 153);
  uint64_t v47 = *(void *)(a2 + 160);
  uint64_t v45 = *(void *)(a2 + 168);
  uint64_t v43 = *(void *)(a2 + 176);
  uint64_t v41 = *(void *)(a2 + 184);
  uint64_t v39 = *(void *)(a2 + 192);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v12 = sub_1C1520A9C();
    BOOL result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if ((~v2 & 0xF000000000000007) == 0)
  {
    if ((~v8 & 0xF000000000000007) == 0) {
      goto LABEL_13;
    }
LABEL_9:
    sub_1BFEF683C(v8);
    sub_1BFEF68C0(v2);
    sub_1BFEF68C0(v8);
    return 0;
  }
  unint64_t v90 = v2;
  if ((~v8 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_9;
  }
  uint64_t v79 = v8;
  sub_1BFEF683C(v2);
  swift_retain();
  char v14 = _s8NewsFeed16FormatBackgroundO2eeoiySbAC_ACtFZ_0((uint64_t *)&v90, (unint64_t *)&v79);
  swift_release();
  sub_1BFEF68C0(v2);
  if ((v14 & 1) == 0) {
    return 0;
  }
LABEL_13:
  if (v4)
  {
    if (!v7) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    BOOL v16 = sub_1C00DFB58(v15, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v16) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v6 > 0xFD)
  {
    if (v11 > 0xFD) {
      goto LABEL_25;
    }
LABEL_23:
    sub_1BFEF6828(v10, v9, v11);
    sub_1BFEF68AC(v3, v5, v6);
    sub_1BFEF68AC(v10, v9, v11);
    return 0;
  }
  unint64_t v90 = v3;
  uint64_t v91 = v5;
  LOBYTE(v92) = v6;
  if (v11 > 0xFD)
  {
    sub_1BFF046A0(v3, v5, v6);
    sub_1BFF046A0(v3, v5, v6);
    sub_1BFF04738(v3, v5, v6);
    goto LABEL_23;
  }
  uint64_t v79 = v10;
  uint64_t v80 = v9;
  LOBYTE(v81) = v11;
  sub_1BFEF6828(v3, v5, v6);
  sub_1BFF046A0(v3, v5, v6);
  char v17 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v90, (uint64_t)&v79);
  sub_1BFF04738(v90, v91, v92);
  sub_1BFEF68AC(v3, v5, v6);
  if ((v17 & 1) == 0) {
    return 0;
  }
LABEL_25:
  char v18 = v78;
  if (v78 == 254)
  {
    unsigned __int8 v19 = v67;
    uint64_t v21 = v75;
    uint64_t v20 = v76;
    uint64_t v23 = v73;
    uint64_t v22 = v74;
    uint64_t v25 = v71;
    uint64_t v24 = v72;
    unint64_t v27 = v69;
    uint64_t v26 = v70;
    uint64_t v28 = v68;
    uint64_t v29 = v77;
    if (v67 == 254) {
      goto LABEL_32;
    }
LABEL_30:
    unint64_t v90 = v27;
    uint64_t v91 = v26;
    uint64_t v92 = v25;
    uint64_t v93 = v24;
    uint64_t v94 = v23;
    uint64_t v95 = v22;
    uint64_t v96 = v21;
    uint64_t v97 = v20;
    uint64_t v98 = v28;
    uint64_t v99 = v29;
    char v100 = v18;
    uint64_t v101 = v59;
    uint64_t v102 = v60;
    uint64_t v103 = v61;
    uint64_t v104 = v62;
    uint64_t v105 = v63;
    uint64_t v106 = v64;
    uint64_t v107 = v65;
    uint64_t v108 = v66;
    uint64_t v109 = v58;
    uint64_t v110 = v57;
    unsigned __int8 v111 = v19;
    sub_1BFEF8708(v59, v60, v61, v62, v63, v64, v65, v66, v58, v57, v19);
    sub_1C02D2004((uint64_t)&v90);
    return 0;
  }
  unint64_t v27 = v69;
  uint64_t v26 = v70;
  unint64_t v90 = v69;
  uint64_t v91 = v70;
  uint64_t v25 = v71;
  uint64_t v24 = v72;
  uint64_t v92 = v71;
  uint64_t v93 = v72;
  uint64_t v23 = v73;
  uint64_t v22 = v74;
  uint64_t v94 = v73;
  uint64_t v95 = v74;
  uint64_t v21 = v75;
  uint64_t v20 = v76;
  uint64_t v96 = v75;
  uint64_t v97 = v76;
  uint64_t v28 = v68;
  uint64_t v98 = v68;
  uint64_t v99 = v77;
  char v100 = v78;
  unsigned __int8 v19 = v67;
  if (v67 == 254)
  {
    swift_retain();
    char v18 = v78;
    uint64_t v29 = v77;
    goto LABEL_30;
  }
  uint64_t v79 = v59;
  LODWORD(v80) = v60;
  uint64_t v81 = v61;
  uint64_t v82 = v62;
  uint64_t v83 = v63;
  uint64_t v84 = v64;
  uint64_t v85 = v65;
  uint64_t v86 = v66;
  uint64_t v87 = v58;
  uint64_t v88 = v57;
  char v89 = v67;
  sub_1BFEF8708(v69, v70, v71, v72, v73, v74, v75, v76, v68, v77, v78);
  swift_retain();
  char v30 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v90, (uint64_t)&v79);
  swift_release();
  sub_1BFEF8738(v69, v70, v71, v72, v73, v74, v75, v76, v68, v77, v78);
  if ((v30 & 1) == 0) {
    return 0;
  }
LABEL_32:
  if ((~v56 & 0xF000000000000007) != 0)
  {
    unint64_t v90 = v56;
    uint64_t v31 = v55;
    if ((~v55 & 0xF000000000000007) != 0)
    {
      uint64_t v79 = v55;
      swift_retain_n();
      char v32 = static FormatColor.== infix(_:_:)((uint64_t *)&v90, (unint64_t *)&v79);
      swift_release();
      sub_1BFDC11BC(v56);
      if ((v32 & 1) == 0) {
        return 0;
      }
      goto LABEL_39;
    }
    swift_retain();
LABEL_37:
    sub_1BFDC11A4(v31);
    sub_1BFDC11BC(v56);
    sub_1BFDC11BC(v31);
    return 0;
  }
  uint64_t v31 = v55;
  if ((~v55 & 0xF000000000000007) != 0) {
    goto LABEL_37;
  }
LABEL_39:
  if (v54 == 2)
  {
    if (v53 != 2) {
      return 0;
    }
LABEL_44:
    if (v52 == 4)
    {
      if (v51 != 4) {
        return 0;
      }
    }
    else if (v51 == 4 || (sub_1C1487F9C(v52, v51) & 1) == 0)
    {
      return 0;
    }
    if (v49 == 9)
    {
      if (v50 != 9) {
        return 0;
      }
    }
    else if (v50 == 9 || (sub_1C148810C(v49, v50) & 1) == 0)
    {
      return 0;
    }
    if (v48 == 3)
    {
      unint64_t v33 = v47;
      if (v47 == 3)
      {
LABEL_61:
        if (v46)
        {
          if (!v45) {
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v35 = sub_1C00DE998(v46, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0) {
            return 0;
          }
        }
        else if (v45)
        {
          return 0;
        }
        if (v44)
        {
          if (!v43) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v36 = swift_bridgeObjectRetain();
          char v37 = sub_1C00E65AC(v36, v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v37 & 1) == 0) {
            return 0;
          }
        }
        else if (v43)
        {
          return 0;
        }
        if (v42 == 1)
        {
          if (v41 == 1) {
            return 1;
          }
        }
        else
        {
          unint64_t v90 = v42;
          uint64_t v91 = v40;
          if (v41 != 1)
          {
            uint64_t v79 = v41;
            uint64_t v80 = v39;
            sub_1BFEF6864(v42);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v38 = _s8NewsFeed22FormatImageNodeRequestV2eeoiySbAC_ACtFZ_0((uint64_t *)&v90, &v79);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFEF68E8(v42);
            return (v38 & 1) != 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        sub_1BFEF6864(v41);
        sub_1BFEF68E8(v42);
        sub_1BFEF68E8(v41);
        return 0;
      }
    }
    else
    {
      unint64_t v90 = v48;
      if (v47 != 3)
      {
        uint64_t v79 = v47;
        sub_1BFEF6A90(v48);
        sub_1BFEF6A90(v48);
        BOOL v34 = static FormatImageRenderingMode.== infix(_:_:)(&v90, (unint64_t *)&v79);
        sub_1BFEF70CC(v90);
        sub_1BFEF68D8(v48);
        if (!v34) {
          return 0;
        }
        goto LABEL_61;
      }
      sub_1BFEF6A90(v48);
      sub_1BFEF6A90(v48);
      sub_1BFEF70CC(v48);
      unint64_t v33 = 3;
    }
    sub_1BFEF6854(v33);
    sub_1BFEF68D8(v48);
    sub_1BFEF68D8(v33);
    return 0;
  }
  BOOL result = 0;
  if (v53 != 2 && ((((v54 & 1) == 0) ^ v53) & 1) != 0) {
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_1C1285A60(uint64_t a1)
{
  uint64_t result = sub_1C1285B98(&qword_1EA1AD9D0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1285AA4(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_1C1285B98(&qword_1EB889800);
  uint64_t result = sub_1C1285B98(&qword_1EB866A90);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1C1285B0C(void *a1)
{
  a1[1] = sub_1C1285B98(&qword_1EB889800);
  a1[2] = sub_1C1285B98(&qword_1EB866A90);
  uint64_t result = sub_1C1285B98(&qword_1EA1AD9D8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C1285B98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatImageNodeStyle();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1285BDC(uint64_t a1)
{
  unint64_t result = sub_1C1285C04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1285C04()
{
  unint64_t result = qword_1EA1AD9E0;
  if (!qword_1EA1AD9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD9E0);
  }
  return result;
}

unint64_t sub_1C1285C58(void *a1)
{
  a1[1] = sub_1C0077E90();
  a1[2] = sub_1C0077EE4();
  unint64_t result = sub_1C1285C90();
  a1[3] = result;
  return result;
}

unint64_t sub_1C1285C90()
{
  unint64_t result = qword_1EA1AD9E8;
  if (!qword_1EA1AD9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD9E8);
  }
  return result;
}

uint64_t sub_1C1285CE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1285D34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1285D84@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1285DD4()
{
  return type metadata accessor for FormatImageNodeStyle();
}

uint64_t method lookup function for FormatImageNodeStyle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatImageNodeStyle);
}

uint64_t dispatch thunk of FormatImageNodeStyle.__allocating_init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t assignWithCopy for FormatImageNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1C09C6DD8(a1 + 16);
    uint64_t v5 = *(void *)(a2 + 16);
LABEL_6:
    *uint64_t v4 = v5;
    goto LABEL_8;
  }
  *uint64_t v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a1 + 32);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v9 <= 0xFD)
    {
      uint64_t v14 = *(void *)(a2 + 32);
      uint64_t v15 = *(void *)(a2 + 40);
      sub_1BFF046A0(v14, v15, *(unsigned char *)(a2 + 48));
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v15;
      char v18 = *(unsigned char *)(a1 + 48);
      *(unsigned char *)(a1 + 48) = v9;
      sub_1BFF04738(v16, v17, v18);
    }
    else
    {
      sub_1C02D0F84(a1 + 32);
      char v11 = *(unsigned char *)(a2 + 48);
      *uint64_t v7 = *v8;
      *(unsigned char *)(a1 + 48) = v11;
    }
  }
  else if (v9 <= 0xFD)
  {
    uint64_t v12 = *(void *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 40);
    sub_1BFF046A0(v12, v13, *(unsigned char *)(a2 + 48));
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v13;
    *(unsigned char *)(a1 + 48) = v9;
  }
  else
  {
    long long v10 = *v8;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *uint64_t v7 = v10;
  }
  unsigned __int8 v19 = (_OWORD *)(a1 + 56);
  uint64_t v20 = (_OWORD *)(a2 + 56);
  int v21 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v21 == 254)
    {
      long long v22 = *(_OWORD *)(a2 + 72);
      *unsigned __int8 v19 = *v20;
      *(_OWORD *)(a1 + 72) = v22;
      long long v23 = *(_OWORD *)(a2 + 88);
      long long v24 = *(_OWORD *)(a2 + 104);
      long long v25 = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v24;
      *(_OWORD *)(a1 + 120) = v25;
      *(_OWORD *)(a1 + 88) = v23;
    }
    else
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v30 = *(_OWORD *)(a2 + 96);
      long long v31 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v30;
      *(_OWORD *)(a1 + 112) = v31;
      swift_retain();
    }
  }
  else if (v21 == 254)
  {
    sub_1C02D0FD8(a1 + 56);
    long long v26 = *(_OWORD *)(a2 + 72);
    *unsigned __int8 v19 = *v20;
    *(_OWORD *)(a1 + 72) = v26;
    long long v28 = *(_OWORD *)(a2 + 104);
    long long v27 = *(_OWORD *)(a2 + 120);
    long long v29 = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v28;
    *(_OWORD *)(a1 + 120) = v27;
    *(_OWORD *)(a1 + 88) = v29;
  }
  else
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_retain();
    swift_release();
    long long v32 = *(_OWORD *)(a2 + 96);
    long long v33 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v32;
    *(_OWORD *)(a1 + 112) = v33;
  }
  BOOL v34 = (void *)(a1 + 144);
  uint64_t v35 = *(void *)(a2 + 144);
  unint64_t v36 = v35 & 0xF000000000000007;
  if ((~*(void *)(a1 + 144) & 0xF000000000000007) == 0)
  {
    if (v36 != 0xF000000000000007)
    {
      *BOOL v34 = v35;
      swift_retain();
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v36 == 0xF000000000000007)
  {
    sub_1C036EDB0(a1 + 144);
    uint64_t v35 = *(void *)(a2 + 144);
LABEL_27:
    *BOOL v34 = v35;
    goto LABEL_29;
  }
  *BOOL v34 = v35;
  swift_retain();
  swift_release();
LABEL_29:
  char v37 = (void *)(a1 + 160);
  unint64_t v38 = *(void *)(a1 + 160);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  unint64_t v39 = *(void *)(a2 + 160);
  if (v38 == 3)
  {
    if (v39 < 3)
    {
LABEL_31:
      *char v37 = v39;
      goto LABEL_44;
    }
    if (v39 == 3)
    {
      uint64_t v40 = 3;
LABEL_43:
      *char v37 = v40;
      goto LABEL_44;
    }
LABEL_39:
    *char v37 = v39;
    swift_retain();
    goto LABEL_44;
  }
  if (v39 == 3)
  {
    sub_1C128627C(a1 + 160);
LABEL_42:
    uint64_t v40 = *(void *)(a2 + 160);
    goto LABEL_43;
  }
  if (v38 < 3)
  {
    if (v39 < 3) {
      goto LABEL_31;
    }
    goto LABEL_39;
  }
  if (v39 < 3)
  {
    swift_release();
    goto LABEL_42;
  }
  *char v37 = v39;
  swift_retain();
  swift_release();
LABEL_44:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184) != 1)
  {
    if (v41 != 1)
    {
      *(void *)(a1 + 184) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C12862D0(a1 + 184);
    goto LABEL_49;
  }
  if (v41 == 1)
  {
LABEL_49:
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    return a1;
  }
  *(void *)(a1 + 184) = v41;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C128627C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C12862D0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatImageNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) == 0) {
    goto LABEL_4;
  }
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1C09C6DD8(a1 + 16);
LABEL_4:
    *uint64_t v5 = v6;
    goto LABEL_6;
  }
  *uint64_t v5 = v6;
  swift_release();
LABEL_6:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a2 + 32);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 48);
  if (v8 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v7;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    goto LABEL_11;
  }
  unsigned int v9 = *(unsigned __int8 *)(a2 + 48);
  if (v9 > 0xFD)
  {
    sub_1C02D0F84(a1 + 32);
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v7;
  *(unsigned char *)(a1 + 48) = v9;
  sub_1BFF04738(v10, v11, v8);
LABEL_11:
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
LABEL_14:
    long long v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    long long v13 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(a2 + 136) == 254)
  {
    sub_1C02D0FD8(a1 + 56);
    goto LABEL_14;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  long long v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
LABEL_16:
  uint64_t v15 = (void *)(a1 + 144);
  uint64_t v16 = *(void *)(a2 + 144);
  if ((~*(void *)(a1 + 144) & 0xF000000000000007) == 0)
  {
LABEL_19:
    void *v15 = v16;
    goto LABEL_21;
  }
  if ((~v16 & 0xF000000000000007) == 0)
  {
    sub_1C036EDB0(a1 + 144);
    goto LABEL_19;
  }
  void *v15 = v16;
  swift_release();
LABEL_21:
  char v18 = (unint64_t *)(a1 + 160);
  unint64_t v17 = *(void *)(a1 + 160);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_WORD *)(a1 + 153) = *(_WORD *)(a2 + 153);
  unint64_t v19 = *(void *)(a2 + 160);
  if (v17 == 3)
  {
    if (v19 != 3)
    {
      *char v18 = v19;
      goto LABEL_32;
    }
    goto LABEL_26;
  }
  if (v19 == 3)
  {
    sub_1C128627C(a1 + 160);
LABEL_26:
    *char v18 = 3;
    goto LABEL_32;
  }
  if (v17 >= 3)
  {
    if (v19 >= 3)
    {
      *char v18 = v19;
      swift_release();
    }
    else
    {
      swift_release();
      *char v18 = v19;
    }
  }
  else
  {
    *char v18 = v19;
  }
LABEL_32:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184) != 1)
  {
    if (v20 != 1)
    {
      *(void *)(a1 + 184) = v20;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C12862D0(a1 + 184);
  }
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageNodeStyle.Selector()
{
  return &type metadata for FormatImageNodeStyle.Selector;
}

void *sub_1C12865C4(double *a1, uint64_t a2)
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EA1974D0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C15445C0;
  sub_1BFE79DD8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  uint64_t v56 = *(void *)(*(void *)(v3 - 8) + 72);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  uint64_t v7 = (void *)(v6 + v5);
  if (a2)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    unint64_t v9 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1C12847C4();
    long long v60 = 0u;
    long long v61 = 0u;
    uint64_t v62 = 0;
    long long v63 = xmmword_1C15DDC60;
    uint64_t v10 = swift_allocObject();
    sub_1C02D1F8C((uint64_t)&v59, v10 + 16);
    uint64_t v11 = sub_1C02D1FE8;
  }
  else
  {
    uint64_t v11 = sub_1C139486C;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
  long long v13 = (uint64_t (**)())((char *)v7 + *(int *)(v12 + 24));
  *long long v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  uint64_t v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(void *)(v6 + v5) = v8;
  _OWORD v7[2] = 0;
  void v7[3] = 0;
  v7[1] = v9;
  uint64_t v15 = (char *)v7 + *(int *)(v12 + 28);
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = -1;
  uint64_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v16(v7, 0, 1, v12);
  sub_1C09BCFA4(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v6, v67);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v17 = swift_allocObject();
  *(void *)(inited + 32) = v17;
  *(void *)(v17 + 48) = v68;
  long long v18 = v67[1];
  *(_OWORD *)(v17 + 16) = v67[0];
  *(_OWORD *)(v17 + 32) = v18;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152C7E0;
  uint64_t v20 = v19 + v5;
  sub_1C0433600(1701869908, 0xE400000000000000, 0x6567616D49, 0xE500000000000000, (void *)(v19 + v5));
  v16((void *)(v19 + v5), 0, 1, v12);
  if (a2)
  {
    uint64_t v21 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, v21, (void *)(v20 + v56));
    v16((void *)(v20 + v56), 0, 1, v12);
    unint64_t v22 = *(void *)(a2 + 72);
    sub_1BFEF683C(v22);
  }
  else
  {
    sub_1C042F6B0(0x6168706C41, 0xE500000000000000, 0, (void *)(v20 + v56));
    v16((void *)(v20 + v56), 0, 1, v12);
    unint64_t v22 = 0xF000000000000007;
  }
  uint64_t v52 = 2 * v56;
  sub_1C0439948(0x756F72676B636142, 0xEA0000000000646ELL, v22, v20 + 2 * v56);
  v16((void *)(v20 + 2 * v56), 0, 1, v12);
  if (a2)
  {
    uint64_t v23 = *(void *)(a2 + 224);
    sub_1BFDC11A4(v23);
  }
  else
  {
    uint64_t v23 = 0xF000000000000007;
  }
  sub_1C0433BC8(0x6C6F4320746E6954, 0xEA0000000000726FLL, v23, (void *)(v20 + 3 * v56));
  v16((void *)(v20 + 3 * v56), 0, 1, v12);
  if (a2) {
    char v24 = *(unsigned char *)(a2 + 232);
  }
  else {
    char v24 = 2;
  }
  sub_1C0432B74(0xD00000000000001BLL, 0x80000001C160A2E0, v24, (void *)(v20 + 4 * v56));
  v16((void *)(v20 + 4 * v56), 0, 1, v12);
  sub_1C09BCFA4(2003134806, 0xE400000000000000, 0, 0, v19, v69);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v25 = swift_allocObject();
  *(void *)(inited + 72) = v25;
  *(void *)(v25 + 48) = v70;
  long long v26 = v69[1];
  *(_OWORD *)(v25 + 16) = v69[0];
  *(_OWORD *)(v25 + 32) = v26;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C152C7F0;
  long long v28 = (void *)(v27 + v5);
  if (a2)
  {
    sub_1C043CAD8(0x657A69736552, 0xE600000000000000, *(unsigned char *)(a2 + 128), v28);
    v16(v28, 0, 1, v12);
    unsigned __int8 v29 = *(unsigned char *)(a2 + 88);
  }
  else
  {
    sub_1C043CAD8(0x657A69736552, 0xE600000000000000, 4u, v28);
    v16(v28, 0, 1, v12);
    unsigned __int8 v29 = 9;
  }
  sub_1C043CDDC(0x20746E65746E6F43, 0xEC00000065646F4DLL, v29, (void *)((char *)v28 + v56));
  v16((void *)((char *)v28 + v56), 0, 1, v12);
  if (a2)
  {
    unint64_t v30 = *(void *)(a2 + 120);
    sub_1BFEF6854(v30);
  }
  else
  {
    unint64_t v30 = 3;
  }
  sub_1C043D168(0x6E697265646E6552, 0xEE0065646F4D2067, v30, (void *)((char *)v28 + v52));
  v16((void *)((char *)v28 + v52), 0, 1, v12);
  sub_1C09BCFA4(0x6567616D49, 0xE500000000000000, 0, 0, v27, v71);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 144) = &off_1F1BDEC90;
  uint64_t v31 = swift_allocObject();
  *(void *)(inited + 112) = v31;
  *(void *)(v31 + 48) = v72;
  long long v32 = v71[1];
  *(_OWORD *)(v31 + 16) = v71[0];
  *(_OWORD *)(v31 + 32) = v32;
  if (a2)
  {
    uint64_t v33 = *(void *)(a2 + 96);
    uint64_t v34 = *(void *)(a2 + 104);
    char v35 = *(unsigned char *)(a2 + 112);
    sub_1BFEF6828(v33, v34, v35);
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    char v35 = -2;
  }
  uint64_t v59 = v33;
  *(void *)&long long v60 = v34;
  BYTE8(v60) = v35;
  unint64_t v36 = sub_1C108626C(a1, (uint64_t)&v59);
  sub_1BFEF68AC(v33, v34, v35);
  *(void *)(inited + 176) = &type metadata for FormatInspection;
  *(void *)(inited + 184) = &off_1F1C29D30;
  *(void *)(inited + 152) = v36;
  uint64_t v51 = a2;
  if (a2)
  {
    unsigned __int8 v54 = *(unsigned char *)(a2 + 216);
    uint64_t v55 = *(void *)(a2 + 208);
    uint64_t v57 = *(void *)(a2 + 200);
    uint64_t v37 = *(void *)(a2 + 136);
    uint64_t v38 = *(void *)(a2 + 144);
    uint64_t v39 = *(void *)(a2 + 152);
    uint64_t v40 = *(void *)(a2 + 160);
    uint64_t v41 = *(void *)(a2 + 168);
    uint64_t v42 = *(void *)(a2 + 176);
    uint64_t v43 = *(void *)(a2 + 184);
    uint64_t v44 = *(void *)(a2 + 192);
    sub_1BFEF8708(v37, v38, v39, v40, v41, v42, v43, v44, v57, v55, v54);
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v55 = 0;
    uint64_t v57 = 0;
    unsigned __int8 v54 = -2;
  }
  uint64_t v59 = v37;
  *(void *)&long long v60 = v38;
  *((void *)&v60 + 1) = v39;
  *(void *)&long long v61 = v40;
  *((void *)&v61 + 1) = v41;
  uint64_t v62 = v42;
  *(void *)&long long v63 = v43;
  *((void *)&v63 + 1) = v44;
  uint64_t v64 = v57;
  uint64_t v65 = v55;
  unsigned __int8 v66 = v54;
  uint64_t v45 = sub_1C0AD49A4((uint64_t)&v59);
  sub_1BFEF8738(v37, v38, v39, v40, v41, v42, v43, v44, v57, v55, v54);
  *(void *)(inited + 216) = &type metadata for FormatInspection;
  *(void *)(inited + 224) = &off_1F1C29D30;
  *(void *)(inited + 192) = v45;
  if (v51)
  {
    uint64_t v47 = *(void *)(v51 + 240);
    uint64_t v46 = *(void *)(v51 + 248);
    sub_1BFEF6864(v47);
  }
  else
  {
    uint64_t v46 = 0;
    uint64_t v47 = 1;
  }
  uint64_t v59 = v47;
  *(void *)&long long v60 = v46;
  unint64_t v48 = sub_1C1039944((unint64_t *)&v59);
  sub_1BFEF68E8(v47);
  *(void *)(inited + 256) = &type metadata for FormatInspection;
  *(void *)(inited + 264) = &off_1F1C29D30;
  *(void *)(inited + 232) = v48;
  int v49 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  return v49;
}

uint64_t sub_1C1286F80()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1286FC8()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

BOOL static FormatAudioTrackBinding.Command.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatAudioTrackBinding.Command.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatAudioTrackBinding.Command.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C128709C()
{
  unint64_t result = qword_1EA1AD9F0;
  if (!qword_1EA1AD9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD9F0);
  }
  return result;
}

unint64_t sub_1C12870F0(uint64_t a1)
{
  unint64_t result = sub_1C1287118();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1287118()
{
  unint64_t result = qword_1EA1AD9F8;
  if (!qword_1EA1AD9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1AD9F8);
  }
  return result;
}

unint64_t sub_1C128716C(void *a1)
{
  a1[1] = sub_1C087D37C();
  a1[2] = sub_1C08FD6F0();
  unint64_t result = sub_1C128709C();
  a1[3] = result;
  return result;
}

uint64_t sub_1C12871A4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatAudioTrackBinding.Command.init(from:)(a1, a2);
}

uint64_t sub_1C12871BC(void *a1)
{
  return FormatAudioTrackBinding.Command.encode(to:)(a1);
}

unsigned char *_s7CommandOwst_4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12872A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAudioTrackBinding.Command()
{
  return &type metadata for FormatAudioTrackBinding.Command;
}

ValueMetadata *type metadata accessor for A12_V3()
{
  return &type metadata for A12_V3;
}

uint64_t sub_1C12872E8(void *a1)
{
  uint64_t v3 = v1;
  sub_1C128B5C8(0, &qword_1EA1ADAB0, (uint64_t (*)(void))sub_1C128B574, (uint64_t)&type metadata for A12_V3.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C128B574();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C128B630(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C1287530(uint64_t a1)
{
  unint64_t v2 = sub_1C128B574();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C128756C(uint64_t a1)
{
  unint64_t v2 = sub_1C128B574();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C12875A8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C128B2C4(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C12875F0(void *a1)
{
  return sub_1C12872E8(a1);
}

uint64_t sub_1C1287608()
{
  sub_1C128AF48();
  return sub_1C151798C();
}

uint64_t sub_1C1287684@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C128B5C8(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C1287740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  int v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  long long v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A12_V3;
  unint64_t v20 = sub_1C018662C();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  long long v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *long long v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A12_V3;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v31 = (void *)(v30 + 16);
  swift_beginAccess();
  long long v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    long long v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  v32[2] = v35 + 1;
  unint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B83198, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B831C0, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A12_V3.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C128B630(&qword_1EA1ADA10, (void (*)(uint64_t))type metadata accessor for A12_V3.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C1287EE4@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  unint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  v33[0] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A12_V3.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v43);
  sub_1BFC66384(v11 + 56, (uint64_t)v42);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v43, v14 + 16);
  sub_1BFC773DC(v42, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v41[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v41, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v42);
  sub_1BFC66384(v15 + 56, (uint64_t)v41);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v42, v17 + 16);
  sub_1BFC773DC(v41, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v43, *(void *)(*(void *)(v2 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v43 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v43;
  v39[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C128AEE4, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *MEMORY[0x1E4FAB6D8];
  uint64_t v23 = sub_1C151759C();
  uint64_t v24 = v33[0];
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v33[0], v22, v23);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v24, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v21;
  uint64_t v38 = v2;
  sub_1C128B008(0, &qword_1EA1ADA30, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v43;
  uint64_t v26 = v44;
  uint64_t v27 = v45;
  *(void *)&long long v43 = v21;
  *(void *)&v42[0] = v46;
  MEMORY[0x1F4188790](v25);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v43 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  *unint64_t v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1C1288490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C1288560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C128B008(0, &qword_1EA1ADA50, MEMORY[0x1E4FAB6F0]);
  sub_1C128AFBC(&qword_1EA1ADA58, &qword_1EA1ADA50, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C1288750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = &v14[-v10];
  uint64_t v17 = a1;
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v8 + 104))(&v14[-v10], *MEMORY[0x1E4FAB9E0], v7, v9);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C128B008(0, &qword_1EA1ADA60, MEMORY[0x1E4FAB4D0]);
  sub_1C128AFBC(&qword_1EA1ADA68, &qword_1EA1ADA60, v12);
  sub_1C151731C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1C1288920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v26 = a2;
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v25 - v7);
  uint64_t v34 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  unsigned int v28 = *MEMORY[0x1E4FABA10];
  uint64_t v27 = *(void (**)(uint64_t *))(v6 + 104);
  v27(v8);
  sub_1C128B08C();
  sub_1C128B5C8(0, &qword_1EA1ADA78, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  unint64_t v15 = v14 + v13;
  sub_1C003F3A8();
  uint64_t v17 = (void *)(v15 + *(int *)(v16 + 48));
  uint64_t v18 = *MEMORY[0x1E4FAB7E0];
  uint64_t v19 = sub_1C151789C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v15, v18, v19);
  *uint64_t v17 = 0x6C6F437468676972;
  v17[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4FAB5B0], v11);
  uint64_t v20 = v26;
  uint64_t v33 = v26;
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C128B008(0, &qword_1EA1ADA60, MEMORY[0x1E4FAB4D0]);
  sub_1C128AFBC(&qword_1EA1ADA68, &qword_1EA1ADA60, v21);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v22(v8, v5);
  uint64_t v34 = v29;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 6;
  *uint64_t v8 = v23;
  ((void (*)(uint64_t *, void, uint64_t))v27)(v8, v28, v5);
  uint64_t v31 = v20;
  uint64_t v32 = v30;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v22)(v8, v5);
}

uint64_t sub_1C1288D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  uint64_t v50 = sub_1C1517A9C();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v51 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151794C();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v44);
  uint64_t v7 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v40 - v13);
  uint64_t v55 = a1;
  uint64_t v15 = sub_1C151729C();
  uint64_t v16 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FAB4E8], v15);
  uint64_t *v14 = v16;
  uint64_t v18 = *(void (**)(uint64_t *, void, uint64_t))(v12 + 104);
  v18(v14, *MEMORY[0x1E4FAB940], v11);
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C128B008(0, &qword_1EA1ADA60, MEMORY[0x1E4FAB4D0]);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1C128AFBC(&qword_1EA1ADA68, &qword_1EA1ADA60, v19);
  uint64_t v47 = v21;
  uint64_t v23 = v11;
  sub_1C151738C();
  uint64_t v24 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  uint64_t v45 = v12 + 8;
  v24(v14, v11);
  uint64_t v55 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  v18(v14, *MEMORY[0x1E4FAB9E0], v23);
  if (!*(void *)(v54 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v40 = KeyPath;
  uint64_t v41 = (uint64_t (*)(uint64_t *, uint64_t))v24;
  uint64_t v42 = v22;
  uint64_t KeyPath = v46;
  sub_1BFF1AFA4(v54 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), v46, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v26 = v44;
  uint64_t v27 = (char *)v7 + *(int *)(v44 + 20);
  uint64_t v28 = *MEMORY[0x1E4FAB8C8];
  uint64_t v29 = sub_1C1517A7C();
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v27, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  uint64_t v31 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v7 = 0;
  *(void *)((char *)v7 + *(int *)(v26 + 24)) = 0;
  uint64_t v32 = *v31;
  *(void *)((char *)v7 + *(int *)(v26 + 28)) = v32;
  uint64_t v33 = qword_1EB87CC48;
  id v34 = v32;
  if (v33 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  uint64_t v35 = v49;
  sub_1C151709C();
  uint64_t v36 = swift_release();
  __n128 v37 = MEMORY[0x1F4188790](v36);
  *(&v40 - 4) = KeyPath;
  *(&v40 - 3) = (uint64_t)v7;
  unint64_t v39 = (unint64_t)v35;
  (*(void (**)(char *, void, uint64_t, __n128))(v48 + 104))(v51, *MEMORY[0x1E4FAB8F8], v50, v37);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v53);
  sub_1BFF1F104((uint64_t)v7, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104(KeyPath, type metadata accessor for HeadlineViewLayout.Context);
  unint64_t v39 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return v41(v14, v23);
}

uint64_t sub_1C12893E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v77 = a3;
  uint64_t v79 = a1;
  uint64_t v80 = a2;
  uint64_t v61 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v61);
  uint64_t v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v75 = sub_1C128AEF4;
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (uint64_t *)((char *)&v59 - v8);
  uint64_t v82 = a1;
  uint64_t v10 = sub_1C151729C();
  uint64_t v11 = swift_allocBox();
  LODWORD(v72) = *MEMORY[0x1E4FAB4E8];
  uint64_t v12 = *(void *)(v10 - 8);
  unint64_t v71 = *(void (**)(uint64_t))(v12 + 104);
  uint64_t v76 = v12 + 104;
  v71(v13);
  uint64_t *v9 = v11;
  LODWORD(KeyPath) = *MEMORY[0x1E4FAB940];
  uint64_t v14 = *(void (**)(uint64_t *))(v7 + 104);
  v14(v9);
  uint64_t v63 = v14;
  uint64_t v64 = v7 + 104;
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C128B008(0, &qword_1EA1ADA60, MEMORY[0x1E4FAB4D0]);
  uint64_t v78 = v16;
  uint64_t v17 = sub_1C128AFBC(&qword_1EA1ADA68, &qword_1EA1ADA60, v15);
  sub_1C151738C();
  uint64_t v18 = *(void (**)(uint64_t *, uint64_t))(v7 + 8);
  v18(v9, v6);
  uint64_t v82 = v79;
  ((void (*)(uint64_t *, void, uint64_t))v14)(v9, *MEMORY[0x1E4FABA28], v6);
  sub_1C128B08C();
  uint64_t v69 = v19;
  sub_1C128B5C8(0, &qword_1EA1ADA78, (uint64_t (*)(void))v75, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v21 = v20;
  uint64_t v74 = v20;
  uint64_t v22 = *(unsigned __int8 *)(*(void *)(v20 - 8) + 80);
  uint64_t v23 = *(void *)(v20 - 8);
  uint64_t v68 = ((v22 + 32) & ~v22) + *(void *)(v23 + 72);
  uint64_t v24 = (v22 + 32) & ~v22;
  uint64_t v66 = v24;
  uint64_t v67 = v22 | 7;
  uint64_t v25 = swift_allocObject();
  long long v65 = xmmword_1C1529AE0;
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  uint64_t v26 = *MEMORY[0x1E4FAB638];
  uint64_t v27 = *(uint64_t (**)(void))(v23 + 104);
  uint64_t v73 = v23 + 104;
  unint64_t v75 = (unint64_t (*)())v27;
  ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v25 + v24, v26, v21);
  uint64_t v81 = v80;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  v18(v9, v6);
  uint64_t v28 = v79;
  uint64_t v82 = v79;
  uint64_t v29 = swift_allocBox();
  ((void (*)(uint64_t, void, uint64_t))v71)(v30, v72, v10);
  uint64_t *v9 = v29;
  uint64_t v31 = v63;
  ((void (*)(uint64_t *, void, uint64_t))v63)(v9, KeyPath, v6);
  unint64_t v71 = (void (*)(uint64_t))v17;
  sub_1C151738C();
  uint64_t v76 = v7 + 8;
  long long v72 = (uint64_t (*)(uint64_t *, uint64_t))v18;
  v18(v9, v6);
  uint64_t v82 = v28;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C0386118();
  uint64_t v33 = v32;
  uint64_t v34 = swift_allocBox();
  uint64_t v36 = (char *)v35 + *(int *)(v33 + 48);
  *uint64_t v35 = 2;
  uint64_t v37 = *MEMORY[0x1E4FAB8C8];
  uint64_t v38 = sub_1C1517A7C();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(void (**)(char *, void, uint64_t))(v39 + 104);
  unsigned int v60 = v37;
  uint64_t v59 = v40;
  v40(v36, v37, v38);
  uint64_t *v9 = v34;
  uint64_t v41 = *MEMORY[0x1E4FAB960];
  uint64_t v79 = v6;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v31)(v9, v41, v6);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v65;
  uint64_t v43 = (double *)(v42 + v66);
  uint64_t v44 = v77 + *(int *)(type metadata accessor for A12_V3.Bound() + 24);
  *uint64_t v43 = *(double *)(v44 + *(int *)(type metadata accessor for GroupLayoutContext() + 32)) * 135.0;
  uint64_t v45 = v43;
  uint64_t v46 = v80;
  uint64_t result = ((uint64_t (*)(double *, void, uint64_t))v75)(v45, *MEMORY[0x1E4FAB670], v74);
  if (*(void *)(v46 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v48 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v49 = v46
        + 3 * *(void *)(v48 + 72)
        + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    uint64_t v50 = v61;
    uint64_t v51 = v62;
    uint64_t v52 = &v62[*(int *)(v61 + 20)];
    v59(v52, v60, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v52, 0, 1, v38);
    uint64_t v53 = (void *)*MEMORY[0x1E4FB27D0];
    void *v51 = 0;
    *(void *)((char *)v51 + *(int *)(v50 + 24)) = 0;
    *(void *)((char *)v51 + *(int *)(v50 + 28)) = v53;
    double v54 = *MEMORY[0x1E4FB2848];
    double v55 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v56 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v57 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v58 = v53;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v49, (uint64_t)v51, v54, v55, v56, v57);
    sub_1BFF1F104((uint64_t)v51, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return v72(v9, v79);
  }
  return result;
}

uint64_t sub_1C1289BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 3;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C128B008(0, &qword_1EA1ADA60, MEMORY[0x1E4FAB4D0]);
  sub_1C128AFBC(&qword_1EA1ADA68, &qword_1EA1ADA60, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 3;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C1289E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C128B008(0, &qword_1EA1ADA60, MEMORY[0x1E4FAB4D0]);
  sub_1C128AFBC(&qword_1EA1ADA68, &qword_1EA1ADA60, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C128A444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C128B5C8(0, &qword_1EA1ADA48, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C128B008(0, &qword_1EA1ADA60, MEMORY[0x1E4FAB4D0]);
  sub_1C128AFBC(&qword_1EA1ADA68, &qword_1EA1ADA60, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C128AA20@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V3.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C128AB10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C1287740(a1, a2, a3);
}

uint64_t sub_1C128AB28()
{
  return sub_1C12BC460();
}

unint64_t sub_1C128AB38(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C128AB68();
  unint64_t result = sub_1C128ABBC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C128AB68()
{
  unint64_t result = qword_1EA1ADA00;
  if (!qword_1EA1ADA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA00);
  }
  return result;
}

unint64_t sub_1C128ABBC()
{
  unint64_t result = qword_1EA1ADA08;
  if (!qword_1EA1ADA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA08);
  }
  return result;
}

uint64_t type metadata accessor for A12_V3.Bound()
{
  uint64_t result = qword_1EA1ADA18;
  if (!qword_1EA1ADA18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C128AC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C128AC70);
}

uint64_t sub_1C128AC70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C128AD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C128AD34);
}

void *sub_1C128AD34(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C128ADDC()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C128AE8C(uint64_t a1)
{
  uint64_t result = sub_1C128B630(&qword_1EA1ADA28, (void (*)(uint64_t))type metadata accessor for A12_V3.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C128AEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C1288490(a1, a2, a3);
}

uint64_t sub_1C128AEEC(uint64_t a1)
{
  return sub_1C1288560(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C128AEF4()
{
  unint64_t result = qword_1EA1ADA38;
  if (!qword_1EA1ADA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA38);
  }
  return result;
}

unint64_t sub_1C128AF48()
{
  unint64_t result = qword_1EA1ADA40;
  if (!qword_1EA1ADA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA40);
  }
  return result;
}

uint64_t sub_1C128AF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C128AA20(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C128AFA4()
{
  return swift_deallocObject();
}

uint64_t sub_1C128AFB4(uint64_t a1)
{
  return sub_1C1288750(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C128AFBC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C128B008(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C128B000(uint64_t a1)
{
  return sub_1C1288920(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C128B008(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V3.Layout;
    v8[1] = &type metadata for A12_V3.Layout.Attributes;
    void v8[2] = sub_1C128AEF4();
    v8[3] = sub_1C128AF48();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C128B08C()
{
  if (!qword_1EA1ADA70)
  {
    sub_1C128B5C8(255, &qword_1EA1ADA78, (uint64_t (*)(void))sub_1C128AEF4, (uint64_t)&type metadata for A12_V3.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ADA70);
    }
  }
}

uint64_t sub_1C128B11C(uint64_t a1)
{
  return sub_1C1288D3C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C128B124(uint64_t a1)
{
  return sub_1C12893E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C128B12C(uint64_t a1)
{
  return sub_1C1289BC4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C128B134(uint64_t a1)
{
  return sub_1C1289E68(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C128B13C(uint64_t a1)
{
  return sub_1C128A444(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V3.Layout.Attributes()
{
  return &type metadata for A12_V3.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V3.Layout()
{
  return &type metadata for A12_V3.Layout;
}

unint64_t sub_1C128B168()
{
  unint64_t result = qword_1EA1ADA80;
  if (!qword_1EA1ADA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA80);
  }
  return result;
}

unint64_t sub_1C128B1C0()
{
  unint64_t result = qword_1EA1ADA88;
  if (!qword_1EA1ADA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA88);
  }
  return result;
}

unint64_t sub_1C128B218()
{
  unint64_t result = qword_1EA1ADA90;
  if (!qword_1EA1ADA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA90);
  }
  return result;
}

unint64_t sub_1C128B270()
{
  unint64_t result = qword_1EA1ADA98;
  if (!qword_1EA1ADA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADA98);
  }
  return result;
}

uint64_t sub_1C128B2C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C128B5C8(0, &qword_1EA1ADAA0, (uint64_t (*)(void))sub_1C128B574, (uint64_t)&type metadata for A12_V3.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C128B574();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C128B630(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C128B574()
{
  unint64_t result = qword_1EA1ADAA8;
  if (!qword_1EA1ADAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAA8);
  }
  return result;
}

void sub_1C128B5C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C128B630(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V3.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C128B744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V3.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V3.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C128B780()
{
  unint64_t result = qword_1EA1ADAB8;
  if (!qword_1EA1ADAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAB8);
  }
  return result;
}

unint64_t sub_1C128B7D8()
{
  unint64_t result = qword_1EA1ADAC0;
  if (!qword_1EA1ADAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAC0);
  }
  return result;
}

unint64_t sub_1C128B830()
{
  unint64_t result = qword_1EA1ADAC8;
  if (!qword_1EA1ADAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAC8);
  }
  return result;
}

uint64_t destroy for LayeredMediaLayerRenderable(uint64_t a1)
{
  return sub_1C124B28C(*(void **)a1, *(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
}

uint64_t initializeWithCopy for LayeredMediaLayerRenderable(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  char v21 = *(unsigned char *)(a2 + 136);
  sub_1C124B188(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(unsigned char *)(a1 + 136) = v21;
  return a1;
}

uint64_t assignWithCopy for LayeredMediaLayerRenderable(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v27 = *(void *)(a2 + 72);
  uint64_t v28 = *(void *)(a2 + 80);
  uint64_t v29 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v31 = *(void *)(a2 + 104);
  uint64_t v32 = *(void *)(a2 + 112);
  uint64_t v33 = *(void *)(a2 + 120);
  uint64_t v34 = *(void *)(a2 + 128);
  char v35 = *(unsigned char *)(a2 + 136);
  sub_1C124B188(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34, v35);
  uint64_t v12 = *(void **)a1;
  uint64_t v13 = *(void **)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 128);
  char v25 = *(unsigned char *)(a1 + 136);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v27;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v29;
  *(void *)(a1 + 96) = v30;
  *(void *)(a1 + 104) = v31;
  *(void *)(a1 + 112) = v32;
  *(void *)(a1 + 120) = v33;
  *(void *)(a1 + 128) = v34;
  *(unsigned char *)(a1 + 136) = v35;
  sub_1C124B28C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, v25);
  return a1;
}

uint64_t assignWithTake for LayeredMediaLayerRenderable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 128);
  char v4 = *(unsigned char *)(a2 + 136);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = *(_OWORD *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 128);
  char v18 = *(unsigned char *)(a1 + 136);
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  long long v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  long long v21 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v21;
  long long v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
  *(void *)(a1 + 128) = v3;
  *(unsigned char *)(a1 + 136) = v4;
  sub_1C124B28C(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMediaLayerRenderable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 137)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 136) >> 7) | (2
                                               * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (((*(unsigned __int8 *)(a1 + 136) >> 1) & 0x3F) << 7)))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaLayerRenderable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)unint64_t result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 137) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(unsigned char *)(result + 136) = (v3 >> 6) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_1C128BD08(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 136) & 1 | (a2 << 7);
  *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(unsigned char *)(result + 136) = v2;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayerRenderable()
{
  return &type metadata for LayeredMediaLayerRenderable;
}

uint64_t static FormatContentSubgroupFilterPrecededBy.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t FormatContentSubgroupFilterPrecededBy.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C128BD98(uint64_t a1)
{
  unint64_t v2 = sub_1C128BF5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C128BDD4(uint64_t a1)
{
  unint64_t v2 = sub_1C128BF5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterPrecededBy.encode(to:)(void *a1)
{
  sub_1C128C134(0, &qword_1EA1ADAD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C128BF5C();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C128BF5C()
{
  unint64_t result = qword_1EA1ADAD8;
  if (!qword_1EA1ADAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAD8);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterPrecededBy.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C128C134(0, &qword_1EA1ADAE0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C128BF5C();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = sub_1C152069C();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C128C134(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C128BF5C();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C128C198(void *a1)
{
  a1[1] = sub_1C0C324C4();
  a1[2] = sub_1C0C3257C();
  unint64_t result = sub_1C128C1D0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C128C1D0()
{
  unint64_t result = qword_1EA1ADAE8;
  if (!qword_1EA1ADAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAE8);
  }
  return result;
}

uint64_t sub_1C128C224@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupFilterPrecededBy.init(from:)(a1, a2);
}

uint64_t sub_1C128C23C(void *a1)
{
  sub_1C128C134(0, &qword_1EA1ADAD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C128BF5C();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterPrecededBy()
{
  return &type metadata for FormatContentSubgroupFilterPrecededBy;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupFilterPrecededBy.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C128C434);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterPrecededBy.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterPrecededBy.CodingKeys;
}

unint64_t sub_1C128C470()
{
  unint64_t result = qword_1EA1ADAF0;
  if (!qword_1EA1ADAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAF0);
  }
  return result;
}

unint64_t sub_1C128C4C8()
{
  unint64_t result = qword_1EA1ADAF8;
  if (!qword_1EA1ADAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADAF8);
  }
  return result;
}

unint64_t sub_1C128C520()
{
  unint64_t result = qword_1EA1ADB00;
  if (!qword_1EA1ADB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB00);
  }
  return result;
}

uint64_t FeedServiceConfigFetcherType.logName.getter()
{
  return 0;
}

uint64_t *AnyFeedServiceConfigFetcher.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  unint64_t v6 = sub_1C008D8EC(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

uint64_t AnyFeedServiceConfigFetcher.logName.getter()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t AnyFeedServiceConfigFetcher.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyFeedServiceConfigFetcher.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C128C69C()
{
  return AnyFeedServiceConfigFetcher.logName.getter();
}

uint64_t sub_1C128C6C0()
{
  return AnyFeedServiceConfigFetcher.fetchConfig(context:)();
}

uint64_t sub_1C128C6E4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t dispatch thunk of FeedServiceConfigFetcherType.logName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedServiceConfigFetcherType.fetchConfig(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t method lookup function for AnyFeedServiceConfigFetcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnyFeedServiceConfigFetcher);
}

uint64_t dispatch thunk of AnyFeedServiceConfigFetcher.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C128C744()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 40) + 40))();
}

uint64_t sub_1C128C7B4(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return 0x6C616974696E69;
  }
  if (a3 != 1) {
    return 0x676E616863206F6ELL;
  }
  sub_1C0D03404(a1, a2, 1);
  swift_bridgeObjectRelease();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v3 = 0x287365676E616863;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C128C8AC()
{
  uint64_t v1 = v0;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  uint64_t v2 = *v0;
  uint64_t v3 = v1[1];
  char v4 = *((unsigned char *)v1 + 16);
  sub_1C0D03404(*v1, v3, v4);
  sub_1C128C7B4(v2, v3, v4);
  sub_1C0D0333C(v2, v3, v4);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v5 = type metadata accessor for DebugFormatPackagesDelta();
  if (*(unint64_t *)((char *)v1 + *(int *)(v5 + 20)) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  if (*(unint64_t *)((char *)v1 + *(int *)(v5 + 24)) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 0x3D64616F6C7BLL;
}

uint64_t type metadata accessor for DebugFormatPackagesDelta()
{
  uint64_t result = qword_1EA1ADB08;
  if (!qword_1EA1ADB08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C128CB04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_1C0D03404(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
    uint64_t v11 = *(int *)(v10 + 28);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_1C151928C();
    long long v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    long long v16 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    v15(v12 + v16[5], v13 + v16[5], v14);
    uint64_t v17 = v16[6];
    char v18 = (void *)(v12 + v17);
    long long v19 = (void *)(v13 + v17);
    uint64_t v20 = v19[1];
    *char v18 = *v19;
    v18[1] = v20;
    *(unsigned char *)(v12 + v16[7]) = *(unsigned char *)(v13 + v16[7]);
    uint64_t v21 = *(int *)(a3 + 24);
    *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
    *(void *)(a1 + v21) = *(void *)(a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1C128CCB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C128CD18(uint64_t a1)
{
  sub_1C0D0333C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  uint64_t v4 = sub_1C151928C();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v5(v3 + *(int *)(v6 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C128CE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_1C0D03404(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151928C();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  v14(v11, v12, v13);
  long long v15 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v14(v11 + v15[5], v12 + v15[5], v13);
  uint64_t v16 = v15[6];
  uint64_t v17 = (void *)(v11 + v16);
  char v18 = (void *)(v12 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(unsigned char *)(v11 + v15[7]) = *(unsigned char *)(v12 + v15[7]);
  uint64_t v20 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C128CF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_1C0D03404(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  char v11 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v8;
  sub_1C0D0333C(v9, v10, v11);
  sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  uint64_t v13 = *(int *)(v12 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C151928C();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  char v18 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v17(v14 + v18[5], v15 + v18[5], v16);
  uint64_t v19 = v18[6];
  uint64_t v20 = (void *)(v14 + v19);
  uint64_t v21 = (void *)(v15 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + v18[7]) = *(unsigned char *)(v15 + v18[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C128D12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151928C();
  char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v11(v8 + v12[5], v9 + v12[5], v10);
  *(_OWORD *)(v8 + v12[6]) = *(_OWORD *)(v9 + v12[6]);
  *(unsigned char *)(v8 + v12[7]) = *(unsigned char *)(v9 + v12[7]);
  uint64_t v13 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_1C128D260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1C0D0333C(v7, v8, v9);
  sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1C151928C();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  uint64_t v16 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v15(v12 + v16[5], v13 + v16[5], v14);
  uint64_t v17 = v16[6];
  char v18 = (void *)(v12 + v17);
  uint64_t v19 = (uint64_t *)(v13 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *char v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + v16[7]) = *(unsigned char *)(v13 + v16[7]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C128D3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C128D3DC);
}

uint64_t sub_1C128D3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C128D4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C128D4E0);
}

void sub_1C128D4E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C128CCB4(0, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_1C128D5CC()
{
  sub_1C128CCB4(319, &qword_1EA1A60C0, (uint64_t (*)(uint64_t))sub_1C00BB6A4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t dispatch thunk of PublisherLogoImageRequestProviding.publisherLogoImageProcessorRequest(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id cast<A>(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C151FD8C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v15 - v8;
  v15[1] = a1;
  sub_1C128D898();
  id v10 = a1;
  char v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v11)
  {
    uint64_t v13 = *(void *)(a2 - 8);
    v12(v9, 0, 1, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a3, v9, a2);
    return objc_msgSend(v10, sel_setHidden_, 0);
  }
  else
  {
    v12(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    objc_msgSend(v10, sel_setHidden_, 1);
    sub_1C128D8D8();
    swift_allocError();
    return (id)swift_willThrow();
  }
}

unint64_t sub_1C128D898()
{
  unint64_t result = qword_1EA1ADB18;
  if (!qword_1EA1ADB18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB18);
  }
  return result;
}

unint64_t sub_1C128D8D8()
{
  unint64_t result = qword_1EA1ADB20;
  if (!qword_1EA1ADB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedItemError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C128D9C8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemError()
{
  return &type metadata for FeedItemError;
}

unint64_t sub_1C128DA04()
{
  unint64_t result = qword_1EA1ADB28;
  if (!qword_1EA1ADB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB28);
  }
  return result;
}

uint64_t sub_1C128DA58@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v13 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)(a4 + 24) = &type metadata for FormatCommand;
      *(void *)(a4 + 32) = &off_1F1BFC530;
      *(void *)a4 = v13;
      unint64_t result = swift_retain();
      break;
    case 2uLL:
      uint64_t v9 = result;
      uint64_t v11 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C125B77C(a2, v9, v11, v10);
      sub_1C128DA58(v9, a2, v12);
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t result = swift_release();
      break;
    case 3uLL:
      *(void *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      break;
    default:
      uint64_t v5 = type metadata accessor for FormatCommandOpenURL();
      uint64_t v6 = swift_projectBox();
      *(void *)(a4 + 24) = v5;
      *(void *)(a4 + 32) = &off_1F1B957A0;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
      unint64_t result = sub_1C128DE18(v6, (uint64_t)boxed_opaque_existential_0);
      break;
  }
  return result;
}

uint64_t sub_1C128DBB4(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - v8;
  switch(a1 >> 62)
  {
    case 1uLL:
      if (a2 >> 62 != 1) {
        goto LABEL_13;
      }
      uint64_t v13 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)(v13 + 32);
      __int16 v16 = *(_WORD *)(v13 + 40);
      uint64_t v17 = *(void *)(v14 + 32);
      __int16 v18 = *(_WORD *)(v14 + 40);
      long long v30 = *(_OWORD *)(v13 + 16);
      uint64_t v31 = v15;
      __int16 v32 = v16;
      long long v27 = *(_OWORD *)(v14 + 16);
      uint64_t v28 = v17;
      __int16 v29 = v18;
      char v12 = static FormatCommandBinding.== infix(_:_:)(&v30, &v27);
      return v12 & 1;
    case 2uLL:
      if (a2 >> 62 != 2) {
        goto LABEL_13;
      }
      uint64_t v19 = a1 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v20 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)(v19 + 24);
      uint64_t v22 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v23 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)(v22 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (sub_1C00F004C(v20, v23))
      {
        char v25 = sub_1C128DBB4(v21, v24);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_11;
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      goto LABEL_13;
    case 3uLL:
      if (a2 != 0xC000000000000000) {
        goto LABEL_13;
      }
LABEL_11:
      char v12 = 1;
      break;
    default:
      if (a2 >> 62)
      {
LABEL_13:
        char v12 = 0;
      }
      else
      {
        uint64_t v10 = swift_projectBox();
        uint64_t v11 = swift_projectBox();
        sub_1C128DE18(v10, (uint64_t)v9);
        sub_1C128DE18(v11, (uint64_t)v6);
        char v12 = _s8NewsFeed20FormatCommandOpenURLO2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v6);
        sub_1C128DE7C((uint64_t)v6);
        sub_1C128DE7C((uint64_t)v9);
      }
      break;
  }
  return v12 & 1;
}

uint64_t sub_1C128DE0C(unint64_t *a1, unint64_t *a2)
{
  return sub_1C128DBB4(*a1, *a2);
}

uint64_t sub_1C128DE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCommandOpenURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C128DE7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatCommandOpenURL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenuItemAction()
{
  return &type metadata for FormatMenuItemAction;
}

unint64_t sub_1C128DEE8()
{
  unint64_t result = qword_1EB891850;
  if (!qword_1EB891850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891850);
  }
  return result;
}

unint64_t sub_1C128DF3C(uint64_t a1)
{
  unint64_t result = sub_1C0077AAC();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C128E020@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v5 = result;
  int v7 = *(unsigned __int8 *)(v2 + 16);
  if (*(void *)v2)
  {
    MEMORY[0x1F4188790](result);
    uint64_t v29 = v5;
    uint64_t v30 = v8;
    unint64_t result = sub_1C0182C00((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1C128E91C, (uint64_t)v28, v9);
    if (v3) {
      return result;
    }
    uint64_t v10 = result;
    if (v7 != 255) {
      goto LABEL_16;
    }
LABEL_14:
    uint64_t v26 = 0;
    char v27 = -2;
    goto LABEL_19;
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (*(void *)(v2 + 8))
  {
    MEMORY[0x1F4188790](result);
    uint64_t v29 = v5;
    uint64_t v30 = v11;
    unint64_t result = (uint64_t)sub_1C02837C0((void (*)(long long *__return_ptr, void *))sub_1C1087998, (uint64_t)v28, v12);
    if (v3) {
      return result;
    }
    uint64_t v13 = result;
    int64_t v14 = *(void *)(result + 16);
    if (!v14)
    {
      unint64_t result = swift_bridgeObjectRelease();
      if (v7 == 255) {
        goto LABEL_14;
      }
      goto LABEL_16;
    }
    int v38 = v7;
    uint64_t v32 = v5;
    uint64_t v33 = a2;
    uint64_t v34 = 0;
    uint64_t v36 = v10;
    sub_1C05F6824(0, v14, 0);
    uint64_t v10 = v36;
    uint64_t v31 = v13;
    uint64_t v15 = (void *)(v13 + 72);
    do
    {
      uint64_t v35 = v10;
      uint64_t v16 = *(v15 - 5);
      uint64_t v17 = *(v15 - 4);
      char v18 = *((unsigned char *)v15 - 24);
      uint64_t v19 = (void *)*(v15 - 2);
      char v20 = *((unsigned char *)v15 - 8);
      uint64_t v21 = *v15;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v16;
      *(void *)(v22 + 24) = v17;
      *(unsigned char *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = v19;
      *(unsigned char *)(v22 + 48) = v20;
      *(void *)(v22 + 56) = v21;
      sub_1C04B5340(v16, v17, v18);
      uint64_t v23 = v19;
      uint64_t v10 = v35;
      sub_1C01DCFFC(v23, v20);
      uint64_t v36 = v10;
      unint64_t v25 = *(void *)(v10 + 16);
      unint64_t v24 = *(void *)(v10 + 24);
      swift_retain();
      if (v25 >= v24 >> 1)
      {
        sub_1C05F6824(v24 > 1, v25 + 1, 1);
        uint64_t v10 = v36;
      }
      *(void *)(v10 + 16) = v25 + 1;
      *(void *)(v10 + 8 * v25 + 32) = v22;
      v15 += 6;
      --v14;
    }
    while (v14);
    unint64_t result = swift_bridgeObjectRelease();
    a2 = v33;
    uint64_t v4 = v34;
    uint64_t v5 = v32;
    int v7 = v38;
  }
  if (v7 == 255) {
    goto LABEL_14;
  }
LABEL_16:
  char v39 = v7 & 1;
  unint64_t result = sub_1C131A4D4(v5, (uint64_t)&v36);
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v26 = v36;
  char v27 = v37;
LABEL_19:
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v26;
  *(unsigned char *)(a2 + 16) = v27;
  return result;
}

unint64_t sub_1C128E2B8()
{
  return 0xD000000000000019;
}

uint64_t sub_1C128E2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C128E760(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C128E300(uint64_t a1)
{
  unint64_t v2 = sub_1BFCE5B6C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C128E33C(uint64_t a1)
{
  unint64_t v2 = sub_1BFCE5B6C();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL _s8NewsFeed10FormatMenuV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1)
  {
    if (!v5) {
      return 0;
    }
    swift_bridgeObjectRetain();
    int v7 = (void *)swift_bridgeObjectRetain();
    char v8 = sub_1C00F15BC(v7, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  if (v2)
  {
    if (!v4) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_bridgeObjectRetain();
    char v10 = sub_1C00EE6A0(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  if (v3 == 255) {
    return v6 == 255;
  }
  if (v6 == 255) {
    return 0;
  }
  if (v3)
  {
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1C128E474(void *a1)
{
  a1[1] = sub_1C00849FC();
  a1[2] = sub_1C003F33C();
  unint64_t result = sub_1C128E4AC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C128E4AC()
{
  unint64_t result = qword_1EA1ADB30;
  if (!qword_1EA1ADB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB30);
  }
  return result;
}

uint64_t sub_1C128E504(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatMenu(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenu()
{
  return &type metadata for FormatMenu;
}

unsigned char *storeEnumTagSinglePayload for FormatMenu.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C128E6D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenu.CodingKeys()
{
  return &type metadata for FormatMenu.CodingKeys;
}

unint64_t sub_1C128E70C()
{
  unint64_t result = qword_1EA1ADB38;
  if (!qword_1EA1ADB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB38);
  }
  return result;
}

uint64_t sub_1C128E760(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xED0000736D657449)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C128E8CC()
{
  sub_1C04B5360(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_1C01DD018(*(void **)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C128E91C@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1C11CB348(*(uint64_t **)(v3 + 16), *(void *)(v3 + 24), *a1, a3);
  if (v4) {
    *a2 = v4;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCustomItemBinding()
{
  return &type metadata for FormatCustomItemBinding;
}

void *sub_1C128E968(uint64_t a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
  sub_1C0181BEC(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  int v7 = (void *)(v6 + v5);
  uint64_t v8 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  *(void *)&v31[0] = *(void *)(*(void *)(v8 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28))
                                 + 16);
  *(void *)&v33[0] = sub_1C152088C();
  *((void *)&v33[0] + 1) = v9;
  sub_1C151E80C();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C0B388C8(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1C0235950(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1C0233FC8(v12);
  swift_bridgeObjectRelease();
  int64_t v14 = sub_1C131B79C(v13);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v14, *(uint64_t *)&v33[0], *((uint64_t *)&v33[0] + 1), v7);
  uint64_t v15 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 0, 1, v15);
  sub_1C09BCFA4(0x49206D6F74737543, 0xEB000000006D6574, 0, 0, v6, v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v16 = swift_allocObject();
  *(void *)(inited + 32) = v16;
  *(void *)(v16 + 48) = v30;
  long long v17 = v29[1];
  *(_OWORD *)(v16 + 16) = v29[0];
  *(_OWORD *)(v16 + 32) = v17;
  uint64_t v28 = a1;
  uint64_t v18 = sub_1C0182060((void (*)(char *))sub_1C128EDF0, (uint64_t)v27, (uint64_t)&unk_1F1B88EC0);
  sub_1C09BCFA4(1954047316, 0xE400000000000000, 0, 0, v18, v31);
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 104) = &off_1F1BDEC90;
  uint64_t v19 = swift_allocObject();
  *(void *)(inited + 72) = v19;
  *(void *)(v19 + 48) = v32;
  long long v20 = v31[1];
  *(_OWORD *)(v19 + 16) = v31[0];
  *(_OWORD *)(v19 + 32) = v20;
  void v26[2] = a1;
  uint64_t v21 = sub_1C0184088((void (*)(uint64_t))sub_1C128EE10, (uint64_t)v26, (uint64_t)&unk_1F1B88EE8);
  sub_1C09BCFA4(5001813, 0xE300000000000000, 0, 0, v21, v33);
  swift_bridgeObjectRelease();
  *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 144) = &off_1F1BDEC90;
  uint64_t v22 = swift_allocObject();
  *(void *)(inited + 112) = v22;
  *(void *)(v22 + 48) = v34;
  long long v23 = v33[1];
  *(_OWORD *)(v22 + 16) = v33[0];
  *(_OWORD *)(v22 + 32) = v23;
  unint64_t v24 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v24;
}

uint64_t sub_1C128EDA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C128EDF0@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0CD953C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C128EE10@<X0>(void *a1@<X8>)
{
  return sub_1C039C984(*(void *)(v1 + 16), a1);
}

uint64_t dispatch thunk of FeedLayoutDatabaseType.read(cacheKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeedLayoutDatabaseType.save(cacheKey:feedGroupLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1C128EE58(uint64_t a1, uint64_t *a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v3, 0);
    uint64_t result = v26;
    uint64_t v6 = (uint64_t *)(a1 + 40);
    long long v20 = a2;
    do
    {
      uint64_t v22 = result;
      int v7 = (void *)*(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = *(void **)(*a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
      uint64_t v10 = v9[3];
      if (v10)
      {
        uint64_t v25 = v9[2];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        sub_1C151E80C();
        uint64_t v11 = v10;
        uint64_t v23 = v25;
        uint64_t v12 = v9[7];
        if (!v12) {
          goto LABEL_7;
        }
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v23 = (uint64_t)v7;
        uint64_t v11 = v8;
        uint64_t v12 = v9[7];
        if (!v12)
        {
LABEL_7:
          swift_release();
          goto LABEL_8;
        }
      }
      uint64_t v13 = *(void *)(v12 + 32);
      uint64_t v21 = v7;
      uint64_t v14 = v9[6];
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = *(void *)(v13 + 16);
      *(void *)(v13 + 16) = 0x8000000000000000;
      sub_1C1065DA0(v14, v23, v11, isUniquelyReferenced_nonNull_native);
      *(void *)(v13 + 16) = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      swift_release();
      a2 = v20;
      swift_release();
      int v7 = v21;
      swift_bridgeObjectRelease();
LABEL_8:
      swift_retain();
      uint64_t v16 = sub_1BFF1DD20(v7, v8);
      swift_release();
      *a2 = v16;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = v22;
      unint64_t v18 = *(void *)(v22 + 16);
      unint64_t v17 = *(void *)(v22 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BFF661B8(v17 > 1, v18 + 1, 1);
        uint64_t result = v22;
      }
      v6 += 2;
      *(void *)(result + 16) = v18 + 1;
      uint64_t v19 = result + 16 * v18;
      *(void *)(v19 + 32) = v23;
      *(void *)(v19 + 40) = v11;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C128F0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t), void (*a8)(void), void (*a9)(uint64_t))
{
  uint64_t v12 = v9;
  sub_1C1517EFC();
  uint64_t v15 = *(void *)(*(void *)(v49 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v15 + 16) + 16))
  {
    uint64_t v50 = *(void *)(v49 + 56);
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_1BFEF3B08(v16);
    sub_1BFEF3808(v17);
    swift_release();
    uint64_t v18 = v50;
    if (a1) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v18 = sub_1BFEF3784();
  swift_release();
  if (!a1) {
    goto LABEL_14;
  }
LABEL_3:
  if (!*(void *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    a5(v18);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = a6(a2);
LABEL_17:
    swift_release();
    return v30;
  }
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v20 = *(void *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_1BFEF2D8C(v19, v20);
  if ((v22 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v23 = *(void *)(*(void *)(a4 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v24 = a7(v23, a1);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v26 = v24 >> 62;
  if (!(v24 >> 62))
  {
    uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v27) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C15204BC();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a5(v18);
    swift_bridgeObjectRelease();
    uint64_t v30 = a6(a2);
    swift_release();
    goto LABEL_17;
  }
LABEL_7:
  unint64_t v28 = v24 & 0xC000000000000001;
  if ((v24 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    uint64_t result = swift_retain();
    if ((v27 & 0x8000000000000000) == 0) {
      goto LABEL_10;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = MEMORY[0x1C18C7CB0](0, v24);
  if (v27 < 0) {
    goto LABEL_40;
  }
LABEL_10:
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v31 >= 1)
    {
      unint64_t v26 = v24 >> 62;
      unint64_t v28 = v24 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1C15204BC();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v29 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v29) {
    goto LABEL_42;
  }
LABEL_21:
  if (v29 < v27)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v28 && v27 != 1)
  {
    a8(0);
    uint64_t result = 1;
    do
    {
      uint64_t v32 = result + 1;
      sub_1C152015C();
      uint64_t result = v32;
    }
    while (v27 != v32);
  }
  if (!v26)
  {
    uint64_t v33 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v34 = 1;
    BOOL v35 = __OFSUB__(v27, 1);
    uint64_t v37 = v27 - 1;
    char v36 = (v37 < 0) ^ v35 | (v37 == 0);
    if (v37) {
      goto LABEL_28;
    }
LABEL_33:
    swift_retain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1C15204CC();
  uint64_t v33 = v40;
  uint64_t v34 = v41;
  unint64_t v43 = v42;
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v37 = (v43 >> 1) - v34;
  char v36 = (uint64_t)(v43 >> 1) <= v34;
  if (v43 >> 1 == v34) {
    goto LABEL_33;
  }
LABEL_28:
  if (!v36)
  {
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v38 = v33 + 8 * v34;
    do
    {
      v38 += 8;
      uint64_t v39 = swift_retain();
      a9(v39);
      swift_release();
      swift_release();
      --v37;
    }
    while (v37);
    swift_unknownObjectRelease();
LABEL_34:
    uint64_t v44 = ((uint64_t (*)(uint64_t))a5)(v18);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = v44;
    uint64_t v45 = a6(a2);
    if (!v12) {
      uint64_t v30 = v45;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return v30;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1C128F594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  sub_1C1517EFC();
  uint64_t v8 = *(void *)(*(void *)(v145 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v8 + 16) + 16))
  {
    uint64_t v144 = *(void *)(v145 + 56);
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1BFEF3B08(v9);
    sub_1BFEF3808(v10);
    swift_release();
    uint64_t v11 = v144;
    if (a1) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v11 = sub_1BFEF3784();
  swift_release();
  if (!a1) {
    goto LABEL_14;
  }
LABEL_3:
  if (!*(void *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    sub_1C040598C(v11);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1C1295484(a2);
LABEL_17:
    swift_release();
    return v22;
  }
  uint64_t v122 = v11;
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1BFEF2D8C(v12, v13);
  if ((v15 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v16 = *(void **)(*(void *)(a4 + 56) + 8 * v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v17 = sub_1C12A5FC4(v16, a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = v17 >> 62;
  if (v17 >> 62) {
    goto LABEL_118;
  }
  uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v20 = v122;
  if (!v19)
  {
LABEL_119:
    swift_bridgeObjectRelease();
    sub_1C040598C(v20);
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1C1295484(a2);
    swift_release();
    goto LABEL_17;
  }
  while (1)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      uint64_t v121 = MEMORY[0x1C18C7CB0](0, v17);
      if (v19 < 0) {
        goto LABEL_121;
      }
    }
    else
    {
      if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_122;
      }
      uint64_t v121 = *(void *)(v17 + 32);
      swift_retain();
      if (v19 < 0)
      {
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
    }
    if (v18)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v24 < 1) {
        goto LABEL_123;
      }
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C15204BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v21) {
        goto LABEL_123;
      }
    }
    if (v21 < v19) {
      goto LABEL_124;
    }
    if ((v17 & 0xC000000000000001) != 0 && v19 != 1)
    {
      type metadata accessor for FormatCustomNodeStyle();
      uint64_t v25 = 1;
      do
      {
        uint64_t v26 = v25 + 1;
        sub_1C152015C();
        uint64_t v25 = v26;
      }
      while (v19 != v26);
    }
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_1C15204CC();
      uint64_t v125 = v27;
      uint64_t v18 = v28;
      unint64_t v30 = v29;
      swift_bridgeObjectRelease_n();
      uint64_t v19 = v30 >> 1;
    }
    else
    {
      uint64_t v125 = (v17 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v18 = 1;
    }
    swift_retain();
    if (v18 == v19) {
      break;
    }
    swift_unknownObjectRetain();
    uint64_t v31 = v121;
    uint64_t v134 = v19;
    uint64_t v123 = a1;
    uint64_t v124 = v5;
    while (1)
    {
      if (v18 >= v19) {
        goto LABEL_116;
      }
      uint64_t v33 = *(void *)(v125 + 8 * v18);
      swift_beginAccess();
      int v34 = *(unsigned __int8 *)(v31 + 48);
      if (v34 == 2) {
        LOBYTE(v34) = *(unsigned char *)(v33 + 48);
      }
      char v133 = v34;
      uint64_t v35 = *(void *)(v31 + 24);
      uint64_t v132 = *(void *)(v31 + 16);
      uint64_t v36 = *(void *)(v31 + 40);
      uint64_t v130 = *(void *)(v31 + 32);
      uint64_t v37 = *(void *)(v31 + 56);
      uint64_t v38 = *(void *)(v33 + 56);
      swift_retain();
      uint64_t v131 = v35;
      swift_bridgeObjectRetain();
      uint64_t v129 = v36;
      swift_bridgeObjectRetain();
      uint64_t v128 = sub_1C1295224(v37, v38);
      swift_beginAccess();
      uint64_t v39 = *(void *)(v31 + 64);
      swift_beginAccess();
      unint64_t v5 = *(void **)(v33 + 64);
      char v146 = (void *)MEMORY[0x1E4FBC868];
      unint64_t v17 = *(void *)(v39 + 16);
      if (__OFADD__(v17, v5[2])) {
        break;
      }
      int64_t v139 = v5[2];
      uint64_t v127 = v18;
      sub_1C12A8824();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E3AC();
      uint64_t v143 = sub_1BFEF692C(0, v17, 0, MEMORY[0x1E4FBC860]);
      unint64_t v17 = *(void *)(v39 + 16);
      uint64_t v135 = v5;
      if (v17)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = v39 + 56;
        while (1)
        {
          unint64_t v5 = *(void **)(v18 - 24);
          uint64_t v40 = *(void *)(v18 - 16);
          char v141 = *(unsigned char *)(v18 - 8);
          uint64_t v41 = *(void *)v18;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v44 = sub_1BFEF2D8C((uint64_t)v5, v40);
          uint64_t v45 = v146[2];
          BOOL v46 = (v43 & 1) == 0;
          uint64_t v47 = v45 + v46;
          if (__OFADD__(v45, v46))
          {
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
            goto LABEL_117;
          }
          a1 = v43;
          if (v146[3] >= v47)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v50 = v146;
              if (v43) {
                goto LABEL_46;
              }
            }
            else
            {
              sub_1C106C798();
              uint64_t v50 = v146;
              if (a1) {
                goto LABEL_46;
              }
            }
          }
          else
          {
            sub_1C1057010(v47, isUniquelyReferenced_nonNull_native);
            unint64_t v48 = sub_1BFEF2D8C((uint64_t)v5, v40);
            if ((a1 & 1) != (v49 & 1)) {
              goto LABEL_125;
            }
            unint64_t v44 = v48;
            uint64_t v50 = v146;
            if (a1)
            {
LABEL_46:
              a1 = v17;
              uint64_t v51 = v50[7] + 32 * v44;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              *(void *)uint64_t v51 = v5;
              *(void *)(v51 + 8) = v40;
              *(unsigned char *)(v51 + 16) = v141;
              *(void *)(v51 + 24) = v41;
              goto LABEL_50;
            }
          }
          v50[(v44 >> 6) + 8] |= 1 << v44;
          uint64_t v52 = (void *)(v50[6] + 16 * v44);
          *uint64_t v52 = v5;
          v52[1] = v40;
          uint64_t v53 = v50[7] + 32 * v44;
          *(void *)uint64_t v53 = v5;
          *(void *)(v53 + 8) = v40;
          *(unsigned char *)(v53 + 16) = v141;
          *(void *)(v53 + 24) = v41;
          uint64_t v54 = v50[2];
          BOOL v55 = __OFADD__(v54, 1);
          uint64_t v56 = v54 + 1;
          if (v55) {
            goto LABEL_112;
          }
          a1 = v17;
          v50[2] = v56;
          swift_bridgeObjectRetain();
LABEL_50:
          char v146 = v50;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v57 = v143[2];
          unint64_t v58 = v143[3];
          swift_bridgeObjectRetain();
          if (v57 >= v58 >> 1) {
            uint64_t v143 = sub_1BFEF692C((void *)(v58 > 1), v57 + 1, 1, v143);
          }
          v18 += 32;
          v143[2] = v57 + 1;
          uint64_t v59 = &v143[2 * v57];
          v59[4] = v5;
          v59[5] = v40;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v17 = a1 - 1;
          if (a1 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v19 = v134;
            unint64_t v5 = v135;
            goto LABEL_55;
          }
        }
      }
      uint64_t v19 = v134;
LABEL_55:
      unsigned int v60 = sub_1BFEF692C(0, v139, 0, MEMORY[0x1E4FBC860]);
      unint64_t v17 = v5[2];
      if (!v17) {
        goto LABEL_94;
      }
      swift_bridgeObjectRetain();
      v5 += 7;
      do
      {
        a1 = *(v5 - 3);
        uint64_t v63 = *(v5 - 2);
        char v64 = *((unsigned char *)v5 - 8);
        uint64_t v65 = *v5;
        uint64_t v66 = v146[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v142 = v60;
        if (v66)
        {
          swift_bridgeObjectRetain();
          unint64_t v67 = sub_1BFEF2D8C(a1, v63);
          if (v68)
          {
            unint64_t v136 = v17;
            uint64_t v69 = v146[7] + 32 * v67;
            uint64_t v18 = *(void *)v69;
            uint64_t v70 = *(void *)(v69 + 8);
            int v71 = *(unsigned __int8 *)(v69 + 16);
            uint64_t v72 = *(void *)(v69 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v71 == 2) {
              char v73 = v64;
            }
            else {
              char v73 = v71;
            }
            char v138 = v73;
            uint64_t v74 = v72;
            if (!v72) {
              uint64_t v74 = swift_bridgeObjectRetain();
            }
            uint64_t v137 = v74;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            unint64_t v17 = swift_isUniquelyReferenced_nonNull_native();
            a1 = v18;
            unint64_t v76 = sub_1BFEF2D8C(v18, v70);
            uint64_t v77 = v146[2];
            BOOL v78 = (v75 & 1) == 0;
            uint64_t v79 = v77 + v78;
            if (__OFADD__(v77, v78)) {
              goto LABEL_114;
            }
            uint64_t v18 = v75;
            if (v146[3] >= v79)
            {
              if (v17)
              {
                if ((v75 & 1) == 0) {
                  goto LABEL_83;
                }
              }
              else
              {
                sub_1C106C798();
                if ((v18 & 1) == 0) {
                  goto LABEL_83;
                }
              }
            }
            else
            {
              sub_1C1057010(v79, v17);
              unint64_t v80 = sub_1BFEF2D8C(a1, v70);
              if ((v18 & 1) != (v81 & 1)) {
                goto LABEL_125;
              }
              unint64_t v76 = v80;
              if ((v18 & 1) == 0)
              {
LABEL_83:
                v146[(v76 >> 6) + 8] |= 1 << v76;
                uint64_t v93 = (uint64_t *)(v146[6] + 16 * v76);
                uint64_t *v93 = a1;
                v93[1] = v70;
                uint64_t v94 = v146[7] + 32 * v76;
                *(void *)uint64_t v94 = a1;
                *(void *)(v94 + 8) = v70;
                *(unsigned char *)(v94 + 16) = v138;
                *(void *)(v94 + 24) = v137;
                uint64_t v95 = v146[2];
                BOOL v55 = __OFADD__(v95, 1);
                uint64_t v96 = v95 + 1;
                if (v55) {
                  goto LABEL_115;
                }
                v146[2] = v96;
                swift_bridgeObjectRetain();
                goto LABEL_58;
              }
            }
            uint64_t v61 = v146[7] + 32 * v76;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)uint64_t v61 = a1;
            *(void *)(v61 + 8) = v70;
            *(unsigned char *)(v61 + 16) = v138;
            *(void *)(v61 + 24) = v137;
LABEL_58:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            unsigned int v60 = v142;
            unint64_t v62 = v136;
            goto LABEL_59;
          }
          swift_bridgeObjectRelease();
        }
        char v140 = v64;
        swift_bridgeObjectRetain_n();
        uint64_t v82 = v65;
        swift_bridgeObjectRetain();
        uint64_t v18 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v83 = a1;
        unint64_t v85 = sub_1BFEF2D8C(a1, v63);
        uint64_t v86 = v146[2];
        BOOL v87 = (v84 & 1) == 0;
        uint64_t v88 = v86 + v87;
        if (__OFADD__(v86, v87)) {
          goto LABEL_111;
        }
        a1 = v84;
        if (v146[3] >= v88)
        {
          if (v18)
          {
            if ((v84 & 1) == 0) {
              goto LABEL_86;
            }
          }
          else
          {
            sub_1C106C798();
            if ((a1 & 1) == 0) {
              goto LABEL_86;
            }
          }
        }
        else
        {
          sub_1C1057010(v88, v18);
          unint64_t v89 = sub_1BFEF2D8C(v83, v63);
          if ((a1 & 1) != (v90 & 1)) {
            goto LABEL_125;
          }
          unint64_t v85 = v89;
          if ((a1 & 1) == 0)
          {
LABEL_86:
            v146[(v85 >> 6) + 8] |= 1 << v85;
            uint64_t v97 = (uint64_t *)(v146[6] + 16 * v85);
            uint64_t *v97 = v83;
            v97[1] = v63;
            uint64_t v98 = v146[7] + 32 * v85;
            *(void *)uint64_t v98 = v83;
            *(void *)(v98 + 8) = v63;
            *(unsigned char *)(v98 + 16) = v140;
            *(void *)(v98 + 24) = v82;
            uint64_t v99 = v146[2];
            BOOL v55 = __OFADD__(v99, 1);
            uint64_t v100 = v99 + 1;
            if (v55) {
              goto LABEL_113;
            }
            unint64_t v91 = v17;
            v146[2] = v100;
            swift_bridgeObjectRetain();
            goto LABEL_88;
          }
        }
        unint64_t v91 = v17;
        uint64_t v92 = v146[7] + 32 * v85;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v92 = v83;
        *(void *)(v92 + 8) = v63;
        *(unsigned char *)(v92 + 16) = v140;
        *(void *)(v92 + 24) = v82;
LABEL_88:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned int v60 = v142;
        unint64_t v101 = v142[2];
        unint64_t v102 = v142[3];
        swift_bridgeObjectRetain();
        if (v101 >= v102 >> 1) {
          unsigned int v60 = sub_1BFEF692C((void *)(v102 > 1), v101 + 1, 1, v142);
        }
        v60[2] = v101 + 1;
        uint64_t v103 = &v60[2 * v101];
        unsigned char v103[4] = v83;
        v103[5] = v63;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v62 = v91;
LABEL_59:
        v5 += 4;
        unint64_t v17 = v62 - 1;
      }
      while (v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = v134;
LABEL_94:
      swift_bridgeObjectRetain();
      uint64_t v104 = swift_bridgeObjectRetain();
      sub_1BFEF6AA0(v104);
      uint64_t v105 = v60[2];
      if (v105)
      {
        swift_bridgeObjectRetain();
        uint64_t v106 = v60 + 5;
        uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if (v146[2])
          {
            uint64_t v108 = *(v106 - 1);
            uint64_t v109 = *v106;
            swift_bridgeObjectRetain_n();
            unint64_t v110 = sub_1BFEF2D8C(v108, v109);
            if (v111)
            {
              uint64_t v112 = v146[7] + 32 * v110;
              uint64_t v114 = *(void *)v112;
              uint64_t v113 = *(void *)(v112 + 8);
              char v115 = *(unsigned char *)(v112 + 16);
              uint64_t v116 = *(void *)(v112 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v107 = sub_1C0EE0C28(0, v107[2] + 1, 1, v107);
              }
              unint64_t v118 = v107[2];
              unint64_t v117 = v107[3];
              if (v118 >= v117 >> 1) {
                uint64_t v107 = sub_1C0EE0C28((void *)(v117 > 1), v118 + 1, 1, v107);
              }
              v107[2] = v118 + 1;
              uint64_t v119 = &v107[4 * v118];
              v119[4] = v114;
              v119[5] = v113;
              *((unsigned char *)v119 + 48) = v115;
              v119[7] = v116;
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }
          }
          v106 += 2;
          --v105;
        }
        while (v105);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v134;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v18 = v127 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v17 = (unint64_t)v146;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatCustomNodeStyle();
      uint64_t v32 = swift_allocObject();
      swift_beginAccess();
      *(void *)(v32 + 16) = v132;
      *(void *)(v32 + 24) = v131;
      *(void *)(v32 + 32) = v130;
      *(void *)(v32 + 40) = v129;
      *(unsigned char *)(v32 + 48) = v133;
      *(void *)(v32 + 56) = v128;
      swift_beginAccess();
      *(void *)(v32 + 64) = v107;
      swift_release();
      swift_release();
      uint64_t v31 = v32;
      a1 = v123;
      unint64_t v5 = v124;
      if (v127 + 1 == v19)
      {
        swift_unknownObjectRelease();
        goto LABEL_107;
      }
    }
LABEL_117:
    __break(1u);
LABEL_118:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v20 = v122;
    if (!v19) {
      goto LABEL_119;
    }
  }
LABEL_107:
  uint64_t v22 = v122;
  sub_1C040598C(v122);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v120 = sub_1C1295484(a2);
  if (!v5) {
    uint64_t v22 = v120;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v22;
}

uint64_t sub_1C1290390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), void (*a6)(uint64_t *__return_ptr, void *, uint64_t *), uint64_t (*a7)(uint64_t, uint64_t), void (*a8)(void), void (*a9)(uint64_t))
{
  uint64_t v12 = v9;
  sub_1C1517EFC();
  uint64_t v15 = *(void *)(*(void *)(v49 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v15 + 16) + 16))
  {
    uint64_t v50 = *(void *)(v49 + 56);
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_1BFEF3B08(v16);
    sub_1BFEF3808(v17);
    swift_release();
    uint64_t v18 = v50;
    if (a1) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v18 = sub_1BFEF3784();
  swift_release();
  if (!a1) {
    goto LABEL_14;
  }
LABEL_3:
  if (!*(void *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    a5(v18);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1C129979C(a2, a6);
LABEL_17:
    swift_release();
    return v30;
  }
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v20 = *(void *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_1BFEF2D8C(v19, v20);
  if ((v22 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v23 = *(void *)(*(void *)(a4 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v24 = a7(v23, a1);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v26 = v24 >> 62;
  if (!(v24 >> 62))
  {
    uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v27) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C15204BC();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a5(v18);
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1C129979C(a2, a6);
    swift_release();
    goto LABEL_17;
  }
LABEL_7:
  unint64_t v28 = v24 & 0xC000000000000001;
  if ((v24 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    uint64_t result = swift_retain();
    if ((v27 & 0x8000000000000000) == 0) {
      goto LABEL_10;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = MEMORY[0x1C18C7CB0](0, v24);
  if (v27 < 0) {
    goto LABEL_40;
  }
LABEL_10:
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v31 >= 1)
    {
      unint64_t v26 = v24 >> 62;
      unint64_t v28 = v24 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1C15204BC();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v29 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v29) {
    goto LABEL_42;
  }
LABEL_21:
  if (v29 < v27)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v28 && v27 != 1)
  {
    a8(0);
    uint64_t result = 1;
    do
    {
      uint64_t v32 = result + 1;
      sub_1C152015C();
      uint64_t result = v32;
    }
    while (v27 != v32);
  }
  if (!v26)
  {
    uint64_t v33 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v34 = 1;
    BOOL v35 = __OFSUB__(v27, 1);
    uint64_t v37 = v27 - 1;
    char v36 = (v37 < 0) ^ v35 | (v37 == 0);
    if (v37) {
      goto LABEL_28;
    }
LABEL_33:
    swift_retain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1C15204CC();
  uint64_t v33 = v40;
  uint64_t v34 = v41;
  unint64_t v43 = v42;
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v37 = (v43 >> 1) - v34;
  char v36 = (uint64_t)(v43 >> 1) <= v34;
  if (v43 >> 1 == v34) {
    goto LABEL_33;
  }
LABEL_28:
  if (!v36)
  {
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v38 = v33 + 8 * v34;
    do
    {
      v38 += 8;
      uint64_t v39 = swift_retain();
      a9(v39);
      swift_release();
      swift_release();
      --v37;
    }
    while (v37);
    swift_unknownObjectRelease();
LABEL_34:
    uint64_t v44 = ((uint64_t (*)(uint64_t))a5)(v18);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = v44;
    uint64_t v45 = sub_1C129979C(a2, a6);
    if (!v12) {
      uint64_t v30 = v45;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return v30;
  }
LABEL_44:
  __break(1u);
  return result;
}

void *sub_1C1290840@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  sub_1BFF8874C((uint64_t)a1, (uint64_t)v103, (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  uint64_t v4 = v103[0];
  uint64_t v5 = v103[1];
  uint64_t v7 = v103[2];
  uint64_t v6 = v103[3];
  __int16 v8 = v104;
  uint64_t v75 = v103[5];
  uint64_t v77 = v103[4];
  uint64_t v113 = v105;
  sub_1C1517EFC();
  uint64_t v9 = v109;
  uint64_t v10 = *(void *)(*(void *)(v109 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v10 + 16) + 16))
  {
    *(void *)&long long v109 = *(void *)(v9 + 56);
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BFEF3B08(v11);
    sub_1BFEF3808(v12);
    swift_release();
    uint64_t v72 = v109;
  }
  else
  {
    uint64_t v72 = sub_1BFEF3784();
    swift_release();
  }
  sub_1BFF8874C((uint64_t)a1, (uint64_t)v107, (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  if (!v108) {
    goto LABEL_11;
  }
  *(void *)&long long v109 = v4;
  *((void *)&v109 + 1) = v5;
  *(void *)&long long v110 = v7;
  *((void *)&v110 + 1) = v6;
  *(void *)&long long v111 = v77;
  *((void *)&v111 + 1) = v75;
  LOWORD(v112) = v8;
  *((void *)&v112 + 1) = v113;
  v106[0] = v109;
  v106[1] = v110;
  v106[2] = v111;
  v106[3] = v112;
  if (!*(void *)(a2 + 16)) {
    goto LABEL_11;
  }
  sub_1C08AA310(a1, (void (*)(void, void, void, void, void, void, void, void))sub_1C05DDB68);
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1BFEF2D8C(v7, v6);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1C08AA310(a1, (void (*)(void, void, void, void, void, void, void, void))sub_1C05DDBE4);
LABEL_11:
    sub_1BFF8874C((uint64_t)a1, (uint64_t)&v85, (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    sub_1BFF8874C((uint64_t)a1, (uint64_t)v106, (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    if (*((void *)&v106[0] + 1))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFEF6828(v77, v75, v8);
      swift_bridgeObjectRetain();
      sub_1C0CC528C(v72, &v94);
      swift_bridgeObjectRelease();
      uint64_t v32 = v89;
      uint64_t v33 = v90;
      char v34 = v91;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF68AC(v32, v33, v34);
      swift_bridgeObjectRelease();
      uint64_t v35 = v95;
      uint64_t v36 = v96;
      uint64_t v37 = v97;
      uint64_t v38 = v98;
      uint64_t v39 = v99;
      char v40 = v101;
      uint64_t v41 = v102;
      *(void *)a3 = v94;
      *(void *)(a3 + 8) = v35;
      *(void *)(a3 + 16) = v36;
      *(void *)(a3 + 24) = v37;
      *(void *)(a3 + 32) = v38;
      *(void *)(a3 + 40) = v39;
      char v42 = v100;
      *(unsigned char *)(a3 + 48) = v100;
      *(unsigned char *)(a3 + 49) = v40;
      *(void *)(a3 + 56) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFEF6828(v38, v39, v42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF68AC(v38, v39, v42);
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return (void *)sub_1BFF8874C((uint64_t)a1, a3, (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    }
  }
  uint64_t v15 = *(void **)(*(void *)(a2 + 56) + 8 * v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1C12A75A4(v15, (uint64_t)&v109);
  swift_bridgeObjectRelease();
  uint64_t v17 = v16[2];
  if (v17)
  {
    uint64_t v18 = v16[5];
    uint64_t v113 = v16[4];
    uint64_t v19 = v16[7];
    uint64_t v78 = v16[6];
    uint64_t v20 = v16[8];
    uint64_t v21 = v16[9];
    char v22 = *((unsigned char *)v16 + 80);
    char v23 = *((unsigned char *)v16 + 81);
    uint64_t v24 = v16[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v20, v21, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v20, v21, v22);
    uint64_t v25 = v19;
    uint64_t v26 = v17 - 1;
    uint64_t v76 = v20;
    uint64_t v71 = v21;
    char v70 = v22;
    if (v17 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = v18;
      uint64_t v28 = v25;
      uint64_t v29 = v24;
      char v30 = v22;
      uint64_t v31 = v29;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v53 = v16 + 19;
      uint64_t v27 = v18;
      uint64_t v28 = v25;
      uint64_t v54 = v24;
      char v30 = v22;
      uint64_t v31 = v54;
      uint64_t v55 = v113;
      uint64_t v56 = v78;
      do
      {
        long long v57 = *(_OWORD *)(v53 - 7);
        uint64_t v58 = *(v53 - 5);
        uint64_t v59 = *(v53 - 4);
        __int16 v60 = *((_WORD *)v53 - 4);
        uint64_t v61 = *v53;
        uint64_t v85 = v55;
        uint64_t v86 = v27;
        uint64_t v87 = v56;
        uint64_t v88 = v28;
        uint64_t v89 = v20;
        uint64_t v90 = v21;
        char v91 = v30;
        char v92 = v23;
        uint64_t v93 = v31;
        long long v79 = v57;
        uint64_t v80 = v58;
        uint64_t v81 = v59;
        long long v82 = *(_OWORD *)(v53 - 3);
        __int16 v83 = v60;
        uint64_t v84 = v61;
        sub_1C0CC47D4((uint64_t)&v79, (uint64_t)&v94);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF68AC(v20, v21, v30);
        swift_bridgeObjectRelease();
        uint64_t v55 = v94;
        uint64_t v27 = v95;
        uint64_t v56 = v96;
        uint64_t v28 = v97;
        uint64_t v20 = v98;
        uint64_t v21 = v99;
        char v30 = v100;
        char v23 = v101;
        v53 += 8;
        uint64_t v31 = v102;
        --v26;
      }
      while (v26);
      uint64_t v78 = v96;
      uint64_t v113 = v94;
      swift_bridgeObjectRelease();
    }
    uint64_t v85 = v113;
    uint64_t v86 = v27;
    uint64_t v87 = v78;
    uint64_t v88 = v28;
    uint64_t v89 = v20;
    uint64_t v90 = v21;
    char v91 = v30;
    char v92 = v23;
    uint64_t v93 = v31;
    sub_1C0CC528C(v72, &v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(v20, v21, v30);
    swift_bridgeObjectRelease();
    uint64_t v62 = v95;
    uint64_t v63 = v96;
    uint64_t v64 = v97;
    uint64_t v65 = v98;
    uint64_t v66 = v99;
    char v67 = v101;
    uint64_t v68 = v102;
    *(void *)a3 = v94;
    *(void *)(a3 + 8) = v62;
    *(void *)(a3 + 16) = v63;
    *(void *)(a3 + 24) = v64;
    *(void *)(a3 + 32) = v65;
    *(void *)(a3 + 40) = v66;
    char v69 = v100;
    *(unsigned char *)(a3 + 48) = v100;
    *(unsigned char *)(a3 + 49) = v67;
    *(void *)(a3 + 56) = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v65, v66, v69);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(v65, v66, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(v76, v71, v70);
    swift_bridgeObjectRelease();
    uint64_t v52 = a1;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0CC528C(v72, &v94);
    swift_bridgeObjectRelease();
    uint64_t v44 = v95;
    uint64_t v45 = v96;
    uint64_t v46 = v97;
    uint64_t v47 = v98;
    uint64_t v48 = v99;
    char v49 = v101;
    uint64_t v50 = v102;
    *(void *)a3 = v94;
    *(void *)(a3 + 8) = v44;
    *(void *)(a3 + 16) = v45;
    *(void *)(a3 + 24) = v46;
    *(void *)(a3 + 32) = v47;
    *(void *)(a3 + 40) = v48;
    char v51 = v100;
    *(unsigned char *)(a3 + 48) = v100;
    *(unsigned char *)(a3 + 49) = v49;
    *(void *)(a3 + 56) = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v47, v48, v51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEF68AC(v47, v48, v51);
    swift_bridgeObjectRelease();
    uint64_t v52 = a1;
  }
  return sub_1C08AA310(v52, (void (*)(void, void, void, void, void, void, void, void))sub_1C05DDBE4);
}

uint64_t sub_1C1290F40(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v46 = a6;
  uint64_t v47 = a7;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v8 = v7;
  uint64_t v50 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v48 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v51 = (uint64_t *)((char *)&v42 - v13);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v49 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  char v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FormatAdMetricsData();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = a1;
  swift_beginAccess();
  uint64_t v52 = v8;
  uint64_t v26 = *(void *)(v8 + 16);
  uint64_t v27 = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  uint64_t v28 = (uint64_t)v25;
  uint64_t v54 = sub_1BFF303E0(v26, v27);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v53 = a2;
  uint64_t v31 = v55;
  sub_1C1385EF8((uint64_t)a2, v28);
  if (v31) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v43 = v12;
  sub_1BFF1B214(v28, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatAdMetricsData);
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = v28;
  sub_1BFF1B214((uint64_t)v22, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  uint64_t v33 = v49;
  sub_1BFF235F0((uint64_t)v18, v49, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v34 = v54;
  sub_1BFF3D9D4(v33, v54, v30);
  swift_endAccess();
  sub_1C12AD324((uint64_t)v18, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BFF1BA48((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  swift_getKeyPath();
  uint64_t v35 = v52;
  unint64_t v56 = *(void *)(v52 + 48);
  unint64_t v36 = v56;
  swift_bridgeObjectRetain();
  sub_1BFF35EA4(v36);
  uint64_t v37 = v51;
  uint64_t v38 = v53;
  sub_1BFF30600(v53, v34, v30, v51);
  uint64_t v50 = v30;
  sub_1BFF322A8(v36);
  swift_beginAccess();
  swift_retain();
  uint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v49 = sub_1C12A4C68(v39, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_retain();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  char v40 = (void *)swift_allocObject();
  uint64_t v41 = v50;
  v40[2] = v54;
  v40[3] = v41;
  v40[4] = v38;
  v40[5] = v35;
  v45(0);
  v46();
  sub_1C15173EC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v48 + 8))(v37, v43);
  return sub_1BFF1BA48(v55, (uint64_t (*)(void))type metadata accessor for FormatAdMetricsData);
}

uint64_t sub_1C129153C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C00F5BA4(v2, (uint64_t)v30);
  int v6 = sub_1C00F5C00((uint64_t)v30);
  if (!v6)
  {
    uint64_t v12 = sub_1C00F5EAC((uint64_t)v30);
    sub_1C00F61EC(v12, (uint64_t)v24);
    sub_1C00F61EC((uint64_t)v24, (uint64_t)v27);
    sub_1C00F6034((uint64_t)v27, (uint64_t)v37);
    uint64_t result = sub_1C1298FA0(a1, (uint64_t)v26);
    if (v3) {
      return result;
    }
    sub_1C00F6034((uint64_t)v26, (uint64_t)&v22);
    sub_1C00F6034((uint64_t)&v22, (uint64_t)v23);
    nullsub_1(v23);
    sub_1C00F61EC((uint64_t)v23, (uint64_t)v29);
    sub_1C0862D98((uint64_t)v29);
LABEL_12:
    uint64_t v14 = v29;
    return sub_1C00F5BA4((uint64_t)v14, a2);
  }
  if (v6 == 1)
  {
    uint64_t v7 = sub_1C00F5EAC((uint64_t)v30);
    sub_1BFCF2D74(v7, (uint64_t)v31);
    sub_1BFCF2D74((uint64_t)v31, (uint64_t)v33);
    int v8 = sub_1C00F5F20((uint64_t)v33);
    uint64_t v9 = sub_1C00F5F2C((uint64_t)v33);
    if (v8 == 1)
    {
      char v10 = *(unsigned char *)(v9 + 8);
      uint64_t result = sub_1BFF64090(a1, *(void *)v9, (uint64_t *)v24);
      if (v3) {
        return result;
      }
      *(void *)&v27[0] = *(void *)&v24[0];
      BYTE8(v27[0]) = v10;
      sub_1C088E7EC((uint64_t)v27);
    }
    else
    {
      v34[0] = *(_OWORD *)v9;
      long long v15 = *(_OWORD *)(v9 + 16);
      long long v16 = *(_OWORD *)(v9 + 32);
      long long v17 = *(_OWORD *)(v9 + 64);
      uint64_t v34[3] = *(_OWORD *)(v9 + 48);
      v34[4] = v17;
      v34[1] = v15;
      v34[2] = v16;
      long long v18 = *(_OWORD *)(v9 + 80);
      long long v19 = *(_OWORD *)(v9 + 96);
      long long v20 = *(_OWORD *)(v9 + 112);
      char v35 = *(unsigned char *)(v9 + 128);
      v34[6] = v19;
      v34[7] = v20;
      v34[5] = v18;
      sub_1C00F6034((uint64_t)v34, (uint64_t)v36);
      uint64_t result = sub_1C1298FA0(a1, (uint64_t)v26);
      if (v3) {
        return result;
      }
      char v21 = v35;
      sub_1C00F6034((uint64_t)v26, (uint64_t)v23);
      sub_1C00F6034((uint64_t)v23, (uint64_t)v24);
      char v25 = v21;
      char v28 = v21;
      v27[6] = v24[6];
      v27[7] = v24[7];
      uint64_t v27[2] = v24[2];
      v27[3] = v24[3];
      v27[4] = v24[4];
      v27[5] = v24[5];
      v27[0] = v24[0];
      v27[1] = v24[1];
      sub_1C088E860((uint64_t)v27);
    }
    sub_1BFCF2D74((uint64_t)v27, (uint64_t)v29);
    sub_1C0862D24((uint64_t)v29);
    goto LABEL_12;
  }
  uint64_t v13 = sub_1C00F5EAC((uint64_t)v30);
  sub_1C12A82D8(v13, (uint64_t)v32);
  uint64_t v14 = (unsigned char *)v2;
  return sub_1C00F5BA4((uint64_t)v14, a2);
}

uint64_t sub_1C129179C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = v3;
  unint64_t v118 = (uint64_t (*)())a3;
  sub_1C12A89B8();
  uint64_t v108 = *(void *)(v7 - 8);
  uint64_t v109 = v7;
  MEMORY[0x1F4188790](v7);
  long long v110 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v111 = v9;
  uint64_t v119 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v112 = (uint64_t *)((char *)&v94 - v10);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v116 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v117 = (char *)&v94 - v14;
  uint64_t v15 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v113 = *(void *)(v15 - 8);
  uint64_t v114 = v15;
  MEMORY[0x1F4188790](v15);
  char v115 = (uint64_t *)((char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = a1;
  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v121 = a2;
  uint64_t v18 = sub_1BFF1B2E4(v17, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v19 = v4[2];
  uint64_t v20 = v4[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v120 = sub_1BFF303E0(v19, v20);
  uint64_t v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  uint64_t v24 = (uint64_t *)(*(void *)(v18 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v4[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v122;
  uint64_t v29 = sub_1C128F0D8(v27, v18, v25, v26, (void (*)(uint64_t))sub_1C0409F34, sub_1C1295644, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A6C44, (void (*)(void))type metadata accessor for FormatIssueCoverNodeStyle, (void (*)(uint64_t))sub_1C0408FA0);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v105 = v23;
  uint64_t v106 = (uint64_t *)v18;
  uint64_t v122 = v29;
  uint64_t v107 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v123 = v4[9];
  swift_retain();
  sub_1C12B20C8(v121, (uint64_t)&v129);
  uint64_t v98 = v4;
  uint64_t v99 = 0;
  swift_release();
  uint64_t v30 = v130;
  char v100 = v129;
  uint64_t v101 = v130;
  uint64_t v32 = v131;
  uint64_t v31 = v132;
  uint64_t v33 = v133;
  uint64_t v34 = v134;
  uint64_t v102 = v132;
  uint64_t v103 = v133;
  char v35 = v135;
  uint64_t v104 = v135;
  int v36 = v136;
  uint64_t v37 = v114;
  uint64_t v38 = (uint64_t)v115;
  *char v115 = v129;
  *(void *)(v38 + 8) = v30;
  *(void *)(v38 + 16) = v32;
  *(void *)(v38 + 24) = v31;
  *(void *)(v38 + 32) = v33;
  *(void *)(v38 + 40) = v34;
  *(void *)(v38 + 48) = v35;
  *(unsigned char *)(v38 + 56) = v36;
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = (uint64_t)v117;
  uint64_t v40 = *((void *)v118 + 3);
  sub_1BFF1B214(v38, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v39, 0, 1, v37);
  unint64_t v118 = type metadata accessor for FormatNodeStateData.Data;
  uint64_t v41 = v116;
  sub_1BFF235F0(v39, v116, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v114 = v40;
  swift_beginAccess();
  uint64_t v42 = v107;
  swift_bridgeObjectRetain();
  uint64_t v95 = v32;
  uint64_t v96 = v34;
  int v97 = v36;
  sub_1C00FA170(v100, v101, v32, v102, v103, v34, v104, v36);
  sub_1BFF3D9D4(v41, v120, v42);
  swift_endAccess();
  sub_1C12AD324(v39, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))v118);
  sub_1BFF1BA48(v38, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v43 = v106;
  uint64_t v44 = v122;
  if (v122)
  {
    unsigned int v45 = *(unsigned __int8 *)(v122 + 88);
    uint64_t v46 = 0;
    uint64_t v47 = v99;
    if (v45 <= 0xFD)
    {
      uint64_t v50 = *(void *)(v122 + 72);
      uint64_t v48 = *(char **)(v122 + 80);
      if ((v45 & 0x80) != 0)
      {
        v138.origin.CGFloat x = 0.0;
        v138.origin.CGFloat y = 0.0;
        v138.size.width = 0.0;
        v138.size.height = 0.0;
        double Height = CGRectGetHeight(v138);
        v139.origin.CGFloat x = 0.0;
        v139.origin.CGFloat y = 0.0;
        v139.size.width = 0.0;
        v139.size.height = 0.0;
        double Width = CGRectGetWidth(v139);
        if (Width >= Height) {
          double Width = Height;
        }
        double v49 = Width * 0.5;
        sub_1BFEF68AC(v50, (uint64_t)v48, v45);
        uint64_t v48 = (char *)&unk_1F1B65EF8;
      }
      else
      {
        double v49 = *(double *)(v122 + 72);
        sub_1BFF046A0(*(uint64_t *)&v49, *(void *)(v122 + 80), *(unsigned char *)(v122 + 88));
      }
      uint64_t v44 = v122;
    }
    else
    {
      uint64_t v48 = 0;
      double v49 = 0.0;
    }
    if (*(unsigned __int8 *)(v44 + 176) != 254) {
      uint64_t v46 = *(void *)(v44 + 96);
    }
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v46 = 0;
    double v49 = 0.0;
    uint64_t v47 = v99;
  }
  uint64_t v53 = (uint64_t *)(*(uint64_t *)((char *)v43 + v105) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = v98[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1BFEF32C8(v56, (uint64_t)v43, v54, v55, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v59 = v57;
  uint64_t v99 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v59)
  {
    swift_beginAccess();
    uint64_t v60 = *(void *)(v59 + 72);
    uint64_t v61 = v112;
    if (!v60 || !*(void *)(v60 + 16))
    {
      unint64_t v117 = v48;
      unint64_t v118 = (uint64_t (*)())v59;
      goto LABEL_26;
    }
    uint64_t v62 = *(void *)(v59 + 48);
    uint64_t v63 = *(void *)(v59 + 56);
    int v64 = *(unsigned __int8 *)(v59 + 64);
    swift_retain();
    swift_retain();
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v66 = v99;
    uint64_t v67 = sub_1C12A4950(v65, (uint64_t)v43);
    if (v66)
    {
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    unint64_t v117 = v48;
    uint64_t v99 = 0;
    uint64_t v84 = v67;
    swift_bridgeObjectRelease();
    swift_release();
    if (v64) {
      uint64_t v85 = 0;
    }
    else {
      uint64_t v85 = v63;
    }
    if (v64) {
      uint64_t v86 = 0;
    }
    else {
      uint64_t v86 = v62;
    }
    type metadata accessor for FormatAnimationData();
    uint64_t v87 = swift_allocObject();
    unint64_t v118 = (uint64_t (*)())v59;
    *(void *)(v87 + 16) = v59;
    *(void *)(v87 + 24) = v86;
    *(void *)(v87 + 32) = v85;
    *(unsigned char *)(v87 + 40) = v64;
    uint64_t v88 = v114;
    *(void *)(v87 + 48) = v84;
    swift_beginAccess();
    swift_retain_n();
    uint64_t v89 = v107;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = *(void *)(v88 + 32);
    *(void *)(v88 + 32) = 0x8000000000000000;
    sub_1C0062D34(v87, v120, v89, isUniquelyReferenced_nonNull_native);
    *(void *)(v88 + 32) = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
  }
  else
  {
    unint64_t v117 = v48;
    unint64_t v118 = 0;
  }
  uint64_t v61 = v112;
LABEL_26:
  uint64_t KeyPath = swift_getKeyPath();
  char v69 = v98;
  uint64_t v129 = (void *)v98[4];
  unint64_t v70 = (unint64_t)v129;
  uint64_t v71 = v107;
  swift_bridgeObjectRetain();
  sub_1BFF35EA4(v70);
  uint64_t v72 = v99;
  sub_1BFF30600(v43, v120, v71, v61);
  if (v72)
  {
    sub_1BFF322A8(v70);
    sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v116 = KeyPath;
  sub_1BFF322A8(v70);
  swift_beginAccess();
  swift_retain();
  uint64_t v73 = swift_bridgeObjectRetain();
  uint64_t v74 = sub_1C12A4C68(v73, (uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v75 = v121 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  uint64_t v128 = *(void *)(*(void *)(*(void *)(v75 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                   + 24);
  uint64_t v129 = v100;
  uint64_t v130 = v101;
  uint64_t v131 = v95;
  uint64_t v132 = v102;
  char v133 = v103;
  uint64_t v134 = v96;
  uint64_t v135 = v104;
  unsigned __int8 v136 = v97;
  uint64_t v76 = *((unsigned __int8 *)v69 + 128);
  uint64_t v99 = 0;
  char v115 = (void *)v74;
  if (v117)
  {
    uint64_t v77 = *((void *)v117 + 2);
    if (v77)
    {
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = v107;
      uint64_t v81 = v120;
      do
      {
        uint64_t v82 = v117[v79++ + 32];
        uint64_t v83 = qword_1C15DEE38[v82];
        if ((v83 & ~v78) == 0) {
          uint64_t v83 = 0;
        }
        v78 |= v83;
      }
      while (v77 != v79);
      sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
      swift_retain();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v78 = 0;
  }
  else
  {
    sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_retain();
    double v49 = 0.0;
    uint64_t v78 = -1;
  }
  uint64_t v80 = v107;
  uint64_t v81 = v120;
LABEL_45:
  LOBYTE(v123) = v76;
  uint64_t v124 = v46;
  double v125 = v49;
  uint64_t v126 = v78;
  uint64_t v127 = 0;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871318, (uint64_t (*)(void))sub_1C007CF78, (uint64_t)&type metadata for FormatLayoutValue, MEMORY[0x1E4FAB718]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BFF597F8();
  sub_1C12A8ACC();
  sub_1BFF30570(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  sub_1C15175AC();
  char v91 = (void *)swift_allocObject();
  v91[2] = v81;
  v91[3] = v80;
  char v92 = v98;
  v91[4] = v106;
  v91[5] = v92;
  v91[6] = v122;
  sub_1BFF543C8();
  sub_1BFF54484();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v93 = v110;
  sub_1C15172CC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v93, v109);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v119 + 8))(v112, v111);
}

uint64_t sub_1C129267C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = v3;
  unint64_t v118 = (uint64_t (*)())a3;
  sub_1C12A89B8();
  uint64_t v108 = *(void *)(v7 - 8);
  uint64_t v109 = v7;
  MEMORY[0x1F4188790](v7);
  long long v110 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v111 = v9;
  uint64_t v119 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v112 = (uint64_t *)((char *)&v94 - v10);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v116 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v117 = (char *)&v94 - v14;
  uint64_t v15 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v113 = *(void *)(v15 - 8);
  uint64_t v114 = v15;
  MEMORY[0x1F4188790](v15);
  char v115 = (uint64_t *)((char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = a1;
  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v121 = a2;
  uint64_t v18 = sub_1BFF1B2E4(v17, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v19 = v4[2];
  uint64_t v20 = v4[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v120 = sub_1BFF303E0(v19, v20);
  uint64_t v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  uint64_t v24 = (uint64_t *)(*(void *)(v18 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v4[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v122;
  uint64_t v29 = sub_1C128F0D8(v27, v18, v25, v26, (void (*)(uint64_t))sub_1C0409F34, sub_1C1295644, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A6C44, (void (*)(void))type metadata accessor for FormatIssueCoverNodeStyle, (void (*)(uint64_t))sub_1C0408FA0);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v105 = v23;
  uint64_t v106 = (uint64_t *)v18;
  uint64_t v122 = v29;
  uint64_t v107 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v123 = v4[9];
  swift_retain();
  sub_1C12B20C8(v121, (uint64_t)&v129);
  uint64_t v98 = v4;
  uint64_t v99 = 0;
  swift_release();
  uint64_t v30 = v130;
  char v100 = v129;
  uint64_t v101 = v130;
  uint64_t v32 = v131;
  uint64_t v31 = v132;
  uint64_t v33 = v133;
  uint64_t v34 = v134;
  uint64_t v102 = v132;
  uint64_t v103 = v133;
  char v35 = v135;
  uint64_t v104 = v135;
  int v36 = v136;
  uint64_t v37 = v114;
  uint64_t v38 = (uint64_t)v115;
  *char v115 = v129;
  *(void *)(v38 + 8) = v30;
  *(void *)(v38 + 16) = v32;
  *(void *)(v38 + 24) = v31;
  *(void *)(v38 + 32) = v33;
  *(void *)(v38 + 40) = v34;
  *(void *)(v38 + 48) = v35;
  *(unsigned char *)(v38 + 56) = v36;
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = (uint64_t)v117;
  uint64_t v40 = *((void *)v118 + 3);
  sub_1BFF1B214(v38, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v39, 0, 1, v37);
  unint64_t v118 = type metadata accessor for FormatNodeStateData.Data;
  uint64_t v41 = v116;
  sub_1BFF235F0(v39, v116, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v114 = v40;
  swift_beginAccess();
  uint64_t v42 = v107;
  swift_bridgeObjectRetain();
  uint64_t v95 = v32;
  uint64_t v96 = v34;
  int v97 = v36;
  sub_1C00FA170(v100, v101, v32, v102, v103, v34, v104, v36);
  sub_1BFF3D9D4(v41, v120, v42);
  swift_endAccess();
  sub_1C12AD324(v39, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))v118);
  sub_1BFF1BA48(v38, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v43 = v106;
  uint64_t v44 = v122;
  if (v122)
  {
    unsigned int v45 = *(unsigned __int8 *)(v122 + 88);
    uint64_t v46 = 0;
    uint64_t v47 = v99;
    if (v45 <= 0xFD)
    {
      uint64_t v50 = *(void *)(v122 + 72);
      uint64_t v48 = *(char **)(v122 + 80);
      if ((v45 & 0x80) != 0)
      {
        v138.origin.CGFloat x = 0.0;
        v138.origin.CGFloat y = 0.0;
        v138.size.width = 0.0;
        v138.size.height = 0.0;
        double Height = CGRectGetHeight(v138);
        v139.origin.CGFloat x = 0.0;
        v139.origin.CGFloat y = 0.0;
        v139.size.width = 0.0;
        v139.size.height = 0.0;
        double Width = CGRectGetWidth(v139);
        if (Width >= Height) {
          double Width = Height;
        }
        double v49 = Width * 0.5;
        sub_1BFEF68AC(v50, (uint64_t)v48, v45);
        uint64_t v48 = (char *)&unk_1F1B65F20;
      }
      else
      {
        double v49 = *(double *)(v122 + 72);
        sub_1BFF046A0(*(uint64_t *)&v49, *(void *)(v122 + 80), *(unsigned char *)(v122 + 88));
      }
      uint64_t v44 = v122;
    }
    else
    {
      uint64_t v48 = 0;
      double v49 = 0.0;
    }
    if (*(unsigned __int8 *)(v44 + 176) != 254) {
      uint64_t v46 = *(void *)(v44 + 96);
    }
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v46 = 0;
    double v49 = 0.0;
    uint64_t v47 = v99;
  }
  uint64_t v53 = (uint64_t *)(*(uint64_t *)((char *)v43 + v105) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = v98[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1BFEF32C8(v56, (uint64_t)v43, v54, v55, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v59 = v57;
  uint64_t v99 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v59)
  {
    swift_beginAccess();
    uint64_t v60 = *(void *)(v59 + 72);
    uint64_t v61 = v112;
    if (!v60 || !*(void *)(v60 + 16))
    {
      unint64_t v117 = v48;
      unint64_t v118 = (uint64_t (*)())v59;
      goto LABEL_26;
    }
    uint64_t v62 = *(void *)(v59 + 48);
    uint64_t v63 = *(void *)(v59 + 56);
    int v64 = *(unsigned __int8 *)(v59 + 64);
    swift_retain();
    swift_retain();
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v66 = v99;
    uint64_t v67 = sub_1C12A4950(v65, (uint64_t)v43);
    if (v66)
    {
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    unint64_t v117 = v48;
    uint64_t v99 = 0;
    uint64_t v84 = v67;
    swift_bridgeObjectRelease();
    swift_release();
    if (v64) {
      uint64_t v85 = 0;
    }
    else {
      uint64_t v85 = v63;
    }
    if (v64) {
      uint64_t v86 = 0;
    }
    else {
      uint64_t v86 = v62;
    }
    type metadata accessor for FormatAnimationData();
    uint64_t v87 = swift_allocObject();
    unint64_t v118 = (uint64_t (*)())v59;
    *(void *)(v87 + 16) = v59;
    *(void *)(v87 + 24) = v86;
    *(void *)(v87 + 32) = v85;
    *(unsigned char *)(v87 + 40) = v64;
    uint64_t v88 = v114;
    *(void *)(v87 + 48) = v84;
    swift_beginAccess();
    swift_retain_n();
    uint64_t v89 = v107;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = *(void *)(v88 + 32);
    *(void *)(v88 + 32) = 0x8000000000000000;
    sub_1C0062D34(v87, v120, v89, isUniquelyReferenced_nonNull_native);
    *(void *)(v88 + 32) = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
  }
  else
  {
    unint64_t v117 = v48;
    unint64_t v118 = 0;
  }
  uint64_t v61 = v112;
LABEL_26:
  uint64_t KeyPath = swift_getKeyPath();
  char v69 = v98;
  uint64_t v129 = (void *)v98[4];
  unint64_t v70 = (unint64_t)v129;
  uint64_t v71 = v107;
  swift_bridgeObjectRetain();
  sub_1BFF35EA4(v70);
  uint64_t v72 = v99;
  sub_1BFF30600(v43, v120, v71, v61);
  if (v72)
  {
    sub_1BFF322A8(v70);
    sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v116 = KeyPath;
  sub_1BFF322A8(v70);
  swift_beginAccess();
  swift_retain();
  uint64_t v73 = swift_bridgeObjectRetain();
  uint64_t v74 = sub_1C12A4C68(v73, (uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v75 = v121 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  uint64_t v128 = *(void *)(*(void *)(*(void *)(v75 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                   + 24);
  uint64_t v129 = v100;
  uint64_t v130 = v101;
  uint64_t v131 = v95;
  uint64_t v132 = v102;
  char v133 = v103;
  uint64_t v134 = v96;
  uint64_t v135 = v104;
  unsigned __int8 v136 = v97;
  uint64_t v76 = *((unsigned __int8 *)v69 + 128);
  uint64_t v99 = 0;
  char v115 = (void *)v74;
  if (v117)
  {
    uint64_t v77 = *((void *)v117 + 2);
    if (v77)
    {
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = v107;
      uint64_t v81 = v120;
      do
      {
        uint64_t v82 = v117[v79++ + 32];
        uint64_t v83 = qword_1C15DEE38[v82];
        if ((v83 & ~v78) == 0) {
          uint64_t v83 = 0;
        }
        v78 |= v83;
      }
      while (v77 != v79);
      sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
      swift_retain();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v78 = 0;
  }
  else
  {
    sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_retain();
    double v49 = 0.0;
    uint64_t v78 = -1;
  }
  uint64_t v80 = v107;
  uint64_t v81 = v120;
LABEL_45:
  LOBYTE(v123) = v76;
  uint64_t v124 = v46;
  double v125 = v49;
  uint64_t v126 = v78;
  uint64_t v127 = 0;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871318, (uint64_t (*)(void))sub_1C007CF78, (uint64_t)&type metadata for FormatLayoutValue, MEMORY[0x1E4FAB718]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BFF597F8();
  sub_1C12A8ACC();
  sub_1BFF30570(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  sub_1C15175AC();
  char v91 = (void *)swift_allocObject();
  v91[2] = v81;
  v91[3] = v80;
  char v92 = v98;
  v91[4] = v106;
  v91[5] = v92;
  v91[6] = v122;
  sub_1BFF1D63C();
  sub_1BFF1D6F8();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v93 = v110;
  sub_1C15172CC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v93, v109);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v119 + 8))(v112, v111);
}

uint64_t sub_1C129355C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = v3;
  unint64_t v118 = (uint64_t (*)())a3;
  sub_1C12A89B8();
  uint64_t v108 = *(void *)(v7 - 8);
  uint64_t v109 = v7;
  MEMORY[0x1F4188790](v7);
  long long v110 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v111 = v9;
  uint64_t v119 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v112 = (uint64_t *)((char *)&v94 - v10);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v116 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v117 = (char *)&v94 - v14;
  uint64_t v15 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v113 = *(void *)(v15 - 8);
  uint64_t v114 = v15;
  MEMORY[0x1F4188790](v15);
  char v115 = (uint64_t *)((char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = a1;
  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v121 = a2;
  uint64_t v18 = sub_1BFF1B2E4(v17, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v19 = v4[2];
  uint64_t v20 = v4[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v120 = sub_1BFF303E0(v19, v20);
  uint64_t v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  uint64_t v24 = (uint64_t *)(*(void *)(v18 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v4[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v122;
  uint64_t v29 = sub_1C128F0D8(v27, v18, v25, v26, (void (*)(uint64_t))sub_1C0409F34, sub_1C1295644, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A6C44, (void (*)(void))type metadata accessor for FormatIssueCoverNodeStyle, (void (*)(uint64_t))sub_1C0408FA0);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v105 = v23;
  uint64_t v106 = (uint64_t *)v18;
  uint64_t v122 = v29;
  uint64_t v107 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v123 = v4[9];
  swift_retain();
  sub_1C12B20C8(v121, (uint64_t)&v129);
  uint64_t v98 = v4;
  uint64_t v99 = 0;
  swift_release();
  uint64_t v30 = v130;
  char v100 = v129;
  uint64_t v101 = v130;
  uint64_t v32 = v131;
  uint64_t v31 = v132;
  uint64_t v33 = v133;
  uint64_t v34 = v134;
  uint64_t v102 = v132;
  uint64_t v103 = v133;
  char v35 = v135;
  uint64_t v104 = v135;
  int v36 = v136;
  uint64_t v37 = v114;
  uint64_t v38 = (uint64_t)v115;
  *char v115 = v129;
  *(void *)(v38 + 8) = v30;
  *(void *)(v38 + 16) = v32;
  *(void *)(v38 + 24) = v31;
  *(void *)(v38 + 32) = v33;
  *(void *)(v38 + 40) = v34;
  *(void *)(v38 + 48) = v35;
  *(unsigned char *)(v38 + 56) = v36;
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = (uint64_t)v117;
  uint64_t v40 = *((void *)v118 + 3);
  sub_1BFF1B214(v38, (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56))(v39, 0, 1, v37);
  unint64_t v118 = type metadata accessor for FormatNodeStateData.Data;
  uint64_t v41 = v116;
  sub_1BFF235F0(v39, v116, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v114 = v40;
  swift_beginAccess();
  uint64_t v42 = v107;
  swift_bridgeObjectRetain();
  uint64_t v95 = v32;
  uint64_t v96 = v34;
  int v97 = v36;
  sub_1C00FA170(v100, v101, v32, v102, v103, v34, v104, v36);
  sub_1BFF3D9D4(v41, v120, v42);
  swift_endAccess();
  sub_1C12AD324(v39, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))v118);
  sub_1BFF1BA48(v38, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v43 = v106;
  uint64_t v44 = v122;
  if (v122)
  {
    unsigned int v45 = *(unsigned __int8 *)(v122 + 88);
    uint64_t v46 = 0;
    uint64_t v47 = v99;
    if (v45 <= 0xFD)
    {
      uint64_t v50 = *(void *)(v122 + 72);
      uint64_t v48 = *(char **)(v122 + 80);
      if ((v45 & 0x80) != 0)
      {
        v138.origin.CGFloat x = 0.0;
        v138.origin.CGFloat y = 0.0;
        v138.size.width = 0.0;
        v138.size.height = 0.0;
        double Height = CGRectGetHeight(v138);
        v139.origin.CGFloat x = 0.0;
        v139.origin.CGFloat y = 0.0;
        v139.size.width = 0.0;
        v139.size.height = 0.0;
        double Width = CGRectGetWidth(v139);
        if (Width >= Height) {
          double Width = Height;
        }
        double v49 = Width * 0.5;
        sub_1BFEF68AC(v50, (uint64_t)v48, v45);
        uint64_t v48 = (char *)&unk_1F1B65F48;
      }
      else
      {
        double v49 = *(double *)(v122 + 72);
        sub_1BFF046A0(*(uint64_t *)&v49, *(void *)(v122 + 80), *(unsigned char *)(v122 + 88));
      }
      uint64_t v44 = v122;
    }
    else
    {
      uint64_t v48 = 0;
      double v49 = 0.0;
    }
    if (*(unsigned __int8 *)(v44 + 176) != 254) {
      uint64_t v46 = *(void *)(v44 + 96);
    }
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v46 = 0;
    double v49 = 0.0;
    uint64_t v47 = v99;
  }
  uint64_t v53 = (uint64_t *)(*(uint64_t *)((char *)v43 + v105) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v54 = *v53;
  uint64_t v55 = v53[1];
  uint64_t v56 = v98[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1BFEF32C8(v56, (uint64_t)v43, v54, v55, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v59 = v57;
  uint64_t v99 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v59)
  {
    swift_beginAccess();
    uint64_t v60 = *(void *)(v59 + 72);
    uint64_t v61 = v112;
    if (!v60 || !*(void *)(v60 + 16))
    {
      unint64_t v117 = v48;
      unint64_t v118 = (uint64_t (*)())v59;
      goto LABEL_26;
    }
    uint64_t v62 = *(void *)(v59 + 48);
    uint64_t v63 = *(void *)(v59 + 56);
    int v64 = *(unsigned __int8 *)(v59 + 64);
    swift_retain();
    swift_retain();
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v66 = v99;
    uint64_t v67 = sub_1C12A4950(v65, (uint64_t)v43);
    if (v66)
    {
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    unint64_t v117 = v48;
    uint64_t v99 = 0;
    uint64_t v84 = v67;
    swift_bridgeObjectRelease();
    swift_release();
    if (v64) {
      uint64_t v85 = 0;
    }
    else {
      uint64_t v85 = v63;
    }
    if (v64) {
      uint64_t v86 = 0;
    }
    else {
      uint64_t v86 = v62;
    }
    type metadata accessor for FormatAnimationData();
    uint64_t v87 = swift_allocObject();
    unint64_t v118 = (uint64_t (*)())v59;
    *(void *)(v87 + 16) = v59;
    *(void *)(v87 + 24) = v86;
    *(void *)(v87 + 32) = v85;
    *(unsigned char *)(v87 + 40) = v64;
    uint64_t v88 = v114;
    *(void *)(v87 + 48) = v84;
    swift_beginAccess();
    swift_retain_n();
    uint64_t v89 = v107;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v123 = *(void *)(v88 + 32);
    *(void *)(v88 + 32) = 0x8000000000000000;
    sub_1C0062D34(v87, v120, v89, isUniquelyReferenced_nonNull_native);
    *(void *)(v88 + 32) = v123;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
  }
  else
  {
    unint64_t v117 = v48;
    unint64_t v118 = 0;
  }
  uint64_t v61 = v112;
LABEL_26:
  uint64_t KeyPath = swift_getKeyPath();
  char v69 = v98;
  uint64_t v129 = (void *)v98[4];
  unint64_t v70 = (unint64_t)v129;
  uint64_t v71 = v107;
  swift_bridgeObjectRetain();
  sub_1BFF35EA4(v70);
  uint64_t v72 = v99;
  sub_1BFF30600(v43, v120, v71, v61);
  if (v72)
  {
    sub_1BFF322A8(v70);
    sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v116 = KeyPath;
  sub_1BFF322A8(v70);
  swift_beginAccess();
  swift_retain();
  uint64_t v73 = swift_bridgeObjectRetain();
  uint64_t v74 = sub_1C12A4C68(v73, (uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v75 = v121 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  uint64_t v128 = *(void *)(*(void *)(*(void *)(v75 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24)
                   + 24);
  uint64_t v129 = v100;
  uint64_t v130 = v101;
  uint64_t v131 = v95;
  uint64_t v132 = v102;
  char v133 = v103;
  uint64_t v134 = v96;
  uint64_t v135 = v104;
  unsigned __int8 v136 = v97;
  uint64_t v76 = *((unsigned __int8 *)v69 + 128);
  uint64_t v99 = 0;
  char v115 = (void *)v74;
  if (v117)
  {
    uint64_t v77 = *((void *)v117 + 2);
    if (v77)
    {
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = v107;
      uint64_t v81 = v120;
      do
      {
        uint64_t v82 = v117[v79++ + 32];
        uint64_t v83 = qword_1C15DEE38[v82];
        if ((v83 & ~v78) == 0) {
          uint64_t v83 = 0;
        }
        v78 |= v83;
      }
      while (v77 != v79);
      sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
      swift_retain();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v78 = 0;
  }
  else
  {
    sub_1C00FA170(v100, v101, v95, v102, v103, v96, v104, v97);
    swift_retain();
    double v49 = 0.0;
    uint64_t v78 = -1;
  }
  uint64_t v80 = v107;
  uint64_t v81 = v120;
LABEL_45:
  LOBYTE(v123) = v76;
  uint64_t v124 = v46;
  double v125 = v49;
  uint64_t v126 = v78;
  uint64_t v127 = 0;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871318, (uint64_t (*)(void))sub_1C007CF78, (uint64_t)&type metadata for FormatLayoutValue, MEMORY[0x1E4FAB718]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BFF597F8();
  sub_1C12A8ACC();
  sub_1BFF30570(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
  sub_1C15175AC();
  char v91 = (void *)swift_allocObject();
  v91[2] = v81;
  v91[3] = v80;
  char v92 = v98;
  v91[4] = v106;
  v91[5] = v92;
  v91[6] = v122;
  sub_1BFF33DEC(0);
  sub_1BFF33E0C();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v93 = v110;
  sub_1C15172CC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1C00FA1F0(v100, v101, v95, v102, v103, v96, v104, v97);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v93, v109);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v119 + 8))(v112, v111);
}

uint64_t sub_1C129443C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = *(void *)(a3 + 80);
  if (v8)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = *(void *)(v4 + 56);
    uint64_t v13 = *(void *)(v4 + 32);
    uint64_t v12 = *(void *)(v4 + 40);
    uint64_t v14 = (void *)swift_allocObject();
    _OWORD v14[2] = v8;
    v14[3] = v9;
    v14[4] = v10;
    v14[5] = v13;
    v14[6] = v12;
    v14[7] = 0;
    uint64_t v6 = a2;
    uint64_t v5 = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1C0FCF834(0);
    sub_1BFF543C8();
    sub_1BFF54484();
    sub_1C15173AC();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C0FCF824(0);
    swift_release();
    uint64_t v7 = v20;
  }
  long long v15 = *(_OWORD *)(v4 + 80);
  v18[0] = *(_OWORD *)(v4 + 64);
  v18[1] = v15;
  uint64_t v19 = *(void *)(v4 + 96);
  sub_1BFF1BDBC((uint64_t)v18);
  sub_1BFF52B88(v7, v6, v5);
  return sub_1BFF1BD7C((uint64_t)v18);
}

uint64_t sub_1C12945A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = *(void *)(a3 + 80);
  if (v8)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = *(void *)(v4 + 56);
    uint64_t v13 = *(void *)(v4 + 32);
    uint64_t v12 = *(void *)(v4 + 40);
    uint64_t v14 = (void *)swift_allocObject();
    _OWORD v14[2] = v8;
    v14[3] = v9;
    v14[4] = v10;
    v14[5] = v13;
    v14[6] = v12;
    v14[7] = 0;
    uint64_t v6 = a2;
    uint64_t v5 = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1C0FCF834(0);
    sub_1BFF1D63C();
    sub_1BFF1D6F8();
    sub_1C15173AC();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C0FCF824(0);
    swift_release();
    uint64_t v7 = v20;
  }
  long long v15 = *(_OWORD *)(v4 + 80);
  v18[0] = *(_OWORD *)(v4 + 64);
  v18[1] = v15;
  uint64_t v19 = *(void *)(v4 + 96);
  sub_1BFF1BDBC((uint64_t)v18);
  sub_1BFF1BDFC(v7, v6, v5);
  return sub_1BFF1BD7C((uint64_t)v18);
}

uint64_t sub_1C129470C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = *(void *)(a3 + 80);
  if (v8)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = *(void *)(v4 + 56);
    uint64_t v13 = *(void *)(v4 + 32);
    uint64_t v12 = *(void *)(v4 + 40);
    uint64_t v14 = (void *)swift_allocObject();
    _OWORD v14[2] = v8;
    v14[3] = v9;
    v14[4] = v10;
    v14[5] = v13;
    v14[6] = v12;
    v14[7] = 0;
    uint64_t v6 = a2;
    uint64_t v5 = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1C0FCF834(0);
    sub_1BFF33DEC(0);
    sub_1BFF33E0C();
    sub_1C15173AC();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C0FCF824(0);
    swift_release();
    uint64_t v7 = v20;
  }
  long long v15 = *(_OWORD *)(v4 + 80);
  v18[0] = *(_OWORD *)(v4 + 64);
  v18[1] = v15;
  uint64_t v19 = *(void *)(v4 + 96);
  sub_1BFF1BDBC((uint64_t)v18);
  sub_1BFF324EC(v7, v6, v5);
  return sub_1BFF1BD7C((uint64_t)v18);
}

uint64_t sub_1C1294874(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1;
  uint64_t v69 = *v1;
  swift_beginAccess();
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[5];
  uint64_t v70 = v1[4];
  swift_beginAccess();
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    if (!*(void *)(v3 + 64))
    {
LABEL_8:
      uint64_t v54 = v5;
      uint64_t v55 = v7;
      uint64_t v56 = v8;
      uint64_t v52 = a1;
      uint64_t v57 = v12;
      uint64_t v53 = v6;
      uint64_t v14 = 0;
      goto LABEL_10;
    }
LABEL_5:
    v71[0] = a1;
    MEMORY[0x1F4188790](v11);
    v47[2] = v71;
    uint64_t v14 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)v47, v13);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    uint64_t v54 = v5;
    uint64_t v55 = v7;
    uint64_t v56 = v8;
    uint64_t v52 = a1;
    uint64_t v57 = v12;
    uint64_t v53 = v6;
LABEL_10:
    uint64_t v58 = v14;
    uint64_t v18 = *(void *)(v3 + 72);
    uint64_t v17 = *(void *)(v3 + 80);
    int v19 = *(unsigned __int8 *)(v3 + 88);
    uint64_t v20 = *(void *)(v3 + 96);
    uint64_t v67 = *(void *)(v3 + 104);
    uint64_t v22 = *(void *)(v3 + 112);
    uint64_t v21 = *(void *)(v3 + 120);
    uint64_t v23 = *(void *)(v3 + 136);
    unint64_t v66 = *(void *)(v3 + 128);
    uint64_t v24 = *(void *)(v3 + 144);
    uint64_t v25 = *(void *)(v3 + 160);
    uint64_t v26 = *(void *)(v3 + 168);
    int v27 = *(unsigned __int8 *)(v3 + 176);
    uint64_t v68 = *(void *)(v3 + 152);
    uint64_t v64 = v23;
    uint64_t v65 = v24;
    uint64_t v62 = v22;
    uint64_t v63 = v21;
    uint64_t v61 = v20;
    uint64_t v60 = v25;
    uint64_t v59 = v26;
    if (v27 == 254)
    {
      LODWORD(v52) = 254;
      uint64_t v28 = v18;
      uint64_t v29 = v17;
      char v30 = v19;
      sub_1BFEF6828(v18, v17, v19);
      uint64_t v32 = v66;
      uint64_t v31 = v67;
    }
    else
    {
      uint64_t v50 = v18;
      uint64_t v49 = v17;
      int v48 = v19;
      uint64_t v51 = v2;
      uint64_t v33 = v25;
      uint64_t v34 = v26;
      sub_1BFEF6828(v18, v17, v19);
      uint64_t v35 = v21;
      unint64_t v36 = v66;
      sub_1BFEF8708(v20, v67, v22, v35, v66, v23, v24, v68, v33, v34, v27);
      uint64_t v37 = v51;
      sub_1BFF64090(v52, v36, v71);
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF8738(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
        sub_1BFEF68AC(v50, v49, v48);
        swift_bridgeObjectRelease();
        return v3;
      }
      LODWORD(v52) = v27;
      LODWORD(v31) = v67;
      sub_1BFEF8738(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
      uint64_t v32 = v71[0];
      uint64_t v31 = v31;
      char v30 = v48;
      uint64_t v29 = v49;
      uint64_t v28 = v50;
    }
    uint64_t v38 = v54;
    __int16 v39 = *(_WORD *)(v3 + 177);
    uint64_t v3 = swift_allocObject();
    swift_beginAccess();
    *(void *)(v3 + 16) = v53;
    *(void *)(v3 + 24) = v38;
    uint64_t v40 = v55;
    *(void *)(v3 + 32) = v70;
    *(void *)(v3 + 40) = v40;
    swift_beginAccess();
    uint64_t v41 = v57;
    *(void *)(v3 + 48) = v56;
    *(void *)(v3 + 56) = v41;
    *(void *)(v3 + 64) = v58;
    *(void *)(v3 + 72) = v28;
    *(void *)(v3 + 80) = v29;
    *(unsigned char *)(v3 + 88) = v30;
    *(void *)(v3 + 96) = v61;
    *(void *)(v3 + 104) = v31;
    uint64_t v42 = v63;
    *(void *)(v3 + 112) = v62;
    *(void *)(v3 + 120) = v42;
    uint64_t v43 = v64;
    *(void *)(v3 + 128) = v32;
    *(void *)(v3 + 136) = v43;
    uint64_t v44 = v68;
    *(void *)(v3 + 144) = v65;
    *(void *)(v3 + 152) = v44;
    uint64_t v45 = v59;
    *(void *)(v3 + 160) = v60;
    *(void *)(v3 + 168) = v45;
    *(unsigned char *)(v3 + 176) = v52;
    *(_WORD *)(v3 + 177) = v39;
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v10 = sub_1BFF493E4(v71[0], v9);
  if (!v2)
  {
    double v15 = v10;
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BFFC0BF8();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
    *(void *)(v11 + 32) = v16;
    *(unsigned char *)(v11 + 40) = 0;
    if (!*(void *)(v3 + 64)) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1C1294E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v2;
  sub_1C1517EFC();
  double v8 = sub_1BFF493E4(v30[0], v7);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v10 = v2[1];
    uint64_t v11 = swift_allocObject();
    *(double *)(v11 + 16) = v8;
    sub_1BFFC0BF8();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    *(void *)(v12 + 32) = v11;
    *(unsigned char *)(v12 + 40) = 0;
    sub_1C1517EFC();
    double v13 = sub_1BFF493E4(v30[0], v10);
    swift_release();
    sub_1C086885C((uint64_t)(v2 + 2), (uint64_t)v33);
    uint64_t v14 = swift_allocObject();
    *(double *)(v14 + 16) = v13;
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
    *(void *)(v15 + 32) = v14;
    *(unsigned char *)(v15 + 40) = 0;
    sub_1C129507C(a1, (uint64_t)v30);
    sub_1C086885C((uint64_t)(v4 + 11), (uint64_t)v32);
    uint64_t v16 = v30[0];
    uint64_t v17 = v30[1];
    uint64_t v22 = v30[3];
    uint64_t v23 = v30[2];
    uint64_t v24 = v30[4];
    uint64_t v25 = v30[5];
    uint64_t v26 = v30[6];
    uint64_t v27 = v30[7];
    char v18 = v31;
    uint64_t result = sub_1C129507C(a1, (uint64_t)v28);
    long long v19 = v28[1];
    *(_OWORD *)(a2 + 88) = v28[0];
    *(_OWORD *)(a2 + 104) = v19;
    long long v20 = v28[3];
    *(_OWORD *)(a2 + 120) = v28[2];
    char v21 = v29;
    *(void *)a2 = v12;
    *(void *)(a2 + 8) = v15;
    *(void *)(a2 + 16) = v16;
    *(void *)(a2 + 24) = v17;
    *(void *)(a2 + 32) = v23;
    *(void *)(a2 + 40) = v22;
    *(void *)(a2 + 48) = v24;
    *(void *)(a2 + 56) = v25;
    *(void *)(a2 + 64) = v26;
    *(void *)(a2 + 72) = v27;
    *(unsigned char *)(a2 + 80) = v18;
    *(_OWORD *)(a2 + 136) = v20;
    *(unsigned char *)(a2 + 152) = v21;
  }
  return result;
}

uint64_t sub_1C129507C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = sub_1C086885C(v2, (uint64_t)v27);
  if (v28)
  {
    unint64_t v7 = v27[3];
    unint64_t v24 = v27[1];
    unint64_t v25 = v27[2];
    unint64_t v9 = v27[4];
    unint64_t v8 = v27[5];
    uint64_t v10 = v27[7];
    unint64_t v29 = v27[6];
    v26[0] = a1;
    MEMORY[0x1F4188790](v6);
    void v20[2] = v26;
    uint64_t result = sub_1C0182454((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BFF9F260, (uint64_t)v20, v11);
    if (!v3)
    {
      uint64_t v13 = result;
      unint64_t v21 = v8;
      unint64_t v22 = v9;
      unint64_t v14 = v25;
      unint64_t v23 = v7;
      uint64_t v15 = v29;
      unint64_t v16 = v24;
      if (v29)
      {
        swift_bridgeObjectRetain();
        uint64_t result = sub_1C129A7C0(v15, v10, v26);
        uint64_t v17 = v26[0];
        uint64_t v10 = v26[1];
      }
      else
      {
        uint64_t result = swift_bridgeObjectRetain();
        uint64_t v17 = 0;
      }
      *(void *)a2 = v13;
      *(void *)(a2 + 8) = v16;
      unint64_t v18 = v23;
      *(void *)(a2 + 16) = v14;
      *(void *)(a2 + 24) = v18;
      unint64_t v19 = v21;
      *(void *)(a2 + 32) = v22;
      *(void *)(a2 + 40) = v19;
      *(void *)(a2 + 48) = v17;
      *(void *)(a2 + 56) = v10;
      *(unsigned char *)(a2 + 64) = 1;
    }
  }
  else
  {
    uint64_t result = sub_1BFF64090(a1, v27[0], v26);
    if (!v3)
    {
      *(void *)a2 = v26[0];
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(_OWORD *)(a2 + 49) = 0u;
    }
  }
  return result;
}

uint64_t sub_1C1295224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatOption();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1) {
    goto LABEL_13;
  }
  if (!a2)
  {
    if (*(void *)(a1 + 16))
    {
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_13:
    swift_bridgeObjectRetain();
    return a2;
  }
  int64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v8, 0);
    uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v22 = a1;
    uint64_t v10 = a1 + ((v9 + 32) & ~v9);
    uint64_t v11 = *(void *)(v5 + 72);
    uint64_t v12 = v23;
    do
    {
      sub_1BFF1B214(v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v14 = *v7;
      uint64_t v13 = v7[1];
      swift_bridgeObjectRetain();
      sub_1BFF1BA48((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v23;
      }
      unint64_t v16 = *(void *)(v12 + 16);
      unint64_t v15 = *(void *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BFF661B8(v15 > 1, v16 + 1, 1);
        uint64_t v12 = v23;
      }
      *(void *)(v12 + 16) = v16 + 1;
      uint64_t v17 = v12 + 16 * v16;
      *(void *)(v17 + 32) = v14;
      *(void *)(v17 + 40) = v13;
      v10 += v11;
      --v8;
    }
    while (v8);
    a1 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = sub_1BFEF4060(v12);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1C12A52FC(a2, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = a1;
  swift_bridgeObjectRetain();
  sub_1BFEDB748(v19);
  return v23;
}

uint64_t sub_1C1295484(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 40);
  char v9 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v17 = *(void *)(v1 + 32);
  if (!v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
LABEL_6:
    swift_beginAccess();
    uint64_t v13 = *(void *)(v1 + 64);
    uint64_t v1 = swift_allocObject();
    swift_beginAccess();
    *(void *)(v1 + 16) = v7;
    *(void *)(v1 + 24) = v6;
    *(void *)(v1 + 32) = v17;
    *(void *)(v1 + 40) = v8;
    *(unsigned char *)(v1 + 48) = v9;
    *(void *)(v1 + 56) = v12;
    swift_beginAccess();
    *(void *)(v1 + 64) = v13;
    swift_bridgeObjectRetain();
    return v1;
  }
  uint64_t v16 = a1;
  MEMORY[0x1F4188790](v5);
  void v15[2] = &v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C0182A30((void (*)(uint64_t, uint64_t *))sub_1C12A8888, (uint64_t)v15, v10);
  if (!v3)
  {
    uint64_t v12 = v11;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C1295644(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1;
  uint64_t v71 = *v1;
  swift_beginAccess();
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[5];
  uint64_t v72 = v1[4];
  swift_beginAccess();
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    if (!*(void *)(v3 + 64))
    {
LABEL_8:
      uint64_t v56 = v5;
      uint64_t v57 = v7;
      uint64_t v54 = a1;
      uint64_t v58 = v8;
      uint64_t v59 = v12;
      uint64_t v55 = v6;
      uint64_t v14 = 0;
      goto LABEL_10;
    }
LABEL_5:
    uint64_t v73 = a1;
    MEMORY[0x1F4188790](v11);
    v49[2] = &v73;
    uint64_t v14 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)v49, v13);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    uint64_t v56 = v5;
    uint64_t v57 = v7;
    uint64_t v54 = a1;
    uint64_t v58 = v8;
    uint64_t v59 = v12;
    uint64_t v55 = v6;
LABEL_10:
    uint64_t v60 = v14;
    uint64_t v18 = *(void *)(v3 + 72);
    uint64_t v17 = *(void *)(v3 + 80);
    int v19 = *(unsigned __int8 *)(v3 + 88);
    uint64_t v20 = *(void *)(v3 + 96);
    uint64_t v69 = *(void *)(v3 + 104);
    uint64_t v22 = *(void *)(v3 + 112);
    uint64_t v21 = *(void *)(v3 + 120);
    uint64_t v23 = *(void *)(v3 + 136);
    unint64_t v68 = *(void *)(v3 + 128);
    uint64_t v24 = *(void *)(v3 + 144);
    uint64_t v25 = *(void *)(v3 + 160);
    uint64_t v26 = *(void *)(v3 + 168);
    int v27 = *(unsigned __int8 *)(v3 + 176);
    uint64_t v70 = *(void *)(v3 + 152);
    uint64_t v67 = v24;
    uint64_t v66 = v23;
    uint64_t v65 = v21;
    uint64_t v64 = v22;
    uint64_t v63 = v20;
    uint64_t v62 = v25;
    uint64_t v61 = v26;
    if (v27 == 254)
    {
      LODWORD(v54) = 254;
      uint64_t v28 = v18;
      uint64_t v29 = v17;
      char v30 = v19;
      sub_1BFEF6828(v18, v17, v19);
      uint64_t v31 = v69;
      uint64_t v32 = v68;
    }
    else
    {
      uint64_t v52 = v18;
      uint64_t v51 = v17;
      int v50 = v19;
      uint64_t v53 = v2;
      uint64_t v33 = v25;
      uint64_t v34 = v26;
      sub_1BFEF6828(v18, v17, v19);
      uint64_t v35 = v21;
      unint64_t v36 = v68;
      sub_1BFEF8708(v20, v69, v22, v35, v68, v23, v24, v70, v33, v34, v27);
      uint64_t v37 = v53;
      sub_1BFF64090(v54, v36, &v73);
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF8738(v63, v69, v64, v65, v68, v66, v67, v70, v62, v61, v27);
        sub_1BFEF68AC(v52, v51, v50);
        swift_bridgeObjectRelease();
        return v3;
      }
      LODWORD(v54) = v27;
      unsigned int v38 = v69;
      sub_1BFEF8738(v63, v69, v64, v65, v68, v66, v67, v70, v62, v61, v27);
      uint64_t v32 = v73;
      uint64_t v31 = v38;
      char v30 = v50;
      uint64_t v29 = v51;
      uint64_t v28 = v52;
    }
    char v39 = *(unsigned char *)(v3 + 177);
    swift_beginAccess();
    uint64_t v40 = *(void *)(v3 + 184);
    uint64_t v3 = swift_allocObject();
    swift_beginAccess();
    uint64_t v41 = v56;
    *(void *)(v3 + 16) = v55;
    *(void *)(v3 + 24) = v41;
    uint64_t v42 = v57;
    *(void *)(v3 + 32) = v72;
    *(void *)(v3 + 40) = v42;
    swift_beginAccess();
    uint64_t v43 = v59;
    *(void *)(v3 + 48) = v58;
    *(void *)(v3 + 56) = v43;
    *(void *)(v3 + 64) = v60;
    *(void *)(v3 + 72) = v28;
    *(void *)(v3 + 80) = v29;
    *(unsigned char *)(v3 + 88) = v30;
    *(void *)(v3 + 96) = v63;
    *(void *)(v3 + 104) = v31;
    uint64_t v44 = v65;
    *(void *)(v3 + 112) = v64;
    *(void *)(v3 + 120) = v44;
    uint64_t v45 = v66;
    *(void *)(v3 + 128) = v32;
    *(void *)(v3 + 136) = v45;
    uint64_t v46 = v70;
    *(void *)(v3 + 144) = v67;
    *(void *)(v3 + 152) = v46;
    uint64_t v47 = v61;
    *(void *)(v3 + 160) = v62;
    *(void *)(v3 + 168) = v47;
    *(unsigned char *)(v3 + 176) = v54;
    *(unsigned char *)(v3 + 177) = v39;
    swift_beginAccess();
    *(void *)(v3 + 184) = v40;
    swift_bridgeObjectRetain();
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v10 = sub_1BFF493E4(v73, v9);
  if (!v2)
  {
    double v15 = v10;
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BFFC0BF8();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
    *(void *)(v11 + 32) = v16;
    *(unsigned char *)(v11 + 40) = 0;
    if (!*(void *)(v3 + 64)) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1C1295CA0(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v20 = *(void *)(v1 + 32);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  if (!v9)
  {
    uint64_t v19 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v10 = sub_1BFF493E4(v21[0], v9);
  if (!v2)
  {
    double v11 = v10;
    uint64_t v19 = v6;
    swift_release();
    uint64_t v12 = swift_allocObject();
    *(double *)(v12 + 16) = v11;
    sub_1BFFC0BF8();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
    *(void *)(v13 + 32) = v12;
    uint64_t v9 = v13;
    *(unsigned char *)(v13 + 40) = 0;
LABEL_6:
    uint64_t v14 = *(void *)(v1 + 64);
    if ((~v14 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BFF64090(a1, v14, v21);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDC11BC(v14);
LABEL_14:
        swift_bridgeObjectRelease();
        return v3;
      }
      uint64_t v18 = v9;
      sub_1BFDC11BC(v14);
      uint64_t v14 = v21[0];
    }
    else
    {
      uint64_t v18 = v9;
    }
    uint64_t v15 = *(void *)(v1 + 72);
    if ((~v15 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BFF64090(a1, v15, v21);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDC11BC(v15);
        sub_1BFDC11BC(v14);
        goto LABEL_14;
      }
      sub_1BFDC11BC(v15);
      uint64_t v15 = v21[0];
    }
    char v16 = *(unsigned char *)(v1 + 80);
    uint64_t v3 = swift_allocObject();
    swift_beginAccess();
    *(void *)(v3 + 16) = v19;
    *(void *)(v3 + 24) = v5;
    *(void *)(v3 + 32) = v20;
    *(void *)(v3 + 40) = v7;
    swift_beginAccess();
    *(void *)(v3 + 48) = v8;
    *(void *)(v3 + 56) = v18;
    *(void *)(v3 + 64) = v14;
    *(void *)(v3 + 72) = v15;
    *(unsigned char *)(v3 + 80) = v16;
    return v3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1C1295F8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  type metadata accessor for FormatDecorationContext();
  sub_1C1517EFC();
  double v11 = sub_1BFF493E4(v23, a1);
  uint64_t result = swift_release();
  if (!v5)
  {
    uint64_t v13 = swift_allocObject();
    *(double *)(v13 + 16) = v11;
    sub_1BFFC0BF8();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    *(void *)(v14 + 32) = v13;
    *(unsigned char *)(v14 + 40) = 0;
    sub_1C1517EFC();
    double v15 = sub_1BFF493E4(v23, a2);
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
    *(void *)(v17 + 32) = v16;
    *(unsigned char *)(v17 + 40) = 0;
    sub_1C1517EFC();
    double v18 = sub_1BFF493E4(v23, a3);
    swift_release();
    uint64_t v19 = swift_allocObject();
    *(double *)(v19 + 16) = v18;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
    *(void *)(v20 + 32) = v19;
    *(unsigned char *)(v20 + 40) = 0;
    sub_1C1517EFC();
    double v21 = sub_1BFF493E4(v23, a4);
    swift_release();
    uint64_t v22 = swift_allocObject();
    *(double *)(v22 + 16) = v21;
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
    *(void *)(result + 32) = v22;
    *(unsigned char *)(result + 40) = 0;
    *a5 = v14;
    a5[1] = v17;
    a5[2] = v20;
    a5[3] = result;
  }
  return result;
}

uint64_t sub_1C1296210(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v90 = a7;
  uint64_t v89 = a6;
  uint64_t v88 = a5;
  uint64_t v87 = a4;
  uint64_t v9 = v8;
  double v10 = v7;
  uint64_t v101 = a3;
  uint64_t v13 = type metadata accessor for FormatOption();
  uint64_t v94 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v93 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v91 = v15;
  uint64_t v92 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v96 = (uint64_t *)((char *)&v82 - v16);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v99 = (uint64_t)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  char v100 = (char *)&v82 - v20;
  uint64_t v21 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v97 = *(void *)(v21 - 8);
  uint64_t v98 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = a1;
  swift_beginAccess();
  uint64_t v25 = v10[2];
  uint64_t v24 = v10[3];
  swift_bridgeObjectRetain();
  uint64_t v102 = sub_1BFF303E0(v25, v24);
  uint64_t v103 = v26;
  swift_bridgeObjectRelease();
  int v27 = (uint64_t *)(*(uint64_t *)((char *)a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  uint64_t v30 = v10[10];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C128F594(v30, (uint64_t)a2, v28, v29);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v84 = v23;
    uint64_t v86 = a2;
    uint64_t v85 = 0;
    uint64_t v95 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v34 = (uint64_t)v100;
    uint64_t v33 = v101;
    uint64_t v35 = v27;
    if (v95 && (uint64_t v36 = *(void *)(v95 + 56)) != 0 && (v37 = *(void *)(v36 + 16)) != 0)
    {
      uint64_t v83 = v10;
      uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      uint64_t v39 = v36 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
      uint64_t v40 = *(void *)(v94 + 72);
      swift_bridgeObjectRetain();
      uint64_t v41 = (uint64_t *)v93;
      while (1)
      {
        sub_1BFF1B214(v39, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatOption);
        swift_bridgeObjectRetain();
        if (!objc_msgSend(ObjCClassFromMetadata, sel_instancesRespondToSelector_, sub_1C151678C())) {
          break;
        }
        sub_1BFF1BA48((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v39 += v40;
        if (!--v37)
        {
          swift_bridgeObjectRelease();
          double v10 = v83;
          uint64_t v33 = v101;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatLayoutError();
      sub_1BFF30570((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v69 = v83[5];
      uint64_t v70 = *v41;
      uint64_t v71 = v41[1];
      *uint64_t v72 = v83[4];
      v72[1] = v69;
      v72[2] = v70;
      v72[3] = v71;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_release();
      return sub_1BFF1BA48((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatOption);
    }
    else
    {
LABEL_10:
      uint64_t v42 = (uint64_t)v84;
      *uint64_t v84 = v10[6];
      uint64_t v43 = v98;
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = *(void *)(v33 + 24);
      sub_1BFF1B214(v42, v34, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v34, 0, 1, v43);
      uint64_t v45 = v10;
      uint64_t v46 = v35;
      uint64_t v47 = v99;
      sub_1BFF235F0(v34, v99, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      uint64_t v101 = v44;
      swift_beginAccess();
      uint64_t v48 = v103;
      swift_bridgeObjectRetain();
      sub_1BFF3D9D4(v47, v102, v48);
      swift_endAccess();
      sub_1C12AD324(v34, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      sub_1BFF1BA48(v42, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      uint64_t v49 = *v46;
      uint64_t v50 = v46[1];
      uint64_t v51 = v45;
      uint64_t v52 = v45[11];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v53 = v86;
      uint64_t v54 = v85;
      uint64_t v55 = sub_1BFEF32C8(v52, (uint64_t)v86, v49, v50, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
      if (v54)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      else
      {
        uint64_t v56 = (char *)v55;
        uint64_t v57 = v101;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v58 = v56;
        if (v56 && (swift_beginAccess(), (uint64_t v59 = *((void *)v56 + 9)) != 0) && *(void *)(v59 + 16))
        {
          uint64_t v60 = *((void *)v56 + 7);
          char v100 = (char *)*((void *)v56 + 6);
          int v61 = v56[64];
          swift_retain();
          swift_retain();
          uint64_t v62 = swift_bridgeObjectRetain();
          uint64_t v76 = sub_1C12A4950(v62, (uint64_t)v53);
          swift_bridgeObjectRelease();
          swift_release();
          if (v61) {
            uint64_t v77 = 0;
          }
          else {
            uint64_t v77 = v60;
          }
          if (v61) {
            uint64_t v78 = 0;
          }
          else {
            uint64_t v78 = v100;
          }
          type metadata accessor for FormatAnimationData();
          uint64_t v79 = swift_allocObject();
          char v100 = v58;
          *(void *)(v79 + 16) = v58;
          *(void *)(v79 + 24) = v78;
          *(void *)(v79 + 32) = v77;
          *(unsigned char *)(v79 + 40) = v61;
          *(void *)(v79 + 48) = v76;
          swift_beginAccess();
          swift_retain_n();
          uint64_t v80 = v103;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v104 = *(void *)(v57 + 32);
          *(void *)(v57 + 32) = 0x8000000000000000;
          sub_1C0062D34(v79, v102, v80, isUniquelyReferenced_nonNull_native);
          *(void *)(v57 + 32) = v104;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_release_n();
        }
        else
        {
          char v100 = v56;
        }
        uint64_t v63 = v96;
        swift_getKeyPath();
        uint64_t v64 = v51;
        unint64_t v105 = v51[7];
        unint64_t v65 = v105;
        uint64_t v66 = v103;
        swift_bridgeObjectRetain();
        sub_1BFF35EA4(v65);
        uint64_t v67 = v86;
        uint64_t v68 = v102;
        sub_1BFF30600(v86, v102, v66, v63);
        sub_1BFF322A8(v65);
        swift_beginAccess();
        swift_retain();
        uint64_t v73 = swift_bridgeObjectRetain();
        uint64_t v101 = sub_1C12A4C68(v73, (uint64_t)v67);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v74 = (void *)swift_allocObject();
        v74[2] = v68;
        v74[3] = v66;
        uint64_t v74[4] = v67;
        v74[5] = v64;
        v74[6] = v95;
        v88(0);
        v89();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v75 = v96;
        sub_1C15173EC();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return (*(uint64_t (**)(uint64_t *, uint64_t))(v92 + 8))(v75, v91);
      }
    }
  }
}

uint64_t sub_1C1296D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  void v13[2] = a1;
  uint64_t result = sub_1C0182454((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BFF9E958, (uint64_t)v13, v5);
  if (!v3)
  {
    uint64_t v7 = result;
    sub_1BFF23AA4(v2 + 8, (uint64_t)v17, (uint64_t (*)(void))sub_1BFFA754C);
    uint64_t v9 = *(void *)(v2 + 48);
    uint64_t v8 = *(void *)(v2 + 56);
    sub_1BFFAF7A4((uint64_t)v17);
    if (v9)
    {
      sub_1C129A928(v9, v8, v14);
      uint64_t v10 = v14[0];
      uint64_t v8 = v14[1];
    }
    else
    {
      uint64_t v10 = 0;
    }
    long long v11 = *(_OWORD *)(v2 + 32);
    long long v15 = *(_OWORD *)(v2 + 16);
    long long v16 = v11;
    *(void *)a2 = v7;
    uint64_t result = sub_1BFF23AA4((uint64_t)v17, a2 + 8, (uint64_t (*)(void))sub_1BFFA754C);
    long long v12 = v16;
    *(_OWORD *)(a2 + 16) = v15;
    *(_OWORD *)(a2 + 32) = v12;
    *(void *)(a2 + 48) = v10;
    *(void *)(a2 + 56) = v8;
  }
  return result;
}

uint64_t sub_1C1296EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v54 = a6;
  uint64_t v55 = a7;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v8 = v7;
  uint64_t v61 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v62 = (uint64_t *)((char *)&v50 - v12);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v60 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v59 = (uint64_t)&v50 - v16;
  uint64_t v17 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v58 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69[10] = a1;
  swift_beginAccess();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v63 = a2;
  uint64_t v21 = (uint64_t *)sub_1BFF1B2E4(v20, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v22 = *(void *)(v8 + 16);
  uint64_t v23 = *(void *)(v8 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1BFF303E0(v22, v23);
  uint64_t v26 = v25;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(uint64_t *)((char *)v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles;
  swift_beginAccess();
  uint64_t v28 = *(void *)(v27 + 8);
  uint64_t v64 = v8;
  swift_beginAccess();
  sub_1BFF8874C(v8 + 96, (uint64_t)v69, (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C08AA310(v69, (void (*)(void, void, void, void, void, void, void, void))sub_1C05DDB68);
  uint64_t v29 = v65;
  sub_1C1290840(v69, v28, (uint64_t)v67);
  if (v29)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C08AA310(v69, (void (*)(void, void, void, void, void, void, void, void))sub_1C05DDBE4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = v24;
    uint64_t v51 = v21;
    uint64_t v65 = v26;
    sub_1C08AA310(v69, (void (*)(void, void, void, void, void, void, void, void))sub_1C05DDBE4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF8874C((uint64_t)v67, (uint64_t)v68, (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    uint64_t v30 = *(void *)(v64 + 80);
    type metadata accessor for FormatWebEmbedDataConfig();
    swift_allocObject();
    swift_retain();
    uint64_t v31 = (objc_class *)swift_retain();
    uint64_t v33 = sub_1C147201C(v31, v30);
    v67[0] = *(void *)(v64 + 72);
    swift_retain();
    uint64_t v34 = sub_1C1513E68((uint64_t)v51, v33);
    uint64_t v63 = v33;
    swift_release();
    uint64_t v35 = (uint64_t)v19;
    *uint64_t v19 = v34;
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = (uint64_t)v19;
    uint64_t v37 = v59;
    sub_1BFF1B214(v36, v59, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v37, 0, 1, v17);
    uint64_t v38 = v60;
    sub_1BFF235F0(v37, v60, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_retain();
    uint64_t v61 = v34;
    uint64_t v39 = v65;
    swift_bridgeObjectRetain();
    uint64_t v40 = v38;
    uint64_t v41 = v50;
    sub_1BFF3D9D4(v40, v50, v39);
    swift_endAccess();
    sub_1C12AD324(v37, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BFF1BA48(v35, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    swift_getKeyPath();
    uint64_t v42 = v64;
    swift_beginAccess();
    unint64_t v66 = *(void *)(v42 + 48);
    unint64_t v43 = v66;
    swift_bridgeObjectRetain();
    sub_1BFF35EA4(v43);
    uint64_t v44 = v51;
    sub_1BFF30600(v51, v41, v39, v62);
    uint64_t v45 = v61;
    sub_1BFF322A8(v43);
    swift_beginAccess();
    swift_retain();
    uint64_t v46 = swift_bridgeObjectRetain();
    uint64_t v60 = sub_1C12A4C68(v46, (uint64_t)v44);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = v50;
    v47[3] = v39;
    uint64_t v48 = v64;
    void v47[4] = v44;
    v47[5] = v48;
    sub_1BFF8874C((uint64_t)v68, (uint64_t)(v47 + 6), (unint64_t *)&qword_1EB867F00, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
    v47[14] = v45;
    uint64_t v59 = v53(0);
    v54();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v49 = v62;
    sub_1C15173EC();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v56 + 8))(v49, v57);
  }
}

uint64_t sub_1C1297768(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v90 = *v1;
  swift_beginAccess();
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[5];
  uint64_t v91 = v1[4];
  swift_beginAccess();
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    double v10 = sub_1BFF493E4(v99, v8);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    double v13 = v10;
    uint64_t v82 = v5;
    swift_release();
    uint64_t v14 = swift_allocObject();
    *(double *)(v14 + 16) = v13;
    sub_1BFFC0BF8();
    uint64_t v12 = swift_allocObject();
    uint64_t v8 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    *(void *)(v12 + 32) = v14;
    *(unsigned char *)(v12 + 40) = 0;
  }
  else
  {
    uint64_t v82 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_bridgeObjectRetain();
  }
  uint64_t v112 = v8;
  uint64_t v15 = v3[8];
  if ((~v15 & 0xF000000000000007) != 0)
  {
    swift_retain();
    sub_1BFF07448(a1, v15, &v99);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF68C0(v15);
      return swift_bridgeObjectRelease();
    }
    uint64_t v12 = sub_1BFEF68C0(v15);
    uint64_t v15 = v99;
  }
  uint64_t v111 = v15;
  if (v3[9])
  {
    *(void *)&long long v99 = a1;
    MEMORY[0x1F4188790](v12);
    uint64_t v65 = (uint64_t *)&v99;
    uint64_t v17 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)&v63, v16);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF68C0(v15);
      return swift_bridgeObjectRelease();
    }
    uint64_t v84 = 0;
    uint64_t v78 = v6;
    uint64_t v80 = (uint64_t *)a1;
    uint64_t v83 = v15;
    uint64_t v81 = v7;
  }
  else
  {
    uint64_t v84 = v2;
    uint64_t v78 = v6;
    uint64_t v80 = (uint64_t *)a1;
    uint64_t v83 = v15;
    uint64_t v81 = v7;
    uint64_t v17 = 0;
  }
  uint64_t v19 = v3[10];
  uint64_t v18 = v3[11];
  int v20 = *((unsigned __int8 *)v3 + 96);
  v109[0] = v19;
  v109[1] = v18;
  char v110 = v20;
  uint64_t v86 = v3[13];
  uint64_t v89 = v3[14];
  uint64_t v87 = v3[15];
  uint64_t v21 = v3[17];
  uint64_t v88 = v3[16];
  uint64_t v22 = v3[19];
  uint64_t v85 = v3[18];
  uint64_t v23 = v3[20];
  uint64_t v24 = v3[21];
  uint64_t v25 = v3[22];
  int v26 = *((unsigned __int8 *)v3 + 184);
  int v76 = v20;
  uint64_t v75 = v18;
  uint64_t v74 = v19;
  uint64_t v79 = v17;
  if (v26 == 254)
  {
    uint64_t v77 = v25;
    uint64_t v27 = v24;
    uint64_t v72 = v8;
    uint64_t v28 = sub_1BFEF6828(v19, v18, v20);
    uint64_t v29 = v85;
    uint64_t v30 = v88;
    uint64_t v31 = v87;
    uint64_t v32 = v89;
  }
  else
  {
    sub_1BFEF6828(v19, v18, v20);
    sub_1BFEF8708(v86, v89, v87, v88, v21, v85, v22, v23, v24, v25, v26);
    uint64_t v33 = v84;
    sub_1BFF64090((uint64_t)v80, v21, (uint64_t *)&v99);
    uint64_t v84 = v33;
    if (v33)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF8738(v86, v89, v87, v88, v21, v85, v22, v23, v24, v25, v26);
      sub_1BFEF68AC(v74, v75, v76);
      sub_1BFEF68C0(v83);
      return swift_bridgeObjectRelease();
    }
    uint64_t v72 = v8;
    uint64_t v77 = v25;
    uint64_t v63 = v24;
    uint64_t v64 = v25;
    uint64_t v27 = v24;
    LODWORD(v32) = v89;
    uint64_t v29 = v85;
    uint64_t v28 = sub_1BFEF8738(v86, v89, v87, v88, v21, v85, v22, v23, v63, v64, v26);
    uint64_t v21 = v99;
    uint64_t v32 = v32;
    uint64_t v30 = v88;
    uint64_t v31 = v87;
  }
  *(void *)&long long v99 = v86;
  uint64_t v89 = v32;
  *((void *)&v99 + 1) = v32;
  uint64_t v100 = v31;
  uint64_t v101 = v30;
  uint64_t v102 = v21;
  uint64_t v69 = v21;
  uint64_t v103 = v29;
  uint64_t v104 = v22;
  uint64_t v70 = v22;
  uint64_t v71 = v23;
  uint64_t v105 = v23;
  uint64_t v106 = v27;
  uint64_t v34 = v27;
  uint64_t v107 = v77;
  int v68 = v26;
  char v108 = v26;
  uint64_t v36 = v3[24];
  uint64_t v35 = v3[25];
  int v37 = *((unsigned __int8 *)v3 + 208);
  uint64_t v73 = v9;
  if (v37 == 255)
  {
    int v44 = 255;
    uint64_t v45 = v83;
    uint64_t v38 = (uint64_t)v80;
    uint64_t v41 = v84;
  }
  else
  {
    uint64_t v67 = v27;
    uint64_t v96 = v36;
    uint64_t v97 = v35;
    char v98 = v37 & 1;
    uint64_t v38 = (uint64_t)v80;
    sub_1BFE94AB4(v36, v35, v37 & 1);
    sub_1C1517EFC();
    uint64_t v39 = v84;
    char v40 = FormatBoolean.value(contextLayoutOptions:)(v93);
    uint64_t v41 = v39;
    if (v39)
    {
      uint64_t v42 = v83;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BFFC879C(v36, v35, v37);
      sub_1BFEF8738(v86, v89, v87, v88, v69, v85, v70, v71, v67, v77, v68);
      sub_1BFEF68AC(v74, v75, v76);
      uint64_t v43 = v42;
LABEL_34:
      sub_1BFEF68C0(v43);
      return swift_bridgeObjectRelease();
    }
    char v46 = v40;
    uint64_t v47 = v83;
    swift_release();
    uint64_t v28 = sub_1BFFC879C(v36, v35, v37);
    uint64_t v45 = v47;
    uint64_t v35 = 0;
    int v44 = 0;
    uint64_t v36 = v46 & 1;
    uint64_t v34 = v67;
  }
  uint64_t v83 = v45;
  uint64_t v96 = v36;
  uint64_t v97 = v35;
  LODWORD(v84) = v44;
  char v98 = v44;
  uint64_t v49 = v3[27];
  uint64_t v48 = v3[28];
  int v50 = *((unsigned __int8 *)v3 + 232);
  if (v50 == 255)
  {
    unsigned __int8 v54 = -1;
  }
  else
  {
    uint64_t v80 = (uint64_t *)v36;
    uint64_t v67 = v35;
    uint64_t v93 = v49;
    uint64_t v94 = v48;
    char v95 = v50 & 1;
    uint64_t v51 = v49;
    uint64_t v52 = v48;
    sub_1BFE94AB4(v49, v48, v50 & 1);
    sub_1C1517EFC();
    char v53 = FormatBoolean.value(contextLayoutOptions:)(v92);
    if (v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BFFC879C(v51, v52, v50);
      sub_1BFFC879C((uint64_t)v80, v67, v84);
      sub_1BFEF8738(v86, v89, v87, v88, v69, v85, v70, v71, v34, v77, v68);
LABEL_33:
      sub_1BFEF68AC(v74, v75, v76);
      uint64_t v43 = v83;
      goto LABEL_34;
    }
    char v55 = v53;
    swift_release();
    uint64_t v28 = sub_1BFFC879C(v51, v52, v50);
    uint64_t v48 = 0;
    unsigned __int8 v54 = 0;
    uint64_t v49 = v55 & 1;
    uint64_t v35 = v67;
    uint64_t v36 = (uint64_t)v80;
  }
  uint64_t v93 = v49;
  uint64_t v94 = v48;
  char v95 = v54;
  if (v3[30])
  {
    char v56 = *((unsigned char *)v3 + 233);
    uint64_t v57 = v49;
    uint64_t v67 = v48;
    uint64_t v80 = &v66;
    uint64_t v92 = v38;
    MEMORY[0x1F4188790](v28);
    uint64_t v65 = &v92;
    uint64_t v59 = sub_1C0182A84((void (*)(long long *__return_ptr, void *, uint64_t *))sub_1C12A8968, (uint64_t)&v63, v58);
    if (v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFFC879C(v57, v67, v54);
      sub_1BFFC879C(v36, v35, v84);
      sub_1BFEF8738(v86, v89, v87, v88, v69, v85, v70, v71, v34, v77, v68);
      goto LABEL_33;
    }
    uint64_t v60 = v59;
  }
  else
  {
    char v56 = *((unsigned char *)v3 + 233);
    uint64_t v60 = 0;
  }
  uint64_t v61 = v78;
  uint64_t v62 = v81;
  swift_allocObject();
  return sub_1BFD5F7B0(v82, v61, v91, v62, v73, &v112, &v111, v79, v109, &v99, &v96, &v93, v56, v60);
}

uint64_t sub_1C1298304@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  if (*v1)
  {
    sub_1C1517EFC();
    double v6 = sub_1BFF493E4(v63, v5);
    if (v2) {
      return swift_release();
    }
    double v8 = v6;
    swift_release();
    uint64_t v9 = swift_allocObject();
    *(double *)(v9 + 16) = v8;
    sub_1BFFC0BF8();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
    *(void *)(v5 + 32) = v9;
    *(unsigned char *)(v5 + 40) = 0;
  }
  uint64_t v10 = v3[1];
  if (v10)
  {
    sub_1C1517EFC();
    double v11 = sub_1BFF493E4(v63, v10);
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    double v12 = v11;
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(double *)(v13 + 16) = v12;
    sub_1BFFC0BF8();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    *(void *)(v10 + 32) = v13;
    *(unsigned char *)(v10 + 40) = 0;
  }
  uint64_t v14 = v3[2];
  if (v14)
  {
    sub_1C1517EFC();
    double v15 = sub_1BFF493E4(v63, v14);
    if (v2)
    {
      swift_release();
LABEL_47:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    double v18 = v15;
    uint64_t v61 = a1;
    swift_release();
    uint64_t v19 = swift_allocObject();
    *(double *)(v19 + 16) = v18;
    sub_1BFFC0BF8();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    *(void *)(v14 + 32) = v19;
    *(unsigned char *)(v14 + 40) = 0;
    uint64_t v16 = v3[3];
    if (!v16)
    {
LABEL_16:
      uint64_t v62 = 0;
      uint64_t v20 = v3[5];
      if (v20) {
        goto LABEL_17;
      }
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v61 = a1;
    uint64_t v16 = v3[3];
    if (!v16) {
      goto LABEL_16;
    }
  }
  sub_1C1517EFC();
  double v17 = sub_1BFF493E4(v63, v16);
  if (v2)
  {
    swift_release();
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  double v22 = v17;
  swift_release();
  uint64_t v23 = swift_allocObject();
  *(double *)(v23 + 16) = v22;
  sub_1BFFC0BF8();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
  *(void *)(v24 + 32) = v23;
  uint64_t v62 = v24;
  *(unsigned char *)(v24 + 40) = 0;
  uint64_t v20 = v3[5];
  if (v20)
  {
LABEL_17:
    sub_1C1517EFC();
    double v21 = sub_1BFF493E4(v63, v20);
    if (v2)
    {
      swift_release();
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    double v27 = v21;
    swift_release();
    uint64_t v28 = swift_allocObject();
    *(double *)(v28 + 16) = v27;
    sub_1BFFC0BF8();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
    *(void *)(v29 + 32) = v28;
    uint64_t v60 = v29;
    *(unsigned char *)(v29 + 40) = 0;
    uint64_t v25 = v3[6];
    if (!v25) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v60 = 0;
  uint64_t v25 = v3[6];
  if (!v25)
  {
LABEL_24:
    uint64_t v59 = 0;
    goto LABEL_26;
  }
LABEL_21:
  sub_1C1517EFC();
  double v26 = sub_1BFF493E4(v63, v25);
  if (v2)
  {
    swift_release();
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  double v30 = v26;
  swift_release();
  uint64_t v31 = swift_allocObject();
  *(double *)(v31 + 16) = v30;
  sub_1BFFC0BF8();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
  *(void *)(v32 + 32) = v31;
  uint64_t v59 = v32;
  *(unsigned char *)(v32 + 40) = 0;
LABEL_26:
  uint64_t v33 = v3[7];
  uint64_t v34 = v3[8];
  int v35 = *((unsigned __int8 *)v3 + 72);
  if (v35 == 255)
  {
    unsigned __int8 v58 = -1;
  }
  else
  {
    uint64_t v63 = v3[7];
    uint64_t v64 = v34;
    LOBYTE(v65) = v35 & 1;
    sub_1C1517EFC();
    char v36 = FormatBoolean.value(contextLayoutOptions:)(v67);
    if (v2)
    {
      swift_release();
LABEL_43:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    char v37 = v36;
    swift_release();
    uint64_t v34 = 0;
    unsigned __int8 v58 = 0;
    uint64_t v33 = v37 & 1;
  }
  uint64_t v38 = v3[10];
  uint64_t v39 = v3[11];
  uint64_t v40 = v3[12];
  uint64_t v41 = v3[13];
  int v42 = *((unsigned __int8 *)v3 + 112);
  if (v42 == 255)
  {
    uint64_t v56 = v33;
    uint64_t v57 = v34;
    char v43 = -1;
  }
  else if (v42)
  {
    sub_1BFCAFF18(v38, v39, v40, v41, &v63);
    if (v2)
    {
      uint64_t v44 = v33;
      uint64_t v45 = v34;
LABEL_42:
      sub_1BFFC879C(v44, v45, v58);
      goto LABEL_43;
    }
    uint64_t v56 = v33;
    uint64_t v57 = v34;
    uint64_t v38 = v63;
    uint64_t v39 = v64;
    char v43 = 1;
    uint64_t v40 = v65;
    uint64_t v41 = v66;
  }
  else
  {
    uint64_t v56 = v33;
    uint64_t v57 = v34;
    char v43 = 0;
  }
  uint64_t v46 = v3[15];
  uint64_t v47 = v3[16];
  int v48 = *((unsigned __int8 *)v3 + 136);
  uint64_t v54 = v39;
  uint64_t v55 = v38;
  uint64_t v52 = v40;
  uint64_t v53 = v41;
  unsigned __int8 v51 = v43;
  if (v48 != 255)
  {
    uint64_t v63 = v3[15];
    uint64_t v64 = v47;
    LOBYTE(v65) = v48 & 1;
    sub_1C1517EFC();
    char v49 = FormatBoolean.value(contextLayoutOptions:)(v67);
    swift_release();
    if (!v2)
    {
      uint64_t v47 = 0;
      char v50 = 0;
      uint64_t v46 = v49 & 1;
      goto LABEL_50;
    }
    sub_1C006F0EC(v55, v54, v52, v53, v51);
    uint64_t v44 = v56;
    uint64_t v45 = v57;
    goto LABEL_42;
  }
  char v50 = -1;
LABEL_50:
  sub_1BFF8874C((uint64_t)(v3 + 4), (uint64_t)&v68, &qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(void *)uint64_t v61 = v5;
  *(void *)(v61 + 8) = v10;
  *(void *)(v61 + 16) = v14;
  *(void *)(v61 + 24) = v62;
  uint64_t result = sub_1BFF8874C((uint64_t)&v68, v61 + 32, &qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(void *)(v61 + 40) = v60;
  *(void *)(v61 + 48) = v59;
  *(void *)(v61 + 56) = v56;
  *(void *)(v61 + 64) = v57;
  *(unsigned char *)(v61 + 72) = v58;
  *(void *)(v61 + 80) = v55;
  *(void *)(v61 + 88) = v54;
  *(void *)(v61 + 96) = v52;
  *(void *)(v61 + 104) = v53;
  *(unsigned char *)(v61 + 112) = v51;
  *(void *)(v61 + 120) = v46;
  *(void *)(v61 + 128) = v47;
  *(unsigned char *)(v61 + 136) = v50;
  return result;
}

uint64_t sub_1C129893C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  if (*v1)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    double v6 = sub_1BFF493E4(v62, v5);
    if (v2) {
      return swift_release();
    }
    double v8 = v6;
    swift_release();
    uint64_t v9 = swift_allocObject();
    *(double *)(v9 + 16) = v8;
    sub_1BFFC0BF8();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
    *(void *)(v5 + 32) = v9;
    *(unsigned char *)(v5 + 40) = 0;
  }
  uint64_t v10 = v3[1];
  if (v10)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    double v11 = sub_1BFF493E4(v62, v10);
    if (v2)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    double v12 = v11;
    swift_release();
    uint64_t v13 = swift_allocObject();
    *(double *)(v13 + 16) = v12;
    sub_1BFFC0BF8();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    *(void *)(v10 + 32) = v13;
    *(unsigned char *)(v10 + 40) = 0;
  }
  uint64_t v14 = v3[2];
  if (v14)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    double v15 = sub_1BFF493E4(v62, v14);
    if (v2)
    {
      swift_release();
LABEL_47:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    double v16 = v15;
    swift_release();
    uint64_t v17 = swift_allocObject();
    *(double *)(v17 + 16) = v16;
    sub_1BFFC0BF8();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    *(void *)(v14 + 32) = v17;
    *(unsigned char *)(v14 + 40) = 0;
  }
  uint64_t v18 = v3[3];
  if (!v18)
  {
    uint64_t v61 = 0;
    uint64_t v20 = v3[5];
    if (!v20) {
      goto LABEL_20;
    }
LABEL_17:
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    double v21 = sub_1BFF493E4(v62, v20);
    if (v2)
    {
      swift_release();
LABEL_45:
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    double v27 = v21;
    swift_release();
    uint64_t v28 = swift_allocObject();
    *(double *)(v28 + 16) = v27;
    sub_1BFFC0BF8();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
    *(void *)(v29 + 32) = v28;
    uint64_t v60 = v29;
    *(unsigned char *)(v29 + 40) = 0;
    uint64_t v25 = v3[6];
    if (v25) {
      goto LABEL_21;
    }
LABEL_24:
    uint64_t v59 = 0;
    goto LABEL_26;
  }
  type metadata accessor for FormatDecorationContext();
  sub_1C1517EFC();
  double v19 = sub_1BFF493E4(v62, v18);
  if (v2)
  {
    swift_release();
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  double v22 = v19;
  swift_release();
  uint64_t v23 = swift_allocObject();
  *(double *)(v23 + 16) = v22;
  sub_1BFFC0BF8();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
  *(void *)(v24 + 32) = v23;
  uint64_t v61 = v24;
  *(unsigned char *)(v24 + 40) = 0;
  uint64_t v20 = v3[5];
  if (v20) {
    goto LABEL_17;
  }
LABEL_20:
  uint64_t v60 = 0;
  uint64_t v25 = v3[6];
  if (!v25) {
    goto LABEL_24;
  }
LABEL_21:
  type metadata accessor for FormatDecorationContext();
  sub_1C1517EFC();
  double v26 = sub_1BFF493E4(v62, v25);
  if (v2)
  {
    swift_release();
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  double v30 = v26;
  swift_release();
  uint64_t v31 = swift_allocObject();
  *(double *)(v31 + 16) = v30;
  sub_1BFFC0BF8();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
  *(void *)(v32 + 32) = v31;
  uint64_t v59 = v32;
  *(unsigned char *)(v32 + 40) = 0;
LABEL_26:
  uint64_t v33 = v3[7];
  uint64_t v34 = v3[8];
  int v35 = *((unsigned __int8 *)v3 + 72);
  if (v35 == 255)
  {
    unsigned __int8 v58 = -1;
  }
  else
  {
    uint64_t v62 = v3[7];
    uint64_t v63 = v34;
    LOBYTE(v64) = v35 & 1;
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    char v36 = FormatBoolean.value(contextLayoutOptions:)(v66);
    if (v2)
    {
      swift_release();
LABEL_43:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    char v37 = v36;
    swift_release();
    uint64_t v34 = 0;
    unsigned __int8 v58 = 0;
    uint64_t v33 = v37 & 1;
  }
  uint64_t v38 = v3[10];
  uint64_t v39 = v3[11];
  uint64_t v40 = v3[12];
  uint64_t v41 = v3[13];
  int v42 = *((unsigned __int8 *)v3 + 112);
  if (v42 == 255)
  {
    uint64_t v56 = v33;
    uint64_t v57 = v34;
    char v43 = -1;
  }
  else if (v42)
  {
    sub_1C1295F8C(v38, v39, v40, v41, &v62);
    if (v2)
    {
      uint64_t v44 = v33;
      uint64_t v45 = v34;
LABEL_42:
      sub_1BFFC879C(v44, v45, v58);
      goto LABEL_43;
    }
    uint64_t v56 = v33;
    uint64_t v57 = v34;
    uint64_t v38 = v62;
    uint64_t v39 = v63;
    char v43 = 1;
    uint64_t v40 = v64;
    uint64_t v41 = v65;
  }
  else
  {
    uint64_t v56 = v33;
    uint64_t v57 = v34;
    char v43 = 0;
  }
  uint64_t v46 = v3[15];
  uint64_t v47 = v3[16];
  int v48 = *((unsigned __int8 *)v3 + 136);
  uint64_t v54 = v39;
  uint64_t v55 = v38;
  uint64_t v52 = v40;
  uint64_t v53 = v41;
  unsigned __int8 v51 = v43;
  if (v48 != 255)
  {
    uint64_t v62 = v3[15];
    uint64_t v63 = v47;
    LOBYTE(v64) = v48 & 1;
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    char v49 = FormatBoolean.value(contextLayoutOptions:)(v66);
    swift_release();
    if (!v2)
    {
      uint64_t v47 = 0;
      char v50 = 0;
      uint64_t v46 = v49 & 1;
      goto LABEL_50;
    }
    sub_1C006F0EC(v55, v54, v52, v53, v51);
    uint64_t v44 = v56;
    uint64_t v45 = v57;
    goto LABEL_42;
  }
  char v50 = -1;
LABEL_50:
  sub_1BFF8874C((uint64_t)(v3 + 4), (uint64_t)&v67, &qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v61;
  uint64_t result = sub_1BFF8874C((uint64_t)&v67, a1 + 32, &qword_1EB85ED28, (uint64_t)&type metadata for FormatMediaTimingFillMode);
  *(void *)(a1 + 40) = v60;
  *(void *)(a1 + 48) = v59;
  *(void *)(a1 + 56) = v56;
  *(void *)(a1 + 64) = v57;
  *(unsigned char *)(a1 + 72) = v58;
  *(void *)(a1 + 80) = v55;
  *(void *)(a1 + 88) = v54;
  *(void *)(a1 + 96) = v52;
  *(void *)(a1 + 104) = v53;
  *(unsigned char *)(a1 + 112) = v51;
  *(void *)(a1 + 120) = v46;
  *(void *)(a1 + 128) = v47;
  *(unsigned char *)(a1 + 136) = v50;
  return result;
}

uint64_t sub_1C1298FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C00F6034(v2, (uint64_t)v59);
  int v6 = sub_1C00F6090((uint64_t)v59);
  uint64_t v7 = sub_1C00F609C((uint64_t)v59);
  if (v6 == 1)
  {
    uint64_t v39 = a2;
    uint64_t v40 = &v35;
    uint64_t v8 = *(void *)v7;
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t v10 = *(void *)(v7 + 16);
    uint64_t v11 = *(void *)(v7 + 24);
    uint64_t v12 = *(void *)(v7 + 32);
    uint64_t v13 = *(void *)(v7 + 40);
    char v14 = *(unsigned char *)(v7 + 48);
    uint64_t v15 = *(void *)(v7 + 56);
    uint64_t v16 = *(void *)(v7 + 64);
    uint64_t v17 = *(void *)(v7 + 72);
    uint64_t v37 = *(void *)(v7 + 80);
    uint64_t v38 = v17;
    uint64_t v18 = *(void *)(v7 + 88);
    uint64_t v35 = *(void *)(v7 + 96);
    uint64_t v36 = v18;
    char v19 = *(unsigned char *)(v7 + 104);
    v41[0] = a1;
    uint64_t v20 = *(void *)(v7 + 120);
    MEMORY[0x1F4188790](v7);
    uint64_t v34 = v41;
    uint64_t result = sub_1C0182454((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BFF9F260, (uint64_t)v33, v21);
    if (!v3)
    {
      v59[176] = v14 & 1;
      char v42 = v19 & 1;
      uint64_t v43 = v8;
      uint64_t v44 = v9;
      uint64_t v45 = v10;
      uint64_t v46 = v11;
      uint64_t v47 = v12;
      uint64_t v48 = v13;
      LOBYTE(v49) = v14 & 1;
      uint64_t v50 = v15;
      uint64_t v51 = v16;
      uint64_t v52 = v38;
      uint64_t v53 = v37;
      uint64_t v54 = v36;
      uint64_t v55 = v35;
      char v56 = v19 & 1;
      uint64_t v57 = result;
      uint64_t v58 = v20;
      sub_1C088473C((uint64_t)&v43);
      sub_1C00F6034((uint64_t)&v43, v39);
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v23 = *(void *)(v7 + 8);
    uint64_t v24 = *(void *)(v7 + 16);
    uint64_t v25 = *(void *)(v7 + 24);
    uint64_t v26 = *(void *)(v7 + 32);
    uint64_t v27 = *(void *)(v7 + 40);
    uint64_t v29 = *(void *)(v7 + 48);
    uint64_t v28 = *(void *)(v7 + 56);
    uint64_t v43 = a1;
    MEMORY[0x1F4188790](v7);
    uint64_t v34 = &v43;
    uint64_t result = sub_1C0182454((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BFF9F260, (uint64_t)v33, v30);
    if (!v3)
    {
      uint64_t v31 = result;
      swift_bridgeObjectRetain();
      if (v29)
      {
        sub_1C129A7C0(v29, v28, v41);
        uint64_t v32 = v41[0];
        uint64_t v28 = v41[1];
      }
      else
      {
        uint64_t v32 = 0;
      }
      uint64_t v43 = v31;
      uint64_t v44 = v23;
      uint64_t v45 = v24;
      uint64_t v46 = v25;
      uint64_t v47 = v26;
      uint64_t v48 = v27;
      uint64_t v49 = v32;
      uint64_t v50 = v28;
      sub_1C0884764((uint64_t)&v43);
      return sub_1C00F6034((uint64_t)&v43, a2);
    }
  }
  return result;
}

uint64_t sub_1C1299208(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1;
  uint64_t v69 = *v1;
  swift_beginAccess();
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[5];
  uint64_t v70 = v1[4];
  swift_beginAccess();
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    if (!*(void *)(v3 + 64))
    {
LABEL_8:
      uint64_t v54 = v5;
      uint64_t v55 = v7;
      uint64_t v56 = v8;
      uint64_t v52 = a1;
      uint64_t v57 = v12;
      uint64_t v53 = v6;
      uint64_t v14 = 0;
      goto LABEL_10;
    }
LABEL_5:
    v71[0] = a1;
    MEMORY[0x1F4188790](v11);
    v47[2] = v71;
    uint64_t v14 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)v47, v13);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
    uint64_t v54 = v5;
    uint64_t v55 = v7;
    uint64_t v56 = v8;
    uint64_t v52 = a1;
    uint64_t v57 = v12;
    uint64_t v53 = v6;
LABEL_10:
    uint64_t v58 = v14;
    uint64_t v18 = *(void *)(v3 + 72);
    uint64_t v17 = *(void *)(v3 + 80);
    int v19 = *(unsigned __int8 *)(v3 + 88);
    uint64_t v20 = *(void *)(v3 + 96);
    uint64_t v67 = *(void *)(v3 + 104);
    uint64_t v22 = *(void *)(v3 + 112);
    uint64_t v21 = *(void *)(v3 + 120);
    uint64_t v23 = *(void *)(v3 + 136);
    unint64_t v66 = *(void *)(v3 + 128);
    uint64_t v24 = *(void *)(v3 + 144);
    uint64_t v25 = *(void *)(v3 + 160);
    uint64_t v26 = *(void *)(v3 + 168);
    int v27 = *(unsigned __int8 *)(v3 + 176);
    uint64_t v68 = *(void *)(v3 + 152);
    uint64_t v64 = v23;
    uint64_t v65 = v24;
    uint64_t v62 = v22;
    uint64_t v63 = v21;
    uint64_t v61 = v20;
    uint64_t v60 = v25;
    uint64_t v59 = v26;
    if (v27 == 254)
    {
      LODWORD(v52) = 254;
      uint64_t v28 = v18;
      uint64_t v29 = v17;
      char v30 = v19;
      sub_1BFEF6828(v18, v17, v19);
      uint64_t v32 = v66;
      uint64_t v31 = v67;
    }
    else
    {
      uint64_t v50 = v18;
      uint64_t v49 = v17;
      int v48 = v19;
      uint64_t v51 = v2;
      uint64_t v33 = v25;
      uint64_t v34 = v26;
      sub_1BFEF6828(v18, v17, v19);
      uint64_t v35 = v21;
      unint64_t v36 = v66;
      sub_1BFEF8708(v20, v67, v22, v35, v66, v23, v24, v68, v33, v34, v27);
      uint64_t v37 = v51;
      sub_1BFF64090(v52, v36, v71);
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF8738(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
        sub_1BFEF68AC(v50, v49, v48);
        swift_bridgeObjectRelease();
        return v3;
      }
      LODWORD(v52) = v27;
      LODWORD(v31) = v67;
      sub_1BFEF8738(v61, v67, v62, v63, v66, v64, v65, v68, v60, v59, v27);
      uint64_t v32 = v71[0];
      uint64_t v31 = v31;
      char v30 = v48;
      uint64_t v29 = v49;
      uint64_t v28 = v50;
    }
    uint64_t v38 = v54;
    char v39 = *(unsigned char *)(v3 + 177);
    uint64_t v3 = swift_allocObject();
    swift_beginAccess();
    *(void *)(v3 + 16) = v53;
    *(void *)(v3 + 24) = v38;
    uint64_t v40 = v55;
    *(void *)(v3 + 32) = v70;
    *(void *)(v3 + 40) = v40;
    swift_beginAccess();
    uint64_t v41 = v57;
    *(void *)(v3 + 48) = v56;
    *(void *)(v3 + 56) = v41;
    *(void *)(v3 + 64) = v58;
    *(void *)(v3 + 72) = v28;
    *(void *)(v3 + 80) = v29;
    *(unsigned char *)(v3 + 88) = v30;
    *(void *)(v3 + 96) = v61;
    *(void *)(v3 + 104) = v31;
    uint64_t v42 = v63;
    *(void *)(v3 + 112) = v62;
    *(void *)(v3 + 120) = v42;
    uint64_t v43 = v64;
    *(void *)(v3 + 128) = v32;
    *(void *)(v3 + 136) = v43;
    uint64_t v44 = v68;
    *(void *)(v3 + 144) = v65;
    *(void *)(v3 + 152) = v44;
    uint64_t v45 = v59;
    *(void *)(v3 + 160) = v60;
    *(void *)(v3 + 168) = v45;
    *(unsigned char *)(v3 + 176) = v52;
    *(unsigned char *)(v3 + 177) = v39;
    return v3;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v10 = sub_1BFF493E4(v71[0], v9);
  if (!v2)
  {
    double v15 = v10;
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BFFC0BF8();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
    *(void *)(v11 + 32) = v16;
    *(unsigned char *)(v11 + 40) = 0;
    if (!*(void *)(v3 + 64)) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1C129979C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, void *, uint64_t *))
{
  void (*v30)(uint64_t *__return_ptr, void *, uint64_t *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *__return_ptr, void *, uint64_t *);
  uint64_t v56;
  void v57[4];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t *__return_ptr, void *, uint64_t *);
  uint64_t v83[3];

  uint64_t v82 = a2;
  uint64_t v4 = (uint64_t)v2;
  uint64_t v80 = *v2;
  swift_beginAccess();
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = *(void *)(v4 + 40);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v4 + 48);
  uint64_t v11 = *(void *)(v4 + 56);
  uint64_t v81 = v8;
  if (!v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v12 = sub_1BFF493E4(v83[0], v11);
  if (!v3)
  {
    double v15 = v12;
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v15;
    sub_1BFFC0BF8();
    uint64_t v13 = swift_allocObject();
    uint64_t v14 = v13;
    *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
    *(void *)(v13 + 32) = v16;
    *(unsigned char *)(v13 + 40) = 0;
LABEL_6:
    uint64_t v17 = *(void *)(v4 + 64);
    if ((~v17 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BFF07448(a1, v17, v83);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_24:
        sub_1BFEF68C0(v17);
        goto LABEL_25;
      }
      uint64_t v13 = sub_1BFEF68C0(v17);
      uint64_t v17 = v83[0];
    }
    uint64_t v18 = *(void *)(v4 + 72);
    uint64_t v69 = v7;
    if (v18)
    {
      v83[0] = a1;
      MEMORY[0x1F4188790](v13);
      v57[2] = v83;
      uint64_t v20 = sub_1C0182288(v82, (uint64_t)v57, v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF68C0(v17);
        swift_bridgeObjectRelease();
        return v4;
      }
      uint64_t v64 = 0;
      uint64_t v58 = v6;
      uint64_t v59 = v9;
      uint64_t v65 = a1;
      uint64_t v60 = v10;
      uint64_t v61 = v17;
      uint64_t v62 = v20;
      uint64_t v63 = v14;
    }
    else
    {
      uint64_t v64 = v3;
      uint64_t v58 = v6;
      uint64_t v59 = v9;
      uint64_t v65 = a1;
      uint64_t v60 = v10;
      uint64_t v61 = v17;
      uint64_t v63 = v14;
      uint64_t v62 = 0;
    }
    uint64_t v21 = *(void *)(v4 + 80);
    uint64_t v22 = *(void *)(v4 + 88);
    unsigned __int8 v23 = *(unsigned char *)(v4 + 96);
    uint64_t v24 = *(void *)(v4 + 104);
    uint64_t v25 = *(void *)(v4 + 112);
    uint64_t v26 = *(void *)(v4 + 120);
    uint64_t v27 = *(void *)(v4 + 128);
    uint64_t v28 = *(void *)(v4 + 136);
    uint64_t v29 = *(void *)(v4 + 144);
    uint64_t v31 = *(void *)(v4 + 152);
    char v30 = *(void (**)(uint64_t *__return_ptr, void *, uint64_t *))(v4 + 160);
    uint64_t v32 = *(void *)(v4 + 168);
    uint64_t v33 = *(void *)(v4 + 176);
    uint64_t v34 = *(unsigned __int8 *)(v4 + 184);
    uint64_t v68 = v23;
    uint64_t v67 = v22;
    unint64_t v66 = v21;
    uint64_t v82 = v30;
    uint64_t v78 = v29;
    uint64_t v79 = v31;
    uint64_t v74 = v26;
    uint64_t v75 = v27;
    int v76 = v28;
    uint64_t v77 = v25;
    uint64_t v73 = v24;
    uint64_t v72 = v32;
    uint64_t v71 = v33;
    uint64_t v70 = v34;
    if (v34 == 254)
    {
      sub_1BFEF6828(v21, v22, v23);
      uint64_t v35 = v65;
      unint64_t v36 = v64;
    }
    else
    {
      uint64_t v37 = v28;
      uint64_t v38 = v32;
      char v39 = v34;
      sub_1BFEF6828(v21, v22, v23);
      sub_1BFEF8708(v24, v25, v26, v27, v37, v78, v79, (uint64_t)v82, v38, v33, v39);
      uint64_t v35 = v65;
      uint64_t v40 = v64;
      sub_1BFF64090(v65, v37, v83);
      unint64_t v36 = v40;
      if (v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF8738(v73, v77, v74, v75, v76, v78, v79, (uint64_t)v82, v72, v71, v70);
        sub_1BFEF68AC(v66, v67, v68);
        sub_1BFEF68C0(v61);
LABEL_25:
        swift_bridgeObjectRelease();
        return v4;
      }
      uint64_t v41 = v77;
      sub_1BFEF8738(v73, v77, v74, v75, v76, v78, v79, (uint64_t)v82, v72, v71, v70);
      int v76 = v83[0];
      uint64_t v77 = v41;
    }
    uint64_t v42 = *(void *)(v4 + 192);
    uint64_t v43 = v63;
    uint64_t v17 = v61;
    uint64_t v44 = v60;
    if ((~v42 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BFF64090(v35, v42, v83);
      uint64_t v46 = v59;
      uint64_t v47 = v58;
      if (v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDC11BC(v42);
        sub_1BFEF8738(v73, v77, v74, v75, v76, v78, v79, (uint64_t)v82, v72, v71, v70);
        sub_1BFEF68AC(v66, v67, v68);
        goto LABEL_24;
      }
      uint64_t v45 = v43;
      sub_1BFDC11BC(v42);
      uint64_t v42 = v83[0];
    }
    else
    {
      uint64_t v45 = v63;
      uint64_t v46 = v59;
      uint64_t v47 = v58;
    }
    uint64_t v49 = *(unsigned char *)(v4 + 200);
    uint64_t v4 = swift_allocObject();
    swift_beginAccess();
    *(void *)(v4 + 16) = v69;
    *(void *)(v4 + 24) = v47;
    *(void *)(v4 + 32) = v81;
    *(void *)(v4 + 40) = v46;
    swift_beginAccess();
    *(void *)(v4 + 48) = v44;
    *(void *)(v4 + 56) = v45;
    uint64_t v50 = v62;
    *(void *)(v4 + 64) = v17;
    *(void *)(v4 + 72) = v50;
    uint64_t v51 = v67;
    *(void *)(v4 + 80) = v66;
    *(void *)(v4 + 88) = v51;
    *(unsigned char *)(v4 + 96) = v68;
    uint64_t v52 = v77;
    *(void *)(v4 + 104) = v73;
    *(void *)(v4 + 112) = v52;
    uint64_t v53 = v75;
    *(void *)(v4 + 120) = v74;
    *(void *)(v4 + 128) = v53;
    uint64_t v54 = v78;
    *(void *)(v4 + 136) = v76;
    *(void *)(v4 + 144) = v54;
    uint64_t v55 = v82;
    *(void *)(v4 + 152) = v79;
    *(void *)(v4 + 160) = v55;
    uint64_t v56 = v71;
    *(void *)(v4 + 168) = v72;
    *(void *)(v4 + 176) = v56;
    *(unsigned char *)(v4 + 184) = v70;
    *(void *)(v4 + 192) = v42;
    *(unsigned char *)(v4 + 200) = v49;
    return v4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

uint64_t sub_1C1299EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v82 = a6;
  uint64_t v83 = a7;
  uint64_t v80 = a4;
  uint64_t v81 = a5;
  uint64_t v8 = v7;
  uint64_t v89 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v84 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v86 = (uint64_t *)((char *)&v74 - v11);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v88 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v74 - v15;
  uint64_t v17 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v87 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = a1;
  swift_beginAccess();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = (uint64_t *)sub_1BFF1B2E4(v20, 0);
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t *)(*(uint64_t *)((char *)v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  swift_beginAccess();
  uint64_t v90 = v8;
  uint64_t v25 = *(void *)(v8 + 112);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v91 = v21;
  uint64_t v26 = v92;
  uint64_t v27 = sub_1C128F0D8(v25, (uint64_t)v21, v23, v24, (void (*)(uint64_t))sub_1C042CF68, sub_1C1295CA0, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A7284, (void (*)(void))type metadata accessor for FormatProgressViewNodeStyle, (void (*)(uint64_t))sub_1C042C330);
  uint64_t v92 = v26;
  if (!v26)
  {
    uint64_t v74 = v17;
    uint64_t v75 = v19;
    int v76 = v16;
    uint64_t v78 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v29 = v90;
    uint64_t v28 = v91;
    swift_beginAccess();
    uint64_t v30 = *(void *)(v29 + 16);
    uint64_t v31 = *(void *)(v29 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_1BFF303E0(v30, v31);
    uint64_t v79 = v32;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(v29 + 56);
    char v34 = *(unsigned char *)(v29 + 64);
    uint64_t v35 = *(void *)(v29 + 72);
    uint64_t v36 = *(void *)(v29 + 80);
    uint64_t v37 = *(void *)(v29 + 88);
    __int16 v38 = *(_WORD *)(v29 + 96);
    uint64_t v94 = v33;
    LOBYTE(v95) = v34;
    uint64_t v96 = v35;
    uint64_t v97 = v36;
    uint64_t v98 = v37;
    LOWORD(v99) = v38;
    sub_1C05DD058(v33, v34);
    sub_1C00AB510(v35, v36, v37, v38);
    uint64_t v39 = v92;
    sub_1C149FEDC((uint64_t)v28, (uint64_t)v102);
    uint64_t v92 = v39;
    if (v39)
    {
      sub_1C05DD064(v33, v34);
      sub_1C00AB5E0(v35, v36, v37, v38);
      swift_release();
LABEL_5:
      swift_bridgeObjectRelease();
      return swift_release();
    }
    sub_1C05DD064(v33, v34);
    sub_1C00AB5E0(v35, v36, v37, v38);
    uint64_t v40 = v102[1];
    uint64_t v41 = v74;
    uint64_t v42 = (uint64_t)v75;
    *uint64_t v75 = v102[0];
    *(void *)(v42 + 8) = v40;
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = (uint64_t)v76;
    sub_1BFF1B214(v42, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v43, 0, 1, v41);
    uint64_t v44 = v88;
    sub_1BFF235F0(v43, v88, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    uint64_t v89 = v40;
    sub_1C00F804C(v40);
    uint64_t v45 = v79;
    swift_bridgeObjectRetain();
    sub_1BFF3D9D4(v44, v77, v45);
    swift_endAccess();
    sub_1C12AD324(v43, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BFF1BA48(v42, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    uint64_t v46 = v90;
    swift_beginAccess();
    uint64_t v47 = *(void *)(v46 + 120);
    uint64_t v48 = *(void *)(v46 + 128);
    uint64_t v49 = *(void *)(v46 + 136);
    uint64_t v50 = *(void *)(v46 + 144);
    uint64_t v51 = *(void *)(v46 + 152);
    uint64_t v52 = *(void *)(v46 + 160);
    uint64_t v53 = *(void *)(v46 + 168);
    int v54 = *(unsigned __int8 *)(v46 + 176);
    uint64_t v94 = v47;
    uint64_t v95 = v48;
    uint64_t v96 = v49;
    uint64_t v97 = v50;
    uint64_t v98 = v51;
    uint64_t v99 = v52;
    uint64_t v100 = v53;
    char v101 = v54;
    uint64_t v55 = v51;
    uint64_t v56 = v52;
    uint64_t v88 = v53;
    LODWORD(v87) = v54;
    sub_1C08A7374(v47, v48, v49, v50, v51, v52, v53, v54);
    sub_1C1517EFC();
    uint64_t v57 = v92;
    FormatProgressKind.value(contextLayoutOptions:)(v93, (uint64_t)v102);
    uint64_t v92 = v57;
    if (v57)
    {
      sub_1C05DD070(v47, v48, v49, v50, v55, v56, v88, v87);
      sub_1C00F80E0(v89);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C05DD070(v47, v48, v49, v50, v55, v56, v88, v87);
      swift_release();
      sub_1C0B2BF64((uint64_t)v102, (uint64_t)v103);
      swift_getKeyPath();
      uint64_t v58 = v90;
      swift_beginAccess();
      v102[0] = *(void *)(v58 + 32);
      unint64_t v59 = v102[0];
      uint64_t v60 = v79;
      swift_bridgeObjectRetain();
      sub_1BFF35EA4(v59);
      uint64_t v61 = v86;
      uint64_t v62 = v92;
      uint64_t v63 = v77;
      sub_1BFF30600(v91, v77, v60, v86);
      uint64_t v92 = v62;
      if (!v62)
      {
        sub_1BFF322A8(v59);
        swift_beginAccess();
        uint64_t v65 = v91;
        swift_retain();
        uint64_t v66 = swift_bridgeObjectRetain();
        uint64_t v67 = (uint64_t)v65;
        uint64_t v68 = v92;
        sub_1C12A4C68(v66, v67);
        uint64_t v92 = v68;
        if (!v68)
        {
          swift_bridgeObjectRelease();
          uint64_t v69 = v63;
          uint64_t v70 = v91;
          swift_release();
          uint64_t v71 = (void *)swift_allocObject();
          _OWORD v71[2] = v69;
          uint64_t v71[3] = v60;
          uint64_t v72 = v90;
          v71[4] = v70;
          v71[5] = v72;
          v71[6] = v78;
          sub_1C0B2BF64((uint64_t)v103, (uint64_t)(v71 + 7));
          uint64_t v88 = v81(0);
          v82();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v73 = v92;
          sub_1C15173EC();
          uint64_t v92 = v73;
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1C00F80E0(v89);
          return (*(uint64_t (**)(uint64_t *, uint64_t))(v84 + 8))(v61, v85);
        }
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v84 + 8))(v61, v85);
        sub_1C00F80E0(v89);
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
        goto LABEL_5;
      }
      sub_1BFF322A8(v59);
      sub_1C00F80E0(v89);
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    swift_release();
    return swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1C129A7C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_1C1517EFC();
  double v7 = sub_1BFF493E4(v13, a1);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v9 = swift_allocObject();
    *(double *)(v9 + 16) = v7;
    sub_1BFFC0BF8();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    *(void *)(v10 + 32) = v9;
    *(unsigned char *)(v10 + 40) = 0;
    sub_1C1517EFC();
    double v11 = sub_1BFF493E4(v13, a2);
    swift_release();
    uint64_t v12 = swift_allocObject();
    *(double *)(v12 + 16) = v11;
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
    *(void *)(result + 32) = v12;
    *(unsigned char *)(result + 40) = 0;
    *a3 = v10;
    a3[1] = result;
  }
  return result;
}

uint64_t sub_1C129A928@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  type metadata accessor for FormatDecorationContext();
  sub_1C1517EFC();
  double v7 = sub_1BFF493E4(v13, a1);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v9 = swift_allocObject();
    *(double *)(v9 + 16) = v7;
    sub_1BFFC0BF8();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    *(void *)(v10 + 32) = v9;
    *(unsigned char *)(v10 + 40) = 0;
    sub_1C1517EFC();
    double v11 = sub_1BFF493E4(v13, a2);
    swift_release();
    uint64_t v12 = swift_allocObject();
    *(double *)(v12 + 16) = v11;
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
    *(void *)(result + 32) = v12;
    *(unsigned char *)(result + 40) = 0;
    *a3 = v10;
    a3[1] = result;
  }
  return result;
}

uint64_t sub_1C129AA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v61 = a7;
  uint64_t v60 = a6;
  unint64_t v59 = a5;
  uint64_t v58 = a4;
  uint64_t v8 = v7;
  uint64_t v67 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v63 = v11;
  uint64_t v62 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v69 = (uint64_t *)((char *)&v55 - v12);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v66 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v65 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FormatShareAttributionData();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v68 = (uint64_t)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SharedItem();
  uint64_t v57 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v57 + 64);
  MEMORY[0x1F4188790](v22 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v55 - v25;
  v74[5] = a1;
  uint64_t v79 = *(void *)(v8 + 80);
  uint64_t v27 = v79;
  sub_1BFFAF7A4((uint64_t)&v79);
  uint64_t v28 = (uint64_t *)sub_1BFF1B2E4(v27, 0);
  sub_1BFCA59C8((uint64_t)&v79);
  uint64_t v73 = v28;
  uint64_t v71 = v8;
  v78[0] = *(_OWORD *)v8;
  long long v29 = v78[0];
  swift_retain();
  sub_1BFF59A8C((uint64_t)v78);
  uint64_t v30 = (uint64_t)v26;
  uint64_t v70 = sub_1BFF303E0(v29, *((uint64_t *)&v29 + 1));
  uint64_t v32 = v31;
  sub_1BFF5E6C8((uint64_t)v78);
  swift_release();
  v74[3] = type metadata accessor for FormatNodeContext();
  uint64_t v74[4] = &off_1F1BFC148;
  v74[0] = a2;
  swift_retain();
  uint64_t v33 = v72;
  sub_1BFEDD4CC(v74, v30);
  if (v33)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = v23;
    uint64_t v72 = (uint64_t)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    uint64_t v35 = v68;
    sub_1BFF1B214(v30, v68, (uint64_t (*)(void))type metadata accessor for SharedItem);
    sub_1BFF1B214(v35, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatShareAttributionData);
    uint64_t v36 = v65;
    swift_storeEnumTagMultiPayload();
    sub_1BFF1B214((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v17, 0, 1, v36);
    uint64_t v56 = v30;
    uint64_t v37 = v66;
    sub_1BFF235F0((uint64_t)v17, v66, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v38 = v37;
    uint64_t v39 = v70;
    sub_1BFF3D9D4(v38, v70, v32);
    swift_endAccess();
    sub_1C12AD324((uint64_t)v17, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BFF1BA48((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    swift_getKeyPath();
    unint64_t v76 = *(void *)(v71 + 16);
    sub_1C12A8B68((uint64_t)&v76, (uint64_t)v77);
    sub_1C12A8B68((uint64_t)v77, (uint64_t)v74);
    swift_bridgeObjectRetain();
    sub_1C12A8BC4(&v76);
    uint64_t v40 = v69;
    uint64_t v41 = v73;
    sub_1BFF30600(v73, v39, v32, v69);
    uint64_t v42 = v32;
    uint64_t v43 = v35;
    uint64_t v44 = v39;
    uint64_t v67 = v42;
    uint64_t v45 = v56;
    sub_1C12A8BF0(&v76);
    uint64_t v75 = *(void *)(v71 + 32);
    uint64_t v46 = v75;
    swift_retain();
    sub_1BFFAF7A4((uint64_t)&v75);
    uint64_t v47 = sub_1C12A4C68(v46, (uint64_t)v41);
    uint64_t v48 = v73;
    uint64_t v66 = v47;
    swift_release();
    sub_1BFCA59C8((uint64_t)&v75);
    sub_1BFF1B214(v45, v72, (uint64_t (*)(void))type metadata accessor for SharedItem);
    unint64_t v49 = (*(unsigned __int8 *)(v57 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v71;
    long long v52 = *(_OWORD *)(v71 + 48);
    *(_OWORD *)(v50 + 56) = *(_OWORD *)(v71 + 32);
    *(_OWORD *)(v50 + 72) = v52;
    *(_OWORD *)(v50 + 88) = *(_OWORD *)(v51 + 64);
    long long v53 = *(_OWORD *)(v51 + 16);
    *(_OWORD *)(v50 + 24) = *(_OWORD *)v51;
    *(void *)(v50 + 16) = v48;
    uint64_t v54 = *(void *)(v51 + 80);
    *(_OWORD *)(v50 + 40) = v53;
    *(void *)(v50 + 104) = v54;
    *(void *)(v50 + 112) = v44;
    *(void *)(v50 + 120) = v67;
    sub_1BFF23AA4(v72, v50 + v49, (uint64_t (*)(void))type metadata accessor for SharedItem);
    swift_retain();
    sub_1C089E4F4(v51);
    v59(0);
    v60();
    sub_1C15173EC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t *, uint64_t))(v62 + 8))(v40, v63);
    sub_1BFF1BA48(v43, (uint64_t (*)(void))type metadata accessor for FormatShareAttributionData);
    return sub_1BFF1BA48(v56, (uint64_t (*)(void))type metadata accessor for SharedItem);
  }
}

uint64_t sub_1C129B37C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  switch(a2 & 7)
  {
    case 1uLL:
      uint64_t result = sub_1BFF9E978(a1, a2 & 0xFFFFFFFFFFFFFFF8, &v7);
      if (!v3)
      {
        uint64_t v6 = v7 | 1;
        goto LABEL_12;
      }
      break;
    case 2uLL:
      uint64_t result = sub_1BFF9E978(a1, a2 & 0xFFFFFFFFFFFFFFF8, &v7);
      if (!v3)
      {
        uint64_t v6 = v7 | 2;
        goto LABEL_12;
      }
      break;
    case 3uLL:
      uint64_t result = sub_1BFF9E978(a1, a2 & 0xFFFFFFFFFFFFFFF8, &v7);
      if (!v3)
      {
        uint64_t v6 = v7 | 3;
        goto LABEL_12;
      }
      break;
    case 4uLL:
      uint64_t result = sub_1BFF9E978(a1, a2 & 0xFFFFFFFFFFFFFFF8, &v7);
      if (!v3)
      {
        uint64_t v6 = v7 | 4;
        goto LABEL_12;
      }
      break;
    default:
      uint64_t result = sub_1BFF9E978(a1, a2, &v7);
      if (!v3)
      {
        uint64_t v6 = v7;
LABEL_12:
        *a3 = v6;
      }
      break;
  }
  return result;
}

uint64_t sub_1C129B458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v57 = a7;
  uint64_t v56 = a6;
  uint64_t v55 = a5;
  uint64_t v54 = a4;
  uint64_t v9 = v8;
  uint64_t v10 = v7;
  uint64_t KeyPath = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v59 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v66 = (uint64_t *)((char *)&v51 - v14);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v63 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v62 = (uint64_t)&v51 - v18;
  uint64_t v19 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v60 = *(void *)(v19 - 8);
  uint64_t v61 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = a1;
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = (uint64_t *)sub_1BFF1B2E4(v25, 0);
  swift_bridgeObjectRelease();
  uint64_t v27 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace;
  swift_beginAccess();
  uint64_t v28 = v10[2];
  uint64_t v29 = v10[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1BFF303E0(v28, v29);
  uint64_t v68 = v30;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = v26;
  uint64_t v31 = *(uint64_t *)((char *)v26 + v27);
  unint64_t v33 = v10[2];
  uint64_t v32 = v10[3];
  uint64_t v34 = *(void *)(v31 + 40);
  if (v34)
  {
    unint64_t v69 = *(void *)(v31 + 32);
    uint64_t v70 = v34;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v33 = v69;
    uint64_t v32 = v70;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v35 = v68;
  sub_1C098DFF8(*(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v24);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BFF30570((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v36 = v10[2];
    uint64_t v37 = v10[3];
    *uint64_t v38 = v36;
    v38[1] = v37;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();

    return swift_release();
  }
  else
  {
    unint64_t v52 = v33;
    sub_1BFF1B214((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
    uint64_t v39 = v61;
    swift_storeEnumTagMultiPayload();
    long long v53 = v24;
    uint64_t v40 = v62;
    sub_1BFF1B214((uint64_t)v21, v62, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v40, 0, 1, v39);
    uint64_t v41 = v63;
    sub_1BFF235F0(v40, v63, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v42 = v41;
    uint64_t v43 = v65;
    sub_1BFF3D9D4(v42, v65, v35);
    swift_endAccess();
    sub_1C12AD324(v40, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BFF1BA48((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    sub_1BFF1BA48((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
    uint64_t KeyPath = swift_getKeyPath();
    unint64_t v69 = v10[4];
    unint64_t v44 = v69;
    swift_bridgeObjectRetain();
    sub_1BFF35EA4(v44);
    uint64_t v45 = v67;
    sub_1BFF30600(v67, v43, v35, v66);
    sub_1BFF322A8(v44);
    swift_beginAccess();
    swift_retain();
    uint64_t v47 = swift_bridgeObjectRetain();
    sub_1C12A4C68(v47, (uint64_t)v45);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v48 = (void *)swift_allocObject();
    uint64_t v49 = v68;
    long long v48[2] = v65;
    v48[3] = v49;
    v48[4] = v52;
    v48[5] = v32;
    v48[6] = v10;
    v48[7] = v45;
    v55(0);
    v56();
    swift_retain();
    swift_retain();
    uint64_t v50 = v66;
    sub_1C15173EC();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v58 + 8))(v50, v59);
  }
}

uint64_t sub_1C129BC0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v40 = a4;
  uint64_t v5 = v4;
  uint64_t v39 = a3;
  uint64_t v44 = a1;
  sub_1C12A83C4(0, (unint64_t *)&qword_1EB8741D8, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v39 - v8;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v39 - v13);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items;
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 8);
  if (!*(void *)(v16 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, 1, 1, v11);
LABEL_7:
    sub_1BFFBD798((uint64_t)v9, (unint64_t *)&qword_1EB8741D8, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
    type metadata accessor for FormatLayoutError();
    sub_1BFF30570((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    void *v22 = v5;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return swift_willThrow();
  }
  uint64_t v17 = v5[4];
  uint64_t v18 = v5[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1BFEF2D8C(v17, v18);
  if (v20)
  {
    sub_1BFFF58F4(*(void *)(v16 + 56) + *(void *)(v12 + 72) * v19, (uint64_t)v9, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, v21, 1, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1) {
    goto LABEL_7;
  }
  sub_1BFFF74F4((uint64_t)v9, (uint64_t)v14, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
  swift_beginAccess();
  uint64_t v24 = v5[2];
  uint64_t v25 = v5[3];
  swift_bridgeObjectRetain();
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))sub_1BFF303E0(v24, v25);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v41;
  uint64_t v30 = sub_1C1089E2C(v14, a2, v26, v28);
  if (v29)
  {
    sub_1C12A8434((uint64_t)v14, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v32 = v5[9];
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = 32;
      uint64_t v36 = v39;
      uint64_t v35 = v40;
      do
      {
        long long v37 = *(_OWORD *)(v32 + v34);
        long long v38 = *(_OWORD *)(v32 + v34 + 16);
        uint64_t v43 = *(void *)(v32 + v34 + 32);
        v42[0] = v37;
        v42[1] = v38;
        sub_1BFF1BDBC((uint64_t)v42);
        v35(v44, v31, v36);
        sub_1BFF1BD7C((uint64_t)v42);
        v34 += 40;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
    }
    swift_release();
    return sub_1C12A8434((uint64_t)v14, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
}

uint64_t sub_1C129C180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v8 = v6;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BFF1B2E4(v10, 0);
  swift_bridgeObjectRelease();
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  uint64_t v13 = (uint64_t *)(*(void *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C1290390(v16, v11, v15, v14, (void (*)(uint64_t))sub_1C144D2C0, (void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A6F64, (void (*)(void))type metadata accessor for FormatVideoPlayerNodeStyle, (void (*)(uint64_t))sub_1C144C248);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7) {
    return swift_release();
  }
  uint64_t v46 = a2;
  uint64_t v47 = v17;
  swift_beginAccess();
  uint64_t v19 = v8[2];
  uint64_t v20 = v8[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1BFF303E0(v19, v20);
  uint64_t v23 = v22;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)(*(void *)(v11 + v12) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v8[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1BFEF32C8(v27, v11, v25, v26, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
  uint64_t v44 = v21;
  uint64_t v45 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v28 && (swift_beginAccess(), (uint64_t v29 = *(void *)(v28 + 72)) != 0) && *(void *)(v29 + 16))
  {
    uint64_t v30 = *(void *)(v28 + 48);
    uint64_t v31 = *(void *)(v28 + 56);
    int v32 = *(unsigned __int8 *)(v28 + 64);
    swift_retain();
    swift_retain();
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C12A4950(v33, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v32) {
      uint64_t v39 = 0;
    }
    else {
      uint64_t v39 = v31;
    }
    if (v32) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = v30;
    }
    type metadata accessor for FormatAnimationData();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v28;
    *(void *)(v41 + 24) = v40;
    *(void *)(v41 + 32) = v39;
    *(unsigned char *)(v41 + 40) = v32;
    *(void *)(v41 + 48) = v38;
    uint64_t v42 = *(void *)(a3 + 24);
    swift_beginAccess();
    swift_retain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *(void *)(v42 + 32);
    *(void *)(v42 + 32) = 0x8000000000000000;
    sub_1C0062D34(v41, v44, v45, isUniquelyReferenced_nonNull_native);
    *(void *)(v42 + 32) = v51;
    uint64_t v35 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    uint64_t v34 = v46;
  }
  else
  {
    uint64_t v35 = v23;
    uint64_t v34 = v46;
  }
  swift_unownedRetainStrong();
  swift_bridgeObjectRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v36 = v35;
  long long v37 = (void *)swift_allocObject();
  void v37[2] = v44;
  v37[3] = v36;
  v37[4] = v8;
  v37[5] = v11;
  v37[6] = v34;
  v37[7] = a3;
  v37[8] = v47;
  a5(0);
  a6();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C15173AC();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C129C6E4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8 = a2;
  if ((~a2 & 0xF000000000000007) != 0)
  {
    uint64_t result = sub_1BFF64090(result, a2, &v15);
    if (v5) {
      return result;
    }
    uint64_t v8 = v15;
  }
  if ((~a3 & 0xF000000000000007) != 0)
  {
    uint64_t v10 = swift_allocObject();
    uint64_t v15 = a3;
    sub_1C1517EFC();
    double v11 = FormatFloat.value(contextLayoutOptions:)(v14);
    uint64_t result = swift_release();
    if (v5)
    {
      swift_deallocUninitializedObject();
      return sub_1BFDC11BC(v8);
    }
    *(double *)(v10 + 16) = v11;
    a3 = v10;
  }
  if ((~a4 & 0xF000000000000007) != 0)
  {
    uint64_t v12 = swift_allocObject();
    uint64_t v15 = a4;
    sub_1C1517EFC();
    double v13 = FormatFloat.value(contextLayoutOptions:)(v14);
    uint64_t result = swift_release();
    if (v5)
    {
      swift_deallocUninitializedObject();
      sub_1BFEF68C0(a3);
      return sub_1BFDC11BC(v8);
    }
    *(double *)(v12 + 16) = v13;
    a4 = v12;
  }
  *a5 = v8;
  a5[1] = a3;
  a5[2] = a4;
  return result;
}

uint64_t sub_1C129CA64(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v60 = a7;
  uint64_t v59 = a6;
  uint64_t v58 = a5;
  uint64_t v57 = a4;
  uint64_t v9 = v8;
  uint64_t v10 = v7;
  uint64_t v67 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v62 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v68 = (uint64_t *)((char *)&v53 - v14);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v65 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v66 = (uint64_t)&v53 - v18;
  uint64_t v19 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v63 = *(void *)(v19 - 8);
  uint64_t v64 = (uint64_t *)v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char **)((char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = a1;
  swift_beginAccess();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v69 = a2;
  uint64_t v23 = sub_1BFF1B2E4(v22, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v24 = v10[2];
  uint64_t v25 = v10[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1BFF303E0(v24, v25);
  uint64_t v28 = v27;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t *)(*(void *)(v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  uint64_t v32 = v10[11];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1BFEF32C8(v32, v23, v31, v30, (void (*)(uint64_t))sub_1C045FAD8, (uint64_t (*)(uint64_t))sub_1C12A5B24, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A5CA4, (void (*)(void))type metadata accessor for FormatWebEmbedNodeStyle, (void (*)(uint64_t))sub_1C045EC88);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v54 = v21;
    uint64_t v55 = v33;
    uint64_t v56 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v34 = v10[7];
    type metadata accessor for FormatWebEmbedDataConfig();
    swift_allocObject();
    swift_retain();
    uint64_t v35 = (objc_class *)swift_retain();
    uint64_t v36 = sub_1C147201C(v35, v34);
    unint64_t v70 = v10[4];
    swift_retain();
    long long v37 = sub_1C1011638(v23, v36);
    uint64_t v69 = v36;
    swift_release();
    uint64_t v38 = (uint64_t)v54;
    *uint64_t v54 = v37;
    uint64_t v39 = v64;
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = v66;
    sub_1BFF1B214(v38, v66, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t *))(v63 + 56))(v40, 0, 1, v39);
    uint64_t v64 = (uint64_t *)v23;
    uint64_t v41 = v65;
    sub_1BFF235F0(v40, v65, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_retain();
    uint64_t v67 = v37;
    uint64_t v42 = v56;
    swift_bridgeObjectRetain();
    sub_1BFF3D9D4(v41, v26, v42);
    swift_endAccess();
    uint64_t v43 = v26;
    sub_1C12AD324(v40, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    uint64_t v44 = v38;
    uint64_t v45 = v64;
    sub_1BFF1BA48(v44, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    swift_getKeyPath();
    unint64_t v70 = v10[8];
    unint64_t v46 = v70;
    swift_bridgeObjectRetain();
    sub_1BFF35EA4(v46);
    uint64_t v47 = v68;
    sub_1BFF30600(v45, v43, v42, v68);
    sub_1BFF322A8(v46);
    swift_beginAccess();
    swift_retain();
    uint64_t v48 = swift_bridgeObjectRetain();
    uint64_t v66 = sub_1C12A4C68(v48, (uint64_t)v45);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v50 = (void *)swift_allocObject();
    uint64_t v53 = v43;
    v50[2] = v43;
    v50[3] = v42;
    v50[4] = v45;
    v50[5] = v10;
    uint64_t v51 = v67;
    v50[6] = v55;
    v50[7] = v51;
    uint64_t v52 = v58(0);
    uint64_t v65 = 0;
    uint64_t v63 = v52;
    v59();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C15173EC();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v61 + 8))(v47, v62);
  }
}

uint64_t sub_1C129D2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t a8)
{
  uint64_t v118 = a8;
  unint64_t v117 = a7;
  uint64_t v116 = a6;
  uint64_t v115 = a5;
  uint64_t v123 = a4;
  uint64_t v131 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v119 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v104 - v13);
  uint64_t v121 = sub_1C1517A9C();
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  uint64_t v122 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v130 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v104 - v19;
  uint64_t v128 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v129 = (uint64_t *)((char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v153 = a1;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v8 + 16);
  uint64_t v22 = *(void *)(v8 + 24);
  uint64_t v133 = v8;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1BFF303E0(v23, v22);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *(void *)&long long v134 = a2;
  uint64_t v27 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  if (!*(void *)(v27 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  uint64_t v126 = v24;
  unint64_t v28 = sub_1BFEF2D8C(v24, v26);
  if ((v29 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = v126;
LABEL_6:
    type metadata accessor for FormatLayoutError();
    sub_1BFF30570((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    *uint64_t v48 = v24;
    v48[1] = v26;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v107 = v20;
  uint64_t v106 = v14;
  uint64_t v105 = v12;
  uint64_t v30 = *(void *)(v27 + 56) + 88 * v28;
  unint64_t v31 = *(void *)(v30 + 8);
  unint64_t v114 = *(void *)v30;
  unint64_t v125 = v31;
  uint64_t v32 = *(void *)(v30 + 24);
  uint64_t v113 = *(void *)(v30 + 16);
  unint64_t v34 = *(void *)(v30 + 32);
  uint64_t v33 = *(void *)(v30 + 40);
  uint64_t v35 = *(void *)(v30 + 48);
  uint64_t v36 = *(void *)(v30 + 56);
  uint64_t v37 = *(void *)(v30 + 64);
  uint64_t v38 = *(void *)(v30 + 72);
  int v39 = *(unsigned __int8 *)(v30 + 80);
  swift_bridgeObjectRetain();
  uint64_t v111 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v124 = v37;
  sub_1BFF429DC(v35, v36, v37, v38, v39);
  swift_bridgeObjectRelease();
  unint64_t v142 = v114;
  unint64_t v143 = v125;
  uint64_t v144 = v113;
  uint64_t v145 = v32;
  uint64_t v146 = v34;
  uint64_t v147 = v33;
  uint64_t v148 = v35;
  uint64_t v149 = v36;
  uint64_t v150 = v37;
  uint64_t v151 = v38;
  char v152 = v39;
  sub_1C0DB42A8((uint64_t)&v142);
  swift_beginAccess();
  uint64_t v108 = v26;
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v109 = (uint64_t *)sub_1BFF1B2E4(v40, 0);
  swift_release();
  uint64_t v41 = v35;
  uint64_t v42 = v38;
  uint64_t v43 = v124;
  swift_bridgeObjectRelease();
  uint64_t v135 = v41;
  uint64_t v136 = v36;
  uint64_t v137 = v43;
  uint64_t v138 = v42;
  char v139 = v39;
  unint64_t v142 = v34;
  unint64_t v143 = v33;
  uint64_t v144 = v41;
  uint64_t v145 = v36;
  uint64_t v146 = v43;
  uint64_t v147 = v42;
  LOBYTE(v148) = v39;
  unint64_t v112 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF429DC(v41, v36, v43, v42, v39);
  int v110 = v39;
  sub_1BFF429DC(v41, v36, v43, v42, v39);
  uint64_t v44 = v132;
  sub_1C1373C04(v134, v113, v111, v114, v125, (unint64_t *)&v140);
  if (v44)
  {
    uint64_t v45 = v124;
    char v46 = v110;
    sub_1BFEC41E8(v41, v36, v124, v42, v110);
    swift_bridgeObjectRelease();
    *(void *)&long long v134 = v44;
    swift_bridgeObjectRelease();
    sub_1BFEC41E8(v41, v36, v45, v42, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1BFEC41E8(v41, v36, v45, v42, v46);
  }
  uint64_t v49 = v124;
  char v50 = v110;
  sub_1BFEC41E8(v41, v36, v124, v42, v110);
  long long v134 = v140;
  uint64_t v51 = v141;
  type metadata accessor for FormatStateMachineData();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v112;
  *(void *)(v52 + 24) = v33;
  unint64_t v114 = v41;
  *(void *)(v52 + 32) = v41;
  *(void *)(v52 + 40) = v36;
  uint64_t v104 = v36;
  *(void *)(v52 + 48) = v49;
  *(void *)(v52 + 56) = v42;
  uint64_t v132 = v42;
  *(unsigned char *)(v52 + 64) = v50;
  *(_OWORD *)(v52 + 72) = v134;
  *(void *)(v52 + 88) = v51;
  uint64_t v53 = (uint64_t)v129;
  *uint64_t v129 = v52;
  uint64_t v54 = v128;
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = *(void *)(v131 + 24);
  uint64_t v113 = v33;
  uint64_t v56 = (uint64_t)v107;
  sub_1BFF1B214(v53, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v56, 0, 1, v54);
  uint64_t v57 = v130;
  sub_1BFF235F0(v56, v130, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v128 = v55;
  swift_beginAccess();
  swift_retain_n();
  uint64_t v58 = v108;
  swift_bridgeObjectRetain();
  sub_1BFF3D9D4(v57, v126, v58);
  swift_endAccess();
  sub_1C12AD324(v56, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BFF1BA48(v53, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  type metadata accessor for FormatStateViewNodeStateMapper();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v60 = v109;
  uint64_t v61 = (uint64_t *)(*(uint64_t *)((char *)v109 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v62 = *v61;
  uint64_t v63 = v61[1];
  uint64_t v64 = *(void *)(v133 + 104);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1BFEF32C8(v64, (uint64_t)v60, v62, v63, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
  uint64_t v66 = v58;
  *(void *)&long long v134 = 0;
  uint64_t v67 = v65;
  uint64_t v68 = v128;
  uint64_t v130 = v59;
  uint64_t v129 = (void *)v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v69 = v67;
  if (v67 && (swift_beginAccess(), (uint64_t v70 = *(void *)(v67 + 72)) != 0) && *(void *)(v70 + 16))
  {
    uint64_t v71 = *(void *)(v67 + 48);
    uint64_t v72 = *(void *)(v67 + 56);
    int v73 = *(unsigned __int8 *)(v67 + 64);
    swift_retain();
    uint64_t v74 = v109;
    swift_retain();
    uint64_t v75 = swift_bridgeObjectRetain();
    unint64_t v76 = v74;
    uint64_t v77 = (uint64_t)v74;
    uint64_t v78 = v134;
    uint64_t v79 = sub_1C12A4950(v75, v77);
    uint64_t v80 = v78;
    if (v78)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_1BFEC41E8(v114, v104, v124, v132, v110);
      return swift_bridgeObjectRelease();
    }
    *(void *)&long long v134 = v79;
    swift_bridgeObjectRelease();
    swift_release();
    if (v73)
    {
      uint64_t v72 = 0;
      uint64_t v71 = 0;
    }
    type metadata accessor for FormatAnimationData();
    uint64_t v95 = swift_allocObject();
    uint64_t v127 = v69;
    *(void *)(v95 + 16) = v69;
    *(void *)(v95 + 24) = v71;
    uint64_t v81 = v76;
    *(void *)(v95 + 32) = v72;
    *(unsigned char *)(v95 + 40) = v73;
    *(void *)(v95 + 48) = v134;
    swift_beginAccess();
    swift_retain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v140 = *(void *)(v68 + 32);
    *(void *)(v68 + 32) = 0x8000000000000000;
    sub_1C0062D34(v95, v126, v66, isUniquelyReferenced_nonNull_native);
    *(void *)(v68 + 32) = v140;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    uint64_t v82 = v133;
    uint64_t v83 = v131;
    uint64_t v84 = v121;
    uint64_t v85 = v120;
  }
  else
  {
    uint64_t v127 = v67;
    uint64_t v81 = v109;
    uint64_t v82 = v133;
    uint64_t v83 = v131;
    uint64_t v84 = v121;
    uint64_t v85 = v120;
    uint64_t v80 = v134;
  }
  uint64_t v86 = (*(uint64_t (**)(char *, void, uint64_t))(v85 + 104))(v122, *MEMORY[0x1E4FAB8F8], v84);
  MEMORY[0x1F4188790](v86);
  uint64_t v87 = v126;
  *(&v104 - 6) = v126;
  *(&v104 - 5) = v66;
  *(&v104 - 4) = (uint64_t)v81;
  *(&v104 - 3) = v82;
  uint64_t v102 = v83;
  uint64_t v103 = v130;
  sub_1BFF33D2C(0, &qword_1EB884DC8, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v88 = sub_1C1517C0C();
  if (v80)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    sub_1BFEC41E8(v114, v104, v124, v132, v110);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v89 = v88;
    swift_getKeyPath();
    swift_beginAccess();
    *(void *)&long long v140 = *(void *)(v82 + 32);
    unint64_t v90 = v140;
    swift_bridgeObjectRetain();
    sub_1BFF35EA4(v90);
    sub_1BFF30600(v109, v87, v66, v106);
    sub_1BFF322A8(v90);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v91 = v109;
    swift_retain();
    uint64_t v92 = swift_bridgeObjectRetain();
    uint64_t v93 = sub_1C12A4C68(v92, (uint64_t)v91);
    uint64_t v94 = v130;
    *(void *)&long long v134 = v93;
    swift_bridgeObjectRelease();
    uint64_t v97 = v109;
    swift_release();
    uint64_t v98 = (void *)swift_allocObject();
    uint64_t v131 = v89;
    v98[2] = v94;
    v98[3] = v82;
    v98[4] = v97;
    uint64_t v99 = v116(0);
    uint64_t v100 = v117();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v102 = v99;
    uint64_t v103 = v100;
    char v101 = v106;
    sub_1C15173CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFEC41E8(v114, v104, v124, v132, v110);
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v119 + 8))(v101, v105);
  }
}

uint64_t sub_1C129E54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v72 = a6;
  uint64_t v73 = a7;
  uint64_t v70 = a4;
  uint64_t v71 = a5;
  uint64_t v9 = v8;
  uint64_t v10 = v7;
  uint64_t v83 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v75 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v81 = (uint64_t *)((char *)&v64 - v13);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v79 = (uint64_t)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v82 = (char *)&v64 - v18;
  uint64_t v19 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v77 = *(void *)(v19 - 8);
  uint64_t v78 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v84 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for FormatMicaData();
  MEMORY[0x1F4188790](v76);
  uint64_t v92 = (uint64_t *)((char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], v14);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v64 - v23;
  v89[10] = a1;
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = (uint64_t *)sub_1BFF1B2E4(v25, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v27 = *(void *)(v7 + 16);
  uint64_t v28 = *(void *)(v7 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v80 = sub_1BFF303E0(v27, v28);
  uint64_t v30 = v29;
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v31 = (uint64_t *)(*(uint64_t *)((char *)v26 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v32 = *v31;
  uint64_t v33 = v31[1];
  uint64_t v34 = *(void *)(v10 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C128F0D8(v34, (uint64_t)v26, v32, v33, (void (*)(uint64_t))sub_1C107BA44, sub_1C1299208, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A62E4, (void (*)(void))type metadata accessor for FormatMicaNodeStyle, (void (*)(uint64_t))sub_1C107AADC);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v68 = v35;
    uint64_t v69 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v36 = *(void *)(v10 + 64);
    swift_retain();
    sub_1C11137C8((uint64_t)v26, v36, v89);
    uint64_t v38 = v10;
    swift_release();
    uint64_t v67 = v89[0];
    sub_1BFF8874C(v10 + 72, (uint64_t)v86, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BFF8874C((uint64_t)v86, (uint64_t)v87, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
    if (sub_1C00F6584((uint64_t *)v87) == 1)
    {
      uint64_t v65 = v26;
      uint64_t v66 = 0;
      uint64_t v39 = sub_1C151A8EC();
      uint64_t v40 = (uint64_t)v24;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v24, 1, 1, v39);
      uint64_t v41 = v92;
      uint64_t v42 = (uint64_t)v82;
      uint64_t v43 = v84;
    }
    else
    {
      v90[6] = v87[6];
      v91[0] = v88[0];
      *(_OWORD *)((char *)v91 + 9) = *(_OWORD *)((char *)v88 + 9);
      v90[2] = v87[2];
      v90[3] = v87[3];
      v90[4] = v87[4];
      v90[5] = v87[5];
      v90[0] = v87[0];
      v90[1] = v87[1];
      sub_1C1114AC0((uint64_t)v86);
      swift_retain();
      sub_1C1112D20((uint64_t)v90);
      uint64_t v41 = v92;
      uint64_t v42 = (uint64_t)v82;
      uint64_t v43 = v84;
      uint64_t v65 = v26;
      uint64_t v66 = 0;
      uint64_t v44 = sub_1C151A8EC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v24, 0, 1, v44);
      uint64_t v40 = (uint64_t)v24;
    }
    uint64_t v64 = v40;
    uint64_t v45 = v76;
    sub_1BFF235F0(v40, (uint64_t)v41 + *(int *)(v76 + 20), (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
    swift_beginAccess();
    int v46 = *(_DWORD *)(v10 + 212);
    char v47 = *(unsigned char *)(v10 + 216);
    uint64_t v48 = v67;
    *uint64_t v41 = v67;
    uint64_t v49 = (char *)v41 + *(int *)(v45 + 24);
    *(_DWORD *)uint64_t v49 = v46;
    void v49[4] = v47;
    sub_1BFF1B214((uint64_t)v41, v43, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
    uint64_t v50 = v78;
    swift_storeEnumTagMultiPayload();
    sub_1BFF1B214(v43, v42, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v42, 0, 1, v50);
    uint64_t v51 = v79;
    sub_1BFF235F0(v42, v79, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    uint64_t v52 = v48 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    uint64_t v53 = v69;
    swift_bridgeObjectRetain();
    uint64_t v54 = v51;
    uint64_t v55 = v80;
    sub_1BFF3D9D4(v54, v80, v53);
    swift_endAccess();
    sub_1C12AD324(v42, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BFF1BA48(v84, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    uint64_t KeyPath = swift_getKeyPath();
    unint64_t v57 = *(void *)(v38 + 32);
    uint64_t v84 = v38;
    unint64_t v85 = v57;
    swift_bridgeObjectRetain();
    sub_1BFF35EA4(v57);
    uint64_t v59 = v65;
    uint64_t v58 = v66;
    sub_1BFF30600(v65, v55, v53, v81);
    if (v58)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      sub_1BFF322A8(v57);
    }
    else
    {
      uint64_t v82 = (char *)KeyPath;
      uint64_t v83 = v52;
      sub_1BFF322A8(v57);
      uint64_t v60 = v84;
      swift_beginAccess();
      swift_retain();
      uint64_t v61 = swift_bridgeObjectRetain();
      uint64_t v79 = sub_1C12A4C68(v61, (uint64_t)v59);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v62 = (void *)swift_allocObject();
      uint64_t v63 = v69;
      v62[2] = v80;
      v62[3] = v63;
      v62[4] = v59;
      v62[5] = v60;
      v62[6] = v68;
      uint64_t v78 = v71(0);
      v72();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C15173EC();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v74 + 8))(v81, v75);
    }
    sub_1BFF1BA48((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
    return sub_1C12AD324(v64, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
  }
}

uint64_t sub_1C129F028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t a7)
{
  uint64_t v82 = a7;
  uint64_t v81 = a6;
  uint64_t v80 = a5;
  uint64_t v79 = a4;
  uint64_t v9 = v8;
  uint64_t v10 = v7;
  uint64_t v83 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v84 = v13;
  uint64_t v85 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v86 = (void *)((char *)v71 - v14);
  uint64_t v94 = a1;
  swift_beginAccess();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t KeyPath = a2;
  uint64_t v16 = (uint64_t *)sub_1BFF1B2E4(v15, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v17 = v10[2];
  uint64_t v18 = v10[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v87 = sub_1BFF303E0(v17, v18);
  uint64_t v20 = v19;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  uint64_t v22 = (uint64_t *)(*(uint64_t *)((char *)v16 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = v10[5];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C128F0D8(v25, (uint64_t)v16, v23, v24, (void (*)(uint64_t))sub_1C09D7D1C, sub_1C1297768, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A6604, (void (*)(void))type metadata accessor for FormatLayeredMediaNodeStyle, (void (*)(uint64_t))sub_1C09D6BAC);
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v27 = v26;
    uint64_t v77 = v21;
    uint64_t v78 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v90 = v10[4];
    swift_retain();
    FormatLayeredMediaNodeContent.layeredMedia(from:)(KeyPath, &v91);
    uint64_t v75 = v10;
    swift_release();
    uint64_t v29 = v91;
    uint64_t v28 = v92;
    uint64_t v30 = v93;
    uint64_t v76 = v27;
    if (!v27 || (int v31 = *(unsigned __int8 *)(v27 + 208), v31 == 255))
    {
      int v49 = 2;
    }
    else
    {
      uint64_t v32 = *(void *)(v27 + 192);
      uint64_t v33 = *(void *)(v27 + 200);
      uint64_t v91 = v32;
      uint64_t v92 = v33;
      LOBYTE(v93) = v31 & 1;
      sub_1BFE94AB4(v32, v33, v31 & 1);
      sub_1C1517EFC();
      char v48 = FormatBoolean.value(contextLayoutOptions:)(v90);
      sub_1BFFC879C(v32, v33, v31);
      swift_release();
      int v49 = v48 & 1;
    }
    int v74 = v49;
    uint64_t v34 = v87;
    if (*(uint64_t *)((char *)v16 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8))
    {
      uint64_t v91 = v87;
      uint64_t v92 = v78;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      sub_1C151E80C();
      uint64_t v34 = v91;
      uint64_t v35 = v92;
    }
    else
    {
      uint64_t v35 = swift_bridgeObjectRetain();
    }
    type metadata accessor for LayeredMediaLoader();
    unint64_t v36 = (void *)swift_allocObject();
    uint64_t v37 = type metadata accessor for LayeredMediaParser();
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = v34;
    v38[3] = v35;
    uint64_t v39 = v29;
    v38[4] = v29;
    v38[5] = v28;
    v36[5] = v37;
    v36[6] = &protocol witness table for LayeredMediaParser;
    _OWORD v36[2] = v38;
    if (v76 && (uint64_t v40 = *(void *)(v76 + 240)) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v40 = MEMORY[0x1E4FBC860];
    }
    uint64_t v41 = v77;
    swift_retain();
    uint64_t v72 = sub_1C12A4E58(v40);
    uint64_t v73 = v36;
    uint64_t v77 = v28;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v42 = (uint64_t *)(*(uint64_t *)((char *)v16 + v41) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    uint64_t v43 = *v42;
    uint64_t v44 = v42[1];
    uint64_t v45 = v75;
    uint64_t v46 = v75[6];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1BFEF32C8(v46, (uint64_t)v16, v43, v44, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v50 && (swift_beginAccess(), (uint64_t v51 = *(void *)(v50 + 72)) != 0) && *(void *)(v51 + 16))
    {
      uint64_t v52 = *(void *)(v50 + 48);
      uint64_t v53 = *(void *)(v50 + 56);
      int v54 = *(unsigned __int8 *)(v50 + 64);
      swift_retain();
      swift_retain();
      uint64_t v55 = swift_bridgeObjectRetain();
      uint64_t v66 = sub_1C12A4950(v55, (uint64_t)v16);
      swift_bridgeObjectRelease();
      swift_release();
      if (v54) {
        uint64_t v67 = 0;
      }
      else {
        uint64_t v67 = v53;
      }
      if (v54) {
        uint64_t v52 = 0;
      }
      type metadata accessor for FormatAnimationData();
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = v50;
      *(void *)(v68 + 24) = v52;
      *(void *)(v68 + 32) = v67;
      *(unsigned char *)(v68 + 40) = v54;
      *(void *)(v68 + 48) = v66;
      uint64_t v69 = *(void *)(v83 + 24);
      swift_beginAccess();
      swift_retain_n();
      uint64_t v56 = v78;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v89 = *(void *)(v69 + 32);
      *(void *)(v69 + 32) = 0x8000000000000000;
      sub_1C0062D34(v68, v87, v56, isUniquelyReferenced_nonNull_native);
      *(void *)(v69 + 32) = v89;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release_n();
      uint64_t v45 = v75;
    }
    else
    {
      uint64_t v56 = v78;
    }
    uint64_t v57 = KeyPath + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
    uint64_t v58 = *(void *)(*(void *)(*(void *)(v57 + *(int *)(type metadata accessor for GroupLayoutContext() + 40))
                                + 24)
                    + 48);
    uint64_t KeyPath = swift_getKeyPath();
    unint64_t v90 = v45[7];
    unint64_t v59 = v90;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BFF35EA4(v59);
    sub_1BFF30600(v16, v87, v56, v86);
    uint64_t v78 = v58;
    sub_1BFF322A8(v59);
    swift_beginAccess();
    swift_retain();
    uint64_t v60 = swift_bridgeObjectRetain();
    v71[1] = sub_1C12A4C68(v60, (uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = v45;
    uint64_t v79 = v50;
    v71[0] = v16;
    uint64_t v63 = v78;
    *(void *)(v61 + 16) = v16;
    *(void *)(v61 + 24) = v63;
    *(void *)(v61 + 32) = v73;
    *(unsigned char *)(v61 + 40) = v74;
    *(void *)(v61 + 48) = v72;
    *(void *)(v61 + 56) = v39;
    *(void *)(v61 + 64) = v77;
    *(void *)(v61 + 72) = v30;
    uint64_t v64 = v87;
    *(void *)(v61 + 80) = v83;
    *(void *)(v61 + 88) = v64;
    *(void *)(v61 + 96) = v56;
    *(void *)(v61 + 104) = v62;
    *(void *)(v61 + 112) = v76;
    uint64_t v80 = (uint64_t (*)(void))v80(0);
    v81();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v65 = v86;
    sub_1C15173EC();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v85 + 8))(v65, v84);
  }
}

uint64_t sub_1C129FC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v8 = v6;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BFF1B2E4(v10, 0);
  swift_bridgeObjectRelease();
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  uint64_t v13 = (uint64_t *)(*(void *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C1290390(v16, v11, v15, v14, (void (*)(uint64_t))sub_1C0AE96D4, (void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A6924, (void (*)(void))type metadata accessor for FormatVideoNodeStyle, (void (*)(uint64_t))sub_1C0AE865C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7) {
    return swift_release();
  }
  uint64_t v46 = a2;
  uint64_t v47 = v17;
  swift_beginAccess();
  uint64_t v19 = v8[2];
  uint64_t v20 = v8[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1BFF303E0(v19, v20);
  uint64_t v23 = v22;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t *)(*(void *)(v11 + v12) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v8[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1BFEF32C8(v27, v11, v25, v26, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
  uint64_t v44 = v21;
  uint64_t v45 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v28 && (swift_beginAccess(), (uint64_t v29 = *(void *)(v28 + 72)) != 0) && *(void *)(v29 + 16))
  {
    uint64_t v30 = *(void *)(v28 + 48);
    uint64_t v31 = *(void *)(v28 + 56);
    int v32 = *(unsigned __int8 *)(v28 + 64);
    swift_retain();
    swift_retain();
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C12A4950(v33, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v32) {
      uint64_t v39 = 0;
    }
    else {
      uint64_t v39 = v31;
    }
    if (v32) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = v30;
    }
    type metadata accessor for FormatAnimationData();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v28;
    *(void *)(v41 + 24) = v40;
    *(void *)(v41 + 32) = v39;
    *(unsigned char *)(v41 + 40) = v32;
    *(void *)(v41 + 48) = v38;
    uint64_t v42 = *(void *)(a3 + 24);
    swift_beginAccess();
    swift_retain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *(void *)(v42 + 32);
    *(void *)(v42 + 32) = 0x8000000000000000;
    sub_1C0062D34(v41, v44, v45, isUniquelyReferenced_nonNull_native);
    *(void *)(v42 + 32) = v51;
    uint64_t v35 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    uint64_t v34 = v46;
  }
  else
  {
    uint64_t v35 = v23;
    uint64_t v34 = v46;
  }
  swift_unownedRetainStrong();
  swift_bridgeObjectRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v36 = v35;
  uint64_t v37 = (void *)swift_allocObject();
  void v37[2] = v44;
  v37[3] = v36;
  v37[4] = v8;
  v37[5] = v11;
  v37[6] = v34;
  v37[7] = a3;
  v37[8] = v47;
  a5(0);
  a6();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C15173AC();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C12A01D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v51 = a1;
  uint64_t v52 = type metadata accessor for FormatOption();
  uint64_t v9 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8))
  {
    uint64_t v46 = a2;
    uint64_t v45 = a4;
    uint64_t v48 = v5;
    uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    swift_beginAccess();
    uint64_t v47 = (void *)v4;
    uint64_t v13 = *(void *)(v4 + 48);
    int64_t v14 = *(void *)(v13 + 16);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v49 = v12;
    uint64_t v50 = a3;
    if (v14)
    {
      uint64_t v53 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1BFF9524C(0, v14, 0);
      uint64_t v15 = v53;
      unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v44[1] = v13;
      uint64_t v17 = v13 + v16;
      uint64_t v56 = v9;
      uint64_t v18 = *(void *)(v9 + 72);
      do
      {
        sub_1BFF1B214(v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v19 = swift_allocBox();
        sub_1BFF23AA4((uint64_t)v11, v20, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v53 = v15;
        unint64_t v22 = *(void *)(v15 + 16);
        unint64_t v21 = *(void *)(v15 + 24);
        if (v22 >= v21 >> 1)
        {
          sub_1BFF9524C(v21 > 1, v22 + 1, 1);
          uint64_t v15 = v53;
        }
        *(void *)(v15 + 16) = v22 + 1;
        *(void *)(v15 + 8 * v22 + 32) = v19 | 0x7000000000000004;
        v17 += v18;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v12 = v49;
      a3 = v50;
      uint64_t v9 = v56;
    }
    int64_t v23 = *(void *)(v12 + 16);
    uint64_t v24 = MEMORY[0x1E4FBC860];
    if (v23)
    {
      uint64_t v53 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1BFF9524C(0, v23, 0);
      uint64_t v24 = v53;
      uint64_t v25 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v56 = *(void *)(v9 + 72);
      do
      {
        sub_1BFF1B214(v25, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v26 = swift_allocBox();
        sub_1BFF23AA4((uint64_t)v11, v27, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v53 = v24;
        unint64_t v29 = *(void *)(v24 + 16);
        unint64_t v28 = *(void *)(v24 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1BFF9524C(v28 > 1, v29 + 1, 1);
          uint64_t v24 = v53;
        }
        *(void *)(v24 + 16) = v29 + 1;
        *(void *)(v24 + 8 * v29 + 32) = v26 | 0x2000000000000000;
        v25 += v56;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      a3 = v50;
    }
    uint64_t v53 = v15;
    sub_1BFF1B81C(v24);
    sub_1BFF20000(v53);
    swift_bridgeObjectRelease();
    uint64_t v30 = v47;
    swift_beginAccess();
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_1BFF1B2E4(v31, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    int v32 = (void *)v30[2];
    uint64_t v33 = v30[3];
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1BFF1DD20(v32, v33);
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v35 = v30[4];
    uint64_t v36 = *(void *)(v35 + 16);
    uint64_t v37 = v51;
    if (v36)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = 32;
      uint64_t v39 = v48;
      uint64_t v40 = v45;
      while (1)
      {
        long long v41 = *(_OWORD *)(v35 + v38);
        long long v42 = *(_OWORD *)(v35 + v38 + 16);
        uint64_t v55 = *(void *)(v35 + v38 + 32);
        v54[0] = v41;
        v54[1] = v42;
        sub_1BFF1BDBC((uint64_t)v54);
        v40(v37, v34, a3);
        if (v39) {
          break;
        }
        sub_1BFF1BD7C((uint64_t)v54);
        v38 += 40;
        if (!--v36)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1BFF1BD7C((uint64_t)v54);
    }
    else
    {
      return swift_release();
    }
  }
  else
  {
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v4 + 56))
    {
      type metadata accessor for FormatLayoutError();
      sub_1BFF30570((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1C12A0764(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(void), void *a4, void (*a5)(void, void, void))
{
  uint64_t v10 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = a2(v10);
    *a1 = v10;
  }
  uint64_t v12 = *(void *)(v10 + 16);
  v14[0] = v10 + 32;
  v14[1] = v12;
  sub_1C12A36D4(v14, a3, a4, a5);
  return sub_1C152026C();
}

void *sub_1C12A0810()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = (unsigned __int8 *)(v1 + 48);
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v6 = *((void *)v3 - 1);
    unsigned __int8 v7 = *v3;
    v13[0] = *((void *)v3 - 2);
    v13[1] = v6;
    unsigned __int8 v14 = v7;
    sub_1C01A128C(v13[0], v6, v7);
    sub_1C0DCC36C((uint64_t)v13, (uint64_t)&v15);
    unsigned __int8 v8 = v16;
    if (v16 <= 0xFDu)
    {
      uint64_t v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1C0EE2C64(0, v4[2] + 1, 1, v4);
      }
      unint64_t v11 = v4[2];
      unint64_t v10 = v4[3];
      if (v11 >= v10 >> 1) {
        uint64_t v4 = sub_1C0EE2C64((void *)(v10 > 1), v11 + 1, 1, v4);
      }
      v4[2] = v11 + 1;
      uint64_t v5 = &v4[2 * v11];
      v5[4] = v9;
      *((unsigned char *)v5 + 40) = v8;
    }
    v3 += 24;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease_n();
  return v4;
}

void sub_1C12A093C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

void sub_1C12A0948(uint64_t a1@<X8>)
{
}

uint64_t sub_1C12A097C()
{
  return sub_1C151FEBC();
}

uint64_t sub_1C12A0A48@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v60 = a8;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v52 - v16);
  sub_1BFF235F0(a1, (uint64_t)&v52 - v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v18 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18) == 1)
  {
    sub_1C12AD324((uint64_t)v17, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v59 = *v17;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 9)
  {
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v20 = *(double **)(v19 + 16);
    type metadata accessor for FormatGroupLayoutFactory.Bound();
    swift_retain();
    sub_1C151765C();
    double v22 = v21;
    double v24 = v23;
    double v25 = v20[2];
    double v26 = v20[3];
    double v27 = v20[4];
    double v28 = v20[5];
    uint64_t v29 = *((void *)v20 + 6);
    uint64_t v30 = *((void *)v20 + 7);
    unint64_t v31 = *((void *)v20 + 11);
    uint64_t v53 = *((void *)v20 + 10);
    uint64_t v54 = v29;
    uint64_t v32 = *((void *)v20 + 13);
    uint64_t v52 = *((void *)v20 + 12);
    uint64_t v33 = *((void *)v20 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1BFFC2FD8(v33, v22, v24);
    uint64_t v61 = *((void *)v20 + 15);
    sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890098, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, MEMORY[0x1E4FBB320]);
    sub_1BFF87C24();
    unint64_t v35 = sub_1C151E92C();
    MEMORY[0x1F4188790](v35);
    uint64_t v36 = sub_1BFF87CAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C12AD4E8, (uint64_t)(&v52 - 4), v35);
    swift_bridgeObjectRelease();
    sub_1BFF887CC(0, &qword_1EB88C238, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
    swift_allocObject();
    uint64_t v37 = sub_1C12AA95C(v54, v30, v53, v31, v52, v32, v25, v26, v27, v28, v22, v24, v34, v36, 7);
    uint64_t v38 = swift_bridgeObjectRelease();
    uint64_t v39 = *(void *)(v19 + 24);
    MEMORY[0x1F4188790](v38);
    uint64_t v51 = a3;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1C12A41D8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C12AAFA0, (uint64_t)(&v52 - 4), v39);
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void *)(v19 + 32);
    uint64_t v42 = *(void *)(v19 + 40);
    unint64_t v43 = *(void *)(v19 + 48);
    swift_beginAccess();
    LOBYTE(v34) = *(unsigned char *)(v19 + 56);
    uint64_t v44 = *(void *)(v19 + 64);
    swift_retain();
    sub_1BFE6FA30(v43);
    swift_retain();
    swift_release();
    type metadata accessor for FormatStateViewNodeDataLayoutAttributes();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v37;
    *(void *)(v45 + 24) = v40;
    *(void *)(v45 + 32) = v41;
    *(void *)(v45 + 40) = v42;
    *(void *)(v45 + 48) = v43;
    *(unsigned char *)(v45 + 56) = v34;
    *(void *)(v45 + 64) = v44;
    uint64_t v46 = swift_allocObject();
    uint64_t v47 = v58;
    *(void *)(v46 + 16) = v59;
    *(void *)(v46 + 24) = v45;
    uint64_t v48 = v56;
    *(void *)(v46 + 32) = v55;
    *(void *)(v46 + 40) = v48;
    uint64_t v49 = v57;
    *(void *)(v46 + 48) = v57;
    *(void *)(v46 + 56) = v47;
    *uint64_t v60 = v46 | 0x3000000000000000;
    swift_retain();
    return sub_1C017C3D4(v48, v49);
  }
LABEL_7:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C12A0F38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v35 = a3;
  uint64_t v4 = *a1;
  uint64_t v30 = *(void *)(*a1 + 24);
  uint64_t v31 = *(void *)(*a1 + 16);
  uint64_t v5 = *(double **)(*a1 + 32);
  type metadata accessor for FormatGroupLayoutFactory.Bound();
  swift_bridgeObjectRetain();
  sub_1C151765C();
  double v7 = v6;
  double v9 = v8;
  double v10 = v5[2];
  double v11 = v5[3];
  double v12 = v5[4];
  double v13 = v5[5];
  uint64_t v14 = *((void *)v5 + 7);
  unint64_t v15 = *((void *)v5 + 11);
  uint64_t v28 = *((void *)v5 + 10);
  uint64_t v29 = *((void *)v5 + 6);
  uint64_t v16 = *((void *)v5 + 13);
  uint64_t v27 = *((void *)v5 + 12);
  uint64_t v17 = *((void *)v5 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1BFFC2FD8(v17, v7, v9);
  uint64_t v34 = *((void *)v5 + 15);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890098, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, MEMORY[0x1E4FBB320]);
  sub_1BFF87C24();
  unint64_t v19 = sub_1C151E92C();
  uint64_t v33 = a2;
  uint64_t v20 = sub_1BFF87CAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C12AD4E8, (uint64_t)v32, v19);
  swift_bridgeObjectRelease();
  sub_1BFF887CC(0, &qword_1EB88C238, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
  swift_allocObject();
  double v21 = sub_1C12AA95C(v29, v14, v28, v15, v27, v16, v10, v11, v12, v13, v7, v9, v18, v20, 7);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v4 + 40);
  type metadata accessor for FormatStateViewNodeStateDataLayoutAttributes();
  double v23 = (void *)swift_allocObject();
  swift_retain();
  uint64_t v24 = sub_1C00BA004((uint64_t)&unk_1F1B8A490);
  type metadata accessor for FormatResizeAuto();
  uint64_t v25 = swift_allocObject();
  uint64_t result = swift_beginAccess();
  *(void *)(v25 + 16) = v24;
  v23[5] = v22;
  v23[6] = v25;
  v23[2] = v31;
  v23[3] = v30;
  v23[4] = v21;
  *unint64_t v35 = v23;
  return result;
}

uint64_t sub_1C12A11F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v29 = a8;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v28 - v16);
  sub_1BFF235F0(a1, (uint64_t)&v28 - v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v18 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18) == 1)
  {
    sub_1C12AD324((uint64_t)v17, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
LABEL_13:
    sub_1BFF1BA48((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v19 = *v17;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 3)
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v21 = *(void *)(v20 + 152);
    if (v21 && *(void *)(a3 + 16))
    {
      uint64_t v22 = *(void *)(v20 + 144);
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v23 = sub_1BFEF2D8C(v22, v21);
      if (v24)
      {
        uint64_t v25 = *(void *)(*(void *)(a3 + 56) + 8 * v23);
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_11:
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v19;
        *(void *)(v26 + 24) = v20;
        *(void *)(v26 + 32) = a4;
        *(void *)(v26 + 40) = a5;
        *(void *)(v26 + 48) = a6;
        *(void *)(v26 + 56) = a7;
        *(void *)(v26 + 64) = v25;
        *uint64_t v29 = v26 | 0x2000000000000004;
        swift_retain();
        return sub_1C017C3D4(a5, a6);
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_retain();
    }
    uint64_t v25 = 0;
    goto LABEL_11;
  }
LABEL_14:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C12A1478@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = (char *)&v37 - v9;
  uint64_t v11 = type metadata accessor for FormatAdMetricsData();
  MEMORY[0x1F4188790](v11 - 8);
  double v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v10, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v14 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v10, 1, v14) == 1)
  {
    sub_1C12AD324((uint64_t)v10, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload())
  {
LABEL_13:
    sub_1BFF1BA48((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_14;
  }
  sub_1BFF23AA4((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatAdMetricsData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xB)
  {
    long long v15 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x70);
    long long v42 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
    long long v43 = v15;
    long long v44 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x80);
    uint64_t v45 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x90);
    long long v16 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
    long long v38 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    long long v39 = v16;
    long long v17 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
    long long v40 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
    long long v41 = v17;
    long long v37 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v18 = v45;
    if (v45 && *(void *)(a3 + 16))
    {
      uint64_t v19 = *((void *)&v44 + 1);
      swift_bridgeObjectRetain();
      sub_1C04987F0((uint64_t)&v37);
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1BFEF2D8C(v19, v18);
      if (v21)
      {
        uint64_t v22 = *(void *)(*(void *)(a3 + 56) + 8 * v20);
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_11:
        sub_1C0498748();
        uint64_t v24 = v23;
        uint64_t v25 = swift_allocBox();
        uint64_t v27 = v26;
        uint64_t v28 = v26 + *(int *)(v24 + 48);
        uint64_t v29 = *(int *)(v24 + 64);
        uint64_t result = sub_1BFF23AA4((uint64_t)v13, v26, (uint64_t (*)(void))type metadata accessor for FormatAdMetricsData);
        *(_OWORD *)uint64_t v28 = v37;
        long long v31 = v41;
        long long v33 = v38;
        long long v32 = v39;
        *(_OWORD *)(v28 + 48) = v40;
        *(_OWORD *)(v28 + 64) = v31;
        *(_OWORD *)(v28 + 16) = v33;
        *(_OWORD *)(v28 + 32) = v32;
        long long v35 = v43;
        long long v34 = v44;
        long long v36 = v42;
        *(void *)(v28 + 128) = v45;
        *(_OWORD *)(v28 + 96) = v35;
        *(_OWORD *)(v28 + 112) = v34;
        *(_OWORD *)(v28 + 80) = v36;
        *(void *)(v27 + v29) = v22;
        *a4 = v25 | 0x4000000000000000;
        return result;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_1C04987F0((uint64_t)&v37);
    }
    uint64_t v22 = 0;
    goto LABEL_11;
  }
LABEL_14:
  uint64_t result = sub_1BFF1BA48((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatAdMetricsData);
  __break(1u);
  return result;
}

uint64_t sub_1C12A17B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  long long v16 = (uint64_t *)((char *)&v22 - v15);
  sub_1BFF235F0(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1C12AD324((uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 9)
  {
LABEL_6:
    uint64_t result = sub_1BFF1BA48((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    goto LABEL_7;
  }
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xA)
  {
    uint64_t v19 = *v16;
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = v20;
    *(void *)(v21 + 32) = a3;
    *(void *)(v21 + 40) = a4;
    *(void *)(v21 + 48) = a5;
    *(void *)(v21 + 56) = a6;
    *a7 = v21 | 0x3000000000000004;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C12A19B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for FormatMicaData();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v8, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v12 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v8, 1, v12) == 1)
  {
    sub_1C12AD324((uint64_t)v8, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 11)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BFF23AA4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xC)
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1C12AB284(0, &qword_1EA1A5A90, (void (*)(uint64_t))type metadata accessor for FormatMicaData, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocBox();
    uint64_t v18 = v17;
    uint64_t v19 = *(int *)(v15 + 48);
    sub_1BFF23AA4((uint64_t)v11, v17, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
    *(void *)(v18 + v19) = v13;
    *a3 = v16 | 0x4000000000000004;
    return swift_retain();
  }
LABEL_7:
  uint64_t result = sub_1BFF1BA48((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
  __break(1u);
  return result;
}

uint64_t sub_1C12A1C50@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v26 - v15;
  sub_1BFF235F0(a1, (uint64_t)&v26 - v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1C12AD324((uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 12)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v18 = *((void *)v16 + 1);
  uint64_t v19 = *((void *)v16 + 3);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xD)
  {
    char v20 = v16[32];
    uint64_t v21 = *((void *)v16 + 2);
    uint64_t v22 = *(void *)v16;
    uint64_t v23 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = v18;
    *(void *)(v24 + 32) = v21;
    *(void *)(v24 + 40) = v19;
    *(unsigned char *)(v24 + 48) = v20;
    *(void *)(v24 + 56) = v23;
    *(void *)(v24 + 64) = a3;
    *(void *)(v24 + 72) = a4;
    *(void *)(v24 + 80) = a5;
    *(void *)(v24 + 88) = a6;
    *a7 = v24 | 0x5000000000000000;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1C12A1E88@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v28 = a7;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = type metadata accessor for FormatVideoData(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v19 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v15, 1, v19) == 1)
  {
    sub_1C12AD324((uint64_t)v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 13)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BFF23AA4((uint64_t)v15, (uint64_t)v18, type metadata accessor for FormatVideoData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xE)
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BFD32FB8(0, (unint64_t *)&unk_1EA1A5A80, (void (*)(uint64_t))type metadata accessor for FormatVideoData, &qword_1EA19BBF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes);
    uint64_t v22 = v21;
    uint64_t v23 = swift_allocBox();
    uint64_t v25 = (void *)(v24 + *(int *)(v22 + 48));
    sub_1BFF23AA4((uint64_t)v18, v24, type metadata accessor for FormatVideoData);
    *uint64_t v25 = v20;
    v25[1] = a3;
    void v25[2] = a4;
    v25[3] = a5;
    unsigned char v25[4] = a6;
    *uint64_t v28 = v23 | 0x5000000000000004;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  uint64_t result = sub_1BFF1BA48((uint64_t)v18, type metadata accessor for FormatVideoData);
  __break(1u);
  return result;
}

void sub_1C12A216C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14 = &qword_1EB884A48;
  uint64_t v15 = type metadata accessor for FormatNodeStateData.Data;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v24 - v17;
  sub_1BFF235F0(a1, (uint64_t)&v24 - v17, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v19 = (void *)type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, void *))(*(v19 - 1) + 48))(v18, 1, v19) == 1)
  {
    sub_1C12AD324((uint64_t)v18, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v24 = a7;
  uint64_t v25 = (uint64_t)a4;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  if (swift_getEnumCaseMultiPayload() != 14)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v15 = *(uint64_t (**)())v18;
  uint64_t v14 = (uint64_t *)*((void *)v18 + 1);
  uint64_t v19 = (void *)*((void *)v18 + 2);
  a6 = *((void *)v18 + 3);
  a7 = (uint64_t *)*((void *)v18 + 4);
  a5 = *((void *)v18 + 5);
  a4 = (void *)*((void *)v18 + 6);
  LOBYTE(v18) = v18[56];
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0xF)
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v15;
    *(void *)(v21 + 24) = v14;
    *(void *)(v21 + 32) = v19;
    *(void *)(v21 + 40) = a6;
    *(void *)(v21 + 48) = a7;
    *(void *)(v21 + 56) = a5;
    *(void *)(v21 + 64) = a4;
    *(unsigned char *)(v21 + 72) = (_BYTE)v18;
    *(void *)(v21 + 80) = v20;
    *(void *)(v21 + 88) = a3;
    uint64_t v23 = v25;
    uint64_t v22 = v26;
    *(void *)(v21 + 96) = v25;
    *(void *)(v21 + 104) = v22;
    *(void *)(v21 + 112) = v27;
    *uint64_t v24 = v21 | 0x6000000000000000;
    swift_retain();
    swift_retain();
    sub_1C017C3D4(v23, v22);
    return;
  }
LABEL_7:
  sub_1C00FA1F0(v15, (uint64_t)v14, v19, a6, a7, a5, a4, (char)v18);
  __break(1u);
}

uint64_t sub_1C12A23C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for FormatShareAttributionData();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v8, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v12 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v8, 1, v12) == 1)
  {
    sub_1C12AD324((uint64_t)v8, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 15)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BFF23AA4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatShareAttributionData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x10)
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1C12AB284(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocBox();
    uint64_t v18 = v17;
    uint64_t v19 = *(int *)(v15 + 48);
    sub_1BFF23AA4((uint64_t)v11, v17, (uint64_t (*)(void))type metadata accessor for FormatShareAttributionData);
    *(void *)(v18 + v19) = v13;
    *a3 = v16 | 0x6000000000000004;
    return swift_retain();
  }
LABEL_7:
  uint64_t result = sub_1BFF1BA48((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatShareAttributionData);
  __break(1u);
  return result;
}

uint64_t sub_1C12A2664@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v28 = a7;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v19 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v15, 1, v19) == 1)
  {
    sub_1C12AD324((uint64_t)v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 17)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BFF23AA4((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x11)
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BFD32FB8(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
    uint64_t v22 = v21;
    uint64_t v23 = swift_allocBox();
    uint64_t v25 = (void *)(v24 + *(int *)(v22 + 48));
    sub_1BFF23AA4((uint64_t)v18, v24, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
    *uint64_t v25 = v20;
    v25[1] = a3;
    void v25[2] = a4;
    v25[3] = a5;
    unsigned char v25[4] = a6;
    *uint64_t v28 = v23 | 0x7000000000000000;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  uint64_t result = sub_1BFF1BA48((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatVideoPlayerData);
  __break(1u);
  return result;
}

uint64_t sub_1C12A2940@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v22 - v15;
  sub_1BFF235F0(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1C12AD324((uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 18)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v17 = *((void *)v16 + 1);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x12)
  {
    int v18 = *(_DWORD *)v16;
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v20 = swift_allocObject();
    *(_DWORD *)(v20 + 16) = v18;
    *(void *)(v20 + 24) = v17;
    *(void *)(v20 + 32) = v19;
    *(void *)(v20 + 40) = a3;
    *(void *)(v20 + 48) = a4;
    *(void *)(v20 + 56) = a5;
    *(void *)(v20 + 64) = a6;
    *a7 = v20 | 0x7000000000000004;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  uint64_t result = sub_1C00F80E0(v17);
  __break(1u);
  return result;
}

uint64_t sub_1C12A2B5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v20 - v9);
  sub_1BFF235F0(a1, (uint64_t)&v20 - v9, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v11 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    sub_1C12AD324((uint64_t)v10, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() != 19)
  {
LABEL_13:
    sub_1BFF1BA48((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = *v10;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x13)
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v14 = *(void *)(v13 + 200);
    if (v14 && *(void *)(a3 + 16))
    {
      uint64_t v15 = *(void *)(v13 + 192);
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v16 = sub_1BFEF2D8C(v15, v14);
      if (v17)
      {
        uint64_t v18 = *(void *)(*(void *)(a3 + 56) + 8 * v16);
        swift_retain();
        swift_bridgeObjectRelease_n();
LABEL_11:
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v12;
        *(void *)(result + 24) = v13;
        *(void *)(result + 32) = v18;
        *a4 = result | 0x8000000000000004;
        return result;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_retain();
    }
    uint64_t v18 = 0;
    goto LABEL_11;
  }
LABEL_14:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C12A2DA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v66 = a4;
  uint64_t v11 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = type metadata accessor for FormatItemNodeData();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v53 - v21;
  sub_1BFF235F0(a1, (uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v23 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v16, 1, v23) == 1)
  {
    sub_1C12AD324((uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_9;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
LABEL_9:
    sub_1BFF1BA48((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v65 = v19;
  sub_1BFF23AA4((uint64_t)v16, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
  if ((a2 >> 59) & 0x1E | (a2 >> 2) & 1)
  {
LABEL_10:
    uint64_t result = sub_1BFF1BA48((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
    __break(1u);
    return result;
  }
  uint64_t v24 = *(void **)(a2 + 16);
  uint64_t v25 = (double *)v24[2];
  uint64_t v26 = *((void *)v25 + 9);
  if (v26)
  {
    uint64_t v27 = *((void *)v25 + 8);
    uint64_t v57 = v22;
    uint64_t v58 = v26;
    uint64_t v28 = v24[4];
    uint64_t v62 = v24[3];
    uint64_t v63 = v27;
    uint64_t v70 = v28;
    uint64_t v60 = v24[7];
    char v69 = *(unsigned char *)(a3 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 52));
    uint64_t v55 = v13;
    sub_1BFF1B214((uint64_t)v22, (uint64_t)v13, type metadata accessor for FeedItem);
    uint64_t v29 = v24[9];
    uint64_t v64 = v24[8];
    uint64_t v68 = v29;
    double v30 = v25[2];
    double v31 = v25[3];
    double v32 = v25[4];
    double v33 = v25[5];
    unint64_t v34 = *((void *)v25 + 11);
    uint64_t v61 = *((void *)v25 + 10);
    uint64_t v35 = *((void *)v25 + 13);
    uint64_t v59 = *((void *)v25 + 12);
    uint64_t v54 = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BFE6FA30(v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v37 = v54;
    uint64_t v56 = sub_1BFFC2FD8(v36, a5, a6);
    swift_bridgeObjectRelease();
    uint64_t v67 = *(void *)(v24[2] + 120);
    sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890098, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, MEMORY[0x1E4FBB320]);
    sub_1BFF87C24();
    swift_bridgeObjectRetain();
    unint64_t v38 = sub_1C151E92C();
    MEMORY[0x1F4188790](v38);
    uint64_t v52 = v37;
    uint64_t v39 = sub_1BFF87CAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C12AD4E8, (uint64_t)(&v53 - 4), v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v57;
    uint64_t v41 = (uint64_t)v65;
    sub_1BFF1B214((uint64_t)v57, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
    LOBYTE(v29) = *(unsigned char *)(v24[2] + 128);
    sub_1C12A7FB8(0, &qword_1EB88C230, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeData, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
    swift_allocObject();
    long long v42 = sub_1C12AA2C4(v63, v58, v61, v34, v59, v35, v30, v31, v32, v33, a5, a6, v56, v39, v41, v29);
    swift_bridgeObjectRelease();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    swift_allocObject();
    uint64_t v43 = sub_1BFEAF6E0(v62, &v70, 0, 0, v60, &v69, (uint64_t)v55, v64, &v68, (uint64_t)v42);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1C12AB284(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
    uint64_t v45 = v44;
    uint64_t v46 = swift_allocBox();
    uint64_t v48 = v47;
    uint64_t v49 = *(int *)(v45 + 48);
    uint64_t result = sub_1BFF23AA4(v40, v47, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
    *(void *)(v48 + v49) = v43;
    unint64_t v51 = v46 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = sub_1BFF1BA48((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
    unint64_t v51 = 0xF000000000000007;
  }
  *uint64_t v66 = v51;
  return result;
}

uint64_t sub_1C12A3430@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for FormatSponsoredBannerData();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v8, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v12 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v8, 1, v12) == 1)
  {
    sub_1C12AD324((uint64_t)v8, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 20)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BFF23AA4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatSponsoredBannerData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x14)
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1C12AB284(0, (unint64_t *)&unk_1EB884B38, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerData, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
    uint64_t v15 = v14;
    uint64_t v16 = swift_allocBox();
    uint64_t v18 = v17;
    uint64_t v19 = *(int *)(v15 + 48);
    sub_1BFF23AA4((uint64_t)v11, v17, (uint64_t (*)(void))type metadata accessor for FormatSponsoredBannerData);
    *(void *)(v18 + v19) = v13;
    *a3 = v16 | 0x9000000000000000;
    return swift_retain();
  }
LABEL_7:
  uint64_t result = sub_1BFF1BA48((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatSponsoredBannerData);
  __break(1u);
  return result;
}

uint64_t sub_1C12A36C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12A36D4(uint64_t *a1, void (*a2)(void), void *a3, void (*a4)(void, void, void))
{
  uint64_t v8 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v8)
  {
    if (v8 < 0) {
      goto LABEL_133;
    }
    if (v8) {
      return sub_1C12A3D98(0, v8, 1, a1, a3);
    }
    return result;
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_141;
  }
  uint64_t v11 = result;
  uint64_t v109 = a3;
  uint64_t v105 = v8;
  uint64_t v102 = a1;
  if (v8 < 2)
  {
    uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v110 = MEMORY[0x1E4FBC860];
    uint64_t v107 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      unint64_t v17 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_99:
      if (v17 >= 2)
      {
        uint64_t v96 = *v102;
        do
        {
          unint64_t v97 = v17 - 2;
          if (v17 < 2) {
            goto LABEL_128;
          }
          if (!v96) {
            goto LABEL_140;
          }
          uint64_t v98 = *(void *)&v14[16 * v97 + 32];
          uint64_t v99 = *(void *)&v14[16 * v17 + 24];
          sub_1C12A3E20((char *)(v96 + 8 * v98), (char *)(v96 + 8 * *(void *)&v14[16 * v17 + 16]), v96 + 8 * v99, v107, v109, a4);
          if (v4) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_129;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v14 = sub_1C063604C((uint64_t)v14);
          }
          if (v97 >= *((void *)v14 + 2)) {
            goto LABEL_130;
          }
          uint64_t v100 = &v14[16 * v97 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v14 + 2);
          if (v17 > v101) {
            goto LABEL_131;
          }
          memmove(&v14[16 * v17 + 16], &v14[16 * v17 + 32], 16 * (v101 - v17));
          *((void *)v14 + 2) = v101 - 1;
          unint64_t v17 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease();
      *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C151EBEC();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v12 = v10 >> 1;
    a2(0);
    uint64_t v13 = sub_1C151ECCC();
    *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) = v12;
    uint64_t v8 = v105;
    uint64_t v107 = (char *)((v13 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v110 = v13;
  }
  uint64_t v15 = 0;
  uint64_t v16 = *a1;
  uint64_t v103 = *a1 - 8;
  uint64_t v104 = v11;
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = *a1;
  while (1)
  {
    uint64_t v18 = v15++;
    if (v15 < v8)
    {
      uint64_t v19 = *(void *)(*(void *)(v16 + 8 * v15) + *a3);
      double v20 = *(double *)(v19 + 16);
      double v21 = *(double *)(v19 + 24);
      uint64_t v22 = *(void *)(*(void *)(v16 + 8 * v18) + *a3);
      double v23 = *(double *)(v22 + 24);
      int v24 = v20 <= *(double *)(v22 + 16);
      if (v21 != v23) {
        int v24 = v21 < v23;
      }
      uint64_t v15 = v18 + 2;
      if (v18 + 2 < v8)
      {
        while (1)
        {
          double v25 = v20;
          double v26 = v21;
          uint64_t v27 = *(void *)(*(void *)(v16 + 8 * v15) + *a3);
          double v20 = *(double *)(v27 + 16);
          double v21 = *(double *)(v27 + 24);
          int v28 = v20 <= v25;
          if (v21 != v26) {
            int v28 = v21 < v26;
          }
          if (v24 != v28) {
            break;
          }
          if (v8 == ++v15)
          {
            uint64_t v15 = v8;
            break;
          }
        }
      }
      if (v24)
      {
        if (v15 < v18) {
          goto LABEL_134;
        }
        if (v18 < v15)
        {
          uint64_t v29 = (uint64_t *)(v103 + 8 * v15);
          uint64_t v30 = v15;
          uint64_t v31 = v18;
          double v32 = (uint64_t *)(v16 + 8 * v18);
          do
          {
            if (v31 != --v30)
            {
              if (!v16) {
                goto LABEL_139;
              }
              uint64_t v33 = *v32;
              *double v32 = *v29;
              *uint64_t v29 = v33;
            }
            ++v31;
            --v29;
            ++v32;
          }
          while (v31 < v30);
        }
      }
    }
    if (v15 < v8)
    {
      if (__OFSUB__(v15, v18)) {
        goto LABEL_132;
      }
      if (v15 - v18 < v104) {
        break;
      }
    }
LABEL_50:
    if (v15 < v18) {
      goto LABEL_127;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_1C0634CC8(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v46 = *((void *)v14 + 2);
    unint64_t v45 = *((void *)v14 + 3);
    unint64_t v17 = v46 + 1;
    uint64_t v16 = v106;
    if (v46 >= v45 >> 1)
    {
      uint64_t v95 = sub_1C0634CC8((char *)(v45 > 1), v46 + 1, 1, v14);
      uint64_t v16 = v106;
      uint64_t v14 = v95;
    }
    *((void *)v14 + 2) = v17;
    uint64_t v47 = v14 + 32;
    uint64_t v48 = &v14[16 * v46 + 32];
    *(void *)uint64_t v48 = v18;
    *((void *)v48 + 1) = v15;
    if (v46)
    {
      while (1)
      {
        unint64_t v49 = v17 - 1;
        if (v17 >= 4)
        {
          uint64_t v54 = &v47[16 * v17];
          uint64_t v55 = *((void *)v54 - 8);
          uint64_t v56 = *((void *)v54 - 7);
          BOOL v60 = __OFSUB__(v56, v55);
          uint64_t v57 = v56 - v55;
          if (v60) {
            goto LABEL_116;
          }
          uint64_t v59 = *((void *)v54 - 6);
          uint64_t v58 = *((void *)v54 - 5);
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v52 = v58 - v59;
          char v53 = v60;
          if (v60) {
            goto LABEL_117;
          }
          unint64_t v61 = v17 - 2;
          uint64_t v62 = &v47[16 * v17 - 32];
          uint64_t v64 = *(void *)v62;
          uint64_t v63 = *((void *)v62 + 1);
          BOOL v60 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          if (v60) {
            goto LABEL_119;
          }
          BOOL v60 = __OFADD__(v52, v65);
          uint64_t v66 = v52 + v65;
          if (v60) {
            goto LABEL_122;
          }
          if (v66 >= v57)
          {
            uint64_t v84 = &v47[16 * v49];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v60 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v60) {
              goto LABEL_126;
            }
            BOOL v77 = v52 < v87;
            goto LABEL_87;
          }
        }
        else
        {
          if (v17 != 3)
          {
            uint64_t v78 = *((void *)v14 + 4);
            uint64_t v79 = *((void *)v14 + 5);
            BOOL v60 = __OFSUB__(v79, v78);
            uint64_t v71 = v79 - v78;
            char v72 = v60;
            goto LABEL_81;
          }
          uint64_t v51 = *((void *)v14 + 4);
          uint64_t v50 = *((void *)v14 + 5);
          BOOL v60 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          char v53 = v60;
        }
        if (v53) {
          goto LABEL_118;
        }
        unint64_t v61 = v17 - 2;
        uint64_t v67 = &v47[16 * v17 - 32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v70 = __OFSUB__(v68, v69);
        uint64_t v71 = v68 - v69;
        char v72 = v70;
        if (v70) {
          goto LABEL_121;
        }
        uint64_t v73 = &v47[16 * v49];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v60 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v60) {
          goto LABEL_124;
        }
        if (__OFADD__(v71, v76)) {
          goto LABEL_125;
        }
        if (v71 + v76 >= v52)
        {
          BOOL v77 = v52 < v76;
LABEL_87:
          if (v77) {
            unint64_t v49 = v61;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v72) {
          goto LABEL_120;
        }
        uint64_t v80 = &v47[16 * v49];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v60 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v60) {
          goto LABEL_123;
        }
        if (v83 < v71) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v88 = v49 - 1;
        if (v49 - 1 >= v17)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v16) {
          goto LABEL_138;
        }
        uint64_t v89 = v14;
        unint64_t v90 = &v47[16 * v88];
        uint64_t v91 = *(void *)v90;
        uint64_t v92 = &v47[16 * v49];
        uint64_t v93 = *((void *)v92 + 1);
        sub_1C12A3E20((char *)(v16 + 8 * *(void *)v90), (char *)(v16 + 8 * *(void *)v92), v16 + 8 * v93, v107, v109, a4);
        if (v4) {
          goto LABEL_110;
        }
        if (v93 < v91) {
          goto LABEL_113;
        }
        if (v49 > *((void *)v89 + 2)) {
          goto LABEL_114;
        }
        *(void *)unint64_t v90 = v91;
        *(void *)&v47[16 * v88 + 8] = v93;
        unint64_t v94 = *((void *)v89 + 2);
        if (v49 >= v94) {
          goto LABEL_115;
        }
        uint64_t v14 = v89;
        unint64_t v17 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        *((void *)v89 + 2) = v94 - 1;
        uint64_t v16 = v106;
        if (v94 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v17 = 1;
LABEL_14:
    uint64_t v8 = v105;
    a3 = v109;
    if (v15 >= v105) {
      goto LABEL_99;
    }
  }
  uint64_t v34 = v18 + v104;
  if (__OFADD__(v18, v104)) {
    goto LABEL_135;
  }
  if (v34 >= v8) {
    uint64_t v34 = v8;
  }
  if (v34 >= v18)
  {
    if (v15 != v34)
    {
      uint64_t v35 = (uint64_t *)(v103 + 8 * v15);
      do
      {
        uint64_t v36 = *(void *)(v16 + 8 * v15);
        uint64_t v37 = v18;
        unint64_t v38 = v35;
        do
        {
          uint64_t v39 = *v38;
          uint64_t v40 = *(void *)(v36 + *a3);
          double v41 = *(double *)(v40 + 24);
          uint64_t v42 = *(void *)(*v38 + *a3);
          double v43 = *(double *)(v42 + 24);
          BOOL v44 = *(double *)(v40 + 16) <= *(double *)(v42 + 16);
          if (v41 != v43) {
            BOOL v44 = v41 < v43;
          }
          if (!v44) {
            break;
          }
          if (!v16) {
            goto LABEL_137;
          }
          *unint64_t v38 = v36;
          v38[1] = v39;
          --v38;
          ++v37;
        }
        while (v15 != v37);
        ++v15;
        ++v35;
      }
      while (v15 != v34);
      uint64_t v15 = v34;
    }
    goto LABEL_50;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C12A3D98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void *)(v5 + 8 * a3);
    uint64_t v8 = result;
    uint64_t v9 = (uint64_t *)v6;
    while (1)
    {
      uint64_t v10 = *v9;
      uint64_t v11 = *(void *)(v7 + *a5);
      double v12 = *(double *)(v11 + 24);
      uint64_t v13 = *(void *)(*v9 + *a5);
      double v14 = *(double *)(v13 + 24);
      BOOL v15 = *(double *)(v11 + 16) <= *(double *)(v13 + 16);
      if (v12 != v14) {
        BOOL v15 = v12 < v14;
      }
      if (!v15)
      {
LABEL_4:
        ++a3;
        v6 += 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      uint64_t *v9 = v7;
      v9[1] = v10;
      --v9;
      if (a3 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12A3E20(char *__src, char *a2, unint64_t a3, char *__dst, void *a5, void (*a6)(void, void, void))
{
  uint64_t v7 = __dst;
  uint64_t v9 = a2;
  uint64_t v10 = __src;
  int64_t v11 = a2 - __src;
  int64_t v12 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v12 = a2 - __src;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v14 = a3 - (void)a2;
  uint64_t v15 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v15 = a3 - (void)a2;
  }
  uint64_t v16 = v15 >> 3;
  uint64_t v40 = __src;
  uint64_t v39 = __dst;
  if (v13 >= v15 >> 3)
  {
    if (v14 >= -7)
    {
      if (__dst != a2 || &a2[8 * v16] <= __dst)
      {
        double v25 = a6;
        memmove(__dst, a2, 8 * v16);
        a6 = v25;
      }
      double v26 = &v7[8 * v16];
      unint64_t v38 = v26;
      uint64_t v40 = v9;
      if (v10 < v9 && v14 >= 8)
      {
        uint64_t v27 = (char *)(a3 - 8);
        while (1)
        {
          int v28 = v27 + 8;
          uint64_t v29 = v9 - 8;
          uint64_t v30 = *((void *)v9 - 1);
          uint64_t v31 = *(void *)(*((void *)v26 - 1) + *a5);
          double v32 = *(double *)(v31 + 16);
          double v33 = *(double *)(v31 + 24);
          uint64_t v34 = *(void *)(v30 + *a5);
          double v35 = *(double *)(v34 + 24);
          BOOL v36 = v32 <= *(double *)(v34 + 16);
          if (v33 != v35) {
            BOOL v36 = v33 < v35;
          }
          if (v36)
          {
            if (v28 != v9 || v27 >= v9) {
              *(void *)uint64_t v27 = v30;
            }
            uint64_t v40 = v9 - 8;
            v9 -= 8;
            if (v29 <= v10) {
              goto LABEL_46;
            }
          }
          else
          {
            unint64_t v38 = v26 - 8;
            if (v28 < v26 || v27 >= v26 || v28 != v26) {
              *(void *)uint64_t v27 = *((void *)v26 - 1);
            }
            v26 -= 8;
            if (v9 <= v10) {
              goto LABEL_46;
            }
          }
          v27 -= 8;
          if (v26 <= v7) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
  }
  else if (v11 >= -7)
  {
    if (__dst != __src || &__src[8 * v13] <= __dst)
    {
      unint64_t v17 = a6;
      memmove(__dst, __src, 8 * v13);
      a6 = v17;
    }
    uint64_t v18 = &v7[8 * v13];
    unint64_t v38 = v18;
    if ((unint64_t)v9 < a3 && v11 >= 8)
    {
      do
      {
        uint64_t v19 = *(void *)(*(void *)v9 + *a5);
        double v20 = *(double *)(v19 + 24);
        uint64_t v21 = *(void *)(*(void *)v7 + *a5);
        double v22 = *(double *)(v21 + 24);
        BOOL v23 = *(double *)(v19 + 16) <= *(double *)(v21 + 16);
        if (v20 != v22) {
          BOOL v23 = v20 < v22;
        }
        if (v23)
        {
          int v24 = v9 + 8;
          if (v10 < v9 || v10 >= v24 || v10 != v9) {
            *(void *)uint64_t v10 = *(void *)v9;
          }
        }
        else
        {
          if (v10 != v7) {
            *(void *)uint64_t v10 = *(void *)v7;
          }
          v7 += 8;
          uint64_t v39 = v7;
          int v24 = v9;
        }
        v10 += 8;
        if (v7 >= v18) {
          break;
        }
        uint64_t v9 = v24;
      }
      while ((unint64_t)v24 < a3);
      uint64_t v40 = v10;
    }
LABEL_46:
    a6(&v40, &v39, &v38);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C12A40F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A41D8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  sub_1BFFD1AC4(0, (unint64_t *)&unk_1EB890300, (void (*)(uint64_t))type metadata accessor for FormatStateViewNodeStateDataLayoutAttributes);
  uint64_t result = sub_1C15204DC();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v29 = a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v9 = a3 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v25 = v9;
  int64_t v26 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v27 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v29 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v31 = *(void *)(*(void *)(v29 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_retain();
    a1(&v30, &v31);
    uint64_t result = swift_release();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v6;
    }
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    double v22 = (void *)(v6[6] + 16 * i);
    void *v22 = v20;
    v22[1] = v21;
    *(void *)(v6[7] + 8 * i) = v30;
    uint64_t v23 = v6[2];
    BOOL v16 = __OFADD__(v23, 1);
    uint64_t v24 = v23 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    _OWORD v6[2] = v24;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v16 = __OFADD__(v7++, 1);
    if (v16) {
      goto LABEL_27;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v7);
    if (!v17) {
      break;
    }
LABEL_15:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v7 + 1;
  if (v7 + 1 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 2;
  if (v7 + 2 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 3;
  if (v7 + 3 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17)
  {
LABEL_14:
    int64_t v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C12A4434@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1BFF64090(*a2, *a1, a4);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1C12A4470@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  sub_1BFCAFEBC(a1, (uint64_t)v7);
  uint64_t result = sub_1BFCAF798(a3);
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_1C12A44D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C00F5BA4(a1, (uint64_t)v9);
  uint64_t result = sub_1C129153C(*a2, a4);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1C12A4538@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  swift_bridgeObjectRetain();
  sub_1BFF28A20(v7, &v14);
  if (v4)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v4;
  }
  else
  {
    unint64_t v11 = v14;
    *a4 = v9;
    a4[1] = v8;
    a4[2] = v11;
    a4[3] = 1;
    uint64_t v12 = (char *)a4 + *(int *)(type metadata accessor for FormatOption() + 28);
    uint64_t v13 = type metadata accessor for FormatVersionRequirement(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  return result;
}

double sub_1C12A4618@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C129C6E4(*a2, *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), (uint64_t *)&v9);
  if (v4)
  {
    *a3 = v4;
  }
  else
  {
    uint64_t v8 = v10;
    double result = *(double *)&v9;
    *(_OWORD *)a4 = v9;
    *(void *)(a4 + 16) = v8;
  }
  return result;
}

uint64_t sub_1C12A467C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (!v5) {
    return result;
  }
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1C152028C();
  uint64_t v8 = (unint64_t *)(a1 + 32);
  while (1)
  {
    unint64_t v10 = *v8++;
    unint64_t v9 = v10;
    unint64_t v11 = v10 >> 62;
    if (v10 >> 62) {
      break;
    }
    swift_retain();
    swift_retain();
    sub_1C0D38700(a2);
    if (v3)
    {
LABEL_13:
      swift_release();
      goto LABEL_15;
    }
LABEL_11:
    uint64_t v18 = v12;
    swift_release();
    id v19 = *(id *)(v18 + 16);
    swift_release();
    swift_release();
    sub_1C152025C();
    sub_1C152029C();
    sub_1C15202AC();
    sub_1C152026C();
    if (!--v5) {
      return v22;
    }
  }
  if (v11 == 1)
  {
    swift_retain();
    swift_retain();
    sub_1BFCCD984(a2);
    if (v3) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  uint64_t v13 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F39B38]);
  swift_retain();
  swift_retain();
  id v15 = objc_msgSend(v14, sel_init);
  swift_retain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1C12A467C(v16, a2);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C12A7F78();
    unint64_t v17 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setAnimations_, v17);

    sub_1BFF8874C(v13 + 24, (uint64_t)v21, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BFF8874C((uint64_t)v21, (uint64_t)v20, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
    type metadata accessor for FormatAnimation();
    swift_allocObject();
    swift_retain();
    sub_1C1114AC0((uint64_t)v21);
    uint64_t v12 = sub_1BFC64668(v15, 0, 0xE000000000000000, a2, (uint64_t)v20, 0, 0, 0, 0);
    goto LABEL_11;
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

LABEL_15:
  swift_release();
  return swift_release();
}

uint64_t sub_1C12A4950(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (!v5) {
    return result;
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1C152028C();
  uint64_t v8 = (unint64_t *)(a1 + 32);
  while (1)
  {
    unint64_t v10 = *v8++;
    unint64_t v9 = v10;
    unint64_t v11 = v10 >> 62;
    if (v10 >> 62) {
      break;
    }
    swift_retain();
    swift_retain();
    uint64_t v12 = v3;
    sub_1C0D38700(a2);
LABEL_7:
    uint64_t v3 = v12;
    swift_release();
    swift_release();
    if (v12) {
      return swift_release();
    }
LABEL_11:
    sub_1C152025C();
    sub_1C152029C();
    sub_1C15202AC();
    sub_1C152026C();
    if (!--v5) {
      return v20;
    }
  }
  if (v11 == 1)
  {
    swift_retain();
    swift_retain();
    uint64_t v12 = v3;
    sub_1BFCCD984(a2);
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F39B38]);
  swift_retain();
  swift_retain();
  id v15 = objc_msgSend(v14, sel_init);
  swift_retain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1C12A467C(v16, a2);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C12A7F78();
    unint64_t v17 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setAnimations_, v17);

    sub_1BFF8874C(v13 + 24, (uint64_t)v19, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BFF8874C((uint64_t)v19, (uint64_t)v18, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
    type metadata accessor for FormatAnimation();
    swift_allocObject();
    swift_retain();
    sub_1C1114AC0((uint64_t)v19);
    sub_1BFC64668(v15, 0, 0xE000000000000000, a2, (uint64_t)v18, 0, 0, 0, 0);
    swift_release();
    swift_release();
    goto LABEL_11;
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_release();
}

uint64_t sub_1C12A4C68(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  sub_1BFF31DC0(0, &qword_1EB8712A0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB678]);
  uint64_t v17 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BFF31ED4(0, v8, 0);
    uint64_t v9 = v20;
    unint64_t v10 = (unint64_t *)(a1 + 32);
    uint64_t v16 = v5 + 32;
    while (1)
    {
      unint64_t v11 = *v10++;
      unint64_t v19 = v11;
      sub_1BFF32264(v11);
      sub_1BFF34310(v18, (uint64_t)v7);
      unint64_t v12 = v11;
      if (v2) {
        break;
      }
      sub_1BFF31E90(v12);
      uint64_t v20 = v9;
      unint64_t v14 = *(void *)(v9 + 16);
      unint64_t v13 = *(void *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BFF31ED4(v13 > 1, v14 + 1, 1);
        uint64_t v9 = v20;
      }
      *(void *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v7, v17);
      if (!--v8) {
        return v9;
      }
    }
    sub_1BFF31E90(v12);
    swift_release();
  }
  return v9;
}

uint64_t sub_1C12A4E58(uint64_t a1)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (!v3) {
    return result;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1C05F67E4(0, v3, 0);
  uint64_t result = v23;
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v20 = result;
    uint64_t v7 = *(v5 - 2);
    uint64_t v6 = *(v5 - 1);
    uint64_t v8 = *v5;
    sub_1BFDC11A4(v7);
    sub_1BFEF683C(v6);
    sub_1BFEF683C(v8);
    sub_1C1517EFC();
    uint64_t v9 = v22;
    uint64_t v21 = v22;
    if ((v8 & 0xF000000000000007) == 0xF000000000000007)
    {
      sub_1BFDC11A4(v7);
      sub_1BFEF683C(v6);
      uint64_t v10 = sub_1BFEF683C(v8);
      double v11 = 0.0;
    }
    else
    {
      uint64_t v22 = v8;
      sub_1BFDC11A4(v7);
      sub_1BFEF683C(v6);
      sub_1BFEF683C(v8);
      sub_1BFEF683C(v8);
      double v12 = FormatFloat.value(contextLayoutOptions:)(v9);
      if (v1)
      {
        sub_1BFDC11BC(v7);
        sub_1BFEF68C0(v6);
        sub_1BFEF68C0(v8);
        sub_1BFEF68C0(v8);
        goto LABEL_19;
      }
      double v11 = v12;
      uint64_t v10 = sub_1BFEF68C0(v8);
    }
    double v13 = 0.0;
    if ((v6 & 0xF000000000000007) != 0xF000000000000007) {
      break;
    }
LABEL_10:
    if ((~v7 & 0xF000000000000007) != 0)
    {
      uint64_t v22 = v7;
      Class v15 = FormatColor.color.getter(v10);
    }
    else
    {
      Class v15 = 0;
    }
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v11;
    *(unsigned char *)(v16 + 24) = (v8 & 0xF000000000000007) == 0xF000000000000007;
    *(double *)(v16 + 32) = v13;
    *(unsigned char *)(v16 + 40) = (v6 & 0xF000000000000007) == 0xF000000000000007;
    *(void *)(v16 + 48) = v15;
    sub_1BFDC11BC(v7);
    sub_1BFEF68C0(v6);
    sub_1BFEF68C0(v8);
    swift_release();
    sub_1BFDC11BC(v7);
    sub_1BFEF68C0(v6);
    sub_1BFEF68C0(v8);
    uint64_t result = v20;
    unint64_t v18 = *(void *)(v20 + 16);
    unint64_t v17 = *(void *)(v20 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1C05F67E4(v17 > 1, v18 + 1, 1);
      uint64_t result = v20;
    }
    v5 += 3;
    *(void *)(result + 16) = v18 + 1;
    uint64_t v19 = result + 16 * v18;
    *(void *)(v19 + 32) = sub_1C110D644;
    *(void *)(v19 + 40) = v16;
    if (!--v3) {
      return result;
    }
  }
  uint64_t v22 = v6;
  swift_retain();
  double v14 = FormatFloat.value(contextLayoutOptions:)(v21);
  if (!v1)
  {
    double v13 = v14;
    uint64_t v10 = sub_1BFEF68C0(v6);
    goto LABEL_10;
  }
  sub_1BFDC11BC(v7);
  sub_1BFEF68C0(v6);
  sub_1BFEF68C0(v8);
  sub_1BFEF68C0(v6);
LABEL_19:
  swift_release();
  sub_1BFDC11BC(v7);
  sub_1BFEF68C0(v6);
  sub_1BFEF68C0(v8);
  return swift_release();
}

uint64_t sub_1C12A5160(unint64_t a1, void (*a2)(uint64_t *__return_ptr, unint64_t, uint64_t))
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1BFE9F020(0, 0, 0);
  uint64_t v3 = v14;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18C7CB0](v5, a1);
        unint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        a2(&v13, v5, v6);
        swift_release();
        uint64_t v8 = v13;
        uint64_t v14 = v3;
        unint64_t v10 = *(void *)(v3 + 16);
        unint64_t v9 = *(void *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1BFE9F020(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v14;
        }
        *(void *)(v3 + 16) = v10 + 1;
        *(void *)(v3 + 8 * v10 + 32) = v8;
        ++v5;
        if (v7 == v4) {
          goto LABEL_17;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1C15204BC();
      if (!v4) {
        goto LABEL_17;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
    swift_retain();
    unint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C12A52FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatOption() - 8;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  double v11 = (uint64_t *)((char *)&v29 - v10);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    uint64_t v29 = v2;
    uint64_t v13 = 0;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v33 = a1 + v32;
    uint64_t v35 = a2 + 56;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v30 = v14;
    uint64_t v31 = v7;
    while (1)
    {
      sub_1BFF1B214(v33 + v14 * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_21;
      }
      uint64_t v17 = *v11;
      uint64_t v16 = v11[1];
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v18 = sub_1C1520E0C();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v35 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v21 = *(void *)(a2 + 48);
      uint64_t v22 = (void *)(v21 + 16 * v20);
      BOOL v23 = *v22 == v17 && v22[1] == v16;
      if (!v23 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      sub_1BFF1BA48((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v14 = v30;
      unint64_t v7 = v31;
LABEL_4:
      if (++v13 == v34) {
        return v36;
      }
    }
    uint64_t v24 = ~v19;
    while (1)
    {
      unint64_t v20 = (v20 + 1) & v24;
      if (((*(void *)(v35 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        break;
      }
      uint64_t v25 = (void *)(v21 + 16 * v20);
      BOOL v26 = *v25 == v17 && v25[1] == v16;
      if (v26 || (sub_1C1520A9C() & 1) != 0) {
        goto LABEL_3;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v14 = v30;
    unint64_t v7 = v31;
LABEL_21:
    sub_1BFF23AA4((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1C05F66C4(0, *(void *)(v15 + 16) + 1, 1);
    }
    uint64_t v15 = v36;
    unint64_t v28 = *(void *)(v36 + 16);
    unint64_t v27 = *(void *)(v36 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1C05F66C4(v27 > 1, v28 + 1, 1);
      uint64_t v15 = v36;
    }
    *(void *)(v15 + 16) = v28 + 1;
    sub_1BFF23AA4((uint64_t)v7, v15 + v32 + v28 * v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1C12A5804(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    uint64_t v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 11) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C153A4E0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 11)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A5B24()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v13 = *(void *)(v0 + 80);
  __int16 v14 = *(_WORD *)(v0 + 89);
  char v5 = *(unsigned char *)(v0 + 64);
  char v6 = *(unsigned char *)(v0 + 88);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v10;
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(unsigned char *)(v8 + 64) = v5;
  *(void *)(v8 + 72) = v4;
  *(void *)(v8 + 80) = v13;
  *(unsigned char *)(v8 + 88) = v6;
  *(_WORD *)(v8 + 89) = v14;
  swift_beginAccess();
  *(void *)(v8 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v2, v3, v5);
  sub_1BFEF6828(v4, v13, v6);
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t sub_1C12A5CA4(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 4) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C154A460;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 4)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A5FC4(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 5) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C1547F80;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 5)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A62E4(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 7) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C15C2CA0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 7)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A6604(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 8) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C157D900;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 8)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A6924(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 9) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C158F150;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 9)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A6C44(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 10) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C1548460;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 10)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A6F64(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 14) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C15DEBE0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 14)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C12A7284(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    char v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 15) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C1548C20;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 15)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1C12A75A4(void *a1, uint64_t a2)
{
  uint64_t v11 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v4 = a1;
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v12 = *(unsigned __int8 *)(a2 + 48);
    uint64_t v2 = *(unsigned __int8 *)(a2 + 49);
    uint64_t v13 = &byte_1F1B64748;
    uint64_t v14 = *(void *)(a2 + 56);
    while (1)
    {
      int v15 = *v13++;
      if (v15 == 16) {
        break;
      }
      if (!--v11) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    uint64_t v12 = sub_1C152040C();
    __break(1u);
  }
  uint64_t v38 = v14;
  uint64_t v40 = v12;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v5;
  *(void *)(v16 + 24) = v6;
  *(void *)(v16 + 32) = v7;
  *(void *)(v16 + 40) = v8;
  *(void *)(v16 + 48) = v9;
  *(void *)(v16 + 56) = v10;
  *(void *)(v16 + 64) = v40 | (v2 << 8) | 0x8000000000000000;
  *(void *)(v16 + 72) = v38;
  swift_bridgeObjectRetain();
  sub_1C12A8CC8(v3);
  if (swift_isUniquelyReferenced_nonNull_native()) {
    uint64_t v17 = v4;
  }
  else {
    uint64_t v17 = sub_1BFF9514C(0, v4[2] + 1, 1, v4);
  }
  unint64_t v19 = v17[2];
  unint64_t v18 = v17[3];
  if (v19 >= v18 >> 1) {
    uint64_t v17 = sub_1BFF9514C((void *)(v18 > 1), v19 + 1, 1, v17);
  }
  v17[2] = v19 + 1;
  v17[v19 + 4] = v16 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    BOOL v23 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v37 = v21;
    uint64_t v39 = v20;
    do
    {
      unint64_t v25 = *(void *)(v20 + 8 * v22 + 32);
      switch((v25 >> 59) & 0x1E | (v25 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v25 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      unint64_t v26 = *(void *)(v25 + 64);
      if (v26 >> 59 == 16)
      {
        uint64_t v28 = *(void *)(v25 + 48);
        uint64_t v27 = *(void *)(v25 + 56);
        uint64_t v29 = *(void *)(v25 + 72);
        uint64_t v30 = *(void *)(v25 + 40);
        uint64_t v41 = *(void *)(v25 + 32);
        uint64_t v31 = *(void *)(v25 + 16);
        uint64_t v32 = *(void *)(v25 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v28, v27, v26);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v23 = sub_1C0EE2054(0, v23[2] + 1, 1, v23);
        }
        unint64_t v34 = v23[2];
        unint64_t v33 = v23[3];
        uint64_t v35 = v23;
        if (v34 >= v33 >> 1) {
          uint64_t v35 = sub_1C0EE2054((void *)(v33 > 1), v34 + 1, 1, v23);
        }
        void v35[2] = v34 + 1;
        BOOL v23 = v35;
        uint64_t v24 = &v35[8 * v34];
        v24[4] = v31;
        v24[5] = v32;
        uint64_t v20 = v39;
        v24[6] = v41;
        v24[7] = v30;
        _OWORD v24[8] = v28;
        v24[9] = v27;
        *((_WORD *)v24 + 40) = v26;
        v24[11] = v29;
        uint64_t v21 = v37;
      }
      ++v22;
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v23 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1C12A79CC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t a6)
{
  unint64_t v26 = a5;
  uint64_t v27 = a6;
  v24[1] = a3;
  unint64_t v25 = a4;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void *)((char *)v24 - v10);
  uint64_t v32 = a1;
  swift_beginAccess();
  uint64_t v13 = v6[2];
  uint64_t v12 = v6[3];
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1BFF303E0(v13, v12);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v31 = v6[4];
  unint64_t v18 = v31;
  swift_bridgeObjectRetain();
  sub_1BFF35EA4(v18);
  uint64_t v19 = v30;
  sub_1BFF30600(a2, v14, v16, v11);
  if (v19)
  {
    sub_1BFF322A8(v18);
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  else
  {
    v24[0] = v11;
    uint64_t v30 = KeyPath;
    sub_1BFF322A8(v18);
    swift_beginAccess();
    swift_retain();
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_1C12A4C68(v21, (uint64_t)a2);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v14;
    void v22[3] = v16;
    v22[4] = a2;
    v22[5] = v6;
    unint64_t v25 = (uint64_t (*)(void))v25(0);
    v26();
    swift_retain();
    swift_retain();
    uint64_t v23 = v24[0];
    sub_1C15173EC();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v23, v29);
  }
}

uint64_t sub_1C12A7CFC()
{
  sub_1BFF94FE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t (*sub_1C12A7D44(uint64_t a1, uint64_t a2))(void *a1)
{
  return sub_1C12A92E4(a1, a2);
}

uint64_t (*sub_1C12A7D60(uint64_t a1, uint64_t a2))(void *a1)
{
  return sub_1C12A9388(a1, a2);
}

uint64_t sub_1C12A7D78(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C12A7DD8(uint64_t a1, uint64_t a2)
{
  return sub_1C0176EE8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C12A7DF4()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC938], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A7E20()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A7E4C(uint64_t a1)
{
  return sub_1C119CCF4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C12A7E58()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC938]);
}

uint64_t sub_1C12A7E88()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC938], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A7EC0()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC938], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A7EEC()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A7F18()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC938]);
}

uint64_t sub_1C12A7F48()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC938], MEMORY[0x1E4FBC8D0]);
}

unint64_t sub_1C12A7F78()
{
  unint64_t result = qword_1EA1ADB48;
  if (!qword_1EA1ADB48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB48);
  }
  return result;
}

void sub_1C12A7FB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C12A801C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C12A44D4(a1, *(uint64_t **)(v3 + 16), a2, a3);
}

uint64_t sub_1C12A803C()
{
  return swift_deallocObject();
}

uint64_t sub_1C12A804C()
{
  swift_release();
  if (*(void *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 != 255) {
      sub_1BFE94AD4(*(void *)(v0 + 80), *(void *)(v0 + 88), v1 & 1);
    }
    int v2 = *(unsigned __int8 *)(v0 + 136);
    if (v2 != 255) {
      sub_1C00F670C(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), v2 & 1);
    }
    int v3 = *(unsigned __int8 *)(v0 + 160);
    if (v3 != 255) {
      sub_1BFE94AD4(*(void *)(v0 + 144), *(void *)(v0 + 152), v3 & 1);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C12A810C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A8150()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C03596EC(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  sub_1C03596EC(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(unsigned char *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_1C12A81D0()
{
  sub_1BFF7C0EC(*(void *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C12A8208()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12A8248()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12A829C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A82D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C12A8334()
{
  sub_1BFF05CCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A8380@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1BFF64090(**(void **)(v3 + 16), *a1, a3);
  if (v4) {
    *a2 = v4;
  }
  return result;
}

void sub_1C12A83C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  if (!*a2)
  {
    sub_1BFF31DC0(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v6 = sub_1C151FD8C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C12A8434(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFF31DC0(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C12A8490(uint64_t a1)
{
  return sub_1BFC70DEC(a1);
}

uint64_t sub_1C12A84AC(uint64_t a1, uint64_t a2)
{
  return sub_1C12A90A4(a1, a2);
}

uint64_t sub_1C12A84C4()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A84F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0F11BA8(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_1C12A8510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), void (*a9)(uint64_t))
{
  if ((a7 & 0xF000000000000007) != 0xD000000000000007)
  {
    a8();
    a9(a7);
  }
}

uint64_t sub_1C12A857C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 0xFE) != 0x7E)
  {
    sub_1BFDC11BC(result);
    return sub_1BFEF68AC(a7, a8, a9);
  }
  return result;
}

uint64_t sub_1C12A85E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C12A862C()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A8658()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12A8690()
{
  if (*(void *)(v0 + 16))
  {
    swift_release();
    swift_release();
    sub_1BFF0056C(*(void *)(v0 + 40));
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12A86F8(uint64_t a1)
{
  return sub_1C0080398(a1);
}

uint64_t sub_1C12A8714()
{
  return sub_1C12A9C88((uint64_t (*)(void, void, void, void, void, void))sub_1C132C63C);
}

uint64_t sub_1C12A8740()
{
  return objectdestroy_189Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A8758@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C034C944(v5[2], v5[3], v5[4], v5[5], a1, a2, a3, a4, a5);
}

uint64_t sub_1C12A8778(uint64_t a1)
{
  return sub_1BFDA021C(a1, sub_1C118F040);
}

uint64_t sub_1C12A87A4()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A87D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C118EEAC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1C12A87F0()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A87F8()
{
  return sub_1C12A9768((uint64_t (*)(void, void, void, void, void))sub_1C065B1F4);
}

void sub_1C12A8824()
{
  if (!qword_1EB883200)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB883200);
    }
  }
}

uint64_t sub_1C12A8888@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1C12A4538(a1, *(uint64_t **)(v3 + 16), a2, a3);
}

uint64_t sub_1C12A88A8()
{
  return objectdestroy_189Tm(MEMORY[0x1E4FBC938]);
}

uint64_t sub_1C12A88C0@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C0209A98(*(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a1, a2, a3, a4, a5);
}

uint64_t sub_1C12A88E0()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A88E8()
{
  return sub_1C12A9768((uint64_t (*)(void, void, void, void, void))sub_1C12E362C);
}

uint64_t sub_1C12A8918@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C12A9810(a1, a2, a3, a4, a5);
}

uint64_t sub_1C12A8930()
{
  return swift_deallocObject();
}

double sub_1C12A8968@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C12A4618(a1, *(uint64_t **)(v3 + 16), a2, a3);
}

uint64_t sub_1C12A898C(uint64_t a1, uint64_t a2)
{
  return sub_1BFFE8570(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_1C1405140);
}

void sub_1C12A89B8()
{
  if (!qword_1EB85F290)
  {
    sub_1BFF31DC0(255, (unint64_t *)&qword_1EB871318, (uint64_t (*)(void))sub_1C007CF78, (uint64_t)&type metadata for FormatLayoutValue, MEMORY[0x1E4FAB718]);
    type metadata accessor for IssueCoverViewLayoutAttributesFactory();
    sub_1BFF597F8();
    sub_1C12A8ACC();
    sub_1BFF30570(&qword_1EB85DC70, (void (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory);
    unint64_t v0 = sub_1C15175BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F290);
    }
  }
}

unint64_t sub_1C12A8ACC()
{
  unint64_t result = qword_1EB85F2B0;
  if (!qword_1EB85F2B0)
  {
    sub_1BFF31DC0(255, (unint64_t *)&qword_1EB871318, (uint64_t (*)(void))sub_1C007CF78, (uint64_t)&type metadata for FormatLayoutValue, MEMORY[0x1E4FAB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F2B0);
  }
  return result;
}

uint64_t sub_1C12A8B5C()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A8B68(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t *sub_1C12A8BC4(unint64_t *a1)
{
  return a1;
}

unint64_t *sub_1C12A8BF0(unint64_t *a1)
{
  return a1;
}

uint64_t sub_1C12A8C20@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C12A99EC(a1, a2, a3, a4, a5);
}

uint64_t sub_1C12A8C3C(uint64_t a1, uint64_t a2)
{
  return sub_1BFFE8570(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_1C10DA434);
}

uint64_t sub_1C12A8C68()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A8C70@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C12A9B5C(a1, a2, a3, a4, a5);
}

uint64_t sub_1C12A8C8C(uint64_t a1, uint64_t a2)
{
  return sub_1C02A2140(a1, a2, *(void *)(v2 + 16), v2 + 24);
}

uint64_t sub_1C12A8CB0@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C12A9C0C(a1, a2, a3, a4, a5);
}

uint64_t sub_1C12A8CC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C12A8D38()
{
  return sub_1C12A9C88((uint64_t (*)(void, void, void, void, void, void))sub_1C0D683E4);
}

uint64_t objectdestroy_149Tm()
{
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  uint64_t v2 = v1;
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v14 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v17 = sub_1C151AC1C();
  uint64_t v3 = *(void *)(v17 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  swift_unownedRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v15 = (v16 + 96) & ~v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v15 + 56) >= 0xFuLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v15 + *(int *)(v2 + 36);
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_1C151928C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[6], v8);
  uint64_t v11 = v5 + v6[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  unint64_t v12 = (v14 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF44AC4(*(void *)(v0 + v12));
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + ((v12 + v4 + 8) & ~v4), v17);
  return swift_deallocObject();
}

uint64_t sub_1C12A90A4(uint64_t a1, uint64_t a2)
{
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_1C151AC1C() - 8);
  return sub_1C0F1165C(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], (uint64_t)(v2 + 7), (long long *)((char *)v2 + v6), *(uint64_t *)((char *)v2 + v7), (uint64_t)v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
}

uint64_t sub_1C12A91EC()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A9220()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A9254()
{
  return objectdestroy_189Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A926C()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A9298()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A92A0()
{
  return objectdestroy_189Tm(MEMORY[0x1E4FBC938]);
}

uint64_t sub_1C12A92B8()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A92C8()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A92D8()
{
  return objectdestroy_195Tm();
}

uint64_t (*sub_1C12A92E4(uint64_t a1, uint64_t a2))(void *a1)
{
  return sub_1C1242730(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), (unint64_t *)(v2 + 56), *(char **)(v2 + 96));
}

uint64_t objectdestroy_13Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t (*sub_1C12A9388(uint64_t a1, uint64_t a2))(void *a1)
{
  return sub_1C1242158(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), (unint64_t *)(v2 + 56), *(void *)(v2 + 96), *(char **)(v2 + 104));
}

uint64_t sub_1C12A93D0()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC938], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A93FC()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A9428()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC938]);
}

uint64_t objectdestroy_28Tm_1()
{
  swift_unownedRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A94A8()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC938], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_143Tm()
{
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A953C()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_164Tm()
{
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12A95C8()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_160Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_185Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A96A4()
{
  return objectdestroy_189Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A96BC()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C12A96E8()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A96F0()
{
  return objectdestroy_189Tm(MEMORY[0x1E4FBC938]);
}

uint64_t objectdestroy_189Tm(void (*a1)(void))
{
  swift_bridgeObjectRelease();
  swift_release();
  a1(*(void *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C12A9760()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A9768(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_208Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A9810@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C12C0838(*(void *)(v5 + 16), *(void **)(v5 + 24), *(unsigned char *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 80), a1, a2, a3, a4, a5, *(double *)(v5 + 72), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112));
}

uint64_t sub_1C12A9860()
{
  return objectdestroy_195Tm();
}

uint64_t sub_1C12A9868@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C024E338(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t objectdestroy_232Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for SharedItem() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v3 + v1[9];
  uint64_t v6 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_1C12A99EC@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  type metadata accessor for SharedItem();
  return sub_1C0CBCB3C(*(void *)(v5 + 16), v5 + 24, *(void *)(v5 + 112), *(void *)(v5 + 120), a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_67Tm()
{
  swift_bridgeObjectRelease();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A9AF8()
{
  return objectdestroy_195Tm();
}

uint64_t objectdestroy_195Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A9B5C@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C0B2BA70(v5[2], v5[3], v5[4], v5[5], v5[6], (uint64_t)(v5 + 7), a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_249Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 <= 0xFD) {
      sub_1BFF04738(*(void *)(v0 + 80), *(void *)(v0 + 88), v1);
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A9C0C@<X0>(unint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C0993404(*(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), (uint64_t *)(v5 + 48), *(void *)(v5 + 112), a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_253Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12A9C88(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

void *sub_1C12A9CB4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, _OWORD *a15, char a16)
{
  uint64_t v17 = (void *)v16;
  unint64_t v18 = a4;
  *(double *)(v16 + 16) = a7;
  *(double *)(v16 + 24) = a8;
  *(double *)(v16 + 32) = a9;
  *(double *)(v16 + 40) = a10;
  *(void *)(v16 + 48) = a1;
  *(void *)(v16 + 56) = a2;
  *(void *)(v16 + 64) = a3;
  *(void *)(v16 + 72) = a4;
  *(void *)(v16 + 80) = a5;
  *(void *)(v16 + 88) = a6;
  *(void *)(v16 + 120) = a14;
  long long v20 = a15[5];
  *(_OWORD *)(v16 + 192) = a15[4];
  *(_OWORD *)(v16 + 208) = v20;
  *(_OWORD *)(v16 + 217) = *(_OWORD *)((char *)a15 + 89);
  long long v21 = a15[1];
  *(_OWORD *)(v16 + 128) = *a15;
  *(_OWORD *)(v16 + 144) = v21;
  long long v22 = a15[3];
  *(_OWORD *)(v16 + 160) = a15[2];
  *(_OWORD *)(v16 + 176) = v22;
  *(unsigned char *)(v16 + 233) = a16;
  *(double *)(v16 + 256) = a11;
  *(double *)(v16 + 264) = a12;
  sub_1BFFC88A8((uint64_t)a15);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 112) = v23;
  uint64_t v54 = MEMORY[0x1E4FBC860];
  uint64_t v46 = v23;
  uint64_t v48 = *(void *)(v23 + 16);
  if (v48)
  {
    unint64_t v44 = v18;
    unint64_t v45 = (void *)v16;
    type metadata accessor for FormatDataLayoutViewModel();
    swift_bridgeObjectRetain_n();
    uint64_t v24 = 0;
    unint64_t v25 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v26 = *(void *)(v23 + 8 * v24 + 32);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v26;
      sub_1BFFCC1AC((uint64_t)&v49);
      unint64_t v28 = v50;
      unint64_t v30 = v51;
      uint64_t v29 = v52;
      char v31 = v53;
      uint64_t v47 = v49;
      *(void *)(v27 + 24) = v49;
      *(void *)(v27 + 32) = v28;
      *(void *)(v27 + 40) = v30;
      *(void *)(v27 + 48) = v29;
      *(unsigned char *)(v27 + 56) = v31;
      swift_retain_n();
      uint64_t v32 = swift_retain();
      MEMORY[0x1C18C66D0](v32);
      if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_bridgeObjectRetain();
      sub_1BFFCC7B0(v30);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v33 = v25;
      }
      else {
        unint64_t v33 = sub_1BFFCD120(0, v25[2] + 1, 1, v25);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        unint64_t v33 = sub_1BFFCD120((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      ++v24;
      _OWORD v33[2] = v35 + 1;
      unint64_t v25 = v33;
      uint64_t v36 = &v33[5 * v35];
      v36[4] = v47;
      v36[5] = v28;
      v36[6] = v30;
      v36[7] = v29;
      *((unsigned char *)v36 + 64) = v31;
      swift_release();
      swift_release();
      uint64_t v23 = v46;
    }
    while (v48 != v24);
    swift_bridgeObjectRelease();
    uint64_t v37 = v54;
    unint64_t v18 = v44;
    uint64_t v17 = v45;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = MEMORY[0x1E4FBC860];
    unint64_t v25 = (void *)MEMORY[0x1E4FBC860];
  }
  v17[30] = v37;
  type metadata accessor for FormatDataLayoutViewKey();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v25;
  v17[31] = v38;
  if (v48)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    do
    {
      switch((*(void *)(v23 + 8 * v39 + 32) >> 59) & 0x1E | (*(void *)(v23 + 8 * v39 + 32) >> 2) & 1)
      {
        case 4:
        case 5:
        case 0x11:
          goto LABEL_15;
        case 0xDLL:
          sub_1C12AB284(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
          swift_projectBox();
          goto LABEL_15;
        case 0xELL:
          sub_1BFD32FB8(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
          swift_projectBox();
          goto LABEL_15;
        case 0x10:
          sub_1C12AB284(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
          swift_projectBox();
LABEL_15:
          swift_bridgeObjectRetain();
          uint64_t v49 = v40;
          unint64_t v50 = v41;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v40 = v49;
          unint64_t v41 = v50;
          uint64_t v23 = v46;
          break;
        default:
          break;
      }
      ++v39;
    }
    while (v48 != v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = a3;
  unint64_t v50 = v18;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v42 = v50;
  v17[12] = v49;
  v17[13] = v42;
  return v17;
}

void *sub_1C12AA2C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v17 = (void *)v16;
  uint64_t v21 = a15;
  *(double *)(v16 + 16) = a7;
  *(double *)(v16 + 24) = a8;
  *(double *)(v16 + 32) = a9;
  *(double *)(v16 + 40) = a10;
  *(void *)(v16 + 48) = a1;
  *(void *)(v16 + 56) = a2;
  *(void *)(v16 + 64) = a3;
  *(void *)(v16 + 72) = a4;
  *(void *)(v16 + 80) = a5;
  *(void *)(v16 + 88) = a6;
  *(void *)(v16 + 120) = a14;
  sub_1BFF1B214(a15, (uint64_t)v17 + *(void *)(*v17 + 144), (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
  *(unsigned char *)(v16 + *(void *)(*(void *)v16 + 152)) = a16;
  long long v22 = (double *)((char *)v17 + *(void *)(*v17 + 176));
  double *v22 = a11;
  v22[1] = a12;
  unint64_t v47 = a4;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 112) = v23;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  uint64_t v50 = *(void *)(v23 + 16);
  if (v50)
  {
    unint64_t v45 = (void *)v16;
    type metadata accessor for FormatDataLayoutViewModel();
    uint64_t v48 = v23;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = 0;
    unint64_t v25 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v26 = *(void *)(v48 + 8 * v24 + 32);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v26;
      sub_1BFFCC1AC((uint64_t)&v51);
      unint64_t v28 = v52;
      unint64_t v30 = v53;
      uint64_t v29 = v54;
      char v31 = v55;
      uint64_t v49 = v51;
      *(void *)(v27 + 24) = v51;
      *(void *)(v27 + 32) = v28;
      *(void *)(v27 + 40) = v30;
      *(void *)(v27 + 48) = v29;
      *(unsigned char *)(v27 + 56) = v31;
      swift_retain_n();
      uint64_t v32 = swift_retain();
      MEMORY[0x1C18C66D0](v32);
      if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_bridgeObjectRetain();
      sub_1BFFCC7B0(v30);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v33 = v25;
      }
      else {
        unint64_t v33 = sub_1BFFCD120(0, v25[2] + 1, 1, v25);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        unint64_t v33 = sub_1BFFCD120((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      ++v24;
      _OWORD v33[2] = v35 + 1;
      unint64_t v25 = v33;
      uint64_t v36 = &v33[5 * v35];
      v36[4] = v49;
      v36[5] = v28;
      v36[6] = v30;
      v36[7] = v29;
      *((unsigned char *)v36 + 64) = v31;
      swift_release();
      swift_release();
    }
    while (v50 != v24);
    uint64_t v23 = v48;
    swift_bridgeObjectRelease();
    uint64_t v37 = v56;
    uint64_t v17 = v45;
    uint64_t v21 = a15;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = MEMORY[0x1E4FBC860];
    unint64_t v25 = (void *)MEMORY[0x1E4FBC860];
  }
  *(void *)((char *)v17 + *(void *)(*v17 + 160)) = v37;
  type metadata accessor for FormatDataLayoutViewKey();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v25;
  *(void *)((char *)v17 + *(void *)(*v17 + 168)) = v38;
  if (v50)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    do
    {
      switch((*(void *)(v23 + 8 * v39 + 32) >> 59) & 0x1E | (*(void *)(v23 + 8 * v39 + 32) >> 2) & 1)
      {
        case 4:
        case 5:
        case 0x11:
          goto LABEL_15;
        case 0xDLL:
          sub_1C12AB284(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
          swift_projectBox();
          goto LABEL_15;
        case 0xELL:
          sub_1BFD32FB8(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
          swift_projectBox();
          goto LABEL_15;
        case 0x10:
          sub_1C12AB284(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
          swift_projectBox();
LABEL_15:
          swift_bridgeObjectRetain();
          uint64_t v51 = v40;
          unint64_t v52 = v41;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v40 = v51;
          unint64_t v41 = v52;
          break;
        default:
          break;
      }
      ++v39;
    }
    while (v50 != v39);
    swift_bridgeObjectRelease();
    uint64_t v21 = a15;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = a3;
  unint64_t v52 = v47;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v42 = v51;
  unint64_t v43 = v52;
  sub_1BFF1BA48(v21, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
  v17[12] = v42;
  v17[13] = v43;
  return v17;
}

void *sub_1C12AA95C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v16 = (void *)v15;
  unint64_t v17 = a4;
  *(double *)(v15 + 16) = a7;
  *(double *)(v15 + 24) = a8;
  *(double *)(v15 + 32) = a9;
  *(double *)(v15 + 40) = a10;
  *(void *)(v15 + 48) = a1;
  *(void *)(v15 + 56) = a2;
  *(void *)(v15 + 64) = a3;
  *(void *)(v15 + 72) = a4;
  *(void *)(v15 + 80) = a5;
  *(void *)(v15 + 88) = a6;
  *(void *)(v15 + 120) = a14;
  *(unsigned char *)(v15 + 128) = a15;
  *(double *)(v15 + 152) = a11;
  *(double *)(v15 + 160) = a12;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 112) = v19;
  uint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v42 = v19;
  uint64_t v44 = *(void *)(v19 + 16);
  if (v44)
  {
    unint64_t v40 = v17;
    unint64_t v41 = (void *)v15;
    type metadata accessor for FormatDataLayoutViewModel();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = 0;
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v22 = *(void *)(v19 + 8 * v20 + 32);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v22;
      sub_1BFFCC1AC((uint64_t)&v45);
      unint64_t v24 = v46;
      unint64_t v26 = v47;
      uint64_t v25 = v48;
      char v27 = v49;
      uint64_t v43 = v45;
      *(void *)(v23 + 24) = v45;
      *(void *)(v23 + 32) = v24;
      *(void *)(v23 + 40) = v26;
      *(void *)(v23 + 48) = v25;
      *(unsigned char *)(v23 + 56) = v27;
      swift_retain_n();
      uint64_t v28 = swift_retain();
      MEMORY[0x1C18C66D0](v28);
      if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_bridgeObjectRetain();
      sub_1BFFCC7B0(v26);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v29 = v21;
      }
      else {
        uint64_t v29 = sub_1BFFCD120(0, v21[2] + 1, 1, v21);
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        uint64_t v29 = sub_1BFFCD120((void *)(v30 > 1), v31 + 1, 1, v29);
      }
      ++v20;
      _OWORD v29[2] = v31 + 1;
      uint64_t v21 = v29;
      uint64_t v32 = &v29[5 * v31];
      void v32[4] = v43;
      v32[5] = v24;
      v32[6] = v26;
      v32[7] = v25;
      *((unsigned char *)v32 + 64) = v27;
      swift_release();
      swift_release();
      uint64_t v19 = v42;
    }
    while (v44 != v20);
    swift_bridgeObjectRelease();
    uint64_t v33 = v50;
    unint64_t v17 = v40;
    uint64_t v16 = v41;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = MEMORY[0x1E4FBC860];
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  }
  v16[17] = v33;
  type metadata accessor for FormatDataLayoutViewKey();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v21;
  v16[18] = v34;
  if (v44)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    do
    {
      switch((*(void *)(v19 + 8 * v35 + 32) >> 59) & 0x1E | (*(void *)(v19 + 8 * v35 + 32) >> 2) & 1)
      {
        case 4:
        case 5:
        case 0x11:
          goto LABEL_15;
        case 0xDLL:
          sub_1C12AB284(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
          swift_projectBox();
          goto LABEL_15;
        case 0xELL:
          sub_1BFD32FB8(0, (unint64_t *)&qword_1EA19BBC8, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (unint64_t *)&unk_1EA1A5A70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes);
          swift_projectBox();
          goto LABEL_15;
        case 0x10:
          sub_1C12AB284(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
          swift_projectBox();
LABEL_15:
          swift_bridgeObjectRetain();
          uint64_t v45 = v36;
          unint64_t v46 = v37;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v36 = v45;
          unint64_t v37 = v46;
          uint64_t v19 = v42;
          break;
        default:
          break;
      }
      ++v35;
    }
    while (v44 != v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3;
  unint64_t v46 = v17;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v38 = v46;
  v16[12] = v45;
  v16[13] = v38;
  return v16;
}

uint64_t sub_1C12AAF40()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12AAFA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C12A0F38(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C12AAFC0()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_516Tm()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12AB074()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12AB0D8()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12AB12C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12AB190()
{
  sub_1C00FA1F0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_release();
  swift_release();
  if (*(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12AB1FC()
{
  sub_1C00F80E0(*(void *)(v0 + 24));
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C12AB258()
{
  return objectdestroy_19Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC8D0]);
}

void sub_1C12AB284(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FormatGroupLayoutFactoryOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12AB3CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupLayoutFactoryOption()
{
  return &type metadata for FormatGroupLayoutFactoryOption;
}

uint64_t sub_1C12AB404(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v59 = a3;
  uint64_t v60 = a2;
  uint64_t v10 = a3[6];
  uint64_t v61 = a1;
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  uint64_t v25 = (void *)(v20 + v24);
  unint64_t v26 = (const void *)(v21 + v24);
  uint64_t v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v25, v26, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  uint64_t v31 = v59[8];
  *(void *)(v61 + v59[7]) = *(void *)(v60 + v59[7]);
  uint64_t v32 = v61 + v31;
  uint64_t v33 = v60 + v31;
  uint64_t v34 = *(void *)(v60 + v31 + 8);
  *(void *)uint64_t v32 = *(void *)(v60 + v31);
  *(void *)(v32 + 8) = v34;
  uint64_t v35 = *(void *)(v60 + v31 + 24);
  *(void *)(v32 + 16) = *(void *)(v60 + v31 + 16);
  *(void *)(v32 + 24) = v35;
  uint64_t v36 = *(void *)(v60 + v31 + 40);
  *(void *)(v32 + 32) = *(void *)(v60 + v31 + 32);
  *(void *)(v32 + 40) = v36;
  *(unsigned char *)(v32 + 48) = *(unsigned char *)(v60 + v31 + 48);
  *(void *)(v32 + 56) = *(void *)(v60 + v31 + 56);
  uint64_t v57 = (_OWORD *)(v61 + v31 + 64);
  unint64_t v37 = (_OWORD *)(v60 + v31 + 64);
  unint64_t v38 = *(void *)(v60 + v31 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38 >= 2)
  {
    if (v38 == 2)
    {
      _OWORD *v57 = *v37;
    }
    else
    {
      *(unsigned char *)(v32 + 64) = *(unsigned char *)v37;
      *(void *)(v32 + 72) = v38;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    _OWORD *v57 = *v37;
  }
  uint64_t v39 = *(void *)(v33 + 88);
  *(void *)(v32 + 80) = *(void *)(v33 + 80);
  *(void *)(v32 + 88) = v39;
  uint64_t v40 = *(void *)(v33 + 104);
  *(void *)(v32 + 96) = *(void *)(v33 + 96);
  *(void *)(v32 + 104) = v40;
  uint64_t v41 = *(void *)(v33 + 120);
  *(void *)(v32 + 112) = *(void *)(v33 + 112);
  *(void *)(v32 + 120) = v41;
  *(unsigned char *)(v32 + 128) = *(unsigned char *)(v33 + 128);
  *(void *)(v32 + 136) = *(void *)(v33 + 136);
  uint64_t v42 = v59[10];
  *(void *)(v61 + v59[9]) = *(void *)(v60 + v59[9]);
  *(void *)(v61 + v42) = *(void *)(v60 + v42);
  uint64_t v43 = v59[12];
  *(void *)(v61 + v59[11]) = *(void *)(v60 + v59[11]);
  uint64_t v56 = v61 + v43;
  uint64_t v58 = v60 + v43;
  long long v44 = *(_OWORD *)(v60 + v43 + 24);
  *(_OWORD *)(v61 + v43 + 24) = v44;
  uint64_t v55 = v44;
  uint64_t v54 = **(void (***)(uint64_t, uint64_t, uint64_t))(v44 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v54(v56, v58, v55);
  uint64_t v45 = v59[14];
  *(unsigned char *)(v61 + v59[13]) = *(unsigned char *)(v60 + v59[13]);
  long long v46 = *(_OWORD *)(v60 + v45 + 24);
  *(_OWORD *)(v61 + v45 + 24) = v46;
  (**(void (***)(void))(v46 - 8))();
  uint64_t v47 = v59[15];
  uint64_t v48 = v59[16];
  char v49 = (void *)(v61 + v47);
  uint64_t v50 = (void *)(v60 + v47);
  uint64_t v51 = v50[1];
  *char v49 = *v50;
  v49[1] = v51;
  uint64_t v52 = v50[3];
  v49[2] = v50[2];
  v49[3] = v52;
  *(void *)(v61 + v48) = *(void *)(v60 + v48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v61;
}

void *sub_1C12AB980(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v7 = a3[6];
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  long long v44 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1BA48((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v46 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v46 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v45 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (v28)
    {
      sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
      uint64_t v31 = (void *)v45;
LABEL_13:
      memcpy(v31, v24, v30);
      goto LABEL_16;
    }
    uint64_t v33 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v45, v24, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v45, 0, 1, v25);
  }
  else
  {
    if (v28)
    {
      sub_1BFF1BA48(v45, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
      uint64_t v31 = (void *)v45;
      goto LABEL_13;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v45, v24, v34);
  }
LABEL_16:
  *(void *)&v17[*(int *)(v46 + 40)] = *(void *)&v18[*(int *)(v46 + 40)];
  *(void *)&v8[v44[7]] = *(void *)&v9[v44[7]];
  *(void *)&v8[v44[8]] = *(void *)&v9[v44[8]];
  v8[v44[9]] = v9[v44[9]];
  *(void *)&v8[v44[10]] = *(void *)&v9[v44[10]];
  swift_retain();
  swift_release();
  v8[v44[11]] = v9[v44[11]];
  *(void *)&v8[v44[12]] = *(void *)&v9[v44[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v48 + a3[7]) = *(void *)((char *)v47 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v35 = a3[8];
  uint64_t v36 = (char *)v48 + v35;
  unint64_t v37 = (char *)v47 + v35;
  *(void *)uint64_t v36 = *(void *)((char *)v47 + v35);
  *((void *)v36 + 1) = *(void *)((char *)v47 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 2) = *((void *)v37 + 2);
  *((void *)v36 + 3) = *((void *)v37 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 4) = *((void *)v37 + 4);
  *((void *)v36 + 5) = *((void *)v37 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36[48] = v37[48];
  *((void *)v36 + 7) = *((void *)v37 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v38 = *((void *)v36 + 9);
  unint64_t v39 = *((void *)v37 + 9);
  if (v38 == 2)
  {
    if (v39 > 2) {
      goto LABEL_23;
    }
    goto LABEL_26;
  }
  if (v39 == 2)
  {
    sub_1C01D3D9C((uint64_t)(v36 + 64));
    goto LABEL_26;
  }
  if (v38 >= 2)
  {
    if (v39 >= 2)
    {
      v36[64] = v37[64];
      *((void *)v36 + 9) = *((void *)v37 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    sub_1C12A8434((uint64_t)(v36 + 64), (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_26;
  }
  if (v39 < 2)
  {
LABEL_26:
    *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
    goto LABEL_27;
  }
LABEL_23:
  v36[64] = v37[64];
  *((void *)v36 + 9) = *((void *)v37 + 9);
  swift_bridgeObjectRetain();
LABEL_27:
  *((void *)v36 + 10) = *((void *)v37 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 11) = *((void *)v37 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 12) = *((void *)v37 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 13) = *((void *)v37 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 14) = *((void *)v37 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 15) = *((void *)v37 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned char v36[128] = v37[128];
  *((void *)v36 + 17) = *((void *)v37 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v48 + a3[9]) = *(void *)((char *)v47 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)((char *)v48 + a3[10]) = *(void *)((char *)v47 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)((char *)v48 + a3[11]) = *(void *)((char *)v47 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((void *)((char *)v48 + a3[12]), (void *)((char *)v47 + a3[12]));
  *((unsigned char *)v48 + a3[13]) = *((unsigned char *)v47 + a3[13]);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)v48 + a3[14]), (void *)((char *)v47 + a3[14]));
  uint64_t v40 = a3[15];
  uint64_t v41 = (void *)((char *)v48 + v40);
  uint64_t v42 = (char *)v47 + v40;
  *uint64_t v41 = *(void *)((char *)v47 + v40);
  v41[1] = *(void *)((char *)v47 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41[2] = *((void *)v42 + 2);
  v41[3] = *((void *)v42 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v48 + a3[16]) = *(void *)((char *)v47 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_1C12AC114(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = a3[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v17 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v18 = *(int *)(v17 + 36);
  char v49 = (void *)(v15 + v18);
  uint64_t v50 = v17;
  long long v19 = (const void *)(v16 + v18);
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(v49, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v49, v19, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v49, 0, 1, v20);
  }
  *(void *)(v15 + *(int *)(v50 + 40)) = *(void *)(v16 + *(int *)(v50 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  uint64_t v24 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v25 = (_OWORD *)(a1 + v24);
  uint64_t v26 = (_OWORD *)(a2 + v24);
  long long v27 = v26[3];
  void v25[2] = v26[2];
  v25[3] = v27;
  long long v28 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v28;
  long long v29 = v26[8];
  long long v30 = v26[6];
  v25[7] = v26[7];
  v25[8] = v29;
  long long v31 = v26[5];
  unsigned char v25[4] = v26[4];
  v25[5] = v31;
  v25[6] = v30;
  uint64_t v32 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  uint64_t v33 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  long long v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  uint64_t v37 = a3[13];
  uint64_t v38 = a3[14];
  char v39 = *(unsigned char *)(a2 + v37);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(unsigned char *)(a1 + v37) = v39;
  uint64_t v40 = a1 + v38;
  long long v41 = *(_OWORD *)(a2 + v38 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)(a2 + v38);
  *(_OWORD *)(v40 + 16) = v41;
  *(void *)(v40 + 32) = *(void *)(a2 + v38 + 32);
  uint64_t v42 = a3[15];
  uint64_t v43 = a3[16];
  long long v44 = (_OWORD *)(a1 + v42);
  uint64_t v45 = (_OWORD *)(a2 + v42);
  long long v46 = v45[1];
  *long long v44 = *v45;
  v44[1] = v46;
  *(void *)(a1 + v43) = *(void *)(a2 + v43);
  return a1;
}

uint64_t sub_1C12AC49C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v61 = a3;
  uint64_t v62 = a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v60 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v57 = v8;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1BA48((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v59 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v59 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v58 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    long long v27 = v61;
    if (v26)
    {
      sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
      long long v30 = (void *)v58;
LABEL_11:
      memcpy(v30, v22, v29);
      goto LABEL_14;
    }
    uint64_t v32 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v58, v22, v32);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v58, 0, 1, v23);
  }
  else
  {
    long long v27 = v61;
    if (v26)
    {
      sub_1BFF1BA48(v58, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
      long long v30 = (void *)v58;
      goto LABEL_11;
    }
    uint64_t v33 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v33 - 8) + 40))(v58, v22, v33);
  }
LABEL_14:
  *(void *)(v16 + *(int *)(v59 + 40)) = *(void *)(v17 + *(int *)(v59 + 40));
  *(void *)(v7 + v60[7]) = *(void *)(v57 + v60[7]);
  *(void *)(v7 + v60[8]) = *(void *)(v57 + v60[8]);
  *(unsigned char *)(v7 + v60[9]) = *(unsigned char *)(v57 + v60[9]);
  *(void *)(v7 + v60[10]) = *(void *)(v57 + v60[10]);
  swift_release();
  *(unsigned char *)(v7 + v60[11]) = *(unsigned char *)(v57 + v60[11]);
  *(void *)(v7 + v60[12]) = *(void *)(v57 + v60[12]);
  swift_release();
  *(void *)(a1 + v27[7]) = *(void *)(v62 + v27[7]);
  swift_release();
  uint64_t v34 = v27[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = v62 + v34;
  uint64_t v37 = *(void *)(v62 + v34 + 8);
  *(void *)uint64_t v35 = *(void *)(v62 + v34);
  *(void *)(v35 + 8) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v36 + 24);
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  *(void *)(v35 + 24) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v36 + 40);
  *(void *)(v35 + 32) = *(void *)(v36 + 32);
  *(void *)(v35 + 40) = v39;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 48) = *(unsigned char *)(v36 + 48);
  *(void *)(v35 + 56) = *(void *)(v36 + 56);
  swift_bridgeObjectRelease();
  uint64_t v40 = (unsigned char *)(v36 + 64);
  unint64_t v41 = *(void *)(v35 + 72);
  unint64_t v42 = *(void *)(v36 + 72);
  if (v41 != 2)
  {
    if (v42 == 2)
    {
      sub_1C01D3D9C(v35 + 64);
    }
    else if (v41 >= 2)
    {
      if (v42 >= 2)
      {
        *(unsigned char *)(v35 + 64) = *v40;
        *(void *)(v35 + 72) = v42;
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      sub_1C12A8434(v35 + 64, (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    }
  }
  *(_OWORD *)(v35 + 64) = *(_OWORD *)v40;
LABEL_21:
  *(void *)(v35 + 80) = *(void *)(v36 + 80);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 88) = *(void *)(v36 + 88);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 96) = *(void *)(v36 + 96);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 104) = *(void *)(v36 + 104);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 112) = *(void *)(v36 + 112);
  swift_bridgeObjectRelease();
  *(void *)(v35 + 120) = *(void *)(v36 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 128) = *(unsigned char *)(v36 + 128);
  *(void *)(v35 + 136) = *(void *)(v36 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v27[9]) = *(void *)(v62 + v27[9]);
  swift_release();
  *(void *)(a1 + v27[10]) = *(void *)(v62 + v27[10]);
  swift_release();
  *(void *)(a1 + v27[11]) = *(void *)(v62 + v27[11]);
  swift_bridgeObjectRelease();
  uint64_t v43 = v27[12];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = v62 + v43;
  __swift_destroy_boxed_opaque_existential_1(a1 + v43);
  long long v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(void *)(v44 + 32) = *(void *)(v45 + 32);
  uint64_t v47 = v27[14];
  *(unsigned char *)(a1 + v27[13]) = *(unsigned char *)(v62 + v27[13]);
  uint64_t v48 = a1 + v47;
  uint64_t v49 = v62 + v47;
  __swift_destroy_boxed_opaque_existential_1(a1 + v47);
  long long v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  *(void *)(v48 + 32) = *(void *)(v49 + 32);
  uint64_t v51 = v27[15];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = v62 + v51;
  uint64_t v54 = *(void *)(v62 + v51 + 8);
  *uint64_t v52 = *(void *)(v62 + v51);
  v52[1] = v54;
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void *)(v53 + 24);
  v52[2] = *(void *)(v53 + 16);
  v52[3] = v55;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v27[16]) = *(void *)(v62 + v27[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C12ACB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C12ACB48);
}

uint64_t sub_1C12ACB48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C12ACBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C12ACC0C);
}

void *sub_1C12ACC0C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t assignWithCopy for FormatGroupLayoutFactory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 72);
  unint64_t v5 = *(void *)(a2 + 72);
  if (v4 == 2)
  {
    if (v5 > 2) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 2)
  {
    sub_1C01D3D9C(a1 + 64);
    goto LABEL_11;
  }
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C12A8434(a1 + 64, (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    goto LABEL_11;
  }
  if (v5 < 2)
  {
LABEL_11:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_12;
  }
LABEL_8:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
LABEL_12:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 160), (uint64_t *)(a2 + 160));
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 208), (uint64_t *)(a2 + 208));
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_retain();
  swift_release();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy296_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x128uLL);
}

uint64_t assignWithTake for FormatGroupLayoutFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = (unsigned char *)(a2 + 64);
  unint64_t v8 = *(void *)(a1 + 72);
  unint64_t v9 = *(void *)(a2 + 72);
  if (v8 != 2)
  {
    if (v9 == 2)
    {
      sub_1C01D3D9C(a1 + 64);
    }
    else if (v8 >= 2)
    {
      if (v9 >= 2)
      {
        *(unsigned char *)(a1 + 64) = *v7;
        *(void *)(a1 + 72) = v9;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1C12A8434(a1 + 64, (unint64_t *)&qword_1EB888F20, (uint64_t (*)(void))sub_1C01D3D48, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    }
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)v7;
LABEL_8:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  uint64_t v11 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v11;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 208);
  long long v12 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v12;
  uint64_t v13 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v13;
  swift_release();
  uint64_t v14 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatGroupLayoutFactory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 296)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatGroupLayoutFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 296) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 296) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupLayoutFactory()
{
  return &type metadata for FormatGroupLayoutFactory;
}

unint64_t sub_1C12AD2D0()
{
  unint64_t result = qword_1EA1ADB50;
  if (!qword_1EA1ADB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB50);
  }
  return result;
}

uint64_t sub_1C12AD324(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C12A7FB8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C12AD394@<X0>(double **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFFFA26C(a1, a2);
}

uint64_t sub_1C12AD3AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFCEB1B0(a1, a2);
}

uint64_t sub_1C12AD3C8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0064F4C(a1, a2, a3);
}

uint64_t sub_1C12AD3E0(uint64_t a1, uint64_t a2)
{
  return sub_1C12A7DD8(a1, a2);
}

uint64_t sub_1C12AD3F8@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C12A8758(a1, a2, a3, a4, a5);
}

uint64_t sub_1C12AD410@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  return sub_1C12A88C0(a1, a2, a3, a4, a5);
}

uint64_t sub_1C12AD428(uint64_t a1, uint64_t a2)
{
  return sub_1C0026188(a1, a2);
}

uint64_t sub_1C12AD440(uint64_t a1, uint64_t a2)
{
  return sub_1BFC890E8(a1, a2);
}

uint64_t sub_1C12AD458(uint64_t a1, uint64_t a2)
{
  return sub_1BFD79A6C(a1, a2);
}

uint64_t sub_1C12AD470@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C12A84F0(a1, a2);
}

uint64_t sub_1C12AD488@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFD6B1E0(a1, a2);
}

uint64_t sub_1C12AD4A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C12A87D0(a1, a2);
}

uint64_t sub_1C12AD4B8(uint64_t a1)
{
  return sub_1BFD61410(a1);
}

uint64_t sub_1C12AD4D0(uint64_t a1, uint64_t a2)
{
  return sub_1C12A8C8C(a1, a2);
}

uint64_t sub_1C12AD4E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFF87E60(a1, a2);
}

BOOL static FormatImageRenderingMode.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      sub_1BFEF70CC(0);
      unint64_t v4 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v2 == 1)
  {
    if (v3 == 1)
    {
      sub_1BFEF70CC(1uLL);
      sub_1BFEF70CC(1uLL);
      return v3;
    }
    goto LABEL_12;
  }
  if (v2 != 2)
  {
    if (v3 >= 3)
    {
      unint64_t v6 = *(void *)(v2 + 24);
      unint64_t v9 = *(void *)(v3 + 16);
      unint64_t v8 = *(void *)(v3 + 24);
      unint64_t v13 = *(void *)(v2 + 16);
      unint64_t v7 = v13;
      unint64_t v14 = v6;
      unint64_t v11 = v9;
      unint64_t v12 = v8;
      sub_1BFEF6A90(v3);
      sub_1BFEF6A90(v2);
      sub_1BFEF6A90(v13);
      sub_1BFEF6A90(v6);
      sub_1BFEF6A90(v9);
      sub_1BFEF6A90(v8);
      if (static FormatImageRenderingMode.== infix(_:_:)(&v13, &v11))
      {
        char v10 = static FormatImageRenderingMode.== infix(_:_:)(&v14, &v12);
        sub_1BFEF70CC(v9);
        sub_1BFEF70CC(v8);
        sub_1BFEF70CC(v7);
        sub_1BFEF70CC(v6);
        sub_1BFEF70CC(v2);
        sub_1BFEF70CC(v3);
        return (v10 & 1) != 0;
      }
      sub_1BFEF70CC(v9);
      sub_1BFEF70CC(v8);
      sub_1BFEF70CC(v7);
      sub_1BFEF70CC(v6);
LABEL_13:
      sub_1BFEF70CC(v2);
      sub_1BFEF70CC(v3);
      return 0;
    }
LABEL_12:
    sub_1BFEF6A90(*a2);
    sub_1BFEF6A90(v2);
    goto LABEL_13;
  }
  if (v3 != 2) {
    goto LABEL_12;
  }
  sub_1BFEF70CC(2uLL);
  unint64_t v4 = 2;
LABEL_8:
  sub_1BFEF70CC(v4);
  return 1;
}

unint64_t sub_1C12AD6A4(uint64_t a1)
{
  unint64_t result = sub_1C00706DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12AD6CC()
{
  unint64_t result = qword_1EB891B18;
  if (!qword_1EB891B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891B18);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatImageRenderingMode()
{
  return &type metadata for FormatImageRenderingMode;
}

uint64_t UIUserInterfaceSizeClass.description.getter(uint64_t a1)
{
  uint64_t v1 = 0x746361706D6F63;
  uint64_t v2 = 0x6E776F6E6B6E75;
  if (a1 == 2) {
    uint64_t v2 = 0x72616C75676572;
  }
  if (a1 != 1) {
    uint64_t v1 = v2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0x6669636570736E75;
  }
}

uint64_t sub_1C12AD7B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 0x746361706D6F63;
  uint64_t v3 = 0x6E776F6E6B6E75;
  if (*v0 == 2) {
    uint64_t v3 = 0x72616C75676572;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0x6669636570736E75;
  }
}

id SportsKeyPlayerDataVisualization.leagueTag.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
  return v1;
}

uint64_t SportsKeyPlayerDataVisualization.competitorTags.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

uint64_t SportsKeyPlayerDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14 = swift_allocObject();
  SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t SportsKeyPlayerDataVisualization.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsKeyPlayerDataVisualization.umcCanonicalId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsKeyPlayerDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsKeyPlayerDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl, a1);
}

uint64_t SportsKeyPlayerDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsKeyPlayerDataVisualization.roster.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsKeyPlayerDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 24);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 32);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1C025C670(v2, v3);
}

uint64_t SportsKeyPlayerDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl, a1);
}

char *SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  unint64_t v8 = v7;
  uint64_t v54 = a5;
  uint64_t v15 = sub_1C1515FDC();
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v51 = (uint64_t)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a6;
  uint64_t v19 = *a7;
  uint64_t v20 = a7[1];
  uint64_t v21 = a7[2];
  uint64_t v22 = a7[3];
  uint64_t v23 = a7[4];
  uint64_t v24 = a7[5];
  uint64_t v48 = a1;
  uint64_t v49 = v25;
  *((void *)v8 + 4) = a1;
  *((void *)v8 + 5) = a2;
  uint64_t v26 = v19;
  uint64_t v27 = a3;
  *((void *)v8 + 6) = a3;
  uint64_t v28 = v21;
  size_t v29 = *(void (**)(char *, uint64_t, __n128))(v25 + 16);
  uint64_t v50 = a4;
  uint64_t v30 = a4;
  uint64_t v31 = v22;
  uint64_t v52 = v32;
  v29(&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl], v30, v16);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources] = v54;
  uint64_t v33 = (uint64_t *)&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config];
  uint64_t v53 = v26;
  uint64_t v54 = v23;
  *uint64_t v33 = v26;
  v33[1] = v20;
  uint64_t v34 = v20;
  _OWORD v33[2] = v28;
  v33[3] = v31;
  v33[4] = v23;
  v33[5] = v24;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster] = v18;
  uint64_t v46 = v27;
  uint64_t v47 = v31;
  uint64_t v45 = v24;
  if (v20)
  {
    uint64_t v55 = 14906;
    unint64_t v56 = 0xE200000000000000;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1C025C670(v53, v20);
    uint64_t v35 = v28;
    sub_1C151E80C();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v35 = v28;
  }
  v44[1] = v35;
  uint64_t v36 = v50;
  uint64_t v55 = sub_1C1515E2C();
  unint64_t v56 = v37;
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  unint64_t v38 = v56;
  *((void *)v8 + 2) = v55;
  *((void *)v8 + 3) = v38;
  uint64_t v39 = v53;
  uint64_t v55 = v53;
  unint64_t v56 = v34;
  uint64_t v57 = v35;
  uint64_t v58 = v47;
  uint64_t v59 = v54;
  uint64_t v60 = v45;
  uint64_t v40 = v51;
  sub_1C0B98938(v36, &v55, 0xD00000000000001ALL, 0x80000001C163AA50, v51);
  swift_unknownObjectRelease();
  uint64_t v41 = v49;
  uint64_t v42 = v52;
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v36, v52);
  sub_1C025EF94(v39, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v8[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl], v40, v42);
  return v8;
}

uint64_t SportsKeyPlayerDataVisualization.with(config:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v13 = v1[4];
  uint64_t v21 = v1[5];
  uint64_t v22 = v1[6];
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl, v4);
  uint64_t v15 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources);
  uint64_t v16 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster);
  v24[5] = v11;
  uint64_t v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  void v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v21;
  swift_bridgeObjectRetain();
  uint64_t v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsKeyPlayerDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsKeyPlayerDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsKeyPlayerDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsKeyPlayerDataVisualization.init(from:)(void *a1)
{
  uint64_t v39 = a1;
  uint64_t v2 = v1;
  uint64_t v40 = *(void *)v2;
  uint64_t v34 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - v7;
  sub_1C025F004();
  uint64_t v10 = v9;
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12B02E8(0, &qword_1EA1ADB58, MEMORY[0x1E4FBBDC0]);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12B0294();
  unint64_t v37 = v16;
  uint64_t v17 = v38;
  uint64_t v18 = v2;
  sub_1C1520EBC();
  if (v17)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    unint64_t v38 = v8;
    uint64_t v31 = v5;
    LOBYTE(v41) = 0;
    uint64_t v19 = v35;
    *((void *)v2 + 4) = sub_1C152069C();
    *((void *)v2 + 5) = v20;
    LOBYTE(v41) = 1;
    sub_1C025F0C0(&qword_1EB863FA0, (void (*)(uint64_t))sub_1C025F004);
    sub_1C15206EC();
    sub_1C151948C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    *((void *)v2 + 6) = v41;
    LOBYTE(v41) = 2;
    uint64_t v21 = sub_1C025F0C0((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    uint64_t v22 = v38;
    uint64_t v23 = v34;
    sub_1C15206EC();
    uint64_t v33 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl], v24, v23);
    sub_1BFF5DB14(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    char v44 = 3;
    sub_1C12B0368(&qword_1EB86B2E0, &qword_1EB86A8C0);
    unint64_t v38 = 0;
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources] = v41;
    char v44 = 6;
    sub_1C025F108();
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster] = v41;
    char v44 = 4;
    sub_1C025F15C();
    sub_1C152065C();
    uint64_t v26 = &v18[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config];
    long long v27 = v42;
    *(_OWORD *)uint64_t v26 = v41;
    *((_OWORD *)v26 + 1) = v27;
    *((_OWORD *)v26 + 2) = v43;
    LOBYTE(v41) = 5;
    *((void *)v18 + 2) = sub_1C152069C();
    *((void *)v18 + 3) = v28;
    LOBYTE(v41) = 7;
    size_t v29 = v31;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v19);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl], v29, v23);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v18;
}

uint64_t SportsKeyPlayerDataVisualization.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1C151829C();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025F004();
  uint64_t v7 = v6;
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12B02E8(0, (unint64_t *)&unk_1EA1ADB70, MEMORY[0x1E4FBBDE0]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v28 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12B0294();
  uint64_t v15 = v35;
  sub_1C1520F0C();
  LOBYTE(v36) = 0;
  uint64_t v16 = v34;
  sub_1C15207CC();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v18 = v31;
  uint64_t v29 = 0;
  uint64_t v30 = v9;
  uint64_t v34 = v12;
  *(void *)&long long v36 = *(void *)(v15 + 48);
  uint64_t v19 = qword_1EB863C98;
  swift_unknownObjectRetain_n();
  if (v19 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v18, (uint64_t)qword_1EB863C78);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 16))(v5, v20, v18);
  MEMORY[0x1F4188790](v21);
  *(&v28 - 2) = sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB890230);
  swift_getKeyPath();
  uint64_t v22 = v30;
  sub_1C151947C();
  swift_unknownObjectRelease();
  LOBYTE(v36) = 1;
  sub_1C025F0C0((unint64_t *)&unk_1EB863F90, (void (*)(uint64_t))sub_1C025F004);
  uint64_t v23 = v14;
  uint64_t v24 = v29;
  sub_1C152080C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v7);
  if (v24) {
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v14, v11);
  }
  uint64_t v25 = v35;
  LOBYTE(v36) = 2;
  sub_1C1515FDC();
  sub_1C025F0C0((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
  sub_1C152080C();
  uint64_t v26 = v34;
  *(void *)&long long v36 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources);
  char v39 = 3;
  sub_1BFF5DB14(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
  sub_1C12B0368((unint64_t *)&qword_1EB86B2D0, (unint64_t *)&unk_1EB86A8B0);
  sub_1C152080C();
  *(void *)&long long v36 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster);
  char v39 = 6;
  sub_1C025F39C();
  sub_1C152080C();
  long long v27 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 16);
  long long v36 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config);
  long long v37 = v27;
  long long v38 = *(_OWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 32);
  char v39 = 4;
  sub_1C12B0428();
  sub_1C12B0480();
  sub_1C152080C();
  LOBYTE(v36) = 5;
  sub_1C15207CC();
  LOBYTE(v36) = 7;
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v23, v11);
}

unint64_t sub_1C12AEDE0(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x6769666E6F63;
      break;
    case 5:
      unint64_t result = 0x696669746E656469;
      break;
    case 6:
      unint64_t result = 0x726574736F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C12AEEF8(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x6769666E6F63;
      break;
    case 5:
      unint64_t result = 0x696669746E656469;
      break;
    case 6:
      unint64_t result = 0x726574736F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12AF010(unsigned __int8 *a1, char *a2)
{
  return sub_1C14794A8(*a1, *a2);
}

uint64_t sub_1C12AF01C()
{
  return sub_1C044C634();
}

uint64_t sub_1C12AF028()
{
  return sub_1C0447698();
}

uint64_t sub_1C12AF030()
{
  return sub_1C044C634();
}

uint64_t sub_1C12AF038@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C12B09C4();
  *a1 = result;
  return result;
}

unint64_t sub_1C12AF068@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C12AEDE0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C12AF094()
{
  return sub_1C12AEEF8(*v0);
}

uint64_t sub_1C12AF09C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C12B09C4();
  *a1 = result;
  return result;
}

uint64_t sub_1C12AF0C4(uint64_t a1)
{
  unint64_t v2 = sub_1C12B0294();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12AF100(uint64_t a1)
{
  unint64_t v2 = sub_1C12B0294();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsKeyPlayerDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl;
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C025EF94(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsKeyPlayerDataVisualization.__deallocating_deinit()
{
  SportsKeyPlayerDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1C12AF27C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsKeyPlayerDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C12AF2D4(void *a1)
{
  return SportsKeyPlayerDataVisualization.encode(to:)(a1);
}

uint64_t static SportsKeyPlayerDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t SportsKeyPlayerDataVisualizationLocation.identifier.getter()
{
  if (*v0) {
    return 0x666E49746E657665;
  }
  else {
    return 0x746C7561666564;
  }
}

BOOL static SportsKeyPlayerDataVisualizationLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SportsKeyPlayerDataVisualizationLocation.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SportsKeyPlayerDataVisualizationLocation.hashValue.getter()
{
  return sub_1C1520E0C();
}

void *sub_1C12AF3F4(unint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v117 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF5DB14(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v116 = (void *)((char *)&v109 - v7);
  sub_1BFF5DB14(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v5);
  MEMORY[0x1F4188790](v8 - 8);
  MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v109 - v13;
  if (a1)
  {
    uint64_t v130 = v12;
    uint64_t v131 = v11;
    sub_1C01B2D70();
    uint64_t inited = swift_initStackObject();
    long long v109 = xmmword_1C1529AE0;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF5DB14(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    uint64_t v136 = v2;
    uint64_t v16 = v15;
    sub_1C0181BEC(0);
    uint64_t v135 = v17;
    uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v19 = *(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
    uint64_t v20 = (v19 + 32) & ~v19;
    uint64_t v128 = v19 | 7;
    uint64_t v129 = v16;
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C152A660;
    uint64_t v110 = v21;
    uint64_t v133 = v20;
    uint64_t v22 = (void *)(v21 + v20);
    uint64_t v23 = *(void *)(a1 + 32);
    uint64_t v146 = *(void *)(a1 + 40);
    uint64_t v24 = v146;
    unint64_t v25 = a1;
    uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
    long long v27 = (void *)((char *)v22 + *(int *)(v26 + 24));
    *long long v27 = v23;
    v27[1] = v24;
    uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = *(void *)(v28 - 8);
    unint64_t v142 = *(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56);
    uint64_t v143 = v28;
    uint64_t v141 = v29 + 56;
    v142(v27, 0, 1, v28);
    void *v22 = 0xD000000000000010;
    v22[1] = 0x80000001C1608E60;
    v22[2] = 0;
    void v22[3] = 0;
    uint64_t v30 = (char *)v22 + *(int *)(v26 + 28);
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    unsigned char v30[16] = -1;
    uint64_t v31 = *(void *)(v26 - 8);
    uint64_t v32 = *(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56);
    uint64_t v33 = v31 + 56;
    v32(v22, 0, 1, v26);
    unint64_t v112 = v22;
    uint64_t v137 = v18;
    uint64_t v34 = (void *)((char *)v22 + v18);
    uint64_t v35 = v26;
    long long v36 = (void (*)(char *, void, uint64_t, uint64_t))v32;
    long long v37 = (char *)(v3 + 16);
    uint64_t v38 = v136;
    char v139 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v139(v14, v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_embedUrl, v136);
    uint64_t v140 = v3;
    uint64_t v126 = *(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56);
    uint64_t v127 = v3 + 56;
    v126(v14, 0, 1, v38);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C04338EC(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v14, (char *)v34);
    uint64_t v146 = v33;
    char v39 = v36;
    v36((char *)v34, 0, 1, v35);
    unint64_t v40 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_urlDataSources);
    if (v40 >> 62) {
      goto LABEL_30;
    }
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (uint64_t i = v41; ; uint64_t i = sub_1C15204BC())
    {
      uint64_t v134 = v35;
      uint64_t v145 = v39;
      unint64_t v111 = v25;
      if (!i) {
        break;
      }
      uint64_t v153 = MEMORY[0x1E4FBC860];
      uint64_t v43 = i;
      uint64_t result = (void *)sub_1C05F6B44(0, i & ~(i >> 63), 0);
      if (v43 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v45 = (void (*)(void *, void, uint64_t, uint64_t))v43;
      uint64_t v46 = 0;
      uint64_t v144 = v153;
      uint64_t v132 = 2 * v137;
      uint64_t v124 = v133 + 3 * v137;
      unint64_t v125 = v40 & 0xC000000000000001;
      uint64_t v123 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
      unint64_t v114 = (void (**)(uint64_t, uint64_t))(v140 + 8);
      uint64_t v115 = (void (**)(char *, char *, uint64_t))(v140 + 32);
      long long v122 = xmmword_1C152C7F0;
      uint64_t v47 = MEMORY[0x1E4FBB1A0];
      long long v119 = xmmword_1C1536B40;
      long long v118 = xmmword_1C1536B50;
      uint64_t v138 = v37;
      uint64_t v120 = (void (*)(char *, void, uint64_t, uint64_t))v45;
      unint64_t v121 = v40;
      while (v45 != (void (*)(void *, void, uint64_t, uint64_t))v46)
      {
        uint64_t v140 = v46;
        if (v125)
        {
          uint64_t v48 = (void *)MEMORY[0x1C18C7CB0](v46, v40);
        }
        else
        {
          uint64_t v48 = *(void **)(v40 + 8 * v46 + 32);
          swift_retain();
        }
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = v122;
        uint64_t v50 = (char *)(v49 + v133);
        uint64_t v51 = v48[2];
        unint64_t v52 = v48[3];
        sub_1C025F810(v51, v52);
        sub_1C0436838(0x20746E65746E6F43, 0xEC00000065707954, v51, v52, v50);
        v145(v50, 0, 1, v35);
        uint64_t v53 = &v50[v137];
        uint64_t v54 = v48[5];
        *(void *)&long long v152 = v48[4];
        *((void *)&v152 + 1) = v54;
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          uint64_t v55 = &v53[*(int *)(v35 + 24)];
          *(void *)uint64_t v55 = v147;
          uint64_t v56 = v143;
          swift_storeEnumTagMultiPayload();
          v142(v55, 0, 1, v56);
          *(_OWORD *)uint64_t v53 = v119;
          *((void *)v53 + 2) = 0;
          *((void *)v53 + 3) = 0;
          uint64_t v57 = &v53[*(int *)(v35 + 28)];
          *(void *)uint64_t v57 = 0;
          *((void *)v57 + 1) = 0;
          v57[16] = -1;
        }
        else
        {
          *((void *)&v148 + 1) = v47;
          uint64_t v149 = (char **)MEMORY[0x1E4FBB208];
          long long v147 = v152;
          sub_1BFC773DC(&v147, (uint64_t)v151);
          uint64_t v58 = __swift_project_boxed_opaque_existential_1(v151, v151[3]);
          uint64_t v59 = *v58;
          uint64_t v60 = v58[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v61 = (uint64_t)v116;
          *uint64_t v116 = v59;
          *(void *)(v61 + 8) = v60;
          uint64_t v35 = v134;
          uint64_t v62 = v143;
          swift_storeEnumTagMultiPayload();
          v142((void *)v61, 0, 1, v62);
          *(_OWORD *)uint64_t v53 = v119;
          *((void *)v53 + 2) = 0;
          *((void *)v53 + 3) = 0;
          sub_1C025F820(v61, (uint64_t)&v53[*(int *)(v35 + 24)]);
          uint64_t v63 = &v53[*(int *)(v35 + 28)];
          *(void *)uint64_t v63 = 0;
          *((void *)v63 + 1) = 0;
          v63[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v151);
        }
        swift_bridgeObjectRelease();
        uint64_t v64 = v145;
        v145(v53, 0, 1, v35);
        uint64_t v65 = &v50[v132];
        uint64_t v66 = v35;
        uint64_t v67 = v130;
        uint64_t v68 = v136;
        v139((char *)v130, (unint64_t)v48 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v136);
        v126((char *)v67, 0, 1, v68);
        uint64_t v69 = v131;
        sub_1C0025B10(v67, v131);
        if ((*v123)(v69, 1, v68) == 1)
        {
          sub_1C002F608(v67);
          v142(&v65[*(int *)(v66 + 24)], 1, 1, v143);
          *(_OWORD *)uint64_t v65 = v118;
          *((void *)v65 + 2) = 0;
          *((void *)v65 + 3) = 0;
          BOOL v70 = &v65[*(int *)(v66 + 28)];
          *(void *)BOOL v70 = 0;
          *((void *)v70 + 1) = 0;
          v70[16] = -1;
          uint64_t v35 = v66;
        }
        else
        {
          uint64_t v71 = v117;
          v139(v117, v69, v68);
          sub_1C002F608(v67);
          char v72 = &v65[*(int *)(v66 + 24)];
          uint64_t v73 = v145;
          (*v115)(v72, v71, v68);
          uint64_t v74 = v143;
          swift_storeEnumTagMultiPayload();
          uint64_t v75 = v72;
          uint64_t v35 = v134;
          uint64_t v76 = v74;
          uint64_t v64 = v73;
          v142(v75, 0, 1, v76);
          *(_OWORD *)uint64_t v65 = v118;
          *((void *)v65 + 2) = 0;
          *((void *)v65 + 3) = 0;
          BOOL v77 = &v65[*(int *)(v35 + 28)];
          *(void *)BOOL v77 = 0;
          *((void *)v77 + 1) = 0;
          v77[16] = -1;
          (*v114)(v69, v68);
        }
        char v39 = v120;
        unint64_t v40 = v121;
        v64(v65, 0, 1, v35);
        sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, v49, v154);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((void *)&v148 + 1) = &type metadata for FormatInspectionGroup;
        uint64_t v149 = &off_1F1BDEC90;
        uint64_t v78 = swift_allocObject();
        *(void *)&long long v147 = v78;
        swift_release();
        *(void *)(v78 + 48) = v155;
        long long v79 = v154[1];
        *(_OWORD *)(v78 + 16) = v154[0];
        *(_OWORD *)(v78 + 32) = v79;
        uint64_t v153 = v144;
        unint64_t v25 = *(void *)(v144 + 16);
        unint64_t v80 = *(void *)(v144 + 24);
        uint64_t v81 = v140;
        if (v25 >= v80 >> 1) {
          sub_1C05F6B44(v80 > 1, v25 + 1, 1);
        }
        uint64_t v46 = v81 + 1;
        uint64_t v82 = *((void *)&v148 + 1);
        uint64_t v83 = (uint64_t)v149;
        uint64_t v84 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v147, *((uint64_t *)&v148 + 1));
        __n128 v85 = MEMORY[0x1F4188790](v84);
        long long v37 = (char *)&v109 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v87 + 16))(v37, v85);
        sub_1BFEA7C90(v25, (uint64_t)v37, &v153, v82, v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
        uint64_t v144 = v153;
        uint64_t v45 = (void (*)(void *, void, uint64_t, uint64_t))v39;
        uint64_t v47 = MEMORY[0x1E4FBB1A0];
        if (v39 == (void (*)(char *, void, uint64_t, uint64_t))v46)
        {
          char v39 = v145;
          swift_bridgeObjectRelease();
          unint64_t v25 = v111;
          uint64_t v88 = v132;
          uint64_t v89 = v144;
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    uint64_t v88 = 2 * v137;
    uint64_t v89 = MEMORY[0x1E4FBC860];
LABEL_25:
    uint64_t v144 = inited + 32;
    uint64_t v91 = (char *)v112 + v88;
    uint64_t v92 = sub_1C0233FC8(v89);
    swift_bridgeObjectRelease();
    uint64_t v93 = sub_1C131B79C(v92);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x756F532061746144, 0xEC00000073656372, (uint64_t)v93, 0, 0, v91);
    v39(v91, 0, 1, v35);
    uint64_t v95 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config);
    uint64_t v94 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 8);
    uint64_t v96 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 16);
    uint64_t v97 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 24);
    uint64_t v99 = *(char ***)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 32);
    uint64_t v98 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 40);
    if (v94)
    {
      swift_bridgeObjectRetain();
      uint64_t v143 = v95;
    }
    else
    {
      uint64_t v143 = 0;
    }
    uint64_t v100 = (char *)v112 + 3 * v137;
    sub_1BFE70080(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
    uint64_t v101 = swift_initStackObject();
    *(_OWORD *)(v101 + 16) = v109;
    *(void *)&long long v147 = v95;
    *((void *)&v147 + 1) = v94;
    *(void *)&long long v148 = v96;
    *((void *)&v148 + 1) = v97;
    uint64_t v149 = v99;
    uint64_t v150 = v98;
    uint64_t v102 = sub_1C0B9C40C((uint64_t *)&v147);
    *(void *)(v101 + 56) = &type metadata for FormatInspection;
    *(void *)(v101 + 64) = &off_1F1C29D30;
    *(void *)(v101 + 32) = v102;
    uint64_t v103 = sub_1C0233FC8(v101);
    swift_setDeallocating();
    sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
    swift_arrayDestroy();
    uint64_t v104 = sub_1C131B79C(v103);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x6769666E6F43, 0xE600000000000000, (uint64_t)v104, v143, v94, v100);
    v145(v100, 0, 1, v134);
    sub_1C09BCFA4(0x79616C502079654BLL, 0xEB00000000737265, 0, 0, v110, &v147);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v105 = inited;
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v105 + 64) = &off_1F1BDEC90;
    uint64_t v106 = swift_allocObject();
    *(void *)(v105 + 32) = v106;
    *(void *)(v106 + 48) = v149;
    long long v107 = v148;
    *(_OWORD *)(v106 + 16) = v147;
    *(_OWORD *)(v106 + 32) = v107;
    uint64_t v108 = sub_1C131B79C(v105);
    swift_setDeallocating();
    sub_1BFE70080(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    swift_release();
    return v108;
  }
  else
  {
    uint64_t v90 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v90);
  }
}

unint64_t sub_1C12B0294()
{
  unint64_t result = qword_1EA1ADB60;
  if (!qword_1EA1ADB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB60);
  }
  return result;
}

void sub_1C12B02E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C12B0294();
    unint64_t v7 = a3(a1, &type metadata for SportsKeyPlayerDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C12B0350()
{
  return 8;
}

void *sub_1C12B035C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C12B0368(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFF5DB14(255, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C025F0C0(a2, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C12B0428()
{
  if (!qword_1EA1ADB80)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ADB80);
    }
  }
}

unint64_t sub_1C12B0480()
{
  unint64_t result = qword_1EA198B00;
  if (!qword_1EA198B00)
  {
    sub_1C12B0428();
    sub_1C025F3F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B00);
  }
  return result;
}

unint64_t sub_1C12B04F4()
{
  unint64_t result = qword_1EA1ADB88;
  if (!qword_1EA1ADB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB88);
  }
  return result;
}

uint64_t sub_1C12B0548()
{
  return type metadata accessor for SportsKeyPlayerDataVisualization();
}

uint64_t type metadata accessor for SportsKeyPlayerDataVisualization()
{
  uint64_t result = qword_1EB869878;
  if (!qword_1EB869878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C12B059C()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SportsKeyPlayerDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsKeyPlayerDataVisualization);
}

uint64_t dispatch thunk of SportsKeyPlayerDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsKeyPlayerDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for SportsKeyPlayerDataVisualizationLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12B0780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsKeyPlayerDataVisualizationLocation()
{
  return &type metadata for SportsKeyPlayerDataVisualizationLocation;
}

unsigned char *storeEnumTagSinglePayload for SportsKeyPlayerDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12B0884);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsKeyPlayerDataVisualization.CodingKeys()
{
  return &type metadata for SportsKeyPlayerDataVisualization.CodingKeys;
}

unint64_t sub_1C12B08C0()
{
  unint64_t result = qword_1EA1ADB90;
  if (!qword_1EA1ADB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB90);
  }
  return result;
}

unint64_t sub_1C12B0918()
{
  unint64_t result = qword_1EA1ADB98;
  if (!qword_1EA1ADB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADB98);
  }
  return result;
}

unint64_t sub_1C12B0970()
{
  unint64_t result = qword_1EA1ADBA0;
  if (!qword_1EA1ADBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBA0);
  }
  return result;
}

uint64_t sub_1C12B09C4()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C12B0A10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t SportsEmbedConfigResource.tags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12B0A60()
{
  return 1936154996;
}

uint64_t sub_1C12B0A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C12B0AF8(uint64_t a1)
{
  unint64_t v2 = sub_1C12B0D04();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12B0B34(uint64_t a1)
{
  unint64_t v2 = sub_1C12B0D04();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsEmbedConfigResource.encode(to:)(void *a1)
{
  sub_1C12B0FD4(0, &qword_1EA1ADBA8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12B0D04();
  sub_1C1520F0C();
  v10[1] = v8;
  sub_1C12B0D58();
  sub_1C12B1038(&qword_1EA1ADBB0, (void (*)(void))sub_1C12B0DB0);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C12B0D04()
{
  unint64_t result = qword_1EB867BF8;
  if (!qword_1EB867BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867BF8);
  }
  return result;
}

void sub_1C12B0D58()
{
  if (!qword_1EB86B250)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B250);
    }
  }
}

unint64_t sub_1C12B0DB0()
{
  unint64_t result = qword_1EA1ADBB8;
  if (!qword_1EA1ADBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBB8);
  }
  return result;
}

uint64_t SportsEmbedConfigResource.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C12B0FD4(0, &qword_1EB86B698, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12B0D04();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C12B0D58();
    sub_1C12B1038((unint64_t *)&unk_1EB86B258, (void (*)(void))sub_1C12B10A4);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C12B0FD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C12B0D04();
    unint64_t v7 = a3(a1, &type metadata for SportsEmbedConfigResource.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C12B1038(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C12B0D58();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C12B10A4()
{
  unint64_t result = qword_1EB8686D8;
  if (!qword_1EB8686D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8686D8);
  }
  return result;
}

uint64_t sub_1C12B10F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SportsEmbedConfigResource.init(from:)(a1, a2);
}

uint64_t sub_1C12B1110(void *a1)
{
  return SportsEmbedConfigResource.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResource()
{
  return &type metadata for SportsEmbedConfigResource;
}

unsigned char *storeEnumTagSinglePayload for SportsEmbedConfigResource.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12B11D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResource.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResource.CodingKeys;
}

unint64_t sub_1C12B1210()
{
  unint64_t result = qword_1EA1ADBC0;
  if (!qword_1EA1ADBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBC0);
  }
  return result;
}

unint64_t sub_1C12B1268()
{
  unint64_t result = qword_1EB867C08;
  if (!qword_1EB867C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867C08);
  }
  return result;
}

unint64_t sub_1C12B12C0()
{
  unint64_t result = qword_1EB867C00;
  if (!qword_1EB867C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867C00);
  }
  return result;
}

uint64_t static FormatTextAdjustmentOtherBaseline.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v2, v3);
}

uint64_t FormatTextAdjustmentOtherBaseline.targetIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextAdjustmentOtherBaseline.style.getter()
{
  return swift_retain();
}

uint64_t sub_1C12B13C0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  return _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v2, v3);
}

unint64_t sub_1C12B1434(uint64_t a1)
{
  unint64_t result = sub_1C12B145C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12B145C()
{
  unint64_t result = qword_1EA1ADBC8;
  if (!qword_1EA1ADBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBC8);
  }
  return result;
}

unint64_t sub_1C12B14B0(void *a1)
{
  a1[1] = sub_1C0068628();
  a1[2] = sub_1BFDF6310();
  unint64_t result = sub_1C12B14E8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12B14E8()
{
  unint64_t result = qword_1EA1ADBD0;
  if (!qword_1EA1ADBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextAdjustmentOtherBaseline()
{
  return &type metadata for FormatTextAdjustmentOtherBaseline;
}

ValueMetadata *type metadata accessor for FormatCustomNodeData()
{
  return &type metadata for FormatCustomNodeData;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatItemNodeActionData(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF45054(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatItemNodeActionData(unint64_t *a1)
{
  return sub_1BFF44AC4(*a1);
}

unint64_t *assignWithCopy for FormatItemNodeActionData(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF45054(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1BFF44AC4(v4);
  return a1;
}

unint64_t *assignWithTake for FormatItemNodeActionData(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1BFF44AC4(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatItemNodeActionData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 30);
  }
  unsigned int v3 = (*(void *)a1 & 4 | ((*(void *)a1 >> 59) >> 3) & 0xFFFFFFE7 | (8
                                                                                     * (((*(void *)a1 >> 59) >> 1) & 3))) ^ 0x1F;
  if (v3 >= 0x1D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeActionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1D)
  {
    *(void *)unint64_t result = a2 - 30;
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 7 | (8 * (-a2 & 0x1F));
      *(void *)unint64_t result = ((v3 << 59) | (4 * v3)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C12B16B8(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return ((*a1 >> 1) & 0xFFFFFFFC | *a1 & 3) + 2;
  }
}

void *sub_1C12B16D8(void *result, uint64_t a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 0xFFFFFFFFFFFFFFBLL | (a2 << 62);
  }
  else {
    *unint64_t result = (2 * (a2 - 2)) & 0x1FFFFFFF8 | ((int)a2 - 2) & 3 | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatItemNodeActionData()
{
  return &type metadata for FormatItemNodeActionData;
}

uint64_t FeedBannerAd.with(bannerAd:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_1C151DBAC();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  uint64_t v10 = v2[1];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, v5, v7);
  uint64_t v12 = qword_1F1B68A60;
  uint64_t v13 = (int *)type metadata accessor for FeedBannerAd();
  *(void *)&a2[v13[6]] = v12;
  uint64_t v14 = &a2[v13[7]];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  *(_OWORD *)&a2[v13[8]] = xmmword_1C1533700;
  *(void *)a2 = v11;
  *((void *)a2 + 1) = v10;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&a2[v13[5]], v9, v5);
  return swift_bridgeObjectRetain();
}

uint64_t FeedBannerAd.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedBannerAd.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedBannerAd.debugScoreProfile.getter()
{
  return 0;
}

uint64_t FeedBannerAd.bannerAd.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedBannerAd() + 20);
  uint64_t v4 = sub_1C151DBAC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedBannerAd.traits.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedBannerAd();
  *a1 = *(void *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t FeedBannerAd.layoutDirection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedBannerAd();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t FeedBannerAd.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedBannerAd() + 32));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BFF7FF04(v4, v5);
}

uint64_t FeedBannerAd.init(identifier:bannerAd:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = qword_1F1B8A4D8;
  uint64_t v9 = (int *)type metadata accessor for FeedBannerAd();
  *(void *)((char *)a4 + v9[6]) = v8;
  uint64_t v10 = (char *)a4 + v9[7];
  *(void *)uint64_t v10 = 0;
  v10[8] = 1;
  *(_OWORD *)((char *)a4 + v9[8]) = xmmword_1C1533700;
  *a4 = a1;
  a4[1] = a2;
  uint64_t v11 = (char *)a4 + v9[5];
  uint64_t v12 = sub_1C151DBAC();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  return v13(v11, a3, v12);
}

uint64_t FeedBannerAd.debugTitle.getter()
{
  return 0;
}

uint64_t FeedBannerAd.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12B1B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BFD68AA8(&qword_1EA1ADBE0, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1C12B1B9C()
{
  return sub_1BFD68AA8(&qword_1EA1ADBD8, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
}

uint64_t sub_1C12B1BE4()
{
  return sub_1BFD68AA8(&qword_1EB873738, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
}

uint64_t sub_1C12B1C2C()
{
  return sub_1BFD68AA8(&qword_1EB865588, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
}

void *assignWithCopy for FeedBannerAd(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  __n128 v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  unint64_t v17 = *(void *)((char *)a1 + v14 + 8);
  unint64_t v18 = v16[1];
  if (v17 >= 0x11)
  {
    if (v18 >= 0x11)
    {
      void *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v15);
    goto LABEL_6;
  }
  if (v18 < 0x11)
  {
LABEL_6:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    return a1;
  }
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for FeedBannerAd(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  __n128 v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for FeedBannerAd(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151DBAC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  if (*(void *)((char *)a1 + v14 + 8) >= 0x11uLL)
  {
    unint64_t v17 = v16[1];
    if (v17 >= 0x11)
    {
      void *v15 = *v16;
      v15[1] = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564((uint64_t)v15);
  }
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  return a1;
}

uint64_t sub_1C12B1F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C151DBAC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C12B201C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C151DBAC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C12B20C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  if (*v2 < 0)
  {
    uint64_t v8 = v6 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v9 = *(void *)(v8 + 16);
    uint64_t v10 = *(void *)(v8 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C027244C(v19, a1, v9, v10);
    *(void *)&v16[0] = *(void *)&v19[0];
    sub_1C12B20C8(a1);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  if (*(unsigned char *)(v6 + 16))
  {
    uint64_t result = sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v19);
    if (v3) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1C098D32C(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v19);
    if (v3) {
      return result;
    }
  }
  long long v17 = v21;
  v18[0] = v22[0];
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v22 + 9);
  v16[0] = v19[0];
  v16[1] = v19[1];
  v16[2] = v19[2];
  v16[3] = v19[3];
  v16[4] = v19[4];
  v16[5] = v20;
  uint64_t v11 = *(void **)&v19[0];
  if ((void)v20 == 1 || (uint64_t v12 = (void *)*((void *)&v17 + 1)) == 0)
  {
    sub_1C0187FB0((uint64_t)v16);
    FCIssue.issueCoverModel.getter(a2);
    sub_1C01880A4((uint64_t)v16);
  }
  else
  {
    uint64_t v13 = *(void *)&v18[0];
    *(void *)a2 = *(void *)&v19[0];
    *(void *)(a2 + 8) = v13;
    *(void *)(a2 + 16) = v12;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(unsigned char *)(a2 + 56) = 0;
    id v14 = v12;
    id v15 = v11;
  }
  return sub_1C01880A4((uint64_t)v16);
}

uint64_t static FormatIssueCoverContent.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 < 0)
  {
    if (v3 < 0)
    {
      uint64_t v5 = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v6 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v7 = *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)(v6 + 24);
      v12[0] = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      v12[1] = v5;
      v11[0] = v7;
      v11[1] = v8;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatIssueCoverContent.== infix(_:_:)(v12, v11))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v9 = sub_1C00E5AA4(v5, v8);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return (v9 & 1) != 0;
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    char v4 = *(unsigned char *)(v3 + 16);
    if (*(unsigned char *)(v2 + 16)) {
      return (v4 & 1) != 0;
    }
    if ((v4 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1C12B23D8(uint64_t a1)
{
  unint64_t result = sub_1C08912FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12B2400(void *a1)
{
  a1[1] = sub_1BFCD37F0();
  a1[2] = sub_1C0072EDC();
  unint64_t result = sub_1C12B2438();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12B2438()
{
  unint64_t result = qword_1EA1ADBE8;
  if (!qword_1EA1ADBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueCoverContent()
{
  return &type metadata for FormatIssueCoverContent;
}

id EmbedLocation.location.getter()
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v35 - v5;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v35 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v35 - v11;
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v35 - v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v35 - v17;
  switch(*v0)
  {
    case 1:
      uint64_t v23 = sub_1C1515FDC();
      uint64_t v24 = *(void *)(v23 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v15, 1, 1, v23);
      long long v21 = (void *)sub_1C151E5EC();
      uint64_t v22 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v15, 1, v23) != 1)
      {
        uint64_t v22 = (void *)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v23);
      }
      break;
    case 2:
      uint64_t v25 = sub_1C1515FDC();
      uint64_t v26 = *(void *)(v25 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v12, 1, 1, v25);
      long long v21 = (void *)sub_1C151E5EC();
      uint64_t v22 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v12, 1, v25) != 1)
      {
        uint64_t v22 = (void *)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v25);
      }
      break;
    case 3:
      uint64_t v27 = sub_1C1515FDC();
      uint64_t v28 = *(void *)(v27 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v9, 1, 1, v27);
      long long v21 = (void *)sub_1C151E5EC();
      uint64_t v22 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v9, 1, v27) != 1)
      {
        uint64_t v22 = (void *)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v27);
      }
      break;
    case 4:
      uint64_t v29 = sub_1C1515FDC();
      uint64_t v30 = *(void *)(v29 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v6, 1, 1, v29);
      long long v21 = (void *)sub_1C151E5EC();
      uint64_t v22 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v6, 1, v29) != 1)
      {
        uint64_t v22 = (void *)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v29);
      }
      break;
    case 5:
      uint64_t v31 = sub_1C1515FDC();
      uint64_t v32 = *(void *)(v31 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v3, 1, 1, v31);
      long long v21 = (void *)sub_1C151E5EC();
      uint64_t v22 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v3, 1, v31) != 1)
      {
        uint64_t v22 = (void *)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v3, v31);
      }
      break;
    default:
      uint64_t v19 = sub_1C1515FDC();
      uint64_t v20 = *(void *)(v19 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
      long long v21 = (void *)sub_1C151E5EC();
      uint64_t v22 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
      {
        uint64_t v22 = (void *)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
      }
      break;
  }
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9F900]), sel_initWithContext_URL_, v21, v22);

  return v33;
}

BOOL static EmbedLocation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EmbedLocation.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t EmbedLocation.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C12B2BA8()
{
  unint64_t result = qword_1EA1ADBF0;
  if (!qword_1EA1ADBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EmbedLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12B2CC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbedLocation()
{
  return &type metadata for EmbedLocation;
}

uint64_t FormatWebEmbedBinding.Bool.BOOL(from:)(uint64_t a1)
{
  uint64_t v93 = a1;
  uint64_t v1 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v91 = *(void *)(v1 - 8);
  uint64_t v92 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v89 = (uint64_t *)((char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  uint64_t v88 = (unint64_t *)((char *)&v80 - v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v87 = (unint64_t *)((char *)&v80 - v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v86 = (unint64_t *)((char *)&v80 - v8);
  MEMORY[0x1F4188790](v9);
  __n128 v85 = (unint64_t *)((char *)&v80 - v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v84 = (unint64_t *)((char *)&v80 - v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v83 = (unint64_t *)((char *)&v80 - v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v82 = (unint64_t *)((char *)&v80 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v81 = (uint64_t *)((char *)&v80 - v18);
  sub_1BFECA4AC(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v90 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v80 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v80 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v80 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v80 - v31;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v80 - v34;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v80 - v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v80 - v40;
  MEMORY[0x1F4188790](v42);
  char v44 = (char *)&v80 - v43;
  sub_1BFECA4AC(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v45 - 8);
  uint64_t v47 = (char *)&v80 - v46;
  switch(*v94)
  {
    case 1:
      uint64_t v56 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v56 + 52), (uint64_t)v44, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v44, 1, v92) == 1) {
        goto LABEL_10;
      }
      uint64_t v54 = v81;
      sub_1C0CD7FF8((uint64_t)v44, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_27;
      }
      sub_1BFFEED70((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      goto LABEL_45;
    case 2:
      uint64_t v57 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v57 + 52), (uint64_t)v41, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v41, 1, v92) == 1)
      {
        uint64_t v52 = (uint64_t)v41;
        goto LABEL_23;
      }
      uint64_t v65 = v82;
      sub_1C0CD7FF8((uint64_t)v41, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v64 = (uint64_t)v41;
        goto LABEL_40;
      }
      unint64_t v73 = *v65;
      sub_1BFFEED70((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (!(v73 >> 61))
      {
LABEL_45:
        swift_release();
        goto LABEL_46;
      }
      swift_release();
      return 0;
    case 3:
      uint64_t v58 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v58 + 52), (uint64_t)v38, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v38, 1, v92) == 1)
      {
        uint64_t v52 = (uint64_t)v38;
        goto LABEL_23;
      }
      uint64_t v66 = v83;
      sub_1C0CD7FF8((uint64_t)v38, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v64 = (uint64_t)v38;
        goto LABEL_40;
      }
      unint64_t v74 = *v66;
      sub_1BFFEED70((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v72 = v74 >> 61 == 1;
      goto LABEL_52;
    case 4:
      uint64_t v51 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v51 + 52), (uint64_t)v35, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v35, 1, v92) == 1)
      {
        uint64_t v52 = (uint64_t)v35;
        goto LABEL_23;
      }
      uint64_t v63 = v84;
      sub_1C0CD7FF8((uint64_t)v35, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v64 = (uint64_t)v35;
        goto LABEL_40;
      }
      unint64_t v71 = *v63;
      sub_1BFFEED70((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v72 = v71 >> 61 == 2;
      goto LABEL_52;
    case 5:
      uint64_t v59 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v59 + 52), (uint64_t)v32, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v32, 1, v92) == 1)
      {
        uint64_t v52 = (uint64_t)v32;
        goto LABEL_23;
      }
      uint64_t v67 = v85;
      sub_1C0CD7FF8((uint64_t)v32, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v64 = (uint64_t)v32;
        goto LABEL_40;
      }
      unint64_t v75 = *v67;
      sub_1BFFEED70((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v72 = v75 >> 61 == 3;
      goto LABEL_52;
    case 6:
      uint64_t v60 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v60 + 52), (uint64_t)v29, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v29, 1, v92) == 1)
      {
        uint64_t v52 = (uint64_t)v29;
        goto LABEL_23;
      }
      uint64_t v68 = v86;
      sub_1C0CD7FF8((uint64_t)v29, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v64 = (uint64_t)v29;
        goto LABEL_40;
      }
      unint64_t v76 = *v68;
      sub_1BFFEED70((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v50 = v76 >> 61 == 4;
      goto LABEL_55;
    case 7:
      uint64_t v61 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v61 + 52), (uint64_t)v26, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v26, 1, v92) == 1)
      {
        uint64_t v52 = (uint64_t)v26;
        goto LABEL_23;
      }
      uint64_t v69 = v87;
      sub_1C0CD7FF8((uint64_t)v26, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v64 = (uint64_t)v26;
        goto LABEL_40;
      }
      unint64_t v77 = *v69;
      sub_1BFFEED70((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v72 = v77 >> 61 == 5;
      goto LABEL_52;
    case 8:
      uint64_t v62 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v62 + 52), (uint64_t)v23, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v23, 1, v92) == 1)
      {
        uint64_t v52 = (uint64_t)v23;
        goto LABEL_23;
      }
      BOOL v70 = v88;
      sub_1C0CD7FF8((uint64_t)v23, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v64 = (uint64_t)v23;
        goto LABEL_40;
      }
      unint64_t v78 = *v70;
      sub_1BFFEED70((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v72 = v78 >> 61 == 6;
LABEL_52:
      uint64_t v50 = v72;
LABEL_55:
      swift_release();
      break;
    case 9:
      uint64_t v53 = type metadata accessor for FeedWebEmbed();
      char v44 = v90;
      sub_1C12B3B38(v93 + *(int *)(v53 + 52), (uint64_t)v90, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v44, 1, v92) == 1)
      {
LABEL_10:
        uint64_t v52 = (uint64_t)v44;
LABEL_23:
        sub_1C12B3BA4(v52, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        uint64_t v50 = 0;
      }
      else
      {
        uint64_t v54 = v89;
        sub_1C0CD7FF8((uint64_t)v44, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_27:
          sub_1BFFEED70((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          uint64_t v64 = (uint64_t)v44;
LABEL_40:
          sub_1BFFEED70(v64, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          uint64_t v50 = 0;
        }
        else
        {
          uint64_t v55 = *v54;
          sub_1BFFEED70((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          uint64_t v95 = v55;
          uint64_t v50 = SportsDataVisualization.event.getter();
          swift_release();
          if (v50)
          {
            swift_unknownObjectRelease();
LABEL_46:
            uint64_t v50 = 1;
          }
        }
      }
      break;
    default:
      uint64_t v48 = type metadata accessor for FeedWebEmbed();
      sub_1C12B3B38(v93 + *(int *)(v48 + 48), (uint64_t)v47, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      uint64_t v49 = type metadata accessor for FeedHeadline(0);
      uint64_t v50 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v47, 1, v49) != 1;
      sub_1C12B3BA4((uint64_t)v47, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      return v50;
  }
  return v50;
}

uint64_t sub_1C12B3B38(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFECA4AC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C12B3BA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFECA4AC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

BOOL static FormatWebEmbedBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static FormatWebEmbedBinding.Bool.CodingType.allCases.getter()
{
  return &unk_1F1B685E8;
}

uint64_t sub_1C12B3C48(unsigned __int8 *a1, char *a2)
{
  return sub_1C1484F18(*a1, *a2);
}

uint64_t sub_1C12B3C54()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12B3C9C()
{
  return sub_1C04494DC();
}

uint64_t sub_1C12B3CA4()
{
  return sub_1C1520E0C();
}

void sub_1C12B3CE8(void *a1@<X8>)
{
  *a1 = &unk_1F1B685E8;
}

uint64_t FormatWebEmbedBinding.Bool.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatWebEmbedBinding.Bool.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C12B3D70()
{
  unint64_t result = qword_1EA1ADBF8;
  if (!qword_1EA1ADBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADBF8);
  }
  return result;
}

unint64_t sub_1C12B3DC8()
{
  unint64_t result = qword_1EA1ADC00;
  if (!qword_1EA1ADC00)
  {
    sub_1C12B3E20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADC00);
  }
  return result;
}

void sub_1C12B3E20()
{
  if (!qword_1EA1ADC08)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ADC08);
    }
  }
}

unint64_t sub_1C12B3E7C()
{
  unint64_t result = qword_1EA1ADC10;
  if (!qword_1EA1ADC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADC10);
  }
  return result;
}

unint64_t sub_1C12B3ED0(uint64_t a1)
{
  unint64_t result = sub_1C12B3EF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12B3EF8()
{
  unint64_t result = qword_1EA1ADC18;
  if (!qword_1EA1ADC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADC18);
  }
  return result;
}

unint64_t sub_1C12B3F4C(void *a1)
{
  a1[1] = sub_1BFDAE850();
  a1[2] = sub_1BFD7D738();
  unint64_t result = sub_1C12B3E7C();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.Bool()
{
  return &type metadata for FormatWebEmbedBinding.Bool;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.Bool.CodingType()
{
  return &type metadata for FormatWebEmbedBinding.Bool.CodingType;
}

uint64_t sub_1C12B3FCC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v162 = a2;
  uint64_t v163 = a1;
  uint64_t v160 = a3;
  uint64_t v3 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v158 = *(void *)(v3 - 8);
  uint64_t v159 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v149 = (unint64_t *)((char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  long long v148 = (unint64_t *)((char *)&v143 - v6);
  MEMORY[0x1F4188790](v7);
  long long v147 = (unint64_t *)((char *)&v143 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v146 = (unint64_t *)((char *)&v143 - v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v150 = (unint64_t *)((char *)&v143 - v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v145 = (unint64_t *)((char *)&v143 - v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v144 = (unint64_t *)((char *)&v143 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v143 = (uint64_t)&v143 - v18;
  sub_1BFECA4AC(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v156 = (uint64_t)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v155 = (uint64_t)&v143 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v154 = (uint64_t)&v143 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v153 = (uint64_t)&v143 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v157 = (uint64_t)&v143 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v152 = (uint64_t)&v143 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v151 = (uint64_t)&v143 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v143 - v34;
  sub_1BFECA4AC(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&v143 - v37;
  uint64_t v39 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v143 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  MEMORY[0x1F4188790](v43);
  MEMORY[0x1F4188790](v44);
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (char *)&v143 - v46;
  MEMORY[0x1F4188790](v48);
  uint64_t v50 = (char *)&v143 - v49;
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v143 - v52;
  MEMORY[0x1F4188790](v54);
  uint64_t v56 = (char *)&v143 - v55;
  MEMORY[0x1F4188790](v57);
  uint64_t v59 = (char *)&v143 - v58;
  MEMORY[0x1F4188790](v60);
  uint64_t v65 = (char *)&v143 - v61;
  switch(*v163)
  {
    case 1:
      sub_1C0CD7FF8(v162, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C12B3B38((uint64_t)&v59[*(int *)(v39 + 52)], (uint64_t)v35, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v35, 1, v159) == 1)
      {
        sub_1C12B3BA4((uint64_t)v35, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_26:
        char v95 = 0;
        goto LABEL_51;
      }
      uint64_t v94 = v143;
      sub_1C0CD7FF8((uint64_t)v35, v143, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70(v94, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_26;
      }
      sub_1BFFEED70((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      swift_release();
      char v95 = 1;
LABEL_51:
      uint64_t v69 = v160;
      uint64_t v114 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v115 = (char *)v69 + *(int *)(v114 + 24);
      *uint64_t v115 = v95;
      uint64_t v116 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 0, 1, v116);
      unint64_t *v69 = 0xD00000000000001DLL;
      v69[1] = 0x80000001C163AC10;
      _OWORD v69[2] = 0;
      v69[3] = 0;
      unint64_t v117 = (char *)v69 + *(int *)(v114 + 28);
      *(void *)unint64_t v117 = 0;
      *((void *)v117 + 1) = 0;
      v117[16] = -1;
      uint64_t v56 = v59;
      goto LABEL_66;
    case 2:
      sub_1C0CD7FF8(v162, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v77 = (uint64_t)&v56[*(int *)(v39 + 52)];
      uint64_t v78 = v151;
      sub_1C12B3B38(v77, v151, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v78, 1, v159) == 1)
      {
        sub_1C12B3BA4(v78, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        char v79 = 0;
        uint64_t v69 = v160;
LABEL_64:
        uint64_t v124 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v138 = (char *)v69 + *(int *)(v124 + 24);
        char *v138 = v79;
        uint64_t v139 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v138, 0, 1, v139);
        unint64_t v127 = 0xD000000000000023;
        uint64_t v128 = "Has Sports Data Visualization Score";
        goto LABEL_65;
      }
      uint64_t v96 = v144;
      sub_1C0CD7FF8(v78, (uint64_t)v144, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v69 = v160;
      if (EnumCaseMultiPayload == 1)
      {
        sub_1BFFEED70((uint64_t)v96, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70(v78, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      }
      else
      {
        unint64_t v113 = *v96;
        sub_1BFFEED70(v78, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (!(v113 >> 61))
        {
          swift_release();
          char v79 = 1;
          goto LABEL_64;
        }
        swift_release();
      }
      char v79 = 0;
      goto LABEL_64;
    case 3:
      sub_1C0CD7FF8(v162, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v80 = v152;
      sub_1C12B3B38((uint64_t)&v53[*(int *)(v39 + 52)], v152, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v80, 1, v159) == 1)
      {
        sub_1C12B3BA4(v80, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_31:
        BOOL v99 = 0;
        goto LABEL_53;
      }
      uint64_t v98 = v145;
      sub_1C0CD7FF8(v80, (uint64_t)v145, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70(v80, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_31;
      }
      unint64_t v118 = *v98;
      sub_1BFFEED70(v80, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v99 = v118 >> 61 == 1;
      swift_release();
LABEL_53:
      uint64_t v69 = v160;
      uint64_t v119 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v120 = (BOOL *)v69 + *(int *)(v119 + 24);
      *uint64_t v120 = v99;
      uint64_t v121 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v120, 0, 1, v121);
      unint64_t *v69 = 0xD000000000000027;
      v69[1] = 0x80000001C163ABB0;
      _OWORD v69[2] = 0;
      v69[3] = 0;
      long long v122 = (char *)v69 + *(int *)(v119 + 28);
      *(void *)long long v122 = 0;
      *((void *)v122 + 1) = 0;
      v122[16] = -1;
      uint64_t v56 = v53;
      goto LABEL_66;
    case 4:
      sub_1C0CD7FF8(v162, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v73 = v157;
      sub_1C12B3B38((uint64_t)&v50[*(int *)(v39 + 52)], v157, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v73, 1, v159) == 1)
      {
        sub_1C12B3BA4(v73, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_23:
        BOOL v93 = 0;
        goto LABEL_47;
      }
      uint64_t v92 = v150;
      sub_1C0CD7FF8(v73, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70(v73, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_23;
      }
      unint64_t v108 = *v92;
      sub_1BFFEED70(v73, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v93 = v108 >> 61 == 2;
      swift_release();
LABEL_47:
      uint64_t v69 = v160;
      uint64_t v109 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v110 = (BOOL *)v69 + *(int *)(v109 + 24);
      *uint64_t v110 = v93;
      uint64_t v111 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v110, 0, 1, v111);
      unint64_t *v69 = 0xD000000000000025;
      v69[1] = 0x80000001C163AB80;
      _OWORD v69[2] = 0;
      v69[3] = 0;
      unint64_t v112 = (char *)v69 + *(int *)(v109 + 28);
      *(void *)unint64_t v112 = 0;
      *((void *)v112 + 1) = 0;
      v112[16] = -1;
      uint64_t v56 = v50;
      goto LABEL_66;
    case 5:
      sub_1C0CD7FF8(v162, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v56 = v47;
      uint64_t v81 = (uint64_t)&v47[*(int *)(v39 + 52)];
      uint64_t v82 = v153;
      sub_1C12B3B38(v81, v153, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v82, 1, v159) == 1)
      {
        sub_1C12B3BA4(v82, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_34:
        BOOL v101 = 0;
        goto LABEL_55;
      }
      uint64_t v100 = v146;
      sub_1C0CD7FF8(v82, (uint64_t)v146, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70(v82, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_34;
      }
      unint64_t v123 = *v100;
      sub_1BFFEED70(v82, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v101 = v123 >> 61 == 3;
      swift_release();
LABEL_55:
      uint64_t v69 = v160;
      uint64_t v124 = type metadata accessor for FormatInspectionItem(0);
      unint64_t v125 = (BOOL *)v69 + *(int *)(v124 + 24);
      *unint64_t v125 = v101;
      uint64_t v126 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v125, 0, 1, v126);
      unint64_t v127 = 0xD000000000000027;
      uint64_t v128 = "Has Sports Data Visualization Box Score";
      goto LABEL_65;
    case 6:
      uint64_t v83 = (char *)v64;
      sub_1C0CD7FF8(v162, v64, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v56 = v83;
      uint64_t v84 = (uint64_t)&v83[*(int *)(v39 + 52)];
      uint64_t v85 = v154;
      sub_1C12B3B38(v84, v154, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v85, 1, v159) == 1)
      {
        sub_1C12B3BA4(v85, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_37:
        BOOL v103 = 0;
        goto LABEL_57;
      }
      uint64_t v102 = v147;
      sub_1C0CD7FF8(v85, (uint64_t)v147, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v102, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70(v85, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_37;
      }
      unint64_t v129 = *v102;
      sub_1BFFEED70(v85, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v103 = v129 >> 61 == 4;
      swift_release();
LABEL_57:
      uint64_t v69 = v160;
      uint64_t v124 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v130 = (BOOL *)v69 + *(int *)(v124 + 24);
      *uint64_t v130 = v103;
      uint64_t v131 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v130, 0, 1, v131);
      unint64_t v127 = 0xD000000000000028;
      uint64_t v128 = "Has Sports Data Visualization Line Score";
      goto LABEL_65;
    case 7:
      uint64_t v86 = (char *)v63;
      sub_1C0CD7FF8(v162, v63, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v56 = v86;
      uint64_t v87 = (uint64_t)&v86[*(int *)(v39 + 52)];
      uint64_t v88 = v155;
      sub_1C12B3B38(v87, v155, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v88, 1, v159) == 1)
      {
        sub_1C12B3BA4(v88, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_40:
        BOOL v105 = 0;
        goto LABEL_59;
      }
      uint64_t v104 = v148;
      sub_1C0CD7FF8(v88, (uint64_t)v148, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70(v88, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_40;
      }
      unint64_t v132 = *v104;
      sub_1BFFEED70(v88, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v105 = v132 >> 61 == 5;
      swift_release();
LABEL_59:
      uint64_t v69 = v160;
      uint64_t v124 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v133 = (BOOL *)v69 + *(int *)(v124 + 24);
      BOOL *v133 = v105;
      uint64_t v134 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v133, 0, 1, v134);
      unint64_t v127 = 0xD00000000000002BLL;
      uint64_t v128 = "Has Sports Data Visualization Injury Report";
      goto LABEL_65;
    case 8:
      uint64_t v89 = (char *)v62;
      sub_1C0CD7FF8(v162, v62, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v56 = v89;
      uint64_t v90 = (uint64_t)&v89[*(int *)(v39 + 52)];
      uint64_t v91 = v156;
      sub_1C12B3B38(v90, v156, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v91, 1, v159) == 1)
      {
        sub_1C12B3BA4(v91, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_43:
        BOOL v107 = 0;
        goto LABEL_61;
      }
      uint64_t v106 = v149;
      sub_1C0CD7FF8(v91, (uint64_t)v149, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFFEED70((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFFEED70(v91, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_43;
      }
      unint64_t v135 = *v106;
      sub_1BFFEED70(v91, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      BOOL v107 = v135 >> 61 == 6;
      swift_release();
LABEL_61:
      uint64_t v69 = v160;
      uint64_t v124 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v136 = (BOOL *)v69 + *(int *)(v124 + 24);
      *uint64_t v136 = v107;
      uint64_t v137 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v136, 0, 1, v137);
      unint64_t v127 = 0xD000000000000028;
      uint64_t v128 = "Has Sports Data Visualization Key Player";
LABEL_65:
      unint64_t *v69 = v127;
      v69[1] = (unint64_t)(v128 - 32) | 0x8000000000000000;
      _OWORD v69[2] = 0;
      v69[3] = 0;
      uint64_t v140 = (char *)v69 + *(int *)(v124 + 28);
      *(void *)uint64_t v140 = 0;
      *((void *)v140 + 1) = 0;
      v140[16] = -1;
LABEL_66:
      sub_1BFFEED70((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v141 = type metadata accessor for FormatInspectionItem(0);
      return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v69, 0, 1, v141);
    case 9:
      sub_1C0CD7FF8(v162, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      char v164 = 9;
      unint64_t v74 = v161;
      char v75 = FormatWebEmbedBinding.Bool.BOOL(from:)((uint64_t)v41);
      if (v74)
      {

        char v76 = 2;
      }
      else
      {
        char v76 = v75 & 1;
      }
      uint64_t v69 = v160;
      sub_1C0432B74(0xD000000000000010, 0x80000001C163AAA0, v76, v160);
      uint64_t v56 = v41;
      goto LABEL_66;
    default:
      sub_1C0CD7FF8(v162, (uint64_t)&v143 - v61, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C12B3B38((uint64_t)&v65[*(int *)(v39 + 48)], (uint64_t)v38, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      uint64_t v66 = type metadata accessor for FeedHeadline(0);
      BOOL v67 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 48))(v38, 1, v66) != 1;
      sub_1C12B3BA4((uint64_t)v38, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
      uint64_t v68 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v69 = v160;
      BOOL v70 = (BOOL *)v160 + *(int *)(v68 + 24);
      *BOOL v70 = v67;
      uint64_t v71 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(BOOL *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v70, 0, 1, v71);
      *(_OWORD *)uint64_t v69 = xmmword_1C15DF980;
      _OWORD v69[2] = 0;
      v69[3] = 0;
      BOOL v72 = (char *)v69 + *(int *)(v68 + 28);
      *(void *)BOOL v72 = 0;
      *((void *)v72 + 1) = 0;
      v72[16] = -1;
      uint64_t v56 = v65;
      goto LABEL_66;
  }
}

uint64_t dispatch thunk of ThumbnailImageRequestProviding.thumnailImageProcessorRequest(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for FormatDerivedDataBindingScope(uint64_t a1)
{
  return sub_1C0368EB4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
}

uint64_t initializeWithCopy for FormatDerivedDataBindingScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 44);
  uint64_t v9 = *(unsigned int *)(a2 + 40);
  sub_1C0FA6C98(*(void *)a2, v4, v5, v6, v7, v9 | (v8 << 32));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 44) = v8;
  *(_DWORD *)(a1 + 40) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataBindingScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 44);
  uint64_t v9 = *(unsigned int *)(a2 + 40);
  sub_1C0FA6C98(*(void *)a2, v4, v5, v6, v7, v9 | (v8 << 32));
  uint64_t v10 = *(void *)a1;
  unint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  unint64_t v15 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(_DWORD *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 44) = v8;
  sub_1C0368EB4(v10, v11, v12, v13, v14, v15);
  return a1;
}

__n128 __swift_memcpy46_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 30) = *(_OWORD *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FormatDerivedDataBindingScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  __int16 v4 = *(_WORD *)(a2 + 44);
  int v5 = *(_DWORD *)(a2 + 40);
  uint64_t v6 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  unint64_t v11 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(void *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 44) = v4;
  sub_1C0368EB4(v6, v8, v7, v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataBindingScope(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 46)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = ((*(unsigned __int16 *)(a1 + 44) >> 13) & 0xFFFFFF87 | (8 * ((*(unsigned __int16 *)(a1 + 44) >> 9) & 0xF))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataBindingScope(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 46) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 46) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_DWORD *)(result + 40) = 0;
      *(_WORD *)(result + 44) = (((-a2 >> 3) & 0xF) - 16 * (_WORD)a2) << 9;
    }
  }
  return result;
}

uint64_t sub_1C12B58C4(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 44) >> 13;
}

uint64_t sub_1C12B58D0(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 40);
  uint64_t result = a1 + 40;
  unint64_t v3 = v2 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32);
  *(_DWORD *)uint64_t result = v2;
  *(_WORD *)(result + 4) = WORD2(v3) & 0x1FFF;
  return result;
}

uint64_t sub_1C12B58EC(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 40);
  uint64_t result = a1 + 40;
  unint64_t v4 = (v3 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32)) & 0x1FFFFFFFFFFLL | (a2 << 45);
  *(_DWORD *)uint64_t result = v3;
  *(_WORD *)(result + 4) = WORD2(v4);
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataBindingScope()
{
  return &type metadata for FormatDerivedDataBindingScope;
}

unint64_t sub_1C12B5924()
{
  unint64_t result = qword_1EA1ADC20;
  if (!qword_1EA1ADC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADC20);
  }
  return result;
}

uint64_t sub_1C12B5978()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  unint64_t v6 = *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int16 *)(v0 + 44) << 32);
  switch(*(unsigned __int16 *)(v0 + 44) >> 13)
  {
    case 1:
    case 3:
    case 4:
      swift_bridgeObjectRetain();
      return v1;
    case 2:
      if ((v2 & 1) == 0)
      {
        uint64_t v12 = 0x2865736163;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      return 0x746C7561666564;
    default:
      if (!(v3 >> 6))
      {
        uint64_t v12 = 0x28746F6C73;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        sub_1C0368EB4(v1, v2, v3, v4, v5, v6);
        goto LABEL_10;
      }
      if (v3 >> 6 == 1)
      {
        uint64_t v12 = 0;
        sub_1C151E80C();
        sub_1C035E098(v1, v2);
LABEL_10:
        sub_1C151E80C();
        return v12;
      }
      int v8 = *(void *)(v0 + 16);
      if (!(v2 | v1) && v8 == 128) {
        return 0x70756F7267;
      }
      if (v1 == 1 && !v2 && v8 == 128) {
        return 0x656D656C70707573;
      }
      if (v1 == 2 && !v2 && v8 == 128) {
        return 0x656C797473;
      }
      if (v1 == 3 && !v2 && v8 == 128) {
        return 0x697461726F636564;
      }
      if (v1 == 4 && !v2 && v8 == 128) {
        return 0x7261696C69787561;
      }
      BOOL v9 = v8 == 128;
      BOOL v11 = v1 == 5 && v2 == 0;
      if (v11 && v9) {
        return 0x6E6F6974706FLL;
      }
      else {
        return 0x646E69426D657469;
      }
  }
}

uint64_t sub_1C12B5C54()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  unint64_t v6 = *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int16 *)(v0 + 44) << 32);
  switch(*(unsigned __int16 *)(v0 + 44) >> 13)
  {
    case 1:
      goto LABEL_5;
    case 2:
      sub_1C1520DCC();
      sub_1C1520DDC();
      if ((v1 & 1) == 0) {
        sub_1C1520DCC();
      }
      sub_1C1520DDC();
      if (!v4) {
        return sub_1C1520DDC();
      }
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      return sub_1C0368EB4(v2, v1, v3, v4, v5, v6);
    case 3:
      sub_1C1520DCC();
      sub_1C151E77C();
      if ((v6 & 0x10000000000) != 0) {
        return sub_1C1520DDC();
      }
      sub_1C1520DDC();
      if ((v3 & 0x100000000) == 0)
      {
        sub_1C1520DCC();
        sub_1C1520DEC();
        if ((v4 & 0x100000000) != 0) {
          goto LABEL_11;
        }
LABEL_25:
        sub_1C1520DCC();
        sub_1C1520DEC();
        if ((v5 & 0x100000000) != 0) {
          goto LABEL_23;
        }
LABEL_26:
        sub_1C1520DCC();
        sub_1C1520DEC();
        if ((v6 & 0x100000000) != 0) {
          return sub_1C1520DCC();
        }
        goto LABEL_29;
      }
      sub_1C1520DCC();
      if ((v4 & 0x100000000) == 0) {
        goto LABEL_25;
      }
LABEL_11:
      sub_1C1520DCC();
      if ((v5 & 0x100000000) == 0) {
        goto LABEL_26;
      }
LABEL_23:
      sub_1C1520DCC();
      if ((v6 & 0x100000000) == 0)
      {
LABEL_29:
        sub_1C1520DCC();
        return sub_1C1520DEC();
      }
      return sub_1C1520DCC();
    case 4:
      sub_1C1520DCC();
      return sub_1C151E77C();
    default:
      sub_1C1520DCC();
      if (v3 >> 6)
      {
        if (v3 >> 6 != 1) {
          return sub_1C1520DCC();
        }
        sub_1C1520DCC();
        return FormatItemKind.hash(into:)();
      }
      else
      {
LABEL_5:
        sub_1C1520DCC();
        sub_1C151E77C();
        return sub_1C1520DDC();
      }
  }
}

uint64_t sub_1C12B6000()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12B6068()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12B60CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  unint64_t v7 = *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32);
  uint64_t v8 = *(void *)a2;
  unint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  unint64_t v12 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
  uint64_t v13 = *(void *)(a2 + 32);
  switch(*(unsigned __int16 *)(a1 + 44) >> 13)
  {
    case 1:
      if (((v12 >> 45) & 7) != 1) {
        goto LABEL_26;
      }
      if (v2 == v8 && v3 == v9)
      {
        uint64_t v19 = *(void *)(a2 + 24);
        uint64_t v20 = *(void *)(a1 + 16);
        uint64_t v21 = *(void *)(a2 + 16);
        int v92 = v10 & 1;
        int v87 = v5 & 1;
        uint64_t v22 = *(void *)(a1 + 24);
        unint64_t v23 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
        sub_1C0FA6C98(v2, v3, v20, v4, v6, v7);
        sub_1C0FA6C98(v2, v3, v21, v19, v13, v23);
        sub_1C0368EB4(v2, v3, v20, v22, v6, v7);
        sub_1C0368EB4(v2, v3, v21, v19, v13, v23);
        if (v87 != v92) {
          goto LABEL_28;
        }
        goto LABEL_53;
      }
      uint64_t v50 = *(void *)(a2 + 32);
      uint64_t v51 = *(void *)(a2 + 16);
      uint64_t v95 = *(void *)a2;
      uint64_t v52 = *(void *)(a1 + 24);
      unint64_t v81 = *(void *)(a2 + 8);
      unint64_t v53 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
      char v90 = sub_1C1520A9C();
      sub_1C0FA6C98(v2, v3, v5, v52, v6, v7);
      sub_1C0FA6C98(v95, v81, v51, v11, v50, v53);
      sub_1C0368EB4(v2, v3, v5, v52, v6, v7);
      sub_1C0368EB4(v95, v81, v51, v11, v50, v53);
      if ((v90 & 1) != 0 && ((v5 ^ v51) & 1) == 0) {
        goto LABEL_53;
      }
      goto LABEL_28;
    case 2:
      if (((v12 >> 45) & 7) != 2) {
        goto LABEL_26;
      }
      uint64_t v93 = *(void *)a2;
      unint64_t v80 = *(void *)(a2 + 8);
      uint64_t v70 = *(void *)(a2 + 32);
      if (v3)
      {
        if ((v9 & 1) == 0 || ((*(void *)(a1 + 8) & 0x100) == 0) == ((v9 >> 8) & 1)) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v24 = *(void *)(a2 + 16);
        if ((v9 & 1) != 0 || v2 != v8 || ((*(void *)(a1 + 8) & 0x100) == 0) == ((v9 >> 8) & 1))
        {
          unint64_t v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
LABEL_46:
          uint64_t v68 = *(void *)(a1 + 24);
          uint64_t v69 = *(void *)(a1 + 32);
          sub_1C0FA6C98(v2, v3, v5, v4, v6, v7);
LABEL_47:
          sub_1C0FA6C98(v93, v80, v24, v11, v70, v25);
          sub_1C0368EB4(v2, v3, v5, v68, v69, v7);
          uint64_t v43 = v93;
          unint64_t v44 = v80;
          unsigned __int8 v45 = v24;
          uint64_t v46 = v11;
          uint64_t v47 = v70;
          unint64_t v48 = v25;
          goto LABEL_27;
        }
      }
      if (!v4)
      {
        unint64_t v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
        uint64_t v24 = *(void *)(a2 + 16);
        uint64_t v69 = *(void *)(a1 + 32);
        sub_1C0FA6C98(v2, v3, v5, 0, v6, v7);
        uint64_t v68 = 0;
        if (v11) {
          goto LABEL_47;
        }
        sub_1C0FA6C98(v93, v80, v24, 0, v70, v25);
        sub_1C0368EB4(v2, v3, v5, 0, v6, v7);
        uint64_t v55 = v93;
        unint64_t v56 = v80;
        unsigned __int8 v57 = v24;
        uint64_t v58 = 0;
        uint64_t v59 = v70;
        unint64_t v60 = v25;
        goto LABEL_50;
      }
      if (!v11)
      {
LABEL_45:
        unint64_t v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
        uint64_t v24 = *(void *)(a2 + 16);
        goto LABEL_46;
      }
      unint64_t v85 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
      if (v5 == v10 && v4 == v11)
      {
        uint64_t v54 = *(void *)(a1 + 24);
        sub_1C0FA6C98(v2, v3, v5, v4, v6, v7);
        sub_1C0FA6C98(v93, v9, v5, v54, v70, v85);
        sub_1C0368EB4(v2, v3, v5, v54, v6, v7);
        uint64_t v55 = v93;
        unint64_t v56 = v9;
        unsigned __int8 v57 = v5;
        uint64_t v58 = v54;
        uint64_t v59 = v70;
        unint64_t v60 = v85;
LABEL_50:
        sub_1C0368EB4(v55, v56, v57, v58, v59, v60);
        char v18 = 1;
        return v18 & 1;
      }
      uint64_t v75 = *(void *)(a2 + 16);
      uint64_t v78 = *(void *)(a1 + 24);
      char v88 = sub_1C1520A9C();
      sub_1C0FA6C98(v2, v3, v5, v78, v6, v7);
      sub_1C0FA6C98(v93, v80, v75, v11, v70, v85);
      sub_1C0368EB4(v2, v3, v5, v78, v6, v7);
      uint64_t v29 = v93;
      unint64_t v30 = v80;
      unsigned __int8 v31 = v75;
      uint64_t v32 = v11;
      uint64_t v33 = v70;
      unint64_t v34 = v85;
LABEL_52:
      sub_1C0368EB4(v29, v30, v31, v32, v33, v34);
      if (v88) {
LABEL_53:
      }
        char v18 = 1;
      else {
LABEL_28:
      }
        char v18 = 0;
      return v18 & 1;
    case 3:
      if (((v12 >> 45) & 7) != 3) {
        goto LABEL_26;
      }
      uint64_t v71 = *(void *)(a2 + 32);
      unint64_t v73 = *(void *)(a2 + 16);
      uint64_t v94 = *(void *)a2;
      if (v2 != v8 || v3 != v9)
      {
        unint64_t v26 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
        unint64_t v27 = *(void *)(a1 + 24);
        char v28 = sub_1C1520A9C();
        unint64_t v4 = v27;
        unint64_t v12 = v26;
        uint64_t v8 = v94;
        if ((v28 & 1) == 0) {
          goto LABEL_42;
        }
      }
      if ((v7 & 0x10000000000) == 0)
      {
        if ((v12 & 0x10000000000) == 0)
        {
          uint64_t v76 = v4;
          LOBYTE(v99[0]) = BYTE4(v73) & 1;
          char v102 = BYTE4(v71) & 1;
          char v101 = BYTE4(v12) & 1;
          unint64_t v83 = v12;
          char v88 = sub_1C13AD14C(v5 | ((HIDWORD(v5) & 1) << 32), v4 | ((HIDWORD(v4) & 1) << 32), v6 | ((HIDWORD(v6) & 1) << 32), v7 | ((HIDWORD(v7) & 1) << 32), v73 | ((HIDWORD(v73) & 1) << 32), v11 | ((unint64_t)(BYTE4(v11) & 1) << 32), v71 | ((unint64_t)(BYTE4(v71) & 1) << 32), v12 | ((unint64_t)(BYTE4(v12) & 1) << 32));
          sub_1C0FA6C98(v2, v3, v5, v76, v6, v7);
          sub_1C0FA6C98(v94, v9, v73, v11, v71, v83);
          sub_1C0368EB4(v2, v3, v5, v76, v6, v7);
          uint64_t v29 = v94;
          unint64_t v30 = v9;
          unsigned __int8 v31 = v73;
          uint64_t v32 = v11;
          uint64_t v33 = v71;
          unint64_t v34 = v83;
          goto LABEL_52;
        }
LABEL_42:
        unint64_t v86 = v12;
        uint64_t v63 = v8;
        uint64_t v64 = v4;
        sub_1C0FA6C98(v2, v3, v5, v4, v6, v7);
        sub_1C0FA6C98(v63, v9, v73, v11, v71, v86);
        sub_1C0368EB4(v2, v3, v5, v64, v6, v7);
        uint64_t v43 = v94;
        unint64_t v44 = v9;
        unsigned __int8 v45 = v73;
        uint64_t v46 = v11;
        uint64_t v47 = v71;
        unint64_t v48 = v86;
        goto LABEL_27;
      }
      uint64_t v65 = v8;
      uint64_t v66 = v4;
      unint64_t v67 = v12;
      sub_1C0FA6C98(v2, v3, v5, v4, v6, v7);
      sub_1C0FA6C98(v65, v9, v73, v11, v71, v67);
      sub_1C0368EB4(v2, v3, v5, v66, v6, v7);
      sub_1C0368EB4(v94, v9, v73, v11, v71, v67);
      if ((v67 & 0x10000000000) == 0) {
        goto LABEL_28;
      }
      goto LABEL_53;
    case 4:
      if (((v12 >> 45) & 7) != 4) {
        goto LABEL_26;
      }
      unint64_t v84 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
      uint64_t v72 = *(void *)(a2 + 24);
      uint64_t v74 = *(void *)(a2 + 16);
      if (v2 == v8 && v3 == v9)
      {
        unint64_t v35 = *(void *)(a2 + 8);
        unsigned __int8 v36 = *(void *)(a1 + 16);
        char v18 = 1;
        uint64_t v37 = *(void *)a2;
      }
      else
      {
        unsigned __int8 v36 = *(void *)(a1 + 16);
        uint64_t v37 = *(void *)a2;
        unint64_t v61 = *(void *)(a1 + 24);
        unint64_t v35 = *(void *)(a2 + 8);
        char v62 = sub_1C1520A9C();
        unint64_t v4 = v61;
        char v18 = v62;
      }
      uint64_t v77 = v4;
      sub_1C0FA6C98(v2, v3, v36, v4, v6, v7);
      sub_1C0FA6C98(v37, v35, v74, v72, v13, v84);
      sub_1C0368EB4(v2, v3, v36, v77, v6, v7);
      sub_1C0368EB4(v37, v35, v74, v72, v13, v84);
      return v18 & 1;
    default:
      if (((v12 >> 45) & 7) == 0)
      {
        v99[0] = *(void *)a1;
        v99[1] = v3;
        char v100 = v5;
        v97[0] = v8;
        v97[1] = v9;
        char v98 = v10;
        uint64_t v14 = v13;
        unsigned __int8 v15 = v10;
        uint64_t v91 = v8;
        uint64_t v16 = v4;
        uint64_t v79 = v6;
        unint64_t v82 = v12;
        sub_1C0FA6C98(v8, v9, v10, v11, v14, v12);
        sub_1C0FA6C98(v2, v3, v5, v16, v6, v7);
        sub_1C0FA6C98(v2, v3, v5, v16, v6, v7);
        sub_1C0FA6C98(v91, v9, v15, v11, v14, v82);
        unint64_t v17 = v9;
        char v18 = sub_1C0CDD5FC((uint64_t)v99, (uint64_t)v97);
        sub_1C0368EB4(v2, v3, v5, v16, v79, v7);
        sub_1C0368EB4(v91, v17, v15, v11, v14, v82);
        sub_1C0368EB4(v91, v17, v15, v11, v14, v82);
        sub_1C0368EB4(v2, v3, v5, v16, v79, v7);
        return v18 & 1;
      }
LABEL_26:
      uint64_t v38 = *(void *)(a2 + 16);
      uint64_t v39 = *(void *)a2;
      uint64_t v96 = *(void *)(a1 + 16);
      unint64_t v89 = *(void *)(a1 + 8);
      uint64_t v40 = *(void *)a1;
      unint64_t v41 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned __int16 *)(a2 + 44) << 32);
      uint64_t v42 = *(void *)(a1 + 24);
      sub_1C0FA6C98(*(void *)a1, v89, v96, v4, v6, v7);
      sub_1C0FA6C98(v39, v9, v38, v11, v13, v41);
      sub_1C0368EB4(v40, v89, v96, v42, v6, v7);
      uint64_t v43 = v39;
      unint64_t v44 = v9;
      unsigned __int8 v45 = v38;
      uint64_t v46 = v11;
      uint64_t v47 = v13;
      unint64_t v48 = v41;
LABEL_27:
      sub_1C0368EB4(v43, v44, v45, v46, v47, v48);
      goto LABEL_28;
  }
}

uint64_t static FormatURLParameterOptionModifier.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BFD81AE8(*a1, *a2);
}

uint64_t FormatURLParameterOptionModifier.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C12B6B78(uint64_t a1)
{
  unint64_t result = sub_1C12B6BA0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12B6BA0()
{
  unint64_t result = qword_1EA1ADC28;
  if (!qword_1EA1ADC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADC28);
  }
  return result;
}

unint64_t sub_1C12B6BF4(void *a1)
{
  a1[1] = sub_1BFC99BA0();
  a1[2] = sub_1BFCD8878();
  unint64_t result = sub_1C12B6C2C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12B6C2C()
{
  unint64_t result = qword_1EA1ADC30;
  if (!qword_1EA1ADC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADC30);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatURLParameterOptionModifier()
{
  return &type metadata for FormatURLParameterOptionModifier;
}

uint64_t dispatch thunk of CoverChannelViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void sub_1C12B6CA4(uint64_t a1, double *a2, char *a3)
{
  unint64_t v4 = v3;
  sub_1BFEE4C70(0);
  uint64_t v211 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v212 = v9;
  uint64_t v213 = (uint64_t)&v210 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v218 = (char *)&v210 - v11;
  BOOL v241 = (void *)sub_1C151A17C();
  uint64_t v238 = (void (**)(void, void, void))*(v241 - 1);
  MEMORY[0x1F4188790](v241);
  uint64_t v224 = (char *)&v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = *a2;
  double v222 = a2[1];
  double v223 = v13;
  double v14 = a2[2];
  double v15 = a2[4];
  double v220 = a2[3];
  double v221 = v14;
  double v17 = a2[5];
  double v16 = a2[6];
  double v18 = a2[7];
  uint64_t v19 = *((void *)a2 + 9);
  *(double *)&long long v231 = a2[8];
  *((void *)&v231 + 1) = v19;
  uint64_t v20 = *((void *)a2 + 11);
  *(double *)&long long v232 = a2[10];
  *((void *)&v232 + 1) = v20;
  uint64_t v21 = *((void *)a2 + 13);
  *(double *)&long long v233 = a2[12];
  *((void *)&v233 + 1) = v21;
  uint64_t v22 = *((void *)a2 + 15);
  double v23 = a2[16];
  *(double *)&long long v234 = a2[14];
  *((void *)&v234 + 1) = v22;
  double v25 = a2[17];
  double v24 = a2[18];
  double v26 = a2[19];
  uint64_t v27 = *((void *)a2 + 21);
  *(double *)&long long v236 = a2[20];
  *((void *)&v236 + 1) = v27;
  double v219 = a2[22];
  double v235 = a2[23];
  uint64_t v226 = (void *)(a1 + 160);
  sub_1BFC66384(a1 + 160, (uint64_t)v260);
  char v28 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_titleLabel];
  objc_msgSend(v28, sel_setNumberOfLines_, 0);
  uint64_t v29 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_accessoryLabel];
  objc_msgSend(v29, sel_setNumberOfLines_, 0);
  BOOL v239 = v28;
  *(double *)&long long v214 = v15;
  *((double *)&v214 + 1) = v17;
  *(double *)&long long v215 = v16;
  *((double *)&v215 + 1) = v18;
  double v30 = v16;
  double v31 = *((double *)&v236 + 1);
  objc_msgSend(v28, sel_setFrame_, v15, v17, v30, v18);
  id v229 = *(id *)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage];
  *(double *)&long long v216 = v23;
  *((double *)&v216 + 1) = v25;
  *(double *)&long long v217 = v24;
  *((double *)&v217 + 1) = v26;
  double v32 = v24;
  double v33 = v26;
  double v34 = v235;
  double v35 = v219;
  objc_msgSend(v229, sel_setFrame_, v23, v25, v32, v33);
  id v228 = v29;
  objc_msgSend(v29, sel_setFrame_, v231, v232);
  unsigned __int8 v36 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton];
  objc_msgSend(v36, sel_setFrame_, *(double *)&v236, v31, v35, v34);
  double v37 = v35;
  BOOL v38 = v34 == 0.0 && v35 == 0.0;
  id v237 = v36;
  objc_msgSend(v36, sel_setHidden_, v38);
  uint64_t v39 = *(char **)&a3[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton];
  objc_msgSend(v39, sel_setFrame_, v233, v234);
  uint64_t v40 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel;
  id v41 = *(id *)&v39[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_titleLabel];
  objc_msgSend(v39, sel_bounds);
  objc_msgSend(v41, sel_setFrame_);

  uint64_t v42 = *(void **)&v39[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap];
  uint64_t v43 = swift_allocObject();
  BOOL v230 = v4;
  swift_weakInit();
  sub_1C1192E14(a1, (uint64_t)&v244);
  uint64_t v44 = swift_allocObject();
  long long v45 = v257;
  *(_OWORD *)(v44 + 216) = v256;
  *(_OWORD *)(v44 + 232) = v45;
  *(_OWORD *)(v44 + 248) = v258;
  long long v46 = v253;
  *(_OWORD *)(v44 + 152) = v252;
  *(_OWORD *)(v44 + 168) = v46;
  long long v47 = v255;
  *(_OWORD *)(v44 + 184) = v254;
  *(_OWORD *)(v44 + 200) = v47;
  long long v48 = v249;
  *(_OWORD *)(v44 + 88) = v248;
  *(_OWORD *)(v44 + 104) = v48;
  long long v49 = v251;
  *(_OWORD *)(v44 + 120) = v250;
  *(_OWORD *)(v44 + 136) = v49;
  long long v50 = v245;
  *(_OWORD *)(v44 + 24) = v244;
  *(_OWORD *)(v44 + 40) = v50;
  long long v51 = v247;
  *(_OWORD *)(v44 + 56) = v246;
  *(void *)(v44 + 16) = v43;
  uint64_t v52 = v259;
  *(_OWORD *)(v44 + 72) = v51;
  *(void *)(v44 + 264) = v52;
  *(void *)(v44 + 272) = v39;
  id v53 = v42;
  uint64_t v54 = v39;

  swift_release();
  uint64_t v225 = v40;
  uint64_t v55 = *(void **)&v39[v40];
  uint64_t v56 = v261;
  char v57 = *(unsigned char *)(a1 + 72);
  id v240 = a3;
  uint64_t v227 = a1;
  if (v57)
  {
    CGFloat v59 = v220;
    CGFloat v58 = v221;
    CGFloat v60 = v222;
    CGFloat v61 = v223;
    uint64_t v77 = __swift_project_boxed_opaque_existential_1(v260, v261);
    *((void *)&v245 + 1) = v56;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v244);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(boxed_opaque_existential_0, v77, v56);
    id v79 = v55;
    id v80 = (id)sub_1C0DF62E0((uint64_t)&v244);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v244);
    objc_msgSend(v79, sel_setAttributedText_, v80);

    uint64_t v81 = (uint64_t)v224;
    ((void (**)(char *, void, void *))v238)[13](v224, *MEMORY[0x1E4FABC70], v241);
    unint64_t v67 = v54;
    CoverViewFollowSwitch.toggleState.setter(v81);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v83 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v84 = sub_1C1515B8C();
    uint64_t v86 = v85;

    int v87 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v89 = v87[2];
    unint64_t v88 = v87[3];
    if (v89 >= v88 >> 1) {
      BOOL v241 = sub_1BFEF9B68((void *)(v88 > 1), v89 + 1, 1, v87);
    }
    else {
      BOOL v241 = v87;
    }
    uint64_t v76 = v239;
    id v74 = 0;
    char v90 = v241;
    v241[2] = v89 + 1;
    uint64_t v91 = &v90[2 * v89];
    v91[4] = v84;
    v91[5] = v86;
    uint64_t v75 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    a1 = v227;
  }
  else
  {
    CGFloat v59 = v220;
    CGFloat v58 = v221;
    CGFloat v60 = v222;
    CGFloat v61 = v223;
    char v62 = __swift_project_boxed_opaque_existential_1(v260, v261);
    *((void *)&v245 + 1) = v56;
    uint64_t v63 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v244);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v63, v62, v56);
    id v64 = v55;
    id v65 = (id)sub_1C0DF62E0((uint64_t)&v244);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v244);
    objc_msgSend(v64, sel_setAttributedText_, v65);

    uint64_t v66 = (uint64_t)v224;
    ((void (**)(char *, void, void *))v238)[13](v224, *MEMORY[0x1E4FABC78], v241);
    unint64_t v67 = v54;
    CoverViewFollowSwitch.toggleState.setter(v66);
    type metadata accessor for Localized();
    uint64_t v68 = swift_getObjCClassFromMetadata();
    id v69 = objc_msgSend(self, sel_bundleForClass_, v68);
    sub_1C1515B8C();

    uint64_t v70 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v71 = objc_allocWithZone(MEMORY[0x1E4FB13B8]);
    swift_retain();
    uint64_t v72 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    *(void *)&long long v246 = sub_1C12B8E20;
    *((void *)&v246 + 1) = v70;
    *(void *)&long long v244 = MEMORY[0x1E4F143A8];
    *((void *)&v244 + 1) = 1107296256;
    *(void *)&long long v245 = sub_1C12B8C88;
    *((void *)&v245 + 1) = &block_descriptor_102;
    unint64_t v73 = _Block_copy(&v244);
    id v74 = objc_msgSend(v71, sel_initWithName_actionHandler_, v72, v73);

    _Block_release(v73);
    swift_release();
    swift_release();
    BOOL v241 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v75 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    uint64_t v76 = v239;
  }
  uint64_t v238 = (void (**)(void, void, void))v74;
  id v92 = *(id *)&v39[v225];
  objc_msgSend(v67, sel_bounds);
  objc_msgSend(v92, sel_ne_verticallyCenterCapInRect_);

  uint64_t v93 = v261;
  uint64_t v94 = __swift_project_boxed_opaque_existential_1(v260, v261);
  *((void *)&v245 + 1) = v93;
  uint64_t v95 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v244);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v93 - 8) + 16))(v95, v94, v93);
  id v96 = (id)sub_1C0DF62E0((uint64_t)&v244);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v244);
  objc_msgSend(v76, (SEL)v75[437], v96);

  uint64_t v97 = *(void *)(a1 + 184);
  uint64_t v98 = *(void *)(a1 + 192);
  BOOL v99 = v226;
  __swift_project_boxed_opaque_existential_1(v226, v97);
  char v100 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v98 + 64))(v97, v98);
  uint64_t v101 = *(void *)(a1 + 184);
  uint64_t v102 = *(void *)(a1 + 192);
  __swift_project_boxed_opaque_existential_1(v99, v101);
  double v103 = (*(double (**)(uint64_t, uint64_t))(v102 + 40))(v101, v102);
  uint64_t v104 = *(void *)(a1 + 184);
  uint64_t v105 = *(void *)(a1 + 192);
  __swift_project_boxed_opaque_existential_1(v99, v104);
  double v106 = (*(double (**)(uint64_t, uint64_t))(v105 + 56))(v104, v105);
  BOOL v107 = (void *)sub_1C151E5EC();
  id v108 = objc_msgSend(self, sel_systemImageNamed_, v107);

  if (!v108)
  {
    __break(1u);
    return;
  }
  uint64_t v225 = a1 + 8;
  id v109 = objc_msgSend(self, sel_configurationWithPointSize_weight_, 4, v103 + v106 + v106);
  id v110 = objc_msgSend(v108, sel_imageWithConfiguration_, v109);

  uint64_t v111 = objc_msgSend(v110, sel_imageWithTintColor_renderingMode_, v100, 1);
  id v112 = v237;
  uint64_t v226 = v111;
  objc_msgSend(v237, sel_setImage_forState_, v111, 0);
  objc_msgSend(v112, sel_setContentMode_, 1);
  int v113 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v114 = v261;
  id v115 = v229;
  if (v113)
  {
    uint64_t v116 = __swift_project_boxed_opaque_existential_1(v260, v261);
    *((void *)&v245 + 1) = v114;
    unint64_t v117 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v244);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v117, v116, v114);
    id v118 = (id)sub_1C0DF62E0((uint64_t)&v244);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v244);
    objc_msgSend(v228, sel_setAttributedText_, v118);

    LOBYTE(v244) = v113;
    uint64_t v119 = sub_1C0FBAF58();
    uint64_t v121 = v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v241 = sub_1BFEF9B68(0, v241[2] + 1, 1, v241);
    }
    unint64_t v123 = v241[2];
    unint64_t v122 = v241[3];
    uint64_t v124 = v67;
    if (v123 >= v122 >> 1) {
      BOOL v241 = sub_1BFEF9B68((void *)(v122 > 1), v123 + 1, 1, v241);
    }
    unint64_t v125 = v241;
    v241[2] = v123 + 1;
    uint64_t v126 = &v125[2 * v123];
    v126[4] = v119;
    v126[5] = v121;
    id v127 = v240;
    id v128 = v228;
  }
  else
  {
    uint64_t v124 = v67;
    unint64_t v129 = __swift_project_boxed_opaque_existential_1(v260, v261);
    *((void *)&v245 + 1) = v114;
    uint64_t v130 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v244);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v130, v129, v114);
    id v131 = (id)sub_1C0DF62E0((uint64_t)&v244);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v244);
    id v128 = v228;
    objc_msgSend(v228, sel_setAttributedText_, v131);

    id v127 = v240;
    objc_msgSend(v240, sel_setAccessibilityValue_, 0);
  }
  uint64_t v132 = v261;
  uint64_t v133 = v262;
  __swift_project_boxed_opaque_existential_1(v260, v261);
  (*(void (**)(id, uint64_t, uint64_t))(v133 + 112))(v115, v132, v133);
  uint64_t v134 = v261;
  uint64_t v135 = v262;
  __swift_project_boxed_opaque_existential_1(v260, v261);
  LOBYTE(v244) = v113;
  (*(void (**)(id, long long *, uint64_t, uint64_t))(v135 + 120))(v128, &v244, v134, v135);
  uint64_t v136 = v261;
  uint64_t v137 = v262;
  __swift_project_boxed_opaque_existential_1(v260, v261);
  (*(void (**)(char *, uint64_t, uint64_t))(v137 + 128))(v124, v136, v137);
  sub_1C151CD6C();
  FeedTag.coverImage.getter((uint64_t)&v244);
  if (*((void *)&v245 + 1))
  {
    sub_1BFC773DC(&v244, (uint64_t)v243);
    sub_1BFC66384((uint64_t)v243, (uint64_t)&v244);
    uint64_t v138 = sub_1C151B4CC();
    swift_allocObject();
    uint64_t v139 = sub_1C151B4AC();
    __swift_project_boxed_opaque_existential_1(v230 + 3, v230[6]);
    uint64_t v140 = MEMORY[0x1E4FAC7D8];
    *((void *)&v245 + 1) = v138;
    *(void *)&long long v246 = MEMORY[0x1E4FAC7D8];
    *(void *)&long long v244 = v139;
    swift_retain();
    uint64_t v141 = (void *)sub_1C151A52C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v244);
    if (v141)
    {
      id v142 = v141;
      id v143 = v229;
      sub_1C151CD6C();
      *(CGFloat *)&long long v244 = v61;
      *((CGFloat *)&v244 + 1) = v60;
      *(CGFloat *)&long long v245 = v58;
      *((CGFloat *)&v245 + 1) = v59;
      long long v246 = v214;
      long long v247 = v215;
      long long v248 = v231;
      long long v249 = v232;
      long long v250 = v233;
      long long v251 = v234;
      long long v252 = v216;
      long long v253 = v217;
      long long v254 = v236;
      *(double *)&long long v255 = v37;
      *((double *)&v255 + 1) = v235;
      id v144 = v240;
      sub_1C12B9F54(v142, (uint64_t)v240, &v244);
      uint64_t v145 = v261;
      uint64_t v146 = v262;
      __swift_project_boxed_opaque_existential_1(v260, v261);
      long long v147 = *(void (**)(id, uint64_t, uint64_t))(v146 + 112);
      uint64_t v148 = v146;
      id v127 = v144;
      v147(v143, v145, v148);
      swift_release();

      uint64_t v149 = (long long *)v243;
    }
    else
    {
      *((void *)&v245 + 1) = v138;
      *(void *)&long long v246 = v140;
      *(void *)&long long v244 = v139;
      uint64_t v150 = swift_allocObject();
      id v151 = v240;
      swift_unknownObjectWeakInit();
      uint64_t v152 = swift_allocObject();
      swift_weakInit();
      sub_1BFC66384((uint64_t)v260, (uint64_t)v242);
      uint64_t v153 = (CGFloat *)swift_allocObject();
      *((void *)v153 + 2) = v150;
      *((void *)v153 + 3) = v152;
      v153[4] = v61;
      v153[5] = v60;
      v153[6] = v58;
      v153[7] = v59;
      uint64_t v154 = *((void *)&v214 + 1);
      *((void *)v153 + 8) = v214;
      *((void *)v153 + 9) = v154;
      uint64_t v155 = *((void *)&v215 + 1);
      *((void *)v153 + 10) = v215;
      *((void *)v153 + 11) = v155;
      uint64_t v156 = *((void *)&v231 + 1);
      *((void *)v153 + 12) = v231;
      *((void *)v153 + 13) = v156;
      uint64_t v157 = *((void *)&v232 + 1);
      *((void *)v153 + 14) = v232;
      *((void *)v153 + 15) = v157;
      uint64_t v158 = *((void *)&v233 + 1);
      *((void *)v153 + 16) = v233;
      *((void *)v153 + 17) = v158;
      uint64_t v159 = *((void *)&v234 + 1);
      *((void *)v153 + 18) = v234;
      *((void *)v153 + 19) = v159;
      uint64_t v160 = *((void *)&v216 + 1);
      *((void *)v153 + 20) = v216;
      *((void *)v153 + 21) = v160;
      uint64_t v161 = *((void *)&v217 + 1);
      *((void *)v153 + 22) = v217;
      *((void *)v153 + 23) = v161;
      uint64_t v162 = *((void *)&v236 + 1);
      *((void *)v153 + 24) = v236;
      *((void *)v153 + 25) = v162;
      double v163 = v235;
      v153[26] = v37;
      v153[27] = v163;
      sub_1BFC773DC(v242, (uint64_t)(v153 + 28));
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1C151CD2C();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v243);
      swift_release();
      id v127 = v151;
      swift_release();
      uint64_t v149 = &v244;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  }
  else
  {
    sub_1BFF44FE0((uint64_t)&v244);
    sub_1C151CD6C();
  }
  uint64_t v164 = v227;
  uint64_t v165 = (void *)sub_1C151E5EC();
  objc_msgSend(v127, sel_setAccessibilityIdentifier_, v165);

  MEMORY[0x1F4188790](v166);
  sub_1C12B8E58();
  sub_1C12B8EB4((unint64_t *)&unk_1EA1ADC40, (void (*)(uint64_t))sub_1C12B8E58);
  sub_1C151F97C();
  objc_msgSend(v127, sel_setIsAccessibilityElement_, 1);
  uint64_t v167 = v261;
  uint64_t v168 = __swift_project_boxed_opaque_existential_1(v260, v261);
  *((void *)&v245 + 1) = v167;
  uint64_t v169 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v244);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v167 - 8) + 16))(v169, v168, v167);
  sub_1C0DF6740((uint64_t)&v244);
  uint64_t v171 = v170;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v244);
  uint64_t v172 = v241;
  if (v171)
  {
    uint64_t v173 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v173 = 0;
  }
  objc_msgSend(v127, sel_setAccessibilityLabel_, v173);

  if (v172[2])
  {
    *(void *)&long long v244 = v172;
    sub_1BFED9C20();
    sub_1C12B8EB4((unint64_t *)&qword_1EB879F30, (void (*)(uint64_t))sub_1BFED9C20);
    swift_bridgeObjectRetain();
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    uint64_t v174 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v174 = 0;
  }
  uint64_t v175 = MEMORY[0x1E4FBC860];
  objc_msgSend(v127, sel_setAccessibilityValue_, v174);

  if (objc_msgSend(v237, sel_isHidden))
  {
    id v176 = 0;
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t v177 = swift_getObjCClassFromMetadata();
    id v178 = objc_msgSend(self, sel_bundleForClass_, v177);
    sub_1C1515B8C();

    uint64_t v179 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v180 = objc_allocWithZone(MEMORY[0x1E4FB13B8]);
    swift_retain();
    id v181 = v127;
    uint64_t v182 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    *(void *)&long long v246 = sub_1C12B8EFC;
    *((void *)&v246 + 1) = v179;
    *(void *)&long long v244 = MEMORY[0x1E4F143A8];
    *((void *)&v244 + 1) = 1107296256;
    *(void *)&long long v245 = sub_1C12B8C88;
    *((void *)&v245 + 1) = &block_descriptor_11_5;
    uint64_t v183 = _Block_copy(&v244);
    id v176 = objc_msgSend(v180, sel_initWithName_actionHandler_, v182, v183);

    id v127 = v181;
    _Block_release(v183);
    swift_release();
    swift_release();
  }
  id v184 = v238;
  *(void *)&long long v244 = v175;
  if (!v238)
  {
    id v188 = v176;
    uint64_t v187 = (uint64_t)v218;
    if (!v176) {
      goto LABEL_41;
    }
    goto LABEL_38;
  }
  id v185 = v176;
  id v186 = v184;
  MEMORY[0x1C18C66D0]();
  uint64_t v187 = (uint64_t)v218;
  if (*(void *)((v244 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v244 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C151EC8C();
  }
  sub_1C151ECEC();
  sub_1C151EBEC();
  if (v176)
  {
LABEL_38:
    id v189 = v176;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v244 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v244 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
  }
LABEL_41:
  unint64_t v190 = v244;
  swift_bridgeObjectRelease();

  if (v190 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v192 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v192) {
      goto LABEL_43;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    objc_msgSend(v127, sel_setAccessibilityCustomActions_, 0);
    goto LABEL_46;
  }
  if (!*(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_45;
  }
LABEL_43:
  sub_1BFC39268(0, &qword_1EB85DFF0);
  v191 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v127, sel_setAccessibilityCustomActions_, v191);

LABEL_46:
  uint64_t v193 = v230[2];
  uint64_t v194 = *(void *)v164;
  uint64_t v195 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 56))(v187, 1, 1, v195);
  if (*(unsigned char *)(v193 + 72) == 1)
  {
    sub_1C1517EFC();
    uint64_t v196 = (void *)v244;
    uint64_t v197 = v213;
    sub_1C0492580(v187, v213);
    unint64_t v198 = (*(unsigned __int8 *)(v211 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80);
    uint64_t v199 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_allocObject();
    sub_1C0C08DF8(v197, (uint64_t)v199 + v198);
    sub_1C1462330(v196, v194, (void (*)(void))sub_1C12B9E8C, v199, v61, v60, v58, v59);
    swift_release();
  }
  else
  {
    sub_1C1517EDC();
    uint64_t v200 = (void *)v244;
    if ((void)v244)
    {
      objc_msgSend((id)v244, sel_setHidden_, 1);
    }
  }
  uint64_t v201 = v239;
  sub_1C12B8F2C(v187);
  id v202 = *(id *)(v164 + 40);
  int v203 = *(unsigned __int8 *)(v164 + 48);
  sub_1BFEE7C5C(0, &qword_1EB87A638, (unint64_t *)&qword_1EB873430, (uint64_t)&protocol descriptor for FeedItemViewLayoutDirectionAdjustable, MEMORY[0x1E4FBBE00]);
  uint64_t v204 = swift_allocObject();
  *(_OWORD *)(v204 + 16) = xmmword_1C1529AE0;
  uint64_t v205 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A308);
  *(void *)(v204 + 32) = v201;
  *(void *)(v204 + 56) = v205;
  *(void *)(v204 + 64) = &off_1F1C29F78;
  if (v203 == 1)
  {
    uint64_t v206 = self;
    id v207 = v201;
    id v202 = objc_msgSend(v206, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(v240, sel_semanticContentAttribute));
  }
  else
  {
    id v208 = v201;
  }
  int v209 = v226;
  __swift_project_boxed_opaque_existential_1((void *)(v204 + 32), v205);
  off_1F1C29F80((uint64_t)v202);

  swift_setDeallocating();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873430);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v260);
}

uint64_t sub_1C12B864C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C151BBCC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    if (qword_1EB87B198 != -1) {
      swift_once();
    }
    v8[1] = *(void *)(a2 + 24);
    __int16 v9 = 256;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FACB48], v3);
    long long v10 = 0u;
    long long v11 = 0u;
    char v12 = 1;
    swift_unknownObjectRetain();
    sub_1C151BBAC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1C12B882C(void *a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  uint64_t v8 = a2 + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C18C9C60](v8);
  if (v9)
  {
    long long v10 = (void *)v9;
    id v11 = *(id *)(v9 + OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage);

    sub_1C151CD4C();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C18C9C60](v8);
    if (v12)
    {
      double v13 = (char *)v12;
      if (a1)
      {
        long long v14 = a4[9];
        long long v38 = a4[8];
        long long v39 = v14;
        long long v15 = a4[11];
        long long v40 = a4[10];
        long long v41 = v15;
        long long v16 = a4[5];
        long long v34 = a4[4];
        long long v35 = v16;
        long long v17 = a4[7];
        long long v36 = a4[6];
        long long v37 = v17;
        long long v18 = a4[1];
        long long v30 = *a4;
        long long v31 = v18;
        long long v19 = a4[3];
        long long v32 = a4[2];
        long long v33 = v19;
        id v20 = a1;
        sub_1C12B9F54(v20, (uint64_t)v13, &v30);
        uint64_t v21 = a5[3];
        uint64_t v22 = a5[4];
        __swift_project_boxed_opaque_existential_1(a5, v21);
        double v23 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))(v22 + 112);
        id v24 = *(id *)&v13[OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage];
        v23(v24, v21, v22, v25, v26, v27, v28, v29, v30, *((void *)&v30 + 1), v31, *((void *)&v31 + 1), v32, *((void *)&v32 + 1), v33, *((void *)&v33 + 1), v34, *((void *)&v34 + 1), v35,
          *((void *)&v35 + 1),
          v36,
          *((void *)&v36 + 1),
          v37,
          *((void *)&v37 + 1));
        swift_release();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1C12B89E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 24);
  id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(v3, sel_asChannel);
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = v8 != 0;
  *(void *)a2 = 6775156;
  *(void *)(a2 + 8) = 0xE300000000000000;
  return result;
}

BOOL sub_1C12B8A94(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C18C9C60](v6);
  id v8 = (void *)v7;
  if (v7)
  {
    id v9 = *(id *)(*(void *)(v7 + *a3) + *a4);
    MEMORY[0x1C18C4390]();
  }
  return v8 != 0;
}

double sub_1C12B8B1C(double *a1, uint64_t a2, double a3)
{
  if (a3 == 1.0)
  {
    CGFloat v5 = a1[16];
    CGFloat v6 = a1[17];
    CGFloat v7 = a1[18];
    CGFloat v8 = a1[19];
    v16.origin.CGFloat x = v5;
    v16.origin.CGFloat y = v6;
    v16.size.width = v7;
    v16.size.height = v8;
    double Width = CGRectGetWidth(v16);
    v17.origin.CGFloat x = v5;
    v17.origin.CGFloat y = v6;
    v17.size.width = v7;
    v17.size.height = v8;
    CGRectGetWidth(v17);
  }
  else
  {
    objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage), sel_frame);
    CGFloat v10 = CGRectGetHeight(v18) * a3;
    CGFloat v12 = a1[16];
    CGFloat v11 = a1[17];
    CGFloat v14 = a1[18];
    CGFloat v13 = a1[19];
    v19.origin.CGFloat x = v12;
    v19.origin.CGFloat y = v11;
    v19.size.width = v14;
    v19.size.height = v13;
    if (CGRectGetHeight(v19) >= v10)
    {
      v22.origin.CGFloat x = v12;
      v22.origin.CGFloat y = v11;
      v22.size.width = v14;
      v22.size.height = v13;
      return CGRectGetWidth(v22);
    }
    else
    {
      v20.origin.CGFloat x = v12;
      v20.origin.CGFloat y = v11;
      v20.size.width = v14;
      v20.size.height = v13;
      double Width = CGRectGetHeight(v20) / a3;
      v21.origin.CGFloat x = v12;
      v21.origin.CGFloat y = v11;
      v21.size.width = v14;
      v21.size.height = v13;
      CGRectGetHeight(v21);
    }
  }
  return Width;
}

uint64_t sub_1C12B8C3C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12B8C88(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_1C12B8CE0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12B8D18()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 120) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 152)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 128);
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C12B8DD8()
{
  return sub_1C12B864C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1C12B8DE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

BOOL sub_1C12B8E20(uint64_t a1)
{
  return sub_1C12B8A94(a1, v1, &OBJC_IVAR____TtC8NewsFeed16CoverChannelView_followButton, &OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_onTap);
}

uint64_t sub_1C12B8E50@<X0>(uint64_t a1@<X8>)
{
  return sub_1C12B89E8(*(void *)(v1 + 16), a1);
}

void sub_1C12B8E58()
{
  if (!qword_1EA1ADC38)
  {
    sub_1C1117CF0();
    unint64_t v0 = type metadata accessor for CellAutomation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ADC38);
    }
  }
}

uint64_t sub_1C12B8EB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1C12B8EFC(uint64_t a1)
{
  return sub_1C12B8A94(a1, v1, &OBJC_IVAR____TtC8NewsFeed16CoverChannelView_moreActionsButton, &OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_onTap);
}

uint64_t sub_1C12B8F2C(uint64_t a1)
{
  sub_1BFEE4C70(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12B8F88()
{
  sub_1BFEE4C70(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  uint64_t v3 = type metadata accessor for FeedItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3)) {
    goto LABEL_2;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 48) >= 0x11uLL) {
        goto LABEL_76;
      }
      goto LABEL_2;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 80) >= 0x11uLL) {
        goto LABEL_76;
      }
      goto LABEL_2;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for FeedBannerAd();
      uint64_t v6 = v2 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C151DBAC();
      goto LABEL_57;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      CGFloat v8 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v9 = v8[10];
      uint64_t v10 = v2 + v9 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v11 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
      {
        uint64_t v12 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);

        uint64_t v13 = v10 + *(int *)(v11 + 28);
        uint64_t v14 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      }
      uint64_t v15 = v2 + v8[11];
      uint64_t v16 = sub_1C151D2DC();
      uint64_t v17 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      if (*(void *)(v2 + v8[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v2 + v8[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }

      goto LABEL_2;
    case 4u:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      CGRect v18 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v19 = v2 + v18[8];
      uint64_t v20 = sub_1C1515FDC();
      uint64_t v21 = *(void *)(v20 - 8);
      id v65 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v65(v19, v20);
      uint64_t v22 = v2 + v18[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v22, 1, v20)) {
        v65(v22, v20);
      }
      swift_release();
      swift_release();
      uint64_t v23 = v2 + v18[12];
      id v24 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v24 - 1) + 48))(v23, 1, v24))
      {
        uint64_t v64 = v20;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v25 = v24[10];
        uint64_t v26 = v23 + v25 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v27 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27))
        {
          uint64_t v28 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v26, v28);

          v65(v26 + *(int *)(v27 + 28), v64);
        }
        uint64_t v29 = v23 + v24[11];
        uint64_t v30 = sub_1C151D2DC();
        uint64_t v63 = *(void *)(v30 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v29, 1, v30)) {
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v29, v30);
        }
        if (*(void *)(v23 + v24[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v20 = v64;
        if (*(void *)(v23 + v24[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v31 = v2 + v18[13];
      uint64_t v32 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32)) {
        goto LABEL_2;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_59;
      }
      swift_bridgeObjectRelease();
      uint64_t v33 = type metadata accessor for GenericDataVisualization();
      v65(v31 + *(int *)(v33 + 20), v20);
      goto LABEL_76;
    case 5u:
      goto LABEL_40;
    case 6u:
      int v34 = *(unsigned __int8 *)(v2 + 281);
      if (v34 == 2) {
        goto LABEL_44;
      }
      if (v34 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(v2 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v2 + 128) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        long long v41 = *(void **)(v2 + 144);
        if (v41)
        {

          swift_bridgeObjectRelease();
          if (*(void *)(v2 + 224) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (*(void *)(v2 + 272) >= 0x11uLL) {
LABEL_76:
          }
            swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (*(unsigned char *)(v2 + 281)) {
          goto LABEL_2;
        }
LABEL_40:

        swift_bridgeObjectRelease();
        if (*(void *)(v2 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v2 + 128) >= 0x11uLL) {
          goto LABEL_76;
        }
      }
LABEL_2:
      return swift_deallocObject();
    case 7u:
LABEL_44:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(void *)(v2 + 120)) {
          __swift_destroy_boxed_opaque_existential_1(v2 + 96);
        }
      }
      goto LABEL_2;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v35 = v2 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = v35 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v37 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37))
      {
        uint64_t v38 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
      }
      goto LABEL_76;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 32);
      }
      if (*(void *)(v2 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 72);
      }
      if (*(void *)(v2 + 136)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 112);
      }
      goto LABEL_2;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for FeedEngagementBanner();
      uint64_t v6 = v2 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C151959C();
LABEL_57:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      if (*(void *)(v2 + *(int *)(v5 + 32) + 8) >= 0x11uLL) {
        goto LABEL_76;
      }
      goto LABEL_2;
    case 0xBu:
LABEL_59:
      swift_release();
      goto LABEL_2;
    case 0xCu:
      goto LABEL_70;
    case 0xDu:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 88);
      }
      if (*(void *)(v2 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 128);
      }
      if (*(void *)(v2 + 192)) {
        __swift_destroy_boxed_opaque_existential_1(v2 + 168);
      }
      goto LABEL_2;
    case 0xEu:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_70:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_2;
    case 0xFu:
      if (*(void *)(v2 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v39 = v2 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v40 = v39 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_95;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v43 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v40, 1, v43))
            {
              uint64_t v44 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v40, v44);
            }
          }
          uint64_t v45 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v46 = v40 + *(int *)(v45 + 20);
          int v47 = swift_getEnumCaseMultiPayload();
          if (v47 == 5 || v47 == 4)
          {
            uint64_t v48 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v46, 1, v48))
            {
              uint64_t v49 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v46, v49);
            }
          }
          v40 += *(int *)(v45 + 24);
LABEL_95:
          int v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5 || v50 == 4)
          {
            uint64_t v51 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v40, 1, v51))goto LABEL_106; {
          }
            }
          goto LABEL_2;
        case 2u:
          uint64_t v52 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v40, 1, v52)) {
            goto LABEL_2;
          }
          uint64_t v53 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v40, v53);
          uint64_t v54 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v55 = v40 + *(int *)(v54 + 24);
          swift_bridgeObjectRelease();
          unint64_t v56 = *(void *)(v55 + 24);
          if (v56 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v55 + 16), v56);
          }
          swift_bridgeObjectRelease();
          goto LABEL_76;
        case 3u:
          uint64_t v57 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v58 = v40 + *(int *)(v57 + 24);
          uint64_t v59 = type metadata accessor for PuzzleStreak();
          CGFloat v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48);
          if (!v60(v58, 1, v59))
          {
            uint64_t v61 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v58, v61);
          }
          v40 += *(int *)(v57 + 28);
          if (!v60(v40, 1, v59))
          {
LABEL_106:
            uint64_t v62 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v40, v62);
          }
          goto LABEL_2;
        default:
          goto LABEL_2;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 240) >= 0x11uLL) {
        goto LABEL_76;
      }
      goto LABEL_2;
    default:
      goto LABEL_2;
  }
}

uint64_t sub_1C12B9E8C@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEE4C70(0);
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  return sub_1C1463080(v4, a1);
}

uint64_t sub_1C12B9EFC()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  return swift_deallocObject();
}

void sub_1C12B9F44(void *a1)
{
  sub_1C12B882C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (long long *)(v1 + 32), (void *)(v1 + 224));
}

id sub_1C12B9F54(void *a1, uint64_t a2, long long *a3)
{
  CGSize v5 = (CGSize)a3[9];
  v36.CGPoint origin = (CGPoint)a3[8];
  v36.CGSize size = v5;
  long long v6 = a3[11];
  long long v37 = a3[10];
  long long v38 = v6;
  long long v7 = a3[5];
  long long v32 = a3[4];
  long long v33 = v7;
  long long v8 = a3[7];
  long long v34 = a3[6];
  long long v35 = v8;
  long long v9 = a3[1];
  long long v28 = *a3;
  long long v29 = v9;
  long long v10 = a3[3];
  long long v30 = a3[2];
  long long v31 = v10;
  CGPoint origin = v36.origin;
  CGSize size = v36.size;
  double Height = CGRectGetHeight(v36);
  double v14 = Height / CGRectGetWidth(v36);
  objc_msgSend(a1, sel_size, v28, v29, v30, v31, v32, v33, v34, v35);
  double v16 = v15;
  id result = objc_msgSend(a1, sel_size);
  double v19 = v16 / v18;
  if (v14 != v19 && v19 != 0.0)
  {
    double v20 = sub_1C12B8B1C((double *)&v28, a2, v19);
    double v22 = v21;
    v40.CGPoint origin = origin;
    v40.CGSize size = size;
    CGFloat v23 = CGRectGetWidth(v40) - v20;
    v41.CGPoint origin = origin;
    v41.CGSize size = size;
    CGFloat v24 = CGRectGetHeight(v41) - v22;
    uint64_t v25 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed16CoverChannelView_coverImage);
    v42.CGPoint origin = origin;
    v42.CGSize size = size;
    double v26 = v23 * 0.5 + CGRectGetMinX(v42);
    v43.CGPoint origin = origin;
    v43.CGSize size = size;
    double v27 = v24 + CGRectGetMinY(v43);
    return objc_msgSend(v25, sel_setFrame_, v26, v27, v20, v22);
  }
  return result;
}

void sub_1C12BA124(void *a1, char *a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    char v5 = *a2;
    unint64_t v6 = sub_1C1051F60(5u);
    if (v7)
    {
      uint64_t v8 = *(void *)(a3 + 56) + 16 * v6;
      if (*(unsigned char *)(v8 + 8) == 5)
      {
        long long v9 = *(void **)v8;
        char v25 = v5;
        uint64_t v10 = sub_1C136F078(&v25);
        uint64_t v11 = self;
        id v12 = v9;
        id v24 = objc_msgSend(v11, sel_effectWithStyle_, v10);
        id v13 = objc_msgSend(self, sel_clearColor);
        sub_1C151F95C();

        objc_msgSend(a1, sel_bounds);
        sub_1C151F8FC();
        objc_msgSend(v12, sel_setEffect_, v24);
        id v14 = objc_msgSend(v12, sel_layer);
        id v15 = objc_msgSend(a1, sel_layer);
        objc_msgSend(v15, sel_cornerRadius);
        double v17 = v16;

        objc_msgSend(v14, sel_setCornerRadius_, v17);
        id v18 = objc_msgSend(v12, sel_layer);
        id v19 = objc_msgSend(a1, sel_layer);
        id v20 = objc_msgSend(v19, sel_maskedCorners);

        objc_msgSend(v18, sel_setMaskedCorners_, v20);
        id v21 = objc_msgSend(v12, sel_layer);
        id v22 = objc_msgSend(a1, sel_layer);
        id v23 = objc_msgSend(v22, sel_cornerCurve);

        objc_msgSend(v21, sel_setCornerCurve_, v23);
        sub_1C151F94C();
      }
    }
  }
}

Swift::Void __swiftcall FormatProgressPieView.setUpPieView(options:)(NewsFeed::FormatProgressPieOptionsResolved *options)
{
  Swift::Bool clockwise = options->clockwise;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius) = options->radius;
  Swift::Double stepPercentage = options->stepPercentage;
  Swift::Double minPercentage = options->minPercentage;
  Swift::Double maxPercentage = options->maxPercentage;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise) = clockwise;
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage;
  *(Swift::Double *)uint64_t v6 = stepPercentage;
  *(unsigned char *)(v6 + 8) = 0;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage) = minPercentage;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage) = maxPercentage;
}

Swift::Void __swiftcall FormatProgressPieView.setProgressColors(backgroundColor:pieColor:)(UIColor backgroundColor, UIColor pieColor)
{
  id v5 = *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer);
  id v6 = [(objc_class *)backgroundColor.super.isa CGColor];
  objc_msgSend(v5, sel_setFillColor_, v6);

  id v7 = *(id *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer);
  id v8 = [(objc_class *)pieColor.super.isa CGColor];
  objc_msgSend(v7, sel_setFillColor_, v8);
}

Swift::Void __swiftcall FormatProgressPieView.updatePieProgress(progress:)(Swift::Double progress)
{
  uint64_t v2 = v1;
  CGMutablePathRef Mutable = CGPathCreateMutable();
  objc_msgSend(v1, sel_bounds);
  sub_1C151F77C();
  objc_msgSend(v1, sel_bounds);
  CGRectGetWidth(v7);
  sub_1C151F3EC();
  CGMutablePathRef v5 = CGPathCreateMutable();
  objc_msgSend(v1, sel_bounds);
  sub_1C151F77C();
  sub_1C151F3DC();
  objc_msgSend(v1, sel_bounds);
  sub_1C151F77C();
  sub_1C151F3EC();
  sub_1C151F3CC();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer], sel_setFillRule_, *MEMORY[0x1E4F39FB8]);
  objc_msgSend(*(id *)&v2[v4], sel_setPath_, Mutable);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer], sel_setPath_, v5);
}

uint64_t FormatProgressPieView.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatProgressPieView.identifier.setter(uint64_t a1, uint64_t a2)
{
  CGMutablePathRef v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier);
  swift_beginAccess();
  *CGMutablePathRef v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressPieView.identifier.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall FormatProgressPieView.layoutSubviews()()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_layer);
  id v2 = objc_msgSend(self, sel_clearColor);
  id v3 = objc_msgSend(v2, sel_CGColor);

  objc_msgSend(v1, sel_setBackgroundColor_, v3);
}

id sub_1C12BAA94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FormatProgressPieView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C12BAB74()
{
  id v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate()
{
  return self;
}

void sub_1C12BABF4()
{
  id v1 = &v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier];
  *id v1 = 0;
  v1[1] = 0xE000000000000000;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise] = 0;
  objc_super v4 = &v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage];
  *(void *)objc_super v4 = 0;
  v4[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage] = 0x3FF0000000000000;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_layerDelegate;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate()), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t FeedGroupPinning.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v14[0] = a2;
  sub_1C12BBBE0(0, &qword_1EB85EFC8, (uint64_t (*)(void))sub_1C12BAF54, (uint64_t)&type metadata for FeedGroupPinning.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12BAF54();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v14[0];
    char v16 = 0;
    sub_1C12BAFA8();
    sub_1C15206EC();
    char v11 = v17;
    if (v17)
    {
      char v15 = 1;
      sub_1C12BAFFC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
      uint64_t v12 = v14[1];
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
      uint64_t v12 = 0;
    }
    *(void *)uint64_t v10 = v12;
    *(unsigned char *)(v10 + 8) = v11 ^ 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C12BAF54()
{
  unint64_t result = qword_1EB85E9A0;
  if (!qword_1EB85E9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E9A0);
  }
  return result;
}

unint64_t sub_1C12BAFA8()
{
  unint64_t result = qword_1EB85E9C0;
  if (!qword_1EB85E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E9C0);
  }
  return result;
}

unint64_t sub_1C12BAFFC()
{
  unint64_t result = qword_1EA1ADC98;
  if (!qword_1EA1ADC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADC98);
  }
  return result;
}

uint64_t FeedGroupPinning.encode(to:)(void *a1)
{
  sub_1C12BBBE0(0, &qword_1EA1ADCA0, (uint64_t (*)(void))sub_1C12BAF54, (uint64_t)&type metadata for FeedGroupPinning.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = *v1;
  char v9 = *((unsigned char *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12BAF54();
  sub_1C1520F0C();
  if (v9)
  {
    __int16 v13 = 0;
    sub_1C12BB24C();
LABEL_5:
    sub_1C152080C();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  char v17 = 1;
  char v16 = 0;
  sub_1C12BB24C();
  uint64_t v10 = v12;
  sub_1C152080C();
  if (!v10)
  {
    uint64_t v15 = v8;
    char v14 = 1;
    sub_1C12BB2A0();
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C12BB24C()
{
  unint64_t result = qword_1EA1ADCA8;
  if (!qword_1EA1ADCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCA8);
  }
  return result;
}

unint64_t sub_1C12BB2A0()
{
  unint64_t result = qword_1EA1ADCB0;
  if (!qword_1EA1ADCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCB0);
  }
  return result;
}

uint64_t sub_1C12BB2F4@<X0>(char *a1@<X8>)
{
  return sub_1BFC8DB2C(a1);
}

uint64_t sub_1C12BB300@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C12BB364(uint64_t a1)
{
  unint64_t v2 = sub_1C12BAF54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12BB3A0(uint64_t a1)
{
  unint64_t v2 = sub_1C12BAF54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C12BB3DC(char *a1, char *a2)
{
  return sub_1C1494AE8(*a1, *a2);
}

uint64_t sub_1C12BB3E8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12BB468()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12BB4D4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12BB550@<X0>(char *a1@<X8>)
{
  return sub_1BFC8DB2C(a1);
}

void sub_1C12BB55C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6465786966;
  if (*v1) {
    uint64_t v2 = 0x6E6F697461727564;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C12BB598()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C12BB5F8()
{
  return sub_1C151EAEC();
}

uint64_t static FeedGroupPinning.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_1C12BB678@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedGroupPinning.init(from:)(a1, a2);
}

uint64_t sub_1C12BB690(void *a1)
{
  return FeedGroupPinning.encode(to:)(a1);
}

uint64_t FeedGroupPinning.description.getter()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0x6465786946;
  }
  sub_1C151E80C();
  sub_1C151EF6C();
  sub_1C151E80C();
  return 0;
}

uint64_t sub_1C12BB74C()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0x6465786946;
  }
  sub_1C151E80C();
  sub_1C151EF6C();
  sub_1C151E80C();
  return 0;
}

double FeedGroupPinningDuration.value.getter()
{
  return *(double *)v0;
}

uint64_t sub_1C12BB7F8(uint64_t a1)
{
  unint64_t v2 = sub_1C12BB9DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C12BB834(uint64_t a1)
{
  unint64_t v2 = sub_1C12BB9DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupPinningDuration.encode(to:)(void *a1)
{
  sub_1C12BBBE0(0, &qword_1EA1ADCB8, (uint64_t (*)(void))sub_1C12BB9DC, (uint64_t)&type metadata for FeedGroupPinningDuration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12BB9DC();
  sub_1C1520F0C();
  sub_1C15207EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C12BB9DC()
{
  unint64_t result = qword_1EA1ADCC0;
  if (!qword_1EA1ADCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCC0);
  }
  return result;
}

uint64_t FeedGroupPinningDuration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v14 = a2;
  sub_1C12BBBE0(0, &qword_1EA1ADCC8, (uint64_t (*)(void))sub_1C12BB9DC, (uint64_t)&type metadata for FeedGroupPinningDuration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12BB9DC();
  sub_1C1520EBC();
  if (!v2)
  {
    char v9 = v14;
    sub_1C15206BC();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    void *v9 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C12BBBE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C12BBC48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FeedGroupPinningDuration.init(from:)(a1, a2);
}

uint64_t sub_1C12BBC60(void *a1)
{
  sub_1C12BBBE0(0, &qword_1EA1ADCB8, (uint64_t (*)(void))sub_1C12BB9DC, (uint64_t)&type metadata for FeedGroupPinningDuration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C12BB9DC();
  sub_1C1520F0C();
  sub_1C15207EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedGroupPinning()
{
  return &type metadata for FeedGroupPinning;
}

ValueMetadata *type metadata accessor for FeedGroupPinningDuration()
{
  return &type metadata for FeedGroupPinningDuration;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupPinningDuration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12BBE88);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupPinningDuration.CodingKeys()
{
  return &type metadata for FeedGroupPinningDuration.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedGroupPinning.CodingType()
{
  return &type metadata for FeedGroupPinning.CodingType;
}

unsigned char *_s8NewsFeed16FeedGroupPinningO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12BBFA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupPinning.CodingKeys()
{
  return &type metadata for FeedGroupPinning.CodingKeys;
}

unint64_t sub_1C12BBFDC()
{
  unint64_t result = qword_1EA1ADCD0;
  if (!qword_1EA1ADCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCD0);
  }
  return result;
}

unint64_t sub_1C12BC034()
{
  unint64_t result = qword_1EA1ADCD8;
  if (!qword_1EA1ADCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCD8);
  }
  return result;
}

unint64_t sub_1C12BC08C()
{
  unint64_t result = qword_1EA1ADCE0;
  if (!qword_1EA1ADCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCE0);
  }
  return result;
}

unint64_t sub_1C12BC0E4()
{
  unint64_t result = qword_1EA1ADCE8;
  if (!qword_1EA1ADCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCE8);
  }
  return result;
}

unint64_t sub_1C12BC13C()
{
  unint64_t result = qword_1EA1ADCF0;
  if (!qword_1EA1ADCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADCF0);
  }
  return result;
}

unint64_t sub_1C12BC194()
{
  unint64_t result = qword_1EB85E9B0;
  if (!qword_1EB85E9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E9B0);
  }
  return result;
}

unint64_t sub_1C12BC1EC()
{
  unint64_t result = qword_1EB85E9A8;
  if (!qword_1EB85E9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E9A8);
  }
  return result;
}

unint64_t sub_1C12BC240()
{
  unint64_t result = qword_1EB85E9B8;
  if (!qword_1EB85E9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E9B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaAsset()
{
  return &type metadata for FormatMicaAsset;
}

uint64_t sub_1C12BC2A4()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC2B0()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC2BC()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC2C8()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC2D4()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC2E0()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC2EC()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC2F8()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC304()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC310()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC31C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC328()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC334()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC340()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC34C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC358()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC364()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC370()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC37C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC388()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC394()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3A0()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3AC()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3B8()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3C4()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3D0()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3DC()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3E8()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC3F4()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC400()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC40C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC418()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC424()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC430()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC43C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC448()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC454()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC460()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC46C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC478()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC484()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC490()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC49C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC4A8()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC4B4()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC4C0()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC4CC()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC4D8()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC4E4()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC4F0()
{
  sub_1C1520FAC();
  sub_1BFF27ECC();
  uint64_t v0 = sub_1C151FEBC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C12BC5B8()
{
  sub_1C1520FAC();
  sub_1BFF27ECC();
  uint64_t v0 = sub_1C151FEBC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C12BC660()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC66C()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC678()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC684()
{
  return sub_1C12BC690();
}

uint64_t sub_1C12BC690()
{
  sub_1C1520FAC();
  sub_1BFF27ECC();
  uint64_t v0 = sub_1C151FEBC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C12BC734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  *(void *)&long long v60 = a1;
  *(void *)&long long v62 = sub_1C1517A9C();
  *(void *)&long long v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  *(void *)&long long v63 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151772C();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151635C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for InternalErrorViewLayout.Context();
  MEMORY[0x1F4188790](v15 - 8);
  char v17 = (void *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C15180CC();
  if ((sub_1C151809C() & 1) == 0) {
    goto LABEL_5;
  }
  if (qword_1EB8931F8 != -1) {
    swift_once();
  }
  sub_1C12BD808(&qword_1EB893298, (void (*)(uint64_t))_s13InternalErrorCMa);
  sub_1C1516FBC();
  if ((v66 & 1) == 0)
  {
    sub_1C151634C();
    uint64_t v20 = sub_1C151633C();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1C12BD7A0(v3 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_model, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
    uint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_key);
    swift_retain();
    uint64_t v24 = (uint64_t)v17;
    sub_1C11B9C00(v20, v22, (uint64_t)v10, v23, v17);
    sub_1C15176FC();
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    sub_1C151768C();
    long long v29 = v64;
    uint64_t v30 = sub_1C151771C();
    __n128 v31 = MEMORY[0x1F4188790](v30);
    *((void *)&v49 - 2) = v29;
    *((void *)&v49 - 1) = v17;
    (*(void (**)(void, void, void, __n128))(v61 + 104))(v63, *MEMORY[0x1E4FAB8F8], v62, v31);
    sub_1C12BD724();
    swift_allocObject();
    sub_1C1517BEC();
    sub_1C1517BFC();
    uint64_t v32 = v67;
    uint64_t v33 = v68;
    long long v62 = v70;
    long long v63 = v69;
    long long v60 = v72;
    long long v61 = v71;
    long long v56 = v74;
    long long v57 = v73;
    long long v54 = v76;
    long long v55 = v75;
    long long v52 = v78;
    long long v53 = v77;
    long long v50 = v80;
    long long v51 = v79;
    long long v49 = v81;
    uint64_t v34 = v82;
    uint64_t v35 = v83;
    sub_1BFFFD508(0);
    uint64_t v36 = *(void *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8);
    unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    uint64_t v39 = v38 + v37;
    sub_1C0AEF7B8();
    uint64_t v41 = v39 + *(int *)(v40 + 48);
    sub_1C12BD7A0(v24, v39, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
    *(void *)uint64_t v41 = v26;
    *(void *)(v41 + 8) = v28;
    *(void *)(v41 + 16) = v32;
    *(void *)(v41 + 24) = v33;
    long long v42 = v62;
    *(_OWORD *)(v41 + 32) = v63;
    *(_OWORD *)(v41 + 48) = v42;
    long long v43 = v60;
    *(_OWORD *)(v41 + 64) = v61;
    *(_OWORD *)(v41 + 80) = v43;
    long long v44 = v56;
    *(_OWORD *)(v41 + 96) = v57;
    *(_OWORD *)(v41 + 112) = v44;
    long long v45 = v54;
    *(_OWORD *)(v41 + 128) = v55;
    *(_OWORD *)(v41 + 144) = v45;
    long long v46 = v52;
    *(_OWORD *)(v41 + 160) = v53;
    *(_OWORD *)(v41 + 176) = v46;
    long long v47 = v50;
    *(_OWORD *)(v41 + 192) = v51;
    *(_OWORD *)(v41 + 208) = v47;
    *(_OWORD *)(v41 + 224) = v49;
    *(void *)(v41 + 240) = v34;
    *(void *)(v41 + 248) = v35;
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = MEMORY[0x1E4FBC860];
    sub_1C0DDE310();
    sub_1C12BD808((unint64_t *)&qword_1EB879CC0, (void (*)(uint64_t))sub_1C0DDE310);
    sub_1BFEB0FD4();
    uint64_t v48 = sub_1C151E91C();
    swift_release();
    *(unsigned char *)a2 = 1;
    *(void *)(a2 + 8) = v26;
    *(void *)(a2 + 16) = v28;
    *(void *)(a2 + 24) = v32;
    *(void *)(a2 + 32) = v33;
    *(void *)(a2 + 40) = v48;
    *(void *)(a2 + 48) = v38;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v59);
    return sub_1C12BD850(v24, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
  }
  else
  {
LABEL_5:
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t v66 = MEMORY[0x1E4FBC860];
    sub_1C0DDE310();
    sub_1C12BD808((unint64_t *)&qword_1EB879CC0, (void (*)(uint64_t))sub_1C0DDE310);
    sub_1BFEB0FD4();
    uint64_t result = sub_1C151E91C();
    *(unsigned char *)a2 = 0;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(void *)(a2 + 40) = result;
    *(void *)(a2 + 48) = v18;
  }
  return result;
}

uint64_t sub_1C12BCF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v32 = a2;
  uint64_t v34 = a1;
  uint64_t v6 = sub_1C151635C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for GroupLayoutContext();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12BD7A0(a1, v3 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_model, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
  uint64_t v14 = type metadata accessor for InternalErrorGroupLayoutFactory();
  uint64_t v15 = swift_allocObject();
  sub_1C12BD7A0(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v16 = v30;
  sub_1C12BD7A0(v30, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1C151634C();
  uint64_t v29 = sub_1C151633C();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v44[3] = v14;
  v44[4] = sub_1C12BD808(&qword_1EB893598, (void (*)(uint64_t))type metadata accessor for InternalErrorGroupLayoutFactory);
  v44[0] = v15;
  type metadata accessor for GroupLayoutKey();
  uint64_t v19 = swift_allocObject();
  swift_retain();
  uint64_t v42 = sub_1C1520FAC();
  uint64_t v43 = v20;
  uint64_t v40 = 95;
  unint64_t v41 = 0xE100000000000000;
  uint64_t v38 = 45;
  unint64_t v39 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v21 = sub_1C151FEBC();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  *(void *)(v19 + 16) = v21;
  *(void *)(v19 + 24) = v23;
  uint64_t v24 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *uint64_t v24 = v29;
  v24[1] = v18;
  sub_1BFC66384((uint64_t)v44, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v25 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C((uint64_t)v13, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v33);
  uint64_t v26 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v11, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  swift_release();
  sub_1C12BD850(v16, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1C12BD850(v32, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1C12BD850(v34, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
  uint64_t result = v36;
  *(void *)(v36 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_key) = v19;
  return result;
}

uint64_t sub_1C12BD440()
{
  sub_1C12BD850(v0 + OBJC_IVAR____TtCV8NewsFeed11GroupLayout13InternalError_model, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12BD4C8()
{
  return _s13InternalErrorCMa();
}

uint64_t _s13InternalErrorCMa()
{
  uint64_t result = qword_1EB8932A0;
  if (!qword_1EB8932A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C12BD51C()
{
  uint64_t result = type metadata accessor for InternalErrorViewModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InternalErrorGroupLayoutFactory()
{
  return self;
}

uint64_t sub_1C12BD5DC()
{
  sub_1C0020AF0();
  swift_allocError();
  *(void *)uint64_t v0 = 1;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(unsigned char *)(v0 + 40) = 13;
  return swift_willThrow();
}

uint64_t sub_1C12BD640()
{
  return sub_1C1520FAC();
}

uint64_t sub_1C12BD674()
{
  return sub_1C12BC4F0();
}

uint64_t sub_1C12BD698(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C12BD808(&qword_1EB893590, (void (*)(uint64_t))type metadata accessor for InternalErrorGroupLayoutFactory);
  uint64_t result = sub_1C12BD808(&qword_1EB893588, (void (*)(uint64_t))type metadata accessor for InternalErrorGroupLayoutFactory);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C12BD71C(uint64_t a1)
{
  return sub_1C11BB6B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C12BD724()
{
  if (!qword_1EB8707B0)
  {
    sub_1C11BE81C();
    sub_1C11BE908();
    unint64_t v0 = sub_1C1517C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8707B0);
    }
  }
}

uint64_t sub_1C12BD7A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12BD808(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12BD850(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C12BD8B0@<X0>(void **a1@<X3>, char *a2@<X8>)
{
  unsigned int v4 = *a1;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allLikedArticleIDs);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(v4, sel_identifier);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  LOBYTE(v6) = sub_1BFF896B4(v7, v9, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    char v11 = 0;
  }
  else
  {
    uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allDislikedArticleIDs);
    swift_bridgeObjectRetain();
    id v13 = objc_msgSend(v4, sel_identifier);
    uint64_t v14 = sub_1C151E62C();
    uint64_t v16 = v15;

    LOBYTE(v13) = sub_1BFF896B4(v14, v16, v12);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13) {
      char v11 = 1;
    }
    else {
      char v11 = 2;
    }
  }
  *a2 = v11;
  return result;
}

uint64_t sub_1C12BDA58@<X0>(void **a1@<X3>, char *a2@<X8>)
{
  return sub_1C12BD8B0(a1, a2);
}

uint64_t sub_1C12BDA7C(void *a1, uint64_t a2)
{
  uint64_t result = sub_1C12BDB70(a2);
  if (result)
  {
    id v5 = objc_msgSend(a1, sel_allLikedArticleIDs);
    uint64_t v6 = sub_1C151EFBC();

    *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allLikedArticleIDs) = v6;
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(a1, sel_allDislikedArticleIDs);
    uint64_t v8 = sub_1C151EFBC();

    *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed28LikingCompleteCommandHandler_allDislikedArticleIDs) = v8;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C12BDB70(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v11 >= v6) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v6) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          if (!v12)
          {
            int64_t v13 = v11 + 4;
            if (v13 >= v6)
            {
LABEL_24:
              uint64_t v14 = 0;
              goto LABEL_25;
            }
            unint64_t v12 = *(void *)(v2 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                int64_t v8 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_27;
                }
                if (v8 >= v6) {
                  goto LABEL_24;
                }
                unint64_t v12 = *(void *)(v2 + 8 * v8);
                ++v13;
                if (v12) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v8 = v13;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_5:
    uint64_t result = (uint64_t)objc_msgSend(*(id *)(*(void *)(a1 + 56) + 8 * v10), sel_unsignedIntegerValue);
    if ((result & 0x20) != 0)
    {
      uint64_t v14 = 1;
LABEL_25:
      swift_release();
      return v14;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static FormatCodingDescriptiveStrategy.defaultValue.getter()
{
  return 0;
}

uint64_t static FormatCodingDescriptiveStrategy.shouldEncode(wrappedValue:)()
{
  return 0;
}

uint64_t static FormatCodingEmptyDescriptiveStrategy.defaultValue.getter()
{
  return 0;
}

uint64_t static FormatCodingEmptyDescriptiveStrategy.shouldEncode(wrappedValue:)()
{
  return 1;
}

uint64_t static FormatCodingEmptyDescriptiveStrategy.encode(wrappedValue:)()
{
  return 0;
}

unint64_t sub_1C12BDD9C(uint64_t a1)
{
  unint64_t result = sub_1C12BDDC4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12BDDC4()
{
  unint64_t result = qword_1EA1ADD80;
  if (!qword_1EA1ADD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADD80);
  }
  return result;
}

uint64_t sub_1C12BDE18()
{
  return sub_1C12BDE90(&qword_1EB880C50);
}

uint64_t sub_1C12BDE54()
{
  return sub_1C12BDE90((unint64_t *)&qword_1EB85C2F0);
}

uint64_t sub_1C12BDE90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFF97D54();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingDescriptiveStrategy()
{
  return &type metadata for FormatCodingDescriptiveStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingEmptyDescriptiveStrategy()
{
  return &type metadata for FormatCodingEmptyDescriptiveStrategy;
}

uint64_t sub_1C12BDF10@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 24))(&v17, v5, v6);
  if ((_BYTE)v17)
  {
    if (v17 == 1)
    {
      sub_1C151AA8C();
      swift_getWitnessTable();
      uint64_t v7 = sub_1C151F11C();
      BOOL v8 = __OFSUB__(v7, 1);
      uint64_t result = v7 - 1;
      if (v8)
      {
        __break(1u);
      }
      else
      {
        MEMORY[0x1C18BE280](result, a2);
        uint64_t v10 = sub_1C151677C();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 0, 1, v10);
      }
      return result;
    }
    uint64_t v16 = sub_1C151677C();
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v13 = v16;
    uint64_t v14 = a3;
    uint64_t v15 = 1;
  }
  else
  {
    MEMORY[0x1C18BE280](0, a2);
    uint64_t v11 = sub_1C151677C();
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a3;
    uint64_t v15 = 0;
  }
  return v12(v14, v15, 1, v13);
}

uint64_t sub_1C12BE0FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (_OWORD *)*a1;
  uint64_t v6 = sub_1C151D4AC();
  long long v7 = v5[6];
  v13[0] = v5[5];
  v13[1] = v7;
  long long v8 = v5[8];
  uint64_t v13[2] = v5[7];
  v13[3] = v8;
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
  swift_getWitnessTable();
  uint64_t v9 = sub_1C1520E6C();
  MEMORY[0x1F4188790](v9);
  FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(a2, 0, (_OWORD *)((char *)v13 - v10));
  sub_1C0A6E6E4(v9, (uint64_t)v13, a3);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 0, 1, v6);
}

uint64_t sub_1C12BE298@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v7 = (_OWORD *)*a2;
  uint64_t v8 = sub_1C151D4AC();
  long long v9 = v7[6];
  v25[0] = v7[5];
  v25[1] = v9;
  long long v10 = v7[8];
  void v25[2] = v7[7];
  v25[3] = v10;
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
  swift_getWitnessTable();
  uint64_t v11 = sub_1C1520E6C();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v23[-v15];
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v18 + 24))(&v24, v17, v18);
  if (v24)
  {
    if (v24 != 1)
    {
      uint64_t v21 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, v21, 1, v8);
    }
    FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(a3, 0, v14);
    uint64_t v19 = a4;
    uint64_t v20 = v11;
  }
  else
  {
    FeedAdGroupDataProvider.groupData(before:)(a3, v16);
    uint64_t v19 = a4;
    uint64_t v20 = v11;
  }
  sub_1C0A6E6E4(v20, (uint64_t)v25, v19);
  uint64_t v21 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, v21, 1, v8);
}

uint64_t sub_1C12BE4DC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v7 = (_OWORD *)*a2;
  uint64_t v8 = sub_1C151D4AC();
  long long v9 = v7[6];
  v25[0] = v7[5];
  v25[1] = v9;
  long long v10 = v7[8];
  void v25[2] = v7[7];
  v25[3] = v10;
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
  swift_getWitnessTable();
  uint64_t v11 = sub_1C1520E6C();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v23[-v15];
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v18 + 24))(&v24, v17, v18);
  if (v24)
  {
    if (v24 != 1)
    {
      uint64_t v21 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, v21, 1, v8);
    }
    FeedAdGroupDataProvider.groupData(after:)(a3, v14);
    uint64_t v19 = a4;
    uint64_t v20 = v11;
  }
  else
  {
    FeedAdGroupDataProvider.groupData(for:includeAdjacentGroups:)(a3, 0, v16);
    uint64_t v19 = a4;
    uint64_t v20 = v11;
  }
  sub_1C0A6E6E4(v20, (uint64_t)v25, v19);
  uint64_t v21 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, v21, 1, v8);
}

uint64_t sub_1C12BE720(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v60 = a5;
  long long v56 = a3;
  uint64_t v57 = a4;
  sub_1BFEE7B28(0, (unint64_t *)&unk_1EB871760, MEMORY[0x1E4F7AEE8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v58 = (char *)&v51 - v8;
  sub_1BFEE7B28(0, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v59 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (uint64_t)&v51 - v12;
  uint64_t v54 = sub_1C151D4AC();
  uint64_t v61 = *(void *)(v54 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v54);
  long long v53 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v52 = (char *)&v51 - v15;
  uint64_t v16 = sub_1C151D4FC();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v17 = sub_1C151D51C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  sub_1C151D50C();
  sub_1C12BF2F8(&qword_1EB871730, MEMORY[0x1E4F7AC60]);
  sub_1C151D7EC();
  uint64_t v23 = v20;
  uint64_t v24 = v61;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  uint64_t v25 = v62;
  __swift_project_boxed_opaque_existential_1(v62, v62[3]);
  uint64_t v26 = sub_1C12BF2F8(&qword_1EB871718, MEMORY[0x1E4F7AC08]);
  uint64_t v27 = v54;
  sub_1C151D7EC();
  uint64_t v28 = v55;
  sub_1C12BEE80(v57, v55);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  int v30 = v29(v28, 1, v27);
  uint64_t v31 = (unsigned int *)MEMORY[0x1E4F7AEE0];
  uint64_t v51 = v26;
  if (v30 == 1)
  {
    sub_1BFEE8348(v28, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
    uint64_t v32 = (uint64_t)v58;
  }
  else
  {
    uint64_t v33 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v52, v28, v27);
    uint64_t v34 = v25[3];
    uint64_t v57 = v25[4];
    long long v56 = __swift_project_boxed_opaque_existential_1(v25, v34);
    uint64_t v35 = v27;
    uint64_t v36 = *MEMORY[0x1E4F7AED0];
    uint64_t v37 = sub_1C151D8DC();
    uint64_t v32 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v58, v36, v37);
    uint64_t v38 = *v31;
    uint64_t v39 = sub_1C151D8EC();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = v38;
    uint64_t v27 = v35;
    uint64_t v24 = v61;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 104))(v32, v41, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
    sub_1C151D7DC();
    sub_1BFEE8348(v32, (unint64_t *)&unk_1EB871760, MEMORY[0x1E4F7AEE8]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v33, v27);
  }
  uint64_t v42 = v59;
  sub_1C12BEE80(v60, v59);
  if (v29(v42, 1, v27) == 1) {
    return sub_1BFEE8348(v42, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  }
  long long v44 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v53, v42, v27);
  __swift_project_boxed_opaque_existential_1(v62, v62[3]);
  uint64_t v45 = v27;
  uint64_t v46 = *MEMORY[0x1E4F7AED8];
  uint64_t v47 = sub_1C151D8DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v32, v46, v47);
  uint64_t v48 = *MEMORY[0x1E4F7AEE0];
  uint64_t v49 = sub_1C151D8EC();
  uint64_t v50 = *(void *)(v49 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 104))(v32, v48, v49);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v32, 0, 1, v49);
  sub_1C151D7DC();
  sub_1BFEE8348(v32, (unint64_t *)&unk_1EB871760, MEMORY[0x1E4F7AEE8]);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v44, v45);
}

uint64_t sub_1C12BEE80(uint64_t a1, uint64_t a2)
{
  sub_1BFEE7B28(0, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12BEF00()
{
  uint64_t v1 = sub_1C151D4AC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  sub_1BFEE7B28(0, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v7 = (v4 + v6) & ~v6;
  unint64_t v8 = (*(void *)(*(void *)(v5 - 8) + 64) + v6 + v7) & ~v6;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v9 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v9(v0 + v3, v1);
  unint64_t v10 = v0 + v7;
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (!v11(v10, 1, v1)) {
    v9(v10, v1);
  }
  if (!v11(v0 + v8, 1, v1)) {
    v9(v0 + v8, v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1C12BF0D8(uint64_t a1, uint64_t a2)
{
  sub_1BFEE7B28(0, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12BF158(void *a1)
{
  uint64_t v3 = *(void *)(sub_1C151D4AC() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_1BFEE7B28(0, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  unint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = v1 + ((*(void *)(*(void *)(v6 - 8) + 64) + v7 + v8) & ~v7);
  return sub_1C12BE720(a1, (void *)(v1 + 16), (void *)(v1 + v4), v1 + v8, v9);
}

uint64_t sub_1C12BF278()
{
  return sub_1C12BF2A8(MEMORY[0x1E4F14790]);
}

uint64_t sub_1C12BF290()
{
  return sub_1C12BF2A8(MEMORY[0x1E4F14798]);
}

uint64_t sub_1C12BF2A8(uint64_t (*a1)(void))
{
  return a1(*(void *)(v1 + *(void *)(*(void *)v1 + 168)));
}

uint64_t method lookup function for FeedNativeAdRequester(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedNativeAdRequester);
}

uint64_t dispatch thunk of FeedNativeAdRequester.__allocating_init(blueprint:groupDataProvider:adManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C12BF2F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatPuzzleTypeBinding.Text.text(from:config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 56);
  uint64_t v4 = *(void *)v2;
  if (*(unsigned char *)(v2 + 8) == 1)
  {
    if (v4)
    {
      id v5 = objc_msgSend(v3, sel_nameCompact);
      if (v5)
      {
        id v6 = v5;
        goto LABEL_19;
      }
      return 0;
    }
    id v6 = objc_msgSend(v3, sel_name);
LABEL_19:
    uint64_t v18 = sub_1C151E62C();

    return v18;
  }
  if (!*(void *)(a2 + 40)) {
    return 0;
  }
  uint64_t v7 = *(void *)(a2 + 72);
  id v8 = objc_msgSend(v3, sel_identifier);
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  if (!*(void *)(v7 + 16)) {
    goto LABEL_16;
  }
  unint64_t v12 = sub_1BFEF2D8C(v9, v11);
  if ((v13 & 1) == 0) {
    goto LABEL_16;
  }
  unint64_t v14 = *(void *)(*(void *)(v7 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v14 >> 62))
  {
    if (v4 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C15204BC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 >= v19) {
    goto LABEL_16;
  }
LABEL_11:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x1C18C7CB0](v4, v14);
    goto LABEL_15;
  }
  if (v4 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v4 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v14 + 8 * v4 + 32);
LABEL_15:
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v17, sel_name);

    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t static FormatPuzzleTypeBinding.Text.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

uint64_t FormatPuzzleTypeBinding.Text.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static FormatPuzzleTypeBinding.Text.CodingType.allCases.getter()
{
  return &unk_1F1B8A4E0;
}

uint64_t FormatPuzzleTypeBinding.Text.CodingType.rawValue.getter()
{
  uint64_t v1 = 0x747865546B6E6172;
  if (*v0 != 1) {
    uint64_t v1 = 0x706D6F43656D616ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C12BF610(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1482434(*a1, *a2);
}

uint64_t sub_1C12BF61C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12BF6C0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12BF750()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12BF7F0@<X0>(char *a1@<X8>)
{
  return FormatPuzzleTypeBinding.Text.CodingType.init(rawValue:)(a1);
}

void sub_1C12BF7FC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x747865546B6E6172;
  if (v2 != 1)
  {
    uint64_t v5 = 0x706D6F43656D616ELL;
    unint64_t v4 = 0xEB00000000746361;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701667182;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C12BF85C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C12BF8BC()
{
  return sub_1C151EAEC();
}

void sub_1C12BF90C(void *a1@<X8>)
{
  *a1 = &unk_1F1B6B4A8;
}

uint64_t sub_1C12BF91C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleTypeBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1C12BF934(void *a1)
{
  return FormatPuzzleTypeBinding.Text.encode(to:)(a1);
}

uint64_t sub_1C12BF94C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

unint64_t sub_1C12BF98C()
{
  unint64_t result = qword_1EA1ADD88;
  if (!qword_1EA1ADD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADD88);
  }
  return result;
}

unint64_t sub_1C12BF9E4()
{
  unint64_t result = qword_1EA1ADD90;
  if (!qword_1EA1ADD90)
  {
    sub_1C12BFA3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADD90);
  }
  return result;
}

void sub_1C12BFA3C()
{
  if (!qword_1EA1ADD98)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1ADD98);
    }
  }
}

unint64_t sub_1C12BFA94(uint64_t a1)
{
  unint64_t result = sub_1C12BFABC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12BFABC()
{
  unint64_t result = qword_1EA1ADDA0;
  if (!qword_1EA1ADDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDA0);
  }
  return result;
}

unint64_t sub_1C12BFB10(void *a1)
{
  a1[1] = sub_1C08654E4();
  a1[2] = sub_1C0905AE0();
  unint64_t result = sub_1C12BFB48();
  a1[3] = result;
  return result;
}

unint64_t sub_1C12BFB48()
{
  unint64_t result = qword_1EA1ADDA8;
  if (!qword_1EA1ADDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Text()
{
  return &type metadata for FormatPuzzleTypeBinding.Text;
}

unsigned char *_s4TextO10CodingTypeOwst_4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C12BFC78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Text.CodingType()
{
  return &type metadata for FormatPuzzleTypeBinding.Text.CodingType;
}

unint64_t sub_1C12BFCB0()
{
  unint64_t result = qword_1EB8613B0;
  if (!qword_1EB8613B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8613B0);
  }
  return result;
}

void *sub_1C12BFD04(void *a1, uint64_t a2)
{
  unsigned int v4 = (void *)sub_1C151E24C();
  uint64_t v5 = *(v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (void *)((char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v7 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, void *))(v5 + 104))(v7, *MEMORY[0x1E4FBCBD8], v4);
  char v8 = sub_1C151E26C();
  (*(void (**)(uint64_t *, void *))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v17 = LayeredMediaLayerProvider.syncLayers()();
    swift_retain();
    uint64_t v18 = sub_1C0198FB4(v17);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v19 = a1 + 2;
    uint64_t v21 = a1[5];
    uint64_t v20 = a1[6];
    __swift_project_boxed_opaque_existential_1(v19, v21);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20);
    uint64_t v24 = v23;
  }
  else
  {
    __break(1u);
    swift_once();
    id v9 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    uint64_t v27[2] = v4;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    uint64_t v11 = v28;
    unint64_t v12 = v29;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_1BFE9C558();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v12;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    char v13 = a1 + 2;
    uint64_t v15 = a1[5];
    uint64_t v14 = a1[6];
    __swift_project_boxed_opaque_existential_1(v13, v15);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    uint64_t v24 = v16;

    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for LayeredMediaViewModel();
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = v22;
  v25[3] = v24;
  _OWORD v25[4] = v18;
  v25[5] = a2;
  swift_bridgeObjectRetain();
  return v25;
}

uint64_t FormatLayeredMediaNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatLayeredMediaNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatLayeredMediaNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayeredMediaNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 80);
}

uint64_t FormatLayeredMediaNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FormatLayeredMediaNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayeredMediaNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatLayeredMediaNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatLayeredMediaNode.animation.getter()
{
  return swift_retain();
}

unint64_t FormatLayeredMediaNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 56);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatLayeredMediaNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
  return swift_retain();
}

uint64_t FormatLayeredMediaNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatLayeredMediaNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatLayeredMediaNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *(void *)(v1 + 88) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatLayeredMediaNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatLayeredMediaNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatLayeredMediaNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 112);
  *(void *)a1 = *(void *)(v1 + 104);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatLayeredMediaNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatLayeredMediaNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatLayeredMediaNode.__allocating_init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13)
{
  uint64_t v17 = swift_allocObject();
  FormatLayeredMediaNode.init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  return v17;
}

uint64_t FormatLayeredMediaNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFF322A8(*(void *)(v0 + 56));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayeredMediaNode.__deallocating_deinit()
{
  FormatLayeredMediaNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12C06B4(uint64_t a1)
{
  uint64_t result = sub_1C12C07F8(&qword_1EA1ADDB0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C12C06F8(void *a1)
{
  a1[1] = sub_1C12C07F8((unint64_t *)&unk_1EB87C148);
  a1[2] = sub_1C12C07F8((unint64_t *)&unk_1EB860630);
  uint64_t result = sub_1C12C07F8(&qword_1EA1ADDB8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C12C0784(void *a1)
{
  return FormatLayeredMediaNode.encode(to:)(a1);
}

uint64_t sub_1C12C07A8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed22FormatLayeredMediaNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C12C07B4(uint64_t a1)
{
  uint64_t result = sub_1C12C07F8(&qword_1EA1ADDC0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C12C07F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatLayeredMediaNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12C0838@<X0>(unint64_t a1@<X0>, void *a2@<X1>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v64 = a7;
  uint64_t v68 = a6;
  uint64_t v63 = a5;
  uint64_t v60 = a2;
  unint64_t v61 = a1;
  uint64_t v65 = a8;
  uint64_t v67 = a15;
  uint64_t v66 = a14;
  sub_1BFF47190(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v62 = (uint64_t)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v59 - v27;
  uint64_t v29 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C15176AC();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_1C15176EC();
  v77[0] = v34;
  v77[1] = v36;
  *(double *)&v77[2] = a11;
  *(double *)&uint64_t v77[3] = a12;
  v77[4] = v37;
  if (a3) {
    uint64_t v38 = &unk_1F1B8A508;
  }
  else {
    uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v39 = swift_retain();
  uint64_t v40 = sub_1C12C10A8(v39, (uint64_t)v38, a4, (uint64_t)v77, v60);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v68;
  *(void *)uint64_t v32 = v63;
  *((void *)v32 + 1) = v41;
  *((double *)v32 + 2) = a13;
  *((void *)v32 + 3) = v40;
  v32[32] = a3;
  swift_storeEnumTagMultiPayload();
  sub_1C0079BF0((uint64_t)v32, (uint64_t)v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v29);
  uint64_t v42 = v62;
  sub_1C0079C08((uint64_t)v28, v62);
  swift_beginAccess();
  uint64_t v64 = v40;
  swift_retain_n();
  uint64_t v43 = v67;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_1BFF3D9D4(v42, v66, v43);
  swift_endAccess();
  sub_1C12C1280((uint64_t)v28);
  sub_1BFF40FB4((uint64_t)v32);
  unint64_t v44 = v61;
  uint64_t v45 = *(void *)(v61 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v46 = *(void *)(a16 + 16);
  uint64_t v47 = *(void *)(a16 + 24);
  uint64_t v48 = *(void *)(v45 + 40);
  if (v48)
  {
    uint64_t v74 = *(void *)(v45 + 32);
    uint64_t v75 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v63 = v74;
    uint64_t v62 = v75;
    uint64_t v46 = *(void *)(a16 + 16);
    uint64_t v47 = *(void *)(a16 + 24);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = v46;
    uint64_t v62 = v47;
  }
  uint64_t v49 = *(void *)(a16 + 64);
  if (v49)
  {
    uint64_t v50 = *(void *)(v49 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v50 = 0;
  }
  uint64_t v51 = swift_allocObject();
  uint64_t v76 = v50;
  swift_beginAccess();
  uint64_t v60 = *(void **)(a16 + 80);
  swift_beginAccess();
  unint64_t v72 = *(void *)(a16 + 88);
  unint64_t v52 = v72;
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v52);
  sub_1BFE6EF70(v44, &v73);
  sub_1BFF0056C(v52);
  swift_beginAccess();
  char v53 = *(unsigned char *)(a16 + 96);
  char v54 = *(unsigned char *)(a16 + 112);
  uint64_t v70 = *(void *)(a16 + 104);
  char v71 = v54;
  sub_1C1517EFC();
  uint64_t v55 = v69;
  type metadata accessor for FormatLayeredMediaNodeLayoutAttributes();
  swift_allocObject();
  swift_retain();
  uint64_t v56 = v67;
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1C0F3359C(v66, v56, v63, v62, v46, v47, &v76, (uint64_t)v60, a9, a10, a11, a12, &v73, v53, &v70, v55, a17);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t result = swift_release();
  *(void *)(v51 + 16) = v57;
  uint64_t *v65 = v51 | 0x6000000000000004;
  return result;
}

uint64_t sub_1C12C0E0C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12C0E5C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12C0EAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return result;
}

uint64_t sub_1C12C0EF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  return result;
}

unint64_t sub_1C12C0F38@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 88);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C12C0F88@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 96);
  return result;
}

uint64_t sub_1C12C0FD0(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_1C12C1014@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatLayeredMediaNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatLayeredMediaNode);
}

uint64_t dispatch thunk of FormatLayeredMediaNode.__allocating_init(identifier:content:style:animation:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C12C10A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void v22[3] = type metadata accessor for LayeredMediaLoader();
  v22[4] = &protocol witness table for LayeredMediaLoader;
  v22[0] = a1;
  uint64_t v10 = a5[5];
  uint64_t v11 = a5[6];
  __swift_project_boxed_opaque_existential_1(a5 + 2, v10);
  unint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v11 + 8);
  swift_retain();
  char v13 = (void *)v12(v22, a2, v10, v11);
  uint64_t v14 = sub_1C12BFD04(v13, a3);
  uint64_t v15 = a5[8];
  swift_retain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1C136E668(v16, v15, a4);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for LayeredMediaRenderedViewModel();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  long long v18 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v17 + 24) = *(_OWORD *)a4;
  *(_OWORD *)(v17 + 40) = v18;
  *(void *)(v17 + 56) = *(void *)(a4 + 32);
  sub_1C009144C();
  swift_retain();
  uint64_t v19 = (void *)sub_1C1518E7C();
  sub_1BFF47190(0, (unint64_t *)&qword_1EB85DE98, (uint64_t (*)(uint64_t))sub_1C009144C, MEMORY[0x1E4FBB320]);
  sub_1C0064D60();
  uint64_t v20 = sub_1C1518FAC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  *(void *)(v17 + 64) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v17;
}

uint64_t sub_1C12C1280(uint64_t a1)
{
  sub_1BFF47190(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12C130C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t IssueService.__allocating_init(issuesFetchOperationFactory:issueReadingHistory:)(long long *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1BFC773DC(a1, v4 + 16);
  *(void *)(v4 + 56) = a2;
  return v4;
}

uint64_t sub_1C12C1398(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BFC4483C();
    uint64_t v4 = sub_1C151EBCC();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t IssueServiceType.fetchIssue(for:)()
{
  return sub_1C151911C();
}

void sub_1C12C14C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1BFC53CA4(0);
  swift_retain();
  sub_1C151932C();
  id v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1BFD35658;
  v9[5] = v8;
  swift_retain();
  uint64_t v10 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  swift_retain();
  unint64_t v12 = (void *)sub_1C1518E7C();
  sub_1C151903C();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_1C12C166C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BFEF9A78();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 8);
  swift_bridgeObjectRetain();
  uint64_t v11 = v10(v9, a4, a5);
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1C12C1720(uint64_t *a1, void (*a2)(void), uint64_t a3, void (*a4)(void *))
{
  uint64_t v6 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1C15204BC()) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1C12C212C();
    uint64_t v10 = (void *)swift_allocError();
    a2();

    return;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x1C18C7CB0](0, v6);
    goto LABEL_6;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v6 + 32);
LABEL_6:
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    a4(v9);

    return;
  }
  __break(1u);
}

uint64_t IssueServiceType.cachedIssue(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFEF9A78();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16);
  swift_bridgeObjectRetain();
  unint64_t v10 = v9(v8, a3, a4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v13 = (id)MEMORY[0x1C18C7CB0](0, v10);
    goto LABEL_6;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(v10 + 32);
LABEL_6:
    uint64_t v12 = (uint64_t)v13;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t IssueService.init(issuesFetchOperationFactory:issueReadingHistory:)(long long *a1, uint64_t a2)
{
  sub_1BFC773DC(a1, v2 + 16);
  *(void *)(v2 + 56) = a2;
  return v2;
}

void sub_1C12C1988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t IssueService.fetchIssues(for:)()
{
  return sub_1C151911C();
}

uint64_t sub_1C12C1A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = a5[5];
  uint64_t v14 = a5[6];
  __swift_project_boxed_opaque_existential_1(a5 + 2, v13);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  uint64_t v16 = (void *)v15(a6, v13, v14);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = sub_1BFD35690;
  v17[5] = v12;
  void v20[4] = sub_1C12C2120;
  v20[5] = v17;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  void v20[2] = sub_1C12C1398;
  void v20[3] = &block_descriptor_12_1;
  long long v18 = _Block_copy(v20);
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_setFetchCompletionHandler_, v18);
  _Block_release(v18);
  sub_1C15182FC();
  sub_1C15182BC();
  if (objc_msgSend(self, sel_isMainThread)) {
    sub_1C15182DC();
  }
  else {
    objc_msgSend(v16, sel_start);
  }

  return swift_release();
}

void sub_1C12C1C14(uint64_t a1, id a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void))
{
  if (a2)
  {
    id v6 = a2;
    id v7 = a2;
    uint64_t v8 = (uint64_t)v6;
  }
  else
  {
    if (a1)
    {
      a5();
      return;
    }
    sub_1C12C212C();
    uint64_t v8 = swift_allocError();
    id v6 = (id)v8;
  }
  a3(v8);
}

uint64_t IssueService.cachedIssues(for:)(uint64_t a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
  id v6 = objc_msgSend(self, sel_cachedOnlyCachePolicy);
  objc_msgSend(v5, sel_setCachePolicy_, v6);

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v8 = (uint64_t *)(v7 + 16);
  v12[4] = sub_1C12C209C;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1C12C1398;
  v12[3] = &block_descriptor_103;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_setFetchCompletionHandler_, v9);
  _Block_release(v9);
  objc_msgSend(v5, sel_start);
  objc_msgSend(v5, sel_waitUntilFinishedWithTimeout_, 1.79769313e308);

  swift_beginAccess();
  uint64_t v10 = *v8;
  swift_bridgeObjectRetain();
  swift_release();
  return v10;
}

uint64_t sub_1C12C1E74(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v4 = result;
    swift_beginAccess();
    *(void *)(a3 + 16) = v4;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t IssueService.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t IssueService.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12C1F44()
{
  return sub_1C151911C();
}

uint64_t sub_1C12C1FD4(uint64_t a1)
{
  return IssueService.cachedIssues(for:)(a1);
}

uint64_t sub_1C12C1FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C12C1A44(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1C12C2000(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C12C2064()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12C209C(uint64_t a1, uint64_t a2)
{
  return sub_1C12C1E74(a1, a2, v2);
}

uint64_t dispatch thunk of IssueServiceType.fetchIssues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of IssueServiceType.cachedIssues(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for IssueService()
{
  return self;
}

uint64_t method lookup function for IssueService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IssueService);
}

uint64_t dispatch thunk of IssueService.__allocating_init(issuesFetchOperationFactory:issueReadingHistory:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1C12C2120(uint64_t a1, void *a2)
{
  sub_1C12C1C14(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

unint64_t sub_1C12C212C()
{
  unint64_t result = qword_1EA1ADDC8;
  if (!qword_1EA1ADDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDC8);
  }
  return result;
}

uint64_t sub_1C12C2180()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12C21B8()
{
  return sub_1C12C166C(v0[4], v0[5], v0[6], v0[2], v0[3]);
}

void sub_1C12C21E0(uint64_t *a1)
{
  sub_1C12C1720(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

unsigned char *storeEnumTagSinglePayload for IssueServiceErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C12C229CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueServiceErrors()
{
  return &type metadata for IssueServiceErrors;
}

unint64_t sub_1C12C22D8()
{
  unint64_t result = qword_1EA1ADDD0;
  if (!qword_1EA1ADDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDD0);
  }
  return result;
}

uint64_t FormatBorderEdge.rawValue.getter()
{
  uint64_t result = 7368564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696461656CLL;
      break;
    case 2:
      uint64_t result = 0x676E696C69617274;
      break;
    case 3:
      uint64_t result = 0x6D6F74746F62;
      break;
    case 4:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C12C23E0(uint64_t a1, unsigned char *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  double v12 = *(double *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *v7;
  double v15 = a7 * -0.5;
  if (*a2 == 1) {
    double v15 = 0.0;
  }
  if (*a2) {
    double v16 = v15;
  }
  else {
    double v16 = a7 * 0.5;
  }
  double v102 = v12;
  if (v13) {
    double v17 = v12;
  }
  else {
    double v17 = 0.0;
  }
  BOOL v18 = v14 == 4 || v13 == 0;
  uint64_t v103 = v13;
  if (v18)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v20)
    {
LABEL_29:
      uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v19 = v37;
    uint64_t v20 = *(void *)(v37 + 16);
    if (!v20) {
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v24 = *(unsigned __int8 *)(v19 + v21++ + 32);
    switch(v24)
    {
      case 1:
        v108.origin.CGFloat x = a3;
        v108.origin.CGFloat y = a4;
        v108.size.width = a5;
        v108.size.height = a6;
        double v25 = v16 + v17 + CGRectGetMinX(v108);
        v109.origin.CGFloat x = a3;
        v109.origin.CGFloat y = a4;
        v109.size.width = a5;
        v109.size.height = a6;
        double v26 = v16 + v17 + CGRectGetMinY(v109);
        id v27 = objc_msgSend(self, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 0, v25, v26, v17, 4.71238898, 3.14159265);
        goto LABEL_23;
      case 2:
        v110.origin.CGFloat x = a3;
        v110.origin.CGFloat y = a4;
        v110.size.width = a5;
        v110.size.height = a6;
        CGFloat v28 = CGRectGetMaxX(v110) - v17 - v16;
        v111.origin.CGFloat x = a3;
        v111.origin.CGFloat y = a4;
        v111.size.width = a5;
        v111.size.height = a6;
        double v29 = v16 + v17 + CGRectGetMinY(v111);
        id v27 = objc_msgSend(self, (SEL)&selRef_shadowIntroToSportsGroupOntologyLevelConfig + 5, 0, v28, v29, v17, 0.0, 4.71238898);
        goto LABEL_23;
      case 3:
        v112.origin.CGFloat x = a3;
        v112.origin.CGFloat y = a4;
        v112.size.width = a5;
        v112.size.height = a6;
        double v30 = v16 + v17 + CGRectGetMinX(v112);
        v113.origin.CGFloat x = a3;
        v113.origin.CGFloat y = a4;
        v113.size.width = a5;
        v113.size.height = a6;
        CGFloat v31 = CGRectGetMaxY(v113) - v17 - v16;
        id v27 = objc_msgSend(self, (SEL)&selRef_shadowIntroToSportsGroupOntologyLevelConfig + 5, 0, v30, v31, v17, 3.14159265, 1.57079633);
        goto LABEL_23;
      case 4:
        v114.origin.CGFloat x = a3;
        v114.origin.CGFloat y = a4;
        v114.size.width = a5;
        v114.size.height = a6;
        CGFloat v32 = CGRectGetMaxX(v114) - v17 - v16;
        v115.origin.CGFloat x = a3;
        v115.origin.CGFloat y = a4;
        v115.size.width = a5;
        v115.size.height = a6;
        CGFloat v33 = CGRectGetMaxY(v115) - v17 - v16;
        id v27 = objc_msgSend(self, (SEL)&selRef_shadowIntroToSportsGroupOntologyLevelConfig + 5, 0, v32, v33, v17, 1.57079633, 0.0);
LABEL_23:
        id v34 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_1C0EE2568(0, v22[2] + 1, 1, v22);
        }
        unint64_t v36 = v22[2];
        unint64_t v35 = v22[3];
        if (v36 >= v35 >> 1) {
          uint64_t v22 = sub_1C0EE2568((void *)(v35 > 1), v36 + 1, 1, v22);
        }
        _OWORD v22[2] = v36 + 1;
        uint64_t v23 = &v22[5 * v36];
        v23[4] = v34;
        v23 += 4;
        v23[1] = 0;
        v23[2] = 0;
        v23[3] = 0;
        *((unsigned char *)v23 + 32) = 1;
        break;
      default:
        break;
    }
  }
  while (v20 != v21);
  swift_bridgeObjectRelease();
LABEL_30:
  double v38 = v17 + v16;
  switch(v14)
  {
    case 1:
      double v44 = 0.0;
      double v45 = 0.0;
      if (!v20) {
        goto LABEL_106;
      }
      swift_bridgeObjectRetain();
      uint64_t v46 = 0;
      while (2)
      {
        uint64_t v47 = v19 + v46++;
        switch(*(unsigned char *)(v47 + 32))
        {
          case 1:
            swift_bridgeObjectRelease();
            goto LABEL_104;
          default:
            char v48 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if (v48)
            {
LABEL_104:
              double v45 = v38;
              goto LABEL_105;
            }
            if (v20 != v46) {
              continue;
            }
            double v45 = 0.0;
LABEL_105:
            swift_bridgeObjectRelease();
LABEL_106:
            v124.origin.CGFloat x = a3;
            v124.origin.CGFloat y = a4;
            v124.size.width = a5;
            v124.size.height = a6;
            double Height = CGRectGetHeight(v124);
            if (v20)
            {
              swift_bridgeObjectRetain();
              uint64_t v89 = 0;
              while (2)
              {
                uint64_t v90 = v19 + v89++;
                switch(*(unsigned char *)(v90 + 32))
                {
                  case 3:
                    swift_bridgeObjectRelease();
                    break;
                  default:
                    char v91 = sub_1C1520A9C();
                    swift_bridgeObjectRelease();
                    if ((v91 & 1) == 0)
                    {
                      if (v20 != v89) {
                        continue;
                      }
                      double v38 = 0.0;
                    }
                    break;
                }
                break;
              }
              swift_bridgeObjectRelease();
              double v44 = v38;
            }
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v22 = sub_1C0EE2568(0, v22[2] + 1, 1, v22);
            }
            unint64_t v93 = v22[2];
            unint64_t v92 = v22[3];
            if (v93 >= v92 >> 1) {
              uint64_t v22 = sub_1C0EE2568((void *)(v92 > 1), v93 + 1, 1, v22);
            }
            _OWORD v22[2] = v93 + 1;
            int v87 = (double *)&v22[5 * v93];
            v87[4] = v16;
            v87[5] = v45;
            v87[6] = v16;
            _OWORD v87[7] = Height - v44;
            break;
        }
        goto LABEL_137;
      }
    case 2:
      double v104 = v17 + v16;
      v116.origin.CGFloat x = a3;
      v116.origin.CGFloat y = a4;
      v116.size.width = a5;
      v116.size.height = a6;
      double Width = CGRectGetWidth(v116);
      double v49 = 0.0;
      double v50 = 0.0;
      if (v20)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = 0;
        double v50 = v104;
        while (2)
        {
          uint64_t v52 = v19 + v51++;
          switch(*(unsigned char *)(v52 + 32))
          {
            case 2:
              swift_bridgeObjectRelease();
              break;
            default:
              char v53 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              if ((v53 & 1) == 0)
              {
                if (v20 != v51) {
                  continue;
                }
                double v50 = 0.0;
              }
              break;
          }
          break;
        }
        swift_bridgeObjectRelease();
      }
      v117.origin.CGFloat x = a3;
      v117.origin.CGFloat y = a4;
      v117.size.width = a5;
      v117.size.height = a6;
      double v54 = CGRectGetWidth(v117);
      v118.origin.CGFloat x = a3;
      v118.origin.CGFloat y = a4;
      v118.size.width = a5;
      v118.size.height = a6;
      double v55 = CGRectGetHeight(v118);
      if (!v20) {
        goto LABEL_122;
      }
      swift_bridgeObjectRetain();
      uint64_t v56 = 0;
      while (2)
      {
        uint64_t v57 = v19 + v56++;
        switch(*(unsigned char *)(v57 + 32))
        {
          case 4:
            swift_bridgeObjectRelease();
            goto LABEL_120;
          default:
            char v58 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if (v58)
            {
LABEL_120:
              double v49 = v104;
              goto LABEL_121;
            }
            if (v20 != v56) {
              continue;
            }
            double v49 = 0.0;
LABEL_121:
            swift_bridgeObjectRelease();
LABEL_122:
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v22 = sub_1C0EE2568(0, v22[2] + 1, 1, v22);
            }
            unint64_t v95 = v22[2];
            unint64_t v94 = v22[3];
            if (v95 >= v94 >> 1) {
              uint64_t v22 = sub_1C0EE2568((void *)(v94 > 1), v95 + 1, 1, v22);
            }
            double v96 = v54 - v16;
            double v97 = v55 - v49;
            _OWORD v22[2] = v95 + 1;
            int v87 = (double *)&v22[5 * v95];
            v87[4] = Width - v16;
            v87[5] = v50;
            break;
        }
        goto LABEL_136;
      }
    case 3:
      double v59 = v17 + v16;
      double v60 = 0.0;
      double v61 = 0.0;
      if (v20)
      {
        swift_bridgeObjectRetain();
        uint64_t v62 = 0;
        double v61 = v59;
        while (2)
        {
          uint64_t v63 = v19 + v62++;
          switch(*(unsigned char *)(v63 + 32))
          {
            case 3:
              swift_bridgeObjectRelease();
              break;
            default:
              char v64 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              if ((v64 & 1) == 0)
              {
                if (v20 != v62) {
                  continue;
                }
                double v61 = 0.0;
              }
              break;
          }
          break;
        }
        swift_bridgeObjectRelease();
      }
      v119.origin.CGFloat x = a3;
      v119.origin.CGFloat y = a4;
      v119.size.width = a5;
      v119.size.height = a6;
      double v107 = CGRectGetHeight(v119);
      v120.origin.CGFloat x = a3;
      v120.origin.CGFloat y = a4;
      v120.size.width = a5;
      v120.size.height = a6;
      double v105 = CGRectGetWidth(v120);
      if (!v20) {
        goto LABEL_131;
      }
      swift_bridgeObjectRetain();
      uint64_t v65 = 0;
      while (2)
      {
        uint64_t v66 = v19 + v65++;
        switch(*(unsigned char *)(v66 + 32))
        {
          case 4:
            swift_bridgeObjectRelease();
            goto LABEL_129;
          default:
            char v67 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            if ((v67 & 1) == 0)
            {
              if (v20 == v65)
              {
                double v60 = 0.0;
                goto LABEL_130;
              }
              continue;
            }
LABEL_129:
            double v60 = v59;
LABEL_130:
            swift_bridgeObjectRelease();
LABEL_131:
            swift_bridgeObjectRelease();
            v125.origin.CGFloat x = a3;
            v125.origin.CGFloat y = a4;
            v125.size.width = a5;
            v125.size.height = a6;
            double v98 = CGRectGetHeight(v125);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v22 = sub_1C0EE2568(0, v22[2] + 1, 1, v22);
            }
            unint64_t v100 = v22[2];
            unint64_t v99 = v22[3];
            if (v100 >= v99 >> 1) {
              uint64_t v22 = sub_1C0EE2568((void *)(v99 > 1), v100 + 1, 1, v22);
            }
            double v96 = v105 - v60;
            double v97 = v98 - v16;
            _OWORD v22[2] = v100 + 1;
            int v87 = (double *)&v22[5 * v100];
            v87[4] = v61;
            v87[5] = v107 - v16;
LABEL_136:
            v87[6] = v96;
            _OWORD v87[7] = v97;
            break;
        }
        goto LABEL_137;
      }
    case 4:
      swift_bridgeObjectRelease();
      v121.origin.CGFloat x = a3;
      v121.origin.CGFloat y = a4;
      v121.size.width = a5;
      v121.size.height = a6;
      double v68 = CGRectGetWidth(v121) - (v16 + v16);
      v122.origin.CGFloat x = a3;
      v122.origin.CGFloat y = a4;
      v122.size.width = a5;
      v122.size.height = a6;
      double v69 = CGRectGetHeight(v122) - (v16 + v16);
      if (v103)
      {
        uint64_t v70 = *(void *)(v103 + 16);
        if (v70)
        {
          uint64_t v71 = 0;
          unint64_t v72 = (char *)(v103 + 32);
          double v73 = v102;
          do
          {
            uint64_t v74 = *v72++;
            uint64_t v75 = qword_1C15E0DB0[v74];
            if ((v75 & ~v71) == 0) {
              uint64_t v75 = 0;
            }
            v71 |= v75;
            --v70;
          }
          while (v70);
        }
        else
        {
          uint64_t v71 = 0;
          double v73 = v102;
        }
        id v76 = objc_msgSend(self, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, v71, v16, v16, v68, v69, v73, v73);
      }
      else
      {
        id v76 = objc_msgSend(self, sel_bezierPathWithRect_, v16, v16, v68, v69);
      }
      id v77 = v76;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = sub_1C0EE2568(0, v22[2] + 1, 1, v22);
      }
      unint64_t v79 = v22[2];
      unint64_t v78 = v22[3];
      if (v79 >= v78 >> 1) {
        uint64_t v22 = sub_1C0EE2568((void *)(v78 > 1), v79 + 1, 1, v22);
      }
      _OWORD v22[2] = v79 + 1;
      long long v80 = &v22[5 * v79];
      v80[4] = v77;
      v80[5] = 0;
      v80[6] = 0;
      v80[7] = 0;
      *((unsigned char *)v80 + 64) = 2;

      return v22;
    default:
      double v39 = 0.0;
      double v40 = 0.0;
      if (!v20) {
        goto LABEL_91;
      }
      swift_bridgeObjectRetain();
      uint64_t v41 = 0;
      break;
  }
  while (2)
  {
    uint64_t v42 = v19 + v41++;
    switch(*(unsigned char *)(v42 + 32))
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_89;
      default:
        char v43 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
        {
          if (v20 == v41)
          {
            double v40 = 0.0;
            goto LABEL_90;
          }
          continue;
        }
LABEL_89:
        double v40 = v38;
LABEL_90:
        swift_bridgeObjectRelease();
LABEL_91:
        v123.origin.CGFloat x = a3;
        v123.origin.CGFloat y = a4;
        v123.size.width = a5;
        v123.size.height = a6;
        double v81 = CGRectGetWidth(v123);
        if (v20)
        {
          swift_bridgeObjectRetain();
          uint64_t v82 = 0;
          while (2)
          {
            uint64_t v83 = v19 + v82++;
            switch(*(unsigned char *)(v83 + 32))
            {
              case 2:
                swift_bridgeObjectRelease();
                break;
              default:
                char v84 = sub_1C1520A9C();
                swift_bridgeObjectRelease();
                if ((v84 & 1) == 0)
                {
                  if (v20 != v82) {
                    continue;
                  }
                  double v38 = 0.0;
                }
                break;
            }
            break;
          }
          swift_bridgeObjectRelease();
          double v39 = v38;
        }
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_1C0EE2568(0, v22[2] + 1, 1, v22);
        }
        unint64_t v86 = v22[2];
        unint64_t v85 = v22[3];
        if (v86 >= v85 >> 1) {
          uint64_t v22 = sub_1C0EE2568((void *)(v85 > 1), v86 + 1, 1, v22);
        }
        _OWORD v22[2] = v86 + 1;
        int v87 = (double *)&v22[5 * v86];
        v87[4] = v40;
        v87[5] = v16;
        v87[6] = v81 - v39;
        _OWORD v87[7] = v16;
LABEL_137:
        *((unsigned char *)v87 + 64) = 0;
        return v22;
    }
  }
}

uint64_t sub_1C12C34C4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C12C35A4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

void sub_1C12C3680(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7368564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x676E696461656CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E696C69617274;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6D6F74746F62;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 7105633;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t FormatBorderEdge.description.getter()
{
  uint64_t result = 7368564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696461656CLL;
      break;
    case 2:
      uint64_t result = 0x676E696C69617274;
      break;
    case 3:
      uint64_t result = 0x6D6F74746F62;
      break;
    case 4:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C12C37B8()
{
  uint64_t result = 7368564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696461656CLL;
      break;
    case 2:
      uint64_t result = 0x676E696C69617274;
      break;
    case 3:
      uint64_t result = 0x6D6F74746F62;
      break;
    case 4:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1C12C3854(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return (_s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0(&v4, &v5) & 1) == 0;
}

BOOL sub_1C12C3894(unsigned __int8 *a1, char *a2)
{
  char v2 = *a2;
  unsigned __int8 v5 = *a1;
  char v4 = v2;
  return (_s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0(&v5, &v4) & 1) == 0;
}

uint64_t sub_1C12C38D4(char *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  char v5 = *a1;
  unsigned __int8 v4 = v2;
  return _s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0(&v4, &v5) & 1;
}

BOOL _s8NewsFeed16FormatBorderEdgeO4PathO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)a1;
  uint64_t v2 = *(uint64_t *)(a1 + 8);
  uint64_t v5 = *(uint64_t *)(a1 + 16);
  uint64_t v4 = *(uint64_t *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  double v8 = *(double *)a2;
  uint64_t v7 = *(uint64_t *)(a2 + 8);
  uint64_t v9 = *(uint64_t *)(a2 + 16);
  uint64_t v10 = *(uint64_t *)(a2 + 24);
  int v11 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if (v6 == 1)
    {
      if (v11 == 1)
      {
        sub_1C01AE924();
        sub_1C0BD3F54(*(id *)&v8, v7, v9, v10, 1u);
        sub_1C0BD3F54(*(id *)&v3, v2, v5, v4, 1u);
        char v12 = sub_1C151FB6C();
        sub_1C0BD3F6C(*(id *)&v3, v2, v5, v4, 1u);
        double v13 = v8;
        uint64_t v14 = v7;
        uint64_t v15 = v9;
        uint64_t v16 = v10;
        unsigned __int8 v17 = 1;
LABEL_16:
        sub_1C0BD3F6C(*(id *)&v13, v14, v15, v16, v17);
        return v12 & 1;
      }
    }
    else if (v11 == 2)
    {
      sub_1C01AE924();
      sub_1C0BD3F54(*(id *)&v8, v7, v9, v10, 2u);
      sub_1C0BD3F54(*(id *)&v3, v2, v5, v4, 2u);
      char v12 = sub_1C151FB6C();
      sub_1C0BD3F6C(*(id *)&v3, v2, v5, v4, 2u);
      double v13 = v8;
      uint64_t v14 = v7;
      uint64_t v15 = v9;
      uint64_t v16 = v10;
      unsigned __int8 v17 = 2;
      goto LABEL_16;
    }
    id v20 = *(id *)&v3;
    goto LABEL_18;
  }
  if (*(unsigned char *)(a2 + 32))
  {
LABEL_18:
    sub_1C0BD3F54(*(id *)&v8, v7, v9, v10, v11);
    sub_1C0BD3F6C(*(id *)&v3, v2, v5, v4, v6);
    sub_1C0BD3F6C(*(id *)&v8, v7, v9, v10, v11);
    return 0;
  }
  sub_1C0BD3F6C(*(id *)a1, v2, v5, v4, 0);
  sub_1C0BD3F6C(*(id *)&v8, v7, v9, v10, 0);
  BOOL result = 0;
  if (v3 == v8 && *(double *)&v2 == *(double *)&v7) {
    return *(double *)&v4 == *(double *)&v10 && *(double *)&v5 == *(double *)&v9;
  }
  return result;
}

uint64_t _s8NewsFeed16FormatBorderEdgeO1loiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 7368564;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7368564;
  switch(v3)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v5 = 0x676E696461656CLL;
      break;
    case 2:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v5 = 0x676E696C69617274;
      break;
    case 3:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x6D6F74746F62;
      break;
    case 4:
      uint64_t v5 = 7105633;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x676E696461656CLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x676E696C69617274) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6D6F74746F62;
      goto LABEL_12;
    case 4:
      if (v5 != 7105633) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v4 == v6) {
        char v7 = 0;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

unint64_t sub_1C12C3CF8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C12C3D28();
  unint64_t result = sub_1BFC97190();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C12C3D28()
{
  unint64_t result = qword_1EA1ADDD8;
  if (!qword_1EA1ADDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDD8);
  }
  return result;
}

unint64_t sub_1C12C3D7C(uint64_t a1)
{
  unint64_t result = sub_1C12C3DA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C12C3DA4()
{
  unint64_t result = qword_1EA1ADDE0;
  if (!qword_1EA1ADDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ADDE0);
  }
  return result;
}

unint64_t sub_1C12C3DF8(void *a1)
{
  a1[1] = sub_1C007F27C();
  a1[2] = sub_1C007F324();
  unint64_t result = sub_1C007F2D0();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBorderEdge()
{
  return &type metadata for FormatBorderEdge;
}

void destroy for FormatBorderEdge.Path(uint64_t a1)
{
}

uint64_t initializeWithCopy for FormatBorderEdge.Path(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C0BD3F54(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatBorderEdge.Path(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_1C0BD3F54(*(id *)a2, v4, v5, v6, v7);
  double v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C0BD3F6C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatBorderEdge.Path(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C0BD3F6C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBorderEdge.Path(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBorderEdge.Path(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBorderEdge.Path()
{
  return &type metadata for FormatBorderEdge.Path;
}

NewsFeed::FeedItemRendererOptions __swiftcall FeedItemRendererOptions.init(allowContentHiding:)(NewsFeed::FeedItemRendererOptions allowContentHiding)
{
  v1->allowContentHiding = allowContentHiding.allowContentHiding;
  return allowContentHiding;
}

uint64_t FeedItemRendererType.render(in:at:layoutAttributes:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a3;
  char v8 = 1;
  uint64_t v7 = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t *, uint64_t (*)(void), void, uint64_t, uint64_t))(a5 + 72))(a1, a2, &v8, &v7, nullsub_1, 0, a4, a5);
}

uint64_t FeedItemRendererOptions.allowContentHiding.getter()
{
  return *v0;
}

uint64_t FeedItemRenderer.presentingViewController.getter()
{
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v0 + 16);
}

void FeedItemRenderer.presentingViewController.setter(void *a1)
{
  sub_1C12C9FE0();
}

void (*FeedItemRenderer.presentingViewController.modify(void *a1))(uint64_t *a1, char a2)
{
  unsigned int v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C18C9C60](v1 + 16);
  return sub_1C12C41B0;
}

void sub_1C12C41B0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 32);
    swift_endAccess();

    uint64_t v6 = *(void *)(v5 + 88);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = MEMORY[0x1C18C9C60](v5 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, ObjectType, v6);
    uint64_t v9 = *(void *)(v5 + 208);
    uint64_t v10 = swift_getObjectType();
    uint64_t v11 = MEMORY[0x1C18C9C60](v5 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v11, v10, v9);
  }
  free((void *)v3);
}

uint64_t FeedItemRenderer.disableFormatLayoutViewCellDequeueing.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t FeedItemRenderer.disableFormatLayoutViewCellDequeueing.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*FeedItemRenderer.disableFormatLayoutViewCellDequeueing.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C12C436C(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 440) = v1;
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall FeedItemRenderer.register(view:)(UICollectionView *view)
{
  sub_1BFDB74D4(0, &qword_1EB871580, &qword_1EB874310, MEMORY[0x1E4FAD8A0], &qword_1EB874308);
  sub_1C151F46C();
  sub_1BFDB74D4(0, &qword_1EB871588, &qword_1EB874320, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, &qword_1EB874318);
  sub_1C151F46C();
  sub_1C0090890();
  sub_1C151F46C();
  sub_1C0090A58();
  sub_1C151F46C();
  sub_1C0090760();
  sub_1C151F46C();
  sub_1C00907F8();
  sub_1C151F46C();
  sub_1C0090AF0();
  sub_1C151F46C();
  sub_1C00909C0();
  sub_1C151F46C();
  sub_1C0090FD4();
  sub_1C151F46C();
  sub_1C0090928();
  sub_1C151F46C();
  sub_1BFDB8300();
  sub_1C151F46C();
  *(void *)(v1 + 448) = sub_1C151F42C();
  swift_release();
}

void FeedItemRenderer.render(in:at:options:layoutAttributes:)(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5 = *a4;
  unsigned __int8 v7 = *a3;
  uint64_t v6 = v5;
  FeedItemRenderer.render(in:at:options:layoutAttributes:actionSenderHandler:)(a1, a2, &v7, &v6, (uint64_t)nullsub_1, 0, a5);
}

uint64_t sub_1C12C45BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1C151A35C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  double v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*a3 >> 60)
  {
    case 1:
      sub_1C0090890();
      uint64_t result = sub_1C151F44C();
      *a4 = result | 0x1000000000000000;
      return result;
    case 2:
      sub_1C0090A58();
      uint64_t result = sub_1C151F44C();
      *a4 = result | 0x2000000000000000;
      return result;
    case 3:
      sub_1C0090760();
      uint64_t result = sub_1C151F44C();
      *a4 = result | 0x3000000000000000;
      return result;
    case 4:
      sub_1BFE298EC();
      uint64_t v19 = swift_projectBox();
      sub_1C12CA95C(v19, (uint64_t)v16, type metadata accessor for HeadlineViewLayout.Context);
      if (objc_msgSend(*(id *)&v16[*(int *)(v14 + 20) + 40], sel_hasVideo))
      {
        sub_1BFDB74D4(0, &qword_1EB871588, &qword_1EB874320, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, &qword_1EB874318);
        uint64_t v20 = sub_1C151F44C();
        uint64_t result = sub_1BFEFDC50((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Context);
        *a4 = v20 | 0x5000000000000000;
      }
      else
      {
        sub_1BFEFDC50((uint64_t)v16, type metadata accessor for HeadlineViewLayout.Context);
        sub_1BFDB74D4(0, &qword_1EB871580, &qword_1EB874310, MEMORY[0x1E4FAD8A0], &qword_1EB874308);
        uint64_t result = sub_1C151F44C();
        *a4 = result | 0x4000000000000000;
      }
      return result;
    case 5:
      sub_1C0090AF0();
      uint64_t result = sub_1C151F44C();
      *a4 = result | 0x7000000000000000;
      return result;
    case 6:
      sub_1C00909C0();
      uint64_t result = sub_1C151F44C();
      *a4 = result | 0x8000000000000000;
      return result;
    case 7:
      CGFloat v31 = a4;
      sub_1BFE29960();
      uint64_t v22 = *(void *)(swift_projectBox() + *(int *)(v21 + 48));
      swift_retain();
      swift_bridgeObjectRetain();
      v30[1] = a1;
      sub_1C151A32C();
      swift_beginAccess();
      if (*(unsigned char *)(v5 + 24))
      {
        uint64_t v34 = sub_1C151A33C();
        uint64_t v35 = v23;
        sub_1C151E80C();
        uint64_t v32 = sub_1C151A34C();
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v25 = v34;
        uint64_t v24 = v35;
      }
      else
      {
        uint64_t v26 = *(void *)(v22 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
        uint64_t v25 = *(void *)(v26 + 96);
        uint64_t v24 = *(void *)(v26 + 104);
        swift_bridgeObjectRetain();
      }
      swift_beginAccess();
      uint64_t v27 = *(void *)(v5 + 432);
      swift_bridgeObjectRetain();
      char v28 = sub_1BFF896B4(v25, v24, v27);
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(&v33, v25, v24);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_1BFDB8300();
        swift_bridgeObjectRetain();
        sub_1C151F46C();
        swift_bridgeObjectRelease();
      }
      sub_1BFDB8300();
      uint64_t v29 = sub_1C151F44C();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *CGFloat v31 = v29 | 0x9000000000000000;
      return result;
    case 8:
      sub_1C00907F8();
      uint64_t result = sub_1C151F44C();
      *a4 = result | 0x6000000000000000;
      return result;
    case 9:
      sub_1C0090928();
      uint64_t result = sub_1C151F44C();
      unint64_t v18 = 0xA000000000000000;
      goto LABEL_16;
    case 0xALL:
      sub_1C0090FD4();
      uint64_t result = sub_1C151F44C();
      unint64_t v18 = 0xB000000000000000;
      goto LABEL_16;
    case 0xBLL:
      v36[0] = *(void *)((*a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      sub_1C12C45BC(a1, a2, v36);
      return swift_release();
    default:
      sub_1BFDB8300();
      uint64_t result = sub_1C151F44C();
      unint64_t v18 = 0x9000000000000000;
LABEL_16:
      *a4 = result | v18;
      return result;
  }
}

void sub_1C12C4C10(void *a1, uint64_t a2, void *a3, uint64_t *a4, char *a5, uint64_t a6, void *a7)
{
  uint64_t v154 = a6;
  uint64_t v155 = a7;
  id v151 = a5;
  uint64_t v161 = a3;
  uint64_t v153 = a2;
  uint64_t v156 = a1;
  uint64_t v8 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v152 = (char *)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PluginLayout.Context(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EngagementBannerViewLayout.Context();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v151 - v20;
  uint64_t v22 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (CGRect *)((char *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *a4;
  switch((unint64_t)*a4 >> 60)
  {
    case 1uLL:
      uint64_t v34 = (void *)(v28 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v35 = v34[14];
      uint64_t v36 = v34[15];
      uint64_t v37 = v34[16];
      uint64_t v38 = v34[17];
      uint64_t v39 = v34[18];
      uint64_t v40 = v34[19];
      uint64_t v41 = v34[20];
      uint64_t v42 = v34[21];
      sub_1BFEB1214((uint64_t)(v34 + 2), (uint64_t)v159);
      sub_1C0090890();
      char v43 = v161;
      uint64_t v44 = swift_dynamicCastClass();
      if (v44)
      {
        double v45 = (void *)v44;
        id v46 = v43;
        objc_msgSend(v46, sel_setHidden_, 0);
        id v47 = objc_msgSend(self, sel_clearColor);
        sub_1C151F95C();

        uint64_t v48 = *(void *)(v157 + 104);
        uint64_t ObjectType = swift_getObjectType();
        *(void *)&v160[0] = v35;
        *((void *)&v160[0] + 1) = v36;
        *(void *)&v160[1] = v37;
        *((void *)&v160[1] + 1) = v38;
        *(void *)&v160[2] = v39;
        *((void *)&v160[2] + 1) = v40;
        *(void *)&v160[3] = v41;
        *((void *)&v160[3] + 1) = v42;
        double v50 = (void *)sub_1C151AFCC();
        (*(void (**)(void *, _OWORD *, void *, uint64_t, uint64_t))(v48 + 8))(v159, v160, v50, ObjectType, v48);

        objc_msgSend(v45, sel_setFocusEffect_, 0);
      }
      else
      {
        objc_msgSend(v43, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      sub_1BFEB1174((uint64_t)v159);
      return;
    case 2uLL:
      uint64_t v51 = (void *)(v28 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v52 = v51[19];
      uint64_t v53 = v51[20];
      uint64_t v54 = v51[21];
      uint64_t v55 = v51[22];
      uint64_t v56 = v51[23];
      uint64_t v57 = v51[24];
      uint64_t v58 = v51[25];
      uint64_t v59 = v51[26];
      sub_1C0C47B64((uint64_t)(v51 + 2), (uint64_t)v159);
      sub_1C0090A58();
      double v60 = v161;
      uint64_t v61 = swift_dynamicCastClass();
      if (v61)
      {
        uint64_t v62 = (void *)v61;
        id v63 = v60;
        objc_msgSend(v63, sel_setHidden_, 0);
        id v64 = objc_msgSend(self, sel_clearColor);
        sub_1C151F95C();

        uint64_t v65 = *(void *)(v157 + 120);
        uint64_t v66 = swift_getObjectType();
        *(void *)&v160[0] = v52;
        *((void *)&v160[0] + 1) = v53;
        *(void *)&v160[1] = v54;
        *((void *)&v160[1] + 1) = v55;
        *(void *)&v160[2] = v56;
        *((void *)&v160[2] + 1) = v57;
        *(void *)&v160[3] = v58;
        *((void *)&v160[3] + 1) = v59;
        char v67 = (void *)sub_1C151AFCC();
        (*(void (**)(void *, _OWORD *, void *, uint64_t, uint64_t))(v65 + 8))(v159, v160, v67, v66, v65);

        objc_msgSend(v62, sel_setFocusEffect_, 0);
      }
      else
      {
        objc_msgSend(v60, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      sub_1C0C47BC0((uint64_t)v159);
      return;
    case 3uLL:
      sub_1BFE29A3C();
      uint64_t v69 = v68;
      uint64_t v70 = swift_projectBox();
      uint64_t v71 = v70 + *(int *)(v69 + 48);
      sub_1C12CA95C(v70, (uint64_t)v27, type metadata accessor for FeedBannerAdViewLayout.Context);
      sub_1C12CA95C(v71, (uint64_t)v24, type metadata accessor for FeedBannerAdViewLayout.Attributes);
      sub_1C0090760();
      unint64_t v72 = v161;
      uint64_t v73 = swift_dynamicCastClass();
      if (v73)
      {
        uint64_t v74 = (void *)v73;
        id v75 = v72;
        objc_msgSend(v75, sel_setHidden_, 0);
        sub_1C12C64C0(v156, v74, (uint64_t)v27, v24);
      }
      else
      {
        objc_msgSend(v72, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      sub_1BFEFDC50((uint64_t)v24, type metadata accessor for FeedBannerAdViewLayout.Attributes);
      id v76 = type metadata accessor for FeedBannerAdViewLayout.Context;
      uint64_t v77 = (uint64_t)v27;
      goto LABEL_51;
    case 4uLL:
      sub_1BFE298EC();
      uint64_t v79 = v78;
      uint64_t v80 = swift_projectBox();
      memcpy(v159, (const void *)(v80 + *(int *)(v79 + 48)), 0x130uLL);
      sub_1C12CA95C(v80, (uint64_t)v21, type metadata accessor for HeadlineViewLayout.Context);
      if (objc_msgSend(*(id *)&v21[*(int *)(v16 + 20) + 40], sel_hasVideo))
      {
        sub_1BFDB74D4(0, &qword_1EB871588, &qword_1EB874320, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, &qword_1EB874318);
        double v81 = v161;
        uint64_t v82 = swift_dynamicCastClass();
        if (v82)
        {
          uint64_t v83 = v82;
          id v84 = v81;
          objc_msgSend(v84, sel_setHidden_, 0);
          memcpy(v160, v159, 0x130uLL);
          sub_1C12C6708(v83, (uint64_t)v21, (uint64_t)v160, v154, v155);
        }
        else
        {
          objc_msgSend(v81, sel_setHidden_, 1);
          sub_1C128D8D8();
          swift_allocError();
          swift_willThrow();
        }
        id v76 = type metadata accessor for HeadlineViewLayout.Context;
        uint64_t v77 = (uint64_t)v21;
      }
      else
      {
        sub_1BFEFDC50((uint64_t)v21, type metadata accessor for HeadlineViewLayout.Context);
        sub_1C12CA95C(v80, (uint64_t)v18, type metadata accessor for HeadlineViewLayout.Context);
        sub_1BFDB74D4(0, &qword_1EB871580, &qword_1EB874310, MEMORY[0x1E4FAD8A0], &qword_1EB874308);
        long long v147 = v161;
        uint64_t v148 = swift_dynamicCastClass();
        if (v148)
        {
          uint64_t v149 = v148;
          id v150 = v147;
          objc_msgSend(v150, sel_setHidden_, 0);
          memcpy(v160, v159, 0x130uLL);
          sub_1C12C6BD4(v149, (uint64_t)v18, (uint64_t)v160);
        }
        else
        {
          objc_msgSend(v147, sel_setHidden_, 1);
          sub_1C128D8D8();
          swift_allocError();
          swift_willThrow();
        }
        id v76 = type metadata accessor for HeadlineViewLayout.Context;
        uint64_t v77 = (uint64_t)v18;
      }
      goto LABEL_51;
    case 5uLL:
      uint64_t v85 = v28 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v86 = v85 + 16;
      memcpy(v160, (const void *)(v85 + 408), 0x180uLL);
      sub_1C01BC5C8(v86, (uint64_t)v159);
      sub_1C0090AF0();
      int v87 = v161;
      uint64_t v88 = swift_dynamicCastClass();
      if (v88)
      {
        uint64_t v89 = (void *)v88;
        id v90 = v87;
        objc_msgSend(v90, sel_setHidden_, 0);
        memcpy(v158, v160, sizeof(v158));
        sub_1C12C7094(v89, (uint64_t)v159, (double *)v158);
      }
      else
      {
        objc_msgSend(v87, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      sub_1C01BC710((uint64_t)v159);
      return;
    case 6uLL:
      long long v91 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x198);
      long long v92 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x1A8);
      long long v93 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x178);
      v160[8] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x188);
      v160[9] = v91;
      long long v94 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x1B8);
      v160[10] = v92;
      v160[11] = v94;
      long long v95 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x158);
      long long v96 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x168);
      long long v97 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x138);
      v160[4] = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x148);
      v160[5] = v95;
      long long v98 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x108);
      v160[6] = v96;
      v160[7] = v93;
      long long v99 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x118);
      long long v100 = *(_OWORD *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x128);
      v160[0] = v98;
      v160[1] = v99;
      v160[2] = v100;
      v160[3] = v97;
      sub_1C1192E14((v28 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)v159);
      sub_1C00909C0();
      uint64_t v101 = v161;
      uint64_t v102 = swift_dynamicCastClass();
      if (v102)
      {
        uint64_t v103 = v102;
        id v104 = v101;
        objc_msgSend(v104, sel_setHidden_, 0);
        v158[8] = v160[8];
        v158[9] = v160[9];
        v158[10] = v160[10];
        v158[11] = v160[11];
        v158[4] = v160[4];
        v158[5] = v160[5];
        v158[6] = v160[6];
        v158[7] = v160[7];
        v158[0] = v160[0];
        v158[1] = v160[1];
        v158[2] = v160[2];
        v158[3] = v160[3];
        sub_1C12C7674(v103, (uint64_t)v159, (uint64_t)v158);
      }
      else
      {
        objc_msgSend(v101, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      sub_1C0FC6680((uint64_t)v159);
      return;
    case 7uLL:
      sub_1BFE29960();
      uint64_t v106 = v105;
      uint64_t v107 = swift_projectBox();
      uint64_t v108 = *(void *)(v107 + *(int *)(v106 + 48));
      uint64_t v12 = v152;
      sub_1C12CA95C(v107, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      sub_1BFDB8300();
      CGRect v109 = v161;
      uint64_t v110 = swift_dynamicCastClass();
      if (v110)
      {
        CGRect v111 = (void *)v110;
        id v112 = v109;
        swift_retain();
        objc_msgSend(v112, sel_setHidden_, 0);
        sub_1C12C7F54(v156, v111, v153, (uint64_t)v12, v108, v154, (uint64_t)v155);
        swift_release();

        CGRect v113 = (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext;
        goto LABEL_33;
      }
      swift_retain();
      objc_msgSend(v109, sel_setHidden_, 1);
      sub_1C128D8D8();
      swift_allocError();
      swift_willThrow();
      sub_1BFEFDC50((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
LABEL_45:
      swift_release();
      break;
    case 8uLL:
      uint64_t v114 = v28 & 0xFFFFFFFFFFFFFFFLL;
      *(void *)&v160[10] = *(void *)(v114 + 376);
      long long v115 = *(_OWORD *)(v114 + 232);
      v160[0] = *(_OWORD *)(v114 + 216);
      v160[1] = v115;
      long long v116 = *(_OWORD *)(v114 + 248);
      long long v117 = *(_OWORD *)(v114 + 360);
      v160[8] = *(_OWORD *)(v114 + 344);
      v160[9] = v117;
      long long v118 = *(_OWORD *)(v114 + 264);
      v160[2] = v116;
      v160[3] = v118;
      long long v119 = *(_OWORD *)(v114 + 296);
      v160[4] = *(_OWORD *)(v114 + 280);
      v160[5] = v119;
      long long v120 = *(_OWORD *)(v114 + 328);
      v160[6] = *(_OWORD *)(v114 + 312);
      v160[7] = v120;
      sub_1C0F557B4(v114 + 16, (uint64_t)v159);
      sub_1C00907F8();
      CGRect v121 = v161;
      uint64_t v122 = swift_dynamicCastClass();
      if (v122)
      {
        CGRect v123 = (void *)v122;
        id v124 = v121;
        objc_msgSend(v124, sel_setHidden_, 0);
        v158[8] = v160[8];
        v158[9] = v160[9];
        *(void *)&v158[10] = *(void *)&v160[10];
        v158[4] = v160[4];
        v158[5] = v160[5];
        v158[6] = v160[6];
        v158[7] = v160[7];
        v158[0] = v160[0];
        v158[1] = v160[1];
        v158[2] = v160[2];
        v158[3] = v160[3];
        sub_1C12C7A6C(v123, (uint64_t)v159, v158);
      }
      else
      {
        objc_msgSend(v121, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      sub_1C1192DC0((uint64_t)v159);
      return;
    case 9uLL:
      sub_1C11906EC(0, (unint64_t *)&qword_1EB8608B8, (void (*)(uint64_t))type metadata accessor for EngagementBannerViewLayout.Context);
      uint64_t v126 = v125;
      uint64_t v127 = swift_projectBox();
      id v128 = (uint64_t *)(v127 + *(int *)(v126 + 48));
      uint64_t v129 = *v128;
      uint64_t v130 = v128[1];
      uint64_t v131 = v128[2];
      uint64_t v132 = v128[3];
      uint64_t v133 = v128[4];
      uint64_t v134 = v128[5];
      uint64_t v135 = v128[6];
      uint64_t v136 = v128[7];
      uint64_t v137 = (void *)v128[8];
      uint64_t v155 = (void *)v128[9];
      uint64_t v156 = v137;
      uint64_t v138 = v128[10];
      uint64_t v153 = v128[11];
      uint64_t v154 = v138;
      sub_1C12CA95C(v127, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for EngagementBannerViewLayout.Context);
      sub_1C0090928();
      uint64_t v139 = v161;
      uint64_t v140 = swift_dynamicCastClass();
      if (v140)
      {
        uint64_t v141 = (void *)v140;
        id v142 = v139;
        objc_msgSend(v142, sel_setHidden_, 0);
        v159[0] = v129;
        v159[1] = v130;
        v159[2] = v131;
        v159[3] = v132;
        v159[4] = v133;
        v159[5] = v134;
        v159[6] = v135;
        v159[7] = v136;
        v159[8] = v156;
        v159[9] = v155;
        v159[10] = v154;
        v159[11] = v153;
        sub_1C12C7DA4(v141, (uint64_t)v15, (uint64_t)v159);
      }
      else
      {
        objc_msgSend(v139, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      id v76 = (uint64_t (*)(void))type metadata accessor for EngagementBannerViewLayout.Context;
      uint64_t v77 = (uint64_t)v15;
      goto LABEL_51;
    case 0xAuLL:
      sub_1C11906EC(0, (unint64_t *)&qword_1EB86C4B0, (void (*)(uint64_t))type metadata accessor for PluginLayout.Context);
      uint64_t v143 = swift_projectBox();
      sub_1C12CA95C(v143, (uint64_t)v12, type metadata accessor for PluginLayout.Context);
      sub_1C0090FD4();
      id v144 = v161;
      if (swift_dynamicCastClass())
      {
        id v145 = v144;
        objc_msgSend(v145, sel_setHidden_, 0);
        sub_1C151A09C();
        sub_1C1519E0C();

        CGRect v113 = type metadata accessor for PluginLayout.Context;
LABEL_33:
        id v76 = v113;
        uint64_t v77 = (uint64_t)v12;
      }
      else
      {
        objc_msgSend(v144, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
        id v76 = type metadata accessor for PluginLayout.Context;
        uint64_t v77 = (uint64_t)v12;
      }
LABEL_51:
      sub_1BFEFDC50(v77, v76);
      break;
    case 0xBuLL:
      char v146 = *v151;
      v159[0] = *(void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v160[0]) = v146;
      swift_retain();
      sub_1C12C4C10(v156, v153, v161, v159, v160, v154, v155);
      goto LABEL_45;
    default:
      sub_1BFDB8300();
      uint64_t v29 = v161;
      uint64_t v30 = swift_dynamicCastClass();
      if (v30)
      {
        CGFloat v31 = (void *)v30;
        id v32 = v29;
        objc_msgSend(v32, sel_setHidden_, 0);
        id v33 = objc_msgSend(self, sel_clearColor);
        sub_1C151F95C();

        sub_1C151F91C();
        objc_msgSend(v31, sel_setFocusEffect_, 0);
      }
      else
      {
        objc_msgSend(v29, sel_setHidden_, 1);
        sub_1C128D8D8();
        swift_allocError();
        swift_willThrow();
      }
      return;
  }
}

void sub_1C12C5D78(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v13 = sub_1C151677C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = Strong;
    id v42 = a1;
    swift_beginAccess();
    uint64_t v19 = MEMORY[0x1C18C9C60](a4 + 16);
    if (!v19)
    {
LABEL_9:
      swift_release();
      return;
    }
    uint64_t v20 = (void *)v19;
    sub_1C1519E2C();
    if (v46)
    {
      if (swift_dynamicCast())
      {
        if (!*(void *)(v18 + 448))
        {
          swift_release();

          goto LABEL_9;
        }
        uint64_t v41 = v49;
        uint64_t v40 = swift_retain();
        if ((sub_1C151C68C() & 1) == 0)
        {
          swift_release();

          swift_release();
          goto LABEL_9;
        }
        id v39 = self;
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v13);
        unint64_t v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        unint64_t v22 = (v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v34 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v36 = (v22 + 31) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v37 = (v36 + 23) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v35 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v18;
        *(void *)(v23 + 24) = v20;
        (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v23 + v21, v16, v13);
        *(void *)(v23 + v22) = v42;
        unint64_t v24 = v23 + v34;
        uint64_t v25 = v40;
        *(void *)unint64_t v24 = v41;
        *(unsigned char *)(v24 + 8) = a6 & 1;
        uint64_t v26 = (void *)(v23 + v36);
        uint64_t v27 = v44;
        *uint64_t v26 = v43;
        v26[1] = v27;
        *(void *)(v23 + v37) = v25;
        *(void *)(v23 + v35) = a2;
        uint64_t v38 = v23;
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = sub_1C12CA6D0;
        *(void *)(v28 + 24) = v23;
        id v47 = sub_1BFC81768;
        uint64_t v48 = v28;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BFC81740;
        id v46 = &block_descriptor_104;
        uint64_t v29 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        id v30 = a2;
        swift_retain();
        swift_retain();
        swift_retain();
        id v31 = v20;
        id v32 = v42;
        swift_release();
        objc_msgSend(v39, sel_performWithoutAnimation_, v29);
        swift_release();
        swift_release();
        swift_release();

        _Block_release(v29);
        LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if (v23)
        {
          __break(1u);
          goto LABEL_9;
        }
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();

      sub_1BFEFDC50((uint64_t)aBlock, (uint64_t (*)(void))sub_1BFEFE510);
    }
  }
}

void sub_1C12C61E0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6, uint64_t a7, void *a8)
{
  uint64_t v9 = a5;
  char v8 = a6;
  sub_1C12C4C10(a2, a3, a4, &v9, &v8, a7, a8);
}

void sub_1C12C62FC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C151677C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned __int8 v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C18C9C60](a1 + 16);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_1C12CA0A8(0, &qword_1EA1A20F0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
    unint64_t v12 = v11 + v10;
    id v13 = objc_msgSend(a2, sel_indexPath);
    sub_1C151672C();

    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12, v7, v4);
    uint64_t v14 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_reloadItemsAtIndexPaths_, v14);
  }
}

void sub_1C12C64C0(void *a1, void *a2, uint64_t a3, CGRect *a4)
{
  uint64_t v5 = v4;
  CGRectGetWidth(*a4);
  objc_msgSend(a1, sel_bounds);
  CGRectGetHeight(v18);
  uint64_t v9 = (void *)sub_1C151AFCC();
  sub_1C151D0EC();
  objc_msgSend(a2, sel_frame);
  unint64_t v10 = (void *)sub_1C151D79C();
  uint64_t v12 = v11;
  swift_release();
  sub_1C042BDA8(v10, v12);

  __swift_project_boxed_opaque_existential_1((void *)(v5 + 128), *(void *)(v5 + 152));
  v17[3] = type metadata accessor for FeedBannerAd();
  v17[4] = sub_1C12CAA3C(&qword_1EB895030, 255, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
  sub_1C12CA95C(a3, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  uint64_t v14 = (void *)sub_1C151AFCC();
  sub_1C12CAA3C(&qword_1EB871CE8, 255, (void (*)(uint64_t))type metadata accessor for FeedBannerAdView);
  sub_1C151D94C();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1788]), sel_init);
  uint64_t v16 = (void *)sub_1C151AFCC();
  objc_msgSend(v15, sel_setReferenceView_, v16);

  objc_msgSend(a2, sel_setFocusEffect_, v15);
}

uint64_t sub_1C12C6708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v51 = a4;
  id v52 = a5;
  uint64_t v50 = a2;
  uint64_t v58 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v48
                                                                          - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v10 = *(double *)a3;
  double v11 = *(double *)(a3 + 8);
  double v13 = *(double *)(a3 + 24);
  uint64_t v53 = *(void *)(a3 + 16);
  uint64_t v12 = v53;
  long long v14 = *(_OWORD *)(a3 + 240);
  long long v73 = *(_OWORD *)(a3 + 224);
  long long v74 = v14;
  uint64_t v75 = *(void *)(a3 + 256);
  long long v15 = *(_OWORD *)(a3 + 176);
  long long v69 = *(_OWORD *)(a3 + 160);
  long long v70 = v15;
  long long v16 = *(_OWORD *)(a3 + 192);
  long long v72 = *(_OWORD *)(a3 + 208);
  long long v71 = v16;
  long long v17 = *(_OWORD *)(a3 + 112);
  long long v65 = *(_OWORD *)(a3 + 96);
  long long v66 = v17;
  long long v18 = *(_OWORD *)(a3 + 128);
  long long v68 = *(_OWORD *)(a3 + 144);
  long long v67 = v18;
  long long v19 = *(_OWORD *)(a3 + 48);
  long long v61 = *(_OWORD *)(a3 + 32);
  long long v62 = v19;
  long long v20 = *(_OWORD *)(a3 + 64);
  long long v64 = *(_OWORD *)(a3 + 80);
  long long v63 = v20;
  double v21 = *(double *)(a3 + 264);
  long long v22 = *(_OWORD *)(a3 + 288);
  long long v77 = *(_OWORD *)(a3 + 272);
  long long v78 = v22;
  id v23 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  uint64_t v54 = v6 + 28;
  uint64_t v24 = v6[31];
  uint64_t v25 = v6[32];
  __swift_project_boxed_opaque_existential_1(v6 + 28, v24);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
  sub_1C12CA0A8(0, &qword_1EB874320, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
  uint64_t v27 = v26;
  uint64_t v56 = v26;
  uint64_t v55 = sub_1BFDB7574(&qword_1EB874318, &qword_1EB874320, (uint64_t (*)(uint64_t))type metadata accessor for VideoView);
  v48(a1, v27, v55, v24, v25);
  uint64_t v79 = 1;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  char v83 = 0;
  sub_1C130CFC4(a1, (uint64_t)&v79);
  uint64_t v28 = v6[11];
  uint64_t ObjectType = swift_getObjectType();
  *(double *)uint64_t v59 = v10;
  *(double *)&v59[1] = v11;
  void v59[2] = v12;
  uint64_t v60 = *(void *)&v13;
  double v76 = v21;
  id v30 = (void *)a1;
  id v31 = (void *)sub_1C151AFCC();
  uint64_t v32 = v50;
  (*(void (**)(uint64_t, uint64_t *, void *, uint64_t, id, uint64_t, uint64_t))(v28 + 40))(v50, v59, v31, v51, v52, ObjectType, v28);

  objc_msgSend(v30, sel_bounds);
  id v37 = objc_msgSend(self, sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E4F39EA8], v33, v34, v35, v36, v21);
  uint64_t v49 = v30;
  uint64_t v38 = sub_1C151AFCC();
  id v52 = v37;
  objc_msgSend(v37, sel_setReferenceView_, v38);

  objc_msgSend(v30, sel_setFocusEffect_, v37);
  uint64_t v39 = v6[51];
  uint64_t v40 = v6[52];
  __swift_project_boxed_opaque_existential_1(v6 + 48, v39);
  uint64_t v41 = v32 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20);
  uint64_t v42 = (uint64_t)v57;
  void *v57 = *(void *)(v41 + 40);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 8);
  swift_unknownObjectRetain();
  LOBYTE(v38) = v43(v42, v39, v40);
  sub_1BFEFDC50(v42, (uint64_t (*)(void))type metadata accessor for FeedItemDimmingType);
  uint64_t v45 = v6[31];
  uint64_t v44 = v6[32];
  __swift_project_boxed_opaque_existential_1(v54, v45);
  uint64_t v60 = type metadata accessor for FeedHeadline(0);
  *(void *)&long long v61 = sub_1C12CAA3C((unint64_t *)&unk_1EB873778, 255, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v59);
  sub_1C12CA95C(v41, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  (*(void (**)(uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, uint64_t, double))(v44 + 16))(v59, v49, v38 & 1, v56, v55, v45, v44, v10, v11, COERCE__INT64(*(double *)&v53), v13);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
}

uint64_t sub_1C12C6BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v49 = a2;
  uint64_t v55 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1F4188790](v55);
  uint64_t v54 = (void **)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v8 = *(double *)a3;
  double v9 = *(double *)(a3 + 8);
  double v11 = *(double *)(a3 + 24);
  uint64_t v50 = *(void *)(a3 + 16);
  uint64_t v10 = v50;
  long long v12 = *(_OWORD *)(a3 + 240);
  long long v70 = *(_OWORD *)(a3 + 224);
  long long v71 = v12;
  uint64_t v72 = *(void *)(a3 + 256);
  long long v13 = *(_OWORD *)(a3 + 176);
  long long v66 = *(_OWORD *)(a3 + 160);
  long long v67 = v13;
  long long v14 = *(_OWORD *)(a3 + 192);
  long long v69 = *(_OWORD *)(a3 + 208);
  long long v68 = v14;
  long long v15 = *(_OWORD *)(a3 + 112);
  long long v62 = *(_OWORD *)(a3 + 96);
  long long v63 = v15;
  long long v16 = *(_OWORD *)(a3 + 128);
  long long v65 = *(_OWORD *)(a3 + 144);
  long long v64 = v16;
  long long v17 = *(_OWORD *)(a3 + 48);
  long long v58 = *(_OWORD *)(a3 + 32);
  long long v59 = v17;
  long long v18 = *(_OWORD *)(a3 + 64);
  long long v61 = *(_OWORD *)(a3 + 80);
  long long v60 = v18;
  double v19 = *(double *)(a3 + 264);
  long long v20 = *(_OWORD *)(a3 + 288);
  long long v74 = *(_OWORD *)(a3 + 272);
  long long v75 = v20;
  id v21 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  uint64_t v51 = v4 + 28;
  uint64_t v22 = v4[31];
  uint64_t v23 = v4[32];
  __swift_project_boxed_opaque_existential_1(v4 + 28, v22);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8);
  uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAD8A0];
  sub_1C12CA0A8(0, &qword_1EB874310, MEMORY[0x1E4FAD8A0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HeadlineView);
  uint64_t v26 = v25;
  uint64_t v53 = v25;
  uint64_t v52 = sub_1BFDB7574(&qword_1EB874308, &qword_1EB874310, v24);
  v48(a1, v26, v52, v22, v23);
  uint64_t v76 = 1;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  char v80 = 0;
  uint64_t v27 = (void *)a1;
  sub_1C130CFC4(a1, (uint64_t)&v76);
  uint64_t v28 = v4[11];
  uint64_t ObjectType = swift_getObjectType();
  *(double *)uint64_t v56 = v8;
  *(double *)&v56[1] = v9;
  uint64_t v56[2] = v10;
  uint64_t v57 = *(void *)&v11;
  double v73 = v19;
  id v30 = (void *)sub_1C151AFCC();
  uint64_t v31 = v49;
  (*(void (**)(uint64_t, uint64_t *, void *, uint64_t, uint64_t))(v28 + 32))(v49, v56, v30, ObjectType, v28);

  id v47 = v27;
  objc_msgSend(v27, sel_bounds);
  double v36 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))objc_msgSend(self, sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E4F39EA8], v32, v33, v34, v35, v19);
  uint64_t v37 = sub_1C151AFCC();
  uint64_t v48 = v36;
  objc_msgSend(v36, sel_setReferenceView_, v37);

  objc_msgSend(v27, sel_setFocusEffect_, v36);
  uint64_t v38 = v4[51];
  uint64_t v39 = v4[52];
  __swift_project_boxed_opaque_existential_1(v4 + 48, v38);
  uint64_t v40 = v31 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20);
  uint64_t v41 = (uint64_t)v54;
  *uint64_t v54 = *(void *)(v40 + 40);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 8);
  swift_unknownObjectRetain();
  LOBYTE(v37) = v42(v41, v38, v39);
  sub_1BFEFDC50(v41, (uint64_t (*)(void))type metadata accessor for FeedItemDimmingType);
  uint64_t v44 = v4[31];
  uint64_t v43 = v4[32];
  __swift_project_boxed_opaque_existential_1(v51, v44);
  uint64_t v57 = type metadata accessor for FeedHeadline(0);
  *(void *)&long long v58 = sub_1C12CAA3C((unint64_t *)&unk_1EB873778, 255, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v56);
  sub_1C12CA95C(v40, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  (*(void (**)(uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, uint64_t, double))(v43 + 16))(v56, v47, v37 & 1, v53, v52, v44, v43, v8, v9, COERCE__INT64(*(double *)&v50), v11);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
}

uint64_t sub_1C12C7094(void *a1, uint64_t a2, double *a3)
{
  uint64_t v76 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1F4188790](v76);
  uint64_t v7 = (_OWORD *)((char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1C151AE4C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v11 = (uint64_t *)((char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v13 = a3[1];
  double v75 = *a3;
  double v12 = v75;
  double v15 = a3[2];
  double v14 = a3[3];
  memcpy(v81, a3 + 4, sizeof(v81));
  id v16 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  sub_1BFDB81EC();
  uint64_t v18 = v17;
  uint64_t v19 = swift_allocBox();
  id v21 = (uint64_t *)(v20 + *(int *)(v18 + 48));
  sub_1C151AE3C();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0x3FE0000000000000;
  *id v21 = v22;
  uint64_t v23 = *(void (**)(uint64_t *, void, uint64_t))(v9 + 104);
  v23(v21, *MEMORY[0x1E4FAC338], v8);
  *double v11 = v19;
  v23(v11, *MEMORY[0x1E4FAC350], v8);
  uint64_t v24 = a1;
  sub_1C151AFAC();
  uint64_t v25 = v73;
  uint64_t v26 = v73[22];
  uint64_t ObjectType = swift_getObjectType();
  *(double *)&long long v78 = v12;
  *((double *)&v78 + 1) = v13;
  *(double *)&long long v79 = v15;
  *((double *)&v79 + 1) = v14;
  memcpy(v80, v81, sizeof(v80));
  uint64_t v28 = v24;
  uint64_t v29 = (void *)sub_1C151AFCC();
  (*(void (**)(uint64_t, long long *, void *, uint64_t, uint64_t))(v26 + 8))(a2, &v78, v29, ObjectType, v26);

  objc_msgSend(v24, sel_bounds);
  double v34 = UIEdgeInsetsInsetRect(v30, v31, v32, v33, 0.0, -5.0);
  double v36 = v35;
  double v38 = v37;
  double v40 = v39;
  uint64_t v41 = *(void *)(a2 + 320);
  uint64_t v42 = *(void *)(a2 + 328);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 296), v41);
  double v43 = (*(double (**)(uint64_t, uint64_t))(v42 + 64))(v41, v42);
  id v44 = objc_msgSend(self, sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E4F39EA8], v34, v36, v38, v40, v43);
  long long v74 = v24;
  uint64_t v45 = sub_1C151AFCC();
  objc_msgSend(v44, sel_setReferenceView_, v45);

  objc_msgSend(v44, sel_setPosition_, 2);
  objc_msgSend(v28, sel_setFocusEffect_, v44);
  uint64_t v46 = v25[51];
  uint64_t v47 = v25[52];
  __swift_project_boxed_opaque_existential_1(v25 + 48, v46);
  long long v48 = *(_OWORD *)(a2 + 104);
  v82[5] = *(_OWORD *)(a2 + 88);
  uint64_t v82[6] = v48;
  v83[0] = *(_OWORD *)(a2 + 120);
  *(_OWORD *)((char *)v83 + 9) = *(_OWORD *)(a2 + 129);
  long long v49 = *(_OWORD *)(a2 + 24);
  long long v50 = *(_OWORD *)(a2 + 56);
  v82[2] = *(_OWORD *)(a2 + 40);
  v82[3] = v50;
  v82[4] = *(_OWORD *)(a2 + 72);
  v82[0] = *(_OWORD *)(a2 + 8);
  v82[1] = v49;
  long long v51 = *(_OWORD *)(a2 + 88);
  long long v52 = *(_OWORD *)(a2 + 120);
  v7[6] = *(_OWORD *)(a2 + 104);
  v7[7] = v52;
  *(_OWORD *)((char *)v7 + 121) = *(_OWORD *)(a2 + 129);
  long long v53 = *(_OWORD *)(a2 + 24);
  long long v54 = *(_OWORD *)(a2 + 56);
  _OWORD v7[2] = *(_OWORD *)(a2 + 40);
  void v7[3] = v54;
  v7[4] = *(_OWORD *)(a2 + 72);
  v7[5] = v51;
  *uint64_t v7 = *(_OWORD *)(a2 + 8);
  v7[1] = v53;
  type metadata accessor for FeedItem(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v47 + 8);
  sub_1C0187FB0((uint64_t)v82);
  LOBYTE(v45) = v55(v7, v46, v47);
  sub_1BFEFDC50((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedItemDimmingType);
  uint64_t v56 = v25 + 28;
  uint64_t v58 = v25[31];
  uint64_t v57 = v25[32];
  __swift_project_boxed_opaque_existential_1(v56, v58);
  long long v59 = *(_OWORD *)(a2 + 88);
  long long v60 = *(_OWORD *)(a2 + 120);
  v80[4] = *(_OWORD *)(a2 + 104);
  v80[5] = v60;
  *(_OWORD *)((char *)&v80[5] + 9) = *(_OWORD *)(a2 + 129);
  long long v61 = *(_OWORD *)(a2 + 24);
  long long v62 = *(_OWORD *)(a2 + 56);
  v80[0] = *(_OWORD *)(a2 + 40);
  v80[1] = v62;
  v80[2] = *(_OWORD *)(a2 + 72);
  v80[3] = v59;
  long long v78 = *(_OWORD *)(a2 + 8);
  long long v79 = v61;
  uint64_t v77[3] = &type metadata for FeedIssue;
  v77[4] = sub_1BFEB031C();
  long long v63 = (_OWORD *)swift_allocObject();
  v77[0] = v63;
  long long v64 = *(_OWORD *)(a2 + 88);
  long long v65 = *(_OWORD *)(a2 + 120);
  v63[7] = *(_OWORD *)(a2 + 104);
  v63[8] = v65;
  *(_OWORD *)((char *)v63 + 137) = *(_OWORD *)(a2 + 129);
  long long v66 = *(_OWORD *)(a2 + 24);
  long long v67 = *(_OWORD *)(a2 + 56);
  v63[3] = *(_OWORD *)(a2 + 40);
  v63[4] = v67;
  v63[5] = *(_OWORD *)(a2 + 72);
  v63[6] = v64;
  v63[1] = *(_OWORD *)(a2 + 8);
  v63[2] = v66;
  long long v68 = *(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v57 + 16);
  sub_1C0187FB0((uint64_t)&v78);
  uint64_t v69 = type metadata accessor for CoverIssueView();
  uint64_t v70 = sub_1C12CAA3C(&qword_1EB874928, 255, (void (*)(uint64_t))type metadata accessor for CoverIssueView);
  v68(v77, v74, v45 & 1, v69, v70, v58, v57, v75, v13, v15, v14);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
}

uint64_t sub_1C12C7674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v46 = a2;
  uint64_t v47 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1F4188790](v47);
  uint64_t v8 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1C151AE4C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v12 = (uint64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v13 = *(double *)a3;
  double v14 = *(double *)(a3 + 8);
  double v16 = *(double *)(a3 + 16);
  double v15 = *(double *)(a3 + 24);
  long long v17 = *(_OWORD *)(a3 + 144);
  long long v66 = *(_OWORD *)(a3 + 128);
  long long v67 = v17;
  long long v18 = *(_OWORD *)(a3 + 176);
  long long v68 = *(_OWORD *)(a3 + 160);
  long long v69 = v18;
  long long v19 = *(_OWORD *)(a3 + 80);
  long long v62 = *(_OWORD *)(a3 + 64);
  long long v63 = v19;
  long long v20 = *(_OWORD *)(a3 + 112);
  long long v64 = *(_OWORD *)(a3 + 96);
  long long v65 = v20;
  long long v21 = *(_OWORD *)(a3 + 48);
  long long v60 = *(_OWORD *)(a3 + 32);
  long long v61 = v21;
  id v22 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  sub_1BFDB81EC();
  uint64_t v24 = v23;
  uint64_t v25 = swift_allocBox();
  uint64_t v27 = (uint64_t *)(v26 + *(int *)(v24 + 48));
  sub_1C151AE3C();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0x3FE0000000000000;
  *uint64_t v27 = v28;
  uint64_t v29 = *(void (**)(uint64_t *, void, uint64_t))(v10 + 104);
  v29(v27, *MEMORY[0x1E4FAC338], v9);
  *double v12 = v25;
  v29(v12, *MEMORY[0x1E4FAC350], v9);
  uint64_t v45 = a1;
  sub_1C151AFAC();
  uint64_t v30 = v4[24];
  uint64_t ObjectType = swift_getObjectType();
  *(double *)long long v48 = v13;
  *(double *)&v48[1] = v14;
  *(double *)&long long v48[2] = v16;
  long long v49 = *(ValueMetadata **)&v15;
  long long v56 = v66;
  long long v57 = v67;
  long long v58 = v68;
  long long v59 = v69;
  long long v52 = v62;
  long long v53 = v63;
  long long v54 = v64;
  long long v55 = v65;
  long long v50 = v60;
  long long v51 = v61;
  double v32 = (void *)sub_1C151AFCC();
  uint64_t v33 = v46;
  (*(void (**)(uint64_t, void *, void *, uint64_t, uint64_t))(v30 + 8))(v46, v48, v32, ObjectType, v30);

  uint64_t v34 = v4[51];
  uint64_t v35 = v4[52];
  __swift_project_boxed_opaque_existential_1(v4 + 48, v34);
  *uint64_t v8 = *(void *)(v33 + 24);
  swift_storeEnumTagMultiPayload();
  double v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 8);
  swift_unknownObjectRetain();
  LOBYTE(v27) = v36(v8, v34, v35);
  sub_1BFEFDC50((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedItemDimmingType);
  double v37 = v4 + 28;
  uint64_t v39 = v4[31];
  uint64_t v38 = v4[32];
  __swift_project_boxed_opaque_existential_1(v37, v39);
  long long v49 = &type metadata for FeedTag;
  *(void *)&long long v50 = sub_1BFEA44FC();
  v48[0] = swift_allocObject();
  sub_1BFEA435C(v33 + 8, v48[0] + 16);
  double v40 = *(void (**)(void *, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v38 + 16);
  uint64_t v41 = type metadata accessor for CoverChannelView();
  uint64_t v42 = sub_1C12CAA3C((unint64_t *)&unk_1EB875198, 255, (void (*)(uint64_t))type metadata accessor for CoverChannelView);
  v40(v48, v45, v27 & 1, v41, v42, v39, v38, v13, v14, v16, v15);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
}

uint64_t sub_1C12C7A6C(void *a1, uint64_t a2, long long *a3)
{
  uint64_t v4 = v3;
  uint64_t v37 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1F4188790](v37);
  uint64_t v9 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v10 = a3[7];
  long long v44 = a3[6];
  long long v45 = v10;
  uint64_t v46 = *((void *)a3 + 16);
  long long v11 = a3[3];
  long long v40 = a3[2];
  long long v41 = v11;
  long long v12 = a3[5];
  long long v42 = a3[4];
  long long v43 = v12;
  long long v13 = *a3;
  long long v39 = a3[1];
  long long v38 = v13;
  double v14 = *((double *)a3 + 17);
  double v15 = *((double *)a3 + 18);
  double v17 = *((double *)a3 + 19);
  double v16 = *((double *)a3 + 20);
  id v18 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  uint64_t v19 = v4[36];
  uint64_t v20 = v4[37];
  __swift_project_boxed_opaque_existential_1(v4 + 33, v19);
  uint64_t v36 = a2 + 8;
  double v47 = v14;
  double v48 = v15;
  double v49 = v17;
  double v50 = v16;
  long long v21 = (void *)sub_1C151AFCC();
  (*(void (**)(uint64_t, long long *, void *, uint64_t, uint64_t))(v20 + 16))(a2 + 8, &v38, v21, v19, v20);

  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1788]), sel_init);
  uint64_t v23 = sub_1C151AFCC();
  objc_msgSend(v22, sel_setReferenceView_, v23);

  objc_msgSend(a1, sel_setFocusEffect_, v22);
  uint64_t v24 = v4[51];
  uint64_t v25 = v4[52];
  __swift_project_boxed_opaque_existential_1(v4 + 48, v24);
  uint64_t v26 = *(void *)(a2 + 8);
  uint64_t v27 = *(void *)(a2 + 16);
  void *v9 = v26;
  v9[1] = v27;
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 8);
  swift_bridgeObjectRetain();
  LOBYTE(v23) = v28(v9, v24, v25);
  sub_1BFEFDC50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedItemDimmingType);
  uint64_t v29 = v4 + 28;
  uint64_t v31 = v4[31];
  uint64_t v30 = v4[32];
  __swift_project_boxed_opaque_existential_1(v29, v31);
  *((void *)&v39 + 1) = &type metadata for FeedCategory;
  *(void *)&long long v40 = sub_1C0249EE0();
  *(void *)&long long v38 = swift_allocObject();
  sub_1C0249E84(v36, v38 + 16);
  double v32 = *(void (**)(long long *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v30 + 16);
  uint64_t v33 = type metadata accessor for CategoryView();
  uint64_t v34 = sub_1C12CAA3C(&qword_1EB87B260, 255, (void (*)(uint64_t))type metadata accessor for CategoryView);
  v32(&v38, a1, v23 & 1, v33, v34, v31, v30, v14, v15, v17, v16);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
}

void sub_1C12C7DA4(void *a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)id v18 = *(_OWORD *)(a3 + 32);
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = *(void *)(a3 + 56);
  CGFloat v8 = *(double *)(a3 + 64);
  CGFloat v9 = *(double *)(a3 + 72);
  CGFloat v10 = *(double *)(a3 + 80);
  CGFloat v11 = *(double *)(a3 + 88);
  long long v12 = (void *)sub_1C151AFCC();
  __swift_project_boxed_opaque_existential_1(v3 + 43, v3[46]);
  type metadata accessor for FeedEngagementBanner();
  v28.origin.CGFloat x = v8;
  v28.origin.CGFloat y = v9;
  v28.size.width = v10;
  v28.size.height = v11;
  CGRectGetWidth(v28);
  long long v13 = (void *)sub_1C15195CC();
  sub_1C1455968(v13);

  uint64_t v15 = v3[41];
  uint64_t v14 = v3[42];
  __swift_project_boxed_opaque_existential_1(v3 + 38, v15);
  long long v20 = *(_OWORD *)v18;
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  CGFloat v23 = v8;
  CGFloat v24 = v9;
  CGFloat v25 = v10;
  CGFloat v26 = v11;
  double v16 = (void *)sub_1C151AFCC();
  (*(void (**)(uint64_t, long long *, void *, uint64_t, uint64_t))(v14 + 8))(a2, &v20, v16, v15, v14);

  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1788]), sel_init);
  double v17 = (void *)sub_1C151AFCC();
  objc_msgSend(v19, sel_setReferenceView_, v17);

  objc_msgSend(a1, sel_setFocusEffect_, v19);
}

uint64_t sub_1C12C7F54(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v175 = a7;
  uint64_t v174 = a6;
  uint64_t v172 = (void *)a4;
  uint64_t v163 = a3;
  id v181 = a2;
  id v180 = a1;
  CGFloat v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C12CA0A8(0, &qword_1EB873480, type metadata accessor for FeedItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v169 = &v159[-v10];
  uint64_t v178 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1F4188790](v178);
  id v176 = &v159[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v164 = &v159[-v13];
  MEMORY[0x1F4188790](v14);
  uint64_t v171 = &v159[-v15];
  sub_1BFDB7904();
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t ObjectType = &v159[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABD78];
  sub_1C12CA0A8(0, (unint64_t *)&unk_1EB882B60, MEMORY[0x1E4FABD78], v8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v168 = &v159[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v22);
  uint64_t v162 = &v159[-v23];
  MEMORY[0x1F4188790](v24);
  CGFloat v26 = &v159[-v25];
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = &v159[-v28];
  uint64_t v30 = sub_1C151A35C();
  uint64_t v31 = *(void **)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v161 = &v159[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = &v159[-v34];
  uint64_t v182 = a5;
  swift_bridgeObjectRetain();
  uint64_t v36 = v30;
  id v180 = v180;
  uint64_t v37 = (uint64_t)ObjectType;
  sub_1C151A32C();
  sub_1C151AFEC();
  long long v38 = (void (*)(unsigned char *, unsigned char *, uint64_t))v31[2];
  uint64_t v177 = v35;
  uint64_t v165 = v38;
  v38(v26, v35, v30);
  long long v39 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v31[7];
  uint64_t v167 = v31 + 7;
  uint64_t v166 = v39;
  v39(v26, 0, 1, v30);
  uint64_t v40 = v37 + *(int *)(v17 + 56);
  sub_1BFDB7A08((uint64_t)v29, v37, (unint64_t *)&unk_1EB882B60, v19);
  sub_1BFDB7A08((uint64_t)v26, v40, (unint64_t *)&unk_1EB882B60, v19);
  uint64_t v173 = v31;
  long long v41 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31[6];
  int v42 = v41(v37, 1, v30);
  long long v43 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
  uint64_t v179 = v30;
  if (v42 != 1)
  {
    uint64_t v50 = (uint64_t)v29;
    long long v51 = v162;
    sub_1BFDB7A08(v37, (uint64_t)v162, (unint64_t *)&unk_1EB882B60, MEMORY[0x1E4FABD78]);
    if (v41(v40, 1, v30) != 1)
    {
      long long v53 = v173;
      long long v54 = v161;
      ((void (*)(unsigned char *, uint64_t, uint64_t))v173[4])(v161, v40, v30);
      sub_1C12CAA3C(&qword_1EB885130, 255, MEMORY[0x1E4FABD78]);
      int v160 = sub_1C151E5CC();
      long long v55 = (void (*)(unsigned char *, uint64_t))v53[1];
      v55(v54, v30);
      long long v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABD78];
      sub_1BFDB7998((uint64_t)v26, (unint64_t *)&unk_1EB882B60, MEMORY[0x1E4FABD78]);
      sub_1BFDB7998(v50, (unint64_t *)&unk_1EB882B60, v56);
      v55(v51, v179);
      long long v57 = v56;
      uint64_t v36 = v179;
      sub_1BFDB7998(v37, (unint64_t *)&unk_1EB882B60, v57);
      uint64_t v48 = v182;
      double v49 = v172;
      long long v43 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
      if (v160) {
        goto LABEL_8;
      }
LABEL_12:
      uint64_t v67 = (uint64_t)v171;
      sub_1C12CA95C((uint64_t)v49, (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      id v59 = v181;
LABEL_13:
      sub_1BFEFDC50(v67, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
      goto LABEL_14;
    }
    uint64_t v44 = v37;
    long long v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABD78];
    sub_1BFDB7998((uint64_t)v26, (unint64_t *)&unk_1EB882B60, MEMORY[0x1E4FABD78]);
    sub_1BFDB7998(v50, (unint64_t *)&unk_1EB882B60, v52);
    ((void (*)(unsigned char *, uint64_t))v173[1])(v51, v30);
    double v49 = v172;
LABEL_6:
    sub_1BFEFDC50(v44, (uint64_t (*)(void))sub_1BFDB7904);
    goto LABEL_12;
  }
  uint64_t v44 = v37;
  long long v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FABD78];
  sub_1BFDB7998((uint64_t)v26, (unint64_t *)&unk_1EB882B60, MEMORY[0x1E4FABD78]);
  uint64_t v46 = v45;
  uint64_t v36 = v179;
  sub_1BFDB7998((uint64_t)v29, (unint64_t *)&unk_1EB882B60, v46);
  int v47 = v41(v40, 1, v36);
  uint64_t v48 = v182;
  double v49 = v172;
  if (v47 != 1) {
    goto LABEL_6;
  }
  sub_1BFDB7998(v37, (unint64_t *)&unk_1EB882B60, MEMORY[0x1E4FABD78]);
LABEL_8:
  long long v58 = (const char *)v43[170];
  id v59 = v181;
  [v181 v58];
  double v61 = v60;
  double v63 = v62;
  uint64_t v64 = *(void *)(v48 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  double v66 = *(double *)(v64 + 32);
  double v65 = *(double *)(v64 + 40);
  uint64_t v67 = (uint64_t)v171;
  sub_1C12CA95C((uint64_t)v49, (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  if (v61 != v66 || v63 != v65) {
    goto LABEL_13;
  }
  long long v69 = (unsigned char *)v183[25];
  uint64_t v68 = v183[26];
  uint64_t ObjectType = (unsigned char *)swift_getObjectType();
  uint64_t v70 = (void *)sub_1C151AFCC();
  long long v71 = *(unsigned char **)(v48 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  id v72 = objc_msgSend(v180, sel_traitCollection);
  double v73 = *(uint64_t (**)(void *, uint64_t, unsigned char *, id, uint64_t, uint64_t, _UNKNOWN **, unsigned char *, uint64_t))(v68 + 112);
  uint64_t v74 = type metadata accessor for FormatItemNodeData();
  uint64_t v161 = v71;
  uint64_t v162 = v69;
  double v75 = ObjectType;
  char v76 = v73(v70, v67, v71, v72, v74, v178, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v68);
  uint64_t v36 = v179;
  id v59 = v181;
  LOBYTE(v71) = v76;

  double v49 = v172;
  sub_1BFEFDC50(v67, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  if (v71)
  {
    long long v77 = (void *)sub_1C151AFCC();
    (*(void (**)(void *, unsigned char *, void *, uint64_t, uint64_t, _UNKNOWN **, unsigned char *, uint64_t))(v68 + 104))(v49, v161, v77, v74, v178, &protocol witness table for FormatItemNodeLayoutContext, v75, v68);

    ((void (*)(unsigned char *, uint64_t))v173[1])(v177, v36);
    uint64_t v78 = v182;
    return sub_1C12C90F8(v183, (uint64_t)v180, (uint64_t)v59, v78);
  }
LABEL_14:
  long long v79 = v168;
  v165(v168, v177, v36);
  v166(v79, 0, 1, v36);
  sub_1C151AFFC();
  sub_1C151F91C();
  uint64_t v80 = v183[31];
  uint64_t v81 = v183[32];
  __swift_project_boxed_opaque_existential_1(v183 + 28, v80);
  long long v82 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 8);
  uint64_t v83 = type metadata accessor for FormatLayoutView();
  uint64_t v84 = sub_1C12CAA3C(&qword_1EB875310, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutView);
  v82(v59, v83, v84, v80, v81);
  id v85 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  sub_1BFDB83D4(v59, v182);
  v184[0] = (uint64_t)objc_msgSend(v180, sel_collectionViewLayout);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB880D68);
  sub_1BFDB8970();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v187 = 0;
    memset(v186, 0, sizeof(v186));
  }
  sub_1BFDB7A08((uint64_t)v186, (uint64_t)v184, &qword_1EB87C808, (uint64_t (*)(uint64_t))sub_1BFDB8970);
  if (v185)
  {
    __swift_project_boxed_opaque_existential_1(v184, v185);
    sub_1C151676C();
    sub_1C151C75C();
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    uint64_t v91 = v90;
    uint64_t v93 = v92;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v184);
    long long v94 = v164;
    sub_1C12CA95C((uint64_t)v49, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
    uint64_t v95 = v178;
  }
  else
  {
    sub_1BFDB7998((uint64_t)v184, &qword_1EB87C808, (uint64_t (*)(uint64_t))sub_1BFDB8970);
    long long v94 = v164;
    sub_1C12CA95C((uint64_t)v49, (uint64_t)v164, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
    uint64_t v95 = v178;
    long long v96 = (uint64_t *)&v94[*(int *)(v178 + 36)];
    uint64_t v87 = *v96;
    uint64_t v89 = v96[1];
    uint64_t v91 = v96[2];
    uint64_t v93 = v96[3];
  }
  sub_1BFEFDC50((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  objc_msgSend(v59, sel_frame);
  uint64_t v98 = v97;
  uint64_t v100 = v99;
  uint64_t v102 = v101;
  uint64_t v104 = v103;
  uint64_t v106 = *v49;
  uint64_t v105 = v49[1];
  uint64_t v107 = v49;
  uint64_t v108 = v49[2];
  uint64_t v109 = v49[3];
  uint64_t v111 = v107[4];
  uint64_t v110 = v107[5];
  uint64_t v112 = *(int *)(v95 + 28);
  uint64_t v113 = v95;
  uint64_t v114 = v176;
  uint64_t v172 = (void *)((char *)v107 + v112);
  uint64_t v115 = sub_1C12CA95C((uint64_t)v107 + v112, (uint64_t)&v176[v112], type metadata accessor for FeedItem);
  uint64_t v171 = v159;
  void *v114 = v106;
  v114[1] = v105;
  v114[2] = v108;
  v114[3] = v109;
  v114[4] = v111;
  v114[5] = v110;
  long long v116 = (void *)((char *)v114 + *(int *)(v113 + 32));
  *long long v116 = v98;
  v116[1] = v100;
  v116[2] = v102;
  v116[3] = v104;
  long long v117 = (void *)((char *)v114 + *(int *)(v113 + 36));
  *long long v117 = v87;
  v117[1] = v89;
  v117[2] = v91;
  v117[3] = v93;
  uint64_t v118 = v182;
  uint64_t v119 = *(void *)(v182 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  MEMORY[0x1F4188790](v115);
  long long v120 = v183;
  *(void *)&v159[-64] = v183;
  *(void *)&v159[-56] = v114;
  *(void *)&v159[-48] = v118;
  *(void *)&v159[-40] = v59;
  id v156 = v180;
  uint64_t v157 = v174;
  uint64_t v158 = v175;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C151AFBC();
  uint64_t v121 = v120[26];
  uint64_t v171 = (unsigned char *)v120[25];
  uint64_t v168 = (unsigned char *)swift_getObjectType();
  uint64_t v122 = v119 + *(void *)(*(void *)v119 + 144);
  uint64_t ObjectType = *(unsigned char **)(v118 + 64);
  CGRect v123 = (void *)sub_1C151AFCC();
  id v124 = (uint64_t *)(v122 + *(int *)(type metadata accessor for FormatItemNodeData() + 32));
  uint64_t v126 = v124[1];
  uint64_t v127 = v124[2];
  v184[0] = *v124;
  uint64_t v125 = v184[0];
  v184[1] = v126;
  v184[2] = v127;
  id v128 = *(void (**)(void *, uint64_t, unsigned char *, void *, uint64_t *, uint64_t, uint64_t, uint64_t, _UNKNOWN **, unsigned char *, uint64_t))(v121 + 96);
  sub_1C017C3D4(v184[0], v126);
  v128(v114, v122, ObjectType, v123, v184, v174, v175, v178, &protocol witness table for FormatItemNodeLayoutContext, v168, v121);

  uint64_t v78 = v182;
  sub_1C017C418(v125, v126);
  uint64_t v129 = *(void *)(v78 + 32);
  if (v129)
  {
    id v59 = v181;
    sub_1C151F94C();
    uint64_t v130 = (double *)(v129 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
    unsigned int v131 = *(unsigned __int16 *)(v129 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
    uint64_t v132 = v179;
    if ((v131 & 0xFF00) == 0x400)
    {
      uint64_t v129 = 0;
      double v133 = *MEMORY[0x1E4FB2848];
      double v134 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    }
    else
    {
      if (v131) {
        uint64_t v130 = (double *)MEMORY[0x1E4FB2848];
      }
      double v133 = *v130;
      double v134 = v130[1];
      uint64_t v129 = 0;
      switch(v131 >> 8)
      {
        case 1u:
          uint64_t v129 = 1;
          break;
        case 2u:
          uint64_t v129 = 2;
          break;
        default:
          break;
      }
    }
  }
  else
  {
    id v59 = v181;
    sub_1C151F94C();
    double v133 = *MEMORY[0x1E4FB2848];
    double v134 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    uint64_t v132 = v179;
  }
  objc_msgSend(v59, sel_bounds);
  double v139 = UIEdgeInsetsInsetRect(v135, v136, v137, v138, v133, v134);
  double v141 = v140;
  double v143 = v142;
  double v145 = v144;
  char v146 = (void *)sub_1C151AF9C();
  sub_1C151B7BC();
  double v148 = v147;

  id v149 = objc_msgSend(self, sel_effectWithRoundedRect_cornerRadius_curve_, *MEMORY[0x1E4F39EA8], v139, v141, v143, v145, v148);
  id v150 = (void *)sub_1C151AFCC();
  objc_msgSend(v149, sel_setReferenceView_, v150);

  objc_msgSend(v149, sel_setPosition_, v129);
  objc_msgSend(v59, sel_setFocusEffect_, v149);
  id v151 = (void *)sub_1C151AFCC();

  ((void (*)(unsigned char *, uint64_t))v173[1])(v177, v132);
  sub_1BFEFDC50((uint64_t)v176, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  uint64_t v152 = v169;
  sub_1C12CA95C((uint64_t)v172, (uint64_t)v169, type metadata accessor for FeedItem);
  uint64_t v153 = type metadata accessor for FeedItem(0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v152, 0, 1, v153);
  uint64_t v154 = (uint64_t)v151 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem;
  swift_beginAccess();
  sub_1C04950D4((uint64_t)v152, v154);
  swift_endAccess();

  sub_1BFDB7998((uint64_t)v186, &qword_1EB87C808, (uint64_t (*)(uint64_t))sub_1BFDB8970);
  return sub_1C12C90F8(v183, (uint64_t)v180, (uint64_t)v59, v78);
}

uint64_t sub_1C12C90F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)sub_1C151AFCC();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = (uint64_t (*)())swift_allocObject();
  *((void *)v13 + 2) = v11;
  *((void *)v13 + 3) = v12;
  *((void *)v13 + 4) = a4;
  uint64_t v14 = (uint64_t (**)())&v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  uint64_t v15 = *(void *)&v10[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  void *v14 = sub_1C12CAA20;
  v14[1] = v13;
  swift_retain();
  sub_1BFC3E5C0(v15);

  uint64_t v16 = (char *)sub_1C151AFCC();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = (void (**)(CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat))&v16[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  uint64_t v19 = *(void *)&v16[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  *uint64_t v18 = sub_1C12CAA2C;
  v18[1] = (void (*)(CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat))v17;
  sub_1BFC3E5C0(v19);

  uint64_t v20 = sub_1C151AFCC();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = (void (**)())(v20 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide);
  uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide);
  void *v22 = sub_1C12CAA34;
  v22[1] = (void (*)())v21;
  sub_1BFC3E5C0(v23);

  uint64_t v24 = a1[51];
  uint64_t v25 = a1[52];
  __swift_project_boxed_opaque_existential_1(a1 + 48, v24);
  uint64_t v26 = a4 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem;
  sub_1C12CA95C(a4 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem, (uint64_t)v9, type metadata accessor for FeedItem);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 8))(v9, v24, v25);
  sub_1BFEFDC50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedItemDimmingType);
  uint64_t v27 = a1 + 28;
  uint64_t v29 = a1[31];
  uint64_t v28 = a1[32];
  __swift_project_boxed_opaque_existential_1(v27, v29);
  v41[3] = type metadata accessor for FeedItem(0);
  v41[4] = sub_1C12CAA3C((unint64_t *)&qword_1EB87AF60, 255, (void (*)(uint64_t))type metadata accessor for FeedItem);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
  sub_1C12CA95C(v26, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
  uint64_t v31 = *(double **)(a4 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  double v32 = v31[2];
  double v33 = v31[3];
  double v34 = v31[4];
  double v35 = v31[5];
  uint64_t v36 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))(v28 + 16);
  uint64_t v37 = type metadata accessor for FormatLayoutView();
  uint64_t v38 = sub_1C12CAA3C(&qword_1EB875310, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutView);
  v36(v41, a3, v20 & 1, v37, v38, v29, v28, v32, v33, v34, v35);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_1C12C94C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a1 + 208);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  uint64_t v11 = (void *)sub_1C151AFCC();
  id v12 = objc_msgSend(a5, sel_traitCollection);
  uint64_t v13 = *(void *)(*(void *)v10 + 144);
  uint64_t v14 = type metadata accessor for FormatItemNodeData();
  uint64_t v15 = (uint64_t *)(v10 + *(int *)(v14 + 32) + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v18 = v15[2];
  v26[0] = v17;
  v26[1] = v16;
  uint64_t v26[2] = v18;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, void *, id, void *, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 80);
  sub_1C017C3D4(v17, v16);
  uint64_t v20 = type metadata accessor for FormatItemNodeLayoutContext();
  v19(a2, v10, v11, v12, v26, a6, a7, v14, v20, &protocol witness table for FormatItemNodeLayoutContext, ObjectType, v9);

  return sub_1C017C418(v17, v16);
}

uint64_t sub_1C12C9624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151C74C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (void *)((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = *(void *)(result + 424);
    swift_retain();
    uint64_t result = swift_release();
    if (v10)
    {
      swift_beginAccess();
      uint64_t v11 = MEMORY[0x1C18C9C60](a2 + 16);
      if (v11)
      {
        id v12 = (void *)v11;
        id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C58]), sel_initWithMass_stiffness_damping_initialVelocity_, 1.0, 300.0, 32.0, 0.0, 0.0);
        objc_msgSend(v13, sel_ts_settlingDuration);
        id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1ED8]), sel_initWithDuration_timingParameters_, v13, v14);
        v17[1] = *(void *)(*(void *)(a3
                                       + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                           + 48);
        *uint64_t v8 = v15;
        (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAD688], v5);
        swift_bridgeObjectRetain();
        id v16 = v15;
        sub_1C151C62C();

        swift_bridgeObjectRelease();
        swift_release();
        return (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}