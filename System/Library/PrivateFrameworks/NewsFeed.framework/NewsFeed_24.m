uint64_t PuzzleMenusConfiguration.menus.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::PuzzleMenusConfiguration_optional __swiftcall PuzzleMenusConfiguration.init(with:)(Swift::OpaquePointer with)
{
  v3 = v1;
  if (*((void *)with._rawValue + 2)
    && (unint64_t v4 = sub_1BFEF2D8C(0x73756E656DLL, 0xE500000000000000), (v5 & 1) != 0)
    && (sub_1BFF6A008(*((void *)with._rawValue + 7) + 32 * v4, (uint64_t)v33),
        sub_1BFD2C710(0, (unint64_t *)&qword_1EA19BBA8, (uint64_t (*)(uint64_t))sub_1BFFB4FA4, MEMORY[0x1E4FBB320]), (swift_dynamicCast() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v32[0] + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
      uint64_t v8 = v6 - 1;
      v9 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v10 = swift_bridgeObjectRetain();
        PuzzleMenuConfig.init(with:)(v10, (uint64_t)v30);
        sub_1C065D9D0((uint64_t)v30, (uint64_t)v32);
        sub_1C065D9D0((uint64_t)v32, (uint64_t)v33);
        if (sub_1C065DA58((uint64_t)v33) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v9 = sub_1C0EE5E8C(0, v9[2] + 1, 1, v9);
          }
          unint64_t v12 = v9[2];
          unint64_t v11 = v9[3];
          if (v12 >= v11 >> 1) {
            v9 = sub_1C0EE5E8C((void *)(v11 > 1), v12 + 1, 1, v9);
          }
          sub_1C065D9D0((uint64_t)v32, (uint64_t)v30);
          v9[2] = v12 + 1;
          v13 = &v9[18 * v12];
          v13[2] = v30[0];
          long long v14 = v30[4];
          long long v15 = v30[2];
          long long v16 = v30[1];
          v13[5] = v30[3];
          v13[6] = v14;
          v13[3] = v16;
          v13[4] = v15;
          long long v17 = v31[0];
          long long v18 = v30[6];
          long long v19 = v30[5];
          *(_OWORD *)((char *)v13 + 153) = *(_OWORD *)((char *)v31 + 9);
          v13[8] = v18;
          v13[9] = v17;
          v13[7] = v19;
        }
        if (v8 == v7) {
          break;
        }
        ++v7;
      }
      v28 = (void *)swift_bridgeObjectRelease_n();
    }
    else
    {
      v28 = (void *)swift_bridgeObjectRelease();
      v9 = (void *)MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C15198DC();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    v21 = sub_1C15198AC();
    os_log_type_t v22 = sub_1C151F36C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v33[0] = v24;
      *(_DWORD *)v23 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1C151E34C();
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      v32[0] = sub_1BFDA76EC(v25, v27, v33);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v21, v22, "Failed parsing PuzzleMenusConfiguration. Invalid menus entry: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v24, -1, -1);
      MEMORY[0x1C18C9B00](v23, -1, -1);
    }
    else
    {

      v28 = (void *)swift_bridgeObjectRelease_n();
    }
    v9 = 0;
  }
  void *v3 = v9;
  result.value.menus._rawValue = v28;
  result.is_nil = v29;
  return result;
}

uint64_t sub_1C0B74488()
{
  return 0x73756E656DLL;
}

uint64_t sub_1C0B7449C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73756E656DLL && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0B7452C(uint64_t a1)
{
  unint64_t v2 = sub_1C0B77024();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B74568(uint64_t a1)
{
  unint64_t v2 = sub_1C0B77024();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleMenusConfiguration.encode(to:)(void *a1)
{
  sub_1C0B78020(0, &qword_1EA1A3F98, (uint64_t (*)(void))sub_1C0B77024, (uint64_t)&type metadata for PuzzleMenusConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B77024();
  sub_1C1520F0C();
  v10[3] = v8;
  sub_1BFEFDF24(0, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
  sub_1C0B77078(&qword_1EA19CED0, (void (*)(void))sub_1C065DC5C);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleMenusConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v12 = a2;
  sub_1C0B78020(0, &qword_1EA1A3FA8, (uint64_t (*)(void))sub_1C0B77024, (uint64_t)&type metadata for PuzzleMenusConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B77024();
  sub_1C1520EBC();
  if (!v2)
  {
    v9 = v12;
    sub_1BFEFDF24(0, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
    sub_1C0B77078(&qword_1EA19CEE8, (void (*)(void))sub_1C065DDA8);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    void *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0B74998@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PuzzleMenusConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C0B749B0(void *a1)
{
  return PuzzleMenusConfiguration.encode(to:)(a1);
}

NewsFeed::PuzzleMenuConfig::State_optional __swiftcall PuzzleMenuConfig.State.init(rawValue:)(Swift::String rawValue)
{
  return (NewsFeed::PuzzleMenuConfig::State_optional)sub_1C0B74CC0(v1);
}

uint64_t PuzzleMenuConfig.State.rawValue.getter()
{
  uint64_t v1 = 28271;
  if (*v0 != 1) {
    uint64_t v1 = 0x646578696DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6710895;
  }
}

uint64_t sub_1C0B74A18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148D4C0(*a1, *a2);
}

uint64_t sub_1C0B74A24()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B74AB0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0B74B28()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleMenuConfig::State_optional sub_1C0B74BB0(Swift::String *a1)
{
  return PuzzleMenuConfig.State.init(rawValue:)(*a1);
}

void sub_1C0B74BBC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 28271;
  if (v2 != 1)
  {
    uint64_t v5 = 0x646578696DLL;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 6710895;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0B74C04()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0B74C64()
{
  return sub_1C151EAEC();
}

NewsFeed::PuzzleMenuConfig::Attribute_optional __swiftcall PuzzleMenuConfig.Attribute.init(rawValue:)(Swift::String rawValue)
{
  return (NewsFeed::PuzzleMenuConfig::Attribute_optional)sub_1C0B74CC0(v1);
}

uint64_t sub_1C0B74CC0@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t PuzzleMenuConfig.Attribute.rawValue.getter()
{
  unint64_t v1 = 0x64656C6261736964;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7463757274736564;
  }
}

uint64_t sub_1C0B74D80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148D5AC(*a1, *a2);
}

uint64_t sub_1C0B74D8C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B74E3C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0B74ED8()
{
  return sub_1C1520E0C();
}

NewsFeed::PuzzleMenuConfig::Attribute_optional sub_1C0B74F84(Swift::String *a1)
{
  return PuzzleMenuConfig.Attribute.init(rawValue:)(*a1);
}

void sub_1C0B74F90(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB00000000657669;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x64656C6261736964;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000012;
    unint64_t v4 = 0x80000001C15FCDC0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7463757274736564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0B74FFC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0B7505C()
{
  return sub_1C151EAEC();
}

uint64_t PuzzleMenuConfig.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.icon.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.accessibilityLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.toolbarItemLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMenuConfig.inline.getter()
{
  return *(unsigned __int8 *)(v0 + 104);
}

void PuzzleMenuConfig.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 105);
}

uint64_t PuzzleMenuConfig.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMenuConfig.tooltip.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleMenuConfig.iconThemeInverted.getter()
{
  return *(unsigned __int8 *)(v0 + 136);
}

__n128 PuzzleMenuConfig.init(identifier:title:subtitle:icon:accessibilityLabel:toolbarItemLabel:tooltip:items:inline:state:attributes:iconThemeInverted:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char *a16, uint64_t a17, char a18)
{
  __n128 result = a11;
  char v19 = *a16;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(void *)(a9 + 96) = a14;
  *(unsigned char *)(a9 + 104) = a15;
  *(unsigned char *)(a9 + 105) = v19;
  *(void *)(a9 + 112) = a17;
  *(void *)(a9 + 120) = a12;
  *(void *)(a9 + 128) = a13;
  *(unsigned char *)(a9 + 136) = a18;
  return result;
}

uint64_t PuzzleMenuConfig.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 96);
  int v16 = *(unsigned __int8 *)(v1 + 105);
  uint64_t v15 = *(void *)(v1 + 88);
  uint64_t v17 = *(void *)(v1 + 112);
  uint64_t v18 = *(void *)(v1 + 128);
  if (*(void *)(v1 + 8))
  {
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1C1520DDC();
    if (v3)
    {
LABEL_3:
      sub_1C1520DDC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  sub_1C1520DDC();
  if (v4)
  {
LABEL_4:
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v8 = v15;
    if (v5) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  sub_1C1520DDC();
  uint64_t v8 = v15;
  if (v5)
  {
LABEL_5:
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  sub_1C1520DDC();
  if (v6)
  {
LABEL_6:
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v9 = v17;
    if (v8) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  sub_1C1520DDC();
  uint64_t v9 = v17;
  if (v8)
  {
LABEL_7:
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_8;
    }
LABEL_19:
    sub_1C1520DDC();
    goto LABEL_20;
  }
LABEL_18:
  sub_1C1520DDC();
  if (!v7) {
    goto LABEL_19;
  }
LABEL_8:
  sub_1C1520DDC();
  uint64_t v10 = *(void *)(v7 + 16);
  sub_1C1520DCC();
  if (v10)
  {
    swift_bridgeObjectRetain();
    PuzzleMenuConfig.hash(into:)(a1);
    uint64_t v11 = v10 - 1;
    if (v11)
    {
      uint64_t v12 = v7 + 176;
      do
      {
        v12 += 144;
        PuzzleMenuConfig.hash(into:)(a1);
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
  }
LABEL_20:
  sub_1C1520DDC();
  if (v16 == 3)
  {
    sub_1C1520DDC();
    uint64_t v13 = v18;
    if (!v9) {
      goto LABEL_22;
    }
LABEL_25:
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C0B77670(a1, v9);
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_23;
    }
LABEL_26:
    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  uint64_t v13 = v18;
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_25;
  }
LABEL_22:
  sub_1C1520DDC();
  if (v13) {
    goto LABEL_26;
  }
LABEL_23:
  sub_1C1520DDC();
  return sub_1C1520DDC();
}

unint64_t sub_1C0B7566C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x656C746974627573;
      break;
    case 3:
      unint64_t result = 1852793705;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x736D657469;
      break;
    case 7:
      unint64_t result = 0x656E696C6E69;
      break;
    case 8:
      unint64_t result = 0x6574617473;
      break;
    case 9:
      unint64_t result = 0x7475626972747461;
      break;
    case 10:
      unint64_t result = 0x7069746C6F6F74;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0B757D8()
{
  return sub_1C0B7566C(*v0);
}

uint64_t sub_1C0B757E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0B78C5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B75808(uint64_t a1)
{
  unint64_t v2 = sub_1C0B77F24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B75844(uint64_t a1)
{
  unint64_t v2 = sub_1C0B77F24();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PuzzleMenuConfig.encode(to:)(void *a1)
{
  sub_1C0B78020(0, &qword_1EA1A3FB0, (uint64_t (*)(void))sub_1C0B77F24, (uint64_t)&type metadata for PuzzleMenuConfig.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v16 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v31 = *(void *)(v1 + 24);
  uint64_t v32 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v29 = *(void *)(v1 + 40);
  uint64_t v30 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v27 = *(void *)(v1 + 56);
  uint64_t v28 = v10;
  uint64_t v11 = *(void *)(v1 + 72);
  uint64_t v25 = *(void *)(v1 + 64);
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v1 + 88);
  uint64_t v23 = *(void *)(v1 + 80);
  uint64_t v24 = v12;
  uint64_t v22 = *(void *)(v1 + 96);
  LODWORD(v10) = *(unsigned __int8 *)(v1 + 104);
  int v20 = *(unsigned __int8 *)(v1 + 105);
  int v21 = v10;
  uint64_t v13 = *(void *)(v1 + 112);
  uint64_t v17 = *(void *)(v1 + 120);
  uint64_t v18 = *(void *)(v1 + 128);
  uint64_t v19 = v13;
  v16[1] = *(unsigned __int8 *)(v1 + 136);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B77F24();
  sub_1C1520F0C();
  LOBYTE(v35) = 0;
  uint64_t v14 = v33;
  sub_1C152074C();
  if (!v14)
  {
    LOBYTE(v35) = 1;
    sub_1C152074C();
    LOBYTE(v35) = 2;
    sub_1C152074C();
    uint64_t v33 = v5;
    LOBYTE(v35) = 3;
    sub_1C152074C();
    LOBYTE(v35) = 4;
    sub_1C152074C();
    LOBYTE(v35) = 5;
    sub_1C152074C();
    uint64_t v35 = v22;
    char v34 = 6;
    sub_1BFEFDF24(0, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
    sub_1C0B77078(&qword_1EA19CED0, (void (*)(void))sub_1C065DC5C);
    sub_1C152078C();
    LOBYTE(v35) = 7;
    sub_1C15207DC();
    LOBYTE(v35) = v20;
    char v34 = 8;
    sub_1C0B77F78();
    sub_1C152078C();
    uint64_t v35 = v19;
    char v34 = 9;
    sub_1BFEFDF24(0, &qword_1EA1A3FC8, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute, MEMORY[0x1E4FBB320]);
    sub_1C0B780DC(&qword_1EA1A3FD0, (void (*)(void))sub_1C0B77FCC);
    sub_1C152078C();
    LOBYTE(v35) = 10;
    sub_1C152074C();
    LOBYTE(v35) = 11;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleMenuConfig.hashValue.getter()
{
  sub_1C1520DBC();
  PuzzleMenuConfig.hash(into:)((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t PuzzleMenuConfig.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0B78020(0, &qword_1EA1A3FE0, (uint64_t (*)(void))sub_1C0B77F24, (uint64_t)&type metadata for PuzzleMenuConfig.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v61 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = a1[3];
  v82 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1C0B77F24();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  }
  uint64_t v10 = v6;
  v56 = a2;
  LOBYTE(v70[0]) = 0;
  uint64_t v11 = sub_1C152060C();
  uint64_t v13 = v12;
  LOBYTE(v70[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_1C152060C();
  uint64_t v55 = v11;
  LOBYTE(v70[0]) = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C152060C();
  uint64_t v60 = v15;
  uint64_t v53 = v16;
  LOBYTE(v70[0]) = 3;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C152060C();
  uint64_t v59 = v18;
  uint64_t v52 = v19;
  LOBYTE(v70[0]) = 4;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C152060C();
  uint64_t v58 = v21;
  uint64_t v51 = v22;
  LOBYTE(v70[0]) = 5;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C152060C();
  uint64_t v57 = v24;
  uint64_t v50 = v25;
  uint64_t v27 = v26;
  sub_1BFEFDF24(0, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
  LOBYTE(v62) = 6;
  sub_1C0B77078(&qword_1EA19CEE8, (void (*)(void))sub_1C065DDA8);
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v28 = v27;
  uint64_t v29 = v70[0];
  LOBYTE(v70[0]) = 7;
  swift_bridgeObjectRetain();
  int v49 = sub_1C15206AC();
  LOBYTE(v62) = 8;
  sub_1C0B78088();
  sub_1C152065C();
  uint64_t v47 = v29;
  int v46 = LOBYTE(v70[0]);
  sub_1BFEFDF24(0, &qword_1EA1A3FC8, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute, MEMORY[0x1E4FBB320]);
  LOBYTE(v62) = 9;
  sub_1C0B780DC(&qword_1EA1A3FF0, (void (*)(void))sub_1C0B7816C);
  sub_1C152065C();
  uint64_t v30 = v70[0];
  LOBYTE(v70[0]) = 10;
  uint64_t v48 = v30;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C152060C();
  uint64_t v33 = v32;
  char v79 = 11;
  swift_bridgeObjectRetain();
  char v34 = sub_1C15206AC();
  v49 &= 1u;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v61);
  LODWORD(v61) = v34 & 1;
  *(void *)&long long v62 = v55;
  *((void *)&v62 + 1) = v13;
  *(void *)&long long v63 = v54;
  *((void *)&v63 + 1) = v60;
  *(void *)&long long v64 = v53;
  *((void *)&v64 + 1) = v59;
  *(void *)&long long v65 = v52;
  *((void *)&v65 + 1) = v58;
  uint64_t v35 = v57;
  *(void *)&long long v66 = v51;
  *((void *)&v66 + 1) = v57;
  *(void *)&long long v67 = v50;
  *((void *)&v67 + 1) = v28;
  *(void *)&long long v68 = v47;
  BYTE8(v68) = v49;
  BYTE9(v68) = v46;
  *(void *)&v69[0] = v48;
  *((void *)&v69[0] + 1) = v31;
  uint64_t v45 = v31;
  *(void *)&v69[1] = v33;
  BYTE8(v69[1]) = v34 & 1;
  sub_1C00DD354((uint64_t)&v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v59;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v28;
  swift_bridgeObjectRelease();
  uint64_t v38 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v39 = v69[0];
  v40 = v56;
  v56[6] = v68;
  v40[7] = v39;
  *(_OWORD *)((char *)v40 + 121) = *(_OWORD *)((char *)v69 + 9);
  long long v41 = v65;
  v40[2] = v64;
  v40[3] = v41;
  long long v42 = v67;
  v40[4] = v66;
  v40[5] = v42;
  long long v43 = v63;
  _OWORD *v40 = v62;
  v40[1] = v43;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  v70[0] = v55;
  v70[1] = v13;
  v70[2] = v54;
  v70[3] = v60;
  v70[4] = v53;
  v70[5] = v36;
  v70[6] = v52;
  v70[7] = v58;
  v70[8] = v51;
  v70[9] = v35;
  v70[10] = v50;
  v70[11] = v37;
  v70[12] = v38;
  char v71 = v49;
  char v72 = v46;
  int v73 = v80;
  __int16 v74 = v81;
  uint64_t v75 = v48;
  uint64_t v76 = v45;
  uint64_t v77 = v33;
  char v78 = v61;
  return sub_1C00DD3FC((uint64_t)v70);
}

uint64_t sub_1C0B768AC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return PuzzleMenuConfig.init(from:)(a1, a2);
}

uint64_t sub_1C0B768C4(void *a1)
{
  return PuzzleMenuConfig.encode(to:)(a1);
}

uint64_t sub_1C0B768DC()
{
  sub_1C1520DBC();
  PuzzleMenuConfig.hash(into:)((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t sub_1C0B76920()
{
  sub_1C1520DBC();
  PuzzleMenuConfig.hash(into:)((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t PuzzleMenuConfig.withState(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  uint64_t v5 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 96);
  char v6 = *(unsigned char *)(v2 + 104);
  uint64_t v7 = *(void *)(v2 + 128);
  char v8 = *(unsigned char *)(v2 + 136);
  *(void *)a2 = *(void *)v2;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v2 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v2 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(v2 + 72);
  *(void *)(a2 + 88) = v5;
  *(void *)(a2 + 96) = v4;
  *(unsigned char *)(a2 + 104) = v6;
  *(unsigned char *)(a2 + 105) = v3;
  *(_OWORD *)(a2 + 112) = *(_OWORD *)(v2 + 112);
  *(unsigned char *)(a2 + 136) = v8;
  *(void *)(a2 + 128) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PuzzleMenuConfig.selecting(identifier:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v4 = v3[6];
  long long v5 = v3[7];
  long long v6 = v3[4];
  v67[5] = v3[5];
  long long v68 = v4;
  *(_OWORD *)v69 = v5;
  *(_OWORD *)&v69[9] = *(_OWORD *)((char *)v3 + 121);
  long long v7 = v3[3];
  v67[2] = v3[2];
  v67[3] = v7;
  v67[4] = v6;
  long long v8 = v3[1];
  v67[0] = *v3;
  v67[1] = v8;
  if ((void)v68)
  {
    uint64_t v9 = *(void *)(v68 + 16);
    if (v9)
    {
      uint64_t v42 = a3;
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v48 = v9 - 1;
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = 32;
      for (i = v10; ; uint64_t v10 = i)
      {
        long long v59 = *(_OWORD *)(v10 + v12);
        long long v13 = *(_OWORD *)(v10 + v12 + 16);
        long long v14 = *(_OWORD *)(v10 + v12 + 32);
        long long v15 = *(_OWORD *)(v10 + v12 + 64);
        long long v62 = *(_OWORD *)(v10 + v12 + 48);
        long long v63 = v15;
        long long v60 = v13;
        long long v61 = v14;
        long long v16 = *(_OWORD *)(v10 + v12 + 80);
        long long v17 = *(_OWORD *)(v10 + v12 + 96);
        long long v18 = *(_OWORD *)(v10 + v12 + 112);
        *(_OWORD *)&v66[9] = *(_OWORD *)(v10 + v12 + 121);
        long long v65 = v17;
        *(_OWORD *)long long v66 = v18;
        long long v64 = v16;
        uint64_t v19 = *((void *)&v59 + 1);
        uint64_t v46 = v12;
        uint64_t v56 = v59;
        if (a2)
        {
          if (*((void *)&v59 + 1) && (v59 == __PAIR128__(a2, a1) || (sub_1C1520A9C() & 1) != 0))
          {
LABEL_8:
            char v47 = 1;
            goto LABEL_11;
          }
        }
        else if (!*((void *)&v59 + 1))
        {
          goto LABEL_8;
        }
        char v47 = 0;
LABEL_11:
        uint64_t v20 = *((void *)&v60 + 1);
        uint64_t v21 = *((void *)&v61 + 1);
        uint64_t v53 = v61;
        uint64_t v54 = v60;
        uint64_t v22 = *((void *)&v62 + 1);
        uint64_t v23 = *((void *)&v63 + 1);
        uint64_t v51 = v63;
        uint64_t v52 = v62;
        uint64_t v24 = *((void *)&v64 + 1);
        uint64_t v50 = v64;
        uint64_t v25 = v65;
        char v49 = BYTE8(v65);
        long long v26 = *(_OWORD *)v66;
        uint64_t v27 = *(void *)&v66[16];
        char v55 = v66[24];
        sub_1C00DD354((uint64_t)&v59);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1C0EE5E8C(0, v11[2] + 1, 1, v11);
        }
        unint64_t v29 = v11[2];
        unint64_t v28 = v11[3];
        uint64_t v30 = v11;
        if (v29 >= v28 >> 1) {
          uint64_t v30 = sub_1C0EE5E8C((void *)(v28 > 1), v29 + 1, 1, v11);
        }
        v30[2] = v26 + 1;
        uint64_t v11 = v30;
        uint64_t v31 = &v30[18 * v26];
        v31[4] = v56;
        v31[5] = v19;
        v31[6] = v54;
        v31[7] = v20;
        v31[8] = v53;
        v31[9] = v21;
        v31[10] = v52;
        v31[11] = v22;
        v31[12] = v51;
        v31[13] = v23;
        v31[14] = v50;
        v31[15] = v24;
        v31[16] = v25;
        *((unsigned char *)v31 + 136) = v49;
        *((unsigned char *)v31 + 137) = v47;
        *(_DWORD *)((char *)v31 + 138) = v57;
        *((_WORD *)v31 + 71) = v58;
        *((_OWORD *)v31 + 9) = v26;
        v31[20] = v27;
        *((unsigned char *)v31 + 168) = v55;
        sub_1C00DD3FC((uint64_t)&v59);
        if (!v48)
        {
          swift_bridgeObjectRelease();
          a3 = v42;
          goto LABEL_20;
        }
        --v48;
        uint64_t v12 = v46 + 144;
      }
    }
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
    uint64_t v37 = *((void *)&v67[5] + 1);
    uint64_t v38 = *(void *)&v69[16];
    char v39 = BYTE8(v68);
    char v40 = BYTE9(v68);
    char v41 = v69[24];
    *(void *)a3 = *(void *)&v67[0];
    *(_OWORD *)(a3 + 8) = *(_OWORD *)((char *)v67 + 8);
    *(_OWORD *)(a3 + 24) = *(_OWORD *)((char *)&v67[1] + 8);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)((char *)&v67[2] + 8);
    *(_OWORD *)(a3 + 56) = *(_OWORD *)((char *)&v67[3] + 8);
    *(_OWORD *)(a3 + 72) = *(_OWORD *)((char *)&v67[4] + 8);
    *(void *)(a3 + 88) = v37;
    *(void *)(a3 + 96) = v11;
    *(unsigned char *)(a3 + 104) = v39;
    *(unsigned char *)(a3 + 105) = v40;
    *(_OWORD *)(a3 + 112) = *(_OWORD *)v69;
    *(unsigned char *)(a3 + 136) = v41;
    *(void *)(a3 + 128) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = v3[7];
    *(_OWORD *)(a3 + 96) = v3[6];
    *(_OWORD *)(a3 + 112) = v32;
    *(_OWORD *)(a3 + 121) = *(_OWORD *)((char *)v3 + 121);
    long long v33 = v3[3];
    *(_OWORD *)(a3 + 32) = v3[2];
    *(_OWORD *)(a3 + 48) = v33;
    long long v34 = v3[5];
    *(_OWORD *)(a3 + 64) = v3[4];
    *(_OWORD *)(a3 + 80) = v34;
    long long v35 = v3[1];
    *(_OWORD *)a3 = *v3;
    *(_OWORD *)(a3 + 16) = v35;
    return sub_1C00DD354((uint64_t)v67);
  }
}

uint64_t PuzzleMenuConfig.selectedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 96);
  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain_n();
  long long v5 = *(_OWORD *)(v3 + 128);
  long long v27 = *(_OWORD *)(v3 + 112);
  long long v28 = v5;
  v29[0] = *(_OWORD *)(v3 + 144);
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)(v3 + 153);
  long long v6 = *(_OWORD *)(v3 + 48);
  long long v7 = *(_OWORD *)(v3 + 80);
  long long v8 = *(_OWORD *)(v3 + 96);
  long long v24 = *(_OWORD *)(v3 + 64);
  long long v25 = v7;
  long long v26 = v8;
  long long v22 = *(_OWORD *)(v3 + 32);
  long long v23 = v6;
  uint64_t v9 = v4 - 1;
  uint64_t v10 = 176;
  while (2)
  {
    switch(BYTE9(v28))
    {
      case 0:
      case 2:
        char v11 = sub_1C1520A9C();
        sub_1C00DD354((uint64_t)&v22);
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_13;
        }
        sub_1C00DD3FC((uint64_t)&v22);
        goto LABEL_7;
      case 1:
        sub_1C00DD354((uint64_t)&v22);
        swift_bridgeObjectRelease();
LABEL_13:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20[6] = v28;
        v21[0] = v29[0];
        *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v29 + 9);
        v20[2] = v24;
        v20[3] = v25;
        v20[4] = v26;
        v20[5] = v27;
        v20[0] = v22;
        v20[1] = v23;
        nullsub_1();
        long long v18 = v20;
        return sub_1C065D9D0((uint64_t)v18, a1);
      case 3:
LABEL_7:
        if (v9)
        {
          long long v22 = *(_OWORD *)(v3 + v10);
          long long v12 = *(_OWORD *)(v3 + v10 + 16);
          long long v13 = *(_OWORD *)(v3 + v10 + 32);
          long long v14 = *(_OWORD *)(v3 + v10 + 64);
          long long v25 = *(_OWORD *)(v3 + v10 + 48);
          long long v26 = v14;
          long long v23 = v12;
          long long v24 = v13;
          long long v15 = *(_OWORD *)(v3 + v10 + 80);
          long long v16 = *(_OWORD *)(v3 + v10 + 96);
          long long v17 = *(_OWORD *)(v3 + v10 + 112);
          *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)(v3 + v10 + 121);
          long long v28 = v16;
          v29[0] = v17;
          long long v27 = v15;
          v10 += 144;
          --v9;
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_10:
        sub_1C0B781C0(&v22);
        long long v18 = &v22;
        return sub_1C065D9D0((uint64_t)v18, a1);
      default:
        JUMPOUT(0);
    }
  }
}

unint64_t sub_1C0B77024()
{
  unint64_t result = qword_1EA1A3FA0;
  if (!qword_1EA1A3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3FA0);
  }
  return result;
}

uint64_t sub_1C0B77078(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEFDF24(255, &qword_1EA196BC0, (uint64_t)&type metadata for PuzzleMenuConfig, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B77108(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PuzzleLeaderboardEntry();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_1C1520DCC();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_1C0B7919C(v9, (uint64_t)v6);
      sub_1C151631C();
      sub_1BFF8772C((unint64_t *)&unk_1EA1AEEA0, MEMORY[0x1E4F27928]);
      sub_1C151E48C();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      char v11 = &v6[*(int *)(v3 + 24)];
      uint64_t v12 = *((void *)v11 + 2);
      unint64_t v13 = *((void *)v11 + 3);
      swift_bridgeObjectRetain();
      sub_1C00C2AC0(v12, v13);
      sub_1C151E77C();
      sub_1C1520DDC();
      if (v13 >> 60 != 15)
      {
        sub_1BFE95820(v12, v13);
        sub_1C151607C();
        sub_1BFE95878(v12, v13);
      }
      swift_bridgeObjectRelease();
      sub_1BFE95878(v12, v13);
      sub_1C1520DCC();
      sub_1C1520DCC();
      uint64_t result = sub_1C0B79200((uint64_t)v6);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1C0B77348(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1C1520DCC();
  if (v3)
  {
    uint64_t v5 = (unsigned __int8 *)(a2 + 48);
    do
    {
      uint64_t v8 = *((void *)v5 - 2);
      unint64_t v9 = *((void *)v5 - 1);
      unsigned int v10 = *v5;
      if (v10 >> 6)
      {
        if (v10 >> 6 != 1)
        {
          uint64_t result = sub_1C1520DCC();
          goto LABEL_6;
        }
        sub_1C1520DCC();
        switch(v9)
        {
          case 0uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 0;
            break;
          case 1uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 1;
            break;
          case 2uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 2;
            break;
          case 3uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 3;
            break;
          case 4uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 4;
            break;
          case 5uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 5;
            break;
          case 6uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 6;
            break;
          case 7uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 7;
            break;
          case 8uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 8;
            break;
          case 9uLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 9;
            break;
          case 0xAuLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 10;
            break;
          case 0xBuLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 11;
            break;
          case 0xCuLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 12;
            break;
          case 0xDuLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 13;
            break;
          case 0xEuLL:
            sub_1C1520DCC();
            uint64_t v6 = v8;
            unint64_t v7 = 14;
            break;
          default:
            sub_1C1520DCC();
            sub_1BFE74E64(v8, v9);
            sub_1C151E77C();
            goto LABEL_4;
        }
      }
      else
      {
        sub_1C1520DCC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        sub_1C1520DDC();
LABEL_4:
        uint64_t v6 = v8;
        unint64_t v7 = v9;
      }
      uint64_t result = sub_1C00F5AEC(v6, v7, v10);
LABEL_6:
      v5 += 24;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C0B77670(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1C1520DCC();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      ++v5;
      sub_1C151E77C();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s8NewsFeed16PuzzleMenuConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v174 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v177 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  int v12 = *(unsigned __int8 *)(a1 + 104);
  int v13 = *(unsigned __int8 *)(a1 + 105);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v168 = *(void *)(a1 + 120);
  uint64_t v169 = *(void *)(a1 + 128);
  int v15 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v16 = *(void *)(a2 + 8);
  uint64_t v173 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v172 = *(void *)(a2 + 32);
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v176 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 56);
  uint64_t v19 = *(void *)(a2 + 64);
  uint64_t v21 = *(void *)(a2 + 72);
  uint64_t v22 = *(void *)(a2 + 80);
  uint64_t v23 = *(void *)(a2 + 88);
  uint64_t v171 = *(void *)(a2 + 96);
  int v24 = *(unsigned __int8 *)(a2 + 104);
  int v170 = *(unsigned __int8 *)(a2 + 105);
  uint64_t v26 = *(void *)(a2 + 112);
  uint64_t v25 = *(void *)(a2 + 120);
  uint64_t v27 = *(void *)(a2 + 128);
  int v28 = *(unsigned __int8 *)(a2 + 136);
  if (!v3)
  {
    uint64_t v167 = *(void *)(a1 + 40);
    if (v16) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v16) {
    return 0;
  }
  uint64_t v167 = *(void *)(a1 + 40);
  if (*(void *)a1 == *(void *)a2 && v3 == v16) {
    goto LABEL_8;
  }
  uint64_t v139 = *(void *)(a1 + 64);
  uint64_t v143 = *(void *)(a2 + 120);
  int v153 = *(unsigned __int8 *)(a2 + 104);
  int v158 = *(unsigned __int8 *)(a2 + 136);
  uint64_t v148 = *(void *)(a1 + 96);
  int v29 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v125 = *(void *)(a2 + 112);
  uint64_t v128 = *(void *)(a2 + 48);
  uint64_t v30 = *(void *)(a1 + 112);
  uint64_t v133 = *(void *)(a1 + 56);
  uint64_t v136 = *(void *)(a1 + 48);
  int v31 = *(unsigned __int8 *)(a1 + 105);
  int v120 = *(unsigned __int8 *)(a1 + 104);
  uint64_t v32 = *(void *)(a1 + 80);
  uint64_t v121 = *(void *)(a1 + 88);
  uint64_t v122 = *(void *)(a2 + 72);
  uint64_t v33 = *(void *)(a2 + 88);
  uint64_t v131 = *(void *)(a2 + 56);
  uint64_t v34 = *(void *)(a2 + 80);
  uint64_t v35 = *(void *)(a1 + 72);
  uint64_t v36 = *(void *)(a2 + 64);
  char v37 = sub_1C1520A9C();
  uint64_t v19 = v36;
  uint64_t v10 = v121;
  uint64_t v21 = v122;
  uint64_t v8 = v35;
  uint64_t v22 = v34;
  uint64_t v18 = v128;
  uint64_t v20 = v131;
  uint64_t v23 = v33;
  uint64_t v9 = v32;
  uint64_t v7 = v133;
  int v12 = v120;
  int v13 = v31;
  uint64_t v5 = v136;
  uint64_t v6 = v139;
  uint64_t v14 = v30;
  uint64_t v26 = v125;
  int v15 = v29;
  uint64_t v25 = v143;
  uint64_t v11 = v148;
  int v24 = v153;
  int v28 = v158;
  char v38 = v37;
  uint64_t result = 0;
  if (v38)
  {
LABEL_8:
    if (v177)
    {
      if (!v17) {
        return 0;
      }
      if (v174 != v173 || v177 != v17)
      {
        uint64_t v140 = v6;
        int v178 = v15;
        uint64_t v126 = v26;
        uint64_t v129 = v18;
        uint64_t v134 = v7;
        uint64_t v137 = v5;
        uint64_t v40 = v14;
        int v41 = v13;
        int v154 = v24;
        int v159 = v28;
        uint64_t v163 = v27;
        uint64_t v144 = v25;
        uint64_t v149 = v11;
        int v42 = v12;
        uint64_t v43 = v9;
        uint64_t v44 = v10;
        uint64_t v45 = v23;
        uint64_t v46 = v22;
        uint64_t v47 = v8;
        uint64_t v48 = v21;
        uint64_t v175 = v19;
        char v49 = sub_1C1520A9C();
        uint64_t v19 = v175;
        uint64_t v21 = v48;
        uint64_t v8 = v47;
        uint64_t v6 = v140;
        uint64_t v25 = v144;
        uint64_t v22 = v46;
        uint64_t v23 = v45;
        uint64_t v10 = v44;
        uint64_t v9 = v43;
        int v12 = v42;
        uint64_t v11 = v149;
        int v24 = v154;
        int v28 = v159;
        uint64_t v27 = v163;
        int v13 = v41;
        uint64_t v14 = v40;
        uint64_t v7 = v134;
        uint64_t v5 = v137;
        uint64_t v26 = v126;
        uint64_t v18 = v129;
        int v15 = v178;
        char v50 = v49;
        uint64_t result = 0;
        if ((v50 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v167)
    {
      if (!v176) {
        return 0;
      }
      if (v4 != v172 || v167 != v176)
      {
        uint64_t v141 = v6;
        uint64_t v145 = v25;
        int v179 = v15;
        uint64_t v130 = v18;
        uint64_t v132 = v20;
        uint64_t v51 = v14;
        int v52 = v13;
        int v155 = v24;
        int v160 = v28;
        uint64_t v164 = v27;
        uint64_t v150 = v11;
        int v53 = v12;
        uint64_t v54 = v9;
        uint64_t v55 = v10;
        uint64_t v56 = v23;
        uint64_t v57 = v22;
        uint64_t v135 = v7;
        uint64_t v138 = v5;
        uint64_t v58 = v8;
        uint64_t v123 = v21;
        uint64_t v59 = v19;
        char v60 = sub_1C1520A9C();
        uint64_t v19 = v59;
        uint64_t v21 = v123;
        uint64_t v8 = v58;
        uint64_t v7 = v135;
        uint64_t v5 = v138;
        uint64_t v6 = v141;
        uint64_t v25 = v145;
        uint64_t v22 = v57;
        uint64_t v23 = v56;
        uint64_t v10 = v55;
        uint64_t v9 = v54;
        int v12 = v53;
        uint64_t v11 = v150;
        int v24 = v155;
        int v28 = v160;
        uint64_t v27 = v164;
        int v13 = v52;
        uint64_t v14 = v51;
        uint64_t v18 = v130;
        uint64_t v20 = v132;
        int v15 = v179;
        char v61 = v60;
        uint64_t result = 0;
        if ((v61 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v176)
    {
      return 0;
    }
    if (v7)
    {
      if (!v20) {
        return 0;
      }
      if (v5 != v18 || v7 != v20)
      {
        uint64_t v142 = v6;
        uint64_t v146 = v25;
        int v180 = v15;
        uint64_t v62 = v14;
        int v63 = v13;
        int v156 = v24;
        int v161 = v28;
        uint64_t v165 = v27;
        uint64_t v151 = v11;
        int v64 = v12;
        uint64_t v65 = v9;
        uint64_t v66 = v10;
        uint64_t v67 = v23;
        uint64_t v68 = v22;
        uint64_t v69 = v8;
        uint64_t v124 = v21;
        uint64_t v70 = v19;
        char v71 = sub_1C1520A9C();
        uint64_t v19 = v70;
        uint64_t v21 = v124;
        uint64_t v8 = v69;
        uint64_t v6 = v142;
        uint64_t v25 = v146;
        uint64_t v22 = v68;
        uint64_t v23 = v67;
        uint64_t v10 = v66;
        uint64_t v9 = v65;
        int v12 = v64;
        uint64_t v11 = v151;
        int v24 = v156;
        int v28 = v161;
        uint64_t v27 = v165;
        int v13 = v63;
        uint64_t v14 = v62;
        int v15 = v180;
        char v72 = v71;
        uint64_t result = 0;
        if ((v72 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v8)
    {
      if (!v21) {
        return 0;
      }
      if (v6 != v19 || v8 != v21)
      {
        uint64_t v73 = v25;
        int v74 = v15;
        uint64_t v75 = v14;
        int v76 = v13;
        int v157 = v24;
        int v162 = v28;
        uint64_t v166 = v27;
        uint64_t v152 = v11;
        int v77 = v12;
        uint64_t v78 = v9;
        uint64_t v79 = v10;
        uint64_t v80 = v23;
        uint64_t v81 = v22;
        char v82 = sub_1C1520A9C();
        uint64_t v22 = v81;
        uint64_t v23 = v80;
        uint64_t v10 = v79;
        uint64_t v9 = v78;
        int v12 = v77;
        uint64_t v11 = v152;
        int v24 = v157;
        int v28 = v162;
        uint64_t v27 = v166;
        int v13 = v76;
        uint64_t v14 = v75;
        int v15 = v74;
        uint64_t v25 = v73;
        char v83 = v82;
        uint64_t result = 0;
        if ((v83 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v21)
    {
      return 0;
    }
    if (v10)
    {
      if (!v23) {
        return 0;
      }
      if (v9 != v22 || v10 != v23)
      {
        uint64_t v84 = v25;
        int v85 = v15;
        uint64_t v86 = v14;
        int v87 = v13;
        int v88 = v28;
        uint64_t v89 = v27;
        int v90 = v24;
        uint64_t v91 = v11;
        int v92 = v12;
        char v93 = sub_1C1520A9C();
        int v12 = v92;
        uint64_t v11 = v91;
        int v24 = v90;
        uint64_t v27 = v89;
        int v28 = v88;
        int v13 = v87;
        uint64_t v14 = v86;
        int v15 = v85;
        uint64_t v25 = v84;
        char v94 = v93;
        uint64_t result = 0;
        if ((v94 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v11)
    {
      if (!v171) {
        return 0;
      }
      int v95 = v12;
      int v181 = v13;
      uint64_t v127 = v26;
      uint64_t v96 = v14;
      uint64_t v97 = v25;
      int v98 = v28;
      int v99 = v15;
      swift_bridgeObjectRetain();
      uint64_t v100 = swift_bridgeObjectRetain();
      char v101 = sub_1C00EBEE8(v100, v171);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v101 & 1) == 0) {
        return result;
      }
      int v15 = v99;
      int v28 = v98;
      uint64_t v25 = v97;
      uint64_t v14 = v96;
      uint64_t v26 = v127;
      int v13 = v181;
      if ((v95 ^ v24)) {
        return result;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v171 || ((v12 ^ v24) & 1) != 0) {
        return result;
      }
    }
    if (v13 == 3)
    {
      if (v170 != 3) {
        return 0;
      }
    }
    else
    {
      if (v170 == 3) {
        return 0;
      }
      uint64_t v102 = 6710895;
      uint64_t v147 = v25;
      if (v13)
      {
        if (v13 == 1)
        {
          unint64_t v103 = 0xE200000000000000;
          uint64_t v104 = 28271;
        }
        else
        {
          unint64_t v103 = 0xE500000000000000;
          uint64_t v104 = 0x646578696DLL;
        }
      }
      else
      {
        unint64_t v103 = 0xE300000000000000;
        uint64_t v104 = 6710895;
      }
      if (v170)
      {
        uint64_t v105 = v26;
        int v106 = v28;
        uint64_t v107 = v27;
        if (v170 == 1)
        {
          unint64_t v108 = 0xE200000000000000;
          uint64_t v102 = 28271;
        }
        else
        {
          unint64_t v108 = 0xE500000000000000;
          uint64_t v102 = 0x646578696DLL;
        }
      }
      else
      {
        uint64_t v105 = v26;
        uint64_t v107 = v27;
        int v106 = v28;
        unint64_t v108 = 0xE300000000000000;
      }
      uint64_t v109 = v14;
      int v110 = v15;
      if (v104 == v102 && v103 == v108)
      {
        swift_bridgeObjectRelease_n();
        int v15 = v110;
        int v28 = v106;
        uint64_t v27 = v107;
        uint64_t v25 = v147;
        uint64_t v14 = v109;
        uint64_t v26 = v105;
      }
      else
      {
        char v111 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        int v15 = v110;
        int v28 = v106;
        uint64_t v27 = v107;
        uint64_t v25 = v147;
        uint64_t v14 = v109;
        uint64_t v26 = v105;
        if ((v111 & 1) == 0) {
          return result;
        }
      }
    }
    if (v14)
    {
      if (!v26) {
        return 0;
      }
      uint64_t v112 = v25;
      int v113 = v28;
      int v114 = v15;
      swift_bridgeObjectRetain();
      uint64_t v115 = swift_bridgeObjectRetain();
      char v116 = sub_1C00EBFC8(v115, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v15 = v114;
      int v28 = v113;
      if ((v116 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v112 = v25;
      if (v26) {
        return 0;
      }
    }
    if (v169)
    {
      if (v27)
      {
        if (v168 != v112 || v169 != v27)
        {
          int v117 = v15;
          char v118 = sub_1C1520A9C();
          int v15 = v117;
          char v119 = v118;
          uint64_t result = 0;
          if ((v119 & 1) == 0) {
            return result;
          }
        }
        return v15 ^ v28 ^ 1u;
      }
    }
    else if (!v27)
    {
      return v15 ^ v28 ^ 1u;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C0B77F24()
{
  unint64_t result = qword_1EA1A3FB8;
  if (!qword_1EA1A3FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3FB8);
  }
  return result;
}

unint64_t sub_1C0B77F78()
{
  unint64_t result = qword_1EA1A3FC0;
  if (!qword_1EA1A3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3FC0);
  }
  return result;
}

unint64_t sub_1C0B77FCC()
{
  unint64_t result = qword_1EA1A3FD8;
  if (!qword_1EA1A3FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3FD8);
  }
  return result;
}

void sub_1C0B78020(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0B78088()
{
  unint64_t result = qword_1EA1A3FE8;
  if (!qword_1EA1A3FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3FE8);
  }
  return result;
}

uint64_t sub_1C0B780DC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEFDF24(255, &qword_1EA1A3FC8, (uint64_t)&type metadata for PuzzleMenuConfig.Attribute, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0B7816C()
{
  unint64_t result = qword_1EA1A3FF8;
  if (!qword_1EA1A3FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A3FF8);
  }
  return result;
}

double sub_1C0B781C0(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_1C152C800;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  return result;
}

unint64_t sub_1C0B781E8()
{
  unint64_t result = qword_1EA1A4000;
  if (!qword_1EA1A4000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4000);
  }
  return result;
}

unint64_t sub_1C0B78240()
{
  unint64_t result = qword_1EA1A4008;
  if (!qword_1EA1A4008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4008);
  }
  return result;
}

unint64_t sub_1C0B78298()
{
  unint64_t result = qword_1EA1A4010;
  if (!qword_1EA1A4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4010);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenusConfiguration()
{
  return &type metadata for PuzzleMenusConfiguration;
}

uint64_t destroy for PuzzleMenuConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleMenuConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleMenuConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for PuzzleMenuConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleMenuConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 137)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleMenuConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 137) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig()
{
  return &type metadata for PuzzleMenuConfig;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig.State()
{
  return &type metadata for PuzzleMenuConfig.State;
}

unsigned char *_s8NewsFeed16PuzzleMenuConfigV5StateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B7883CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig.Attribute()
{
  return &type metadata for PuzzleMenuConfig.Attribute;
}

unsigned char *storeEnumTagSinglePayload for PuzzleMenuConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B78940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenuConfig.CodingKeys()
{
  return &type metadata for PuzzleMenuConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PuzzleMenusConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0B78A14);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleMenusConfiguration.CodingKeys()
{
  return &type metadata for PuzzleMenusConfiguration.CodingKeys;
}

unint64_t sub_1C0B78A50()
{
  unint64_t result = qword_1EA1A4018;
  if (!qword_1EA1A4018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4018);
  }
  return result;
}

unint64_t sub_1C0B78AA8()
{
  unint64_t result = qword_1EA1A4020;
  if (!qword_1EA1A4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4020);
  }
  return result;
}

unint64_t sub_1C0B78B00()
{
  unint64_t result = qword_1EA1A4028;
  if (!qword_1EA1A4028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4028);
  }
  return result;
}

unint64_t sub_1C0B78B58()
{
  unint64_t result = qword_1EA1A4030;
  if (!qword_1EA1A4030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4030);
  }
  return result;
}

unint64_t sub_1C0B78BB0()
{
  unint64_t result = qword_1EA1A4038;
  if (!qword_1EA1A4038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4038);
  }
  return result;
}

unint64_t sub_1C0B78C08()
{
  unint64_t result = qword_1EA1A4040;
  if (!qword_1EA1A4040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4040);
  }
  return result;
}

uint64_t sub_1C0B78C5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C161DA50 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C161DA70 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656E696C6E69 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7069746C6F6F74 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C161DA90)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

unint64_t sub_1C0B790F4()
{
  unint64_t result = qword_1EA1A4048;
  if (!qword_1EA1A4048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4048);
  }
  return result;
}

unint64_t sub_1C0B79148()
{
  unint64_t result = qword_1EA1A4050;
  if (!qword_1EA1A4050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4050);
  }
  return result;
}

uint64_t sub_1C0B7919C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleLeaderboardEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0B79200(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PuzzleLeaderboardEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SportsEmbedConfigResourceRank.leagueType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsEmbedConfigResourceRank.statisticName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0B792BC()
{
  if (*v0) {
    return 0x6974736974617473;
  }
  else {
    return 0x795465756761656CLL;
  }
}

uint64_t sub_1C0B79308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0B79A50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B79330(uint64_t a1)
{
  unint64_t v2 = sub_1C0B79534();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B7936C(uint64_t a1)
{
  unint64_t v2 = sub_1C0B79534();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsEmbedConfigResourceRank.encode(to:)(void *a1)
{
  sub_1C0B797A0(0, &qword_1EA1A4058, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B79534();
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C15207CC();
  if (!v9)
  {
    char v12 = 1;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0B79534()
{
  unint64_t result = qword_1EB868BF0;
  if (!qword_1EB868BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868BF0);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceRank.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0B797A0(0, &qword_1EB86B6F0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B79534();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152060C();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0B797A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0B79534();
    unint64_t v7 = a3(a1, &type metadata for SportsEmbedConfigResourceRank.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0B79804@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsEmbedConfigResourceRank.init(from:)(a1, a2);
}

uint64_t sub_1C0B7981C(void *a1)
{
  return SportsEmbedConfigResourceRank.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRank()
{
  return &type metadata for SportsEmbedConfigResourceRank;
}

unsigned char *storeEnumTagSinglePayload for SportsEmbedConfigResourceRank.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B79910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceRank.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResourceRank.CodingKeys;
}

unint64_t sub_1C0B7994C()
{
  unint64_t result = qword_1EA1A4060;
  if (!qword_1EA1A4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4060);
  }
  return result;
}

unint64_t sub_1C0B799A4()
{
  unint64_t result = qword_1EB868C00;
  if (!qword_1EB868C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868C00);
  }
  return result;
}

unint64_t sub_1C0B799FC()
{
  unint64_t result = qword_1EB868BF8;
  if (!qword_1EB868BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB868BF8);
  }
  return result;
}

uint64_t sub_1C0B79A50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x795465756761656CLL && a2 == 0xEA00000000006570;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736974617473 && a2 == 0xED0000656D614E63)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t FeedLayoutContext.__allocating_init(stylerFactory:layoutAttributesFactoryProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t FeedLayoutContext.stylerFactory.getter()
{
  return swift_retain();
}

uint64_t FeedLayoutContext.layoutAttributesFactoryProvider.getter()
{
  return swift_retain();
}

uint64_t FeedLayoutContext.init(stylerFactory:layoutAttributesFactoryProvider:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t FeedLayoutContext.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t method lookup function for FeedLayoutContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedLayoutContext);
}

uint64_t dispatch thunk of FeedLayoutContext.__allocating_init(stylerFactory:layoutAttributesFactoryProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void FormatString.bind(binder:context:)()
{
}

uint64_t sub_1C0B79C44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatString.init(from:)(a1, a2);
}

uint64_t sub_1C0B79C5C(void *a1)
{
  return FormatString.encode(to:)(a1);
}

void sub_1C0B79C74()
{
}

uint64_t sub_1C0B79C90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0B7A16C(0, (unint64_t *)&qword_1EB891B88, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v25[-v7];
  uint64_t v10 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  if (*(unsigned char *)(v2 + 24))
  {
    uint64_t result = sub_1C124CD78(a1, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16));
    if (v3) {
      return result;
    }
    uint64_t v13 = result;
    uint64_t v14 = v12;
    uint64_t v15 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v13;
    *(void *)(v16 + 24) = v14;
    *(void *)(v16 + 32) = MEMORY[0x1E4FBC860];
    uint64_t v17 = v16 | 0x5000000000000000;
    sub_1BFEF9A78();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v9;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C00B818C(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    *a2 = v17;
    a2[1] = v19;
    uint64_t v20 = type metadata accessor for FormatOptionsNodeStatementResult();
    sub_1C0164368((uint64_t)v8, (uint64_t)a2 + *(int *)(v20 + 24));
  }
  else
  {
    uint64_t v20 = type metadata accessor for FormatOptionsNodeStatementResult();
    char v21 = (char *)a2 + *(int *)(v20 + 24);
    uint64_t v22 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = MEMORY[0x1E4FBC860];
    *(void *)(v23 + 16) = v10;
    *(void *)(v23 + 24) = v9;
    *(void *)(v23 + 32) = v24;
    *a2 = v23 | 0x5000000000000000;
    a2[1] = 1;
    swift_bridgeObjectRetain();
  }
  type metadata accessor for FormatOptionsNodeStatementResult();
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

void sub_1C0B79F28()
{
  uint64_t v2 = v1;
  sub_1C0B7A16C(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11[-1] - v4;
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v7 = *(void *)(v0 + 8);
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v8 = *(void *)v0;
    v11[0] = *(void *)v0;
    v11[1] = v7;
    v11[2] = v6;
    char v12 = 5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C12ECBDC(v11, &v12);
    if (!v2)
    {
      sub_1C0EC63F8(v8, v7, v9, 1, (uint64_t)v5);
      sub_1C0257E00((uint64_t)v5);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1C0B7A054(uint64_t a1)
{
  unint64_t result = sub_1C0B7A07C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0B7A07C()
{
  unint64_t result = qword_1EA1A4068;
  if (!qword_1EA1A4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4068);
  }
  return result;
}

unint64_t sub_1C0B7A0D0(void *a1)
{
  a1[1] = sub_1C0897B10();
  a1[2] = sub_1C08E5644();
  unint64_t result = sub_1C0B7A108();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0B7A108()
{
  unint64_t result = qword_1EA1A4070;
  if (!qword_1EA1A4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4070);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatString()
{
  return &type metadata for FormatString;
}

void sub_1C0B7A16C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0B7A1C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B7A200@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1BFC66384((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1517D0C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = (objc_class *)type metadata accessor for FormatModule();
    uint64_t v7 = (char *)objc_allocWithZone(v6);
    sub_1BFC66384((uint64_t)v10, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed12FormatModule_resolver]);
    *(void *)&v7[OBJC_IVAR____TtC8NewsFeed12FormatModule_tracker] = v5;
    v9.receiver = v7;
    v9.super_class = v6;
    id v8 = objc_msgSendSuper2(&v9, sel_init);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    a2[3] = v6;
    a2[4] = &protocol witness table for FormatModule;
    *a2 = v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7A2D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1BFC66384((uint64_t)a1, (uint64_t)v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB860640);
  uint64_t result = sub_1C151819C();
  if (!v12)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatTracker();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for WebEmbedManager();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    type metadata accessor for FormatPluginFactory();
    memset(v9, 0, sizeof(v9));
    uint64_t v10 = 0;
    uint64_t v7 = (void *)swift_allocObject();
    id v8 = sub_1C0B804BC((uint64_t)v13, (uint64_t)v11, v5, v6, (uint64_t)v9, v7);
    uint64_t result = swift_release();
    *a2 = v8;
    a2[1] = &protocol witness table for FormatPluginFactory;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7A430(uint64_t a1)
{
  return sub_1C0B7BDC8(a1, (void (*)(void))sub_1C0090478, MEMORY[0x1E4FAC998]);
}

uint64_t sub_1C0B7A45C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FormatTracker();
  uint64_t result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&protocol witness table for FormatTracker;
  return result;
}

uint64_t sub_1C0B7A49C()
{
  type metadata accessor for FormatViewController();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB865D70);
  sub_1C1518B0C();
  type metadata accessor for FormatRouter();
  sub_1C1517DFC();
  swift_release();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB867020);
  sub_1C1518B0C();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB866A98);
  sub_1C1518B0C();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB866D70);
  sub_1C1518B0C();
  swift_release();
  type metadata accessor for FormatPluginData();
  sub_1C1518B0C();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB860640);
  sub_1C1518B0C();
  swift_release();
  sub_1C0B7F240();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FormatBlueprintModifierFactory();
  sub_1C1518AFC();
  swift_release();
  sub_1C0B7F32C();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B7F9C8();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B8081C(0, &qword_1EB86C2D0, (uint64_t (*)(uint64_t))sub_1C0090478, sub_1C0B7F7E4, MEMORY[0x1E4FAD300]);
  sub_1C1518AFC();
  swift_release();
  sub_1C151C39C();
  sub_1C1518AFC();
  swift_release();
  sub_1C0B7F3E8();
  sub_1C1518AFC();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB864328);
  sub_1C1518B0C();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B7FAD4(0);
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FormatBlueprintLayoutBuilder();
  sub_1C1518AFC();
  swift_release();
  sub_1C0B7FBF0();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  type metadata accessor for FormatCollectionView();
  sub_1C1518AFC();
  swift_release();
  sub_1C0B7F4F4();
  sub_1C1518AFC();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB864388);
  sub_1C1518B0C();
  sub_1C151C0FC();
  sub_1C1517DFC();
  swift_release();
  swift_release();
  sub_1C0B7FCCC();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B7F670();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B7F818();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B7F908();
  sub_1C1518AFC();
  swift_release();
  type metadata accessor for FormatBlueprintViewCellProvider();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B8081C(0, &qword_1EB864318, (uint64_t (*)(uint64_t))sub_1C0B7F240, sub_1C0B7F7B0, MEMORY[0x1E4FACDF0]);
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C0B8081C(0, &qword_1EB86C2C0, (uint64_t (*)(uint64_t))sub_1C0B7F4F4, sub_1C0B7F994, MEMORY[0x1E4FACAE8]);
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C151ADDC();
  sub_1C1518AFC();
  swift_release();
  sub_1C0B7FD2C();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1C151BC1C();
  sub_1C1518AFC();
  sub_1C1517E0C();
  swift_release();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB8643A0);
  sub_1C1518B0C();
  swift_release();
  sub_1C151BB6C();
  sub_1C1518AFC();
  swift_release();
  sub_1BFCB6824(0, &qword_1EB86DC60);
  sub_1C1518B0C();
  return swift_release();
}

char *sub_1C0B7B0E0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB867020);
  uint64_t result = (char *)sub_1C151819C();
  if (!v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7FBF0();
  uint64_t result = (char *)sub_1C151818C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0090478();
  uint64_t result = (char *)sub_1C151818C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = (char *)sub_1C151819C();
  if (!v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1517D0C();
  uint64_t result = (char *)sub_1C151818C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1C006ABCC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
  sub_1C151AAEC();
  swift_allocObject();
  uint64_t v5 = sub_1C151AADC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1519FBC();
  uint64_t result = (char *)sub_1C151818C();
  if (result)
  {
    uint64_t v6 = (uint64_t)result;
    id v7 = objc_allocWithZone((Class)type metadata accessor for FormatViewController());
    return sub_1C126E188(v9, v10, v3, v4, v5, v6);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7B36C(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB895B50);
  uint64_t result = sub_1C151819C();
  if (v10)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = *(void (**)(void *, uint64_t))(v11 + 16);
    id v7 = v3;
    v6(v3, ObjectType);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1C0B7FD2C();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      swift_unknownObjectRelease();
      uint64_t v8 = sub_1C006ABCC(&qword_1EB864368, (void (*)(uint64_t))sub_1C0B7FD2C);
      uint64_t v9 = &v7[OBJC_IVAR____TtC8NewsFeed20FormatViewController_selectionProvider];
      swift_beginAccess();
      *((void *)v9 + 1) = v8;
      swift_unknownObjectWeakAssign();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7B4F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFC66384(a1, (uint64_t)v6);
  uint64_t v3 = type metadata accessor for FormatRouter();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t result = sub_1BFC773DC(v6, v4 + 24);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1F1B90608;
  *a2 = v4;
  return result;
}

void sub_1C0B7B574(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatViewController();
  id v2 = (id)sub_1C151818C();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1C0B7B5F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB866A98);
  uint64_t result = sub_1C151819C();
  uint64_t v5 = v28;
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v6 = v29;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB865D70);
  uint64_t result = sub_1C151819C();
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB896678);
  uint64_t result = sub_1C151819C();
  uint64_t v7 = v24;
  if (v24)
  {
    uint64_t v8 = v25;
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    __n128 v10 = MEMORY[0x1F4188790](v9);
    uint64_t v12 = (void *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
    uint64_t v14 = *v12;
    uint64_t v15 = type metadata accessor for FormatRouter();
    v23[3] = v15;
    v23[4] = &off_1F1B90608;
    v23[0] = v14;
    type metadata accessor for FormatEventHandler();
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v15);
    __n128 v18 = MEMORY[0x1F4188790](v17);
    uint64_t v20 = (void *)((char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
    uint64_t v22 = sub_1C0B805B8(v5, v6, *v20, v7, v8, v16);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    *a2 = v22;
    a2[1] = &off_1F1C02FD0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7B8F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB866D70);
  uint64_t result = sub_1C151819C();
  uint64_t v5 = v19;
  if (!v19)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F32C();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintModifierFactory();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C008BB0C(0, (unint64_t *)&qword_1EB8849D8, (uint64_t)&type metadata for FormatOfflineModel, (uint64_t)&off_1F1C0AAF8, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for OfflineManager);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB86DC60);
  uint64_t result = sub_1C151819C();
  if (v18)
  {
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
    __n128 v11 = MEMORY[0x1F4188790](v10);
    uint64_t v13 = (void **)&v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(void **, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = sub_1C0B806B0(v5, v6, v7, v8, v9, *v13);
    swift_release();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    *a2 = v15;
    a2[1] = &off_1F1B9CE10;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7BB8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0062780(0, (unint64_t *)&unk_1EB865D30, (uint64_t (*)(uint64_t))type metadata accessor for FormatPluginData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = type metadata accessor for FormatPluginData();
  sub_1C151819C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for FormatDataManager();
    uint64_t v9 = swift_allocObject();
    uint64_t result = sub_1C00BD4AC((uint64_t)v6, v9 + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData);
    *a2 = v9;
    a2[1] = (uint64_t)&off_1F1B93EA0;
  }
  return result;
}

void sub_1C0B7BCE4()
{
}

void sub_1C0B7BD40()
{
}

uint64_t sub_1C0B7BD9C(uint64_t a1)
{
  return sub_1C0B7BDC8(a1, (void (*)(void))sub_1C0B7F240, MEMORY[0x1E4FAC2D0]);
}

uint64_t sub_1C0B7BDC8(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1C0B7BE0C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB860640);
  uint64_t result = sub_1C151819C();
  if (v4)
  {
    type metadata accessor for FormatBlueprintModifierFactory();
    uint64_t v2 = swift_allocObject();
    sub_1BFC773DC(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7BEAC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F240();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C0B7F3E8();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      sub_1C0B7F32C();
      swift_allocObject();
      return sub_1C151ACAC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7BF90(uint64_t a1, void *a2)
{
  sub_1C0B802E4();
  swift_allocObject();
  sub_1C151C14C();
  sub_1C0B803D0();
  swift_allocObject();
  sub_1C006ABCC(&qword_1EB864330, (void (*)(uint64_t))sub_1C0B802E4);
  sub_1C151BDEC();
  sub_1C151ACCC();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C0B7F9C8();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    swift_allocObject();
    sub_1C006ABCC(&qword_1EB8643A8, (void (*)(uint64_t))sub_1C0B7F9C8);
    sub_1C151BDEC();
    sub_1C151ACCC();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7C10C(void *a1)
{
  uint64_t v2 = sub_1C151C78C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0062780(0, &qword_1EB86C2E8, MEMORY[0x1E4FAD6C0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v14 - v7;
  if (qword_1EB8918D8 != -1) {
    swift_once();
  }
  if (byte_1EB8918C8 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD6B8], v2);
    sub_1C151C79C();
    uint64_t v9 = sub_1C151C7AC();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  }
  else
  {
    uint64_t v10 = sub_1C151C7AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintLayoutBuilder();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v12 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7FAD4(0);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v13 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B8081C(0, &qword_1EB86C2D0, (uint64_t (*)(uint64_t))sub_1C0090478, sub_1C0B7F7E4, MEMORY[0x1E4FAD300]);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    v14[0] = v13;
    v14[1] = v12;
    sub_1C0B7F9C8();
    swift_allocObject();
    return sub_1C151C6DC();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7C438(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v3 = type metadata accessor for FeedAdPipelineProcessor();
  sub_1BFC66384((uint64_t)a2, (uint64_t)&v12);
  uint64_t v4 = swift_allocObject();
  sub_1BFC773DC(&v12, v4 + 16);
  uint64_t v5 = sub_1C151816C();
  uint64_t result = swift_release();
  if (v5)
  {
    uint64_t v13 = v3;
    uint64_t v14 = sub_1C006ABCC(qword_1EB865290, (void (*)(uint64_t))type metadata accessor for FeedAdPipelineProcessor);
    *(void *)&long long v12 = v5;
    sub_1C151C6EC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v7 = type metadata accessor for FeedItemRendererPipelineProcessor(0);
    sub_1BFC66384((uint64_t)a2, (uint64_t)&v12);
    uint64_t v8 = swift_allocObject();
    sub_1BFC773DC(&v12, v8 + 16);
    uint64_t v9 = sub_1C151816C();
    uint64_t result = swift_release();
    if (v9)
    {
      uint64_t v13 = v7;
      uint64_t v14 = sub_1C006ABCC(&qword_1EB8654D0, (void (*)(uint64_t))type metadata accessor for FeedItemRendererPipelineProcessor);
      *(void *)&long long v12 = v9;
      sub_1C151C6EC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
      uint64_t v10 = sub_1C151C24C();
      swift_allocObject();
      uint64_t v11 = sub_1C151C23C();
      uint64_t v13 = v10;
      uint64_t v14 = MEMORY[0x1E4FAD310];
      *(void *)&long long v12 = v11;
      sub_1C151C6EC();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7C688(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatCollectionView();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = (void *)result;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A0F0);
    sub_1C151E78C();
    sub_1C1517F7C();

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7C760(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0090478();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C151C39C();
  uint64_t result = sub_1C151814C();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB864388);
  uint64_t result = sub_1C151815C();
  if (v3)
  {
    sub_1C0B8081C(0, &qword_1EB86C2D0, (uint64_t (*)(uint64_t))sub_1C0090478, sub_1C0B7F7E4, MEMORY[0x1E4FAD300]);
    swift_allocObject();
    return sub_1C151C22C();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7C920()
{
  return sub_1C151F6DC();
}

uint64_t sub_1C0B7C9F0(uint64_t a1)
{
  return sub_1C0B7BDC8(a1, MEMORY[0x1E4FAD408], MEMORY[0x1E4FAD400]);
}

uint64_t sub_1C0B7CA1C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F4F4();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8643B8);
  uint64_t result = sub_1C151819C();
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B8081C(0, &qword_1EB86C2C0, (uint64_t (*)(uint64_t))sub_1C0B7F4F4, sub_1C0B7F994, MEMORY[0x1E4FACAE8]);
  uint64_t v4 = v3;
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  uint64_t v10 = v4;
  unint64_t v11 = sub_1C0B80138();
  uint64_t v9 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB864328);
  uint64_t result = sub_1C151815C();
  if (v7)
  {
    sub_1BFC773DC(&v6, (uint64_t)v8);
    sub_1C0B7F3E8();
    swift_allocObject();
    return sub_1C151AF7C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7CC0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C151BABC();
  swift_allocObject();
  uint64_t result = sub_1C151BAAC();
  uint64_t v4 = MEMORY[0x1E4FACAC8];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1C0B7CC64(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB869DF0);
  sub_1C151819C();
  if (!v8) {
    return sub_1C0B80270((uint64_t)&v7);
  }
  sub_1BFC773DC(&v7, (uint64_t)v9);
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 8))(a1, a2, v4, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_1C0B7CD44(uint64_t a1)
{
  return sub_1C0B7BDC8(a1, sub_1C0B7FAD4, MEMORY[0x1E4FAD2E0]);
}

uint64_t sub_1C0B7CD70(void *a1)
{
  sub_1C0062780(0, (unint64_t *)&unk_1EB865D30, (uint64_t (*)(uint64_t))type metadata accessor for FormatPluginData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C008BB0C(0, qword_1EB894BD0, (uint64_t)&type metadata for GroupLayoutInventory, (uint64_t)&protocol witness table for GroupLayoutInventory, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FeedLayoutSolver);
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v7 = type metadata accessor for FormatPluginData();
    sub_1C151819C();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7);
    if (result != 1)
    {
      type metadata accessor for FormatBlueprintLayoutBuilder();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      sub_1C00BD4AC((uint64_t)v4, v8 + OBJC_IVAR____TtC8NewsFeed28FormatBlueprintLayoutBuilder_pluginData);
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7CF20(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F240();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F4F4();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB864388);
  uint64_t result = sub_1C151815C();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB8643B8);
  uint64_t result = sub_1C151819C();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B8081C(0, &qword_1EB864318, (uint64_t (*)(uint64_t))sub_1C0B7F240, sub_1C0B7F7B0, MEMORY[0x1E4FACDF0]);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C151ADDC();
  uint64_t result = sub_1C151814C();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1517D0C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1C006ABCC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
    sub_1C0B7FBF0();
    id v4 = objc_allocWithZone(v3);
    return sub_1C151B96C();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7D278(uint64_t a1, void *a2)
{
  if (sub_1C151818C()) {
    sub_1C0B801D4();
  }
  sub_1C151B94C();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C0B8081C(0, &qword_1EB86C2C0, (uint64_t (*)(uint64_t))sub_1C0B7F4F4, sub_1C0B7F994, MEMORY[0x1E4FACAE8]);
  if (sub_1C151818C()) {
    sub_1C0B80138();
  }
  return sub_1C151B92C();
}

uint64_t sub_1C0B7D404(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7FCCC();
  uint64_t result = sub_1C151814C();
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatCollectionView()), sel_initWithFrame_collectionViewLayout_, result, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7D4B0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatCollectionView();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F670();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F818();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F908();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1C0B7F4F4();
    swift_allocObject();
    return sub_1C151B40C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7D5F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F4F4();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1C151B41C();
    swift_release();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C0B800E0();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      sub_1C151C0FC();
      uint64_t result = sub_1C151C0EC();
      uint64_t v5 = MEMORY[0x1E4FAD1C8];
      *a2 = result;
      a2[1] = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7D6EC()
{
  uint64_t v0 = sub_1C151B5DC();
  __n128 v1 = MEMORY[0x1F4188790](v0);
  (*(void (**)(char *, void, __n128))(v3 + 104))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FAC850], v1);
  return sub_1C151C0DC();
}

uint64_t sub_1C0B7D7BC(void *a1)
{
  sub_1C0062780(0, (unint64_t *)&unk_1EB865D30, (uint64_t (*)(uint64_t))type metadata accessor for FormatPluginData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v12 - v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C151C39C();
  uint64_t result = sub_1C151814C();
  if (result)
  {
    uint64_t v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v7 = type metadata accessor for FormatPluginData();
    sub_1C151819C();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7);
    if (result != 1)
    {
      char v8 = v4[*(int *)(v7 + 44)];
      sub_1C0212354((uint64_t)v4);
      sub_1C0B7FCCC();
      uint64_t v10 = (char *)objc_allocWithZone(v9);
      uint64_t v11 = (void *)MEMORY[0x1E4FBC8C8];
      *(void *)&v10[*(void *)(class metadata base offset for FormatCollectionViewLayout
                                + (*MEMORY[0x1E4FBC8C8] & *(void *)v10)
                                + 24)] = 0;
      *(void *)&v10[*(void *)(class metadata base offset for FormatCollectionViewLayout
                                + (*v11 & *(void *)v10)
                                + 32)] = 0x3FD3333333333333;
      *(void *)&v10[*(void *)(class metadata base offset for FormatCollectionViewLayout
                                + (*v11 & *(void *)v10)
                                + 40)] = 0;
      v10[*(void *)(class metadata base offset for FormatCollectionViewLayout + (*v11 & *(void *)v10) + 16)] = v8;
      v12[1] = v6;
      return sub_1C151C03C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7DA60()
{
  return sub_1C151F6DC();
}

uint64_t sub_1C0B7DB30(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F240();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0090478();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintViewCellProvider();
  sub_1BFC66384((uint64_t)a1, (uint64_t)v8);
  uint64_t v4 = swift_allocObject();
  sub_1BFC773DC(v8, v4 + 16);
  uint64_t v5 = sub_1C151816C();
  uint64_t result = swift_release();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    *(void *)&v8[0] = v3;
    sub_1C0B7F670();
    id v7 = objc_allocWithZone(v6);
    return sub_1C151C30C();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7DCCC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, &qword_1EB8643A0);
  uint64_t result = sub_1C151815C();
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1C151C65C();
    sub_1C151C31C();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7DDA4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F240();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0090478();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B8081C(0, &qword_1EB864318, (uint64_t (*)(uint64_t))sub_1C0B7F240, sub_1C0B7F7B0, MEMORY[0x1E4FACDF0]);
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, (unint64_t *)&unk_1EB8948E0);
  uint64_t result = sub_1C151819C();
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1517D0C();
  uint64_t result = sub_1C151818C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1C006ABCC((unint64_t *)&qword_1EB871390, MEMORY[0x1E4F4AB68]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB864308);
  uint64_t result = sub_1C151819C();
  if (v5)
  {
    sub_1C0B7F818();
    id v4 = objc_allocWithZone(v3);
    return sub_1C151C18C();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1C0B7E038(uint64_t a1, void *a2)
{
  if (sub_1C151818C()) {
    sub_1C006ABCC(&qword_1EB864368, (void (*)(uint64_t))sub_1C0B7FD2C);
  }
  sub_1C151C1AC();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C151BB6C();
  sub_1C151814C();
  sub_1C151C17C();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C0B7FBF0();
  sub_1C151818C();
  return sub_1C151C16C();
}

uint64_t sub_1C0B7E1C0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F240();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C0090478();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      sub_1C0B7F908();
      id v4 = objc_allocWithZone(v3);
      return sub_1C151C42C();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7E280(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, &qword_1EB894DA8);
  uint64_t result = sub_1C151819C();
  if (v3)
  {
    type metadata accessor for FormatBlueprintViewCellProvider();
    uint64_t v2 = (void *)swift_allocObject();
    v2[3] = 0;
    swift_unknownObjectWeakInit();
    v2[4] = v3;
    v2[5] = v4;
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0B7E32C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatViewController();
  id v4 = (id)sub_1C151818C();
  uint64_t v3 = &protocol witness table for FormatViewController;
  if (!v4) {
    uint64_t v3 = 0;
  }
  *(void *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1C0B7E3C0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFCB6824(0, qword_1EB894FA0);
  uint64_t result = sub_1C151819C();
  if (v4)
  {
    type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    sub_1BFC773DC(&v3, v2 + 32);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0B7E470(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FormatViewController();
  id v4 = (id)sub_1C151818C();
  long long v3 = &off_1F1C23668;
  if (!v4) {
    long long v3 = 0;
  }
  *(void *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_1C0B7E504(void *a1)
{
  uint64_t v2 = sub_1C151C33C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1C151C35C();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1C0B8081C(0, &qword_1EB864310, (uint64_t (*)(uint64_t))sub_1C0B7F240, sub_1C0B7F7B0, MEMORY[0x1E4FACDE8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F240();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v13 = result;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FACDE0], v8);
    *uint64_t v5 = 0;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD380], v2);
    sub_1C151C34C();
    v14[1] = v13;
    sub_1C0B8081C(0, &qword_1EB864318, (uint64_t (*)(uint64_t))sub_1C0B7F240, sub_1C0B7F7B0, MEMORY[0x1E4FACDF0]);
    swift_allocObject();
    return sub_1C151BDBC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7E7E4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1BFCB6824(0, (unint64_t *)&qword_1EB890B08);
  sub_1C151819C();
  sub_1C0B7FF48();
  uint64_t v2 = swift_allocObject();
  sub_1C0B7FFB4((uint64_t)v4, v2 + 16);
  v4[0] = v2;
  sub_1C006ABCC(&qword_1EB86C0F8, (void (*)(uint64_t))sub_1C0B7FF48);
  sub_1C151BDAC();
  return swift_release();
}

uint64_t sub_1C0B7E8D4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F4F4();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1C0B8081C(0, &qword_1EB86C2C0, (uint64_t (*)(uint64_t))sub_1C0B7F4F4, sub_1C0B7F994, MEMORY[0x1E4FACAE8]);
    swift_allocObject();
    return sub_1C151BACC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7E990(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C0090478();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1C0B7F4F4();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      sub_1C0B7FEBC();
      uint64_t v5 = v4;
      swift_allocObject();
      uint64_t v6 = sub_1C151C71C();
      v7[3] = v5;
      v7[4] = sub_1C006ABCC(&qword_1EB86C2D8, (void (*)(uint64_t))sub_1C0B7FEBC);
      v7[0] = v6;
      sub_1C151BADC();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7EAC4(void *a1)
{
  sub_1C0B7FE50();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1527210;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7FD2C();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_1C006ABCC(&qword_1EB864360, (void (*)(uint64_t))sub_1C0B7FD2C);
    *(void *)(v2 + 32) = v4;
    *(void *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C151BC1C();
    uint64_t result = sub_1C151814C();
    if (result)
    {
      uint64_t v6 = MEMORY[0x1E4FACBE0];
      *(void *)(v2 + 48) = result;
      *(void *)(v2 + 56) = v6;
      sub_1C151ADDC();
      swift_allocObject();
      return sub_1C151ADCC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7EC04(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F4F4();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C0B7F240();
    uint64_t result = sub_1C151818C();
    if (result)
    {
      sub_1C0B7FD2C();
      swift_allocObject();
      return sub_1C151C2EC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B7ECE4(uint64_t a1, void *a2)
{
  return sub_1C0B7EDC4(a1, a2, sub_1C0B7FE1C, MEMORY[0x1E4FAD348]);
}

uint64_t sub_1C0B7ED10(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7F4F4();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    sub_1C151B41C();
    swift_release();
    sub_1C151BC1C();
    swift_allocObject();
    return sub_1C151BC0C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7ED98(uint64_t a1, void *a2)
{
  return sub_1C0B7EDC4(a1, a2, sub_1C0B7FDE8, MEMORY[0x1E4FACBD8]);
}

uint64_t sub_1C0B7EDC4(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C0B7FBF0();
  uint64_t v6 = sub_1C151818C();
  if (v6) {
    uint64_t v7 = a3();
  }
  else {
    uint64_t v7 = 0;
  }
  return a4(v6, v7);
}

uint64_t sub_1C0B7EE54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B7FBF0();
  uint64_t v4 = v3;
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    a2[3] = v4;
    uint64_t result = sub_1C006ABCC(&qword_1EB8642C8, (void (*)(uint64_t))sub_1C0B7FBF0);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0B7EEFC()
{
  uint64_t v0 = sub_1C151BB4C();
  MEMORY[0x1F4188790](v0);
  __n128 v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FACB08];
  sub_1C0062780(0, (unint64_t *)&unk_1EB86BA40, MEMORY[0x1E4FACB08], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
  sub_1C151BB3C();
  sub_1C006ABCC((unint64_t *)&unk_1EB8642E0, MEMORY[0x1E4FACB08]);
  sub_1C0062780(0, (unint64_t *)&unk_1EB86AFF0, v1, MEMORY[0x1E4FBB320]);
  sub_1C0064C98(&qword_1EB86B000, (unint64_t *)&unk_1EB86AFF0, v1);
  sub_1C151FFBC();
  id v2 = objc_allocWithZone((Class)sub_1C151BB6C());
  return sub_1C151BB5C();
}

uint64_t sub_1C0B7F0DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatAutoscrollPointFactory();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F1BF3B28;
  *a1 = result;
  return result;
}

uint64_t static String.formatModule.getter()
{
  return 0x6F4D74616D726F46;
}

void sub_1C0B7F144()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = MEMORY[0x1C18C9C60](Strong + 16);
    if (v1)
    {
      if (MEMORY[0x1C18C9C60](v1 + 16))
      {
        swift_retain();
        sub_1C151B8DC();
        uint64_t v2 = (void *)sub_1C151B41C();
        swift_release();
        objc_msgSend(v2, sel_reloadData);
        swift_release_n();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1C0B7F240()
{
  if (!qword_1EB8641D0)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1C006ABCC((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    sub_1C006ABCC((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v0 = sub_1C151AD0C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8641D0);
    }
  }
}

void sub_1C0B7F32C()
{
  if (!qword_1EB8641B8)
  {
    sub_1C0B7F240();
    sub_1C0B7F3E8();
    sub_1C0B7F7B0();
    sub_1C006ABCC(&qword_1EB864258, (void (*)(uint64_t))sub_1C0B7F3E8);
    unint64_t v0 = sub_1C151ACFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8641B8);
    }
  }
}

void sub_1C0B7F3E8()
{
  if (!qword_1EB864260)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1C0B7F4F4();
    sub_1C006ABCC((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    sub_1C006ABCC((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    sub_1C0B7F994();
    unint64_t v0 = sub_1C151AF8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864260);
    }
  }
}

void sub_1C0B7F4F4()
{
  if (!qword_1EB864290)
  {
    sub_1BFC39268(255, (unint64_t *)&unk_1EB86B420);
    sub_1C0B7F670();
    sub_1C0B7F818();
    sub_1C0B7F908();
    type metadata accessor for FormatViewController();
    sub_1C006ABCC(&qword_1EB864378, (void (*)(uint64_t))sub_1C0B7F670);
    sub_1C006ABCC(&qword_1EB864340, (void (*)(uint64_t))sub_1C0B7F818);
    sub_1C006ABCC(&qword_1EB864390, (void (*)(uint64_t))sub_1C0B7F908);
    unint64_t v0 = sub_1C151B42C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864290);
    }
  }
}

void sub_1C0B7F670()
{
  if (!qword_1EB864380)
  {
    sub_1C0B7F240();
    sub_1C0090478();
    type metadata accessor for FormatBlueprintViewCellProvider();
    type metadata accessor for FormatBlueprintViewSupplementaryViewProvider();
    sub_1C0B7F7B0();
    sub_1C0B7F7E4();
    sub_1C006ABCC(&qword_1EB869260, (void (*)(uint64_t))type metadata accessor for FormatBlueprintViewCellProvider);
    sub_1C006ABCC(&qword_1EB864A40, (void (*)(uint64_t))type metadata accessor for FormatBlueprintViewSupplementaryViewProvider);
    sub_1C0ABE6B4();
    unint64_t v0 = sub_1C151C32C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864380);
    }
  }
}

uint64_t sub_1C0B7F7B0()
{
  return sub_1C006ABCC(&qword_1EB8641C8, (void (*)(uint64_t))sub_1C0B7F240);
}

uint64_t sub_1C0B7F7E4()
{
  return sub_1C006ABCC(&qword_1EB8642A8, (void (*)(uint64_t))sub_1C0090478);
}

void sub_1C0B7F818()
{
  if (!qword_1EB864348)
  {
    sub_1C0B7F240();
    sub_1C0090478();
    type metadata accessor for FormatViewController();
    sub_1C0B7F7B0();
    sub_1C0B7F7E4();
    sub_1C006ABCC(&qword_1EB866C18, (void (*)(uint64_t))type metadata accessor for FormatViewController);
    sub_1C0ABE6B4();
    unint64_t v0 = sub_1C151C1BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864348);
    }
  }
}

void sub_1C0B7F908()
{
  if (!qword_1EB864398)
  {
    sub_1C0B7F240();
    sub_1C0090478();
    sub_1C0B7F7B0();
    sub_1C0B7F7E4();
    unint64_t v0 = sub_1C151C43C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864398);
    }
  }
}

uint64_t sub_1C0B7F994()
{
  return sub_1C006ABCC(&qword_1EB864288, (void (*)(uint64_t))sub_1C0B7F4F4);
}

void sub_1C0B7F9C8()
{
  if (!qword_1EB8643B0)
  {
    sub_1C0090478();
    type metadata accessor for FormatBlueprintLayoutBuilder();
    sub_1C0B7FAD4(255);
    sub_1C0B7F7E4();
    sub_1C006ABCC(&qword_1EB868568, (void (*)(uint64_t))type metadata accessor for FormatBlueprintLayoutBuilder);
    sub_1C006ABCC(&qword_1EB864350, sub_1C0B7FAD4);
    unint64_t v0 = sub_1C151C6FC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8643B0);
    }
  }
}

void sub_1C0B7FAD4(uint64_t a1)
{
}

void sub_1C0B7FB1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v12[0] = type metadata accessor for FormatLayoutSectionDescriptor(255);
    v12[1] = &type metadata for FormatLayoutModel;
    void v12[2] = a3();
    v12[3] = a4();
    unint64_t v10 = a5(a1, v12);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0B7FBBC()
{
  return sub_1C006ABCC(&qword_1EB868B00, (void (*)(uint64_t))type metadata accessor for FormatLayoutSectionDescriptor);
}

void sub_1C0B7FBF0()
{
  if (!qword_1EB8642D0)
  {
    sub_1C0B7F240();
    sub_1C0B7F4F4();
    type metadata accessor for FormatViewController();
    sub_1C0B7F7B0();
    sub_1C0B7F994();
    sub_1C006ABCC(&qword_1EB866C18, (void (*)(uint64_t))type metadata accessor for FormatViewController);
    unint64_t v0 = sub_1C151B98C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8642D0);
    }
  }
}

void sub_1C0B7FCCC()
{
  if (!qword_1EB867D90)
  {
    sub_1C151C39C();
    unint64_t v0 = type metadata accessor for FormatCollectionViewLayout();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB867D90);
    }
  }
}

void sub_1C0B7FD2C()
{
  if (!qword_1EB864370)
  {
    sub_1C0B7F4F4();
    sub_1C0B7F240();
    sub_1C0B7F994();
    sub_1C006ABCC(&qword_1EB8641C0, (void (*)(uint64_t))sub_1C0B7F240);
    unint64_t v0 = sub_1C151C2FC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864370);
    }
  }
}

uint64_t sub_1C0B7FDE8()
{
  return sub_1C006ABCC(&qword_1EB8642B8, (void (*)(uint64_t))sub_1C0B7FBF0);
}

uint64_t sub_1C0B7FE1C()
{
  return sub_1C006ABCC(&qword_1EB8642C0, (void (*)(uint64_t))sub_1C0B7FBF0);
}

void sub_1C0B7FE50()
{
  if (!qword_1EB86BA38)
  {
    sub_1BFCB6824(255, &qword_1EB8642A0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86BA38);
    }
  }
}

void sub_1C0B7FEBC()
{
  if (!qword_1EB86C2E0)
  {
    sub_1C0090478();
    sub_1C0B7F4F4();
    sub_1C0B7F7E4();
    sub_1C0B7F994();
    unint64_t v0 = sub_1C151C72C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C2E0);
    }
  }
}

void sub_1C0B7FF48()
{
  if (!qword_1EB86C100)
  {
    sub_1C0B7F240();
    sub_1C0B7F7B0();
    unint64_t v0 = type metadata accessor for FeedItemImpressionProcessor();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C100);
    }
  }
}

uint64_t sub_1C0B7FFB4(uint64_t a1, uint64_t a2)
{
  sub_1C0B80030(0, (unint64_t *)&qword_1EB890B10, (unint64_t *)&qword_1EB890B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0B80030(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFCB6824(255, a3);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0B8008C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C0B800C4(void *a1)
{
  return sub_1C0B7C688(a1, (void *)(v1 + 16));
}

unint64_t sub_1C0B800E0()
{
  unint64_t result = qword_1EA1A4078;
  if (!qword_1EA1A4078)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A4078);
  }
  return result;
}

unint64_t sub_1C0B80138()
{
  unint64_t result = qword_1EB86C2B8;
  if (!qword_1EB86C2B8)
  {
    sub_1C0B8081C(255, &qword_1EB86C2C0, (uint64_t (*)(uint64_t))sub_1C0B7F4F4, sub_1C0B7F994, MEMORY[0x1E4FACAE8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C2B8);
  }
  return result;
}

unint64_t sub_1C0B801D4()
{
  unint64_t result = qword_1EB86C2C8;
  if (!qword_1EB86C2C8)
  {
    sub_1C0B8081C(255, &qword_1EB86C2D0, (uint64_t (*)(uint64_t))sub_1C0090478, sub_1C0B7F7E4, MEMORY[0x1E4FAD300]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86C2C8);
  }
  return result;
}

uint64_t sub_1C0B80270(uint64_t a1)
{
  sub_1C0B80030(0, (unint64_t *)&qword_1EB869DF8, &qword_1EB869DF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0B802E4()
{
  if (!qword_1EB864338)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1C006ABCC((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    sub_1C006ABCC((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v0 = sub_1C151C15C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864338);
    }
  }
}

void sub_1C0B803D0()
{
  if (!qword_1EB864320)
  {
    type metadata accessor for FormatSectionDescriptor();
    type metadata accessor for FormatModel();
    sub_1C006ABCC((unint64_t *)&unk_1EB8674A0, (void (*)(uint64_t))type metadata accessor for FormatSectionDescriptor);
    sub_1C006ABCC((unint64_t *)&qword_1EB8656D0, (void (*)(uint64_t))type metadata accessor for FormatModel);
    unint64_t v0 = sub_1C151BDFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB864320);
    }
  }
}

void *sub_1C0B804BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[3] = 0;
  swift_unknownObjectWeakInit();
  a6[5] = 0;
  swift_unknownObjectWeakInit();
  a6[24] = MEMORY[0x1E4FBC870];
  sub_1BFC66384(a1, (uint64_t)(a6 + 6));
  sub_1BFC66384(a2, (uint64_t)(a6 + 11));
  sub_1C0B80910(a5, (uint64_t)(a6 + 18));
  a6[23] = a4;
  type metadata accessor for WeakFormatTracker();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v11 + 24) = &protocol witness table for FormatTracker;
  swift_unknownObjectWeakAssign();
  sub_1C0B80270(a5);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  a6[16] = v11;
  a6[17] = &protocol witness table for WeakFormatTracker;
  return a6;
}

void *sub_1C0B805B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  v17[3] = type metadata accessor for FormatRouter();
  v17[4] = &off_1F1B90608;
  v17[0] = a3;
  a6[3] = 0;
  swift_unknownObjectWeakInit();
  a6[5] = 0;
  swift_unknownObjectWeakInit();
  a6[6] = a1;
  a6[7] = a2;
  sub_1BFC66384((uint64_t)v17, (uint64_t)(a6 + 8));
  a6[13] = a4;
  a6[14] = a5;
  uint64_t v12 = a6[7];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v12 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v15 = swift_retain();
  v14(v15, &off_1F1C02FB0, ObjectType, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return a6;
}

void *sub_1C0B806B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  v17[3] = *a6;
  v17[4] = &off_1F1BF3B28;
  v17[0] = a6;
  sub_1C0B8081C(0, &qword_1EB865CF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlueprintModifierFactory, sub_1C0B8089C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatInteractor);
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v11[3] = 0;
  swift_unknownObjectWeakInit();
  v11[6] = a1;
  v11[7] = a2;
  void v11[4] = a3;
  v11[5] = a4;
  v11[8] = a5;
  sub_1BFC66384((uint64_t)v17, (uint64_t)(v11 + 9));
  uint64_t v12 = v11[8];
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void (**)())(v12 + qword_1EA1AA1F0);
  uint64_t v15 = *(void *)(v12 + qword_1EA1AA1F0);
  *uint64_t v14 = sub_1C0B80908;
  v14[1] = (void (*)())v13;
  swift_retain();
  sub_1BFC3E5C0(v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v11;
}

void sub_1C0B8081C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1C0B8089C()
{
  return sub_1C006ABCC(&qword_1EB868E10, (void (*)(uint64_t))type metadata accessor for FormatBlueprintModifierFactory);
}

uint64_t sub_1C0B808D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1C0B80908()
{
}

uint64_t sub_1C0B80910(uint64_t a1, uint64_t a2)
{
  sub_1C0B80030(0, (unint64_t *)&qword_1EB869DF8, &qword_1EB869DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0B80998(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v77 = a1;
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE9D14(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = MEMORY[0x1F4188790](v12).n128_u64[0];
  uint64_t v15 = (char *)&v74 - v14;
  uint64_t v16 = *a3;
  uint64_t v17 = a3[1];
  uint64_t v18 = a3[2];
  uint64_t v19 = a3[3];
  uint64_t v20 = a3[4];
  uint64_t v21 = a3[5];
  if (!*((unsigned char *)a3 + 48))
  {
    uint64_t v76 = a3[5];
    uint64_t v75 = v20;
    uint64_t v25 = v16;
    id v26 = objc_msgSend(*(id *)(v77 + 56), sel_publishDate, v13);
    if (v26)
    {
      uint64_t v27 = v26;
      sub_1C15162BC();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v15, 1, 1, v5);
    }
    sub_1BFF97B80((uint64_t)v15, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      uint64_t v30 = v25;
      uint64_t v82 = v25;
      unint64_t v83 = v17;
      uint64_t v84 = v18;
      uint64_t v85 = v19;
      uint64_t v31 = v75;
      uint64_t v86 = v75;
      uint64_t v87 = v76;
      sub_1C02240C4(v30, v17, v18, v19, v75, v76, 0);
      uint64_t v77 = FormatDateFormat.format(_:)((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1C0224014(v30, v17, v18, v19, v31, v76, 0);
      uint64_t v32 = (uint64_t)v15;
      uint64_t v33 = v77;
      sub_1C0B83B84(v32, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEE9D14);
      return v33;
    }
    sub_1C0B83B84((uint64_t)v15, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEE9D14);
    return 0;
  }
  if (*((unsigned char *)a3 + 48) != 1)
  {
    if (!(v18 | v17 | v16 | v19 | v20 | v21))
    {
      uint64_t v33 = *(void *)(v77 + 40);
      swift_bridgeObjectRetain();
      return v33;
    }
    uint64_t v28 = v18 | v17 | v19 | v20 | v21;
    if (v16 == 1 && !v28)
    {
      id v29 = objc_msgSend(*(id *)(v77 + 56), sel_title, v13);
      goto LABEL_70;
    }
    if (v16 == 2 && !v28)
    {
      id v29 = objc_msgSend(*(id *)(v77 + 56), sel_subtitle, v13);
LABEL_70:
      id v63 = v29;
      if (v63)
      {
        int v64 = v63;
        uint64_t v33 = sub_1C151E62C();

        return v33;
      }
      return 0;
    }
    if (v16 != 3 || v28)
    {
      if (v16 != 4 || v28)
      {
        if (v16 != 5 || v28)
        {
          if (v16 != 6 || v28)
          {
            if (v16 != 7 || v28)
            {
              if (v16 != 8 || v28)
              {
                if (v16 != 9 || v28)
                {
                  if (v16 != 10 || v28)
                  {
                    if (v16 != 11 || v28)
                    {
                      uint64_t v67 = v77;
                      sub_1C01F09C0(v77, (uint64_t)&v82);
                      uint64_t v68 = v87;
                      uint64_t v69 = v88;
                      char v70 = v90;
                      swift_bridgeObjectRetain();
                      sub_1C01F0A74((uint64_t)&v82);
                      uint64_t v82 = 0x656C7A7A7570;
                      unint64_t v83 = 0xE600000000000000;
                      uint64_t v84 = v68;
                      uint64_t v85 = v69;
                      LOBYTE(v86) = v70;
                      uint64_t v87 = MEMORY[0x1E4FBC870];
                      sub_1C151536C();
                      swift_allocObject();
                      sub_1C151535C();
                      sub_1C0B82408();
                      sub_1C0B824B8();
                      uint64_t v33 = sub_1C151A4CC();
                      uint64_t v73 = v72;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_release();
                      sub_1C01F09C0(v67, (uint64_t)&v82);
                      if (!v73)
                      {
                        id v71 = objc_msgSend(v89, sel_identifier);
                        uint64_t v33 = sub_1C151E62C();
                      }
                      sub_1C01F0A74((uint64_t)&v82);
                    }
                    else
                    {
                      uint64_t v33 = 0;
                      switch(*(unsigned char *)(v77 + 72))
                      {
                        case 1:
                          unsigned int v66 = 1701147238;
                          goto LABEL_82;
                        case 2:
                          uint64_t v33 = 0x7373656363416F6ELL;
                          break;
                        case 3:
                          return v33;
                        default:
                          unsigned int v66 = 1684627824;
LABEL_82:
                          uint64_t v33 = v66 | 0x6563634100000000;
                          break;
                      }
                    }
                    return v33;
                  }
                  id v29 = objc_msgSend(*(id *)(v77 + 56), sel_teaserAnswer, v13);
                }
                else
                {
                  id v29 = objc_msgSend(*(id *)(v77 + 56), sel_teaserNumber, v13);
                }
              }
              else
              {
                id v29 = objc_msgSend(*(id *)(v77 + 56), sel_teaserDirection, v13);
              }
            }
            else
            {
              id v29 = objc_msgSend(*(id *)(v77 + 56), sel_teaserInfo, v13);
            }
          }
          else
          {
            id v29 = objc_msgSend(*(id *)(v77 + 56), sel_teaserClue, v13);
          }
        }
        else
        {
          id v29 = objc_msgSend(*(id *)(v77 + 56), sel_difficultyDescription, v13);
        }
      }
      else
      {
        id v29 = objc_msgSend(*(id *)(v77 + 56), sel_puzzleDescription, v13);
      }
      goto LABEL_70;
    }
    id v47 = objc_msgSend(*(id *)(v77 + 56), sel_authors, v13);
    if (v47)
    {
      uint64_t v48 = v47;
      uint64_t v49 = sub_1C151EBCC();

      uint64_t v33 = Array<A>.localizedOxfordCommaSeparatedList.getter(v49);
      uint64_t v51 = v50;
      swift_bridgeObjectRelease();
      if (v51) {
        return v33;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v22 = *a3;
  swift_getObjectType();
  uint64_t v23 = qword_1EB864430;
  swift_retain();
  if (v23 != -1) {
    swift_once();
  }
  sub_1C01F09C0(v77, (uint64_t)&v82);
  sub_1C008ACC4();
  sub_1C151AD7C();
  sub_1C0B83B84((uint64_t)&v82, (uint64_t)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0B8449C);
  if ((v22 & 1) == 0)
  {
    if (v81 <= 1u)
    {
      double v24 = *(double *)&v80;
LABEL_26:
      if (qword_1EB8613E0 != -1) {
        swift_once();
      }
      id v35 = (id)qword_1EB8613D0;
      id v36 = objc_msgSend(v35, sel_stringFromTimeInterval_, v24);
      if (v36)
      {
        char v37 = v36;
        uint64_t v38 = sub_1C151E62C();
        unint64_t v40 = v39;
      }
      else
      {
        uint64_t v38 = 0;
        unint64_t v40 = 0xE000000000000000;
      }
      uint64_t v82 = v38;
      unint64_t v83 = v40;
      uint64_t v80 = 44;
      unint64_t v81 = 0xE100000000000000;
      uint64_t v78 = 0;
      unint64_t v79 = 0xE000000000000000;
      sub_1BFF27ECC();
      uint64_t v52 = MEMORY[0x1E4FBB1A0];
      uint64_t v53 = sub_1C151FEBC();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t v82 = v53;
      unint64_t v83 = v55;
      uint64_t v80 = 32;
      unint64_t v81 = 0xE100000000000000;
      uint64_t v56 = sub_1C151FE4C();
      unint64_t v57 = *(void *)(v56 + 16);
      if (v57 >= 2) {
        unint64_t v57 = 2;
      }
      uint64_t v82 = v56;
      unint64_t v83 = v56 + 32;
      uint64_t v84 = 0;
      uint64_t v85 = (2 * v57) | 1;
      sub_1C0B8449C(0, (unint64_t *)&unk_1EB890298, v52, MEMORY[0x1E4FBB908]);
      sub_1C09E58C8();
      uint64_t v33 = sub_1C151E55C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v33;
    }
    double v24 = 0.0;
    if (v81 == 2) {
      goto LABEL_26;
    }
    goto LABEL_40;
  }
  if (v81 > 1u)
  {
    double v34 = 0.0;
    if (v81 != 2)
    {
LABEL_40:
      swift_release();
      return 0;
    }
  }
  else
  {
    double v34 = *(double *)&v80;
  }
  if (qword_1EA194BF8 != -1) {
    swift_once();
  }
  id v41 = (id)qword_1EA1AE228;
  id v42 = objc_msgSend(v41, sel_stringFromTimeInterval_, v34);
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v44 = sub_1C151E62C();
    unint64_t v46 = v45;
  }
  else
  {
    uint64_t v44 = 0;
    unint64_t v46 = 0xE000000000000000;
  }
  uint64_t v82 = v44;
  unint64_t v83 = v46;
  uint64_t v80 = 44;
  unint64_t v81 = 0xE100000000000000;
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  sub_1BFF27ECC();
  uint64_t v58 = MEMORY[0x1E4FBB1A0];
  uint64_t v33 = sub_1C151FEBC();
  unint64_t v60 = v59;
  swift_bridgeObjectRelease();
  uint64_t v82 = v33;
  unint64_t v83 = v60;
  uint64_t v80 = 32;
  unint64_t v81 = 0xE100000000000000;
  uint64_t v61 = sub_1C151FE4C();
  unint64_t v62 = *(void *)(v61 + 16);
  if (v62 >= 2) {
    unint64_t v62 = 2;
  }
  uint64_t v82 = v61;
  unint64_t v83 = v61 + 32;
  uint64_t v84 = 0;
  uint64_t v85 = (2 * v62) | 1;
  sub_1C0B8449C(0, (unint64_t *)&unk_1EB890298, v58, MEMORY[0x1E4FBB908]);
  sub_1C09E58C8();
  sub_1C151E55C();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v33;
}

uint64_t FormatPuzzleBinding.Text.text(from:computedContext:selectors:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v81 = a4;
  uint64_t v80 = a3;
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE9D14(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  double v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v15 = MEMORY[0x1F4188790](v14).n128_u64[0];
  uint64_t v17 = (char *)&v78 - v16;
  uint64_t v18 = *(void *)v4;
  uint64_t v19 = *(void *)(v4 + 8);
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v21 = *(void *)(v4 + 24);
  uint64_t v22 = *(void *)(v4 + 32);
  unint64_t v23 = *(void *)(v4 + 40);
  if (!*(unsigned char *)(v4 + 48))
  {
    uint64_t v79 = *(void *)(v4 + 16);
    uint64_t v80 = (uint64_t (*)(void))v23;
    uint64_t v81 = v22;
    uint64_t v27 = v18;
    id v28 = objc_msgSend(*(id *)(a1 + 56), sel_publishDate, v15);
    if (v28)
    {
      id v29 = v28;
      sub_1C15162BC();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17, 1, 1, v7);
    }
    sub_1BFF97B80((uint64_t)v17, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      uint64_t v86 = v27;
      unint64_t v87 = v19;
      uint64_t v88 = v79;
      uint64_t v89 = v21;
      uint64_t v32 = v81;
      uint64_t v90 = v81;
      uint64_t v33 = v80;
      uint64_t v91 = v80;
      sub_1C02240C4(v27, v19, v79, v21, v81, (uint64_t)v80, 0);
      uint64_t v34 = FormatDateFormat.format(_:)((uint64_t)v10);
      id v35 = v10;
      uint64_t v36 = v34;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v35, v7);
      sub_1C0224014(v27, v19, v79, v21, v32, (uint64_t)v33, 0);
      sub_1C0B83B84((uint64_t)v17, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEE9D14);
      return v36;
    }
    sub_1C0B83B84((uint64_t)v17, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEE9D14);
    return 0;
  }
  if (*(unsigned char *)(v4 + 48) != 1)
  {
    if (!(v20 | v19 | v18 | v21 | v22 | v23))
    {
      uint64_t v36 = *(void *)(a1 + 40);
      swift_bridgeObjectRetain();
      return v36;
    }
    unint64_t v30 = v20 | v19 | v21 | v22 | v23;
    if (v18 == 1 && !v30)
    {
      id v31 = objc_msgSend(*(id *)(a1 + 56), sel_title, v15);
      goto LABEL_70;
    }
    uint64_t v38 = a1;
    if (v18 == 2 && !v30)
    {
      id v31 = objc_msgSend(*(id *)(a1 + 56), sel_subtitle, v15);
LABEL_70:
      id v67 = v31;
      if (v67)
      {
        uint64_t v68 = v67;
        uint64_t v36 = sub_1C151E62C();

        return v36;
      }
      return 0;
    }
    if (v18 != 3 || v30)
    {
      if (v18 != 4 || v30)
      {
        if (v18 != 5 || v30)
        {
          if (v18 != 6 || v30)
          {
            if (v18 != 7 || v30)
            {
              if (v18 != 8 || v30)
              {
                if (v18 != 9 || v30)
                {
                  if (v18 != 10 || v30)
                  {
                    if (v18 != 11 || v30)
                    {
                      sub_1C01F09C0(a1, (uint64_t)&v86);
                      char v70 = v91;
                      uint64_t v71 = v92;
                      char v72 = v94;
                      swift_bridgeObjectRetain();
                      uint64_t v73 = sub_1C01F0A74((uint64_t)&v86);
                      uint64_t v74 = v80(v73);
                      uint64_t v86 = 0x656C7A7A7570;
                      unint64_t v87 = 0xE600000000000000;
                      uint64_t v88 = (uint64_t)v70;
                      uint64_t v89 = v71;
                      LOBYTE(v90) = v72;
                      uint64_t v91 = (uint64_t (*)(void))v74;
                      sub_1C151536C();
                      swift_allocObject();
                      sub_1C151535C();
                      sub_1C0B82408();
                      sub_1C0B824B8();
                      uint64_t v36 = sub_1C151A4CC();
                      uint64_t v77 = v76;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_release();
                      sub_1C01F09C0(v38, (uint64_t)&v86);
                      if (!v77)
                      {
                        id v75 = objc_msgSend(v93, sel_identifier);
                        uint64_t v36 = sub_1C151E62C();
                      }
                      sub_1C01F0A74((uint64_t)&v86);
                    }
                    else
                    {
                      uint64_t v36 = 0x6563634164696170;
                      switch(*(unsigned char *)(a1 + 72))
                      {
                        case 1:
                          uint64_t v36 = 0x6563634165657266;
                          break;
                        case 2:
                          uint64_t v36 = 0x7373656363416F6ELL;
                          break;
                        case 3:
                          return 0;
                        default:
                          return v36;
                      }
                    }
                    return v36;
                  }
                  id v31 = objc_msgSend(*(id *)(a1 + 56), sel_teaserAnswer, v15);
                }
                else
                {
                  id v31 = objc_msgSend(*(id *)(a1 + 56), sel_teaserNumber, v15);
                }
              }
              else
              {
                id v31 = objc_msgSend(*(id *)(a1 + 56), sel_teaserDirection, v15);
              }
            }
            else
            {
              id v31 = objc_msgSend(*(id *)(a1 + 56), sel_teaserInfo, v15);
            }
          }
          else
          {
            id v31 = objc_msgSend(*(id *)(a1 + 56), sel_teaserClue, v15);
          }
        }
        else
        {
          id v31 = objc_msgSend(*(id *)(a1 + 56), sel_difficultyDescription, v15);
        }
      }
      else
      {
        id v31 = objc_msgSend(*(id *)(a1 + 56), sel_puzzleDescription, v15);
      }
      goto LABEL_70;
    }
    id v51 = objc_msgSend(*(id *)(a1 + 56), sel_authors, v15);
    if (v51)
    {
      uint64_t v52 = v51;
      uint64_t v53 = sub_1C151EBCC();

      uint64_t v36 = Array<A>.localizedOxfordCommaSeparatedList.getter(v53);
      uint64_t v55 = v54;
      swift_bridgeObjectRelease();
      if (v55) {
        return v36;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v24 = *(void *)v4;
  swift_getObjectType();
  uint64_t v25 = qword_1EB864430;
  swift_retain();
  if (v25 != -1) {
    swift_once();
  }
  sub_1C01F09C0(a1, (uint64_t)&v86);
  sub_1C008ACC4();
  sub_1C151AD7C();
  sub_1C0B83B84((uint64_t)&v86, (uint64_t)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0B8449C);
  if ((v24 & 1) == 0)
  {
    if (v85 <= 1u)
    {
      double v26 = *(double *)&v84;
LABEL_26:
      if (qword_1EB8613E0 != -1) {
        swift_once();
      }
      id v39 = (id)qword_1EB8613D0;
      id v40 = objc_msgSend(v39, sel_stringFromTimeInterval_, v26);
      if (v40)
      {
        id v41 = v40;
        uint64_t v42 = sub_1C151E62C();
        unint64_t v44 = v43;
      }
      else
      {
        uint64_t v42 = 0;
        unint64_t v44 = 0xE000000000000000;
      }
      uint64_t v86 = v42;
      unint64_t v87 = v44;
      uint64_t v84 = 44;
      unint64_t v85 = 0xE100000000000000;
      uint64_t v82 = 0;
      unint64_t v83 = 0xE000000000000000;
      sub_1BFF27ECC();
      uint64_t v56 = MEMORY[0x1E4FBB1A0];
      uint64_t v57 = sub_1C151FEBC();
      unint64_t v59 = v58;
      swift_bridgeObjectRelease();
      uint64_t v86 = v57;
      unint64_t v87 = v59;
      uint64_t v84 = 32;
      unint64_t v85 = 0xE100000000000000;
      uint64_t v60 = sub_1C151FE4C();
      unint64_t v61 = *(void *)(v60 + 16);
      if (v61 >= 2) {
        unint64_t v61 = 2;
      }
      uint64_t v86 = v60;
      unint64_t v87 = v60 + 32;
      uint64_t v88 = 0;
      uint64_t v89 = (2 * v61) | 1;
      sub_1C0B8449C(0, (unint64_t *)&unk_1EB890298, v56, MEMORY[0x1E4FBB908]);
      sub_1C09E58C8();
      uint64_t v36 = sub_1C151E55C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v36;
    }
    double v26 = 0.0;
    if (v85 == 2) {
      goto LABEL_26;
    }
    goto LABEL_40;
  }
  if (v85 > 1u)
  {
    double v37 = 0.0;
    if (v85 != 2)
    {
LABEL_40:
      swift_release();
      return 0;
    }
  }
  else
  {
    double v37 = *(double *)&v84;
  }
  if (qword_1EA194BF8 != -1) {
    swift_once();
  }
  id v45 = (id)qword_1EA1AE228;
  id v46 = objc_msgSend(v45, sel_stringFromTimeInterval_, v37);
  if (v46)
  {
    id v47 = v46;
    uint64_t v48 = sub_1C151E62C();
    unint64_t v50 = v49;
  }
  else
  {
    uint64_t v48 = 0;
    unint64_t v50 = 0xE000000000000000;
  }
  uint64_t v86 = v48;
  unint64_t v87 = v50;
  uint64_t v84 = 44;
  unint64_t v85 = 0xE100000000000000;
  uint64_t v82 = 0;
  unint64_t v83 = 0xE000000000000000;
  sub_1BFF27ECC();
  uint64_t v62 = MEMORY[0x1E4FBB1A0];
  uint64_t v36 = sub_1C151FEBC();
  unint64_t v64 = v63;
  swift_bridgeObjectRelease();
  uint64_t v86 = v36;
  unint64_t v87 = v64;
  uint64_t v84 = 32;
  unint64_t v85 = 0xE100000000000000;
  uint64_t v65 = sub_1C151FE4C();
  unint64_t v66 = *(void *)(v65 + 16);
  if (v66 >= 2) {
    unint64_t v66 = 2;
  }
  uint64_t v86 = v65;
  unint64_t v87 = v65 + 32;
  uint64_t v88 = 0;
  uint64_t v89 = (2 * v66) | 1;
  sub_1C0B8449C(0, (unint64_t *)&unk_1EB890298, v62, MEMORY[0x1E4FBB908]);
  sub_1C09E58C8();
  sub_1C151E55C();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_1C0B823F0(uint64_t a1, uint64_t a2)
{
  return sub_1C001FC7C(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
}

void sub_1C0B82408()
{
  if (!qword_1EA1A4080)
  {
    sub_1C0B82464();
    unint64_t v0 = type metadata accessor for FormatCellAutomation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A4080);
    }
  }
}

unint64_t sub_1C0B82464()
{
  unint64_t result = qword_1EA1A4088;
  if (!qword_1EA1A4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4088);
  }
  return result;
}

unint64_t sub_1C0B824B8()
{
  unint64_t result = qword_1EA1A4090;
  if (!qword_1EA1A4090)
  {
    sub_1C0B82408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4090);
  }
  return result;
}

uint64_t FormatPuzzleBinding.Text.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 15;
  if (v2 < 0xF) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static FormatPuzzleBinding.Text.CodingType.allCases.getter()
{
  return &unk_1F1B68708;
}

uint64_t FormatPuzzleBinding.Text.CodingType.rawValue.getter()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x656C746974627573;
      break;
    case 3:
      uint64_t result = 0x614E726F68747561;
      break;
    case 4:
      uint64_t result = 0x7470697263736564;
      break;
    case 5:
      uint64_t result = 0x6C75636966666964;
      break;
    case 6:
      uint64_t result = 0x446873696C627570;
      break;
    case 7:
      uint64_t result = 0x6C43726573616574;
      break;
    case 8:
      uint64_t result = 0x6E49726573616574;
      break;
    case 9:
      uint64_t result = 0x6944726573616574;
      break;
    case 0xA:
      uint64_t result = 0x754E726573616574;
      break;
    case 0xB:
      uint64_t result = 0x6E41726573616574;
      break;
    case 0xC:
      uint64_t result = 0x6172754479616C70;
      break;
    case 0xD:
      uint64_t result = 0x654C737365636361;
      break;
    case 0xE:
      uint64_t result = 0x6974616D6F747561;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0B82784(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1489798(*a1, *a2);
}

uint64_t sub_1C0B82790()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B827F8()
{
  FormatPuzzleBinding.Text.CodingType.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0B8285C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B828C0@<X0>(char *a1@<X8>)
{
  return FormatPuzzleBinding.Text.CodingType.init(rawValue:)(a1);
}

uint64_t sub_1C0B828CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatPuzzleBinding.Text.CodingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0B828F4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0B82954()
{
  return sub_1C151EAEC();
}

void sub_1C0B829A4(void *a1@<X8>)
{
  *a1 = &unk_1F1B68708;
}

uint64_t sub_1C0B829B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1C0B829CC(void *a1)
{
  return FormatPuzzleBinding.Text.encode(to:)(a1);
}

uint64_t sub_1C0B829E8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  switch(*a1)
  {
    case 1:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v11 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 1;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v12);
      uint64_t v10 = 0x656C746954;
      unint64_t v8 = 0xE500000000000000;
      break;
    case 2:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v13 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 2;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v14);
      uint64_t v10 = 0x656C746974627553;
      unint64_t v8 = 0xE800000000000000;
      break;
    case 3:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v15 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 3;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v16);
      uint64_t v10 = 0x4E20726F68747541;
      unint64_t v8 = 0xEB00000000656D61;
      break;
    case 4:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 4;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v18);
      uint64_t v10 = 0x7470697263736544;
      unint64_t v8 = 0xEB000000006E6F69;
      break;
    case 5:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v19 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 5;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      unint64_t v8 = 0xEA00000000007974;
      uint64_t v9 = (void *)(v7 + v20);
      uint64_t v10 = 0x6C75636966666944;
      break;
    case 6:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v21 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v22 = *(void *)(v21 + 72);
      unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
      uint64_t v24 = (void *)(v7 + v23);
      sub_1C01F09C0(a2, (uint64_t)v49);
      v47[0] = 0uLL;
      v47[1] = 1uLL;
      v47[2] = 0uLL;
      char v48 = 0;
      sub_1C0B83A80(0xD000000000000014, 0x80000001C161DC50, (uint64_t)v49, (uint64_t)v47, v24);
      uint64_t v25 = (char *)v24 + v22;
      sub_1C01F09C0(a2, (uint64_t)v49);
      v47[0] = 0uLL;
      v47[1] = 2uLL;
      v47[2] = 0uLL;
      uint64_t v10 = 0xD000000000000012;
      char v48 = 0;
      double v26 = "Publish Date, Long";
      goto LABEL_17;
    case 7:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 6;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      unint64_t v8 = 0xEB0000000065756CLL;
      uint64_t v9 = (void *)(v7 + v28);
      uint64_t v10 = 0x4320726573616554;
      break;
    case 8:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v29 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 7;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v30);
      uint64_t v10 = 0x4920726573616554;
      unint64_t v8 = 0xEB000000006F666ELL;
      break;
    case 9:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v31 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 8;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      unint64_t v8 = 0x80000001C161DC30;
      uint64_t v9 = (void *)(v7 + v32);
      uint64_t v10 = 0xD000000000000010;
      break;
    case 0xA:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v33 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 9;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v34);
      uint64_t v10 = 0x4E20726573616554;
      unsigned int v35 = 1700949365;
      goto LABEL_14;
    case 0xB:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v36 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 10;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v37);
      uint64_t v10 = 0x4120726573616554;
      unsigned int v35 = 1702327150;
LABEL_14:
      unint64_t v8 = v35 | 0xED00007200000000;
      break;
    case 0xC:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v38 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v39 = *(void *)(v38 + 72);
      unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
      id v41 = (void *)(v7 + v40);
      sub_1C01F09C0(a2, (uint64_t)v49);
      memset(v47, 0, sizeof(v47));
      char v48 = 1;
      sub_1C0B83A80(0xD000000000000016, 0x80000001C161DBF0, (uint64_t)v49, (uint64_t)v47, v41);
      uint64_t v25 = (char *)v41 + v39;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 1;
      memset((char *)v47 + 8, 0, 40);
      uint64_t v10 = 0xD00000000000001CLL;
      char v48 = 1;
      double v26 = "Play Duration, Accessibility";
      goto LABEL_17;
    case 0xD:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v42 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      uint64_t v25 = (char *)(v7 + v43);
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 11;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v10 = 0xD000000000000013;
      double v26 = "Puzzle Access Level";
LABEL_17:
      unint64_t v8 = (unint64_t)(v26 - 32) | 0x8000000000000000;
      uint64_t v9 = v25;
      break;
    case 0xE:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v44 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      *(void *)&v47[0] = 12;
      memset((char *)v47 + 8, 0, 40);
      char v48 = 2;
      uint64_t v9 = (void *)(v7 + v45);
      uint64_t v10 = 0x6974616D6F747541;
      unint64_t v8 = 0xEA00000000006E6FLL;
      break;
    default:
      sub_1BFEE9D14(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      uint64_t v5 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      sub_1C01F09C0(a2, (uint64_t)v49);
      memset(v47, 0, sizeof(v47));
      char v48 = 2;
      unint64_t v8 = 0xEA00000000007265;
      uint64_t v9 = (void *)(v7 + v6);
      uint64_t v10 = 0x696669746E656449;
      break;
  }
  uint64_t result = sub_1C0B83A80(v10, v8, (uint64_t)v49, (uint64_t)v47, v9);
  *a3 = v7;
  return result;
}

uint64_t sub_1C0B83A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = *(void *)(a4 + 8);
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(a4 + 32);
  uint64_t v11 = *(void *)(a4 + 40);
  char v12 = *(unsigned char *)(a4 + 48);
  *(void *)&long long v21 = *(void *)a4;
  uint64_t v6 = v21;
  *((void *)&v21 + 1) = v7;
  *(void *)&long long v22 = v8;
  *((void *)&v22 + 1) = v9;
  uint64_t v23 = v10;
  uint64_t v24 = v11;
  char v25 = v12;
  uint64_t v13 = sub_1C0B80998(a3, 0, (uint64_t *)&v21);
  unint64_t v15 = v14;
  sub_1C0224014(v6, v7, v8, v9, v10, v11, v12);
  uint64_t v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    *(void *)&long long v21 = v13;
    *((void *)&v21 + 1) = v15;
    *((void *)&v22 + 1) = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_1C042F9B0(a1, a2, (uint64_t)&v21, a5);
  return sub_1C01F0A74(a3);
}

uint64_t sub_1C0B83B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

BOOL _s8NewsFeed19FormatPuzzleBindingV4TextO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  int v14 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v57 = *(void *)a1;
  uint64_t v58 = v2;
  if (!*(unsigned char *)(a1 + 48))
  {
    uint64_t v17 = *(void *)(a2 + 8);
    uint64_t v18 = *(void *)a2;
    uint64_t v19 = *(void *)(a2 + 16);
    if (!*(unsigned char *)(a2 + 48))
    {
      v60[0] = *(void *)a1;
      v60[1] = v2;
      v60[2] = v5;
      v60[3] = v4;
      uint64_t v26 = v4;
      uint64_t v47 = v4;
      uint64_t v54 = v7;
      v60[4] = v7;
      v60[5] = v6;
      uint64_t v27 = v18;
      v59[0] = v18;
      v59[1] = v17;
      uint64_t v28 = v17;
      uint64_t v29 = v19;
      uint64_t v49 = v19;
      uint64_t v50 = v17;
      v59[2] = v19;
      v59[3] = v11;
      v59[4] = v13;
      v59[5] = v12;
      uint64_t v30 = v18;
      uint64_t v31 = v17;
      uint64_t v32 = v11;
      uint64_t v33 = v11;
      uint64_t v51 = v11;
      uint64_t v52 = v13;
      uint64_t v34 = v13;
      uint64_t v35 = v13;
      uint64_t v36 = v12;
      uint64_t v37 = v6;
      uint64_t v48 = v6;
      uint64_t v53 = v12;
      uint64_t v38 = v2;
      uint64_t v39 = v3;
      sub_1C02240C4(v30, v31, v29, v33, v35, v12, 0);
      sub_1C02240C4(v39, v38, v5, v26, v54, v37, 0);
      sub_1C02240C4(v27, v28, v49, v32, v34, v36, 0);
      sub_1C02240C4(v39, v38, v5, v47, v54, v48, 0);
      BOOL v16 = _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0(v60, v59);
      sub_1C0224014(v39, v38, v5, v47, v54, v48, 0);
      sub_1C0224014(v27, v50, v49, v51, v52, v53, 0);
      sub_1C0224014(v27, v50, v49, v51, v52, v53, 0);
      sub_1C0224014(v57, v58, v5, v47, v54, v48, 0);
      return v16;
    }
    char v55 = 0;
    uint64_t v56 = *(void *)(a1 + 16);
    uint64_t v20 = *(void *)(a2 + 40);
    uint64_t v21 = *(void *)(a1 + 24);
    uint64_t v22 = *(void *)(a1 + 32);
    uint64_t v23 = *(void *)(a1 + 40);
    sub_1BFF523A4(v3, v2, v56);
    uint64_t v6 = v23;
    uint64_t v7 = v22;
    uint64_t v4 = v21;
    uint64_t v12 = v20;
    uint64_t v10 = v19;
    uint64_t v9 = v18;
    uint64_t v8 = v17;
    goto LABEL_83;
  }
  uint64_t v56 = *(void *)(a1 + 16);
  char v55 = *(unsigned char *)(a1 + 48);
  if (v55 != 1)
  {
    if (v5 | v2 | v3 | v4 | v7 | v6)
    {
      uint64_t v24 = v5 | v2 | v4 | v7 | v6;
      if (v3 == 1 && !v24)
      {
        if (v14 == 2 && v9 == 1 && !(v10 | v8 | v11 | v13 | v12))
        {
          BOOL v16 = 1;
          uint64_t v25 = *(void *)(a2 + 40);
          sub_1C0224014(1, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
          sub_1C0224014(1, 0, 0, v11, v13, v25, 2);
          return v16;
        }
LABEL_83:
        uint64_t v42 = v10;
        uint64_t v43 = v10;
        uint64_t v44 = v12;
        uint64_t v45 = v6;
        sub_1C02240C4(v9, v8, v42, v11, v13, v12, v14);
        sub_1C0224014(v57, v58, v56, v4, v7, v45, v55);
        sub_1C0224014(v9, v8, v43, v11, v13, v44, v14);
        return 0;
      }
      if (v3 != 2 || v24)
      {
        if (v3 != 3 || v24)
        {
          if (v3 != 4 || v24)
          {
            if (v3 != 5 || v24)
            {
              if (v3 != 6 || v24)
              {
                if (v3 != 7 || v24)
                {
                  if (v3 != 8 || v24)
                  {
                    if (v3 != 9 || v24)
                    {
                      if (v3 != 10 || v24)
                      {
                        if (v3 != 11 || v24)
                        {
                          if (v14 != 2 || v9 != 12 || v10 | v8 | v11 | v13 | v12) {
                            goto LABEL_83;
                          }
                          uint64_t v40 = *(void *)(a2 + 40);
                          sub_1C0224014(12, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
                          uint64_t v41 = 12;
                        }
                        else
                        {
                          if (v14 != 2 || v9 != 11 || v10 | v8 | v11 | v13 | v12) {
                            goto LABEL_83;
                          }
                          uint64_t v40 = *(void *)(a2 + 40);
                          sub_1C0224014(11, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
                          uint64_t v41 = 11;
                        }
                      }
                      else
                      {
                        if (v14 != 2 || v9 != 10 || v10 | v8 | v11 | v13 | v12) {
                          goto LABEL_83;
                        }
                        uint64_t v40 = *(void *)(a2 + 40);
                        sub_1C0224014(10, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
                        uint64_t v41 = 10;
                      }
                    }
                    else
                    {
                      if (v14 != 2 || v9 != 9 || v10 | v8 | v11 | v13 | v12) {
                        goto LABEL_83;
                      }
                      uint64_t v40 = *(void *)(a2 + 40);
                      sub_1C0224014(9, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
                      uint64_t v41 = 9;
                    }
                  }
                  else
                  {
                    if (v14 != 2 || v9 != 8 || v10 | v8 | v11 | v13 | v12) {
                      goto LABEL_83;
                    }
                    uint64_t v40 = *(void *)(a2 + 40);
                    sub_1C0224014(8, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
                    uint64_t v41 = 8;
                  }
                }
                else
                {
                  if (v14 != 2 || v9 != 7 || v10 | v8 | v11 | v13 | v12) {
                    goto LABEL_83;
                  }
                  uint64_t v40 = *(void *)(a2 + 40);
                  sub_1C0224014(7, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
                  uint64_t v41 = 7;
                }
              }
              else
              {
                if (v14 != 2 || v9 != 6 || v10 | v8 | v11 | v13 | v12) {
                  goto LABEL_83;
                }
                uint64_t v40 = *(void *)(a2 + 40);
                sub_1C0224014(6, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
                uint64_t v41 = 6;
              }
            }
            else
            {
              if (v14 != 2 || v9 != 5 || v10 | v8 | v11 | v13 | v12) {
                goto LABEL_83;
              }
              uint64_t v40 = *(void *)(a2 + 40);
              sub_1C0224014(5, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
              uint64_t v41 = 5;
            }
          }
          else
          {
            if (v14 != 2 || v9 != 4 || v10 | v8 | v11 | v13 | v12) {
              goto LABEL_83;
            }
            uint64_t v40 = *(void *)(a2 + 40);
            sub_1C0224014(4, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
            uint64_t v41 = 4;
          }
        }
        else
        {
          if (v14 != 2 || v9 != 3 || v10 | v8 | v11 | v13 | v12) {
            goto LABEL_83;
          }
          uint64_t v40 = *(void *)(a2 + 40);
          sub_1C0224014(3, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
          uint64_t v41 = 3;
        }
      }
      else
      {
        if (v14 != 2 || v9 != 2 || v10 | v8 | v11 | v13 | v12) {
          goto LABEL_83;
        }
        uint64_t v40 = *(void *)(a2 + 40);
        sub_1C0224014(2, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
        uint64_t v41 = 2;
      }
    }
    else
    {
      if (v14 != 2 || v10 | v8 | v9 | v11 | v13 | v12) {
        goto LABEL_83;
      }
      uint64_t v40 = *(void *)(a2 + 40);
      sub_1C0224014(0, 0, 0, *(void *)(a1 + 24), v7, v6, 2);
      uint64_t v41 = 0;
    }
    sub_1C0224014(v41, 0, 0, v11, v13, v40, 2);
    return 1;
  }
  if (v14 != 1) {
    goto LABEL_83;
  }
  uint64_t v15 = *(void *)(a2 + 40);
  sub_1C0224014(v57, v2, v5, v4, v7, v6, 1);
  sub_1C0224014(v9, v8, v10, v11, v13, v15, 1);
  return ((v9 ^ v57) & 1) == 0;
}

unint64_t sub_1C0B843C8()
{
  unint64_t result = qword_1EA1A4098;
  if (!qword_1EA1A4098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4098);
  }
  return result;
}

unint64_t sub_1C0B84420()
{
  unint64_t result = qword_1EA1A40A0;
  if (!qword_1EA1A40A0)
  {
    sub_1C0B8449C(255, &qword_1EA1A40A8, (uint64_t)&type metadata for FormatPuzzleBinding.Text.CodingType, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A40A0);
  }
  return result;
}

void sub_1C0B8449C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C0B844E8(uint64_t a1)
{
  unint64_t result = sub_1C0B84510();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0B84510()
{
  unint64_t result = qword_1EA1A40B0;
  if (!qword_1EA1A40B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A40B0);
  }
  return result;
}

unint64_t sub_1C0B84564(void *a1)
{
  a1[1] = sub_1C0865538();
  a1[2] = sub_1C0905A8C();
  unint64_t result = sub_1C0B8459C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0B8459C()
{
  unint64_t result = qword_1EA1A40B8;
  if (!qword_1EA1A40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A40B8);
  }
  return result;
}

uint64_t _s4TextOwxx_1(uint64_t a1)
{
  return sub_1C0224014(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t _s4TextOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1C02240C4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s4TextOwca_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1C02240C4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1C0224014(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s4TextOwta_1(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1C0224014(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s4TextOwet_5(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s4TextOwst_5(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0B84808(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C0B84820(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Text()
{
  return &type metadata for FormatPuzzleBinding.Text;
}

unsigned char *_s4TextO10CodingTypeOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B84924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Text.CodingType()
{
  return &type metadata for FormatPuzzleBinding.Text.CodingType;
}

uint64_t sub_1C0B8495C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C151E7DC();
    return sub_1C151E8EC();
  }
  return result;
}

unint64_t sub_1C0B849F8()
{
  unint64_t result = qword_1EB8668A8;
  if (!qword_1EB8668A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8668A8);
  }
  return result;
}

uint64_t static ErrorStyler.feedTheme.getter()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  id v2 = objc_msgSend(v0, sel_systemBackgroundColor);
  id v3 = objc_msgSend(v0, sel_ts_dynamicColor_withDarkStyleVariant_, v1, v2);

  id v4 = objc_msgSend(v0, sel_secondaryLabelColor);
  return MEMORY[0x1F415FD50](v3, 0, v4);
}

uint64_t type metadata accessor for DebugPersonalizationSelectionButton()
{
  uint64_t result = qword_1EA1A40D0;
  if (!qword_1EA1A40D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0B84B70()
{
  return swift_initClassMetadata2();
}

char *sub_1C0B84BC0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = qword_1EA1A40C0;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  char v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_init);
  uint64_t v12 = qword_1EA1A40C8;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);

  v46.receiver = v11;
  v46.super_class = (Class)type metadata accessor for DebugPersonalizationSelectionButton();
  uint64_t v13 = (char *)objc_msgSendSuper2(&v46, sel_initWithFrame_, a1, a2, a3, a4);
  id v14 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v14, sel_setCornerRadius_, 12.0);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v15 = objc_msgSend(v13, sel_widthAnchor);
  id v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, 100.0);

  objc_msgSend(v16, sel_setActive_, 1);
  id v17 = objc_msgSend(v13, sel_heightAnchor);
  id v18 = objc_msgSend(v17, (SEL)&selRef_magentaColor + 2, 25.0);

  objc_msgSend(v18, sel_setActive_, 1);
  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel_labelColor);
  objc_msgSend(v13, sel_setTitleColor_forState_, v20, 0);

  uint64_t v21 = qword_1EA1A40C8;
  id v22 = *(id *)&v13[qword_1EA1A40C8];
  id v23 = objc_msgSend(v19, sel_labelColor);
  objc_msgSend(v22, sel_setTintColor_, v23);

  id v24 = objc_msgSend(v19, sel_secondarySystemBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v24);

  uint64_t v25 = qword_1EA1A40C0;
  objc_msgSend(v13, sel_addSubview_, *(void *)&v13[qword_1EA1A40C0]);
  objc_msgSend(v13, sel_addSubview_, *(void *)&v13[v21]);
  objc_msgSend(*(id *)&v13[v25], (SEL)&selRef_gestureRecognizer_shouldRecognizeSimultaneouslyWithGestureRecognizer_ + 7, 0);
  id v26 = objc_msgSend(*(id *)&v13[v25], sel_centerXAnchor);
  id v27 = objc_msgSend(v13, sel_centerXAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  objc_msgSend(v28, sel_setActive_, 1);
  id v29 = objc_msgSend(*(id *)&v13[v25], sel_centerYAnchor);
  id v30 = objc_msgSend(v13, sel_centerYAnchor);
  id v31 = objc_msgSend(v29, (SEL)&selRef_ne_isNaturallyRTL + 6, v30);

  objc_msgSend(v31, sel_setActive_, 1);
  id v32 = objc_msgSend(*(id *)&v13[v25], sel_leadingAnchor);
  id v33 = objc_msgSend(*(id *)&v13[v21], sel_trailingAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 15.0);

  objc_msgSend(v34, sel_setActive_, 1);
  objc_msgSend(*(id *)&v13[v21], sel_setContentMode_, 1);
  objc_msgSend(*(id *)&v13[v21], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v35 = objc_msgSend(*(id *)&v13[v21], sel_leadingAnchor);
  id v36 = objc_msgSend(v13, sel_leadingAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, 15.0);

  objc_msgSend(v37, sel_setActive_, 1);
  id v38 = objc_msgSend(*(id *)&v13[v21], sel_centerYAnchor);
  id v39 = objc_msgSend(*(id *)&v13[v25], sel_centerYAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  objc_msgSend(v40, sel_setActive_, 1);
  id v41 = objc_msgSend(*(id *)&v13[v21], sel_widthAnchor);
  id v42 = objc_msgSend(v41, sel_constraintEqualToConstant_, 20.0);

  objc_msgSend(v42, sel_setActive_, 1);
  id v43 = objc_msgSend(*(id *)&v13[v21], sel_heightAnchor);
  id v44 = objc_msgSend(v43, sel_constraintEqualToConstant_, 20.0);

  objc_msgSend(v44, sel_setActive_, 1);
  return v13;
}

char *sub_1C0B8518C(double a1, double a2, double a3, double a4)
{
  return sub_1C0B84BC0(a1, a2, a3, a4);
}

void sub_1C0B851B0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_1EA1A40C0;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v7 = a3;
  *(void *)&a1[v5] = objc_msgSend(v6, sel_init);
  uint64_t v8 = qword_1EA1A40C8;
  *(void *)&a1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);

  sub_1C152040C();
  __break(1u);
}

void sub_1C0B85270()
{
  id v1 = *(void **)(v0 + qword_1EA1A40C8);
}

id sub_1C0B852B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugPersonalizationSelectionButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C0B852E8(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_1EA1A40C8);
}

uint64_t sub_1C0B85334()
{
  return type metadata accessor for DebugPersonalizationSelectionButton();
}

uint64_t destroy for DebugFormatHistory(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatHistory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  id v7 = (_OWORD *)(a2 + 88);
  unint64_t v8 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 <= 2)
  {
    *(_OWORD *)(a1 + 88) = *v7;
  }
  else
  {
    *(unsigned char *)(a1 + 88) = *(unsigned char *)v7;
    *(void *)(a1 + 96) = v8;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  uint64_t v14 = *(void *)(a2 + 184);
  uint64_t v13 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = v14;
  *(void *)(a1 + 192) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatHistory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 96);
  unint64_t v5 = *(void *)(a2 + 96);
  if (v4 == 2)
  {
    if (v5 > 2) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 2)
  {
    sub_1C01D3D9C(a1 + 88);
    goto LABEL_11;
  }
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1C0B857A4(a1 + 88);
    goto LABEL_11;
  }
  if (v5 < 2)
  {
LABEL_11:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_12;
  }
LABEL_8:
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
LABEL_12:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0B857A4(uint64_t a1)
{
  sub_1C01D3CEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for DebugFormatHistory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  id v7 = (unsigned char *)(a2 + 88);
  unint64_t v8 = *(void *)(a1 + 96);
  unint64_t v9 = *(void *)(a2 + 96);
  if (v8 != 2)
  {
    if (v9 == 2)
    {
      sub_1C01D3D9C(a1 + 88);
    }
    else if (v8 >= 2)
    {
      if (v9 >= 2)
      {
        *(unsigned char *)(a1 + 88) = *v7;
        *(void *)(a1 + 96) = v9;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1C0B857A4(a1 + 88);
    }
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v7;
LABEL_8:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatHistory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatHistory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatHistory()
{
  return &type metadata for DebugFormatHistory;
}

void sub_1C0B85A60(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, void *a6)
{
  double v13 = CACurrentMediaTime();
  sub_1C0F8A49C(a4, a5, a6, &v25);
  if (v6) {
    return;
  }
  double v15 = CACurrentMediaTime();
  id v16 = *(void **)(a3 + 184);
  id v17 = *(id *)(a3 + 192);
  uint64_t v18 = v16[2];
  if (!((unint64_t)v17 >> 62))
  {
    uint64_t v19 = *(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19) {
      goto LABEL_4;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C15204BC();
  unint64_t v14 = swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_18;
  }
LABEL_4:
  if (v18 == 0x8000000000000000 && v19 == -1)
  {
    __break(1u);
    return;
  }
  unint64_t v14 = v18 % v19;
  if (((unint64_t)v17 & 0xC000000000000001) == 0)
  {
    if ((v14 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v14 < *(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v21 = *((id *)v17 + v14 + 4);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_19:
  id v21 = (id)MEMORY[0x1C18C7CB0](v14, v17);
LABEL_12:
  id v17 = v21;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_22:
  }
    id v16 = sub_1C0EE73E0(0, v16[2] + 1, 1, v16);
  unint64_t v23 = v16[2];
  unint64_t v22 = v16[3];
  if (v23 >= v22 >> 1) {
    id v16 = sub_1C0EE73E0((void *)(v22 > 1), v23 + 1, 1, v16);
  }
  _DWORD v16[2] = v23 + 1;
  id v24 = (double *)&v16[4 * v23];
  *((void *)v24 + 4) = a1;
  *((void *)v24 + 5) = a2;
  v24[6] = (v15 - v13) * 1000.0;
  *((void *)v24 + 7) = v17;
  *(void *)(a3 + 184) = v16;
}

uint64_t FeedChannelClusteringResult.clusters.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FeedChannelClusteringResult __swiftcall FeedChannelClusteringResult.init(clusters:)(NewsFeed::FeedChannelClusteringResult clusters)
{
  v1->clusters._rawValue = clusters.clusters._rawValue;
  return clusters;
}

void static FeedChannelClusteringResult.empty.getter(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t FeedChannelClusteringResult.scoredHeadlines.getter()
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 40;
    do
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      sub_1C10485A0(v4);
      v3 += 24;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t static FeedChannelClusteringResult.- infix(_:_:)@<X0>(unint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4)
  {
LABEL_12:
    uint64_t v16 = sub_1BFEF4060(v5);
    swift_bridgeObjectRelease();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C0B8624C(v18, (uint64_t)sub_1C0379088, v17);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v19;
    return result;
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF661B8(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    uint64_t v5 = v20;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        unint64_t v8 = (void *)MEMORY[0x1C18C7CB0](v7, a1);
      }
      else
      {
        unint64_t v8 = *(void **)(a1 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      id v9 = objc_msgSend(v8, sel_identifier);
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;
      swift_unknownObjectRelease();

      unint64_t v14 = *(void *)(v20 + 16);
      unint64_t v13 = *(void *)(v20 + 24);
      if (v14 >= v13 >> 1) {
        sub_1BFF661B8(v13 > 1, v14 + 1, 1);
      }
      ++v7;
      *(void *)(v20 + 16) = v14 + 1;
      unint64_t v15 = v20 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
    }
    while (v4 != v7);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t FeedChannelClusteringResult.next(filterAgainst:)(void *a1, void *a2, unint64_t a3)
{
  unint64_t v5 = a3;
  uint64_t v8 = *v3;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    unint64_t v11 = (unint64_t)&v39;
    sub_1BFF661B8(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v38 = (uint64_t)a2;
    uint64_t v4 = 0;
    uint64_t v10 = v39;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = (void *)MEMORY[0x1C18C7CB0](v4, v5);
      }
      else
      {
        uint64_t v12 = *(void **)(v5 + 8 * v4 + 32);
        swift_unknownObjectRetain();
      }
      id v13 = objc_msgSend(v12, sel_identifier);
      uint64_t v14 = sub_1C151E62C();
      uint64_t v16 = v15;
      swift_unknownObjectRelease();

      uint64_t v39 = v10;
      unint64_t v18 = *(void *)(v10 + 16);
      unint64_t v17 = *(void *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BFF661B8(v17 > 1, v18 + 1, 1);
        uint64_t v10 = v39;
      }
      ++v4;
      *(void *)(v10 + 16) = v18 + 1;
      uint64_t v19 = v10 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
    }
    while (v9 != v4);
    a2 = (void *)v38;
  }
  uint64_t v20 = sub_1BFEF4060(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_bridgeObjectRetain();
  unint64_t v11 = sub_1C0B86370(v21, v20);
  unint64_t v5 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  if (v5)
  {
    uint64_t v33 = 0;
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    goto LABEL_29;
  }
  if ((v11 & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
  if (v11 >= *(void *)(v8 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v24 = (void *)(v8 + 24 * v11);
  uint64_t v26 = v24[4];
  uint64_t v25 = v24[5];
  id v27 = (void *)v24[6];
  unint64_t v11 = sub_1C0295428(v11 + 1, v8);
  unint64_t v31 = v30 >> 1;
  if (v29 != v30 >> 1)
  {
    uint64_t v4 = v29;
    unint64_t v5 = v30;
    uint64_t v38 = v28;
    *a1 = v26;
    a1[1] = v25;
    a1[2] = v27;
    if ((v30 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      id v34 = v27;
LABEL_21:
      uint64_t v33 = sub_1C00B368C(v11, v38, v4, v5);
LABEL_28:
      uint64_t result = swift_unknownObjectRelease();
      goto LABEL_29;
    }
    sub_1C1520B6C();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v35 = v27;
    uint64_t v36 = swift_dynamicCastClass();
    if (!v36)
    {
      swift_unknownObjectRelease();
      uint64_t v36 = MEMORY[0x1E4FBC860];
    }
    uint64_t v37 = *(void *)(v36 + 16);
    swift_release();
    if (!__OFSUB__(v31, v4))
    {
      if (v37 == v31 - v4)
      {
        uint64_t v33 = swift_dynamicCastClass();
        if (!v33)
        {
          swift_unknownObjectRelease();
          uint64_t v33 = MEMORY[0x1E4FBC860];
        }
        goto LABEL_28;
      }
      goto LABEL_35;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v32 = v27;
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v33 = 0;
  *a1 = v26;
  a1[1] = v25;
  a1[2] = v32;
LABEL_29:
  *a2 = v33;
  return result;
}

uint64_t sub_1C0B86214()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B8624C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F7D78(0, v3, 0);
    uint64_t v4 = v18;
    uint64_t v6 = (void **)(a1 + 48);
    do
    {
      uint64_t v7 = (uint64_t)*(v6 - 2);
      uint64_t v8 = (uint64_t)*(v6 - 1);
      uint64_t v9 = *v6;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain_n();
      id v10 = v9;
      uint64_t v11 = sub_1C06221F8(a2, a3, v8);
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v18 + 16);
      unint64_t v12 = *(void *)(v18 + 24);
      if (v13 >= v12 >> 1) {
        sub_1C05F7D78(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v18 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v18 + 24 * v13);
      v14[4] = v7;
      v14[5] = v11;
      v14[6] = v10;
      v6 += 3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1C0B86370(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22) {
    return 0;
  }
  uint64_t v2 = a2;
  uint64_t v3 = 0;
  uint64_t v23 = a1 + 32;
  uint64_t v25 = a2 + 56;
  do
  {
    uint64_t v4 = v23 + 24 * v3;
    unint64_t v5 = *(void **)v4;
    uint64_t v6 = *(void **)(v4 + 16);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v24 = v6;
    id v7 = objc_msgSend(v5, sel_identifier);
    uint64_t v8 = sub_1C151E62C();
    uint64_t v10 = v9;

    if (!*(void *)(v2 + 16)) {
      goto LABEL_19;
    }
    uint64_t v11 = v2;
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t v12 = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v14 = v12 & ~v13;
    if (((*(void *)(v25 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
      goto LABEL_19;
    }
    uint64_t v15 = *(void *)(v11 + 48);
    uint64_t v16 = (void *)(v15 + 16 * v14);
    BOOL v17 = *v16 == v8 && v16[1] == v10;
    if (!v17 && (sub_1C1520A9C() & 1) == 0)
    {
      uint64_t v18 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v18;
        if (((*(void *)(v25 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        uint64_t v19 = (void *)(v15 + 16 * v14);
        BOOL v20 = *v19 == v8 && v19[1] == v10;
        if (v20 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_3;
        }
      }
LABEL_19:

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_3:

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    ++v3;
    uint64_t v2 = v11;
  }
  while (v3 != v22);
  return 0;
}

ValueMetadata *type metadata accessor for FeedChannelClusteringResult()
{
  return &type metadata for FeedChannelClusteringResult;
}

uint64_t sub_1C0B86594(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](a1);
  unint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v2 + 16))(v5, v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      sub_1C0B86780();
      uint64_t v8 = *(void *)&v5[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v13 = 0x287365676E616863;
      unint64_t v14 = 0xE800000000000000;
      uint64_t v9 = *(void *)(v8 + 16);
      swift_bridgeObjectRelease();
      v12[1] = v9;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v10 = v13;
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    }
    else
    {
      return 0x676E616863206F6ELL;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    return 0x6C616974696E69;
  }
  return v10;
}

void sub_1C0B86780()
{
  if (!qword_1EA1A40E0[0])
  {
    type metadata accessor for DebugFormatCacheFile();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, qword_1EA1A40E0);
    }
  }
}

uint64_t sub_1C0B867D8()
{
  uint64_t result = type metadata accessor for DebugFormatManagerData();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DebugFormatFileDirectoryMetadata(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_1C0B868A4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7) {
    unint64_t v8 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = (v11 | 7) + v8 + 1;
  uint64_t v13 = *(void *)(v10 + 64);
  uint64_t v14 = v13 + v11;
  uint64_t v15 = v13 + 7;
  unint64_t v16 = (v12 & ~(v11 | 7)) + ((v13 + 7 + ((v13 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 17;
  unsigned int v17 = v11 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v17 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || v16 > 0x18)
  {
    uint64_t v20 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v21 = a2[v8];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v23 = v8;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v24 = *(_DWORD *)a2;
          if (v8 < 4) {
LABEL_23:
          }
            unsigned int v21 = (v24 | (v22 << (8 * v8))) + 2;
          else {
LABEL_25:
          }
            unsigned int v21 = v24 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v25 = v5;
    uint64_t v26 = ~(v11 | 7);
    uint64_t v35 = ~v11;
    uint64_t v36 = v9;
    if (v21 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v25);
      *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)a1 + v8) = 1;
      swift_bridgeObjectRetain();
    }
    else if (v21)
    {
      memcpy(a1, a2, v8 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v25);
      *((unsigned char *)a1 + v8) = 0;
    }
    unint64_t v27 = ((unint64_t)a1 + v12) & v26;
    unint64_t v28 = (unint64_t)&a2[v12] & v26;
    uint64_t v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
    v29(v27, v28, v36);
    unint64_t v30 = (v14 + v27) & v35;
    unint64_t v31 = (v14 + v28) & v35;
    v29(v30, v31, v36);
    unint64_t v32 = (v15 + v30) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v15 + v31) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v32 = *(void *)v33;
    *(void *)(v32 + 8) = *(void *)(v33 + 8);
    *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0B86BD8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v4) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  else {
    unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
    swift_bridgeObjectRelease();
  }
  else if (!v6)
  {
    (*(void (**)(unsigned __int8 *))(v3 + 8))(a1);
  }
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v14 = v12 + 8;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = (unint64_t)&a1[v5 + 1 + (v15 | 7)] & ~(v15 | 7);
  v13(v16, v11);
  v13((*(void *)(v14 + 56) + v15 + v16) & ~v15, v11);
  return swift_bridgeObjectRelease();
}

unsigned char *sub_1C0B86DD4(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v7] = 1;
    swift_bridgeObjectRetain();
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    __dst[v7] = 0;
  }
  uint64_t v13 = sub_1C151928C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
  uint64_t v16 = v14 + 16;
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = v7 + (v17 | 7) + 1;
  unint64_t v19 = (unint64_t)&__dst[v18] & ~(v17 | 7);
  unint64_t v20 = (unint64_t)&__src[v18] & ~(v17 | 7);
  v15(v19, v20, v13);
  uint64_t v21 = *(void *)(v16 + 48);
  unint64_t v22 = (v21 + v17 + v19) & ~v17;
  unint64_t v23 = (v21 + v17 + v20) & ~v17;
  v15(v22, v23, v13);
  unint64_t v24 = (v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v21 + 7 + v23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  swift_bridgeObjectRetain();
  return __dst;
}

unsigned __int8 *sub_1C0B87040(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst != __src)
  {
    unint64_t v7 = *(void *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v9 = __dst[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          if (v8 >= 4) {
            goto LABEL_20;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          if (v8 >= 4) {
            goto LABEL_20;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_20;
        case 4:
          int v12 = *(_DWORD *)__dst;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_20:
          unsigned int v9 = v12 + 2;
          if (v9 == 1) {
            goto LABEL_21;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
LABEL_21:
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_17:
      if (!v9) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
    }
    unsigned int v13 = __src[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          if (v8 >= 4) {
            goto LABEL_38;
          }
          goto LABEL_32;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          if (v8 >= 4) {
            goto LABEL_38;
          }
          goto LABEL_32;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          if (v8 < 4) {
            goto LABEL_32;
          }
          goto LABEL_38;
        case 4:
          int v16 = *(_DWORD *)__src;
          if (v8 < 4)
          {
LABEL_32:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_38:
          unsigned int v13 = v16 + 2;
          if (v13 == 1) {
            goto LABEL_39;
          }
          goto LABEL_34;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_39:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v8] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_34:
      if (v13)
      {
        memcpy(__dst, __src, v8 + 1);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
        __dst[v8] = 0;
      }
    }
  }
  unint64_t v17 = *(void *)(v6 + 64);
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v17) {
    unint64_t v18 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v18 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 24);
  uint64_t v22 = v20 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = v18 + (v23 | 7) + 1;
  unint64_t v25 = (unint64_t)&__dst[v24] & ~(v23 | 7);
  unint64_t v26 = (unint64_t)&__src[v24] & ~(v23 | 7);
  v21(v25, v26, v19);
  uint64_t v27 = *(void *)(v22 + 40);
  unint64_t v28 = (v27 + v23 + v25) & ~v23;
  unint64_t v29 = (v27 + v23 + v26) & ~v23;
  v21(v28, v29, v19);
  unint64_t v30 = (v27 + 7 + v28) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v27 + 7 + v29) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  return __dst;
}

unsigned char *sub_1C0B87410(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v7] = 0;
  }
  uint64_t v13 = sub_1C151928C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 32);
  uint64_t v16 = v14 + 32;
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = v7 + (v17 | 7) + 1;
  unint64_t v19 = (unint64_t)&__dst[v18] & ~(v17 | 7);
  unint64_t v20 = (unint64_t)&__src[v18] & ~(v17 | 7);
  v15(v19, v20, v13);
  uint64_t v21 = *(void *)(v16 + 32);
  unint64_t v22 = (v21 + v17 + v19) & ~v17;
  unint64_t v23 = (v21 + v17 + v20) & ~v17;
  v15(v22, v23, v13);
  unint64_t v24 = (v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v21 + 7 + v23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  return __dst;
}

unsigned __int8 *sub_1C0B8766C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst != __src)
  {
    unint64_t v7 = *(void *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v9 = __dst[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          if (v8 >= 4) {
            goto LABEL_20;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          if (v8 >= 4) {
            goto LABEL_20;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_20;
        case 4:
          int v12 = *(_DWORD *)__dst;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_20:
          unsigned int v9 = v12 + 2;
          if (v9 == 1) {
            goto LABEL_21;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
LABEL_21:
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_17:
      if (!v9) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
    }
    unsigned int v13 = __src[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          if (v8 >= 4) {
            goto LABEL_38;
          }
          goto LABEL_32;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          if (v8 >= 4) {
            goto LABEL_38;
          }
          goto LABEL_32;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          if (v8 < 4) {
            goto LABEL_32;
          }
          goto LABEL_38;
        case 4:
          int v16 = *(_DWORD *)__src;
          if (v8 < 4)
          {
LABEL_32:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_38:
          unsigned int v13 = v16 + 2;
          if (v13 == 1) {
            goto LABEL_39;
          }
          goto LABEL_34;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_39:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v8] = 1;
    }
    else
    {
LABEL_34:
      if (v13)
      {
        memcpy(__dst, __src, v8 + 1);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
        __dst[v8] = 0;
      }
    }
  }
  unint64_t v17 = *(void *)(v6 + 64);
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v17) {
    unint64_t v18 = *(void *)(v6 + 64);
  }
  else {
    unint64_t v18 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 40);
  uint64_t v22 = v20 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = v18 + (v23 | 7) + 1;
  unint64_t v25 = (unint64_t)&__dst[v24] & ~(v23 | 7);
  unint64_t v26 = (unint64_t)&__src[v24] & ~(v23 | 7);
  v21(v25, v26, v19);
  uint64_t v27 = *(void *)(v22 + 24);
  unint64_t v28 = (v27 + v23 + v25) & ~v23;
  unint64_t v29 = (v27 + v23 + v26) & ~v23;
  v21(v28, v29, v19);
  unint64_t v30 = (v27 + 7 + v28) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v27 + 7 + v29) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  return __dst;
}

uint64_t sub_1C0B87A30(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v5) {
    unint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v6 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v12 | 7;
  uint64_t v15 = v6 + (v12 | 7) + 1;
  uint64_t v16 = v13 + v12;
  uint64_t v17 = v13 + 7;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  unint64_t v18 = (v15 & ~v14) + ((v17 + (v16 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 17;
  char v19 = 8 * v18;
  if (v18 <= 3)
  {
    unsigned int v20 = ((a2 - v11 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v20))
    {
      int v21 = *(_DWORD *)&a1[v18];
      if (!v21) {
        goto LABEL_24;
      }
      goto LABEL_17;
    }
    if (v20 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)&a1[v18];
      if (!*(_WORD *)&a1[v18]) {
        goto LABEL_24;
      }
      goto LABEL_17;
    }
    if (v20 < 2) {
      goto LABEL_24;
    }
  }
  int v21 = a1[v18];
  if (!a1[v18])
  {
LABEL_24:
    unint64_t v25 = (unint64_t)&a1[v15] & ~v14;
    if (v10 < 0x7FFFFFFF)
    {
      unint64_t v27 = *(void *)(((v17 + ((v16 + v25) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
    else
    {
      unint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(v25);
    }
  }
LABEL_17:
  int v23 = (v21 - 1) << v19;
  if (v18 >= 4) {
    int v23 = 0;
  }
  if (v18 == 1) {
    int v24 = *a1;
  }
  else {
    int v24 = *(_DWORD *)a1;
  }
  return v11 + (v24 | v23) + 1;
}

void sub_1C0B87C24(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7) {
    unint64_t v8 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  }
  else {
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t v9 = *(void *)(sub_1C151928C() - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = *(void *)(v9 + 64);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v14 = v8 + (v11 | 7) + 1;
  uint64_t v15 = v12 + v11;
  uint64_t v16 = (v12 + v11) & ~v11;
  uint64_t v17 = v12 + 7;
  size_t v18 = (v14 & ~(v11 | 7)) + ((v17 + v16) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (a3 <= v13)
  {
    int v19 = 0;
  }
  else if (v18 <= 3)
  {
    unsigned int v24 = ((a3 - v13 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v24))
    {
      int v19 = 4;
    }
    else if (v24 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v24 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v20 = ~v13 + a2;
    if (v18 < 4)
    {
      int v21 = (v20 >> (8 * v18)) + 1;
      v20 &= ~(-1 << (8 * v18));
      bzero(a1, v18);
      if (v18 == 1)
      {
        *a1 = v20;
LABEL_24:
        switch(v19)
        {
          case 1:
            a1[v18] = v21;
            return;
          case 2:
            *(_WORD *)&a1[v18] = v21;
            return;
          case 3:
            goto LABEL_41;
          case 4:
            *(_DWORD *)&a1[v18] = v21;
            return;
          default:
            return;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      int v21 = 1;
    }
    *(_DWORD *)a1 = v20;
    goto LABEL_24;
  }
  uint64_t v22 = ~(v11 | 7);
  uint64_t v23 = ~v11;
  switch(v19)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C0B87ED8);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (a2)
      {
LABEL_28:
        unint64_t v25 = (unint64_t)&a1[v14] & v22;
        if (v10 < 0x7FFFFFFF)
        {
          unint64_t v27 = (void *)((v17 + ((v15 + v25) & v23)) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *unint64_t v27 = a2 ^ 0x80000000;
            v27[1] = 0;
          }
          else
          {
            v27[1] = (a2 - 1);
          }
        }
        else
        {
          unint64_t v26 = *(void (**)(unint64_t, uint64_t))(v9 + 56);
          v26(v25, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for DebugFormatManagerResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for DebugFormatManagerData()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0B87F30()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C0B87FD8(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  unint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v10 = *(void *)__src;
    *unint64_t v4 = *(void *)__src;
    unint64_t v4 = (void *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v11 = __src[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *__src;
          goto LABEL_19;
        case 2:
          int v14 = *(unsigned __int16 *)__src;
          goto LABEL_19;
        case 3:
          int v14 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_19;
        case 4:
          int v14 = *(_DWORD *)__src;
LABEL_19:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v4 + v7) = 1;
      swift_bridgeObjectRetain();
    }
    else if (v11)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *((unsigned char *)v4 + v7) = 0;
    }
  }
  return v4;
}

unsigned __int8 *sub_1C0B881B4(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 <= v3) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = result[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *result;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)result;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(unsigned __int8 *))(v2 + 8))(result);
    return (unsigned __int8 *)swift_bridgeObjectRelease();
  }
  else if (!v5)
  {
    uint64_t v10 = *(uint64_t (**)(void))(v2 + 8);
    return (unsigned __int8 *)v10();
  }
  return result;
}

unsigned char *sub_1C0B88334(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v7] = 1;
    swift_bridgeObjectRetain();
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C0B884D0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v9 = __dst[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_bridgeObjectRelease();
    }
    else if (!v9)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = __src[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v8] = 1;
      swift_bridgeObjectRetain();
    }
    else if (v14)
    {
      memcpy(__dst, __src, v8 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_1C0B8876C(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v6) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C0B88904(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v7) {
      unint64_t v8 = *(void *)(v6 + 64);
    }
    else {
      unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    unsigned int v9 = __dst[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << (8 * v8))) + 2;
          unsigned int v9 = v12 + 2;
          if (v8 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      swift_bridgeObjectRelease();
    }
    else if (!v9)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = __src[v8];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v16 = v8;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << (8 * v8))) + 2;
          unsigned int v14 = v17 + 2;
          if (v8 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v8] = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v8 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v8] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1C0B88B9C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 <= v3) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1C0B88CD8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v5) {
    unint64_t v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C0B88EA8);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C0B88ED0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v3 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v3 <= v2) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C0B88F90(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v4) {
    size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    size_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (a2 > 1)
  {
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_1C0B89070()
{
  sub_1BFCF4530(0, &qword_1EB88B128, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)v12 - v1;
  uint64_t v3 = type metadata accessor for SportsDataConfiguration();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int v9 = (char *)v12 - v8;
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BFCF4438((uint64_t)v2);
    v12[0] = 0xD000000000000015;
    v12[1] = 0x80000001C161DD90;
    uint64_t v10 = sub_1C15183CC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0B89944((uint64_t)v2, (uint64_t)v9);
    sub_1C0250AE4((uint64_t)v9, (uint64_t)v6);
    sub_1BFCF4530(0, &qword_1EB863E58, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v10 = sub_1C151908C();
    sub_1C0250B48((uint64_t)v9);
  }
  return v10;
}

uint64_t sub_1C0B892A0()
{
  type metadata accessor for SportsDataConfiguration();
  sub_1C151932C();
  uint64_t v0 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();

  uint64_t v1 = (void *)sub_1C1518E7C();
  uint64_t v2 = sub_1C15190EC();
  swift_release();

  return v2;
}

uint64_t sub_1C0B893AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsDataConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCF4530(0, &qword_1EB88B128, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  int v11 = (char *)&v14 - v10;
  sub_1C0250AE4(a1, (uint64_t)&v14 - v10);
  int v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v12(v11, 0, 1, v2);
  sub_1BFCF44B0((uint64_t)v11, (uint64_t)v8);
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  sub_1BFCF4438((uint64_t)v11);
  v12(v11, 1, 1, v2);
  sub_1BFCF44B0((uint64_t)v11, (uint64_t)v8);
  swift_retain();
  sub_1C1518ECC();
  swift_release();
  sub_1BFCF4438((uint64_t)v11);
  sub_1C0250AE4(a1, (uint64_t)v5);
  sub_1BFCF4530(0, &qword_1EB863E58, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

char *sub_1C0B895E4(void *a1)
{
  sub_1BFCF4530(0, &qword_1EB88B128, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v20 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for SportsDataConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v21 = (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v20 - v15;
  swift_retain();
  sub_1C1518EBC();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BFCF4438((uint64_t)v10);
    swift_willThrow();
    id v17 = a1;
  }
  else
  {
    sub_1C0B89944((uint64_t)v10, (uint64_t)v16);
    sub_1C0250AE4((uint64_t)v16, (uint64_t)v7);
    int v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v18(v7, 0, 1, v11);
    sub_1BFCF44B0((uint64_t)v7, (uint64_t)v4);
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    sub_1BFCF4438((uint64_t)v7);
    v18(v7, 1, 1, v11);
    sub_1BFCF44B0((uint64_t)v7, (uint64_t)v4);
    swift_retain();
    sub_1C1518ECC();
    swift_release();
    sub_1BFCF4438((uint64_t)v7);
    sub_1C0250AE4((uint64_t)v16, v21);
    sub_1BFCF4530(0, &qword_1EB863E58, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v10 = (char *)sub_1C151908C();
    sub_1C0250B48((uint64_t)v16);
  }
  return v10;
}

uint64_t sub_1C0B898EC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0B8993C()
{
  return sub_1C0B892A0();
}

uint64_t sub_1C0B89944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0B899A8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1C024FE6C();
}

uint64_t MotionContainerView.motionLayer.getter()
{
  id v1 = objc_msgSend(v0, sel_layer);
  id v2 = objc_msgSend(v1, sel_sublayers);

  if (v2)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2D0);
    unint64_t v3 = sub_1C151EBCC();

    if (v3 >> 62) {
      goto LABEL_16;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v4; uint64_t v4 = sub_1C15204BC())
    {
      uint64_t v5 = 4;
      while (1)
      {
        id v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
        uint64_t v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1)) {
          break;
        }
        sub_1C0B89C1C();
        uint64_t v9 = swift_dynamicCastClass();
        if (v9)
        {
          uint64_t v10 = v9;
          swift_bridgeObjectRelease_n();
          return v10;
        }

        ++v5;
        if (v8 == v4) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t MotionContainerView.shouldMonitorScroll.getter()
{
  return 0;
}

uint64_t MotionContainerView.blueprintViewportMonitor(_:viewportMotionDataDidChange:)()
{
  sub_1C151BE8C();
  sub_1C151B23C();
  return swift_release();
}

uint64_t MotionContainerView.blueprintViewportMonitor(_:viewportMotionEnabled:)()
{
  return sub_1C151B21C();
}

uint64_t sub_1C0B89BB4()
{
  sub_1C151BE8C();
  sub_1C151B23C();
  return swift_release();
}

uint64_t sub_1C0B89C04()
{
  return sub_1C151B21C();
}

void sub_1C0B89C1C()
{
  if (!qword_1EA1A41E8)
  {
    sub_1BFC39268(255, (unint64_t *)&unk_1EA1A41F0);
    unint64_t v0 = sub_1C151A07C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A41E8);
    }
  }
}

id sub_1C0B89C84()
{
  uint64_t v1 = v0;
  id v2 = sub_1C0B8A454();
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1C09CFC44((uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile], (uint64_t)v64);
  uint64_t v4 = (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_sourceFile;
  sub_1C09CFC44((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_sourceFile, (uint64_t)v65);
  sub_1C09CFC44((uint64_t)v64, v4);
  sub_1C0A0C01C(v64, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
  sub_1C0A0C01C(v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
  sub_1C09CFC44(v4, (uint64_t)v66);
  sub_1C09CFC44((uint64_t)v66, (uint64_t)v70);
  sub_1C0A0C01C(v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
  sub_1C0A0B0B0((uint64_t)v70);
  sub_1C0A0C01C(v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);

  uint64_t v5 = sub_1C0B8A558();
  sub_1C09CFC44(v3, (uint64_t)v67);
  uint64_t v6 = (uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile];
  sub_1C09CFC44((uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_sourceFile], (uint64_t)v68);
  sub_1C09CFC44((uint64_t)v67, v6);
  sub_1C0A0C01C(v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0A0BF88);
  sub_1C0A0C01C(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
  sub_1C0A47870();

  sub_1C09CFC44(v3, (uint64_t)v69);
  sub_1C09CFC44((uint64_t)v69, (uint64_t)v70);
  if (sub_1C0263AB8((uint64_t)v70) != 1)
  {
    uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView];
    uint64_t v12 = v71;
    uint64_t v13 = v72;
    uint64_t v14 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor]+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme), *(void *)(*(void *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor]+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme+ 24));
    long long v15 = v14[5];
    v63[4] = v14[4];
    v63[5] = v15;
    v63[6] = v14[6];
    long long v16 = v14[1];
    v63[0] = *v14;
    v63[1] = v16;
    long long v17 = v14[3];
    v63[2] = v14[2];
    v63[3] = v17;
    sub_1C09CFC44((uint64_t)v69, (uint64_t)v62);
    sub_1C0B8CEF4(v62);
    id v18 = sub_1C0B8C408(v12, v13, (uint64_t)v63, 0);
    objc_msgSend(v11, sel_setAttributedText_, v18);

    sub_1BFF27ECC();
    int64_t v19 = *(void *)(sub_1C151FE4C() + 16);
    id result = (id)swift_bridgeObjectRelease();
    if (!v19)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v60 = v1;
    uint64_t v61 = MEMORY[0x1E4FBC860];
    id result = (id)sub_1BFF661B8(0, v19, 0);
    BOOL v20 = 0;
    uint64_t v21 = 1;
    int64_t v22 = v19;
    do
    {
      if (v20) {
        goto LABEL_25;
      }
      sub_1BFF01BC4();
      id result = (id)sub_1C151FF2C();
      id v23 = result;
      uint64_t v25 = v24;
      unint64_t v27 = *(void *)(v61 + 16);
      unint64_t v26 = *(void *)(v61 + 24);
      if (v27 >= v26 >> 1) {
        id result = (id)sub_1BFF661B8(v26 > 1, v27 + 1, 1);
      }
      *(void *)(v61 + 16) = v27 + 1;
      uint64_t v28 = v61 + 16 * v27;
      *(void *)(v28 + 32) = v23;
      *(void *)(v28 + 40) = v25;
      BOOL v20 = v21 == v19;
      if (v21 == v19)
      {
        uint64_t v21 = 0;
      }
      else if (__OFADD__(v21++, 1))
      {
        __break(1u);
        goto LABEL_24;
      }
      --v22;
    }
    while (v22);
    sub_1BFEFDF70(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    id v30 = objc_msgSend(self, sel_secondaryLabelColor);
    sub_1C0099920();
    uint64_t v31 = swift_allocObject();
    unint64_t v32 = (void **)MEMORY[0x1E4FB06F8];
    *(_OWORD *)(v31 + 16) = xmmword_1C1527210;
    unint64_t v33 = *v32;
    *(void *)(v31 + 32) = *v32;
    id v34 = self;
    double v35 = *MEMORY[0x1E4FB09D0];
    swift_bridgeObjectRetain();
    id v36 = v33;
    id v37 = objc_msgSend(v34, sel_monospacedSystemFontOfSize_weight_, 14.0, v35);
    uint64_t v38 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    *(void *)(v31 + 40) = v37;
    uint64_t v39 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(v31 + 64) = v38;
    *(void *)(v31 + 72) = v39;
    *(void *)(v31 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    *(void *)(v31 + 80) = v30;
    id v40 = v39;
    id v41 = v30;
    sub_1BFF991DC(v31);
    id v42 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v43 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BFF9A290();
    id v44 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    uint64_t v45 = (char **)objc_msgSend(v42, sel_initWithString_attributes_, v43, v44);

    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel_boundingRectWithSize_options_context_, 1, 0, 1.79769313e308, 1.79769313e308);
    double v47 = v46;
    double v49 = v48;
    uint64_t v50 = *(void **)&v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel];
    objc_msgSend(v50, sel_setAttributedText_, v45);
    objc_msgSend(v50, sel_setFrame_, 0.0, 0.0, v47, v49);
    sub_1C0B8A5E4(0);
    if (v73)
    {
      uint64_t v52 = v74;
      uint64_t v51 = v75;
      swift_bridgeObjectRetain();
      double v53 = sub_1C0B8ACAC() * (double)v51;
      double v54 = *(double *)&v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize
                          + 8];

      sub_1C0A0C01C(v69, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
      swift_bridgeObjectRelease();
      char v55 = (double *)&v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
      *char v55 = v53;
      v55[1] = v54;
      v55[2] = v53;
      v55[3] = v54 * (double)v52;
      uint64_t v45 = &selRef_setSpacing_;
      id result = objc_msgSend(v60, sel_view);
      if (!result) {
        goto LABEL_28;
      }
      uint64_t v56 = result;
      objc_msgSend(result, sel_setNeedsLayout);

      id result = objc_msgSend(v60, sel_view);
      if (result) {
        goto LABEL_22;
      }
      __break(1u);
    }

    sub_1C0A0C01C(v69, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C02F609C);
    uint64_t v57 = &v60[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
    *(_OWORD *)uint64_t v57 = 0u;
    *((_OWORD *)v57 + 1) = 0u;
    id result = objc_msgSend(v60, sel_view);
    if (!result) {
      goto LABEL_29;
    }
    uint64_t v58 = result;
    objc_msgSend(result, sel_setNeedsLayout);

    id result = objc_msgSend(v60, sel_view);
    if (!result) {
      goto LABEL_30;
    }
LABEL_22:
    unint64_t v59 = result;
    objc_msgSend(result, sel_layoutIfNeeded);

    return sub_1C0B8BDA0();
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView], sel_setAttributedText_, 0);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel], sel_setAttributedText_, 0);
  uint64_t v7 = &v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = result;
  objc_msgSend(result, sel_setNeedsLayout);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  objc_msgSend(result, sel_layoutIfNeeded);

  return sub_1C0B8BDA0();
}

id sub_1C0B8A454()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor);
    swift_retain();
    sub_1C0B8ACAC();
    uint64_t v6 = v5;
    uint64_t v7 = (objc_class *)type metadata accessor for DebugFormatDebuggerSourceBreakpointView();
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    uint64_t v9 = (uint64_t)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_sourceFile];
    sub_1C017F2B4(v15);
    sub_1C09CFC44((uint64_t)v15, v9);
    *(void *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_editor] = v4;
    *(void *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceBreakpointView_breakpointSize] = v6;
    v14.receiver = v8;
    v14.super_class = v7;
    id v10 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    uint64_t v11 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v10;
    id v3 = v10;

    id v2 = 0;
  }
  id v12 = v2;
  return v3;
}

char *sub_1C0B8A558()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView);
  if (v2)
  {
    id v3 = *(char **)(v0
                  + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView);
  }
  else
  {
    uint64_t v4 = v0;
    objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceHighlightView());
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C0A479E0(v5);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_1C0B8A5E4(char a1)
{
  id v43 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView);
  id v3 = objc_msgSend(v43, sel_subviews);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v4 = sub_1C151EBCC();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_12;
    }
  }
  if (v5 < 1)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C18C7CB0](i, v4);
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    id v8 = v7;
    type metadata accessor for DebugFormatDebuggerSourceMetricView();
    if (swift_dynamicCastClass()) {
      objc_msgSend(v8, sel_removeFromSuperview);
    }
  }
LABEL_12:
  swift_bridgeObjectRelease();
  unint64_t v9 = v1;
  swift_retain();
  sub_1C151709C();
  uint64_t result = swift_release();
  if (v48[0] != 1) {
    return result;
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel), sel_bounds);
  CGRectGetMaxX(v50);
  uint64_t v11 = (char *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile);
  sub_1C09CFC44(v9 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile, (uint64_t)v47);
  sub_1C09CFC44((uint64_t)v47, (uint64_t)v48);
  int v12 = sub_1C0263AB8((uint64_t)v48);
  uint64_t v13 = (__objc2_prot **)MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v12 != 1)
  {
    uint64_t v14 = *((void *)v11 + 10);
    swift_bridgeObjectRetain();
  }
  unint64_t v46 = (unint64_t)v13;
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    unint64_t v1 = MEMORY[0x1E4FBC860];
    if ((a1 & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
LABEL_38:
    if (!(v1 >> 62))
    {
      uint64_t v36 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v36) {
        goto LABEL_50;
      }
      goto LABEL_40;
    }
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v36 = result;
    if (!result) {
      goto LABEL_50;
    }
LABEL_40:
    if (v36 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v37 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        uint64_t v38 = (__objc2_prot *)MEMORY[0x1C18C7CB0](v37, v1);
      }
      else {
        uint64_t v38 = (__objc2_prot *)*(id *)(v1 + 8 * v37 + 32);
      }
      uint64_t v39 = v38;
      ++v37;
      CGAffineTransformMakeScale(&v45, 0.0, 0.0);
      [(__objc2_prot *)v39 setTransform:&v45];
    }
    while (v36 != v37);
LABEL_50:
    uint64_t v40 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v40);
    sub_1C151F98C();
    return swift_bridgeObjectRelease();
  }
  char v41 = a1;
  uint64_t v44 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceMetrics;
  uint64_t v42 = *(void *)(v9 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView);
  long long v16 = (uint64_t *)(v14 + 56);
  do
  {
    uint64_t v18 = *(v16 - 2);
    uint64_t v17 = *(v16 - 1);
    uint64_t v19 = *v16;
    unint64_t v20 = v9;
    uint64_t v21 = *(void *)(v9 + v44);
    if (!v21)
    {
      swift_bridgeObjectRetain();
      unint64_t v28 = MEMORY[0x1E4FBC860];
      unint64_t v26 = MEMORY[0x1E4FBC860];
      goto LABEL_30;
    }
    uint64_t v22 = *(v16 - 3);
    uint64_t v23 = *(void *)(v21 + 16);
    uint64_t v24 = *(void *)(v23 + 16);
    swift_bridgeObjectRetain();
    if (v24)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_1C105237C(v22, v18, v17, v19);
      unint64_t v26 = MEMORY[0x1E4FBC860];
      if (v27)
      {
        unint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v26 = MEMORY[0x1E4FBC860];
    }
    uint64_t v29 = *(void *)(v20 + v44);
    if (v29)
    {
      uint64_t v30 = *(void *)(v29 + 32);
      if (*(void *)(v30 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v31 = sub_1C105237C(v22, v18, v17, v19);
        if (v32)
        {
          unint64_t v28 = *(void *)(*(void *)(v30 + 56) + 8 * v31);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    unint64_t v28 = MEMORY[0x1E4FBC860];
LABEL_30:
    sub_1C0EC82D0(v28, v26, (uint64_t)v49);
    swift_bridgeObjectRelease();
    unint64_t v1 = (unint64_t)objc_allocWithZone((Class)type metadata accessor for DebugFormatDebuggerSourceMetricView());
    unint64_t v33 = sub_1C0376810(v49);
    objc_msgSend(v33, sel_sizeToFit);
    if (__OFSUB__(v19, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    unint64_t v9 = v20;
    sub_1C0B8ACAC();
    unint64_t v1 = (unint64_t)&_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
    objc_msgSend(v33, sel_bounds);
    CGRectGetWidth(v51);
    swift_bridgeObjectRelease();
    if (__OFSUB__(v17, 1)) {
      goto LABEL_47;
    }
    objc_msgSend(v33, sel_bounds);
    CGRectGetHeight(v52);
    id v34 = v33;
    objc_msgSend(v34, sel_frame);
    sub_1C151F72C();
    objc_msgSend(v34, sel_setFrame_);

    objc_msgSend(v43, sel_insertSubview_belowSubview_, v34, v42);
    double v35 = v34;
    MEMORY[0x1C18C66D0]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    v16 += 4;
    sub_1C151ECEC();
    sub_1C151EBEC();

    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  unint64_t v1 = v46;
  if (v41) {
    goto LABEL_38;
  }
  return swift_bridgeObjectRelease();
}

double sub_1C0B8ACAC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize;
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize
                 + 16) & 1) == 0)
    return *(double *)v1;
  id v2 = objc_msgSend(self, sel_labelColor);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  unint64_t v4 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v5 = *v4;
  *(void *)(inited + 32) = *v4;
  uint64_t v6 = self;
  double v7 = *MEMORY[0x1E4FB09D0];
  id v8 = v5;
  id v9 = objc_msgSend(v6, sel_monospacedSystemFontOfSize_weight_, 14.0, v7);
  uint64_t v10 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v9;
  uint64_t v11 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v2;
  id v12 = v11;
  id v13 = v2;
  sub_1BFF991DC(inited);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v15 = (void *)sub_1C151E5EC();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  long long v16 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  objc_msgSend(v17, sel_size);
  double v19 = v18;
  uint64_t v21 = v20;

  *(double *)uint64_t v1 = v19;
  *(void *)(v1 + 8) = v21;
  *(unsigned char *)(v1 + 16) = 0;
  return v19;
}

void sub_1C0B8AEDC()
{
  uint64_t v1 = v0;
  v20.receiver = v0;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, sel_viewDidLoad);
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView];
  id v3 = self;
  id v4 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  objc_msgSend(v2, sel_setDirectionalLockEnabled_, 1);
  objc_msgSend(v2, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(v2, sel_setAlwaysBounceHorizontal_, 1);
  objc_msgSend(v2, sel_setDelegate_, v1);
  objc_msgSend(v2, sel_setContentInset_, 8.0, *(double *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding]+ *(double *)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding], 0.0, 0.0);
  id v5 = objc_msgSend(v1, sel_view);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_addSubview_, v2);

    double v7 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView];
    id v8 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    id v9 = objc_msgSend(v7, sel_textContainer);
    objc_msgSend(v9, sel_setLineFragmentPadding_, 0.0);

    objc_msgSend(v7, sel_setTextContainerInset_, *MEMORY[0x1E4FB2848], *(double *)(MEMORY[0x1E4FB2848] + 8), *(double *)(MEMORY[0x1E4FB2848] + 16), *(double *)(MEMORY[0x1E4FB2848] + 24));
    objc_msgSend(v7, sel_setScrollEnabled_, 0);
    objc_msgSend(v7, sel_setEditable_, 0);
    objc_msgSend(v7, sel_setSelectable_, 0);
    objc_msgSend(v2, sel_addSubview_, v7);
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView];
    id v11 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
    objc_msgSend(v10, sel_setBackgroundColor_, v11);

    objc_msgSend(v2, sel_addSubview_, v10);
    id v12 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel];
    objc_msgSend(v12, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(v12, sel_setTextAlignment_, 2);
    objc_msgSend(v12, sel_setNumberOfLines_, 0);
    id v13 = objc_msgSend(v3, sel_tertiarySystemBackgroundColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);

    objc_msgSend(v2, sel_addSubview_, v12);
    id v14 = sub_1C0B8A558();
    objc_msgSend(v2, sel_addSubview_, v14);

    id v15 = sub_1C0B8A454();
    objc_msgSend(v2, sel_addSubview_, v15);

    swift_retain();
    sub_1C15170BC();
    swift_release();
    sub_1C15170CC();
    swift_release();
    long long v16 = sub_1C0B8A558();
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    double v18 = (uint64_t *)&v16[OBJC_IVAR____TtC8NewsFeed38DebugFormatDebuggerSourceHighlightView_didTapOnHighlight];
    swift_beginAccess();
    uint64_t v19 = *v18;
    *double v18 = (uint64_t)sub_1C0B8D108;
    v18[1] = v17;
    sub_1BFC3E5C0(v19);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C0B8B2F8()
{
  return sub_1C0B8A5E4(1);
}

void sub_1C0B8B320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  if (v6)
  {
    double v7 = (void *)v6;
    sub_1C0B8B390(a1, a2);
  }
}

void sub_1C0B8B390(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  MEMORY[0x1F4188790](v6);
  id v8 = (void **)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0B8D110(a1, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_1C0B8D174((uint64_t)v8);
    }
  }
  else
  {
    uint64_t v10 = *v8;
    if (*v8)
    {
      id v11 = v10;
      id v12 = sub_1C01A95D4(v10);
      id v13 = sub_1C01ACCE8(v12);
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor];
      id v17 = objc_allocWithZone((Class)type metadata accessor for DebugFormatErrorViewController());
      swift_retain();
      id v18 = v13;
      swift_bridgeObjectRetain();
      id v19 = sub_1C11E2324(v16, v13, v15);

      swift_release();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v19);
      objc_msgSend(v20, sel_setModalPresentationStyle_, 7);
      id v21 = objc_msgSend(v20, sel_popoverPresentationController);
      if (v21)
      {
        uint64_t v22 = v21;
        objc_msgSend(v21, sel_setSourceView_, a2);
      }
      objc_msgSend(v20, sel_setPreferredContentSize_, 540.0, 620.0);
      objc_msgSend(v3, sel_presentViewController_animated_completion_, v20, 1, 0);

      swift_bridgeObjectRelease();
    }
  }
}

id sub_1C0B8B698()
{
  v81.receiver = v0;
  v81.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v81, sel_viewWillLayoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView];
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v3 = result;
  objc_msgSend(result, sel_bounds);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  id v12 = sub_1C0B8A454();
  double v13 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding];
  double v78 = v13;
  double v14 = sub_1C0B8ACAC();
  double v16 = v15;
  id v17 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel];
  objc_msgSend(v17, sel_frame, v14);
  objc_msgSend(v12, sel_setFrame_, v13, 0.0, v16, CGRectGetHeight(v82));

  objc_msgSend(v17, sel_frame);
  id v18 = sub_1C0B8A454();
  objc_msgSend(v18, sel_frame);
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v83.origin.x = v20;
  v83.origin.y = v22;
  v83.size.width = v24;
  v83.size.height = v26;
  CGRectGetMaxX(v83);
  sub_1C151F70C();
  objc_msgSend(v17, sel_setFrame_);
  char v27 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView];
  objc_msgSend(v27, sel_sizeThatFits_, 0.0, 0.0);
  double v29 = v28;
  double v31 = v30;
  objc_msgSend(v17, sel_bounds);
  objc_msgSend(v27, sel_setFrame_, v78 * 3.0 + CGRectGetMaxX(v84), 0.0, v29, v31);
  objc_msgSend(v17, sel_bounds);
  objc_msgSend(v1, sel_setContentSize_, v29 + CGRectGetMaxX(v85), v31);
  char v32 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView];
  objc_msgSend(v1, sel_contentOffset);
  double v34 = v33;
  objc_msgSend(v1, sel_contentOffset);
  double v36 = v35;
  id v37 = sub_1C0B8A454();
  objc_msgSend(v37, sel_bounds);
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;
  CGFloat v45 = v44;

  v86.origin.x = v39;
  v86.origin.y = v41;
  v86.size.width = v43;
  v86.size.height = v45;
  double Width = CGRectGetWidth(v86);
  objc_msgSend(v17, sel_bounds);
  double v47 = CGRectGetWidth(v87);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v48 = result;
  double v49 = v78 * 3.0 + Width + v47;
  objc_msgSend(result, sel_bounds);
  CGFloat v51 = v50;
  CGFloat v53 = v52;
  CGFloat v55 = v54;
  CGFloat v57 = v56;

  v88.origin.x = v51;
  v88.origin.y = v53;
  v88.size.width = v55;
  v88.size.height = v57;
  objc_msgSend(v32, sel_setFrame_, v34, v36, v49, CGRectGetHeight(v88));
  uint64_t v58 = &v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1C09CFC44((uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile], (uint64_t)v79);
  sub_1C09CFC44((uint64_t)v79, (uint64_t)v80);
  if (sub_1C0263AB8((uint64_t)v80) == 1 || !*((void *)v58 + 7))
  {
    uint64_t v74 = sub_1C0B8A558();
    objc_msgSend(v74, sel_setHidden_, 1);

    objc_msgSend(v1, sel_adjustedContentInset);
    double v76 = -v75;
    objc_msgSend(v1, sel_adjustedContentInset);
    objc_msgSend(v1, sel_setContentOffset_, v76, -v77);
    sub_1C0B8BB4C(v1);
    return sub_1C0B8BB4C(v1);
  }
  double v59 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize + 8];
  double v60 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize + 24];
  uint64_t v61 = sub_1C0B8A558();
  objc_msgSend(v61, sel_setHidden_, 0);

  uint64_t v62 = sub_1C0B8A558();
  objc_msgSend(v1, sel_contentOffset);
  double v64 = v63;
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v65 = result;
    objc_msgSend(result, sel_bounds);
    CGFloat v67 = v66;
    CGFloat v69 = v68;
    CGFloat v71 = v70;
    CGFloat v73 = v72;

    v89.origin.x = v67;
    v89.origin.y = v69;
    v89.size.width = v71;
    v89.size.height = v73;
    objc_msgSend(v62, sel_setFrame_, v64, v60 - v59 + -1.0, CGRectGetWidth(v89), v59 + 2.0);

    return sub_1C0B8BB4C(v1);
  }
LABEL_11:
  __break(1u);
  return result;
}

id sub_1C0B8BB4C(void *a1)
{
  id v3 = sub_1C0B8A558();
  double v4 = sub_1C0B8A558();
  objc_msgSend(v4, sel_frame);

  MEMORY[0x1C18C72C0](objc_msgSend(a1, sel_contentOffset));
  objc_msgSend(v3, sel_setFrame_);

  id v5 = sub_1C0B8A454();
  id v6 = sub_1C0B8A454();
  objc_msgSend(v6, sel_frame);
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  id v15 = objc_msgSend(a1, sel_contentOffset);
  double v42 = *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding);
  MEMORY[0x1C18C72C0](v15, v16 + v42, v8, v10, v12, v14);
  objc_msgSend(v5, sel_setFrame_);

  id v17 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel);
  objc_msgSend(v17, sel_frame);
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  id v26 = sub_1C0B8A454();
  objc_msgSend(v26, sel_frame);
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;

  v44.origin.x = v28;
  v44.origin.y = v30;
  v44.size.width = v32;
  v44.size.height = v34;
  CGFloat MaxX = CGRectGetMaxX(v44);
  MEMORY[0x1C18C72C0](v42 + MaxX, v19, v21, v23, v25);
  objc_msgSend(v17, sel_setFrame_);
  double v36 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView);
  objc_msgSend(a1, sel_contentOffset);
  double v38 = v37;
  double v40 = v39;
  objc_msgSend(v36, sel_frame);
  return objc_msgSend(v36, sel_setFrame_, v38, v40);
}

id sub_1C0B8BDA0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile;
  sub_1C09CFC44(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile, (uint64_t)v34);
  sub_1C09CFC44((uint64_t)v34, (uint64_t)v35);
  id result = (id)sub_1C0263AB8((uint64_t)v35);
  if (result != 1 && *(void *)(v1 + 56))
  {
    double v3 = *(double *)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize + 24);
    double v4 = sub_1C0B8A558();
    objc_msgSend(v4, sel_frame);
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    double v13 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView);
    objc_msgSend(v13, sel_contentOffset);
    double v15 = v14;
    objc_msgSend(v13, sel_scrollRectToVisible_animated_, 0, v6, v8, v10, v12);
    objc_msgSend(v13, sel_contentOffset);
    if (v16 >= v15) {
      double v17 = v15;
    }
    else {
      double v17 = v16;
    }
    objc_msgSend(v13, sel_contentOffset);
    objc_msgSend(v13, sel_setContentOffset_, v17);
    objc_msgSend(v13, sel_contentSize);
    double v19 = v18;
    objc_msgSend(v13, sel_visibleSize);
    if (v20 < v19)
    {
      objc_msgSend(v13, sel_contentOffset);
      double v22 = v21;
      objc_msgSend(v13, sel_adjustedContentInset);
      double v24 = v23;
      objc_msgSend(v13, sel_contentSize);
      double v26 = v25;
      objc_msgSend(v13, sel_visibleSize);
      double v28 = v27;
      objc_msgSend(v13, sel_adjustedContentInset);
      double v30 = -v29;
      objc_msgSend(v13, sel_visibleSize);
      double v32 = v3 + v31 * -0.5;
      if (v32 < v30) {
        double v32 = v30;
      }
      double v33 = v24 + v26 - v28;
      if (v32 < v33) {
        double v33 = v32;
      }
      objc_msgSend(v13, sel_setContentOffset_, v22, v33);
    }
    return sub_1C0B8BB4C(v13);
  }
  return result;
}

uint64_t sub_1C0B8BFA0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v2 = result;
    if (result)
    {
LABEL_3:
      if (v2 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v4 = 0;
        do
        {
          if ((v1 & 0xC000000000000001) != 0) {
            id v5 = (id)MEMORY[0x1C18C7CB0](v4, v1);
          }
          else {
            id v5 = *(id *)(v1 + 8 * v4 + 32);
          }
          double v6 = v5;
          ++v4;
          v7[1] = 0;
          v7[2] = 0;
          v7[0] = 0x3FF0000000000000;
          v7[3] = 0x3FF0000000000000;
          v7[4] = 0;
          void v7[5] = 0;
          objc_msgSend(v5, sel_setTransform_, v7);
        }
        while (v2 != v4);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DebugFormatDebuggerSourceViewController()
{
  return self;
}

uint64_t sub_1C0B8C278()
{
  return 0x656372756F53;
}

id sub_1C0B8C28C()
{
  uint64_t v0 = (void *)sub_1C151E5EC();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  return v1;
}

uint64_t sub_1C0B8C2F8()
{
  id v1 = objc_msgSend(*v0, sel_toolbarItems);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

uint64_t sub_1C0B8C374()
{
  id v1 = objc_msgSend(*v0, sel_navigationItem);
  id v2 = objc_msgSend(v1, sel_leftBarButtonItems);

  if (!v2) {
    return 0;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

id sub_1C0B8C408(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  double v27 = &type metadata for DebugFormatDebuggerSourceTheme.Cora;
  double v28 = &off_1F1BF8358;
  double v8 = (_OWORD *)swift_allocObject();
  v26[0] = v8;
  long long v9 = *(_OWORD *)(a3 + 80);
  v8[5] = *(_OWORD *)(a3 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a3 + 96);
  long long v10 = *(_OWORD *)(a3 + 16);
  v8[1] = *(_OWORD *)a3;
  long long v8[2] = v10;
  long long v11 = *(_OWORD *)(a3 + 48);
  v8[3] = *(_OWORD *)(a3 + 32);
  v8[4] = v11;
  id v12 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  sub_1C0B8D01C((void *)a3);
  id v13 = objc_msgSend(v12, sel_init);
  uint64_t v14 = sub_1C0AB3AA0(a1, a2, v7);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    double v16 = (unint64_t *)(v14 + 40);
    do
    {
      unint64_t v24 = *(v16 - 1);
      unint64_t v25 = *v16;
      swift_bridgeObjectRetain_n();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      double v17 = __swift_project_boxed_opaque_existential_1(v26, (uint64_t)v27);
      long long v18 = v17[4];
      long long v19 = v17[6];
      v29[5] = v17[5];
      v29[6] = v19;
      long long v20 = v17[1];
      v29[0] = *v17;
      v29[1] = v20;
      long long v21 = v17[2];
      v29[3] = v17[3];
      v29[4] = v18;
      _OWORD v29[2] = v21;
      id v22 = sub_1C0B8C5A8(v24, v25, (uint64_t)v29);
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_appendAttributedString_, v22);

      v16 += 2;
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return v13;
}

id sub_1C0B8C5A8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  CGRect v83 = &type metadata for DebugFormatDebuggerSourceTheme.Cora;
  CGRect v84 = &off_1F1BF8358;
  double v6 = (_OWORD *)swift_allocObject();
  v82[0] = v6;
  long long v7 = *(_OWORD *)(a3 + 80);
  v6[5] = *(_OWORD *)(a3 + 64);
  v6[6] = v7;
  v6[7] = *(_OWORD *)(a3 + 96);
  long long v8 = *(_OWORD *)(a3 + 16);
  v6[1] = *(_OWORD *)a3;
  long long v6[2] = v8;
  long long v9 = *(_OWORD *)(a3 + 48);
  v6[3] = *(_OWORD *)(a3 + 32);
  v6[4] = v9;
  sub_1C0B8D01C((void *)a3);
  unint64_t v10 = sub_1C0AB4124(a1, a2);
  id v81 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v80 = (void *)*MEMORY[0x1E4FB06F8];
    id v12 = (void *)*MEMORY[0x1E4FB0700];
    id v13 = (unsigned __int8 *)(v10 + 48);
    do
    {
      uint64_t v30 = *((void *)v13 - 2);
      uint64_t v31 = *((void *)v13 - 1);
      int v33 = *v13;
      v13 += 24;
      unsigned __int8 v32 = v33;
      switch(v33)
      {
        case 1:
          CGFloat v43 = __swift_project_boxed_opaque_existential_1(v82, (uint64_t)v83);
          CGRect v44 = (void *)v43[4];
          CGFloat v45 = (void *)v43[5];
          sub_1C0099920();
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1C1527210;
          *(void *)(inited + 32) = v80;
          uint64_t v47 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
          *(void *)(inited + 40) = v45;
          *(void *)(inited + 64) = v47;
          *(void *)(inited + 72) = v12;
          *(void *)(inited + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
          *(void *)(inited + 80) = v44;
          sub_1C0AB4EE4(v30, v31, 1u);
          sub_1C0AB4EE4(v30, v31, 1u);
          id v48 = v44;
          id v49 = v45;
          id v50 = v80;
          id v51 = v12;
          sub_1BFF991DC(inited);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          unint64_t v24 = (void *)sub_1C151E5EC();
          uint64_t v25 = v30;
          uint64_t v26 = v31;
          unsigned __int8 v27 = 1;
          goto LABEL_4;
        case 2:
          double v52 = __swift_project_boxed_opaque_existential_1(v82, (uint64_t)v83);
          CGFloat v53 = (void *)v52[10];
          double v54 = (void *)v52[11];
          sub_1C0099920();
          uint64_t v55 = swift_initStackObject();
          *(_OWORD *)(v55 + 16) = xmmword_1C1527210;
          *(void *)(v55 + 32) = v80;
          uint64_t v56 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
          *(void *)(v55 + 40) = v54;
          *(void *)(v55 + 64) = v56;
          *(void *)(v55 + 72) = v12;
          *(void *)(v55 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
          *(void *)(v55 + 80) = v53;
          sub_1C0AB4EE4(v30, v31, 2u);
          sub_1C0AB4EE4(v30, v31, 2u);
          id v57 = v53;
          id v58 = v54;
          id v59 = v80;
          id v60 = v12;
          sub_1BFF991DC(v55);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          unint64_t v24 = (void *)sub_1C151E5EC();
          uint64_t v25 = v30;
          uint64_t v26 = v31;
          unsigned __int8 v27 = 2;
          goto LABEL_4;
        case 3:
          uint64_t v61 = __swift_project_boxed_opaque_existential_1(v82, (uint64_t)v83);
          uint64_t v62 = (void *)v61[12];
          double v63 = (void *)v61[13];
          sub_1C0099920();
          uint64_t v64 = swift_initStackObject();
          *(_OWORD *)(v64 + 16) = xmmword_1C1527210;
          *(void *)(v64 + 32) = v80;
          uint64_t v65 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
          *(void *)(v64 + 40) = v63;
          *(void *)(v64 + 64) = v65;
          *(void *)(v64 + 72) = v12;
          *(void *)(v64 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
          *(void *)(v64 + 80) = v62;
          sub_1C0AB4EE4(v30, v31, 3u);
          sub_1C0AB4EE4(v30, v31, 3u);
          id v66 = v62;
          id v67 = v63;
          id v68 = v80;
          id v69 = v12;
          sub_1BFF991DC(v64);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          unint64_t v24 = (void *)sub_1C151E5EC();
          uint64_t v25 = v30;
          uint64_t v26 = v31;
          unsigned __int8 v27 = 3;
          goto LABEL_4;
        case 4:
          double v70 = __swift_project_boxed_opaque_existential_1(v82, (uint64_t)v83);
          CGFloat v71 = (void *)v70[6];
          double v72 = (void *)v70[7];
          sub_1C0099920();
          uint64_t v73 = swift_initStackObject();
          *(_OWORD *)(v73 + 16) = xmmword_1C1527210;
          *(void *)(v73 + 32) = v80;
          uint64_t v74 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
          *(void *)(v73 + 40) = v72;
          *(void *)(v73 + 64) = v74;
          *(void *)(v73 + 72) = v12;
          *(void *)(v73 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
          *(void *)(v73 + 80) = v71;
          sub_1C0AB4EE4(v30, v31, 4u);
          sub_1C0AB4EE4(v30, v31, 4u);
          id v75 = v71;
          id v76 = v72;
          id v77 = v80;
          id v78 = v12;
          sub_1BFF991DC(v73);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          unint64_t v24 = (void *)sub_1C151E5EC();
          uint64_t v25 = v30;
          uint64_t v26 = v31;
          unsigned __int8 v27 = 4;
          goto LABEL_4;
        case 5:
          uint64_t v14 = __swift_project_boxed_opaque_existential_1(v82, (uint64_t)v83);
          uint64_t v15 = (void *)v14[8];
          double v16 = (void *)v14[9];
          sub_1C0099920();
          uint64_t v17 = swift_initStackObject();
          *(_OWORD *)(v17 + 16) = xmmword_1C1527210;
          *(void *)(v17 + 32) = v80;
          uint64_t v18 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
          *(void *)(v17 + 40) = v16;
          *(void *)(v17 + 64) = v18;
          *(void *)(v17 + 72) = v12;
          *(void *)(v17 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
          *(void *)(v17 + 80) = v15;
          sub_1C0AB4EE4(v30, v31, 5u);
          sub_1C0AB4EE4(v30, v31, 5u);
          id v19 = v15;
          id v20 = v16;
          id v21 = v80;
          id v22 = v12;
          sub_1BFF991DC(v17);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          unint64_t v24 = (void *)sub_1C151E5EC();
          uint64_t v25 = v30;
          uint64_t v26 = v31;
          unsigned __int8 v27 = 5;
LABEL_4:
          sub_1C0AB4EFC(v25, v26, v27);
          type metadata accessor for Key(0);
          sub_1BFF9A290();
          break;
        default:
          CGFloat v34 = __swift_project_boxed_opaque_existential_1(v82, (uint64_t)v83);
          double v36 = (void *)v34[2];
          double v35 = (void *)v34[3];
          sub_1C0099920();
          uint64_t v37 = swift_initStackObject();
          *(_OWORD *)(v37 + 16) = xmmword_1C1527210;
          *(void *)(v37 + 32) = v80;
          uint64_t v38 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
          *(void *)(v37 + 40) = v35;
          *(void *)(v37 + 64) = v38;
          *(void *)(v37 + 72) = v12;
          *(void *)(v37 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
          *(void *)(v37 + 80) = v36;
          sub_1C0AB4EE4(v30, v31, 0);
          sub_1C0AB4EE4(v30, v31, 0);
          id v39 = v36;
          id v40 = v35;
          id v41 = v80;
          id v42 = v12;
          sub_1BFF991DC(v37);
          id v23 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          unint64_t v24 = (void *)sub_1C151E5EC();
          sub_1C0AB4EFC(v30, v31, 0);
          type metadata accessor for Key(0);
          sub_1BFF9A290();
          break;
      }
      double v28 = (void *)sub_1C151E32C();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v28);

      objc_msgSend(v81, sel_appendAttributedString_, v29);
      sub_1C0AB4EFC(v30, v31, v32);

      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  return v81;
}

id sub_1C0B8CD14(uint64_t a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = (uint64_t)&v2[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1C017F2B4(v16);
  sub_1C09CFC44((uint64_t)v16, v5);
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceMetrics] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1DD8]);
  long long v8 = v2;
  *(void *)&v2[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel;
  *(void *)&v8[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView;
  *(void *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding] = 0x4020000000000000;
  id v12 = &v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  id v13 = &v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView] = 0;
  *(void *)&v8[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_editor] = a1;
  swift_retain();

  v15.receiver = v8;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1C0B8CEEC()
{
  return sub_1C0B8BFA0(*(uint64_t **)(v0 + 16));
}

void *sub_1C0B8CEF4(void *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  uint64_t v4 = a1[13];
  uint64_t v5 = a1[14];
  uint64_t v6 = (void *)a1[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C09C87E4(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1C0B8CF84()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void *sub_1C0B8D01C(void *a1)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a1[5];
  uint64_t v6 = (void *)a1[6];
  id v7 = (void *)a1[7];
  long long v8 = (void *)a1[8];
  uint64_t v9 = (void *)a1[9];
  uint64_t v10 = (void *)a1[10];
  unint64_t v24 = (void *)a1[11];
  uint64_t v25 = (void *)a1[12];
  uint64_t v26 = (void *)a1[13];
  swift_bridgeObjectRetain();
  id v11 = v2;
  id v12 = v3;
  id v13 = v4;
  id v14 = v5;
  id v15 = v6;
  id v16 = v7;
  id v17 = v8;
  id v18 = v9;
  id v19 = v10;
  id v20 = v24;
  id v21 = v25;
  id v22 = v26;
  return a1;
}

uint64_t sub_1C0B8D0D0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0B8D108(uint64_t a1, uint64_t a2)
{
  sub_1C0B8B320(a1, a2, v2);
}

uint64_t sub_1C0B8D110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0B8D174(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugFormatDebuggerSourceHighlight();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0B8D1D0()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceFile];
  sub_1C017F2B4(v8);
  sub_1C09CFC44((uint64_t)v8, v1);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceMetrics] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_textView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1DD8]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_scrollView;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___highlightView] = 0;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineNumberLabel;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeView;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_edgeViewPadding] = 0x4020000000000000;
  uint64_t v6 = &v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_lineAndHighlightSize];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  id v7 = &v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___charSize];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController____lazy_storage___breakpointView] = 0;

  sub_1C152040C();
  __break(1u);
}

void *assignWithCopy for CoverChannelViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CoverChannelViewLayout(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupTrackerEntity()
{
  return &type metadata for FeedGroupTrackerEntity;
}

uint64_t sub_1C0B8D4BC()
{
  if (qword_1EA194410 != -1) {
    swift_once();
  }
  qword_1EB93C240 = qword_1EA198ED8;
  *(void *)algn_1EB93C248 = unk_1EA198EE0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B8D528(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0B8EF4C(0, &qword_1EA1A4278, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B8EE70();
  sub_1C1520F0C();
  uint64_t v12 = *v3;
  HIBYTE(v11) = 0;
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  sub_1C0304B0C((unint64_t *)&qword_1EA1999A0);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v12 = v3[1];
    HIBYTE(v11) = 1;
    sub_1BFD76DBC(0, &qword_1EB85AC38, MEMORY[0x1E4F27928], sub_1C03029F4, MEMORY[0x1E4FAA610]);
    sub_1C0B8EFB0((unint64_t *)&qword_1EA1999B0);
    sub_1C152080C();
    uint64_t v12 = v3[2];
    HIBYTE(v11) = 2;
    sub_1C152080C();
    uint64_t v12 = v3[3];
    HIBYTE(v11) = 3;
    sub_1BFD77008(0, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
    sub_1C0B8F038(&qword_1EA1999A8);
    sub_1C152080C();
    uint64_t v12 = v3[4];
    HIBYTE(v11) = 4;
    sub_1BFD76DBC(0, &qword_1EB863FF8, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8, MEMORY[0x1E4FAA610]);
    sub_1C0B8EEC4((unint64_t *)&qword_1EA1999C8);
    sub_1C152080C();
    uint64_t v12 = v3[5];
    HIBYTE(v11) = 5;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0B8D910()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657461446E656573;
      break;
    case 2:
      uint64_t result = 1684957547;
      break;
    case 3:
      uint64_t result = 0x6449676174;
      break;
    case 4:
      uint64_t result = 0x7364496D657469;
      break;
    case 5:
      uint64_t result = 0x496E6F6973736573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0B8D9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0B901AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B8D9EC(uint64_t a1)
{
  unint64_t v2 = sub_1C0B8EE70();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B8DA28(uint64_t a1)
{
  unint64_t v2 = sub_1C0B8EE70();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0B8DA64()
{
  if (qword_1EB85E9D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EB93C240;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C0B8DACC(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98D48();
  return MEMORY[0x1F415D4C8](a1, v2);
}

uint64_t sub_1C0B8DB18(uint64_t a1)
{
  unint64_t v2 = sub_1BFD98D48();
  return MEMORY[0x1F415D4D8](a1, v2);
}

uint64_t sub_1C0B8DB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98D48();
  return MEMORY[0x1F415D4D0](a1, a2, a3, v6);
}

double sub_1C0B8DBC8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0B8DFC8(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C0B8DC0C(void *a1)
{
  return sub_1C0B8D528(a1);
}

uint64_t sub_1C0B8DC24(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1BFD98D48();
  return MEMORY[0x1F415D4F0](a1, a2, v4);
}

uint64_t sub_1C0B8DC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BFD98D48();
  return MEMORY[0x1F415D4E8](a1, a2, a3, v6);
}

uint64_t sub_1C0B8DCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1BFD98D48();
  return MEMORY[0x1F415D4E0](a1, a2, a3, a4, v8);
}

unint64_t sub_1C0B8DD30()
{
  unint64_t result = qword_1EA1A4260;
  if (!qword_1EA1A4260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4260);
  }
  return result;
}

uint64_t sub_1C0B8DD84()
{
  return sub_1C0B8DD90();
}

uint64_t sub_1C0B8DD90()
{
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  if (v3 >= 2)
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    if (v1)
    {
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151997C();
      sub_1C1519BFC();
      swift_release();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      sub_1BFEF2F40(v2, v3);
      goto LABEL_8;
    }
  }
  else
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151997C();
    sub_1C1519BFC();
    uint64_t result = swift_release();
    if (v1)
    {
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151997C();
      sub_1C1519BFC();
      swift_release();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_8:
      sub_1C151E80C();
      return 0x3D646E696B7BLL;
    }
    __break(1u);
    __break(1u);
  }
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_1C0B8DFC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  CGRect v89 = a1;
  uint64_t v64 = a2;
  sub_1C0B8EF4C(0, &qword_1EA1A4268, MEMORY[0x1E4FBBDC0]);
  uint64_t v67 = v2;
  uint64_t v65 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v81 = (char *)&v64 - v3;
  uint64_t v79 = sub_1BFD77314;
  id v78 = sub_1BFD773F8;
  sub_1BFD76F08(0, &qword_1EB864078, &qword_1EB864070, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v80 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v77 = (char *)&v64 - v7;
  id v75 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFD771FC(0, (unint64_t *)&qword_1EB85AC98, (uint64_t)&qword_1EB85AC90, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD77008);
  MEMORY[0x1F4188790](v8 - 8);
  id v76 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v74 = (char *)&v64 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD76F08(0, &qword_1EB85AC88, &qword_1EB85AC80, MEMORY[0x1E4F27928], sub_1C03029F4);
  MEMORY[0x1F4188790](v13 - 8);
  CGRect v83 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v64 - v16;
  id v18 = (uint64_t (*)(void, void, void))MEMORY[0x1E4FAA6B0];
  sub_1BFD771FC(0, (unint64_t *)&qword_1EB85ACA8, (uint64_t)&qword_1EB85ACA0, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD76E3C);
  MEMORY[0x1F4188790](v19 - 8);
  id v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (char *)&v64 - v23;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, v18);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  double v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  CGRect v87 = v28;
  uint64_t v88 = v27 + 56;
  CGRect v85 = v24;
  v28(v24, 1, 1, v25);
  CGRect v86 = v21;
  v28(v21, 1, 1, v26);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  uint64_t v69 = v29;
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v84 = sub_1C151996C();
  uint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  uint64_t v30 = v12;
  sub_1BFD76DBC(0, &qword_1EB85AC80, v12, sub_1C03029F4, MEMORY[0x1E4FAA6B0]);
  uint64_t v32 = v31;
  int v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
  v33(v17, 1, 1, v31);
  v33(v83, 1, 1, v32);
  double v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFD76DBC(0, &qword_1EB85ACD8, v30, sub_1C03029F4, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  CGFloat v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFD76DBC(0, &qword_1EB85AC38, v30, sub_1C03029F4, MEMORY[0x1E4FAA610]);
  uint64_t v66 = v34;
  swift_allocObject();
  uint64_t v68 = sub_1C151996C();
  uint64_t v70 = v26;
  double v35 = v87;
  v87(v85, 1, 1, v26);
  v35(v86, 1, 1, v26);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  CGRect v83 = (char *)sub_1C151996C();
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85AC90, v75);
  uint64_t v37 = v36;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  v38(v74, 1, 1, v36);
  v38(v76, 1, 1, v37);
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85ACE8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
  id v75 = v39;
  swift_allocObject();
  id v76 = (char *)sub_1C151996C();
  id v41 = v78;
  id v40 = (uint64_t (*)(uint64_t))v79;
  sub_1BFD76DBC(0, &qword_1EB864070, (uint64_t (*)(uint64_t))v79, v78, v73);
  uint64_t v43 = v42;
  CGRect v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v44(v77, 1, 1, v42);
  v44(v80, 1, 1, v43);
  sub_1BFD76DBC(0, &qword_1EB8640D0, v40, v41, v72);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76DBC(0, &qword_1EB863FF8, v40, v41, v71);
  swift_allocObject();
  uint64_t v80 = (char *)sub_1C151996C();
  uint64_t v45 = v70;
  unint64_t v46 = v87;
  v87(v85, 1, 1, v70);
  v46(v86, 1, 1, v45);
  swift_allocObject();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v47 = sub_1C151996C();
  __swift_project_boxed_opaque_existential_1(v89, v89[3]);
  sub_1C0B8EE70();
  uint64_t v48 = v82;
  id v49 = v81;
  sub_1C1520EBC();
  if (v48)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v88 = v47;
    char v90 = 0;
    sub_1C0304B0C((unint64_t *)&qword_1EA199968);
    uint64_t v50 = v67;
    sub_1C15206EC();
    swift_release();
    uint64_t v51 = (uint64_t)v91;
    char v90 = 1;
    sub_1C0B8EFB0((unint64_t *)&qword_1EA199978);
    swift_retain();
    sub_1C15206EC();
    uint64_t v84 = v51;
    swift_release();
    double v52 = v91;
    char v90 = 2;
    swift_retain();
    sub_1C15206EC();
    swift_release();
    CGFloat v53 = v91;
    char v90 = 3;
    sub_1C0B8F038(&qword_1EA199970);
    swift_retain();
    sub_1C15206EC();
    CGRect v83 = v53;
    swift_release();
    double v54 = v91;
    char v90 = 4;
    sub_1C0B8EEC4((unint64_t *)&qword_1EA199990);
    swift_retain();
    sub_1C15206EC();
    swift_release();
    uint64_t v55 = v91;
    char v90 = 5;
    swift_retain();
    sub_1C15206EC();
    uint64_t v56 = (void (**)(char *, uint64_t))(v65 + 8);
    swift_release();
    (*v56)(v49, v50);
    id v57 = v91;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
    swift_release();
    swift_release();
    id v58 = v54;
    swift_release();
    id v59 = v55;
    id v60 = v83;
    swift_release();
    swift_release();
    uint64_t v61 = v84;
    uint64_t result = swift_release();
    double v63 = v64;
    *uint64_t v64 = v61;
    v63[1] = (uint64_t)v52;
    v63[2] = (uint64_t)v60;
    v63[3] = (uint64_t)v58;
    v63[4] = (uint64_t)v59;
    v63[5] = (uint64_t)v57;
  }
  return result;
}

unint64_t sub_1C0B8EE70()
{
  unint64_t result = qword_1EA1A4270;
  if (!qword_1EA1A4270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4270);
  }
  return result;
}

uint64_t sub_1C0B8EEC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFD76DBC(255, &qword_1EB863FF8, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8, MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0B8EF4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0B8EE70();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupTrackerEntity.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0B8EFB0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFD76DBC(255, &qword_1EB85AC38, MEMORY[0x1E4F27928], sub_1C03029F4, MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B8F038(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFD77008(255, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B8F098@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v92 = a3;
  id v93 = a1;
  CGRect v83 = a4;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v82 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1BFD77314;
  uint64_t v79 = sub_1BFD773F8;
  sub_1BFD76F08(0, &qword_1EB864078, &qword_1EB864070, (uint64_t (*)(uint64_t))sub_1BFD77314, sub_1BFD773F8);
  MEMORY[0x1F4188790](v6 - 8);
  id v81 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v77 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4FAA6B0];
  id v78 = (char *)&v71 - v9;
  sub_1BFD771FC(0, (unint64_t *)&qword_1EB85AC98, (uint64_t)&qword_1EB85AC90, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD77008);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v84 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v76 = (char *)&v71 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1BFD76F08(0, &qword_1EB85AC88, &qword_1EB85AC80, MEMORY[0x1E4F27928], sub_1C03029F4);
  MEMORY[0x1F4188790](v15 - 8);
  id v75 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v71 - v18;
  uint64_t v20 = (uint64_t (*)(void, void, void))MEMORY[0x1E4FAA6B0];
  sub_1BFD771FC(0, (unint64_t *)&qword_1EB85ACA8, (uint64_t)&qword_1EB85ACA0, MEMORY[0x1E4FAA6B0], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFD76E3C);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v71 - v25;
  sub_1BFD76E3C(0, &qword_1EB85ACA0, v20);
  uint64_t v28 = v27;
  uint64_t v87 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v88 = v30;
  uint64_t v89 = v29 + 56;
  CGRect v85 = v26;
  v30(v26, 1, 1, v27);
  CGRect v86 = v23;
  v30(v23, 1, 1, v28);
  sub_1BFD76E3C(0, &qword_1EB85ACE0, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  sub_1C1519BDC();
  sub_1BFD76E3C(0, &qword_1EB85AC40, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v90 = sub_1C151996C();
  uint64_t v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B0];
  sub_1BFD76DBC(0, &qword_1EB85AC80, v14, sub_1C03029F4, MEMORY[0x1E4FAA6B0]);
  uint64_t v32 = v31;
  int v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
  v33(v19, 1, 1, v31);
  v33(v75, 1, 1, v32);
  uint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA6B8];
  sub_1BFD76DBC(0, &qword_1EB85ACD8, v14, sub_1C03029F4, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  double v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAA610];
  sub_1BFD76DBC(0, &qword_1EB85AC38, v14, sub_1C03029F4, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  id v75 = (char *)sub_1C151996C();
  uint64_t v34 = v87;
  double v35 = v88;
  v88(v85, 1, 1, v87);
  v35(v86, 1, 1, v34);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v71 = sub_1C151996C();
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85AC90, v77);
  uint64_t v37 = v36;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  v38(v76, 1, 1, v36);
  v38(v84, 1, 1, v37);
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85ACE8, MEMORY[0x1E4FAA6B8]);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFD77008(0, (unint64_t *)&qword_1EB85AC48, MEMORY[0x1E4FAA610]);
  swift_allocObject();
  uint64_t v39 = sub_1C151996C();
  id v41 = v79;
  id v40 = (uint64_t (*)(uint64_t))v80;
  sub_1BFD76DBC(0, &qword_1EB864070, (uint64_t (*)(uint64_t))v80, v79, v74);
  uint64_t v43 = v42;
  CGRect v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v44(v78, 1, 1, v42);
  v44(v81, 1, 1, v43);
  sub_1BFD76DBC(0, &qword_1EB8640D0, v40, v41, v73);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  sub_1BFD76DBC(0, &qword_1EB863FF8, v40, v41, v72);
  swift_allocObject();
  uint64_t v45 = sub_1C151996C();
  uint64_t v46 = v87;
  uint64_t v47 = v88;
  v88(v85, 1, 1, v87);
  v47(v86, 1, 1, v46);
  swift_allocObject();
  swift_retain();
  sub_1C1519BDC();
  swift_allocObject();
  uint64_t v48 = sub_1C151996C();
  swift_retain();
  id v49 = v75;
  swift_retain();
  uint64_t v50 = v71;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = v93[1];
  double v52 = v93;
  uint64_t v96 = *v93;
  uint64_t v97 = v51;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v84 = (char *)v39;
  swift_retain();
  swift_retain();
  uint64_t v88 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v48;
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v53 = type metadata accessor for FeedCursorTrackerGroup();
  uint64_t v54 = *(int *)(v53 + 40);
  uint64_t v89 = v53;
  uint64_t v55 = (char *)v52 + v54;
  uint64_t v56 = sub_1C151631C();
  uint64_t v57 = *(void *)(v56 - 8);
  id v58 = v82;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v82, v55, v56);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  uint64_t v59 = v50;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C151EACC();
  uint64_t v94 = v96;
  uint64_t v95 = v97;
  sub_1C1519C0C();
  swift_release();
  uint64_t v60 = v90;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v61 = v84;
  swift_retain();
  swift_retain();
  uint64_t v62 = v88;
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v63 = v89;
  uint64_t v64 = v93;
  uint64_t v65 = (uint64_t *)((char *)v93 + *(int *)(v89 + 44));
  uint64_t v66 = v65[1];
  uint64_t v96 = *v65;
  uint64_t v97 = v66;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v96 = *(uint64_t *)((char *)v64 + *(int *)(v63 + 48));
  sub_1BFD77314();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v96 = sub_1C1519D4C();
  sub_1C1519C0C();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151997C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v67 = (uint64_t *)((char *)v64 + *(int *)(v89 + 52));
  uint64_t v68 = v67[1];
  uint64_t v96 = *v67;
  uint64_t v97 = v68;
  swift_bridgeObjectRetain();
  sub_1C1519C0C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v70 = v83;
  *CGRect v83 = v60;
  v70[1] = (uint64_t)v49;
  v70[2] = v59;
  v70[3] = (uint64_t)v61;
  v70[4] = v45;
  v70[5] = (uint64_t)v62;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupTrackerEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B9006CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupTrackerEntity.CodingKeys()
{
  return &type metadata for FeedGroupTrackerEntity.CodingKeys;
}

unint64_t sub_1C0B900A8()
{
  unint64_t result = qword_1EA1A4280;
  if (!qword_1EA1A4280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4280);
  }
  return result;
}

unint64_t sub_1C0B90100()
{
  unint64_t result = qword_1EA1A4288;
  if (!qword_1EA1A4288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4288);
  }
  return result;
}

unint64_t sub_1C0B90158()
{
  unint64_t result = qword_1EA1A4290;
  if (!qword_1EA1A4290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4290);
  }
  return result;
}

uint64_t sub_1C0B901AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657461446E656573 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449676174 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7364496D657469 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

char *sub_1C0B9040C(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a2)
  {
    uint64_t v9 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v35.receiver = v8;
  v35.super_class = ObjectType;
  uint64_t v10 = (char *)objc_msgSendSuper2(&v35, sel_initWithReuseIdentifier_, v9);

  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label;
  uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label];
  uint64_t v13 = v10;
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v14 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v14, sel_addSubview_, v12);

  uint64_t v15 = self;
  sub_1BFE4DBE0();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C15418C0;
  id v17 = objc_msgSend(*(id *)&v10[v11], sel_topAnchor);
  id v18 = objc_msgSend(v13, sel_contentView);
  id v19 = objc_msgSend(v18, sel_topAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, 16.0);
  *(void *)(v16 + 32) = v20;
  id v21 = objc_msgSend(*(id *)&v10[v11], sel_leadingAnchor);
  id v22 = objc_msgSend(v13, sel_contentView);
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 16.0);
  *(void *)(v16 + 40) = v24;
  id v25 = objc_msgSend(*(id *)&v10[v11], sel_trailingAnchor);
  id v26 = objc_msgSend(v13, sel_contentView);
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -16.0);
  *(void *)(v16 + 48) = v28;
  id v29 = objc_msgSend(*(id *)&v10[v11], sel_bottomAnchor);
  id v30 = objc_msgSend(v13, sel_contentView);
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, -16.0);
  *(void *)(v16 + 56) = v32;
  sub_1C151EBEC();
  sub_1C03767D0();
  int v33 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v33);

  return v13;
}

uint64_t type metadata accessor for DebugFormatMarkdownHeaderFooterView()
{
  return self;
}

uint64_t sub_1C0B908E4()
{
  return sub_1C151911C();
}

uint64_t sub_1C0B9097C(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_1C0B909B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B909EC()
{
  return sub_1C0B908E4();
}

uint64_t sub_1C0B90A0C()
{
  return 8;
}

void *sub_1C0B90A18(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0B90A24()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0B90A5C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0B90AA4()
{
  if (!qword_1EA1AC080)
  {
    sub_1C151829C();
    sub_1BFEBC4B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AC080);
    }
  }
}

uint64_t sub_1C0B90B18(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    uint64_t v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a2[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v12 = type metadata accessor for FormatDerivedDataFile();
    uint64_t v13 = *(void *)(v12 - 8);
    id v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v18 = *v11;
      uint64_t v19 = v11[1];
      unsigned __int8 v20 = *((unsigned char *)v11 + 16);
      sub_1C024FAC0(*v11, v19, v20);
      *uint64_t v10 = v18;
      v10[1] = v19;
      *((unsigned char *)v10 + 16) = v20;
      unsigned int v21 = *((unsigned __int8 *)v11 + 40);
      if (v21 <= 0xFD)
      {
        uint64_t v22 = v11[3];
        unint64_t v23 = v11[4];
        sub_1C00F5ACC(v22, v23, *((unsigned char *)v11 + 40));
        v10[3] = v22;
        void v10[4] = v23;
        *((unsigned char *)v10 + 40) = v21;
      }
      else
      {
        *(_OWORD *)(v10 + 3) = *(_OWORD *)(v11 + 3);
        *((unsigned char *)v10 + 40) = *((unsigned char *)v11 + 40);
      }
      uint64_t v24 = v11[7];
      v10[6] = v11[6];
      v10[7] = v24;
      unsigned int v25 = *((unsigned __int16 *)v11 + 54);
      uint64_t v26 = *((unsigned int *)v11 + 26);
      swift_bridgeObjectRetain();
      if (v25 >> 9 <= 0x7EuLL)
      {
        unint64_t v28 = v26 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v25 << 32);
        uint64_t v29 = v11[8];
        uint64_t v30 = v11[9];
        uint64_t v31 = v11[11];
        uint64_t v218 = v11[10];
        uint64_t v216 = v11[12];
        sub_1C017F524(v29, v30, v218, v31, v216, v28);
        v10[8] = v29;
        v10[9] = v30;
        v10[10] = v218;
        v10[11] = v31;
        v10[12] = v216;
        *((_WORD *)v10 + 54) = WORD2(v28);
        *((_DWORD *)v10 + 26) = v28;
      }
      else
      {
        long long v27 = *((_OWORD *)v11 + 5);
        *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
        *((_OWORD *)v10 + 5) = v27;
        *(_OWORD *)((char *)v10 + 94) = *(_OWORD *)((char *)v11 + 94);
      }
      uint64_t v32 = v11[15];
      v10[14] = v11[14];
      v10[15] = v32;
      uint64_t v33 = *(int *)(v12 + 32);
      v219 = (char *)v10 + v33;
      v217 = (char *)v11 + v33;
      uint64_t v34 = sub_1C151928C();
      objc_super v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v219, v217, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v36 = a3[7];
    uint64_t v17 = a1;
    uint64_t v37 = a1 + v36;
    uint64_t v38 = (uint64_t)a2 + v36;
    uint64_t v39 = sub_1C151928C();
    id v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
    v40(v37, v38, v39);
    uint64_t v41 = type metadata accessor for DebugFormatCacheFileMetadata();
    *(void *)(v37 + *(int *)(v41 + 20)) = *(void *)(v38 + *(int *)(v41 + 20));
    uint64_t v42 = a3[8];
    uint64_t v43 = a1 + v42;
    uint64_t v44 = (uint64_t)a2 + v42;
    type metadata accessor for FormatFile();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v72 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v72;
        uint64_t v73 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v73;
        uint64_t v74 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v74;
        uint64_t v75 = *(void *)(v44 + 56);
        *(void *)(v43 + 48) = *(void *)(v44 + 48);
        *(void *)(v43 + 56) = v75;
        uint64_t v76 = *(void *)(v44 + 64);
        *(unsigned char *)(v43 + 72) = *(unsigned char *)(v44 + 72);
        *(void *)(v43 + 64) = v76;
        uint64_t v77 = *(void *)(v44 + 88);
        *(void *)(v43 + 80) = *(void *)(v44 + 80);
        *(void *)(v43 + 88) = v77;
        __dsta = (uint64_t *)(v44 + 96);
        unsigned __int8 v78 = *(unsigned char *)(v44 + 106);
        int v79 = *(unsigned __int16 *)(v44 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v78 == 255)
        {
          *(void *)(v43 + 96) = *__dsta;
          *(_DWORD *)(v43 + 103) = *(_DWORD *)(v44 + 103);
        }
        else
        {
          uint64_t v152 = v79 & 0xFF00FFFF | (v78 << 16);
          uint64_t v153 = *__dsta;
          sub_1BFFA742C(*__dsta, v152, SBYTE2(v152), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(v43 + 96) = v153;
          *(_WORD *)(v43 + 104) = v152;
          *(unsigned char *)(v43 + 106) = BYTE2(v152);
        }
        goto LABEL_43;
      case 2u:
        uint64_t v80 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v80;
        uint64_t v81 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v81;
        uint64_t v82 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v82;
        *(unsigned char *)(v43 + 48) = *(unsigned char *)(v44 + 48);
        *(void *)(v43 + 56) = *(void *)(v44 + 56);
        CGRect v83 = (_OWORD *)(v44 + 64);
        unint64_t v84 = *(void *)(v44 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v84 <= 2)
        {
          *(_OWORD *)(v43 + 64) = *v83;
        }
        else
        {
          *(unsigned char *)(v43 + 64) = *(unsigned char *)v83;
          *(void *)(v43 + 72) = v84;
          swift_bridgeObjectRetain();
        }
        uint64_t v157 = *(void *)(v44 + 88);
        *(void *)(v43 + 80) = *(void *)(v44 + 80);
        *(void *)(v43 + 88) = v157;
        uint64_t v158 = *(void *)(v44 + 104);
        *(void *)(v43 + 96) = *(void *)(v44 + 96);
        *(void *)(v43 + 104) = v158;
        uint64_t v159 = *(void *)(v44 + 120);
        *(void *)(v43 + 112) = *(void *)(v44 + 112);
        *(void *)(v43 + 120) = v159;
        *(unsigned char *)(v43 + 128) = *(unsigned char *)(v44 + 128);
        *(void *)(v43 + 136) = *(void *)(v44 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_45;
      case 3u:
        uint64_t v85 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v85;
        uint64_t v86 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v86;
        uint64_t v87 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v87;
        uint64_t v88 = (void *)(v44 + 48);
        unint64_t v89 = *(void *)(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89 >= 0xF)
        {
          *(void *)(v43 + 48) = *v88;
          *(void *)(v43 + 56) = v89;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v43 + 48) = *(_OWORD *)v88;
        }
        uint64_t v154 = *(void *)(v44 + 72);
        *(void *)(v43 + 64) = *(void *)(v44 + 64);
        *(void *)(v43 + 72) = v154;
        uint64_t v155 = *(void *)(v44 + 88);
        *(void *)(v43 + 80) = *(void *)(v44 + 80);
        *(void *)(v43 + 88) = v155;
        uint64_t v156 = *(void *)(v44 + 104);
        *(void *)(v43 + 96) = *(void *)(v44 + 96);
        *(void *)(v43 + 104) = v156;
        *(void *)(v43 + 112) = *(void *)(v44 + 112);
        *(unsigned char *)(v43 + 120) = *(unsigned char *)(v44 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
LABEL_45:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 4u:
        uint64_t v90 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v90;
        uint64_t v91 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v91;
        uint64_t v92 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v92;
        *(void *)(v43 + 48) = *(void *)(v44 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 5u:
        uint64_t v127 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v127;
        uint64_t v128 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v128;
        uint64_t v129 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v129;
        *(_WORD *)(v43 + 48) = *(_WORD *)(v44 + 48);
        uint64_t v130 = *(void *)(v44 + 64);
        *(void *)(v43 + 56) = *(void *)(v44 + 56);
        *(void *)(v43 + 64) = v130;
        uint64_t v131 = *(void *)(v44 + 80);
        *(void *)(v43 + 72) = *(void *)(v44 + 72);
        *(void *)(v43 + 80) = v131;
        uint64_t v132 = *(void *)(v44 + 96);
        *(void *)(v43 + 88) = *(void *)(v44 + 88);
        *(void *)(v43 + 96) = v132;
        uint64_t v133 = *(void *)(v44 + 112);
        *(void *)(v43 + 104) = *(void *)(v44 + 104);
        *(void *)(v43 + 112) = v133;
        uint64_t v134 = *(void *)(v44 + 128);
        *(void *)(v43 + 120) = *(void *)(v44 + 120);
        *(void *)(v43 + 128) = v134;
        uint64_t v135 = *(void *)(v44 + 144);
        *(void *)(v43 + 136) = *(void *)(v44 + 136);
        *(void *)(v43 + 144) = v135;
        *(void *)(v43 + 152) = *(void *)(v44 + 152);
        v209 = (unsigned char *)(v44 + 160);
        unint64_t v201 = *(void *)(v44 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v201 >= 2)
        {
          uint64_t v137 = (_OWORD *)(v43 + 160);
          if (v201 != 2)
          {
            *(unsigned char *)(v43 + 160) = *v209;
            *(void *)(v43 + 168) = v201;
            swift_bridgeObjectRetain();
            goto LABEL_46;
          }
          long long v136 = *(_OWORD *)v209;
        }
        else
        {
          long long v136 = *(_OWORD *)v209;
          uint64_t v137 = (_OWORD *)(v43 + 160);
        }
        *uint64_t v137 = v136;
LABEL_46:
        v199 = (int *)type metadata accessor for FormatPackage();
        uint64_t v160 = v199[23];
        int v161 = (void *)(v43 + v160);
        int v162 = (char *)(v44 + v160);
        uint64_t v163 = *(void *)(v44 + v160 + 8);
        *int v161 = *(void *)(v44 + v160);
        v161[1] = v163;
        v210 = (int *)type metadata accessor for FormatCompilerOptions(0);
        __dstc = v162;
        uint64_t v164 = v210[6];
        v197 = v161;
        uint64_t v165 = (char *)v161 + v164;
        uint64_t v166 = &v162[v164];
        uint64_t v167 = *(void *)&v162[v164 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v167 == 1)
        {
          long long v168 = *((_OWORD *)v166 + 1);
          *(_OWORD *)uint64_t v165 = *(_OWORD *)v166;
          *((_OWORD *)v165 + 1) = v168;
          *((_OWORD *)v165 + 2) = *((_OWORD *)v166 + 2);
        }
        else
        {
          *(void *)uint64_t v165 = *(void *)v166;
          *((void *)v165 + 1) = v167;
          uint64_t v169 = *((void *)v166 + 3);
          *((void *)v165 + 2) = *((void *)v166 + 2);
          *((void *)v165 + 3) = v169;
          uint64_t v170 = *((void *)v166 + 5);
          *((void *)v165 + 4) = *((void *)v166 + 4);
          *((void *)v165 + 5) = v170;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v171 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v172 = &v165[v171];
        uint64_t v173 = &v166[v171];
        uint64_t v174 = sub_1C1518CDC();
        uint64_t v175 = *(void *)(v174 - 8);
        v202 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
        uint64_t v196 = v175;
        if (v202(v173, 1, v174))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v172, v173, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v172, v173, v174);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
        }
        uint64_t v177 = v210[7];
        int v178 = (char *)v197 + v177;
        int v179 = &__dstc[v177];
        if (v202(&__dstc[v177], 1, v174))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v178, v179, v174);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v178, 0, 1, v174);
        }
        *(void *)((char *)v197 + v210[8]) = *(void *)&__dstc[v210[8]];
        uint64_t v181 = v199[24];
        uint64_t v182 = v43 + v181;
        uint64_t v183 = v44 + v181;
        swift_bridgeObjectRetain();
        v40(v182, v183, v39);
        uint64_t v184 = v199[25];
        v185 = (void *)(v43 + v184);
        v186 = (const void *)(v44 + v184);
        uint64_t v17 = a1;
        if (v202((char *)(v44 + v184), 1, v174))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v196 + 16))(v185, v186, v174);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v196 + 56))(v185, 0, 1, v174);
        }
LABEL_58:
        swift_storeEnumTagMultiPayload();
        sub_1C0B91E18();
        uint64_t v189 = v188;
        uint64_t v190 = *(int *)(v188 + 44);
        v191 = (uint64_t *)(v43 + v190);
        v192 = (uint64_t *)(v44 + v190);
        uint64_t v193 = *v192;
        unint64_t v194 = v192[1];
        sub_1BFE95820(*v192, v194);
        uint64_t *v191 = v193;
        v191[1] = v194;
        *(void *)(v43 + *(int *)(v189 + 48)) = *(void *)(v44 + *(int *)(v189 + 48));
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v138 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v138;
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 7u:
        *(void *)uint64_t v43 = *(void *)v44;
        swift_retain();
        goto LABEL_58;
      case 8u:
        uint64_t v139 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v139;
        uint64_t v140 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v140;
        uint64_t v141 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v141;
        uint64_t v142 = *(void *)(v44 + 56);
        *(void *)(v43 + 48) = *(void *)(v44 + 48);
        *(void *)(v43 + 56) = v142;
        *(void *)(v43 + 64) = *(void *)(v44 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 9u:
        uint64_t v93 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v93;
        uint64_t v94 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v94;
        uint64_t v95 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v95;
        uint64_t v96 = *(void *)(v44 + 56);
        *(void *)(v43 + 48) = *(void *)(v44 + 48);
        *(void *)(v43 + 56) = v96;
        uint64_t v97 = *(void *)(v44 + 72);
        *(void *)(v43 + 64) = *(void *)(v44 + 64);
        *(void *)(v43 + 72) = v97;
        *(unsigned char *)(v43 + 80) = *(unsigned char *)(v44 + 80);
        uint64_t v98 = *(void *)(v44 + 96);
        *(void *)(v43 + 88) = *(void *)(v44 + 88);
        *(void *)(v43 + 96) = v98;
        *(unsigned char *)(v43 + 104) = *(unsigned char *)(v44 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v17 = a1;
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 0xAu:
        uint64_t v143 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v143;
        uint64_t v144 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v144;
        uint64_t v145 = *(void *)(v44 + 32);
        uint64_t v146 = *(void *)(v44 + 40);
        uint64_t v147 = *(void *)(v44 + 48);
        uint64_t v148 = *(void *)(v44 + 56);
        uint64_t v149 = *(void *)(v44 + 64);
        uint64_t v150 = *(void *)(v44 + 72);
        unsigned __int8 v151 = *(unsigned char *)(v44 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v145, v146, v147, v148, v149, v150, v151);
        *(void *)(v43 + 32) = v145;
        *(void *)(v43 + 40) = v146;
        *(void *)(v43 + 48) = v147;
        *(void *)(v43 + 56) = v148;
        *(void *)(v43 + 64) = v149;
        *(void *)(v43 + 72) = v150;
        *(unsigned char *)(v43 + 80) = v151;
        uint64_t v17 = a1;
        goto LABEL_58;
      case 0xBu:
        uint64_t v99 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v99;
        uint64_t v100 = *(void *)(v44 + 24);
        *(void *)(v43 + 16) = *(void *)(v44 + 16);
        *(void *)(v43 + 24) = v100;
        uint64_t v101 = *(void *)(v44 + 40);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(void *)(v43 + 40) = v101;
        uint64_t v102 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        unint64_t v103 = (void *)(v43 + v102);
        uint64_t v104 = v44 + v102;
        uint64_t v105 = *(void *)(v44 + v102 + 8);
        *unint64_t v103 = *(void *)(v44 + v102);
        v103[1] = v105;
        int v106 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v107 = v106[5];
        uint64_t v207 = v104 + v107;
        __dstd = (char *)v103 + v107;
        uint64_t v108 = sub_1C151631C();
        v204 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v204(__dstd, v207, v108);
        uint64_t v109 = v106[6];
        int v110 = (void *)((char *)v103 + v109);
        char v111 = (void *)(v104 + v109);
        uint64_t v208 = v111[1];
        *int v110 = *v111;
        v110[1] = v208;
        uint64_t v112 = v106[7];
        int v113 = (void *)((char *)v103 + v112);
        int v114 = (void *)(v104 + v112);
        uint64_t v115 = v114[1];
        *int v113 = *v114;
        v113[1] = v115;
        uint64_t v116 = v106[8];
        int v117 = (void *)((char *)v103 + v116);
        char v118 = (void *)(v104 + v116);
        uint64_t v119 = v118[1];
        *int v117 = *v118;
        v117[1] = v119;
        uint64_t v120 = v106[9];
        uint64_t v121 = (void *)((char *)v103 + v120);
        uint64_t v122 = (void *)(v104 + v120);
        uint64_t v123 = v122[1];
        *uint64_t v121 = *v122;
        v121[1] = v123;
        uint64_t v124 = v106[10];
        __dstb = (char *)v103 + v124;
        v200 = (const void *)(v104 + v124);
        uint64_t v125 = sub_1C151D6DC();
        uint64_t v198 = *(void *)(v125 - 8);
        v205 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v198 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v205(v200, 1, v125))
        {
          sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dstb, v200, *(void *)(*(void *)(v126 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v198 + 16))(__dstb, v200, v125);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v198 + 56))(__dstb, 0, 1, v125);
        }
        *(void *)((char *)v103 + v106[11]) = *(void *)(v104 + v106[11]);
        *(void *)((char *)v103 + v106[12]) = *(void *)(v104 + v106[12]);
        *(void *)((char *)v103 + v106[13]) = *(void *)(v104 + v106[13]);
        *(void *)((char *)v103 + v106[14]) = *(void *)(v104 + v106[14]);
        *(void *)((char *)v103 + v106[15]) = *(void *)(v104 + v106[15]);
        *(void *)((char *)v103 + v106[16]) = *(void *)(v104 + v106[16]);
        *(void *)((char *)v103 + v106[17]) = *(void *)(v104 + v106[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_43:
        uint64_t v17 = a1;
        goto LABEL_58;
      default:
        uint64_t v45 = *(void *)(v44 + 8);
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v45;
        uint64_t v46 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v47 = v46[5];
        uint64_t v48 = v43 + v47;
        uint64_t v49 = v44 + v47;
        uint64_t v50 = sub_1C151631C();
        uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
        uint64_t v52 = v46[6];
        uint64_t v53 = (void *)(v43 + v52);
        uint64_t v54 = (void *)(v44 + v52);
        uint64_t v55 = v54[1];
        *uint64_t v53 = *v54;
        v53[1] = v55;
        uint64_t v56 = v46[7];
        uint64_t v57 = (void *)(v43 + v56);
        id v58 = (void *)(v44 + v56);
        uint64_t v59 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v59;
        uint64_t v60 = v46[8];
        uint64_t v61 = (void *)(v43 + v60);
        uint64_t v62 = (void *)(v44 + v60);
        uint64_t v63 = v62[1];
        *uint64_t v61 = *v62;
        v61[1] = v63;
        uint64_t v64 = v46[9];
        uint64_t v65 = (void *)(v43 + v64);
        uint64_t v66 = (void *)(v44 + v64);
        uint64_t v67 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v67;
        uint64_t v68 = v46[10];
        v206 = (const void *)(v44 + v68);
        __dst = (void *)(v43 + v68);
        uint64_t v69 = sub_1C151D6DC();
        uint64_t v70 = *(void *)(v69 - 8);
        v203 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v203(v206, 1, v69))
        {
          sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v206, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v70 + 16))(__dst, v206, v69);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(__dst, 0, 1, v69);
        }
        *(void *)(v43 + v46[11]) = *(void *)(v44 + v46[11]);
        *(void *)(v43 + v46[12]) = *(void *)(v44 + v46[12]);
        *(void *)(v43 + v46[13]) = *(void *)(v44 + v46[13]);
        *(void *)(v43 + v46[14]) = *(void *)(v44 + v46[14]);
        *(void *)(v43 + v46[15]) = *(void *)(v44 + v46[15]);
        *(void *)(v43 + v46[16]) = *(void *)(v44 + v46[16]);
        *(void *)(v43 + v46[17]) = *(void *)(v44 + v46[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v17 = a1;
        goto LABEL_58;
    }
  }
  return v17;
}

void sub_1C0B91DC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C0B91E18()
{
  if (!qword_1EA1A42A0)
  {
    type metadata accessor for FormatFile();
    sub_1C0B9843C(&qword_1EB873A60, (void (*)(uint64_t))type metadata accessor for FormatFile);
    sub_1C0B9843C(&qword_1EA198330, (void (*)(uint64_t))type metadata accessor for FormatFile);
    unint64_t v0 = type metadata accessor for DebugFormatServiceResult();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A42A0);
    }
  }
}

uint64_t sub_1C0B91EE4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for FormatDerivedDataFile();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1C024F49C(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
    unsigned int v6 = *(unsigned __int8 *)(v4 + 40);
    if (v6 <= 0xFD) {
      sub_1C00F5AEC(*(void *)(v4 + 24), *(void *)(v4 + 32), v6);
    }
    swift_bridgeObjectRelease();
    if (*(unsigned __int16 *)(v4 + 108) >> 9 <= 0x7EuLL) {
      sub_1C017F5B0(*(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), *(void *)(v4 + 88), *(void *)(v4 + 96), *(unsigned int *)(v4 + 104) | ((unint64_t)*(unsigned __int16 *)(v4 + 108) << 32));
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 32);
    uint64_t v8 = sub_1C151928C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_1C151928C();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  type metadata accessor for DebugFormatCacheFileMetadata();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[8];
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for FormatContent(0);
      uint64_t v14 = v12 + *(int *)(v13 + 20);
      uint64_t v15 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v12 + *(int *)(v13 + 40);
      uint64_t v17 = sub_1C151D6DC();
      uint64_t v18 = *(void *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      }
      goto LABEL_37;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(v12 + 106) != 255)
      {
        uint64_t v19 = *(unsigned __int16 *)(v12 + 104) | (*(unsigned __int8 *)(v12 + 106) << 16);
        sub_1BFFA742C(*(void *)(v12 + 96), v19, SBYTE2(v19), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v12 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_37;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v12 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v12 + 168) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v37 = (int *)type metadata accessor for FormatPackage();
      uint64_t v20 = v12 + v37[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v21 = v20 + *(int *)(v36 + 24);
      if (*(void *)(v21 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v22 = v21 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v23 = sub_1C1518CDC();
      uint64_t v38 = *(void *)(v23 - 8);
      uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      if (!v24(v22, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v22, v23);
      }
      uint64_t v25 = v20 + *(int *)(v36 + 28);
      if (!v24(v25, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v25, v23);
      }
      swift_bridgeObjectRelease();
      v11(v12 + v37[24], v10);
      uint64_t v26 = v12 + v37[25];
      if (!v24(v26, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v26, v23);
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(void *)(v12 + 72), *(unsigned char *)(v12 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v12 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      uint64_t v28 = type metadata accessor for FormatContent(0);
      uint64_t v29 = v27 + *(int *)(v28 + 20);
      uint64_t v30 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v27 + *(int *)(v28 + 40);
      uint64_t v32 = sub_1C151D6DC();
      uint64_t v33 = *(void *)(v32 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_1C0B91E18();
  sub_1BFE95664(*(void *)(v12 + *(int *)(v34 + 44)), *(void *)(v12 + *(int *)(v34 + 44) + 8));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0B92870(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v10 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v216 = v4;
  if (v12(v9, 1, v10))
  {
    sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = *v9;
    uint64_t v15 = v9[1];
    unsigned __int8 v16 = *((unsigned char *)v9 + 16);
    sub_1C024FAC0(*v9, v15, v16);
    *uint64_t v8 = v14;
    v8[1] = v15;
    *((unsigned char *)v8 + 16) = v16;
    unsigned int v17 = *((unsigned __int8 *)v9 + 40);
    if (v17 <= 0xFD)
    {
      uint64_t v18 = v9[3];
      unint64_t v19 = v9[4];
      sub_1C00F5ACC(v18, v19, *((unsigned char *)v9 + 40));
      v8[3] = v18;
      v8[4] = v19;
      *((unsigned char *)v8 + 40) = v17;
    }
    else
    {
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
      *((unsigned char *)v8 + 40) = *((unsigned char *)v9 + 40);
    }
    uint64_t v20 = v9[7];
    v8[6] = v9[6];
    v8[7] = v20;
    unsigned int v21 = *((unsigned __int16 *)v9 + 54);
    uint64_t v22 = *((unsigned int *)v9 + 26);
    swift_bridgeObjectRetain();
    if (v21 >> 9 <= 0x7EuLL)
    {
      unint64_t v24 = v22 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v21 << 32);
      uint64_t v25 = v9[8];
      uint64_t v26 = v9[9];
      uint64_t v28 = v9[10];
      uint64_t v27 = v9[11];
      uint64_t v213 = v9[12];
      sub_1C017F524(v25, v26, v28, v27, v213, v24);
      _OWORD v8[8] = v25;
      v8[9] = v26;
      v8[10] = v28;
      v8[11] = v27;
      v8[12] = v213;
      *((_WORD *)v8 + 54) = WORD2(v24);
      *((_DWORD *)v8 + 26) = v24;
    }
    else
    {
      long long v23 = *((_OWORD *)v9 + 5);
      *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
      *((_OWORD *)v8 + 5) = v23;
      *(_OWORD *)((char *)v8 + 94) = *(_OWORD *)((char *)v9 + 94);
    }
    uint64_t v29 = v9[15];
    v8[14] = v9[14];
    v8[15] = v29;
    uint64_t v30 = *(int *)(v10 + 32);
    uint64_t v31 = (char *)v8 + v30;
    v214 = (char *)v9 + v30;
    uint64_t v32 = sub_1C151928C();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v31, v214, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    uint64_t v4 = v216;
  }
  uint64_t v34 = a3[7];
  uint64_t v35 = v4 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_1C151928C();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
  v38(v35, v36, v37);
  uint64_t v39 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(void *)(v35 + *(int *)(v39 + 20)) = *(void *)(v36 + *(int *)(v39 + 20));
  uint64_t v40 = a3[8];
  uint64_t v41 = v4 + v40;
  uint64_t v42 = a2 + v40;
  type metadata accessor for FormatFile();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v70 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v70;
      uint64_t v71 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v71;
      uint64_t v72 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v72;
      uint64_t v73 = *(void *)(v42 + 56);
      *(void *)(v41 + 48) = *(void *)(v42 + 48);
      *(void *)(v41 + 56) = v73;
      uint64_t v74 = *(void *)(v42 + 64);
      *(unsigned char *)(v41 + 72) = *(unsigned char *)(v42 + 72);
      *(void *)(v41 + 64) = v74;
      uint64_t v75 = *(void *)(v42 + 88);
      *(void *)(v41 + 80) = *(void *)(v42 + 80);
      *(void *)(v41 + 88) = v75;
      __dsta = (uint64_t *)(v42 + 96);
      unsigned __int8 v76 = *(unsigned char *)(v42 + 106);
      int v77 = *(unsigned __int16 *)(v42 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v76 == 255)
      {
        *(void *)(v41 + 96) = *__dsta;
        *(_DWORD *)(v41 + 103) = *(_DWORD *)(v42 + 103);
      }
      else
      {
        uint64_t v148 = v77 & 0xFF00FFFF | (v76 << 16);
        uint64_t v149 = *__dsta;
        sub_1BFFA742C(*__dsta, v148, SBYTE2(v148), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        *(void *)(v41 + 96) = v149;
        *(_WORD *)(v41 + 104) = v148;
        *(unsigned char *)(v41 + 106) = BYTE2(v148);
      }
      goto LABEL_53;
    case 2u:
      uint64_t v78 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v78;
      uint64_t v79 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v79;
      uint64_t v80 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v80;
      *(unsigned char *)(v41 + 48) = *(unsigned char *)(v42 + 48);
      *(void *)(v41 + 56) = *(void *)(v42 + 56);
      uint64_t v81 = (_OWORD *)(v42 + 64);
      unint64_t v82 = *(void *)(v42 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82 <= 2)
      {
        *(_OWORD *)(v41 + 64) = *v81;
      }
      else
      {
        *(unsigned char *)(v41 + 64) = *(unsigned char *)v81;
        *(void *)(v41 + 72) = v82;
        swift_bridgeObjectRetain();
      }
      uint64_t v153 = *(void *)(v42 + 88);
      *(void *)(v41 + 80) = *(void *)(v42 + 80);
      *(void *)(v41 + 88) = v153;
      uint64_t v154 = *(void *)(v42 + 104);
      *(void *)(v41 + 96) = *(void *)(v42 + 96);
      *(void *)(v41 + 104) = v154;
      uint64_t v155 = *(void *)(v42 + 120);
      *(void *)(v41 + 112) = *(void *)(v42 + 112);
      *(void *)(v41 + 120) = v155;
      *(unsigned char *)(v41 + 128) = *(unsigned char *)(v42 + 128);
      *(void *)(v41 + 136) = *(void *)(v42 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_40;
    case 3u:
      uint64_t v83 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v83;
      uint64_t v84 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v84;
      uint64_t v85 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v85;
      uint64_t v86 = (void *)(v42 + 48);
      unint64_t v87 = *(void *)(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v87 >= 0xF)
      {
        *(void *)(v41 + 48) = *v86;
        *(void *)(v41 + 56) = v87;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v41 + 48) = *(_OWORD *)v86;
      }
      uint64_t v150 = *(void *)(v42 + 72);
      *(void *)(v41 + 64) = *(void *)(v42 + 64);
      *(void *)(v41 + 72) = v150;
      uint64_t v151 = *(void *)(v42 + 88);
      *(void *)(v41 + 80) = *(void *)(v42 + 80);
      *(void *)(v41 + 88) = v151;
      uint64_t v152 = *(void *)(v42 + 104);
      *(void *)(v41 + 96) = *(void *)(v42 + 96);
      *(void *)(v41 + 104) = v152;
      *(void *)(v41 + 112) = *(void *)(v42 + 112);
      *(unsigned char *)(v41 + 120) = *(unsigned char *)(v42 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_40:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_53;
    case 4u:
      uint64_t v88 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v88;
      uint64_t v89 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v89;
      uint64_t v90 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v90;
      *(void *)(v41 + 48) = *(void *)(v42 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_36;
    case 5u:
      uint64_t v125 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v125;
      uint64_t v126 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v126;
      uint64_t v127 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v127;
      *(_WORD *)(v41 + 48) = *(_WORD *)(v42 + 48);
      uint64_t v128 = *(void *)(v42 + 64);
      *(void *)(v41 + 56) = *(void *)(v42 + 56);
      *(void *)(v41 + 64) = v128;
      uint64_t v129 = *(void *)(v42 + 80);
      *(void *)(v41 + 72) = *(void *)(v42 + 72);
      *(void *)(v41 + 80) = v129;
      uint64_t v130 = *(void *)(v42 + 96);
      *(void *)(v41 + 88) = *(void *)(v42 + 88);
      *(void *)(v41 + 96) = v130;
      uint64_t v131 = *(void *)(v42 + 112);
      *(void *)(v41 + 104) = *(void *)(v42 + 104);
      *(void *)(v41 + 112) = v131;
      uint64_t v132 = *(void *)(v42 + 128);
      *(void *)(v41 + 120) = *(void *)(v42 + 120);
      *(void *)(v41 + 128) = v132;
      uint64_t v133 = *(void *)(v42 + 144);
      *(void *)(v41 + 136) = *(void *)(v42 + 136);
      *(void *)(v41 + 144) = v133;
      *(void *)(v41 + 152) = *(void *)(v42 + 152);
      uint64_t v207 = (_OWORD *)(v42 + 160);
      unint64_t v198 = *(void *)(v42 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v198 <= 2)
      {
        *(_OWORD *)(v41 + 160) = *v207;
      }
      else
      {
        *(unsigned char *)(v41 + 160) = *(unsigned char *)v207;
        *(void *)(v41 + 168) = v198;
        swift_bridgeObjectRetain();
      }
      uint64_t v196 = (int *)type metadata accessor for FormatPackage();
      uint64_t v156 = v196[23];
      uint64_t v157 = (void *)(v41 + v156);
      uint64_t v158 = v42 + v156;
      uint64_t v159 = *(void *)(v42 + v156 + 8);
      *uint64_t v157 = *(void *)(v42 + v156);
      v157[1] = v159;
      __dstc = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v160 = __dstc[6];
      unint64_t v194 = v157;
      int v161 = (char *)v157 + v160;
      uint64_t v199 = v158;
      uint64_t v162 = v158 + v160;
      uint64_t v163 = *(void *)(v158 + v160 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v163 == 1)
      {
        long long v164 = *(_OWORD *)(v162 + 16);
        *(_OWORD *)int v161 = *(_OWORD *)v162;
        *((_OWORD *)v161 + 1) = v164;
        *((_OWORD *)v161 + 2) = *(_OWORD *)(v162 + 32);
      }
      else
      {
        *(void *)int v161 = *(void *)v162;
        *((void *)v161 + 1) = v163;
        uint64_t v165 = *(void *)(v162 + 24);
        *((void *)v161 + 2) = *(void *)(v162 + 16);
        *((void *)v161 + 3) = v165;
        uint64_t v166 = *(void *)(v162 + 40);
        *((void *)v161 + 4) = *(void *)(v162 + 32);
        *((void *)v161 + 5) = v166;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v167 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      long long v168 = &v161[v167];
      uint64_t v169 = (const void *)(v162 + v167);
      uint64_t v170 = sub_1C1518CDC();
      uint64_t v171 = *(void *)(v170 - 8);
      v203 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v171 + 48);
      uint64_t v193 = v171;
      if (v203(v169, 1, v170))
      {
        sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v168, v169, *(void *)(*(void *)(v172 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v171 + 16))(v168, v169, v170);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
      }
      uint64_t v173 = v199;
      uint64_t v174 = __dstc[7];
      uint64_t v175 = (char *)v194 + v174;
      uint64_t v176 = (const void *)(v199 + v174);
      if (v203((const void *)(v199 + v174), 1, v170))
      {
        sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v175, v176, *(void *)(*(void *)(v177 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v193 + 16))(v175, v176, v170);
        uint64_t v173 = v199;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v175, 0, 1, v170);
      }
      *(void *)((char *)v194 + __dstc[8]) = *(void *)(v173 + __dstc[8]);
      uint64_t v178 = v196[24];
      uint64_t v179 = v41 + v178;
      uint64_t v180 = v42 + v178;
      swift_bridgeObjectRetain();
      v38(v179, v180, v37);
      uint64_t v181 = v196[25];
      uint64_t v182 = (void *)(v41 + v181);
      uint64_t v183 = (const void *)(v42 + v181);
      if (v203((const void *)(v42 + v181), 1, v170))
      {
        sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v193 + 16))(v182, v183, v170);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v193 + 56))(v182, 0, 1, v170);
      }
      goto LABEL_53;
    case 6u:
      uint64_t v134 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v134;
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_53;
    case 7u:
      *(void *)uint64_t v41 = *(void *)v42;
      swift_retain();
      goto LABEL_53;
    case 8u:
      uint64_t v135 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v135;
      uint64_t v136 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v136;
      uint64_t v137 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v137;
      uint64_t v138 = *(void *)(v42 + 56);
      *(void *)(v41 + 48) = *(void *)(v42 + 48);
      *(void *)(v41 + 56) = v138;
      *(void *)(v41 + 64) = *(void *)(v42 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_53;
    case 9u:
      uint64_t v91 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v91;
      uint64_t v92 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v92;
      uint64_t v93 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v93;
      uint64_t v94 = *(void *)(v42 + 56);
      *(void *)(v41 + 48) = *(void *)(v42 + 48);
      *(void *)(v41 + 56) = v94;
      uint64_t v95 = *(void *)(v42 + 72);
      *(void *)(v41 + 64) = *(void *)(v42 + 64);
      *(void *)(v41 + 72) = v95;
      *(unsigned char *)(v41 + 80) = *(unsigned char *)(v42 + 80);
      uint64_t v96 = *(void *)(v42 + 96);
      *(void *)(v41 + 88) = *(void *)(v42 + 88);
      *(void *)(v41 + 96) = v96;
      *(unsigned char *)(v41 + 104) = *(unsigned char *)(v42 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_53;
    case 0xAu:
      uint64_t v139 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v139;
      uint64_t v140 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v140;
      uint64_t v141 = *(void *)(v42 + 32);
      uint64_t v142 = *(void *)(v42 + 40);
      uint64_t v143 = *(void *)(v42 + 48);
      uint64_t v144 = *(void *)(v42 + 56);
      uint64_t v145 = *(void *)(v42 + 64);
      uint64_t v146 = *(void *)(v42 + 72);
      unsigned __int8 v147 = *(unsigned char *)(v42 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v141, v142, v143, v144, v145, v146, v147);
      *(void *)(v41 + 32) = v141;
      *(void *)(v41 + 40) = v142;
      *(void *)(v41 + 48) = v143;
      *(void *)(v41 + 56) = v144;
      *(void *)(v41 + 64) = v145;
      *(void *)(v41 + 72) = v146;
      *(unsigned char *)(v41 + 80) = v147;
      goto LABEL_53;
    case 0xBu:
      uint64_t v97 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v97;
      uint64_t v98 = *(void *)(v42 + 24);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      *(void *)(v41 + 24) = v98;
      uint64_t v99 = *(void *)(v42 + 40);
      *(void *)(v41 + 32) = *(void *)(v42 + 32);
      *(void *)(v41 + 40) = v99;
      uint64_t v100 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v101 = (void *)(v41 + v100);
      uint64_t v102 = v42 + v100;
      uint64_t v103 = *(void *)(v42 + v100 + 8);
      *uint64_t v101 = *(void *)(v42 + v100);
      v101[1] = v103;
      uint64_t v104 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v105 = v104[5];
      uint64_t v205 = v102 + v105;
      __dstd = (char *)v101 + v105;
      uint64_t v106 = sub_1C151631C();
      unint64_t v201 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v201(__dstd, v205, v106);
      uint64_t v107 = v104[6];
      uint64_t v108 = (void *)((char *)v101 + v107);
      uint64_t v109 = (void *)(v102 + v107);
      uint64_t v206 = v109[1];
      *uint64_t v108 = *v109;
      v108[1] = v206;
      uint64_t v110 = v104[7];
      char v111 = (void *)((char *)v101 + v110);
      uint64_t v112 = (void *)(v102 + v110);
      uint64_t v113 = v112[1];
      *char v111 = *v112;
      v111[1] = v113;
      uint64_t v114 = v104[8];
      uint64_t v115 = (void *)((char *)v101 + v114);
      uint64_t v116 = (void *)(v102 + v114);
      uint64_t v117 = v116[1];
      *uint64_t v115 = *v116;
      v115[1] = v117;
      uint64_t v118 = v104[9];
      uint64_t v119 = (void *)((char *)v101 + v118);
      uint64_t v120 = (void *)(v102 + v118);
      uint64_t v121 = v120[1];
      *uint64_t v119 = *v120;
      v119[1] = v121;
      uint64_t v122 = v104[10];
      __dstb = (char *)v101 + v122;
      v197 = (const void *)(v102 + v122);
      uint64_t v123 = sub_1C151D6DC();
      uint64_t v195 = *(void *)(v123 - 8);
      v202 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v195 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v202(v197, 1, v123))
      {
        sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dstb, v197, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v195 + 16))(__dstb, v197, v123);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(__dstb, 0, 1, v123);
      }
      *(void *)((char *)v101 + v104[11]) = *(void *)(v102 + v104[11]);
      *(void *)((char *)v101 + v104[12]) = *(void *)(v102 + v104[12]);
      *(void *)((char *)v101 + v104[13]) = *(void *)(v102 + v104[13]);
      *(void *)((char *)v101 + v104[14]) = *(void *)(v102 + v104[14]);
      *(void *)((char *)v101 + v104[15]) = *(void *)(v102 + v104[15]);
      *(void *)((char *)v101 + v104[16]) = *(void *)(v102 + v104[16]);
      *(void *)((char *)v101 + v104[17]) = *(void *)(v102 + v104[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_53;
    default:
      uint64_t v43 = *(void *)(v42 + 8);
      *(void *)uint64_t v41 = *(void *)v42;
      *(void *)(v41 + 8) = v43;
      uint64_t v44 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v45 = v44[5];
      uint64_t v46 = v41 + v45;
      uint64_t v47 = v42 + v45;
      uint64_t v48 = sub_1C151631C();
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16);
      swift_bridgeObjectRetain();
      v49(v46, v47, v48);
      uint64_t v50 = v44[6];
      uint64_t v51 = (void *)(v41 + v50);
      uint64_t v52 = (void *)(v42 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v44[7];
      uint64_t v55 = (void *)(v41 + v54);
      uint64_t v56 = (void *)(v42 + v54);
      uint64_t v57 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = v44[8];
      uint64_t v59 = (void *)(v41 + v58);
      uint64_t v60 = (void *)(v42 + v58);
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = v44[9];
      uint64_t v63 = (void *)(v41 + v62);
      uint64_t v64 = (void *)(v42 + v62);
      uint64_t v65 = v64[1];
      *uint64_t v63 = *v64;
      v63[1] = v65;
      uint64_t v66 = v44[10];
      v204 = (const void *)(v42 + v66);
      __dst = (void *)(v41 + v66);
      uint64_t v67 = sub_1C151D6DC();
      uint64_t v68 = *(void *)(v67 - 8);
      v200 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v200(v204, 1, v67))
      {
        sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(__dst, v204, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v68 + 16))(__dst, v204, v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(__dst, 0, 1, v67);
      }
      *(void *)(v41 + v44[11]) = *(void *)(v42 + v44[11]);
      *(void *)(v41 + v44[12]) = *(void *)(v42 + v44[12]);
      *(void *)(v41 + v44[13]) = *(void *)(v42 + v44[13]);
      *(void *)(v41 + v44[14]) = *(void *)(v42 + v44[14]);
      *(void *)(v41 + v44[15]) = *(void *)(v42 + v44[15]);
      *(void *)(v41 + v44[16]) = *(void *)(v42 + v44[16]);
      *(void *)(v41 + v44[17]) = *(void *)(v42 + v44[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_36:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_53:
      swift_storeEnumTagMultiPayload();
      sub_1C0B91E18();
      uint64_t v186 = v185;
      uint64_t v187 = *(int *)(v185 + 44);
      uint64_t v188 = (uint64_t *)(v41 + v187);
      uint64_t v189 = (uint64_t *)(v42 + v187);
      uint64_t v190 = *v189;
      unint64_t v191 = v189[1];
      sub_1BFE95820(*v189, v191);
      *uint64_t v188 = v190;
      v188[1] = v191;
      *(void *)(v41 + *(int *)(v186 + 48)) = *(void *)(v42 + *(int *)(v186 + 48));
      swift_bridgeObjectRetain();
      return v216;
  }
}

void *sub_1C0B93AA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *(void *)a2;
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = *(void *)(a2 + 16);
  *((unsigned char *)v5 + 24) = *(unsigned char *)(a2 + 24);
  v5[4] = *(void *)(a2 + 32);
  v5[5] = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (uint64_t)v5 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v208 = a3;
      v210 = v5;
      uint64_t v14 = *(void *)v8;
      uint64_t v15 = *(void *)(v8 + 8);
      unsigned __int8 v16 = *(unsigned char *)(v8 + 16);
      sub_1C024FAC0(*(void *)v8, v15, v16);
      *(void *)uint64_t v7 = v14;
      *(void *)(v7 + 8) = v15;
      *(unsigned char *)(v7 + 16) = v16;
      unsigned int v17 = *(unsigned __int8 *)(v8 + 40);
      if (v17 <= 0xFD)
      {
        uint64_t v30 = *(void *)(v8 + 24);
        unint64_t v31 = *(void *)(v8 + 32);
        sub_1C00F5ACC(v30, v31, *(unsigned char *)(v8 + 40));
        *(void *)(v7 + 24) = v30;
        *(void *)(v7 + 32) = v31;
        *(unsigned char *)(v7 + 40) = v17;
      }
      else
      {
        long long v18 = *(_OWORD *)(v8 + 24);
        *(unsigned char *)(v7 + 40) = *(unsigned char *)(v8 + 40);
        *(_OWORD *)(v7 + 24) = v18;
      }
      *(void *)(v7 + 48) = *(void *)(v8 + 48);
      *(void *)(v7 + 56) = *(void *)(v8 + 56);
      unsigned int v32 = *(unsigned __int16 *)(v8 + 108);
      uint64_t v33 = *(unsigned int *)(v8 + 104);
      swift_bridgeObjectRetain();
      if (v32 >> 9 <= 0x7EuLL)
      {
        unint64_t v36 = v33 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v32 << 32);
        uint64_t v37 = *(void *)(v8 + 64);
        uint64_t v38 = *(void *)(v8 + 72);
        uint64_t v39 = *(void *)(v8 + 88);
        uint64_t v206 = *(void *)(v8 + 80);
        uint64_t v40 = *(void *)(v8 + 96);
        sub_1C017F524(v37, v38, v206, v39, v40, v36);
        *(void *)(v7 + 64) = v37;
        *(void *)(v7 + 72) = v38;
        *(void *)(v7 + 80) = v206;
        *(void *)(v7 + 88) = v39;
        *(void *)(v7 + 96) = v40;
        *(_WORD *)(v7 + 108) = WORD2(v36);
        *(_DWORD *)(v7 + 104) = v36;
      }
      else
      {
        long long v34 = *(_OWORD *)(v8 + 64);
        long long v35 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v7 + 94) = *(_OWORD *)(v8 + 94);
        *(_OWORD *)(v7 + 64) = v34;
        *(_OWORD *)(v7 + 80) = v35;
      }
      *(void *)(v7 + 112) = *(void *)(v8 + 112);
      *(void *)(v7 + 120) = *(void *)(v8 + 120);
      uint64_t v41 = *(int *)(v9 + 32);
      uint64_t v42 = v7 + v41;
      uint64_t v207 = v8 + v41;
      uint64_t v43 = sub_1C151928C();
      uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44(v42, v207, v43);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      a3 = v208;
      uint64_t v5 = v210;
      goto LABEL_28;
    }
LABEL_7:
    sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_28;
  }
  if (v13)
  {
    sub_1C0B952D4(v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    goto LABEL_7;
  }
  uint64_t v209 = a3;
  v211 = v5;
  uint64_t v20 = *(void *)v8;
  uint64_t v21 = *(void *)(v8 + 8);
  unsigned __int8 v22 = *(unsigned char *)(v8 + 16);
  sub_1C024FAC0(*(void *)v8, v21, v22);
  uint64_t v23 = *(void *)v7;
  uint64_t v24 = *(void *)(v7 + 8);
  *(void *)uint64_t v7 = v20;
  *(void *)(v7 + 8) = v21;
  unsigned __int8 v25 = *(unsigned char *)(v7 + 16);
  *(unsigned char *)(v7 + 16) = v22;
  sub_1C024F49C(v23, v24, v25);
  uint64_t v26 = (_OWORD *)(v7 + 24);
  uint64_t v27 = (_OWORD *)(v8 + 24);
  unsigned int v28 = *(unsigned __int8 *)(v8 + 40);
  if (*(unsigned __int8 *)(v7 + 40) <= 0xFDu)
  {
    if (v28 <= 0xFD)
    {
      uint64_t v48 = *(void *)(v8 + 24);
      unint64_t v49 = *(void *)(v8 + 32);
      sub_1C00F5ACC(v48, v49, *(unsigned char *)(v8 + 40));
      uint64_t v50 = *(void *)(v7 + 24);
      unint64_t v51 = *(void *)(v7 + 32);
      *(void *)(v7 + 24) = v48;
      *(void *)(v7 + 32) = v49;
      unsigned __int8 v52 = *(unsigned char *)(v7 + 40);
      *(unsigned char *)(v7 + 40) = v28;
      sub_1C00F5AEC(v50, v51, v52);
    }
    else
    {
      sub_1C0B95280(v7 + 24);
      char v45 = *(unsigned char *)(v8 + 40);
      *uint64_t v26 = *v27;
      *(unsigned char *)(v7 + 40) = v45;
    }
  }
  else if (v28 <= 0xFD)
  {
    uint64_t v46 = *(void *)(v8 + 24);
    unint64_t v47 = *(void *)(v8 + 32);
    sub_1C00F5ACC(v46, v47, *(unsigned char *)(v8 + 40));
    *(void *)(v7 + 24) = v46;
    *(void *)(v7 + 32) = v47;
    *(unsigned char *)(v7 + 40) = v28;
  }
  else
  {
    long long v29 = *v27;
    *(unsigned char *)(v7 + 40) = *(unsigned char *)(v8 + 40);
    *uint64_t v26 = v29;
  }
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = *(void *)(v8 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = (_OWORD *)(v7 + 64);
  uint64_t v54 = (_OWORD *)(v8 + 64);
  unint64_t v55 = *(unsigned int *)(v8 + 104) | ((unint64_t)*(unsigned __int16 *)(v8 + 108) << 32);
  if (*(unsigned __int16 *)(v7 + 108) >> 9 <= 0x7EuLL)
  {
    if (((v55 >> 41) & 0x7F) == 0x7F)
    {
      sub_1C030EAFC(v7 + 64);
      long long v58 = *(_OWORD *)(v8 + 94);
      long long v59 = *(_OWORD *)(v8 + 80);
      *uint64_t v53 = *v54;
      *(_OWORD *)(v7 + 80) = v59;
      *(_OWORD *)(v7 + 94) = v58;
    }
    else
    {
      uint64_t v65 = *(void *)(v8 + 64);
      uint64_t v66 = *(void *)(v8 + 72);
      uint64_t v68 = *(void *)(v8 + 80);
      uint64_t v67 = *(void *)(v8 + 88);
      uint64_t v69 = *(void *)(v8 + 96);
      sub_1C017F524(v65, v66, v68, v67, v69, *(unsigned int *)(v8 + 104) | ((unint64_t)*(unsigned __int16 *)(v8 + 108) << 32));
      uint64_t v70 = *(void *)(v7 + 64);
      uint64_t v71 = *(void *)(v7 + 72);
      uint64_t v72 = *(void *)(v7 + 80);
      uint64_t v73 = *(void *)(v7 + 88);
      uint64_t v74 = *(void *)(v7 + 96);
      unint64_t v75 = *(unsigned int *)(v7 + 104) | ((unint64_t)*(unsigned __int16 *)(v7 + 108) << 32);
      *(void *)(v7 + 64) = v65;
      *(void *)(v7 + 72) = v66;
      *(void *)(v7 + 80) = v68;
      *(void *)(v7 + 88) = v67;
      *(void *)(v7 + 96) = v69;
      *(_DWORD *)(v7 + 104) = v55;
      *(_WORD *)(v7 + 108) = WORD2(v55);
      sub_1C017F5B0(v70, v71, v72, v73, v74, v75);
    }
  }
  else if (((v55 >> 41) & 0x7F) == 0x7F)
  {
    long long v56 = *v54;
    long long v57 = *(_OWORD *)(v8 + 80);
    *(_OWORD *)(v7 + 94) = *(_OWORD *)(v8 + 94);
    *uint64_t v53 = v56;
    *(_OWORD *)(v7 + 80) = v57;
  }
  else
  {
    uint64_t v60 = *(void *)(v8 + 64);
    uint64_t v61 = *(void *)(v8 + 72);
    uint64_t v63 = *(void *)(v8 + 80);
    uint64_t v62 = *(void *)(v8 + 88);
    uint64_t v64 = *(void *)(v8 + 96);
    sub_1C017F524(v60, v61, v63, v62, v64, *(unsigned int *)(v8 + 104) | ((unint64_t)*(unsigned __int16 *)(v8 + 108) << 32));
    *(void *)(v7 + 64) = v60;
    *(void *)(v7 + 72) = v61;
    *(void *)(v7 + 80) = v63;
    *(void *)(v7 + 88) = v62;
    *(void *)(v7 + 96) = v64;
    *(_WORD *)(v7 + 108) = WORD2(v55);
    *(_DWORD *)(v7 + 104) = v55;
  }
  a3 = v209;
  uint64_t v5 = v211;
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v76 = *(int *)(v9 + 32);
  uint64_t v77 = v7 + v76;
  uint64_t v78 = v8 + v76;
  uint64_t v79 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 24))(v77, v78, v79);
LABEL_28:
  uint64_t v80 = *(int *)(a3 + 28);
  uint64_t v81 = (char *)v5 + v80;
  uint64_t v82 = a2 + v80;
  uint64_t v83 = sub_1C151928C();
  uint64_t v84 = a3;
  uint64_t v85 = *(void *)(v83 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 24))(v81, v82, v83);
  uint64_t v86 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(void *)&v81[*(int *)(v86 + 20)] = *(void *)(v82 + *(int *)(v86 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = *(int *)(v84 + 32);
  uint64_t v88 = (char *)v5 + v87;
  uint64_t v89 = a2 + v87;
  if (v5 != (void *)a2)
  {
    sub_1C0B952D4((uint64_t)v5 + v87, (uint64_t (*)(void))type metadata accessor for FormatFile);
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v213 = v5;
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        *((void *)v88 + 6) = *(void *)(v89 + 48);
        *((void *)v88 + 7) = *(void *)(v89 + 56);
        uint64_t v112 = *(void *)(v89 + 64);
        v88[72] = *(unsigned char *)(v89 + 72);
        *((void *)v88 + 8) = v112;
        *((void *)v88 + 10) = *(void *)(v89 + 80);
        *((void *)v88 + 11) = *(void *)(v89 + 88);
        __dsta = (uint64_t *)(v89 + 96);
        unsigned __int8 v113 = *(unsigned char *)(v89 + 106);
        int v114 = *(unsigned __int16 *)(v89 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v113 == 255)
        {
          uint64_t v115 = *__dsta;
          *(_DWORD *)(v88 + 103) = *(_DWORD *)(v89 + 103);
          *((void *)v88 + 12) = v115;
        }
        else
        {
          uint64_t v148 = v114 & 0xFF00FFFF | (v113 << 16);
          uint64_t v149 = *__dsta;
          sub_1BFFA742C(*__dsta, v148, SBYTE2(v148), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *((void *)v88 + 12) = v149;
          *((_WORD *)v88 + 52) = v148;
          v88[106] = BYTE2(v148);
        }
        goto LABEL_57;
      case 2u:
        uint64_t v116 = v5;
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        v88[48] = *(unsigned char *)(v89 + 48);
        *((void *)v88 + 7) = *(void *)(v89 + 56);
        unint64_t v117 = *(void *)(v89 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v117 <= 2)
        {
          *((_OWORD *)v88 + 4) = *(_OWORD *)(v89 + 64);
        }
        else
        {
          v88[64] = *(unsigned char *)(v89 + 64);
          *((void *)v88 + 9) = *(void *)(v89 + 72);
          swift_bridgeObjectRetain();
        }
        *((void *)v88 + 10) = *(void *)(v89 + 80);
        *((void *)v88 + 11) = *(void *)(v89 + 88);
        *((void *)v88 + 12) = *(void *)(v89 + 96);
        *((void *)v88 + 13) = *(void *)(v89 + 104);
        *((void *)v88 + 14) = *(void *)(v89 + 112);
        *((void *)v88 + 15) = *(void *)(v89 + 120);
        v88[128] = *(unsigned char *)(v89 + 128);
        *((void *)v88 + 17) = *(void *)(v89 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v5 = v116;
        break;
      case 3u:
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        unint64_t v118 = *(void *)(v89 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v118 >= 0xF)
        {
          uint64_t v119 = v5;
          *((void *)v88 + 6) = *(void *)(v89 + 48);
          *((void *)v88 + 7) = *(void *)(v89 + 56);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v119 = v5;
          *((_OWORD *)v88 + 3) = *(_OWORD *)(v89 + 48);
        }
        *((void *)v88 + 8) = *(void *)(v89 + 64);
        *((void *)v88 + 9) = *(void *)(v89 + 72);
        *((void *)v88 + 10) = *(void *)(v89 + 80);
        *((void *)v88 + 11) = *(void *)(v89 + 88);
        *((void *)v88 + 12) = *(void *)(v89 + 96);
        *((void *)v88 + 13) = *(void *)(v89 + 104);
        *((void *)v88 + 14) = *(void *)(v89 + 112);
        v88[120] = *(unsigned char *)(v89 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v5 = v119;
        break;
      case 4u:
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        *((void *)v88 + 6) = *(void *)(v89 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        v214 = v5;
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        v88[48] = *(unsigned char *)(v89 + 48);
        v88[49] = *(unsigned char *)(v89 + 49);
        *((void *)v88 + 7) = *(void *)(v89 + 56);
        *((void *)v88 + 8) = *(void *)(v89 + 64);
        *((void *)v88 + 9) = *(void *)(v89 + 72);
        *((void *)v88 + 10) = *(void *)(v89 + 80);
        *((void *)v88 + 11) = *(void *)(v89 + 88);
        *((void *)v88 + 12) = *(void *)(v89 + 96);
        *((void *)v88 + 13) = *(void *)(v89 + 104);
        *((void *)v88 + 14) = *(void *)(v89 + 112);
        *((void *)v88 + 15) = *(void *)(v89 + 120);
        *((void *)v88 + 16) = *(void *)(v89 + 128);
        *((void *)v88 + 17) = *(void *)(v89 + 136);
        *((void *)v88 + 18) = *(void *)(v89 + 144);
        *((void *)v88 + 19) = *(void *)(v89 + 152);
        unint64_t v199 = *(void *)(v89 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v199 <= 2)
        {
          *((_OWORD *)v88 + 10) = *(_OWORD *)(v89 + 160);
        }
        else
        {
          v88[160] = *(unsigned char *)(v89 + 160);
          *((void *)v88 + 21) = *(void *)(v89 + 168);
          swift_bridgeObjectRetain();
        }
        v192 = (int *)type metadata accessor for FormatPackage();
        uint64_t v160 = v192[23];
        int v161 = &v88[v160];
        uint64_t v162 = v89 + v160;
        *(void *)int v161 = *(void *)(v89 + v160);
        *((void *)v161 + 1) = *(void *)(v89 + v160 + 8);
        __dstc = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v163 = __dstc[6];
        uint64_t v196 = v161;
        long long v164 = &v161[v163];
        uint64_t v190 = v162;
        uint64_t v165 = (long long *)(v162 + v163);
        uint64_t v166 = *((void *)v165 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v166 == 1)
        {
          long long v167 = *v165;
          long long v168 = v165[2];
          *((_OWORD *)v164 + 1) = v165[1];
          *((_OWORD *)v164 + 2) = v168;
          *(_OWORD *)long long v164 = v167;
        }
        else
        {
          *(void *)long long v164 = *(void *)v165;
          *((void *)v164 + 1) = *((void *)v165 + 1);
          *((void *)v164 + 2) = *((void *)v165 + 2);
          *((void *)v164 + 3) = *((void *)v165 + 3);
          *((void *)v164 + 4) = *((void *)v165 + 4);
          *((void *)v164 + 5) = *((void *)v165 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v169 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v170 = &v164[v169];
        uint64_t v171 = (char *)v165 + v169;
        uint64_t v172 = sub_1C1518CDC();
        uint64_t v173 = *(void *)(v172 - 8);
        v200 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48);
        uint64_t v188 = v173;
        if (v200(v171, 1, v172))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v170, v171, *(void *)(*(void *)(v174 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v170, v171, v172);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
        }
        uint64_t v175 = v196;
        uint64_t v176 = __dstc[7];
        uint64_t v177 = (char *)v196 + v176;
        uint64_t v178 = (const void *)(v190 + v176);
        if (v200((char *)(v190 + v176), 1, v172))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v188 + 16))(v177, v178, v172);
          uint64_t v175 = v196;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v177, 0, 1, v172);
        }
        *(void *)((char *)v175 + __dstc[8]) = *(void *)(v190 + __dstc[8]);
        uint64_t v180 = v192[24];
        uint64_t v181 = &v88[v180];
        uint64_t v182 = v89 + v180;
        uint64_t v183 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
        swift_bridgeObjectRetain();
        v183(v181, v182, v83);
        uint64_t v184 = v192[25];
        uint64_t v185 = &v88[v184];
        uint64_t v186 = (const void *)(v89 + v184);
        if (v200((char *)(v89 + v184), 1, v172))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v188 + 16))(v185, v186, v172);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v172);
        }
        uint64_t v5 = v214;
        break;
      case 6u:
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 7u:
        *(void *)uint64_t v88 = *(void *)v89;
        swift_retain();
        break;
      case 8u:
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        *((void *)v88 + 6) = *(void *)(v89 + 48);
        *((void *)v88 + 7) = *(void *)(v89 + 56);
        *((void *)v88 + 8) = *(void *)(v89 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        *((void *)v88 + 6) = *(void *)(v89 + 48);
        *((void *)v88 + 7) = *(void *)(v89 + 56);
        *((void *)v88 + 8) = *(void *)(v89 + 64);
        *((void *)v88 + 9) = *(void *)(v89 + 72);
        v88[80] = *(unsigned char *)(v89 + 80);
        *((void *)v88 + 11) = *(void *)(v89 + 88);
        *((void *)v88 + 12) = *(void *)(v89 + 96);
        v88[104] = *(unsigned char *)(v89 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        uint64_t v141 = *(void *)(v89 + 32);
        uint64_t v142 = *(void *)(v89 + 40);
        uint64_t v143 = *(void *)(v89 + 48);
        uint64_t v144 = *(void *)(v89 + 56);
        v215 = v5;
        uint64_t v145 = *(void *)(v89 + 64);
        uint64_t v146 = *(void *)(v89 + 72);
        unsigned __int8 v147 = *(unsigned char *)(v89 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v141, v142, v143, v144, v145, v146, v147);
        *((void *)v88 + 4) = v141;
        *((void *)v88 + 5) = v142;
        *((void *)v88 + 6) = v143;
        *((void *)v88 + 7) = v144;
        *((void *)v88 + 8) = v145;
        *((void *)v88 + 9) = v146;
        uint64_t v5 = v215;
        v88[80] = v147;
        break;
      case 0xBu:
        uint64_t v213 = v5;
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        *((void *)v88 + 2) = *(void *)(v89 + 16);
        *((void *)v88 + 3) = *(void *)(v89 + 24);
        *((void *)v88 + 4) = *(void *)(v89 + 32);
        *((void *)v88 + 5) = *(void *)(v89 + 40);
        uint64_t v120 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v121 = &v88[v120];
        uint64_t v122 = v89 + v120;
        *(void *)uint64_t v121 = *(void *)(v89 + v120);
        *((void *)v121 + 1) = *(void *)(v89 + v120 + 8);
        uint64_t v123 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v124 = v123[5];
        uint64_t v198 = v122 + v124;
        __dstd = &v121[v124];
        uint64_t v125 = sub_1C151631C();
        unint64_t v194 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v194(__dstd, v198, v125);
        uint64_t v126 = v123[6];
        uint64_t v127 = &v121[v126];
        uint64_t v128 = (void *)(v122 + v126);
        *(void *)uint64_t v127 = *v128;
        *((void *)v127 + 1) = v128[1];
        uint64_t v129 = v123[7];
        uint64_t v130 = &v121[v129];
        uint64_t v131 = (void *)(v122 + v129);
        *(void *)uint64_t v130 = *v131;
        *((void *)v130 + 1) = v131[1];
        uint64_t v132 = v123[8];
        uint64_t v133 = &v121[v132];
        uint64_t v134 = (void *)(v122 + v132);
        *(void *)uint64_t v133 = *v134;
        *((void *)v133 + 1) = v134[1];
        uint64_t v135 = v123[9];
        uint64_t v136 = &v121[v135];
        uint64_t v137 = (void *)(v122 + v135);
        *(void *)uint64_t v136 = *v137;
        *((void *)v136 + 1) = v137[1];
        uint64_t v138 = v123[10];
        __dstb = &v121[v138];
        unint64_t v191 = (const void *)(v122 + v138);
        uint64_t v139 = sub_1C151D6DC();
        uint64_t v189 = *(void *)(v139 - 8);
        uint64_t v195 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v189 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v195(v191, 1, v139))
        {
          sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dstb, v191, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v189 + 16))(__dstb, v191, v139);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v189 + 56))(__dstb, 0, 1, v139);
        }
        *(void *)&v121[v123[11]] = *(void *)(v122 + v123[11]);
        *(void *)&v121[v123[12]] = *(void *)(v122 + v123[12]);
        *(void *)&v121[v123[13]] = *(void *)(v122 + v123[13]);
        *(void *)&v121[v123[14]] = *(void *)(v122 + v123[14]);
        *(void *)&v121[v123[15]] = *(void *)(v122 + v123[15]);
        *(void *)&v121[v123[16]] = *(void *)(v122 + v123[16]);
        *(void *)&v121[v123[17]] = *(void *)(v122 + v123[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_57:
        uint64_t v5 = v213;
        break;
      default:
        v212 = v5;
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = *(void *)(v89 + 8);
        uint64_t v90 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v91 = v90[5];
        uint64_t v92 = &v88[v91];
        uint64_t v93 = v89 + v91;
        uint64_t v94 = sub_1C151631C();
        uint64_t v95 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v94 - 8) + 16);
        swift_bridgeObjectRetain();
        v95(v92, v93, v94);
        uint64_t v96 = v90[6];
        uint64_t v97 = &v88[v96];
        uint64_t v98 = (void *)(v89 + v96);
        *(void *)uint64_t v97 = *v98;
        *((void *)v97 + 1) = v98[1];
        uint64_t v99 = v90[7];
        uint64_t v100 = &v88[v99];
        uint64_t v101 = (void *)(v89 + v99);
        *(void *)uint64_t v100 = *v101;
        *((void *)v100 + 1) = v101[1];
        uint64_t v102 = v90[8];
        uint64_t v103 = &v88[v102];
        uint64_t v104 = (void *)(v89 + v102);
        *(void *)uint64_t v103 = *v104;
        *((void *)v103 + 1) = v104[1];
        uint64_t v105 = v90[9];
        uint64_t v106 = &v88[v105];
        uint64_t v107 = (void *)(v89 + v105);
        *(void *)uint64_t v106 = *v107;
        *((void *)v106 + 1) = v107[1];
        uint64_t v108 = v90[10];
        v197 = (const void *)(v89 + v108);
        __dst = &v88[v108];
        uint64_t v109 = sub_1C151D6DC();
        uint64_t v110 = *(void *)(v109 - 8);
        uint64_t v193 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v110 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v193(v197, 1, v109))
        {
          sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(__dst, v197, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v110 + 16))(__dst, v197, v109);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(__dst, 0, 1, v109);
        }
        *(void *)&v88[v90[11]] = *(void *)(v89 + v90[11]);
        *(void *)&v88[v90[12]] = *(void *)(v89 + v90[12]);
        *(void *)&v88[v90[13]] = *(void *)(v89 + v90[13]);
        *(void *)&v88[v90[14]] = *(void *)(v89 + v90[14]);
        *(void *)&v88[v90[15]] = *(void *)(v89 + v90[15]);
        *(void *)&v88[v90[16]] = *(void *)(v89 + v90[16]);
        *(void *)&v88[v90[17]] = *(void *)(v89 + v90[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v5 = v212;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_1C0B91E18();
  uint64_t v151 = v150;
  uint64_t v152 = *(int *)(v150 + 44);
  uint64_t v153 = (uint64_t *)&v88[v152];
  uint64_t v154 = (uint64_t *)(v89 + v152);
  uint64_t v155 = *v154;
  unint64_t v156 = v154[1];
  sub_1BFE95820(*v154, v156);
  uint64_t v157 = *v153;
  unint64_t v158 = v153[1];
  *uint64_t v153 = v155;
  v153[1] = v156;
  sub_1BFE95664(v157, v158);
  *(void *)&v88[*(int *)(v151 + 48)] = *(void *)(v89 + *(int *)(v151 + 48));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C0B95280(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0B952D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1C0B95334(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  a1[2] = a2[2];
  uint64_t v6 = a3[6];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
    *(_OWORD *)((char *)v7 + 24) = *(_OWORD *)((char *)v8 + 24);
    *((unsigned char *)v7 + 40) = *((unsigned char *)v8 + 40);
    long long v12 = v8[7];
    long long v13 = v8[5];
    void v7[6] = v8[6];
    v7[7] = v12;
    long long v14 = v8[4];
    v7[3] = v8[3];
    v7[4] = v14;
    void v7[5] = v13;
    uint64_t v15 = *(int *)(v9 + 32);
    unsigned __int8 v16 = (char *)v7 + v15;
    unsigned int v17 = (char *)v8 + v15;
    uint64_t v18 = sub_1C151928C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  uint64_t v24 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(void *)&v20[*(int *)(v24 + 20)] = *(void *)&v21[*(int *)(v24 + 20)];
  uint64_t v25 = a3[8];
  uint64_t v26 = (_OWORD *)((char *)a1 + v25);
  uint64_t v27 = (_OWORD *)((char *)a2 + v25);
  uint64_t v28 = type metadata accessor for FormatFile();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      long long v41 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v41;
      v26[2] = v27[2];
      uint64_t v42 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v43 = (char *)v26 + v42;
      uint64_t v44 = (char *)v27 + v42;
      *(_OWORD *)((char *)v26 + v42) = *(_OWORD *)((char *)v27 + v42);
      char v45 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v46 = v45[5];
      unint64_t v47 = &v43[v46];
      uint64_t v48 = &v44[v46];
      uint64_t v49 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      *(_OWORD *)&v43[v45[6]] = *(_OWORD *)&v44[v45[6]];
      *(_OWORD *)&v43[v45[7]] = *(_OWORD *)&v44[v45[7]];
      *(_OWORD *)&v43[v45[8]] = *(_OWORD *)&v44[v45[8]];
      *(_OWORD *)&v43[v45[9]] = *(_OWORD *)&v44[v45[9]];
      uint64_t v50 = v45[10];
      unint64_t v51 = &v43[v50];
      unsigned __int8 v52 = &v44[v50];
      uint64_t v53 = sub_1C151D6DC();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *(void *)&v43[v45[11]] = *(void *)&v44[v45[11]];
      *(void *)&v43[v45[12]] = *(void *)&v44[v45[12]];
      *(void *)&v43[v45[13]] = *(void *)&v44[v45[13]];
      *(void *)&v43[v45[14]] = *(void *)&v44[v45[14]];
      *(void *)&v43[v45[15]] = *(void *)&v44[v45[15]];
      *(void *)&v43[v45[16]] = *(void *)&v44[v45[16]];
      *(void *)&v43[v45[17]] = *(void *)&v44[v45[17]];
      goto LABEL_25;
    case 5:
      uint64_t v84 = v23;
      long long v56 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v56;
      v26[2] = v27[2];
      *((_WORD *)v26 + 24) = *((_WORD *)v27 + 24);
      *(_OWORD *)((char *)v26 + 56) = *(_OWORD *)((char *)v27 + 56);
      *(_OWORD *)((char *)v26 + 72) = *(_OWORD *)((char *)v27 + 72);
      *(_OWORD *)((char *)v26 + 88) = *(_OWORD *)((char *)v27 + 88);
      *(_OWORD *)((char *)v26 + 104) = *(_OWORD *)((char *)v27 + 104);
      *(_OWORD *)((char *)v26 + 120) = *(_OWORD *)((char *)v27 + 120);
      *(_OWORD *)((char *)v26 + 136) = *(_OWORD *)((char *)v27 + 136);
      *((void *)v26 + 19) = *((void *)v27 + 19);
      v26[10] = v27[10];
      uint64_t v83 = (int *)type metadata accessor for FormatPackage();
      uint64_t v57 = v83[23];
      long long v58 = (char *)v26 + v57;
      long long v59 = (char *)v27 + v57;
      *(_OWORD *)((char *)v26 + v57) = *(_OWORD *)((char *)v27 + v57);
      uint64_t v86 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v60 = v86[6];
      uint64_t v82 = v58;
      uint64_t v61 = &v58[v60];
      uint64_t v62 = &v59[v60];
      long long v63 = *(_OWORD *)&v59[v60 + 16];
      *(_OWORD *)uint64_t v61 = *(_OWORD *)&v59[v60];
      *((_OWORD *)v61 + 1) = v63;
      *((_OWORD *)v61 + 2) = *(_OWORD *)&v59[v60 + 32];
      uint64_t v64 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v65 = &v61[v64];
      uint64_t v66 = &v62[v64];
      uint64_t v67 = sub_1C1518CDC();
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      if (v85(v66, 1, v67))
      {
        sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      uint64_t v70 = v86[7];
      uint64_t v71 = &v82[v70];
      uint64_t v72 = &v59[v70];
      if (v85(&v59[v70], 1, v67))
      {
        sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
        uint64_t v74 = v68;
      }
      else
      {
        unint64_t v75 = v72;
        uint64_t v74 = v68;
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v71, v75, v67);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v67);
      }
      *(void *)&v82[v86[8]] = *(void *)&v59[v86[8]];
      v84((char *)v26 + v83[24], (char *)v27 + v83[24], v22);
      uint64_t v76 = v83[25];
      uint64_t v77 = (char *)v26 + v76;
      uint64_t v78 = (char *)v27 + v76;
      if (v85((char *)v27 + v76, 1, v67))
      {
        sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v77, v78, v67);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v77, 0, 1, v67);
      }
      goto LABEL_25;
    case 0:
      *uint64_t v26 = *v27;
      uint64_t v30 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v31 = v30[5];
      unsigned int v32 = (char *)v26 + v31;
      uint64_t v33 = (char *)v27 + v31;
      uint64_t v34 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      *(_OWORD *)((char *)v26 + v30[6]) = *(_OWORD *)((char *)v27 + v30[6]);
      *(_OWORD *)((char *)v26 + v30[7]) = *(_OWORD *)((char *)v27 + v30[7]);
      *(_OWORD *)((char *)v26 + v30[8]) = *(_OWORD *)((char *)v27 + v30[8]);
      *(_OWORD *)((char *)v26 + v30[9]) = *(_OWORD *)((char *)v27 + v30[9]);
      uint64_t v35 = v30[10];
      unint64_t v36 = (char *)v26 + v35;
      uint64_t v37 = (char *)v27 + v35;
      uint64_t v38 = sub_1C151D6DC();
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
        memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      *(void *)((char *)v26 + v30[11]) = *(void *)((char *)v27 + v30[11]);
      *(void *)((char *)v26 + v30[12]) = *(void *)((char *)v27 + v30[12]);
      *(void *)((char *)v26 + v30[13]) = *(void *)((char *)v27 + v30[13]);
      *(void *)((char *)v26 + v30[14]) = *(void *)((char *)v27 + v30[14]);
      *(void *)((char *)v26 + v30[15]) = *(void *)((char *)v27 + v30[15]);
      *(void *)((char *)v26 + v30[16]) = *(void *)((char *)v27 + v30[16]);
      *(void *)((char *)v26 + v30[17]) = *(void *)((char *)v27 + v30[17]);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
  }
  memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_26:
  sub_1C0B91E18();
  *(_OWORD *)((char *)v26 + *(int *)(v80 + 44)) = *(_OWORD *)((char *)v27 + *(int *)(v80 + 44));
  *(void *)((char *)v26 + *(int *)(v80 + 48)) = *(void *)((char *)v27 + *(int *)(v80 + 48));
  return a1;
}

uint64_t sub_1C0B95D2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v12 = *(void *)(v11 - 8);
  long long v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
      *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
      *(unsigned char *)(v9 + 40) = *(unsigned char *)(v10 + 40);
      long long v16 = *(_OWORD *)(v10 + 112);
      long long v17 = *(_OWORD *)(v10 + 80);
      *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
      *(_OWORD *)(v9 + 112) = v16;
      long long v18 = *(_OWORD *)(v10 + 64);
      *(_OWORD *)(v9 + 48) = *(_OWORD *)(v10 + 48);
      *(_OWORD *)(v9 + 64) = v18;
      *(_OWORD *)(v9 + 80) = v17;
      uint64_t v19 = *(int *)(v11 + 32);
      uint64_t v20 = v9 + v19;
      uint64_t v21 = v10 + v19;
      uint64_t v22 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_1C0B952D4(v9, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
LABEL_6:
    sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  char v75 = *(unsigned char *)(v10 + 16);
  uint64_t v76 = *(void *)v9;
  uint64_t v77 = *(void *)(v9 + 8);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  unsigned __int8 v78 = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v9 + 16) = v75;
  sub_1C024F49C(v76, v77, v78);
  uint64_t v79 = (_OWORD *)(v10 + 24);
  unsigned int v80 = *(unsigned __int8 *)(v9 + 40);
  if (v80 > 0xFD) {
    goto LABEL_21;
  }
  unsigned int v81 = *(unsigned __int8 *)(v10 + 40);
  if (v81 > 0xFD)
  {
    sub_1C0B95280(v9 + 24);
LABEL_21:
    *(_OWORD *)(v9 + 24) = *v79;
    *(unsigned char *)(v9 + 40) = *(unsigned char *)(v10 + 40);
    goto LABEL_36;
  }
  uint64_t v98 = *(void *)(v9 + 24);
  unint64_t v99 = *(void *)(v9 + 32);
  *(_OWORD *)(v9 + 24) = *v79;
  *(unsigned char *)(v9 + 40) = v81;
  sub_1C00F5AEC(v98, v99, v80);
LABEL_36:
  uint64_t v100 = *(void *)(v10 + 56);
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(void *)(v9 + 56) = v100;
  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(v9 + 108) >> 9 <= 0x7EuLL)
  {
    unint64_t v101 = *(unsigned int *)(v10 + 104) | ((unint64_t)*(unsigned __int16 *)(v10 + 108) << 32);
    if (((v101 >> 41) & 0x7F) != 0x7F)
    {
      unint64_t v103 = *(unsigned int *)(v9 + 104) | ((unint64_t)*(unsigned __int16 *)(v9 + 108) << 32);
      uint64_t v104 = *(void *)(v10 + 96);
      uint64_t v105 = *(void *)(v9 + 64);
      uint64_t v106 = *(void *)(v9 + 72);
      uint64_t v107 = *(void *)(v9 + 80);
      uint64_t v108 = *(void *)(v9 + 88);
      uint64_t v109 = *(void *)(v9 + 96);
      long long v110 = *(_OWORD *)(v10 + 80);
      *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
      *(_OWORD *)(v9 + 80) = v110;
      *(void *)(v9 + 96) = v104;
      *(_DWORD *)(v9 + 104) = v101;
      *(_WORD *)(v9 + 108) = WORD2(v101);
      sub_1C017F5B0(v105, v106, v107, v108, v109, v103);
      goto LABEL_41;
    }
    sub_1C030EAFC(v9 + 64);
  }
  long long v102 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v102;
  *(_OWORD *)(v9 + 94) = *(_OWORD *)(v10 + 94);
LABEL_41:
  *(void *)(v9 + 112) = *(void *)(v10 + 112);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 120) = *(void *)(v10 + 120);
  swift_bridgeObjectRelease();
  uint64_t v111 = *(int *)(v11 + 32);
  uint64_t v112 = v9 + v111;
  uint64_t v113 = v10 + v111;
  uint64_t v114 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 40))(v112, v113, v114);
LABEL_7:
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_1C151928C();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40))(v25, v26, v27);
  uint64_t v29 = type metadata accessor for DebugFormatCacheFileMetadata();
  *(void *)(v25 + *(int *)(v29 + 20)) = *(void *)(v26 + *(int *)(v29 + 20));
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[8];
  uint64_t v31 = (_OWORD *)(a1 + v30);
  unsigned int v32 = (_OWORD *)(a2 + v30);
  if (a1 != a2)
  {
    sub_1C0B952D4(a1 + v30, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v33 = type metadata accessor for FormatFile();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        long long v46 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v46;
        _OWORD v31[2] = v32[2];
        uint64_t v47 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v48 = (char *)v31 + v47;
        uint64_t v49 = (char *)v32 + v47;
        *(_OWORD *)((char *)v31 + v47) = *(_OWORD *)((char *)v32 + v47);
        uint64_t v50 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v51 = v50[5];
        unsigned __int8 v52 = &v48[v51];
        uint64_t v53 = &v49[v51];
        uint64_t v54 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
        *(_OWORD *)&v48[v50[6]] = *(_OWORD *)&v49[v50[6]];
        *(_OWORD *)&v48[v50[7]] = *(_OWORD *)&v49[v50[7]];
        *(_OWORD *)&v48[v50[8]] = *(_OWORD *)&v49[v50[8]];
        *(_OWORD *)&v48[v50[9]] = *(_OWORD *)&v49[v50[9]];
        uint64_t v55 = v50[10];
        long long v56 = &v48[v55];
        uint64_t v57 = &v49[v55];
        uint64_t v58 = sub_1C151D6DC();
        uint64_t v59 = *(void *)(v58 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
        {
          sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
        }
        *(void *)&v48[v50[11]] = *(void *)&v49[v50[11]];
        *(void *)&v48[v50[12]] = *(void *)&v49[v50[12]];
        *(void *)&v48[v50[13]] = *(void *)&v49[v50[13]];
        *(void *)&v48[v50[14]] = *(void *)&v49[v50[14]];
        *(void *)&v48[v50[15]] = *(void *)&v49[v50[15]];
        *(void *)&v48[v50[16]] = *(void *)&v49[v50[16]];
        *(void *)&v48[v50[17]] = *(void *)&v49[v50[17]];
        goto LABEL_33;
      case 5:
        uint64_t v116 = v28;
        long long v61 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v61;
        _OWORD v31[2] = v32[2];
        *((_WORD *)v31 + 24) = *((_WORD *)v32 + 24);
        *(_OWORD *)((char *)v31 + 56) = *(_OWORD *)((char *)v32 + 56);
        *(_OWORD *)((char *)v31 + 72) = *(_OWORD *)((char *)v32 + 72);
        *(_OWORD *)((char *)v31 + 88) = *(_OWORD *)((char *)v32 + 88);
        *(_OWORD *)((char *)v31 + 104) = *(_OWORD *)((char *)v32 + 104);
        *(_OWORD *)((char *)v31 + 120) = *(_OWORD *)((char *)v32 + 120);
        *(_OWORD *)((char *)v31 + 136) = *(_OWORD *)((char *)v32 + 136);
        *((void *)v31 + 19) = *((void *)v32 + 19);
        v31[10] = v32[10];
        unint64_t v117 = (int *)type metadata accessor for FormatPackage();
        uint64_t v62 = v117[23];
        long long v63 = (char *)v31 + v62;
        uint64_t v64 = (char *)v32 + v62;
        *(_OWORD *)((char *)v31 + v62) = *(_OWORD *)((char *)v32 + v62);
        uint64_t v119 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v65 = v119[6];
        uint64_t v115 = v63;
        uint64_t v66 = &v63[v65];
        uint64_t v67 = &v64[v65];
        long long v68 = *(_OWORD *)&v64[v65 + 16];
        *(_OWORD *)uint64_t v66 = *(_OWORD *)&v64[v65];
        *((_OWORD *)v66 + 1) = v68;
        *((_OWORD *)v66 + 2) = *(_OWORD *)&v64[v65 + 32];
        uint64_t v69 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v70 = &v66[v69];
        uint64_t v71 = &v67[v69];
        uint64_t v72 = sub_1C1518CDC();
        uint64_t v73 = *(void *)(v72 - 8);
        unint64_t v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
        if (v118(v71, 1, v72))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        uint64_t v82 = v119[7];
        uint64_t v83 = &v115[v82];
        uint64_t v84 = &v64[v82];
        if (v118(&v64[v82], 1, v72))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
          uint64_t v86 = v73;
        }
        else
        {
          uint64_t v87 = v84;
          uint64_t v86 = v73;
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v83, v87, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v83, 0, 1, v72);
        }
        *(void *)&v115[v119[8]] = *(void *)&v64[v119[8]];
        (*(void (**)(char *, char *, uint64_t))(v116 + 32))((char *)v31 + v117[24], (char *)v32 + v117[24], v27);
        uint64_t v88 = v117[25];
        uint64_t v89 = (char *)v31 + v88;
        uint64_t v90 = (char *)v32 + v88;
        if (v118((char *)v32 + v88, 1, v72))
        {
          sub_1C0B91DC4(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v89, v90, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v89, 0, 1, v72);
        }
        goto LABEL_33;
      case 0:
        *uint64_t v31 = *v32;
        uint64_t v35 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v36 = v35[5];
        uint64_t v37 = (char *)v31 + v36;
        uint64_t v38 = (char *)v32 + v36;
        uint64_t v39 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        *(_OWORD *)((char *)v31 + v35[6]) = *(_OWORD *)((char *)v32 + v35[6]);
        *(_OWORD *)((char *)v31 + v35[7]) = *(_OWORD *)((char *)v32 + v35[7]);
        *(_OWORD *)((char *)v31 + v35[8]) = *(_OWORD *)((char *)v32 + v35[8]);
        *(_OWORD *)((char *)v31 + v35[9]) = *(_OWORD *)((char *)v32 + v35[9]);
        uint64_t v40 = v35[10];
        long long v41 = (char *)v31 + v40;
        uint64_t v42 = (char *)v32 + v40;
        uint64_t v43 = sub_1C151D6DC();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
        {
          sub_1C0B91DC4(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
          memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        *(void *)((char *)v31 + v35[11]) = *(void *)((char *)v32 + v35[11]);
        *(void *)((char *)v31 + v35[12]) = *(void *)((char *)v32 + v35[12]);
        *(void *)((char *)v31 + v35[13]) = *(void *)((char *)v32 + v35[13]);
        *(void *)((char *)v31 + v35[14]) = *(void *)((char *)v32 + v35[14]);
        *(void *)((char *)v31 + v35[15]) = *(void *)((char *)v32 + v35[15]);
        *(void *)((char *)v31 + v35[16]) = *(void *)((char *)v32 + v35[16]);
        *(void *)((char *)v31 + v35[17]) = *(void *)((char *)v32 + v35[17]);
LABEL_33:
        swift_storeEnumTagMultiPayload();
        goto LABEL_34;
    }
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
LABEL_34:
  sub_1C0B91E18();
  uint64_t v93 = v92;
  uint64_t v94 = *(int *)(v92 + 44);
  uint64_t v95 = *(void *)((char *)v31 + v94);
  unint64_t v96 = *(void *)((char *)v31 + v94 + 8);
  *(_OWORD *)((char *)v31 + v94) = *(_OWORD *)((char *)v32 + v94);
  sub_1BFE95664(v95, v96);
  *(void *)((char *)v31 + *(int *)(v93 + 48)) = *(void *)((char *)v32 + *(int *)(v93 + 48));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0B96954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0B96968);
}

uint64_t sub_1C0B96968(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    long long v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for DebugFormatCacheFileMetadata();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  sub_1C0B91E18();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];
  return v15(v17, a2, v16);
}

uint64_t sub_1C0B96AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0B96B10);
}

uint64_t sub_1C0B96B10(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    long long v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for DebugFormatCacheFileMetadata();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  sub_1C0B91E18();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];
  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for DebugFormatCacheFile()
{
  uint64_t result = qword_1EA1A42A8;
  if (!qword_1EA1A42A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0B96CF0()
{
  sub_1C0B91DC4(319, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  if (v0 <= 0x3F)
  {
    type metadata accessor for DebugFormatCacheFileMetadata();
    if (v1 <= 0x3F)
    {
      sub_1C0B91E18();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1C0B96E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  uint64_t v31 = a7;
  uint64_t v29 = a1;
  uint64_t v30 = a6;
  uint64_t v16 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v16 - 8);
  long long v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v27 - v20;
  uint64_t v22 = (int *)type metadata accessor for DebugFormatCacheFile();
  uint64_t v28 = a8 + v22[7];
  sub_1C0B98484(a1, v28, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFileMetadata);
  uint64_t v23 = a8 + v22[8];
  sub_1C0B98484(a2, v23, (uint64_t (*)(void))sub_1C0B91E18);
  *(void *)a8 = a3;
  *(void *)(a8 + 8) = a4;
  *(double *)(a8 + 16) = a9;
  *(unsigned char *)(a8 + 24) = a5;
  uint64_t v24 = v31;
  *(void *)(a8 + 32) = v30;
  *(void *)(a8 + 40) = v24;
  sub_1C0B98484(a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatFile);
  uint64_t v33 = 47;
  uint64_t v34 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v25 = v32;
  sub_1C139C86C((uint64_t)v18, v33, v34, (uint64_t)v21);
  sub_1C0B952D4(a2, (uint64_t (*)(void))sub_1C0B91E18);
  sub_1C0B952D4(v29, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFileMetadata);
  if (!v25) {
    return sub_1C0B981B4((uint64_t)v21, a8 + v22[6]);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0B952D4(v28, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFileMetadata);
  return sub_1C0B952D4(v23, (uint64_t (*)(void))sub_1C0B91E18);
}

uint64_t sub_1C0B970A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v61 = type metadata accessor for FormatDerivedDataFile();
  uint64_t v57 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v55 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B91E18();
  uint64_t v60 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v59 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v56 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v54 - v9;
  uint64_t v62 = type metadata accessor for DebugFormatCacheFileMetadata();
  MEMORY[0x1F4188790](v62);
  uint64_t v64 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B98384(0, &qword_1EA1A42B8, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v63 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  int v15 = (char *)&v54 - v14;
  uint64_t v16 = type metadata accessor for DebugFormatCacheFile();
  MEMORY[0x1F4188790](v16);
  long long v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B98094();
  uint64_t v19 = v65;
  sub_1C1520EBC();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v10;
  uint64_t v65 = v16;
  uint64_t v21 = v18;
  LOBYTE(v66) = 3;
  sub_1C0B9843C(&qword_1EA1A42C8, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFileMetadata);
  sub_1C15206EC();
  uint64_t v22 = v13;
  uint64_t v24 = v65;
  uint64_t v25 = v22;
  uint64_t v26 = v15;
  uint64_t v27 = (uint64_t)&v18[*(int *)(v65 + 28)];
  sub_1C0B98234(v64, v27, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFileMetadata);
  char v70 = 0;
  sub_1C0B980E8();
  sub_1C15206EC();
  uint64_t v28 = v67;
  uint64_t v29 = v68;
  char v30 = v69;
  *(void *)long long v18 = v66;
  *((void *)v18 + 1) = v28;
  *((void *)v18 + 2) = v29;
  v18[24] = v30;
  LOBYTE(v66) = 1;
  uint64_t v31 = sub_1C152069C();
  uint64_t v62 = v27;
  *((void *)v18 + 4) = v31;
  *((void *)v18 + 5) = v32;
  LOBYTE(v66) = 2;
  sub_1C0B9843C(&qword_1EA1A42D8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  uint64_t v33 = (uint64_t)v20;
  uint64_t v64 = 0;
  sub_1C152065C();
  uint64_t v34 = (uint64_t)&v18[*(int *)(v24 + 24)];
  sub_1C0B981B4(v33, v34);
  LOBYTE(v66) = 4;
  sub_1C0B9843C(&qword_1EA1A42E0, (void (*)(uint64_t))sub_1C0B91E18);
  uint64_t v35 = (uint64_t)v59;
  sub_1C15206EC();
  uint64_t v54 = v26;
  uint64_t v60 = v25;
  sub_1C0B98234(v35, (uint64_t)&v18[*(int *)(v24 + 32)], (uint64_t (*)(void))sub_1C0B91E18);
  uint64_t v39 = v56;
  sub_1C0B9829C(v34, v56);
  uint64_t v40 = v61;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v39, 1, v61) == 1)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v54, v60);
    sub_1C0B9813C(v39);
    uint64_t v41 = v58;
  }
  else
  {
    uint64_t v42 = v39;
    uint64_t v43 = v55;
    sub_1C0B98234(v42, v55, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    uint64_t v44 = v43 + *(int *)(v40 + 32);
    if (qword_1EA194C00 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1C151928C();
    uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EA2B53E8);
    sub_1C0B9843C(&qword_1EB85C8B8, MEMORY[0x1E4FAB0A8]);
    uint64_t v61 = v46;
    char v47 = sub_1C151E5CC();
    uint64_t v41 = v58;
    if ((v47 & 1) == 0)
    {
      uint64_t v59 = (char *)type metadata accessor for DebugFormatManagerError();
      sub_1C0B9843C(&qword_1EA1A42E8, (void (*)(uint64_t))type metadata accessor for DebugFormatManagerError);
      swift_allocError();
      uint64_t v49 = v48;
      sub_1C0B9831C();
      uint64_t v51 = v49 + *(int *)(v50 + 48);
      unsigned __int8 v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
      v52(v49, v44, v45);
      v52(v51, v61, v45);
      uint64_t v53 = v65;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1C0B952D4(v55, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v54, v60);
      uint64_t v36 = v64;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      if (!v36) {
        swift_bridgeObjectRelease();
      }
      sub_1C0B9813C((uint64_t)&v21[*(int *)(v53 + 24)]);
      sub_1C0B952D4(v62, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFileMetadata);
      uint64_t v37 = (uint64_t)&v21[*(int *)(v53 + 32)];
      uint64_t v38 = (uint64_t (*)(void))sub_1C0B91E18;
      return sub_1C0B952D4(v37, v38);
    }
    sub_1C0B952D4(v43, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v54, v60);
  }
  sub_1C0B98484((uint64_t)v18, v41, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v38 = (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile;
  uint64_t v37 = (uint64_t)v18;
  return sub_1C0B952D4(v37, v38);
}

uint64_t sub_1C0B97A30(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0B98384(0, &qword_1EA1A42F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v14[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B98094();
  sub_1C1520F0C();
  uint64_t v10 = v3[1];
  uint64_t v11 = v3[2];
  char v12 = *((unsigned char *)v3 + 24);
  uint64_t v15 = *v3;
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  char v18 = v12;
  v14[15] = 0;
  sub_1C0B983E8();
  sub_1C152080C();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1C15207CC();
    type metadata accessor for DebugFormatCacheFile();
    LOBYTE(v15) = 2;
    type metadata accessor for FormatDerivedDataFile();
    sub_1C0B9843C(&qword_1EA1A4308, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    sub_1C152078C();
    LOBYTE(v15) = 3;
    type metadata accessor for DebugFormatCacheFileMetadata();
    sub_1C0B9843C(&qword_1EA1A4310, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFileMetadata);
    sub_1C152080C();
    LOBYTE(v15) = 4;
    sub_1C0B91E18();
    sub_1C0B9843C(&qword_1EA1A4318, (void (*)(uint64_t))sub_1C0B91E18);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0B97D40()
{
  unint64_t result = 0x6C69466775626564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x4464657669726564;
      break;
    case 3:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 4:
      unint64_t result = 0x746C75736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0B97DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0B986F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B97E24(uint64_t a1)
{
  unint64_t v2 = sub_1C0B98094();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B97E60(uint64_t a1)
{
  unint64_t v2 = sub_1C0B98094();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0B97E9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0B970A8(a1, a2);
}

uint64_t sub_1C0B97EB4(void *a1)
{
  return sub_1C0B97A30(a1);
}

BOOL sub_1C0B97ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v23 - v9;
  double v12 = *(double *)(a1 + 16);
  int v13 = *(unsigned __int8 *)(a1 + 24);
  double v14 = *(double *)(a2 + 16);
  int v15 = *(unsigned __int8 *)(a2 + 24);
  BOOL v16 = *v11 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v16 && (sub_1C1520A9C() & 1) == 0 || v12 != v14)
  {
    sub_1C0B98484(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    sub_1C0B98484(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
LABEL_11:
    BOOL v21 = 0;
    goto LABEL_12;
  }
  sub_1C0B98484(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  sub_1C0B98484(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  if (v13 != v15) {
    goto LABEL_11;
  }
  uint64_t v17 = *(int *)(a3 + 28);
  char v18 = &v10[v17];
  uint64_t v19 = &v7[v17];
  if ((sub_1C151922C() & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v20 = type metadata accessor for DebugFormatCacheFileMetadata();
  BOOL v21 = sub_1C00DFAAC(*(void *)&v18[*(int *)(v20 + 20)], *(void *)&v19[*(int *)(v20 + 20)]);
LABEL_12:
  sub_1C0B952D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  sub_1C0B952D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
  return v21;
}

unint64_t sub_1C0B98094()
{
  unint64_t result = qword_1EA1A42C0;
  if (!qword_1EA1A42C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A42C0);
  }
  return result;
}

unint64_t sub_1C0B980E8()
{
  unint64_t result = qword_1EA1A42D0;
  if (!qword_1EA1A42D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A42D0);
  }
  return result;
}

uint64_t sub_1C0B9813C(uint64_t a1)
{
  sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0B981B4(uint64_t a1, uint64_t a2)
{
  sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0B98234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0B9829C(uint64_t a1, uint64_t a2)
{
  sub_1C0B91DC4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0B9831C()
{
  if (!qword_1EA1A42F0)
  {
    sub_1C151928C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A42F0);
    }
  }
}

void sub_1C0B98384(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0B98094();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatCacheFile.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0B983E8()
{
  unint64_t result = qword_1EA1A4300;
  if (!qword_1EA1A4300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4300);
  }
  return result;
}

uint64_t sub_1C0B9843C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B98484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatCacheFile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B985B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCacheFile.CodingKeys()
{
  return &type metadata for DebugFormatCacheFile.CodingKeys;
}

unint64_t sub_1C0B985F4()
{
  unint64_t result = qword_1EA1A4320;
  if (!qword_1EA1A4320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4320);
  }
  return result;
}

unint64_t sub_1C0B9864C()
{
  unint64_t result = qword_1EA1A4328;
  if (!qword_1EA1A4328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4328);
  }
  return result;
}

unint64_t sub_1C0B986A4()
{
  unint64_t result = qword_1EA1A4330;
  if (!qword_1EA1A4330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4330);
  }
  return result;
}

uint64_t sub_1C0B986F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C69466775626564 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C161E040 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4464657669726564 && a2 == 0xEF656C6946617461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C0B98938@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v69 = a3;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v68 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v65 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v11 - 8);
  int v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1C15155DC();
  unint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v64 = (char *)&v52 - v16;
  sub_1C002FEFC(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C15156FC();
  uint64_t v21 = *(void *)(v20 - 8);
  __n128 v22 = MEMORY[0x1F4188790](v20);
  uint64_t v67 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2[1];
  if (v24)
  {
    uint64_t v61 = a4;
    uint64_t v62 = v13;
    uint64_t v63 = a5;
    uint64_t v66 = v9;
    uint64_t v25 = *a2;
    uint64_t v26 = a2[3];
    uint64_t v28 = a2[4];
    uint64_t v27 = a2[5];
    uint64_t v29 = a2[2];
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151564C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_1C025EF94(v25, v24);
      sub_1C0091328((uint64_t)v19, (uint64_t (*)(void))sub_1C002FEFC);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v63, a1, v66);
    }
    else
    {
      uint64_t v59 = v27;
      uint64_t v60 = v28;
      uint64_t v54 = v26;
      uint64_t v58 = a1;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v67, v19, v20);
      uint64_t v32 = sub_1C15155FC();
      if (v32) {
        unint64_t v33 = v32;
      }
      else {
        unint64_t v33 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRetain();
      uint64_t v34 = v64;
      sub_1C15155AC();
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v55 = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v33 = sub_1BFFB4568(0, *(void *)(v33 + 16) + 1, 1, v33);
      }
      uint64_t v36 = v66;
      unint64_t v38 = *(void *)(v33 + 16);
      unint64_t v37 = *(void *)(v33 + 24);
      uint64_t v57 = v20;
      uint64_t v53 = v25;
      if (v38 >= v37 >> 1) {
        unint64_t v33 = sub_1BFFB4568(v37 > 1, v38 + 1, 1, v33);
      }
      uint64_t v56 = v24;
      uint64_t v61 = v21;
      *(void *)(v33 + 16) = v38 + 1;
      unint64_t v39 = v70 + 32;
      uint64_t v40 = *(void (**)(unint64_t, char *, uint64_t))(v70 + 32);
      unint64_t v70 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      uint64_t v69 = *(void *)(v39 + 40);
      uint64_t v41 = v40;
      v40(v33 + v70 + v69 * v38, v34, v72);
      uint64_t v42 = v59;
      uint64_t v43 = *(void *)(v59 + 16);
      if (v43)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = v42 + 56;
        do
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          sub_1C15155AC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          unint64_t v46 = *(void *)(v33 + 16);
          unint64_t v45 = *(void *)(v33 + 24);
          if (v46 >= v45 >> 1) {
            unint64_t v33 = sub_1BFFB4568(v45 > 1, v46 + 1, 1, v33);
          }
          v44 += 32;
          *(void *)(v33 + 16) = v46 + 1;
          v41(v33 + v70 + v46 * v69, v71, v72);
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        uint64_t v36 = v66;
      }
      char v47 = v67;
      sub_1C151560C();
      uint64_t v48 = (uint64_t)v62;
      sub_1C151565C();
      sub_1C025EF94(v53, v56);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v57);
      uint64_t v49 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v65, v58, v36);
      int v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v48, 1, v36);
      uint64_t v51 = v63;
      if (v50 == 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v63, v49, v36);
        return sub_1C0091328(v48, (uint64_t (*)(void))sub_1BFF00BEC);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v68 + 8))(v49, v36);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v51, v48, v36);
      }
    }
  }
  else
  {
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v68 + 16);
    return v31(a5, a1, v9, v22);
  }
}

uint64_t sub_1C0B98FFC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v15 = sub_1C151635C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v19 = *a7;
  sub_1C151634C();
  uint64_t v20 = sub_1C151633C();
  uint64_t v28 = v21;
  uint64_t v29 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (a1) {
    id v22 = objc_msgSend(a1, sel_asSports);
  }
  else {
    id v22 = 0;
  }
  unsigned __int8 v32 = v19;
  unint64_t v23 = sub_1C0B993A8((uint64_t)a1, a5, &v32);
  swift_bridgeObjectRelease();
  unsigned __int8 v31 = v19;
  uint64_t v24 = sub_1C0B99D94(a1, a2, a3, a6, 0x64657461727563, 0xE700000000000000, 0, &v31);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v26 = v28;
  *a8 = v29;
  a8[1] = v26;
  uint64_t v27 = v30;
  a8[2] = (uint64_t)v22;
  a8[3] = v27;
  a8[4] = v23;
  a8[5] = (uint64_t)v24;
  return result;
}

uint64_t SportsDataVisualizationConfig.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsDataVisualizationConfig.backingTag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsDataVisualizationConfig.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsDataVisualizationConfig.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsDataVisualizationConfig.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsDataVisualizationConfig.init(backingTag:leagueTag:championshipTag:embedConfig:groupType:feedConfiguration:embedType:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, void *a9@<X8>)
{
  uint64_t v12 = a4[1];
  uint64_t v14 = a4[2];
  uint64_t v13 = a4[3];
  uint64_t v15 = a4[4];
  char v16 = *a8;
  v26[0] = *a4;
  v26[1] = v12;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  FCFeedDescriptorConfiguration.description.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v21 = v26[0];
  id v20 = objc_msgSend(a1, sel_asSports);
  LOBYTE(v26[0]) = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_1C0B993A8((uint64_t)a1, v13, (unsigned __int8 *)v26);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v26[0]) = v16;
  uint64_t v18 = sub_1C0B99D94(a1, a2, a3, v14, a5, a6, a7, (unsigned __int8 *)v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectRelease();
  *a9 = v21;
  a9[1] = v12;
  a9[2] = v20;
  a9[3] = v15;
  a9[4] = v17;
  a9[5] = v18;
  return result;
}

unint64_t sub_1C0B993A8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v88 = type metadata accessor for FormatOption();
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v85 = (char **)((char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v77 = (char **)((char *)&v75 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (char **)((char *)&v75 - v10);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char **)((char *)&v75 - v12);
  MEMORY[0x1F4188790](v14);
  char v16 = (char **)((char *)&v75 - v15);
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v87 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v20 - 8);
  id v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v25 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v75 - v24;
  int v27 = *a3;
  unint64_t v90 = MEMORY[0x1E4FBC860];
  if (a1)
  {
    swift_getObjectType();
    unsigned __int8 v89 = v27;
    sub_1C0B9B740(&v89, (uint64_t)v26);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))((char *)&v75 - v24, 1, 1, v17, v25);
  }
  sub_1C0B9D1AC((uint64_t)v26, (uint64_t)v22, (uint64_t (*)(void))sub_1BFF00BEC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v22, 1, v17) == 1)
  {
    sub_1C0091328((uint64_t)v22, (uint64_t (*)(void))sub_1BFF00BEC);
    if (v27 != 2) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  char v75 = v26;
  uint64_t v78 = a2;
  uint64_t v28 = v87;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v87, v22, v17);
  sub_1BFF2918C();
  uint64_t v30 = v29;
  uint64_t v31 = swift_allocBox();
  uint64_t v33 = v32;
  uint64_t v79 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 16);
  v79(v32, v28, v17);
  unint64_t v34 = MEMORY[0x1E4FBC860];
  *(void *)(v33 + *(int *)(v30 + 36)) = MEMORY[0x1E4FBC860];
  *char v16 = 0x752D726564616568;
  v16[1] = 0xEA00000000006C72;
  _DWORD v16[2] = v31 | 0x6000000000000000;
  v16[3] = 1;
  uint64_t v35 = (char *)v16 + *(int *)(v88 + 28);
  uint64_t v36 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v37 = *(void *)(v36 - 8);
  unsigned int v81 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 56);
  uint64_t v82 = v36;
  uint64_t v80 = v37 + 56;
  v81(v35, 1, 1);
  unint64_t v38 = sub_1BFFE1F7C(0, 1, 1, v34);
  unint64_t v40 = *(void *)(v38 + 16);
  unint64_t v39 = *(void *)(v38 + 24);
  if (v40 >= v39 >> 1) {
    unint64_t v38 = sub_1BFFE1F7C(v39 > 1, v40 + 1, 1, v38);
  }
  *(void *)(v38 + 16) = v40 + 1;
  unint64_t v84 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v83 = *(void *)(v86 + 72);
  sub_1C0B9D254((uint64_t)v16, v38 + v84 + v83 * v40, (uint64_t (*)(void))type metadata accessor for FormatOption);
  uint64_t v41 = swift_allocBox();
  uint64_t v43 = v42;
  v79(v42, v87, v17);
  *(void *)(v43 + *(int *)(v30 + 36)) = MEMORY[0x1E4FBC860];
  void *v13 = 0xD000000000000013;
  v13[1] = 0x80000001C161E080;
  v13[2] = v41 | 0x6000000000000000;
  v13[3] = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v81)((char *)v13 + *(int *)(v88 + 28), 1, 1, v82);
  unint64_t v45 = *(void *)(v38 + 16);
  unint64_t v44 = *(void *)(v38 + 24);
  if (v45 >= v44 >> 1) {
    unint64_t v38 = sub_1BFFE1F7C(v44 > 1, v45 + 1, 1, v38);
  }
  *(void *)(v38 + 16) = v45 + 1;
  sub_1C0B9D254((uint64_t)v13, v38 + v84 + v45 * v83, (uint64_t (*)(void))type metadata accessor for FormatOption);
  unint64_t v90 = v38;
  if (((1 << v27) & 0xF3) != 0)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v87, v17);
    uint64_t v26 = v75;
    if (v27 != 2) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  if (v27 == 2)
  {
    uint64_t v46 = swift_allocBox();
    uint64_t v48 = v47;
    v79(v47, v87, v17);
    *(void *)(v48 + *(int *)(v30 + 36)) = MEMORY[0x1E4FBC860];
    uint64_t v49 = v46 | 0x6000000000000000;
    int v50 = v76;
    *uint64_t v76 = 0x676E69646E617473;
    v50[1] = 0xEC0000006C72752DLL;
    v50[2] = v49;
    v50[3] = 1;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v81)((char *)v50 + *(int *)(v88 + 28), 1, 1, v82);
    unint64_t v52 = *(void *)(v38 + 16);
    unint64_t v51 = *(void *)(v38 + 24);
    if (v52 >= v51 >> 1) {
      unint64_t v38 = sub_1BFFE1F7C(v51 > 1, v52 + 1, 1, v38);
    }
    *(void *)(v38 + 16) = v52 + 1;
    sub_1C0B9D254((uint64_t)v50, v38 + v84 + v52 * v83, (uint64_t (*)(void))type metadata accessor for FormatOption);
    unint64_t v90 = v38;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v87, v17);
    uint64_t v26 = v75;
LABEL_18:
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v54 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v55 = sub_1C1515B8C();
    uint64_t v57 = v56;

    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v55;
    *(void *)(v58 + 24) = v57;
    *(void *)(v58 + 32) = MEMORY[0x1E4FBC860];
    uint64_t v59 = v85;
    *uint64_t v85 = 0x742D726564616568;
    v59[1] = 0xEC000000656C7469;
    v59[2] = v58 | 0x5000000000000000;
    v59[3] = 1;
    uint64_t v60 = (char *)v59 + *(int *)(v88 + 28);
    uint64_t v61 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 1, 1, v61);
    unint64_t v62 = v90;
    uint64_t v63 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v62 = sub_1BFFE1F7C(0, *(void *)(v62 + 16) + 1, 1, v62);
    }
    unint64_t v65 = *(void *)(v62 + 16);
    unint64_t v64 = *(void *)(v62 + 24);
    if (v65 >= v64 >> 1) {
      unint64_t v62 = sub_1BFFE1F7C(v64 > 1, v65 + 1, 1, v62);
    }
    *(void *)(v62 + 16) = v65 + 1;
    sub_1C0B9D254((uint64_t)v59, v62+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v65, (uint64_t (*)(void))type metadata accessor for FormatOption);
    unint64_t v90 = v62;
    uint64_t v26 = v63;
    goto LABEL_23;
  }
  uint64_t v68 = swift_allocBox();
  uint64_t v70 = v69;
  v79(v69, v87, v17);
  *(void *)(v70 + *(int *)(v30 + 36)) = MEMORY[0x1E4FBC860];
  uint64_t v71 = v68 | 0x6000000000000000;
  uint64_t v72 = v77;
  *uint64_t v77 = 0x2D74656B63617262;
  v72[1] = 0xEB000000006C7275;
  v72[2] = v71;
  v72[3] = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v81)((char *)v72 + *(int *)(v88 + 28), 1, 1, v82);
  unint64_t v74 = *(void *)(v38 + 16);
  unint64_t v73 = *(void *)(v38 + 24);
  if (v74 >= v73 >> 1) {
    unint64_t v38 = sub_1BFFE1F7C(v73 > 1, v74 + 1, 1, v38);
  }
  *(void *)(v38 + 16) = v74 + 1;
  sub_1C0B9D254((uint64_t)v72, v38 + v84 + v74 * v83, (uint64_t (*)(void))type metadata accessor for FormatOption);
  unint64_t v90 = v38;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v87, v17);
  uint64_t v26 = v75;
LABEL_23:
  uint64_t v66 = swift_bridgeObjectRetain();
  sub_1BFEDB748(v66);
  sub_1C0091328((uint64_t)v26, (uint64_t (*)(void))sub_1BFF00BEC);
  return v90;
}

void *sub_1C0B99D94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 *a8)
{
  uint64_t v68 = a5;
  uint64_t v69 = a7;
  uint64_t v70 = a4;
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *a8;
  uint64_t v72 = (void *)MEMORY[0x1E4FBC860];
  if (a1)
  {
    swift_getObjectType();
    unsigned __int8 v71 = v21;
    sub_1C0B9B740(&v71, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_1C0091328((uint64_t)v15, (uint64_t (*)(void))sub_1BFF00BEC);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
      if (((1 << v21) & 0xF3) == 0)
      {
        if (v21 == 2)
        {
          uint64_t v67 = sub_1C1515E2C();
          uint64_t v24 = v23;
          __n128 v25 = sub_1C0EE351C(0, 1, 1, MEMORY[0x1E4FBC860]);
          unint64_t v27 = v25[2];
          unint64_t v26 = v25[3];
          if (v27 >= v26 >> 1) {
            __n128 v25 = sub_1C0EE351C((void *)(v26 > 1), v27 + 1, 1, v25);
          }
          v25[2] = v27 + 1;
          uint64_t v28 = &v25[4 * v27];
          uint64_t v29 = 0x676E69646E617473;
          unint64_t v30 = 0xEB000000006C7255;
        }
        else
        {
          uint64_t v67 = sub_1C1515E2C();
          uint64_t v24 = v31;
          __n128 v25 = sub_1C0EE351C(0, 1, 1, MEMORY[0x1E4FBC860]);
          unint64_t v33 = v25[2];
          unint64_t v32 = v25[3];
          if (v33 >= v32 >> 1) {
            __n128 v25 = sub_1C0EE351C((void *)(v32 > 1), v33 + 1, 1, v25);
          }
          v25[2] = v33 + 1;
          uint64_t v28 = &v25[4 * v33];
          uint64_t v29 = 0x5574656B63617262;
          unint64_t v30 = 0xEA00000000006C72;
        }
        v28[4] = v29;
        v28[5] = v30;
        v28[6] = v67;
        v28[7] = v24;
        uint64_t v72 = v25;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    }
    id v34 = objc_msgSend(a1, sel_asSports);
    id v22 = &selRef_setSpacing_;
    if (v34)
    {
      id v35 = objc_msgSend(v34, sel_UMCCanonicalID);
      if (!v35)
      {
        swift_unknownObjectRelease();
        if (!a2) {
          goto LABEL_31;
        }
        goto LABEL_24;
      }
      uint64_t v36 = v35;
      uint64_t v37 = sub_1C151E62C();
      uint64_t v39 = v38;

      unint64_t v40 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v40 = sub_1C0EE351C(0, v40[2] + 1, 1, v40);
      }
      unint64_t v42 = v40[2];
      unint64_t v41 = v40[3];
      if (v42 >= v41 >> 1) {
        unint64_t v40 = sub_1C0EE351C((void *)(v41 > 1), v42 + 1, 1, v40);
      }
      v40[2] = v42 + 1;
      uint64_t v43 = &v40[4 * v42];
      v43[4] = 0x7463656A627573;
      v43[5] = 0xE700000000000000;
      v43[6] = v37;
      v43[7] = v39;
      swift_unknownObjectRelease();
      uint64_t v72 = v40;
    }
    if (!a2) {
      goto LABEL_31;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v15, 1, 1, v16, v18);
    sub_1C0091328((uint64_t)v15, (uint64_t (*)(void))sub_1BFF00BEC);
    id v22 = &selRef_setSpacing_;
    if (!a2) {
      goto LABEL_31;
    }
  }
LABEL_24:
  id v44 = [(id)swift_unknownObjectRetain() v22[202]];
  if (v44)
  {
    unint64_t v45 = v44;
    uint64_t v46 = sub_1C151E62C();
    uint64_t v48 = v47;

    uint64_t v49 = v72;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v49 = sub_1C0EE351C(0, v49[2] + 1, 1, v49);
    }
    unint64_t v51 = v49[2];
    unint64_t v50 = v49[3];
    if (v51 >= v50 >> 1) {
      uint64_t v49 = sub_1C0EE351C((void *)(v50 > 1), v51 + 1, 1, v49);
    }
    v49[2] = v51 + 1;
    unint64_t v52 = &v49[4 * v51];
    v52[4] = 0x65756761656CLL;
    v52[5] = 0xE600000000000000;
    v52[6] = v46;
    v52[7] = v48;
    swift_unknownObjectRelease();
    uint64_t v72 = v49;
  }
  else
  {
    swift_unknownObjectRelease();
  }
LABEL_31:
  if (a3)
  {
    id v53 = [(id)swift_unknownObjectRetain() v22[202]];
    if (v53)
    {
      id v54 = v53;
      uint64_t v55 = sub_1C151E62C();
      uint64_t v57 = v56;

      uint64_t v58 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v58 = sub_1C0EE351C(0, v58[2] + 1, 1, v58);
      }
      unint64_t v60 = v58[2];
      unint64_t v59 = v58[3];
      if (v60 >= v59 >> 1) {
        uint64_t v58 = sub_1C0EE351C((void *)(v59 > 1), v60 + 1, 1, v58);
      }
      v58[2] = v60 + 1;
      uint64_t v61 = (char *)&v58[4 * v60];
      strcpy(v61 + 32, "championship");
      v61[45] = 0;
      *((_WORD *)v61 + 23) = -5120;
      *((void *)v61 + 6) = v55;
      *((void *)v61 + 7) = v57;
      swift_unknownObjectRelease();
      uint64_t v72 = v58;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  sub_1C0B9D15C(0, qword_1EB8701F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  *(void *)(inited + 32) = 0x756F724764656566;
  *(void *)(inited + 40) = 0xE900000000000070;
  *(void *)(inited + 48) = v68;
  *(void *)(inited + 56) = a6;
  uint64_t v63 = FCFeedDescriptorConfiguration.description.getter();
  *(void *)(inited + 64) = 0xD000000000000011;
  *(void *)(inited + 72) = 0x80000001C160E020;
  *(void *)(inited + 80) = v63;
  *(void *)(inited + 88) = v64;
  swift_bridgeObjectRetain();
  sub_1C1049F9C(inited);
  uint64_t v65 = swift_bridgeObjectRetain();
  sub_1C1049F9C(v65);
  return v72;
}

uint64_t SportsDataVisualizationConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v35 = a2;
  sub_1C0B9BC40(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B9BD84(0, &qword_1EA1A4338, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B9BCA8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  id v34 = a1;
  uint64_t v12 = v9;
  LOBYTE(v37) = 0;
  uint64_t v13 = sub_1C152069C();
  uint64_t v16 = v15;
  uint64_t v33 = v13;
  sub_1C0B9BC74(0);
  uint64_t v17 = v8;
  uint64_t v19 = v18;
  LOBYTE(v37) = 1;
  sub_1C0B9D2BC((unint64_t *)&unk_1EB863F50, sub_1C0B9BC74);
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v31 = v11;
  unint64_t v32 = 0;
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
  {
    sub_1C0091328((uint64_t)v6, (uint64_t (*)(void))sub_1C0B9BC40);
    int v21 = 0;
  }
  else
  {
    sub_1C151948C();
    uint64_t v22 = v19;
    int v21 = v37;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v22);
  }
  uint64_t v24 = v31;
  uint64_t v23 = v32;
  sub_1BFEBC4B4();
  char v36 = 2;
  sub_1BFE38978((unint64_t *)&qword_1EB87A020);
  swift_unknownObjectRetain();
  sub_1C15206EC();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v17);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  else
  {
    unint64_t v32 = v21;
    __n128 v25 = v37;
    sub_1C0B9D304(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
    char v36 = 3;
    sub_1BFD8B314((unint64_t *)&qword_1EB879DA0, (void (*)(void))sub_1C0082FE0);
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    unint64_t v26 = v37;
    sub_1C0B9D15C(0, &qword_1EB8701A8, MEMORY[0x1E4FBB320]);
    char v36 = 4;
    sub_1C0B9BCFC(&qword_1EA1A4340, (void (*)(void))sub_1C03711CC);
    uint64_t v31 = v26;
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v17);
    unint64_t v27 = v37;
    swift_bridgeObjectRetain();
    uint64_t v28 = v32;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)v34;
    unint64_t v30 = v35;
    *id v35 = v33;
    v30[1] = v16;
    v30[2] = (uint64_t)v28;
    v30[3] = (uint64_t)v25;
    v30[4] = (uint64_t)v31;
    v30[5] = (uint64_t)v27;
    __swift_destroy_boxed_opaque_existential_1(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t SportsDataVisualizationConfig.encode(to:)(void *a1)
{
  sub_1C0B9BC40(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v26 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B9BD84(0, (unint64_t *)&unk_1EB8701E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = v1[2];
  uint64_t v24 = v1[3];
  uint64_t v25 = v10;
  uint64_t v11 = v1[4];
  uint64_t v22 = v1[5];
  uint64_t v23 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B9BCA8();
  sub_1C1520F0C();
  LOBYTE(v29) = 0;
  uint64_t v12 = v9;
  uint64_t v13 = v27;
  sub_1C15207CC();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  uint64_t v17 = v22;
  uint64_t v18 = v7;
  uint64_t v19 = swift_unknownObjectRetain();
  uint64_t v20 = v26;
  sub_1C09D3C50(v19, v26);
  LOBYTE(v29) = 1;
  sub_1C0B9BC74(0);
  sub_1C0B9D2BC((unint64_t *)&unk_1EB863F40, sub_1C0B9BC74);
  sub_1C152078C();
  sub_1C0091328(v20, (uint64_t (*)(void))sub_1C0B9BC40);
  uint64_t v29 = v16;
  char v28 = 2;
  sub_1BFEBC4B4();
  sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
  sub_1C152080C();
  uint64_t v29 = v15;
  char v28 = 3;
  sub_1C0B9D304(0, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
  sub_1BFD8B314((unint64_t *)&qword_1EB85C3C0, (void (*)(void))sub_1C0083014);
  sub_1C152080C();
  uint64_t v29 = v17;
  char v28 = 4;
  sub_1C0B9D15C(0, &qword_1EB8701A8, MEMORY[0x1E4FBB320]);
  sub_1C0B9BCFC((unint64_t *)&qword_1EB8701B0, (void (*)(void))sub_1C0370280);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v6);
}

uint64_t sub_1C0B9AEF8(unsigned __int8 *a1, char *a2)
{
  return sub_1C147B990(*a1, *a2);
}

uint64_t sub_1C0B9AF04()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B9B014()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0B9B104()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B9B210@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0B9D0C8();
  *a1 = result;
  return result;
}

void sub_1C0B9B240(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000007265;
  uint64_t v3 = 0x696669746E656469;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x54676E696B636162;
      unint64_t v2 = 0xEA00000000006761;
      goto LABEL_3;
    case 2:
      *a1 = 0x726F7463656C6573;
      a1[1] = 0xE900000000000073;
      break;
    case 3:
      *a1 = 0x736E6F6974706FLL;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x6574656D61726170;
      a1[1] = 0xEA00000000007372;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C0B9B30C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x54676E696B636162;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      uint64_t result = 0x6574656D61726170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0B9B3C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0B9D0C8();
  *a1 = result;
  return result;
}

uint64_t sub_1C0B9B3F0(uint64_t a1)
{
  unint64_t v2 = sub_1C0B9BCA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B9B42C(uint64_t a1)
{
  unint64_t v2 = sub_1C0B9BCA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0B9B468@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsDataVisualizationConfig.init(from:)(a1, a2);
}

uint64_t sub_1C0B9B480(void *a1)
{
  return SportsDataVisualizationConfig.encode(to:)(a1);
}

uint64_t SportsDataVisualizationConfig.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_identifier);
    sub_1C151E62C();

    sub_1C1520DDC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1C1520DDC();
  }
  uint64_t result = sub_1C1520DCC();
  uint64_t v5 = *(void *)(v2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = v2 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 32;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SportsDataVisualizationConfig.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B9B670()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B9B6D8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0B9B740@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)&double v11 = MEMORY[0x1F4188790](v9).n128_u64[0];
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v14 = *a1;
  id v15 = objc_msgSend(v3, sel_identifier, v11);
  if (!v15)
  {
    sub_1C151E62C();
    id v15 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v16 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v15);

  sub_1C1515F1C();
  id v17 = objc_allocWithZone(MEMORY[0x1E4F29088]);
  uint64_t v18 = (void *)sub_1C1515E9C();
  id v19 = objc_msgSend(v17, sel_initWithURL_resolvingAgainstBaseURL_, v18, 1);

  if (((1 << v14) & 0xF3) != 0)
  {
    if (!v19)
    {
LABEL_5:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v9);
    }
  }
  else
  {
    if (v14 == 2)
    {
      if (!v19) {
        goto LABEL_5;
      }
    }
    else if (!v19)
    {
      goto LABEL_5;
    }
    sub_1C0B9D304(0, &qword_1EB87A570, MEMORY[0x1E4F26EA0], MEMORY[0x1E4FBBE00]);
    sub_1C15155DC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
    id v21 = v19;
    sub_1C15155AC();
    uint64_t v22 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setQueryItems_, v22);
  }
  id v23 = objc_msgSend(v19, sel_URL);
  if (v23)
  {
    id v24 = v23;
    sub_1C1515F1C();

    uint64_t v25 = 0;
    id v19 = v24;
  }
  else
  {
    uint64_t v25 = 1;
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v25, 1, v9);
  return sub_1C0B9D254((uint64_t)v8, a2, (uint64_t (*)(void))sub_1BFF00BEC);
}

void sub_1C0B9BC40(uint64_t a1)
{
}

void sub_1C0B9BC74(uint64_t a1)
{
}

unint64_t sub_1C0B9BCA8()
{
  unint64_t result = qword_1EB870180;
  if (!qword_1EB870180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870180);
  }
  return result;
}

uint64_t sub_1C0B9BCFC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0B9D15C(255, &qword_1EB8701A8, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0B9BD84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0B9BCA8();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationConfig.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t _s8NewsFeed29SportsDataVisualizationConfigV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v19 = a1[5];
  unint64_t v6 = (void *)a2[2];
  uint64_t v5 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v7 = a2[5];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    id v9 = objc_msgSend(v2, sel_identifier);
    uint64_t v10 = sub_1C151E62C();
    uint64_t v12 = v11;

    if (!v6)
    {
      if (!v12) {
        goto LABEL_19;
      }
      goto LABEL_17;
    }
  }
  else
  {
    if (!v6) {
      goto LABEL_19;
    }
    uint64_t v12 = 0;
    uint64_t v10 = 0;
  }
  id v13 = objc_msgSend(v6, sel_identifier);
  uint64_t v14 = sub_1C151E62C();
  uint64_t v16 = v15;

  if (!v12)
  {
    if (!v16) {
      goto LABEL_19;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v16) {
    goto LABEL_17;
  }
  if (v10 == v14 && v12 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return 0;
    }
  }
LABEL_19:
  if ((sub_1BFEFAE14(v4, v5) & 1) == 0 || (sub_1C00E0650(v3, v8) & 1) == 0) {
    return 0;
  }
  return sub_1C00E06A4(v19, v7);
}

unint64_t sub_1C0B9BFB8()
{
  unint64_t result = qword_1EA1A4348;
  if (!qword_1EA1A4348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4348);
  }
  return result;
}

uint64_t destroy for SportsDataVisualizationConfig()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SportsDataVisualizationConfig(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SportsDataVisualizationConfig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationConfig()
{
  return &type metadata for SportsDataVisualizationConfig;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B9C2CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationConfig.CodingKeys()
{
  return &type metadata for SportsDataVisualizationConfig.CodingKeys;
}

unint64_t sub_1C0B9C308()
{
  unint64_t result = qword_1EA1A4350;
  if (!qword_1EA1A4350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4350);
  }
  return result;
}

unint64_t sub_1C0B9C360()
{
  unint64_t result = qword_1EB870198;
  if (!qword_1EB870198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870198);
  }
  return result;
}

unint64_t sub_1C0B9C3B8()
{
  unint64_t result = qword_1EB870190;
  if (!qword_1EB870190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870190);
  }
  return result;
}

void *sub_1C0B9C40C(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for FormatOption();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v106 = (uint64_t)&v92 - v7;
  sub_1C0181BEC(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v92 - v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v108 = (char *)&v92 - v16;
  uint64_t v17 = a1[1];
  if (v17)
  {
    uint64_t v104 = v14;
    uint64_t v92 = v3;
    uint64_t v93 = v5;
    unint64_t v96 = v15;
    uint64_t v98 = *a1;
    uint64_t v18 = (void *)a1[2];
    uint64_t v19 = a1[3];
    uint64_t v21 = a1[4];
    uint64_t v20 = a1[5];
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1C0B9D304(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C152A660;
    sub_1C0B9D304(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v22);
    unint64_t v23 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v113 = *(void *)(v9 + 72);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C1529AE0;
    unint64_t v112 = v23;
    uint64_t v25 = (void *)(v24 + v23);
    uint64_t v107 = v12;
    uint64_t v94 = v18;
    uint64_t v95 = v17;
    if (v18)
    {
      uint64_t v26 = v18;
      swift_unknownObjectRetain_n();
      sub_1C025C670(v98, v17);
      id v27 = objc_msgSend(v18, sel_identifier);
      uint64_t v28 = sub_1C151E62C();
      uint64_t v30 = v29;

      long long v119 = xmmword_1C152C800;
      long long v120 = 0u;
      long long v121 = 0u;
      long long v122 = 0u;
      char v123 = 0;
      *(void *)&long long v114 = v28;
      *((void *)&v114 + 1) = v30;
      *(void *)&long long v115 = v26;
      BYTE8(v115) = 0;
      *(void *)&long long v117 = 0;
      *((void *)&v117 + 1) = 0xE000000000000000;
      *(void *)&long long v116 = 0;
      BYTE8(v116) = 0;
      *(void *)&long long v118 = 0;
      *((void *)&v118 + 1) = MEMORY[0x1E4FBC870];
      sub_1C043544C(6775124, 0xE300000000000000, (uint64_t)&v114, v25);
      uint64_t v12 = v107;
      swift_unknownObjectRelease();
    }
    else
    {
      char v123 = 0;
      long long v121 = 0u;
      long long v122 = 0u;
      long long v119 = 0u;
      long long v120 = 0u;
      long long v117 = 0u;
      long long v118 = 0u;
      long long v115 = 0u;
      long long v116 = 0u;
      long long v114 = 0u;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C043544C(6775124, 0xE300000000000000, (uint64_t)&v114, v25);
    }
    uint64_t v33 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v34 = *(void *)(v33 - 8);
    long long v110 = *(void (**)(void *, void, uint64_t))(v34 + 56);
    uint64_t v111 = v33;
    uint64_t v109 = v34 + 56;
    v110(v25, 0, 1);
    sub_1C09BCFA4(0x20676E696B636142, 0xEB00000000676154, 0, 0, v24, v124);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v35 = inited;
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v35 + 64) = &off_1F1BDEC90;
    uint64_t v36 = swift_allocObject();
    *(void *)(v35 + 32) = v36;
    *(void *)(v36 + 48) = v125;
    long long v37 = v124[1];
    *(_OWORD *)(v36 + 16) = v124[0];
    *(_OWORD *)(v36 + 32) = v37;
    int64_t v38 = *(void *)(v20 + 16);
    uint64_t v39 = MEMORY[0x1E4FBC860];
    uint64_t v99 = v21;
    uint64_t v97 = v20;
    unint64_t v40 = v108;
    uint64_t v105 = v19;
    if (v38)
    {
      *(void *)&long long v114 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C05F62D0(0, v38, 0);
      uint64_t v39 = v114;
      uint64_t v104 = (void *)type metadata accessor for FormatInspectionItem.Value(0);
      uint64_t v41 = *(v104 - 1);
      unint64_t v42 = *(void (**)(void *, void, uint64_t, void *))(v41 + 56);
      uint64_t v102 = v41 + 56;
      unint64_t v103 = v42;
      unint64_t v101 = v40 + 2;
      uint64_t v43 = (uint64_t *)(v20 + 56);
      do
      {
        uint64_t v108 = (char *)v38;
        uint64_t v44 = *(v43 - 3);
        uint64_t v45 = *(v43 - 2);
        uint64_t v46 = *v43;
        uint64_t v47 = v111;
        uint64_t v48 = (void *)((char *)v40 + *(int *)(v111 + 24));
        *uint64_t v48 = *(v43 - 1);
        v48[1] = v46;
        uint64_t v49 = v104;
        swift_storeEnumTagMultiPayload();
        v103(v48, 0, 1, v49);
        void *v40 = v44;
        v40[1] = v45;
        unint64_t v50 = v101;
        *unint64_t v101 = 0;
        v50[1] = 0;
        unint64_t v51 = (char *)v40 + *(int *)(v47 + 28);
        *(void *)unint64_t v51 = 0;
        *((void *)v51 + 1) = 0;
        v51[16] = -1;
        ((void (*)(void *, void, uint64_t, uint64_t))v110)(v40, 0, 1, v47);
        *(void *)&long long v114 = v39;
        unint64_t v53 = *(void *)(v39 + 16);
        unint64_t v52 = *(void *)(v39 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v53 >= v52 >> 1)
        {
          sub_1C05F62D0(v52 > 1, v53 + 1, 1);
          uint64_t v39 = v114;
        }
        v43 += 4;
        *(void *)(v39 + 16) = v53 + 1;
        sub_1C0B9D254((uint64_t)v40, v39 + v112 + v53 * v113, (uint64_t (*)(void))sub_1C0181BEC);
        int64_t v38 = (int64_t)(v108 - 1);
      }
      while (v108 != (char *)1);
      swift_bridgeObjectRelease();
      uint64_t v19 = v105;
      uint64_t v21 = v99;
      uint64_t v12 = v107;
    }
    sub_1C09BCFA4(0x6574656D61726150, 0xEA00000000007372, 0, 0, v39, v126);
    swift_bridgeObjectRelease();
    uint64_t v54 = inited;
    *(void *)(inited + 96) = &type metadata for FormatInspectionGroup;
    *(void *)(v54 + 104) = &off_1F1BDEC90;
    uint64_t v55 = swift_allocObject();
    *(void *)(v54 + 72) = v55;
    *(void *)(v55 + 48) = v127;
    long long v56 = v126[1];
    *(_OWORD *)(v55 + 16) = v126[0];
    *(_OWORD *)(v55 + 32) = v56;
    int64_t v57 = *(void *)(v21 + 16);
    uint64_t v58 = MEMORY[0x1E4FBC860];
    unint64_t v59 = v96;
    if (v57)
    {
      *(void *)&long long v114 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C05F62D0(0, v57, 0);
      uint64_t v60 = v21 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
      uint64_t v61 = *(void *)(v92 + 72);
      unint64_t v62 = v93;
      do
      {
        uint64_t v63 = v106;
        sub_1C0B9D1AC(v60, v106, (uint64_t (*)(void))type metadata accessor for FormatOption);
        sub_1C0B9D1AC(v63, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FormatOption);
        sub_1C0AF5D04(v62, v12);
        ((void (*)(uint64_t *, void, uint64_t, uint64_t))v110)(v12, 0, 1, v111);
        sub_1C0091328(v63, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v58 = v114;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F62D0(0, *(void *)(v58 + 16) + 1, 1);
          uint64_t v58 = v114;
        }
        unint64_t v65 = *(void *)(v58 + 16);
        unint64_t v64 = *(void *)(v58 + 24);
        if (v65 >= v64 >> 1)
        {
          sub_1C05F62D0(v64 > 1, v65 + 1, 1);
          uint64_t v58 = v114;
        }
        *(void *)(v58 + 16) = v65 + 1;
        uint64_t v66 = v58 + v112 + v65 * v113;
        uint64_t v12 = v107;
        sub_1C0B9D254((uint64_t)v107, v66, (uint64_t (*)(void))sub_1C0181BEC);
        v60 += v61;
        --v57;
      }
      while (v57);
      swift_bridgeObjectRelease();
    }
    sub_1C09BCFA4(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v58, v128);
    swift_bridgeObjectRelease();
    uint64_t v67 = inited;
    *(void *)(inited + 136) = &type metadata for FormatInspectionGroup;
    *(void *)(v67 + 144) = &off_1F1BDEC90;
    uint64_t v68 = swift_allocObject();
    *(void *)(v67 + 112) = v68;
    *(void *)(v68 + 48) = v129;
    long long v69 = v128[1];
    *(_OWORD *)(v68 + 16) = v128[0];
    *(_OWORD *)(v68 + 32) = v69;
    int64_t v70 = *(void *)(v19 + 16);
    uint64_t v71 = MEMORY[0x1E4FBC860];
    if (v70)
    {
      *(void *)&long long v114 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C05F62D0(0, v70, 0);
      uint64_t v71 = v114;
      unint64_t result = (void *)sub_1BFD44A04(v19);
      int64_t v73 = (int64_t)result;
      uint64_t v106 = v19 + 56;
      int v75 = v74 & 1;
      uint64_t v104 = v59 + 2;
      while ((v73 & 0x8000000000000000) == 0 && v73 < 1 << *(unsigned char *)(v19 + 32))
      {
        if (((*(void *)(v106 + (((unint64_t)v73 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v73) & 1) == 0) {
          goto LABEL_34;
        }
        if (*(_DWORD *)(v19 + 36) != v72) {
          goto LABEL_35;
        }
        LODWORD(v107) = v75;
        uint64_t v108 = (char *)v72;
        uint64_t v76 = (uint64_t *)(*(void *)(v19 + 48) + 16 * v73);
        uint64_t v77 = v59;
        uint64_t v78 = *v76;
        uint64_t v79 = v76[1];
        uint64_t v80 = v111;
        unsigned int v81 = (void *)((char *)v77 + *(int *)(v111 + 24));
        *unsigned int v81 = 0;
        v81[1] = 0xE000000000000000;
        uint64_t v82 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
        *uint64_t v77 = v78;
        v77[1] = v79;
        uint64_t v83 = v104;
        *uint64_t v104 = 0;
        v83[1] = 0;
        unint64_t v84 = (char *)v77 + *(int *)(v80 + 28);
        *(void *)unint64_t v84 = 0;
        *((void *)v84 + 1) = 0;
        v84[16] = -1;
        ((void (*)(void *, void, uint64_t, uint64_t))v110)(v77, 0, 1, v80);
        *(void *)&long long v114 = v71;
        unint64_t v86 = *(void *)(v71 + 16);
        unint64_t v85 = *(void *)(v71 + 24);
        swift_bridgeObjectRetain();
        if (v86 >= v85 >> 1)
        {
          sub_1C05F62D0(v85 > 1, v86 + 1, 1);
          uint64_t v71 = v114;
        }
        *(void *)(v71 + 16) = v86 + 1;
        sub_1C0B9D254((uint64_t)v77, v71 + v112 + v86 * v113, (uint64_t (*)(void))sub_1C0181BEC);
        uint64_t v19 = v105;
        unint64_t result = (void *)sub_1BFD43BF8(v73, (int)v108, v107 & 1, v105);
        int64_t v73 = (int64_t)result;
        int v75 = v87 & 1;
        --v70;
        unint64_t v59 = v77;
        if (!v70)
        {
          sub_1C0153754((uint64_t)result, v72, v75);
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    else
    {
LABEL_32:
      uint64_t v88 = (void *)inited;
      sub_1C09BCFA4(0x726F7463656C6553, 0xE900000000000073, 0, 0, v71, &v114);
      swift_bridgeObjectRelease();
      v88[22] = &type metadata for FormatInspectionGroup;
      v88[23] = &off_1F1BDEC90;
      uint64_t v89 = swift_allocObject();
      v88[19] = v89;
      *(void *)(v89 + 48) = v116;
      long long v90 = v115;
      *(_OWORD *)(v89 + 16) = v114;
      *(_OWORD *)(v89 + 32) = v90;
      uint64_t v91 = sub_1C131B79C((uint64_t)v88);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      sub_1C025EF94(v98, v95);
      return v91;
    }
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v31);
  }
  return result;
}

uint64_t sub_1C0B9CF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!*(void *)(a4 + 8))
  {
    if (!a5) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  uint64_t v8 = 14906;
  unint64_t v10 = 0xE200000000000000;
  sub_1C151E80C();
  if (a5)
  {
LABEL_3:
    id v6 = objc_msgSend(a5, sel_identifier, v8, v10);
    sub_1C151E62C();

    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
LABEL_5:
  uint64_t v9 = sub_1C1515E2C();
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C0B9D0C8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0B9D114()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0B9D15C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for SportsConfigResourceParameter);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0B9D1AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0B9D214()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B9D254(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0B9D2BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0B9D304(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t static FormatArraySubscript.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  type metadata accessor for FormatArraySubscript();
  return sub_1C151E5CC() & 1;
}

uint64_t type metadata accessor for FormatArraySubscript()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C0B9D3F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  id v6 = (char *)a4 + *(int *)(type metadata accessor for FormatArraySubscript() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t FormatArraySubscript.index.getter()
{
  return *(void *)v0;
}

uint64_t FormatArraySubscript.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t sub_1C0B9D4C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return FormatArraySubscript.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C0B9D4E0(void *a1, uint64_t a2)
{
  return FormatArraySubscript.encode(to:)(a1, a2);
}

uint64_t FormatArrayIndex.index.getter()
{
  return *(void *)v0;
}

BOOL static FormatArrayIndex.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C0B9D514(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0B9D550(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0B9D5D0(uint64_t a1)
{
  unint64_t result = sub_1C0B9D5F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0B9D5F8()
{
  unint64_t result = qword_1EA1A4358;
  if (!qword_1EA1A4358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4358);
  }
  return result;
}

unint64_t sub_1C0B9D64C(void *a1)
{
  a1[1] = sub_1C08AAE7C();
  a1[2] = sub_1C08F2178();
  unint64_t result = sub_1C0B9D684();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0B9D684()
{
  unint64_t result = qword_1EA1A4360[0];
  if (!qword_1EA1A4360[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A4360);
  }
  return result;
}

uint64_t sub_1C0B9D6D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatArrayIndex.init(from:)(a1, a2);
}

uint64_t sub_1C0B9D6F0(void *a1)
{
  return FormatArrayIndex.encode(to:)(a1);
}

uint64_t sub_1C0B9D708(void *a1, void *a2)
{
  return static FormatArraySubscript.== infix(_:_:)(a1, a2);
}

uint64_t sub_1C0B9D714()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0B9D7B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_1C0B9D8A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

void *sub_1C0B9D8DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1C0B9D94C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1C0B9D9BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1C0B9DA2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1C0B9DA9C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1C0B9DC18(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C0B9DE4CLL);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 8] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

ValueMetadata *type metadata accessor for FormatArrayIndex()
{
  return &type metadata for FormatArrayIndex;
}

uint64_t dispatch thunk of PuzzleStatsStateStoreType.puzzleStatsState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleStatsStateStoreType.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleStatsStateStoreType.update(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C0B9DEC0()
{
  return sub_1C151873C();
}

uint64_t FormatInjuryReportDataVisualization.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatInjuryReportDataVisualization.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatInjuryReportDataVisualization.eventIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatInjuryReportDataVisualization.tagIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatInjuryReportDataVisualization.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatInjuryReportDataVisualization.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatInjuryReportDataVisualization.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatInjuryReportDataVisualization.properties.modify())()
{
  return j__swift_endAccess;
}

void *FormatInjuryReportDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v12 = (void *)swift_allocObject();
  void v12[2] = a1;
  v12[3] = a2;
  void v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

void *FormatInjuryReportDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1C0B9E204()
{
  uint64_t result = 0x656449746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E656449676174;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0B9E2B4(uint64_t a1)
{
  unint64_t v2 = sub_1C0B9E6AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0B9E2F0(uint64_t a1)
{
  unint64_t v2 = sub_1C0B9E6AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatInjuryReportDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatInjuryReportDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatInjuryReportDataVisualization.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0B9ED5C(0, &qword_1EA1A43E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  size_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B9E6AC();
  sub_1C1520F0C();
  char v16 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v16 = 1;
    sub_1C15207CC();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 48);
    if (*(void *)(v11 + 16))
    {
      char v17 = 2;
      swift_bridgeObjectRetain_n();
      int v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      unsigned int v15 = v12;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1C0B9ECE8();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v13 = *(void *)(v3 + 56);
    if (*(void *)(v13 + 16))
    {
      char v17 = 3;
      unsigned int v15 = (void *)v13;
      sub_1C0B9ECE8();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0B9E6AC()
{
  unint64_t result = qword_1EA1A43F0;
  if (!qword_1EA1A43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A43F0);
  }
  return result;
}

uint64_t FormatInjuryReportDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatInjuryReportDataVisualization.init(from:)(a1);
  return v2;
}

void *FormatInjuryReportDataVisualization.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  uint64_t v41 = v2;
  uint64_t v42 = v5;
  sub_1C00FC8DC();
  uint64_t v40 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B9ED5C(0, &qword_1EA1A4400, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v39 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unsigned int v15 = (char *)&v35 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0B9E6AC();
  char v16 = v41;
  sub_1C1520EBC();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v17 = v11;
    uint64_t v41 = a1;
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    char v48 = 0;
    uint64_t v20 = v15;
    v3[2] = sub_1C152069C();
    void v3[3] = v21;
    char v47 = 1;
    v3[4] = sub_1C152069C();
    v3[5] = v23;
    char v46 = 2;
    char v24 = sub_1C152071C();
    if (v24)
    {
      char v43 = 2;
      sub_1C0B9EDC0(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
      uint64_t v25 = v9;
      sub_1C15206EC();
      uint64_t v26 = v19;
      uint64_t v35 = v25;
      unsigned int v15 = v20;
      uint64_t v27 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v35);
    }
    else
    {
      uint64_t v27 = MEMORY[0x1E4FBC870];
      uint64_t v26 = v19;
    }
    v3[6] = v27;
    char v45 = 3;
    uint64_t v28 = v15;
    if (sub_1C152071C())
    {
      char v44 = 3;
      sub_1C0B9EDC0(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
      uint64_t v29 = v38;
      sub_1C15206EC();
      uint64_t v30 = v28;
      uint64_t v31 = sub_1C1517E5C();
      uint64_t v32 = v26;
      uint64_t v33 = v31;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v32);
      uint64_t v34 = v18;
      a1 = v41;
    }
    else
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      uint64_t v34 = v18;
      a1 = v41;
      uint64_t v30 = v15;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v13);
    v3[7] = v33;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void *sub_1C0B9EC60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatInjuryReportDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0B9ECB8(void *a1)
{
  return FormatInjuryReportDataVisualization.encode(to:)(a1);
}

uint64_t sub_1C0B9ECDC(void **a1, void **a2)
{
  return static FormatInjuryReportDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1C0B9ECE8()
{
  unint64_t result = qword_1EA1A43F8;
  if (!qword_1EA1A43F8)
  {
    sub_1C0B9ED5C(255, &qword_1EA1A43E8, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A43F8);
  }
  return result;
}

void sub_1C0B9ED5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0B9E6AC();
    unint64_t v7 = a3(a1, &type metadata for FormatInjuryReportDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0B9EDC0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B9EE08(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0B9EDC0(&qword_1EA19CD10, a2, (void (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization);
  a1[2] = sub_1C0B9EDC0(&qword_1EA19CD40, v3, (void (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization);
  uint64_t result = sub_1C0B9EDC0(&qword_1EA1A4408, v4, (void (*)(uint64_t))type metadata accessor for FormatInjuryReportDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatInjuryReportDataVisualization()
{
  return self;
}

uint64_t sub_1C0B9EED8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0B9EF28@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatInjuryReportDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatInjuryReportDataVisualization);
}

uint64_t dispatch thunk of FormatInjuryReportDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatInjuryReportDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for FormatInjuryReportDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0B9F098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInjuryReportDataVisualization.CodingKeys()
{
  return &type metadata for FormatInjuryReportDataVisualization.CodingKeys;
}

unint64_t sub_1C0B9F0D4()
{
  unint64_t result = qword_1EA1A4410;
  if (!qword_1EA1A4410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4410);
  }
  return result;
}

unint64_t sub_1C0B9F12C()
{
  unint64_t result = qword_1EA1A4418;
  if (!qword_1EA1A4418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4418);
  }
  return result;
}

unint64_t sub_1C0B9F184()
{
  unint64_t result = qword_1EA1A4420;
  if (!qword_1EA1A4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4420);
  }
  return result;
}

void sub_1C0B9F1D8()
{
  qword_1EB93C290 = 0x406E000000000000;
}

uint64_t LayeredMediaLayerRenderer.shouldShow(_:for:)(uint64_t a1, uint64_t a2)
{
  sub_1C0199430(a1, (uint64_t)v24);
  double v4 = *(double *)(a2 + 16);
  uint64_t v5 = __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_1C0199430((uint64_t)v24, (uint64_t)v25);
  LODWORD(a2) = sub_1C019948C((uint64_t)v25);
  uint64_t v6 = sub_1C0199498((uint64_t)v25);
  BOOL v7 = a2 == 1;
  uint64_t v8 = (char *)(v6 + 16);
  uint64_t v9 = (uint64_t *)(v6 + 48);
  uint64_t v10 = (uint64_t *)(v6 + 56);
  uint64_t v11 = (uint64_t *)(v6 + 64);
  uint64_t v12 = (uint64_t *)(v6 + 72);
  uint64_t v13 = (double *)(v6 + 8);
  if (a2 == 1)
  {
    uint64_t v13 = (double *)(v6 + 16);
    uint64_t v8 = (char *)(v6 + 24);
  }
  else
  {
    uint64_t v12 = (uint64_t *)(v6 + 64);
    uint64_t v11 = (uint64_t *)(v6 + 56);
    uint64_t v10 = (uint64_t *)(v6 + 48);
    uint64_t v9 = (uint64_t *)(v6 + 40);
  }
  uint64_t v14 = *v12;
  uint64_t v15 = *v11;
  uint64_t v16 = *v10;
  uint64_t v17 = *v9;
  char v18 = *v8;
  if (v7) {
    uint64_t v19 = (double *)(v6 + 32);
  }
  else {
    uint64_t v19 = (double *)(v6 + 24);
  }
  uint64_t v20 = *v5;
  if (v7) {
    uint64_t v21 = (unsigned char *)(v6 + 40);
  }
  else {
    uint64_t v21 = (unsigned char *)(v6 + 32);
  }
  if ((v18 & 1) == 0 && *v13 > v4 || (*v21 & 1) == 0 && v4 > *v19) {
    return 0;
  }
  if (v16)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1C11B884C(v17, v16, v20) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (v14)
  {
    char v23 = sub_1C11B89BC(v15, v14, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t LayeredMediaLayerRenderer.offscreenRender(_:on:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C01995F4(a2, (uint64_t)v38);
  long long v4 = *(_OWORD *)(a3 + 16);
  v31[9] = *(_OWORD *)a3;
  long long v32 = v4;
  uint64_t v33 = *(void *)(a3 + 32);
  sub_1C01995F4((uint64_t)v38, (uint64_t)v39);
  int v5 = sub_1C0BA14F4((uint64_t)v39);
  uint64_t v6 = (id *)sub_1C0BA1500((uint64_t)v39);
  if (v5 == 1)
  {
    BOOL v7 = (unint64_t *)&unk_1EB86F000;
    uint64_t v8 = &qword_1EB85C8E8;
    uint64_t v9 = (unint64_t *)&qword_1EB85DFA8;
  }
  else
  {
    BOOL v7 = (unint64_t *)&unk_1EA1A4428;
    uint64_t v8 = &qword_1EB85C8E0;
    uint64_t v9 = (unint64_t *)&unk_1EB85DF90;
  }
  sub_1C0BA1570(v7, v8, v9);
  id v10 = *v6;
  objc_msgSend(v10, sel_setFrame_, 0.0, 0.0, v32);

  sub_1C01995F4((uint64_t)v38, (uint64_t)v31);
  LODWORD(v10) = sub_1C0BA14F4((uint64_t)v31);
  uint64_t v11 = sub_1C0BA1500((uint64_t)v31);
  uint64_t v12 = *(void **)v11;
  uint64_t v13 = *(void **)(v11 + 8);
  if (v10 == 1)
  {
    long long v15 = *(_OWORD *)(v11 + 16);
    long long v14 = *(_OWORD *)(v11 + 32);
    long long v16 = *(_OWORD *)(v11 + 64);
    v36[0] = *(_OWORD *)(v11 + 48);
    v36[1] = v16;
    long long v17 = *(_OWORD *)(v11 + 80);
    long long v18 = *(_OWORD *)(v11 + 112);
    v36[3] = *(_OWORD *)(v11 + 96);
    v37[0] = v18;
    *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)(v11 + 121);
    v36[2] = v17;
    long long v34 = v15;
    long long v35 = v14;
  }
  else
  {
    uint64_t v21 = *(void *)(v11 + 24);
    char v22 = *(unsigned char *)(v11 + 32);
    uint64_t v23 = *(void *)(v11 + 40);
    char v24 = *(unsigned char *)(v11 + 48);
    uint64_t v25 = *(void *)(v11 + 104);
    char v26 = *(unsigned char *)(v11 + 112);
    uint64_t v27 = *(void *)(v11 + 120);
    char v28 = *(unsigned char *)(v11 + 128);
    *(void *)&long long v34 = *(void *)(v11 + 16);
    *((void *)&v34 + 1) = v21;
    LOBYTE(v35) = v22;
    *((void *)&v35 + 1) = v23;
    LOBYTE(v36[0]) = v24;
    *(_OWORD *)((char *)v36 + 8) = *(_OWORD *)(v11 + 56);
    *(_OWORD *)((char *)&v36[1] + 8) = *(_OWORD *)(v11 + 72);
    *(_OWORD *)((char *)&v36[2] + 8) = *(_OWORD *)(v11 + 88);
    *((void *)&v36[3] + 1) = v25;
    LOBYTE(v37[0]) = v26;
    *((void *)&v37[0] + 1) = v27;
    LOBYTE(v37[1]) = v28;
  }
  MEMORY[0x1F4188790](v11);
  sub_1BFC8157C(0, (unint64_t *)&qword_1EB8714D0, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  id v19 = v12;
  id v20 = v13;
  uint64_t v29 = sub_1C151911C();

  return v29;
}

uint64_t LayeredMediaLayerRenderer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return v0;
}

uint64_t LayeredMediaLayerRenderer.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

void sub_1C0B9F6FC(void (*a1)(id), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = *(void *)a6;
  long long v18 = *(_OWORD *)(a7 + 16);
  long long v32 = *(_OWORD *)a7;
  long long v33 = v18;
  uint64_t v34 = *(void *)(a7 + 32);
  swift_retain();
  uint64_t v19 = sub_1C0B9FA80(v17, (double *)&v32);
  if (v19)
  {
    uint64_t v20 = v19;
    objc_msgSend(a8, sel_setContentsGravity_, *MEMORY[0x1E4F3A3C0]);
    objc_msgSend(a8, sel_setContentsScale_, *(double *)(a7 + 32));
    id v30 = a8;
    uint64_t v21 = (void *)(a5 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(a5 + 136), *(void *)(a5 + 160));
    *((void *)&v33 + 1) = type metadata accessor for LayeredMediaLayerProcessorRequest();
    uint64_t v34 = sub_1C0BA2208(&qword_1EB86F400, (void (*)(uint64_t))type metadata accessor for LayeredMediaLayerProcessorRequest);
    *(void *)&long long v32 = v20;
    swift_retain();
    char v22 = (void *)sub_1C151A52C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    if (v22)
    {
      swift_release();
      a1(objc_msgSend(v30, sel_setImage_, v22));
    }
    else
    {
      uint64_t v26 = qword_1EB85EF70;
      swift_retain();
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v27 = (void *)qword_1EB93C2A8;
      char v28 = (void *)swift_allocObject();
      v28[2] = v30;
      v28[3] = sub_1C005A48C;
      v28[4] = v16;
      v28[5] = a3;
      v28[6] = a4;
      id v29 = v30;
      swift_retain();
      sub_1C0BA17F0(v21, v20, v27, (uint64_t)sub_1C0BA1668, (uint64_t)v28, v29);
      swift_release();
      swift_release();
    }
    sub_1C0BA1D94(*(void *)(a6 + 88), *(unsigned char *)(a6 + 96) & 1, *(void *)(a6 + 104), *(unsigned char *)(a6 + 112), a7, a9);
    swift_release();
  }
  else
  {
    swift_release();
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v23 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    sub_1C0BA1610();
    char v24 = (void *)swift_allocError();
    *uint64_t v25 = 1;
    a3();
  }
}

uint64_t sub_1C0B9FA80(uint64_t a1, double *a2)
{
  sub_1BFF2E86C(0, (unint64_t *)&qword_1EB85D860, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)&v22[-1] - v6;
  uint64_t v8 = type metadata accessor for LayeredMediaImageVariant();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void **)((char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v12 = *a2;
  uint64_t v13 = *((void *)a2 + 1);
  double v14 = a2[2];
  double v15 = a2[3];
  double v16 = a2[4];
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 56), *(void *)(v2 + 80));
  *(double *)char v22 = v12;
  v22[1] = v13;
  *(double *)&v22[2] = v14;
  *(double *)&v22[3] = v15;
  *(double *)&v22[4] = v16;
  sub_1C0BFBE4C(a1, (uint64_t)v22, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C0BA2138((uint64_t)v7, (unint64_t *)&qword_1EB85D860, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant);
    return 0;
  }
  else
  {
    sub_1C03BEA24((uint64_t)v7, (uint64_t)v11);
    long long v18 = *v11;
    type metadata accessor for LayeredMediaLayerProcessorRequest();
    uint64_t v19 = swift_allocObject();
    uint64_t v17 = sub_1C0BA1998(v18, v19, v14, v15, v16);
    sub_1C0BA21A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
  }
  return v17;
}

void sub_1C0B9FCB0(uint64_t a1, id a2, void (*a3)(id), uint64_t a4, void (*a5)(void))
{
  id v8 = objc_msgSend(a2, sel_setImage_, a1);
  if (a1)
  {
    a3(v8);
  }
  else
  {
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    sub_1C0BA1610();
    uint64_t v10 = (void *)swift_allocError();
    *uint64_t v11 = 2;
    a5();
  }
}

void sub_1C0B9FDE4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5, uint64_t *a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v77 = a5;
  sub_1BFF2E86C(0, (unint64_t *)&qword_1EB85D860, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  long long v18 = (char *)&v71 - v17;
  uint64_t v19 = type metadata accessor for LayeredMediaImageVariant();
  dispatch_group_t v76 = *(dispatch_group_t *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v75 = (uint64_t)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a2;
  uint64_t v78 = a6;
  uint64_t v22 = *a6;
  swift_retain();
  sub_1C111C008(v22, (double *)a7, v82);
  sub_1C0BA1BB8((uint64_t)v82, (uint64_t)&v83);
  id v23 = v83;
  if (!v83)
  {
    swift_release();
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v30 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    sub_1C0BA1610();
    uint64_t v31 = (void *)swift_allocError();
    *long long v32 = 1;
    a3();
    goto LABEL_18;
  }
  uint64_t v73 = v21;
  uint64_t v72 = a4;
  long long v86 = v84;
  long long v87 = v85;
  char v24 = dispatch_group_create();
  dispatch_group_enter(v24);
  id v25 = objc_msgSend(v23, sel_filePath);
  char v74 = a3;
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = sub_1C151E62C();
    uint64_t v29 = v28;

    *(void *)&long long v79 = v27;
    *((void *)&v79 + 1) = v29;
    sub_1BFC8157C(0, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](0);
    *(&v71 - 2) = (uint64_t)v23;
    sub_1BFC8157C(v33, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1C151911C();
  }
  uint64_t v34 = v77;
  v88[0] = v87;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v23;
  long long v36 = v87;
  *(_OWORD *)(v35 + 24) = v86;
  *(_OWORD *)(v35 + 40) = v36;
  *(void *)(v35 + 56) = a8;
  *(void *)(v35 + 64) = v24;
  uint64_t v77 = v23;
  sub_1BFF59A8C((uint64_t)v88);
  id v37 = a8;
  int64_t v38 = v24;
  uint64_t v39 = (void *)sub_1C1518E7C();
  sub_1C1518FFC();
  swift_release();
  swift_release();

  *(void *)(swift_allocObject() + 16) = v38;
  uint64_t v40 = v38;
  uint64_t v41 = (void *)sub_1C1518E7C();
  sub_1C151903C();
  swift_release();
  swift_release();
  swift_release();

  __swift_project_boxed_opaque_existential_1(v34 + 7, v34[10]);
  uint64_t v42 = v78[1];
  long long v43 = *(_OWORD *)(a7 + 16);
  long long v79 = *(_OWORD *)a7;
  long long v80 = v43;
  uint64_t v81 = *(void *)(a7 + 32);
  sub_1C0BFBE4C(v42, (uint64_t)&v79, (uint64_t)v18);
  dispatch_group_t v44 = v76;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v76[6].isa)(v18, 1, v19) == 1)
  {
    swift_release();
    sub_1C0BA2138((uint64_t)v18, (unint64_t *)&qword_1EB85D860, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant);
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v45 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    sub_1C0BA1610();
    char v46 = (void *)swift_allocError();
    *char v47 = 1;
    v74();

    sub_1BFF5E6C8((uint64_t)v88);
    return;
  }
  uint64_t v48 = v75;
  sub_1C03BEA24((uint64_t)v18, v75);
  sub_1BFF2E86C(0, &qword_1EB85E1B8, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMediaImageVariant, MEMORY[0x1E4FBBE00]);
  unint64_t v49 = (LOBYTE(v44[10].isa) + 32) & ~(unint64_t)LOBYTE(v44[10].isa);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1C1529AE0;
  sub_1C0BA1CE8(v48, v50 + v49);
  long long v51 = *(_OWORD *)(a7 + 16);
  long long v79 = *(_OWORD *)a7;
  long long v80 = v51;
  uint64_t v81 = *(void *)(a7 + 32);
  uint64_t v52 = sub_1C0B9FA80(v50, (double *)&v79);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (!v52)
  {
    swift_release();
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v60 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    sub_1C0BA1610();
    uint64_t v31 = (void *)swift_allocError();
    *uint64_t v61 = 1;
    v74();

    sub_1BFF5E6C8((uint64_t)v88);
    sub_1C0BA21A8(v75, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
LABEL_18:

    return;
  }
  dispatch_group_t v76 = v40;
  uint64_t v71 = a9;
  id v53 = objc_msgSend(v37, sel_stillImageLayer);
  objc_msgSend(v53, sel_setContentsGravity_, *MEMORY[0x1E4F3A3C0]);

  id v54 = objc_msgSend(v37, sel_stillImageLayer);
  objc_msgSend(v54, sel_setContentsScale_, *(double *)(a7 + 32));

  objc_msgSend(v37, sel_setVideoGravity_, *MEMORY[0x1E4F15AF8]);
  uint64_t v55 = v34 + 17;
  __swift_project_boxed_opaque_existential_1(v34 + 17, v34[20]);
  *((void *)&v80 + 1) = type metadata accessor for LayeredMediaLayerProcessorRequest();
  uint64_t v81 = sub_1C0BA2208(&qword_1EB86F400, (void (*)(uint64_t))type metadata accessor for LayeredMediaLayerProcessorRequest);
  *(void *)&long long v79 = v52;
  swift_retain();
  long long v56 = (void *)sub_1C151A52C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
  if (v56)
  {
    id v57 = objc_msgSend(v37, sel_stillImageLayer);
    objc_msgSend(v57, sel_setImage_, v56);

    uint64_t v58 = v72;
    dispatch_group_t v59 = v76;
  }
  else
  {
    dispatch_group_t v59 = v76;
    dispatch_group_enter(v76);
    id v57 = objc_msgSend(v37, sel_stillImageLayer);
    uint64_t v62 = qword_1EB85EF70;
    swift_retain();
    if (v62 != -1) {
      swift_once();
    }
    uint64_t v63 = (void *)qword_1EB93C2A8;
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = v37;
    *(void *)(v64 + 24) = v59;
    id v65 = v37;
    uint64_t v66 = v59;
    sub_1C0BA17F0(v55, v52, v63, (uint64_t)sub_1C0BA1D8C, v64, v57);
    swift_release();
    swift_release();
    uint64_t v58 = v72;
  }

  sub_1C0BA1D94(v78[12], v78[13] & 1, v78[14], *((unsigned char *)v78 + 120), a7, v71);
  uint64_t v67 = v73;
  if (qword_1EB85EF70 != -1) {
    swift_once();
  }
  uint64_t v68 = (void *)swift_allocObject();
  v68[2] = v37;
  v68[3] = sub_1C0BA23B0;
  long long v69 = v74;
  v68[4] = v67;
  v68[5] = v69;
  v68[6] = v58;
  id v70 = v37;
  swift_retain();
  sub_1C151F4EC();

  swift_release();
  swift_release();
  sub_1BFF5E6C8((uint64_t)v88);
  sub_1C0BA21A8(v75, (uint64_t (*)(void))type metadata accessor for LayeredMediaImageVariant);
}

uint64_t sub_1C0BA0950(uint64_t a1, uint64_t a2, void *a3, NSObject *a4)
{
  uint64_t v5 = v4;
  dispatch_group_t v66 = a4;
  id v68 = a3;
  v70[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C0092B34();
  uint64_t v64 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF2E86C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v62 = &v59[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v59[-v12];
  MEMORY[0x1F4188790](v14);
  uint64_t v67 = &v59[-v15];
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v61 = &v59[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = &v59[-v20];
  MEMORY[0x1F4188790](v22);
  char v24 = &v59[-v23];
  sub_1C1515E4C();
  sub_1C1515EEC();
  id v25 = objc_msgSend(self, sel_defaultManager);
  id v65 = v24;
  uint64_t v26 = (void *)sub_1C1515E9C();
  long long v69 = v21;
  uint64_t v27 = (void *)sub_1C1515E9C();
  v70[0] = 0;
  LODWORD(v21) = objc_msgSend(v25, sel_linkItemAtURL_toURL_error_, v26, v27, v70);

  if (v21)
  {
    id v28 = v70[0];
  }
  else
  {
    id v29 = v70[0];
    id v30 = (void *)sub_1C1515D3C();

    swift_willThrow();
    uint64_t v5 = 0;
  }
  id v31 = objc_msgSend(v68, sel_player);
  uint64_t v63 = v5;
  if (!v31)
  {
    uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    int64_t v38 = v67;
    v39(v67, 1, 1, v16);
    goto LABEL_13;
  }
  long long v32 = v31;
  id v33 = objc_msgSend(v31, sel_currentItem);
  if (!v33) {
    goto LABEL_11;
  }
  uint64_t v34 = v33;
  id v35 = objc_msgSend(v33, sel_asset);

  if (!v35) {
    goto LABEL_11;
  }
  self;
  long long v36 = (void *)swift_dynamicCastObjCClass();
  if (!v36)
  {

LABEL_11:
    uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    int64_t v38 = v67;
    v39(v67, 1, 1, v16);
    goto LABEL_12;
  }
  id v37 = objc_msgSend(v36, sel_URL);

  int64_t v38 = v67;
  sub_1C1515F1C();

  uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v39(v38, 0, 1, v16);
LABEL_12:

LABEL_13:
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 16))(v13, v69, v16);
  v39(v13, 0, 1, v16);
  uint64_t v40 = (uint64_t)&v8[*(int *)(v64 + 48)];
  sub_1C0025B10((uint64_t)v38, (uint64_t)v8);
  sub_1C0025B10((uint64_t)v13, v40);
  uint64_t v64 = v17;
  uint64_t v41 = v17;
  uint64_t v42 = (uint64_t)v38;
  long long v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  if (v43((uint64_t)v8, 1, v16) != 1)
  {
    uint64_t v48 = v62;
    sub_1C0025B10((uint64_t)v8, (uint64_t)v62);
    if (v43(v40, 1, v16) != 1)
    {
      uint64_t v46 = v64;
      uint64_t v50 = v61;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v64 + 32))(v61, v40, v16);
      sub_1C0BA2208((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
      int v60 = sub_1C151E5CC();
      long long v51 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
      v51(v50, v16);
      uint64_t v52 = v48;
      id v53 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
      sub_1C0BA2138((uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      sub_1C0BA2138((uint64_t)v67, (unint64_t *)&qword_1EB8948A0, v53);
      v51(v52, v16);
      sub_1C0BA2138((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, v53);
      char v47 = v69;
      if (v60) {
        goto LABEL_21;
      }
LABEL_20:
      id v54 = objc_allocWithZone(MEMORY[0x1E4F16608]);
      uint64_t v55 = (void *)sub_1C1515E9C();
      id v56 = objc_msgSend(v54, sel_initWithURL_, v55);

      objc_msgSend(v56, sel_setPreventsDisplaySleepDuringVideoPlayback_, 0);
      objc_msgSend(v56, sel_setMuted_, 1);
      objc_msgSend(v68, sel_setPlayer_, v56);

      goto LABEL_21;
    }
    unint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C0BA2138((uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0BA2138((uint64_t)v67, (unint64_t *)&qword_1EB8948A0, v49);
    uint64_t v46 = v64;
    (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v48, v16);
LABEL_18:
    sub_1C0BA21A8((uint64_t)v8, (uint64_t (*)(void))sub_1C0092B34);
    char v47 = v69;
    goto LABEL_20;
  }
  dispatch_group_t v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C0BA2138((uint64_t)v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1C0BA2138(v42, (unint64_t *)&qword_1EB8948A0, v44);
  unsigned int v45 = v43(v40, 1, v16);
  uint64_t v46 = v64;
  if (v45 != 1) {
    goto LABEL_18;
  }
  sub_1C0BA2138((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  char v47 = v69;
LABEL_21:
  dispatch_group_leave(v66);
  id v57 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
  v57(v47, v16);
  return ((uint64_t (*)(unsigned char *, uint64_t))v57)(v65, v16);
}

void sub_1C0BA110C(uint64_t a1, id a2, NSObject *a3)
{
  id v5 = objc_msgSend(a2, sel_stillImageLayer);
  objc_msgSend(v5, sel_setImage_, a1);

  dispatch_group_leave(a3);
}

void sub_1C0BA1180(void *a1, void (*a2)(void), uint64_t a3, void (*a4)(void))
{
  id v7 = objc_msgSend(a1, sel_stillImageLayer);
  id v8 = objc_msgSend(v7, sel_image);

  if (v8 && (id v9 = objc_msgSend(a1, sel_player), v9, v9))
  {
    a2();
  }
  else
  {
    if (qword_1EB85E5D8 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1C15197BC();

    sub_1C0BA1610();
    uint64_t v11 = (void *)swift_allocError();
    *uint64_t v12 = 3;
    a4();
  }
}

uint64_t sub_1C0BA1304@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v10 = sub_1C151A93C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1C151A94C();
  uint64_t result = swift_allocBox();
  if (a2 < 0.0 || a3 < 0.0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = result;
    *uint64_t v16 = -a2;
    v16[1] = a2;
    _DWORD v16[2] = -a3;
    v16[3] = a3;
    v16[4] = a4;
    (*(void (**)(double *, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4FAC0F8], v14);
    uint64_t *v13 = v17;
    uint64_t v18 = *(void (**)(uint64_t *, void, uint64_t))(v11 + 104);
    v18(v13, *MEMORY[0x1E4FAC0C8], v10);
    if (a5 >= 0.0)
    {
      uint64_t v19 = swift_allocBox();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v11 + 32))(v20, v13, v10);
      *a1 = v19;
      return ((uint64_t (*)(uint64_t *, void, uint64_t))v18)(a1, *MEMORY[0x1E4FAC0C0], v10);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 32))(a1, v13, v10);
    }
  }
  return result;
}

uint64_t sub_1C0BA14F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 136) >> 7;
}

uint64_t sub_1C0BA1500(uint64_t result)
{
  *(unsigned char *)(result + 136) &= ~0x80u;
  return result;
}

void sub_1C0BA1510(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1C0B9FDE4(a1, a2, a3, a4, *(void **)(v4 + 16), *(uint64_t **)(v4 + 24), *(void *)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48));
}

void sub_1C0BA1540(void (*a1)(id), uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1C0B9F6FC(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48));
}

uint64_t sub_1C0BA1570(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0199650(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for LayeredMediaLayerRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaLayerRenderer);
}

uint64_t sub_1C0BA15D8()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1C0BA1610()
{
  unint64_t result = qword_1EA1A4430;
  if (!qword_1EA1A4430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4430);
  }
  return result;
}

void sub_1C0BA1668(uint64_t a1)
{
  sub_1C0B9FCB0(a1, *(id *)(v1 + 16), *(void (**)(id))(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

uint64_t sub_1C0BA1678(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  v18[3] = sub_1C151B4CC();
  v18[4] = MEMORY[0x1E4FAC7D8];
  v18[0] = a2;
  swift_retain();
  sub_1C151BD8C();
  uint64_t v12 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(a6, sel_setIdentifier_, v12);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BFC66384((uint64_t)v18, (uint64_t)v17);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  v14[3] = v13;
  sub_1BFC773DC(v17, (uint64_t)(v14 + 4));
  v14[9] = a4;
  v14[10] = a5;
  id v15 = a3;
  swift_retain();
  swift_retain();
  sub_1C151A50C();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_1C0BA17F0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  v18[3] = type metadata accessor for LayeredMediaLayerProcessorRequest();
  v18[4] = sub_1C0BA2208(&qword_1EB86F400, (void (*)(uint64_t))type metadata accessor for LayeredMediaLayerProcessorRequest);
  v18[0] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(a6, sel_setIdentifier_, v12);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BFC66384((uint64_t)v18, (uint64_t)v17);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  v14[3] = v13;
  sub_1BFC773DC(v17, (uint64_t)(v14 + 4));
  v14[9] = a4;
  v14[10] = a5;
  id v15 = a3;
  swift_retain();
  swift_retain();
  sub_1C151A50C();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_1C0BA1998(void *a1, uint64_t a2, double a3, double a4, double a5)
{
  v13[3] = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A100);
  v13[4] = sub_1BFF6C3E8();
  v13[0] = a1;
  sub_1BFC66384((uint64_t)v13, a2 + 64);
  sub_1BFF2E86C(0, (unint64_t *)&qword_1EB87A8A0, (uint64_t (*)(uint64_t))sub_1C0065520, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 0x616D497265766F63;
  *(void *)(inited + 40) = 0xEF726579614C6567;
  sub_1BFC66384((uint64_t)v13, inited + 48);
  *(void *)(a2 + 56) = sub_1BFF59AB8(inited);
  *(double *)(a2 + 32) = a3;
  *(double *)(a2 + 40) = a4;
  *(double *)(a2 + 48) = a5;
  id v11 = objc_msgSend(a1, sel_uniqueKey);
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  type metadata accessor for CGSize(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return a2;
}

uint64_t sub_1C0BA1B78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0BA1BB8(uint64_t a1, uint64_t a2)
{
  sub_1BFC8157C(0, (unint64_t *)&qword_1EB85D8C0, (uint64_t)&type metadata for LayeredMediaVideoVariant, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BA1C40()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0BA1C90(uint64_t a1)
{
  return sub_1C0BA0950(a1, v1 + 16, *(void **)(v1 + 56), *(NSObject **)(v1 + 64));
}

uint64_t sub_1C0BA1CB0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0BA1CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayeredMediaImageVariant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BA1D4C()
{
  return swift_deallocObject();
}

void sub_1C0BA1D8C(uint64_t a1)
{
  sub_1C0BA110C(a1, *(id *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_1C0BA1D94(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v36 = a6;
  uint64_t v11 = sub_1C151B9CC();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (double *)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1C151A93C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t *)((char *)&v33 - v19);
  if (a2)
  {
    if ((a4 & 1) == 0)
    {
      double v24 = *(double *)&a3 / 100.0 + 1.0;
      uint64_t v25 = swift_allocBox();
      uint64_t v27 = v26;
      uint64_t v28 = sub_1C151A94C();
      uint64_t v29 = swift_allocBox();
      *(_OWORD *)uint64_t v30 = 0u;
      *(_OWORD *)(v30 + 16) = 0u;
      *(double *)(v30 + 32) = v24;
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FAC0F8], v28);
      *uint64_t v27 = v29;
      id v31 = *(void (**)(uint64_t *, void, uint64_t))(v15 + 104);
      v31(v27, *MEMORY[0x1E4FAC0C8], v14);
      *uint64_t v20 = v25;
      v31(v20, *MEMORY[0x1E4FAC0C0], v14);
      sub_1C151A05C();
      double *v13 = v24;
      (*(void (**)(double *, void, uint64_t))(v34 + 104))(v13, *MEMORY[0x1E4FACA80], v35);
      sub_1C151A06C();
    }
  }
  else
  {
    double v21 = fabs(*(double *)&a1) / 100.0;
    double v22 = *(double *)&a3 / 100.0 + *(double *)&a3 / 100.0;
    if (a4) {
      double v22 = v21;
    }
    double v23 = v22 + 1.0;
    sub_1C0BA1304((uint64_t *)((char *)&v33 - v19), v21 * *(double *)(a5 + 16), v21 * *(double *)(a5 + 24), v22 + 1.0, *(double *)&a1);
    (*(void (**)(char *, uint64_t *, uint64_t))(v15 + 16))(v17, v20, v14);
    sub_1C151A05C();
    double *v13 = v23;
    (*(void (**)(double *, void, uint64_t))(v34 + 104))(v13, *MEMORY[0x1E4FACA80], v35);
    sub_1C151A06C();
    (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v20, v14);
  }
  if (qword_1EB85E6C0 != -1) {
    swift_once();
  }
  return sub_1C151A03C();
}

void sub_1C0BA2128()
{
  sub_1C0BA1180(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

uint64_t sub_1C0BA2138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFF2E86C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0BA21A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0BA2208(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LayeredMediaLayerRenderer.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BA2320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaLayerRenderer.Errors()
{
  return &type metadata for LayeredMediaLayerRenderer.Errors;
}

unint64_t sub_1C0BA235C()
{
  unint64_t result = qword_1EA1A4438;
  if (!qword_1EA1A4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4438);
  }
  return result;
}

id sub_1C0BA23B8()
{
  void (*v13)(id *__return_ptr, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v25[2];

  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v1, sel_setMinimumLineHeight_, 20.0);
  objc_msgSend(v1, sel_setAlignment_, 1);
  objc_msgSend(v1, sel_setLineBreakMode_, 0);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  int v3 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  unsigned int v4 = *v3;
  *(void *)(inited + 32) = *v3;
  uint64_t v5 = self;
  double v6 = *MEMORY[0x1E4FB09E0];
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = objc_msgSend(v5, sel_systemFontOfSize_weight_, 17.0, v6);
  uint64_t v9 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v8;
  uint64_t v10 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  uint64_t v13 = *(void (**)(id *__return_ptr, uint64_t, uint64_t))(v12 + 64);
  uint64_t v14 = v10;
  v13(v25, v11, v12);
  uint64_t v15 = v25[1];

  uint64_t v16 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v15;
  uint64_t v17 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 112) = v17;
  *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 120) = v1;
  uint64_t v18 = v17;
  uint64_t v19 = v1;
  sub_1BFF991DC(inited);
  uint64_t v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  double v21 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  double v22 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  double v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

id sub_1C0BA263C()
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void v25[2];

  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v1, sel_setMinimumLineHeight_, 20.0);
  objc_msgSend(v1, sel_setAlignment_, 1);
  objc_msgSend(v1, sel_setLineBreakMode_, 0);
  sub_1C0099920();
  uint64_t inited = swift_initStackObject();
  int v3 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  unsigned int v4 = *v3;
  *(void *)(inited + 32) = *v3;
  uint64_t v5 = self;
  double v6 = *MEMORY[0x1E4FB09E0];
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = objc_msgSend(v5, sel_systemFontOfSize_weight_, 17.0, v6);
  uint64_t v9 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v8;
  uint64_t v10 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 64);
  uint64_t v14 = v10;
  v13(v25, v11, v12);
  uint64_t v15 = v25[0];

  uint64_t v16 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 80) = v15;
  uint64_t v17 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 112) = v17;
  *(void *)(inited + 144) = sub_1BFC39268(0, (unint64_t *)&unk_1EB87A240);
  *(void *)(inited + 120) = v1;
  uint64_t v18 = v17;
  uint64_t v19 = v1;
  sub_1BFF991DC(inited);
  uint64_t v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  double v21 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  double v22 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  double v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

_OWORD *FormatMotion.TranslateWithScale.init(translate:scale:)@<X0>(_OWORD *result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  long long v3 = result[1];
  *(_OWORD *)a2 = *result;
  *(_OWORD *)(a2 + 16) = v3;
  *(double *)(a2 + 32) = a3;
  return result;
}

uint64_t sub_1C0BA28D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMotion.TranslateWithScale.init(from:)(a1, a2);
}

uint64_t sub_1C0BA28EC(void *a1)
{
  return FormatMotion.TranslateWithScale.encode(to:)(a1);
}

uint64_t sub_1C0BA2908@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMotion.init(from:)(a1, a2);
}

uint64_t sub_1C0BA2920(void *a1)
{
  return FormatMotion.encode(to:)(a1);
}

uint64_t FormatMotion.transform.getter@<X0>(uint64_t a1@<X8>)
{
  double v4 = *(double *)v1;
  double v3 = *(double *)(v1 + 8);
  double v6 = *(double *)(v1 + 16);
  double v5 = *(double *)(v1 + 24);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      if (v4 > v3)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1C0BA2ACCLL);
      }
      *(double *)a1 = v4;
      *(double *)(a1 + 8) = v3;
      id v7 = (unsigned int *)MEMORY[0x1E4FAC0E0];
      break;
    case 2:
      if (v4 > v3 || v6 > v5) {
        goto LABEL_26;
      }
      *(double *)a1 = v4;
      *(double *)(a1 + 8) = v3;
      *(double *)(a1 + 16) = v6;
      *(double *)(a1 + 24) = v5;
      id v7 = (unsigned int *)MEMORY[0x1E4FAC0E8];
      break;
    case 3:
      if (v4 > v3 || v6 > v5) {
        goto LABEL_27;
      }
      *(double *)a1 = v4;
      *(double *)(a1 + 8) = v3;
      *(double *)(a1 + 16) = v6;
      *(double *)(a1 + 24) = v5;
      id v7 = (unsigned int *)MEMORY[0x1E4FAC108];
      break;
    case 4:
      if (v4 > v3) {
        goto LABEL_28;
      }
      *(double *)a1 = v4;
      *(double *)(a1 + 8) = v3;
      id v7 = (unsigned int *)MEMORY[0x1E4FAC0F0];
      break;
    case 5:
      if (v4 > v3 || v6 > v5) {
        goto LABEL_29;
      }
      uint64_t v11 = *(void *)(v1 + 32);
      *(double *)a1 = v4;
      *(double *)(a1 + 8) = v3;
      *(double *)(a1 + 16) = v6;
      *(double *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v11;
      id v7 = (unsigned int *)MEMORY[0x1E4FAC0F8];
      break;
    default:
      *(double *)a1 = v4;
      id v7 = (unsigned int *)MEMORY[0x1E4FAC100];
      break;
  }
  uint64_t v12 = *v7;
  uint64_t v13 = sub_1C151A94C();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  return v14(a1, v12, v13);
}

uint64_t _s8NewsFeed12FormatMotionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  float64x2_t v2 = *(float64x2_t *)a1;
  float64x2_t v3 = *(float64x2_t *)(a1 + 16);
  float64x2_t v4 = *(float64x2_t *)a2;
  float64x2_t v5 = *(float64x2_t *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 40);
  switch(*(unsigned char *)(a1 + 40))
  {
    case 1:
      if (v6 != 1) {
        goto LABEL_15;
      }
      goto LABEL_12;
    case 2:
      if (v6 == 2) {
        goto LABEL_10;
      }
      goto LABEL_15;
    case 3:
      if (v6 != 3) {
        goto LABEL_15;
      }
LABEL_10:
      uint64_t result = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v2, v4), (int32x4_t)vceqq_f64(v3, v5))), 0xFuLL))) & 1;
      break;
    case 4:
      if (v6 != 4) {
        goto LABEL_15;
      }
LABEL_12:
      int32x2_t v8 = vmovn_s64(vceqq_f64((float64x2_t)vextq_s8((int8x16_t)v2, (int8x16_t)v2, 8uLL), (float64x2_t)vextq_s8((int8x16_t)v4, (int8x16_t)v4, 8uLL)));
      uint64_t result = v8.i32[1] & v8.i32[0] & 1;
      break;
    case 5:
      if (v6 != 5) {
        goto LABEL_15;
      }
      uint64_t result = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v2, v4), (int32x4_t)vceqq_f64(v3, v5))), 0xFuLL))) & (*(double *)(a1 + 32) == *(double *)(a2 + 32));
      break;
    default:
      if (*(unsigned char *)(a2 + 40) || v2.f64[0] != v4.f64[0]) {
LABEL_15:
      }
        uint64_t result = 0;
      else {
        uint64_t result = 1;
      }
      break;
  }
  return result;
}

unint64_t sub_1C0BA2C04(uint64_t a1)
{
  unint64_t result = sub_1C0BA2C2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BA2C2C()
{
  unint64_t result = qword_1EA1A4440;
  if (!qword_1EA1A4440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4440);
  }
  return result;
}

uint64_t sub_1C0BA2C80(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BA2DD0(a1, a2, a3, (uint64_t (*)(void))sub_1C089D7EC, (uint64_t (*)(void))sub_1C08F52FC, (uint64_t (*)(void))sub_1C0BA2CC0);
}

unint64_t sub_1C0BA2CC0()
{
  unint64_t result = qword_1EA1A4448;
  if (!qword_1EA1A4448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4448);
  }
  return result;
}

unint64_t sub_1C0BA2D14(uint64_t a1)
{
  unint64_t result = sub_1C0BA2D3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BA2D3C()
{
  unint64_t result = qword_1EA1A4450;
  if (!qword_1EA1A4450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4450);
  }
  return result;
}

uint64_t sub_1C0BA2D90(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BA2DD0(a1, a2, a3, (uint64_t (*)(void))sub_1BFD54B34, (uint64_t (*)(void))sub_1C08F0CF0, (uint64_t (*)(void))sub_1C0BA2E24);
}

uint64_t sub_1C0BA2DD0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BA2E24()
{
  unint64_t result = qword_1EA1A4458;
  if (!qword_1EA1A4458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4458);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatMotion(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_1C0BA2EC0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1C0BA2EC8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatMotion()
{
  return &type metadata for FormatMotion;
}

ValueMetadata *type metadata accessor for FormatMotion.TranslateWithScale()
{
  return &type metadata for FormatMotion.TranslateWithScale;
}

void *sub_1C0BA2EF0(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  switch(*(unsigned char *)(a1 + 40))
  {
    case 0:
      unsigned int v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
      sub_1C0181BEC(0);
      uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
      unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
      uint64_t v9 = (void *)(v8 + v7);
      sub_1C0433600(1701869908, 0xE400000000000000, 0x656C616353, 0xE500000000000000, v9);
      uint64_t v10 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
      v11(v9, 0, 1, v10);
      sub_1C0436C30(0x656C616353, 0xE500000000000000, v2, 0, (void *)((char *)v9 + v6));
      v11((void *)((char *)v9 + v6), 0, 1, v10);
      sub_1C09BCFA4(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v8, &v73);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v12 = swift_allocObject();
      *(void *)(inited + 32) = v12;
      *(void *)(v12 + 48) = v75;
      long long v13 = v74;
      *(_OWORD *)(v12 + 16) = v73;
      *(_OWORD *)(v12 + 32) = v13;
      uint64_t v14 = sub_1C131B79C(inited);
      swift_setDeallocating();
      sub_1C01004A4(0);
      goto LABEL_15;
    case 1:
      uint64_t v65 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v17);
      sub_1C0181BEC(0);
      uint64_t v20 = *(void *)(*(void *)(v19 - 8) + 72);
      unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80);
      uint64_t v22 = 2 * v20;
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C152C7F0;
      double v24 = (void *)(v23 + v21);
      uint64_t v25 = v24;
      uint64_t v26 = 0x615220656C616353;
      uint64_t v27 = 0xEB0000000065676ELL;
      goto LABEL_11;
    case 2:
      uint64_t v67 = *(void *)(a1 + 24);
      uint64_t v70 = *(void *)(a1 + 16);
      uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_initStackObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v28);
      sub_1C0181BEC(0);
      uint64_t v31 = *(void *)(*(void *)(v30 - 8) + 72);
      unint64_t v32 = (*(unsigned __int8 *)(*(void *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v30 - 8) + 80);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1C152C7F0;
      uint64_t v34 = (void *)(v33 + v32);
      sub_1C0433600(1701869908, 0xE400000000000000, 0x725420656C616353, 0xEF6574616C736E61, v34);
      uint64_t v35 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v36 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
      v36(v34, 0, 1, v35);
      sub_1C0436ECC(88, 0xE100000000000000, v2, v1, 0, (void *)((char *)v34 + v31));
      v36((void *)((char *)v34 + v31), 0, 1, v35);
      sub_1C0436ECC(89, 0xE100000000000000, v70, v67, 0, (void *)((char *)v34 + 2 * v31));
      v36((void *)((char *)v34 + 2 * v31), 0, 1, v35);
      goto LABEL_9;
    case 3:
      uint64_t v68 = *(void *)(a1 + 24);
      uint64_t v71 = *(void *)(a1 + 16);
      id v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_initStackObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v37);
      sub_1C0181BEC(0);
      uint64_t v39 = *(void *)(*(void *)(v38 - 8) + 72);
      unint64_t v40 = (*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1C152C7F0;
      unint64_t v41 = v33 + v40;
      sub_1C0433600(1701869908, 0xE400000000000000, 0x74616C736E617254, 0xE900000000000065, (void *)(v33 + v40));
      uint64_t v42 = type metadata accessor for FormatInspectionItem(0);
      long long v43 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
      v43(v41, 0, 1, v42);
      sub_1C0436ECC(88, 0xE100000000000000, v2, v1, 0, (void *)(v41 + v39));
      v43(v41 + v39, 0, 1, v42);
      sub_1C0436ECC(89, 0xE100000000000000, v71, v68, 0, (void *)(v41 + 2 * v39));
      v43(v41 + 2 * v39, 0, 1, v42);
LABEL_9:
      sub_1C09BCFA4(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v33, &v73);
      swift_setDeallocating();
      goto LABEL_13;
    case 4:
      uint64_t v65 = *(void *)(a1 + 8);
      dispatch_group_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v44);
      sub_1C0181BEC(0);
      uint64_t v20 = *(void *)(*(void *)(v45 - 8) + 72);
      unint64_t v46 = (*(unsigned __int8 *)(*(void *)(v45 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v45 - 8) + 80);
      uint64_t v22 = 2 * v20;
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C152C7F0;
      double v24 = (void *)(v23 + v46);
      uint64_t v25 = v24;
      uint64_t v26 = 0x74616C736E617254;
      uint64_t v27 = 0xEF65676E61522065;
LABEL_11:
      sub_1C0433600(1701869908, 0xE400000000000000, v26, v27, v25);
      uint64_t v47 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v48 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
      v48(v24, 0, 1, v47);
      sub_1C0436C30(0x6F42207265776F4CLL, 0xEB00000000646E75, v2, 0, (void *)((char *)v24 + v20));
      v48((void *)((char *)v24 + v20), 0, 1, v47);
      unint64_t v49 = (void *)((char *)v24 + v22);
      sub_1C0436C30(0x6F42207265707055, 0xEB00000000646E75, v65, 0, v49);
      v48(v49, 0, 1, v47);
      sub_1C09BCFA4(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v23, &v73);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v18 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v18 + 64) = &off_1F1BDEC90;
      uint64_t v50 = swift_allocObject();
      *(void *)(v18 + 32) = v50;
      *(void *)(v50 + 48) = v75;
      long long v51 = v74;
      *(_OWORD *)(v50 + 16) = v73;
      *(_OWORD *)(v50 + 32) = v51;
      uint64_t v14 = sub_1C131B79C(v18);
      swift_setDeallocating();
      goto LABEL_14;
    case 5:
      uint64_t v52 = *(void *)(a1 + 32);
      uint64_t v69 = *(void *)(a1 + 24);
      uint64_t v72 = *(void *)(a1 + 16);
      id v53 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v29 = swift_initStackObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v53);
      sub_1C0181BEC(0);
      uint64_t v55 = *(void *)(*(void *)(v54 - 8) + 72);
      unint64_t v56 = (*(unsigned __int8 *)(*(void *)(v54 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v54 - 8) + 80);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1C152A660;
      unint64_t v58 = v57 + v56;
      sub_1C0433600(1701869908, 0xE400000000000000, 0xD00000000000001ALL, 0x80000001C161E2B0, (void *)(v57 + v56));
      uint64_t v66 = v1;
      uint64_t v59 = v2;
      uint64_t v60 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v61 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56);
      v61(v58, 0, 1, v60);
      sub_1C0436C30(0x656C616353, 0xE500000000000000, v52, 0, (void *)(v58 + v55));
      v61(v58 + v55, 0, 1, v60);
      sub_1C0436ECC(88, 0xE100000000000000, v59, v66, 0, (void *)(v58 + 2 * v55));
      v61(v58 + 2 * v55, 0, 1, v60);
      uint64_t v62 = (void *)(v58 + 3 * v55);
      sub_1C0436ECC(89, 0xE100000000000000, v72, v69, 0, v62);
      v61((unint64_t)v62, 0, 1, v60);
      sub_1C09BCFA4(0x6E6F69746F4DLL, 0xE600000000000000, 0, 0, v57, &v73);
      swift_setDeallocating();
LABEL_13:
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v29 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v29 + 64) = &off_1F1BDEC90;
      uint64_t v63 = swift_allocObject();
      *(void *)(v29 + 32) = v63;
      *(void *)(v63 + 48) = v75;
      long long v64 = v74;
      *(_OWORD *)(v63 + 16) = v73;
      *(_OWORD *)(v63 + 32) = v64;
      uint64_t v14 = sub_1C131B79C(v29);
      swift_setDeallocating();
LABEL_14:
      sub_1C01004A4(0);
LABEL_15:
      swift_arrayDestroy();
      unint64_t result = v14;
      break;
    default:
      uint64_t v15 = MEMORY[0x1E4FBC860];
      unint64_t result = sub_1C131B79C(v15);
      break;
  }
  return result;
}

uint64_t sub_1C0BA3D44()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0BA3D8C(uint64_t a1, id a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 == 254)
  {
    id v17 = objc_msgSend(a2, sel_layer);
    objc_msgSend(v17, sel_setShadowPath_, 0);
    objc_msgSend(v17, sel_setShadowRadius_, 0.0);
    objc_msgSend(v17, sel_setShadowOffset_, 0.0, 0.0);
    objc_msgSend(v17, sel_setShadowOpacity_, 0.0);
    objc_msgSend(v17, sel_setShadowColor_, 0);
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v14 = *(void *)(a1 + 64);
    uint64_t v15 = *(void *)(a1 + 72);
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v16 = v9;
    uint64_t v11 = *(void *)a1;
    swift_retain();
    objc_msgSend(a2, sel_setClipsToBounds_, 0);
    uint64_t v18 = v11;
    int v19 = v10;
    uint64_t v20 = v9;
    uint64_t v21 = v8;
    uint64_t v22 = v7;
    uint64_t v23 = v6;
    uint64_t v24 = v5;
    uint64_t v25 = v4;
    uint64_t v12 = v4;
    uint64_t v26 = v14;
    uint64_t v27 = v15;
    char v28 = v3;
    id v13 = objc_msgSend(a2, sel_layer);
    sub_1BFD6AAD4((uint64_t)&v18, a2, v13);

    sub_1BFEF8738(v11, v10, v16, v8, v7, v6, v5, v12, v14, v15, v3);
  }
}

uint64_t FormatSponsoredBanner.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatSponsoredBanner.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBanner.identifier.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall FormatSponsoredBanner.loadingCoverDismissed()()
{
  id v1 = objc_msgSend(v0, sel_subviews);
  sub_1C0063B40();
  unint64_t v2 = sub_1C151EBCC();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C15204BC();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1C18C7CB0](v4 - 4, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4);
    }
    uint64_t v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    sub_1C15195FC();
    if (swift_dynamicCastClass()) {
      break;
    }

    ++v4;
    if (v7 == v3) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease_n();
  id v8 = v6;
  sub_1C15195EC();
}

id FormatSponsoredBanner.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatSponsoredBanner.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  uint64_t v11 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_adIdentifier];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
}

id FormatSponsoredBanner.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FormatSponsoredBanner.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0xE000000000000000;
  id v5 = &v1[OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_adIdentifier];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id FormatSponsoredBanner.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0BA4520()
{
  id v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed21FormatSponsoredBanner_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FCFeedPersonalizationConfigurationSet.description.getter()
{
  return 0x6E776F6E6B6E55;
}

uint64_t sub_1C0BA47DC()
{
  return FCFeedPersonalizationConfigurationSet.description.getter();
}

BOOL static FormatGroupBinding.Temperature.== infix(_:_:)(long long *a1, long long *a2)
{
  char v2 = *((unsigned char *)a1 + 16);
  char v3 = *((unsigned char *)a2 + 16);
  long long v7 = *a1;
  char v8 = v2;
  long long v5 = *a2;
  char v6 = v3;
  return _s8NewsFeed20FormatWeatherBindingV11TemperatureO2eeoiySbAE_AEtFZ_0((uint64_t)&v7, (uint64_t)&v5);
}

uint64_t sub_1C0BA4830@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Temperature.init(from:)(a1, a2);
}

uint64_t sub_1C0BA4848(void *a1)
{
  return FormatGroupBinding.Temperature.encode(to:)(a1);
}

BOOL sub_1C0BA4860(long long *a1, long long *a2)
{
  char v2 = *((unsigned char *)a1 + 16);
  char v3 = *((unsigned char *)a2 + 16);
  long long v7 = *a1;
  char v8 = v2;
  long long v5 = *a2;
  char v6 = v3;
  return _s8NewsFeed20FormatWeatherBindingV11TemperatureO2eeoiySbAE_AEtFZ_0((uint64_t)&v7, (uint64_t)&v5);
}

unint64_t sub_1C0BA48AC(uint64_t a1)
{
  unint64_t result = sub_1C0BA48D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BA48D4()
{
  unint64_t result = qword_1EA1A4470;
  if (!qword_1EA1A4470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4470);
  }
  return result;
}

unint64_t sub_1C0BA4928(void *a1)
{
  a1[1] = sub_1C0BA4960();
  a1[2] = sub_1C0BA49B4();
  unint64_t result = sub_1C0BA4A08();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BA4960()
{
  unint64_t result = qword_1EA1A4478;
  if (!qword_1EA1A4478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4478);
  }
  return result;
}

unint64_t sub_1C0BA49B4()
{
  unint64_t result = qword_1EA1A4480;
  if (!qword_1EA1A4480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4480);
  }
  return result;
}

unint64_t sub_1C0BA4A08()
{
  unint64_t result = qword_1EA1A4488;
  if (!qword_1EA1A4488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4488);
  }
  return result;
}

uint64_t _s11TemperatureOwxx_0(uint64_t a1)
{
  return sub_1C0BA4A98(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
}

uint64_t sub_1C0BA4A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  switch((a3 >> 4) & 3)
  {
    case 1u:
    case 2u:
    case 3u:
      a3 = a3 & 0xFFFFFFCF;
      break;
    default:
      return a4(a1, a2, a3);
  }
  return a4(a1, a2, a3);
}

uint64_t _s11TemperatureOwCP_0_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1C0BA4A98(*(void *)a2, v4, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11TemperatureOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1C0BA4A98(*(void *)a2, v4, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0BA4A98(v6, v7, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
  return a1;
}

uint64_t _s11TemperatureOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0BA4A98(v4, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
  return a1;
}

uint64_t _s11TemperatureOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1D && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 29);
  }
  unsigned int v3 = ((2 * *(unsigned __int8 *)(a1 + 16)) & 0x1C | (*(unsigned __int8 *)(a1 + 16) >> 4) & 3) ^ 0x1F;
  if (v3 >= 0x1C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s11TemperatureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1C)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 29;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x1D) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1D) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * ((((-a2 >> 2) & 7) - 8 * a2) & 0x1F);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Temperature()
{
  return &type metadata for FormatGroupBinding.Temperature;
}

ValueMetadata *type metadata accessor for A18_V1()
{
  return &type metadata for A18_V1;
}

uint64_t sub_1C0BA4CDC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0BA91E4(0, &qword_1EA1A4530, (uint64_t (*)(void))sub_1C0BA9190, (uint64_t)&type metadata for A18_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0BA9190();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0BA8B58(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0BA4F24(uint64_t a1)
{
  unint64_t v2 = sub_1C0BA9190();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0BA4F60(uint64_t a1)
{
  unint64_t v2 = sub_1C0BA9190();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0BA4F9C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0BA8EE0(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0BA4FE4(void *a1)
{
  return sub_1C0BA4CDC(a1);
}

uint64_t sub_1C0BA4FFC()
{
  sub_1C0BA8C04();
  return sub_1C151798C();
}

uint64_t sub_1C0BA5078@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0BA91E4(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0BA5134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  id v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  id v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  long long v74 = &type metadata for A18_V1;
  unint64_t v20 = sub_1C01860EC();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  long long v74 = &type metadata for A18_V1;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C0019370(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v31 = (void *)(v30 + 16);
  swift_beginAccess();
  unint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    unint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *uint64_t v31 = v32;
  }
  v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  _OWORD v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B832E0, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    unint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    uint64_t v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      uint64_t v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *unint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      uint64_t v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *unint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    unint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B83308, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A18_V1.Bound();
    long long v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C0BA8B58(&qword_1EA1A44A0, (void (*)(uint64_t))type metadata accessor for A18_V1.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C0BA58D8@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0019370(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A18_V1.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v42);
  sub_1BFC66384(v11 + 56, (uint64_t)v41);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v42, v14 + 16);
  sub_1BFC773DC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v41);
  sub_1BFC66384(v15 + 56, (uint64_t)v40);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v41, v17 + 16);
  sub_1BFC773DC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  uint64_t v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v19 = sub_1BFEB3714((uint64_t)&v42, *(void *)(*(void *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v42 = inited;
  sub_1BFEB37F8(v19);
  uint64_t v20 = v42;
  v38[2] = v18;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C06472C0(v21, v20, (void (*)(char *, uint64_t))sub_1C0BA8BA0, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = *MEMORY[0x1E4FAB6D8];
  uint64_t v24 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v22;
  sub_1C0BA8CBC(0, &qword_1EA1A44C0, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v42;
  uint64_t v26 = v43;
  uint64_t v27 = v44;
  *(void *)&long long v42 = v22;
  *(void *)&v41[0] = v45;
  MEMORY[0x1F4188790](v25);
  sub_1C0019370(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v42 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  *uint64_t v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1C0BA5E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0BA5F50(uint64_t a1, uint64_t a2)
{
  sub_1C0BA91E4(0, &qword_1EA1A44D8, (uint64_t (*)(void))sub_1C0BA8BB0, (uint64_t)&type metadata for A18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 18;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0BA8CBC(0, &qword_1EA1A44E0, MEMORY[0x1E4FAB6F0]);
  sub_1C0BA8C78(&qword_1EA1A44E8, &qword_1EA1A44E0, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0BA613C(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  sub_1C0BA91E4(0, &qword_1EA1A44D8, (uint64_t (*)(void))sub_1C0BA8BB0, (uint64_t)&type metadata for A18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v36 - v6);
  uint64_t v51 = a1;
  uint64_t v8 = sub_1C151729C();
  uint64_t v9 = swift_allocBox();
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void (**)(void))(v10 + 104);
  unsigned int v40 = *MEMORY[0x1E4FAB4E8];
  uint64_t v43 = v8;
  uint64_t v38 = v10 + 104;
  uint64_t v39 = (void (*)(uint64_t, void, uint64_t))v11;
  v11(v12);
  *uint64_t v7 = v9;
  uint64_t v13 = *(void (**)(uint64_t *))(v5 + 104);
  unsigned int v37 = *MEMORY[0x1E4FAB940];
  v13(v7);
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0BA8CBC(0, &qword_1EA1A44F0, MEMORY[0x1E4FAB4D0]);
  uint64_t v49 = v15;
  uint64_t v16 = sub_1C0BA8C78(&qword_1EA1A44F8, &qword_1EA1A44F0, v14);
  sub_1C151738C();
  uint64_t v17 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v17(v7, v4);
  uint64_t v47 = a1;
  uint64_t v51 = a1;
  sub_1C0386118();
  uint64_t v19 = v18;
  uint64_t v20 = swift_allocBox();
  uint64_t v22 = (char *)v21 + *(int *)(v19 + 48);
  void *v21 = 11;
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = v23;
  uint64_t v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v25, v24);
  *uint64_t v7 = v20;
  uint64_t v27 = *MEMORY[0x1E4FAB960];
  unint64_t v46 = v13;
  uint64_t v41 = v5 + 104;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v13)(v7, v27, v4);
  uint64_t v50 = v26;
  uint64_t v42 = v16;
  sub_1C151731C();
  uint64_t v44 = v17;
  uint64_t v45 = v5 + 8;
  uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v17)(v7, v4);
  if (*(void *)(v26 + 16) >= 3uLL)
  {
    uint64_t v29 = v47;
    uint64_t v51 = v47;
    uint64_t v30 = v43;
    uint64_t v31 = swift_allocBox();
    v39(v32, v40, v30);
    *uint64_t v7 = v31;
    uint64_t v33 = v46;
    ((void (*)(uint64_t *, void, uint64_t))v46)(v7, v37, v4);
    sub_1C151738C();
    long long v34 = (uint64_t (*)(uint64_t *, uint64_t))v44;
    v44(v7, v4);
    uint64_t v51 = v29;
    uint64_t v35 = ((uint64_t (*)(uint64_t *, void, uint64_t))v33)(v7, *MEMORY[0x1E4FABA28], v4);
    MEMORY[0x1F4188790](v35);
    sub_1C151731C();
    return v34(v7, v4);
  }
  return result;
}

uint64_t sub_1C0BA65A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0BA91E4(0, &qword_1EA1A44D8, (uint64_t (*)(void))sub_1C0BA8BB0, (uint64_t)&type metadata for A18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v30 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FABA28], v12);
  if (*(void *)(a2 + 16))
  {
    sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v29 = KeyPath;
    uint64_t v18 = qword_1F1B899C8;
    uint64_t v19 = (char *)v6 + v4[5];
    uint64_t v20 = *MEMORY[0x1E4FAB8C8];
    uint64_t v21 = sub_1C1517A7C();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v28 = v12;
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v21);
    uint64_t v24 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = v18;
    *(uint64_t *)((char *)v6 + v4[6]) = 0;
    *(uint64_t *)((char *)v6 + v4[7]) = (uint64_t)v24;
    id v25 = v24;
    sub_1C04B9C70((uint64_t)v10, (uint64_t)v6);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0BA8CBC(0, &qword_1EA1A44F0, MEMORY[0x1E4FAB4D0]);
    sub_1C0BA8C78(&qword_1EA1A44F8, &qword_1EA1A44F0, v26);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0BA6994(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C0BA91E4(0, &qword_1EA1A44D8, (uint64_t (*)(void))sub_1C0BA8BB0, (uint64_t)&type metadata for A18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 9;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0BA8CBC(0, &qword_1EA1A44F0, MEMORY[0x1E4FAB4D0]);
  sub_1C0BA8C78(&qword_1EA1A44F8, &qword_1EA1A44F0, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 9;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C0BA6C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0BA91E4(0, &qword_1EA1A44D8, (uint64_t (*)(void))sub_1C0BA8BB0, (uint64_t)&type metadata for A18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + *(void *)(v14 + 72)
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    uint64_t v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0BA8CBC(0, &qword_1EA1A44F0, MEMORY[0x1E4FAB4D0]);
    sub_1C0BA8C78(&qword_1EA1A44F8, &qword_1EA1A44F0, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C0BA7014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0BA91E4(0, &qword_1EA1A44D8, (uint64_t (*)(void))sub_1C0BA8BB0, (uint64_t)&type metadata for A18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v12;
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FAB958], v8);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v15 = a2
        + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
        + 2 * *(void *)(v14 + 72);
    uint64_t v16 = v4[5];
    v28[0] = v8;
    uint64_t v17 = (char *)v6 + v16;
    uint64_t v18 = *MEMORY[0x1E4FAB8C8];
    uint64_t v19 = sub_1C1517A7C();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    uint64_t v21 = (void *)*MEMORY[0x1E4FB27D0];
    *uint64_t v6 = 0;
    *(void *)((char *)v6 + v4[6]) = 0;
    *(void *)((char *)v6 + v4[7]) = v21;
    double v22 = *MEMORY[0x1E4FB2848];
    double v23 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v24 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v25 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    id v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BFF1F104((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
    sub_1C0BA8CBC(0, &qword_1EA1A44F0, MEMORY[0x1E4FAB4D0]);
    sub_1C0BA8C78(&qword_1EA1A44F8, &qword_1EA1A44F0, v27);
    sub_1BFD5DED4();
    sub_1C151735C();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, void))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1C0BA73F0@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V1.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0BA74E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0BA5134(a1, a2, a3);
}

uint64_t sub_1C0BA74F8()
{
  return sub_1C12BC40C();
}

unint64_t sub_1C0BA7508(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0BA7538();
  unint64_t result = sub_1C0BA758C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0BA7538()
{
  unint64_t result = qword_1EA1A4490;
  if (!qword_1EA1A4490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4490);
  }
  return result;
}

unint64_t sub_1C0BA758C()
{
  unint64_t result = qword_1EA1A4498;
  if (!qword_1EA1A4498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4498);
  }
  return result;
}

uint64_t type metadata accessor for A18_V1.Bound()
{
  uint64_t result = qword_1EA1A44A8;
  if (!qword_1EA1A44A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0BA762C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v35 = a3;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    uint64_t v34 = v25;
    uint64_t v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C0019370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v34 + 40)) = *(void *)(v23 + *(int *)(v34 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    *(void *)(a1 + *(int *)(v35 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v35 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0BA79B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C0019370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C0BA7CFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  unsigned int v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F104((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C0019370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F104(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0019370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0BA8190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  long long v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C0019370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C0BA8474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F104((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C0019370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F104(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0019370(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0BA88D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0BA88E4);
}

uint64_t sub_1C0BA88E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0BA8994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0BA89A8);
}

void *sub_1C0BA89A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0BA8A50()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0BA8B00(uint64_t a1)
{
  uint64_t result = sub_1C0BA8B58(&qword_1EA1A44B8, (void (*)(uint64_t))type metadata accessor for A18_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0BA8B58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0BA8BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0BA5E80(a1, a2, a3);
}

uint64_t sub_1C0BA8BA8(uint64_t a1)
{
  return sub_1C0BA5F50(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0BA8BB0()
{
  unint64_t result = qword_1EA1A44C8;
  if (!qword_1EA1A44C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A44C8);
  }
  return result;
}

unint64_t sub_1C0BA8C04()
{
  unint64_t result = qword_1EA1A44D0;
  if (!qword_1EA1A44D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A44D0);
  }
  return result;
}

uint64_t sub_1C0BA8C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0BA73F0(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0BA8C60()
{
  return swift_deallocObject();
}

uint64_t sub_1C0BA8C70(uint64_t a1)
{
  return sub_1C0BA613C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0BA8C78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0BA8CBC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0BA8CBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V1.Layout;
    v8[1] = &type metadata for A18_V1.Layout.Attributes;
    long long v8[2] = sub_1C0BA8BB0();
    v8[3] = sub_1C0BA8C04();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0BA8D40(uint64_t a1)
{
  return sub_1C0BA65A4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0BA8D48(uint64_t a1)
{
  return sub_1C0BA6994(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0BA8D50(uint64_t a1)
{
  return sub_1C0BA6C38(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0BA8D58(uint64_t a1)
{
  return sub_1C0BA7014(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V1.Layout.Attributes()
{
  return &type metadata for A18_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V1.Layout()
{
  return &type metadata for A18_V1.Layout;
}

unint64_t sub_1C0BA8D84()
{
  unint64_t result = qword_1EA1A4500;
  if (!qword_1EA1A4500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4500);
  }
  return result;
}

unint64_t sub_1C0BA8DDC()
{
  unint64_t result = qword_1EA1A4508;
  if (!qword_1EA1A4508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4508);
  }
  return result;
}

unint64_t sub_1C0BA8E34()
{
  unint64_t result = qword_1EA1A4510;
  if (!qword_1EA1A4510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4510);
  }
  return result;
}

unint64_t sub_1C0BA8E8C()
{
  unint64_t result = qword_1EA1A4518;
  if (!qword_1EA1A4518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4518);
  }
  return result;
}

uint64_t sub_1C0BA8EE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0BA91E4(0, &qword_1EA1A4520, (uint64_t (*)(void))sub_1C0BA9190, (uint64_t)&type metadata for A18_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0BA9190();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0BA8B58(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  void v10[4] = v15;
  return result;
}

unint64_t sub_1C0BA9190()
{
  unint64_t result = qword_1EA1A4528;
  if (!qword_1EA1A4528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4528);
  }
  return result;
}

void sub_1C0BA91E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for A18_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BA9318);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0BA9354()
{
  unint64_t result = qword_1EA1A4538;
  if (!qword_1EA1A4538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4538);
  }
  return result;
}

unint64_t sub_1C0BA93AC()
{
  unint64_t result = qword_1EA1A4540;
  if (!qword_1EA1A4540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4540);
  }
  return result;
}

unint64_t sub_1C0BA9404()
{
  unint64_t result = qword_1EA1A4548;
  if (!qword_1EA1A4548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4548);
  }
  return result;
}

uint64_t sub_1C0BA9458(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v1, 0);
    unsigned int v4 = (unsigned char *)(a1 + 40);
    do
    {
      if (*v4 == 1)
      {
        uint64_t v14 = *(void *)&asc_1C1593F48[8 * (char)*((void *)v4 - 1)];
        uint64_t v5 = MEMORY[0x1C18C62A0](&v14, 1);
      }
      else
      {
        uint64_t v14 = *((void *)v4 - 1);
        uint64_t v5 = FormatFloat.description.getter();
      }
      uint64_t v7 = v5;
      uint64_t v8 = v6;
      uint64_t v2 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v15;
      }
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BFF661B8(v9 > 1, v10 + 1, 1);
        uint64_t v2 = v15;
      }
      *(void *)(v2 + 16) = v10 + 1;
      uint64_t v11 = v2 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      v4 += 16;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v2;
  sub_1BFED9C20();
  sub_1BFE99E40();
  uint64_t v12 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C0BA95DC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v1, 0);
    unsigned int v4 = (unsigned char *)(a1 + 49);
    do
    {
      uint64_t v5 = *(void *)(v4 - 17);
      if (*v4)
      {
        uint64_t v17 = *(void *)&asc_1C1593F48[8 * (char)v5];
        uint64_t v6 = MEMORY[0x1C18C62A0](&v17, 1);
        unint64_t v8 = v7;
      }
      else
      {
        uint64_t v9 = *(void *)(v4 - 9);
        char v10 = *(v4 - 1);
        if (v10)
        {
          uint64_t v17 = 0x286E6F6974706FLL;
          unint64_t v18 = 0xE700000000000000;
          sub_1BFE94AB4(v5, v9, 1);
          sub_1C151E80C();
          sub_1C151E80C();
          sub_1BFF45B38(v5, v9, v10, 0);
          uint64_t v6 = v17;
          unint64_t v8 = v18;
        }
        else
        {
          uint64_t v17 = *(void *)(v4 - 17);
          uint64_t v6 = sub_1C152088C();
          unint64_t v8 = v11;
          sub_1BFF45B38(v5, v9, v10, 0);
        }
      }
      uint64_t v2 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v19;
      }
      unint64_t v13 = *(void *)(v2 + 16);
      unint64_t v12 = *(void *)(v2 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BFF661B8(v12 > 1, v13 + 1, 1);
        uint64_t v2 = v19;
      }
      v4 += 24;
      *(void *)(v2 + 16) = v13 + 1;
      unint64_t v14 = v2 + 16 * v13;
      *(void *)(v14 + 32) = v6;
      *(void *)(v14 + 40) = v8;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v2;
  sub_1BFED9C20();
  sub_1BFE99E40();
  uint64_t v15 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t FormatPointEquation.description.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C0BA9458(v0);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1C0BA9458(v1);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 40;
}

uint64_t FormatPointEquation.x.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatPointEquation.y.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0BA98CC(uint64_t a1)
{
  unint64_t result = sub_1C0BA98F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BA98F4()
{
  unint64_t result = qword_1EA1A4550;
  if (!qword_1EA1A4550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4550);
  }
  return result;
}

unint64_t sub_1C0BA9948(void *a1)
{
  a1[1] = sub_1BFD621A0();
  a1[2] = sub_1BFDF6124();
  unint64_t result = sub_1C0BA9980();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BA9980()
{
  unint64_t result = qword_1EA1A4558;
  if (!qword_1EA1A4558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4558);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPointEquation()
{
  return &type metadata for FormatPointEquation;
}

BOOL static FormatSlotItemPuzzleStatisticTransform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2) {
    return ((v3 ^ v2) & 1) == 0;
  }
  return result;
}

unint64_t sub_1C0BA9A18(uint64_t a1)
{
  unint64_t result = sub_1C0BA9A40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BA9A40()
{
  unint64_t result = qword_1EA1A4560;
  if (!qword_1EA1A4560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4560);
  }
  return result;
}

unint64_t sub_1C0BA9A94(void *a1)
{
  a1[1] = sub_1C08B3D24();
  a1[2] = sub_1C08F012C();
  unint64_t result = sub_1C0BA9ACC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BA9ACC()
{
  unint64_t result = qword_1EA1A4568;
  if (!qword_1EA1A4568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4568);
  }
  return result;
}

uint64_t sub_1C0BA9B20@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatSlotItemPuzzleStatisticTransform.init(from:)(a1, a2);
}

uint64_t sub_1C0BA9B38(void *a1)
{
  return FormatSlotItemPuzzleStatisticTransform.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for FormatSlotItemPuzzleStatisticTransform(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0BA9BFCLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = v7 - 2;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for FormatSlotItemPuzzleStatisticTransform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C0BA9CE4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemPuzzleStatisticTransform()
{
  return &type metadata for FormatSlotItemPuzzleStatisticTransform;
}

uint64_t sub_1C0BA9D1C(uint64_t a1)
{
  sub_1C0067164(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v116 = (uint64_t)&v102 - v3;
  sub_1C0067164(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v110 = (char *)&v102 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v105 = (char *)&v102 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v104 = (char *)&v102 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v107 = (char *)&v102 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v106 = (char *)&v102 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v109 = (char *)&v102 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v108 = (char *)&v102 - v20;
  uint64_t v113 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1F4188790](v113);
  uint64_t v22 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v117 = (uint64_t)&v102 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v121 = (uint64_t)&v102 - v26;
  uint64_t v122 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1F4188790](v122);
  uint64_t v111 = (uint64_t)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v115 = (uint64_t)&v102 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v119 = (uint64_t)&v102 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v118 = (uint64_t)&v102 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v120 = (uint64_t)&v102 - v35;
  uint64_t v125 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1F4188790](v125);
  uint64_t v127 = (uint64_t)&v102 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v129);
  uint64_t v38 = (id *)((char *)&v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v124);
  uint64_t v123 = (uint64_t)&v102 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v126 = (uint64_t)&v102 - v41;
  uint64_t v42 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v45 = (char *)&v102 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v46);
  uint64_t v48 = (char *)&v102 - v47;
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v130 = MEMORY[0x1E4FBC860];
  uint64_t v50 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v50)
  {
    unint64_t v103 = v6;
    uint64_t v51 = *(unsigned __int8 *)(v43 + 80);
    uint64_t v52 = *(void *)(v43 + 72);
    uint64_t v112 = a1;
    uint64_t v128 = (v51 + 32) & ~v51;
    uint64_t v53 = a1 + v128;
    uint64_t v54 = MEMORY[0x1E4FBC860];
    long long v114 = v22;
    while (2)
    {
      sub_1C0BAADB8(v53, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C0BAADB8((uint64_t)v48, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:

          goto LABEL_12;
        case 3u:
        case 7u:
          uint64_t v55 = type metadata accessor for FormatContentSlotItemObject.Resolved;
          uint64_t v56 = (uint64_t)v38;
LABEL_6:
          sub_1BFECF064(v56, (uint64_t (*)(void))v55);
          goto LABEL_12;
        case 6u:
          uint64_t v57 = v123;
          sub_1C0BAACF4((uint64_t)v38, v123, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          uint64_t v58 = v57;
          uint64_t v59 = v126;
          sub_1C0BAACF4(v58, v126, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          sub_1C0BAADB8(v59 + *(int *)(v124 + 20), v127, type metadata accessor for PuzzleStatisticCategory);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v64 = v121;
              sub_1C0BAACF4(v127, v121, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
              sub_1C0BAADB8(v64, v119, type metadata accessor for PuzzleStatisticValue);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v80 = v64;
                  uint64_t v67 = v117;
                  sub_1C0BAADB8(v80, v117, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                  goto LABEL_38;
                case 4u:
                  uint64_t v81 = v119;
                  uint64_t v82 = v22;
                  uint64_t v83 = &v135;
                  goto LABEL_35;
                case 5u:
                  uint64_t v81 = v119;
                  uint64_t v82 = v22;
                  uint64_t v83 = &v136;
LABEL_35:
                  uint64_t v84 = *(v83 - 32);
                  sub_1BFDAA8BC(v81, v84, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  uint64_t v85 = type metadata accessor for PuzzleStreak();
                  LODWORD(v102) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v84, 1, v85);
                  uint64_t v86 = v84;
                  uint64_t v22 = v82;
                  sub_1C0BAAD5C(v86, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  uint64_t v67 = v117;
                  sub_1C0BAADB8(v121, v117, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                  if (v102 == 1) {
                    goto LABEL_36;
                  }
                  goto LABEL_38;
                default:
                  char v65 = *(unsigned char *)(v119 + 8);
                  uint64_t v66 = v64;
                  uint64_t v67 = v117;
                  sub_1C0BAADB8(v66, v117, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                  if ((v65 & 1) == 0)
                  {
LABEL_38:
                    sub_1BFECF064(v67, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                    uint64_t v89 = v121;
                    sub_1C0BAADB8(v121, (uint64_t)v22, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
LABEL_43:
                    sub_1BFECF064((uint64_t)v22, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                    uint64_t v73 = v89;
                    long long v72 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
                    goto LABEL_44;
                  }
LABEL_36:
                  sub_1C0BAADB8(v67 + *(int *)(v113 + 20), v115, type metadata accessor for PuzzleStatisticValue);
                  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                  uint64_t v67 = v117;
                  switch(EnumCaseMultiPayload)
                  {
                    case 1:
                      goto LABEL_38;
                    case 4:
                      uint64_t v102 = type metadata accessor for PuzzleStreak;
                      uint64_t v90 = v115;
                      uint64_t v91 = &v133;
                      goto LABEL_41;
                    case 5:
                      uint64_t v102 = type metadata accessor for PuzzleStreak;
                      uint64_t v90 = v115;
                      uint64_t v91 = &v134;
LABEL_41:
                      uint64_t v92 = *(v91 - 32);
                      sub_1BFDAA8BC(v90, v92, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      uint64_t v93 = type metadata accessor for PuzzleStreak();
                      char v88 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 48))(v92, 1, v93) != 1;
                      uint64_t v94 = v92;
                      uint64_t v22 = v114;
                      sub_1C0BAAD5C(v94, &qword_1EB882A40, (void (*)(uint64_t))v102);
                      break;
                    default:
                      char v88 = *(unsigned char *)(v115 + 8) ^ 1;
                      break;
                  }
                  uint64_t v95 = v67;
                  uint64_t v89 = v121;
                  sub_1BFECF064(v95, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                  sub_1C0BAADB8(v89, (uint64_t)v22, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                  if (v88) {
                    goto LABEL_43;
                  }
                  sub_1C0BAADB8((uint64_t)&v22[*(int *)(v113 + 24)], v111, type metadata accessor for PuzzleStatisticValue);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      goto LABEL_43;
                    case 4u:
                      uint64_t v96 = v111;
                      uint64_t v97 = &v131;
                      goto LABEL_49;
                    case 5u:
                      uint64_t v96 = v111;
                      uint64_t v97 = &v132;
LABEL_49:
                      uint64_t v98 = *(v97 - 32);
                      sub_1BFDAA8BC(v96, v98, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      uint64_t v99 = type metadata accessor for PuzzleStreak();
                      char v61 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 48))(v98, 1, v99) != 1;
                      uint64_t v100 = v98;
                      uint64_t v22 = v114;
                      sub_1C0BAAD5C(v100, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      break;
                    default:
                      char v61 = *(unsigned char *)(v111 + 8) ^ 1;
                      break;
                  }
                  sub_1BFECF064((uint64_t)v22, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
                  uint64_t v79 = v121;
                  uint64_t v78 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
LABEL_30:
                  sub_1BFECF064(v79, v78);
                  sub_1BFECF064(v126, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
                  if (v61)
                  {
LABEL_12:
                    sub_1C0BAACF4((uint64_t)v48, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      sub_1C05F694C(0, *(void *)(v54 + 16) + 1, 1);
                    }
                    uint64_t v54 = v130;
                    unint64_t v63 = *(void *)(v130 + 16);
                    unint64_t v62 = *(void *)(v130 + 24);
                    if (v63 >= v62 >> 1)
                    {
                      sub_1C05F694C(v62 > 1, v63 + 1, 1);
                      uint64_t v54 = v130;
                    }
                    *(void *)(v54 + 16) = v63 + 1;
                    sub_1C0BAACF4((uint64_t)v45, v54 + v128 + v63 * v52, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  }
                  else
                  {
LABEL_31:
                    sub_1BFECF064((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  }
                  v53 += v52;
                  if (--v50) {
                    continue;
                  }
                  uint64_t v49 = v130;
                  break;
              }
              break;
            case 2u:
              uint64_t v68 = v116;
              sub_1BFDAA8BC(v127, v116, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              uint64_t v69 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48))(v68, 1, v69);
              uint64_t v71 = v68;
              uint64_t v22 = v114;
              sub_1C0BAAD5C(v71, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              sub_1BFECF064(v126, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              if (v70 == 1) {
                goto LABEL_31;
              }
              goto LABEL_12;
            case 3u:
              sub_1BFECF064(v127, type metadata accessor for PuzzleStatisticCategory);
              sub_1BFECF064(v126, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
              goto LABEL_31;
            default:
              uint64_t v60 = v120;
              sub_1C0BAACF4(v127, v120, type metadata accessor for PuzzleStatisticValue);
              sub_1C0BAADB8(v60, v118, type metadata accessor for PuzzleStatisticValue);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  long long v72 = type metadata accessor for PuzzleStatisticValue;
                  uint64_t v73 = v120;
LABEL_44:
                  sub_1BFECF064(v73, v72);
                  uint64_t v55 = type metadata accessor for PuzzleStatistic;
                  uint64_t v56 = v126;
                  goto LABEL_6;
                case 4u:
                  uint64_t v74 = v118;
                  uint64_t v75 = (uint64_t)v110;
                  goto LABEL_28;
                case 5u:
                  uint64_t v74 = v118;
                  uint64_t v75 = (uint64_t)v103;
LABEL_28:
                  sub_1BFDAA8BC(v74, v75, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  uint64_t v76 = type metadata accessor for PuzzleStreak();
                  char v61 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 48))(v75, 1, v76) != 1;
                  uint64_t v77 = v75;
                  uint64_t v22 = v114;
                  sub_1C0BAAD5C(v77, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  break;
                default:
                  char v61 = *(unsigned char *)(v118 + 8) ^ 1;
                  break;
              }
              uint64_t v78 = type metadata accessor for PuzzleStatisticValue;
              uint64_t v79 = v120;
              goto LABEL_30;
          }
          break;
        case 8u:
          swift_bridgeObjectRelease();
          goto LABEL_12;
        default:
          swift_unknownObjectRelease();
          goto LABEL_12;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_1C0BAACF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0BAAD5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0067164(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0BAADB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C0BAAE20(void *a1, unint64_t a2, unint64_t a3)
{
  if (a3)
  {
    uint64_t v7 = (uint64_t *)(v3 + 16);
    swift_beginAccess();
    uint64_t v8 = *(void *)(v3 + 16);
    uint64_t v9 = *(void *)(v8 + 16);
    swift_bridgeObjectRetain();
    if (v9 && (unint64_t v10 = sub_1BFEF2D8C(a2, a3), (v11 & 1) != 0))
    {
      uint64_t v12 = *(void **)(*(void *)(v8 + 56) + 8 * v10);
      swift_endAccess();
      id v13 = v12;
      swift_bridgeObjectRelease();
      objc_msgSend(a1, sel_setBackgroundColor_, v13);
    }
    else
    {
      swift_endAccess();
      id v14 = sub_1C0BAAF9C(a2, a3);
      if (v14)
      {
        uint64_t v15 = v14;
        swift_beginAccess();
        id v16 = v15;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = *v7;
        *uint64_t v7 = 0x8000000000000000;
        sub_1C1068EB0((uint64_t)v16, a2, a3, isUniquelyReferenced_nonNull_native);
        *uint64_t v7 = v18;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        objc_msgSend(a1, sel_setBackgroundColor_, v16);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
}

ValueMetadata *type metadata accessor for EngagementBannerViewStyle()
{
  return &type metadata for EngagementBannerViewStyle;
}

id sub_1C0BAAF9C(unint64_t a1, unint64_t a2)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = self;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C02D2A68(a1, a2);
  unint64_t v7 = v6;
  uint64_t v8 = (void *)sub_1C151605C();
  sub_1BFE95664(v5, v7);
  *(void *)&long long aBlock = 0;
  id v9 = objc_msgSend(v4, sel_JSONObjectWithData_options_error_, v8, 0, &aBlock);

  if (!v9)
  {
    id v13 = (id)aBlock;
    id v14 = (void *)sub_1C1515D3C();

    swift_willThrow();
    return 0;
  }
  id v10 = (id)aBlock;
  sub_1C151FF3C();
  swift_unknownObjectRelease();
  sub_1C0BAB3E4(0, (unint64_t *)&qword_1EB880C40);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v32 + 16) && (unint64_t v11 = sub_1BFEF2D8C(0x756F72676B636162, 0xEF726F6C6F43646ELL), (v12 & 1) != 0))
  {
    sub_1BFF6A008(*(void *)(v32 + 56) + 32 * v11, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v34 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v34 + 1))
  {
    sub_1BFEFE4A0((uint64_t)&aBlock);
    return 0;
  }
  sub_1C0BAB3E4(0, (unint64_t *)&qword_1EB8701F0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v32 + 16) && (sub_1BFEF2D8C(0x746867696CLL, 0xE500000000000000), (v15 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    id v16 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel_colorWithHexString_, v16);

  id v21 = objc_msgSend(v20, sel_ne_color);
  if (*(void *)(v32 + 16)
    && ((sub_1BFEF2D8C(1802658148, 0xE400000000000000), (v22 & 1) != 0)
     || *(void *)(v32 + 16) && (sub_1BFEF2D8C(0x746867696CLL, 0xE500000000000000), (v23 & 1) != 0)))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
  }
  id v25 = objc_msgSend(v19, sel_colorWithHexString_, v24);

  id v26 = objc_msgSend(v25, sel_ne_color);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = v21;
  id v28 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  uint64_t v35 = sub_1C0BAB478;
  uint64_t v36 = v27;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v34 = sub_1BFDF2404;
  *((void *)&v34 + 1) = &block_descriptor_45;
  uint64_t v29 = _Block_copy(&aBlock);
  id v30 = v26;
  id v31 = v21;
  id v17 = objc_msgSend(v28, sel_initWithDynamicProvider_, v29);
  _Block_release(v29);

  swift_release();
  return v17;
}

void sub_1C0BAB3E4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C151E41C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C0BAB438()
{
  return swift_deallocObject();
}

id sub_1C0BAB478(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  unint64_t v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v3;
  }
  return v4;
}

uint64_t sub_1C0BAB4BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  sub_1C0BABBC8(0, &qword_1EA1A4580, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0BABB74();
  sub_1C1520F0C();
  char v15 = 0;
  sub_1C15207CC();
  if (!v5)
  {
    char v14 = 1;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C0BAB644()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0BAB67C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0BABE38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0BAB6A4(uint64_t a1)
{
  unint64_t v2 = sub_1C0BABB74();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0BAB6E0(uint64_t a1)
{
  unint64_t v2 = sub_1C0BABB74();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0BAB71C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C0BAB958(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1C0BAB74C(void *a1)
{
  return sub_1C0BAB4BC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C0BAB76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_1C0BAB8E4(0, &qword_1EA1A2778, (uint64_t (*)(uint64_t))sub_1C03A1444, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0A1B2E8();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1527210;
  *(void *)(v11 + 32) = 0x696669746E656449;
  *(void *)(v11 + 40) = 0xEA00000000007265;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  uint64_t v13 = MEMORY[0x1E4FBB208];
  *(void *)(v11 + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 80) = v13;
  *(void *)(v11 + 48) = a1;
  *(void *)(v11 + 56) = a2;
  *(unsigned char *)(v11 + 88) = 0;
  *(void *)(v11 + 96) = 1701667150;
  *(void *)(v11 + 104) = 0xE400000000000000;
  *(void *)(v11 + 136) = v12;
  *(void *)(v11 + 144) = v13;
  *(void *)(v11 + 112) = a3;
  *(void *)(v11 + 120) = a4;
  *(unsigned char *)(v11 + 152) = 0;
  *(void *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(void *)(inited + 64) = &off_1F1B9F170;
  *(void *)(inited + 32) = 0x7453656C7A7A7550;
  *(void *)(inited + 40) = 0xEF63697473697461;
  *(void *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C03A101C(inited);
  a5[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a5[4] = (uint64_t)&off_1F1B9F238;
  *a5 = result;
  return result;
}

void sub_1C0BAB8E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleStatistic()
{
  return &type metadata for DebugInspectionPuzzleStatistic;
}

uint64_t sub_1C0BAB958(void *a1)
{
  sub_1C0BABBC8(0, &qword_1EA1A4570, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0BABB74();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1C152069C();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1C152069C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1C0BABB74()
{
  unint64_t result = qword_1EA1A4578;
  if (!qword_1EA1A4578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4578);
  }
  return result;
}

void sub_1C0BABBC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0BABB74();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionPuzzleStatistic.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionPuzzleStatistic.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BABCF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzleStatistic.CodingKeys()
{
  return &type metadata for DebugInspectionPuzzleStatistic.CodingKeys;
}

unint64_t sub_1C0BABD34()
{
  unint64_t result = qword_1EA1A4588;
  if (!qword_1EA1A4588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4588);
  }
  return result;
}

unint64_t sub_1C0BABD8C()
{
  unint64_t result = qword_1EA1A4590;
  if (!qword_1EA1A4590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4590);
  }
  return result;
}

unint64_t sub_1C0BABDE4()
{
  unint64_t result = qword_1EA1A4598;
  if (!qword_1EA1A4598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4598);
  }
  return result;
}

uint64_t sub_1C0BABE38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t FormatContentBackground.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0348588(v1 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content, a1);
}

uint64_t FormatContentBackground.__allocating_init(content:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1C0BABFB0(a1, v2 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return v2;
}

uint64_t FormatContentBackground.init(content:)(uint64_t a1)
{
  sub_1C0BABFB0(a1, v1 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return v1;
}

uint64_t sub_1C0BABFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatContentBackground.deinit()
{
  sub_1C0BAC03C(v0 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return v0;
}

uint64_t sub_1C0BAC03C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatContentBackground.__deallocating_deinit()
{
  sub_1C0BAC03C(v0 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BAC0FC(uint64_t a1)
{
  uint64_t result = sub_1C0BAC218(&qword_1EA1A45A0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatContentBackground()
{
  uint64_t result = qword_1EB867348;
  if (!qword_1EB867348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0BAC18C(void *a1)
{
  a1[1] = sub_1C0BAC218(&qword_1EA1A45A8);
  a1[2] = sub_1C0BAC218(&qword_1EA1A45B0);
  uint64_t result = sub_1C0BAC218(&qword_1EA1A45B8);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0BAC218(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatContentBackground();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C0BAC25C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C08814F8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0BAC288(void *a1)
{
  return FormatContentBackground.encode(to:)(a1);
}

uint64_t sub_1C0BAC2AC(void *a1, void *a2)
{
  return static FormatContent.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content, *a2 + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content);
}

uint64_t sub_1C0BAC2C8()
{
  return type metadata accessor for FormatContentBackground();
}

uint64_t sub_1C0BAC2D0()
{
  uint64_t result = type metadata accessor for FormatContent(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FormatContentBackground(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatContentBackground);
}

uint64_t dispatch thunk of FormatContentBackground.__allocating_init(content:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C0BAC3A4(uint64_t a1)
{
  uint64_t v4 = sub_1C151794C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = *((unsigned __int8 *)v1 + 8);
  if (v11 == 5)
  {
    uint64_t v29 = *v1;
    swift_retain();
    char v12 = sub_1BFF63944(a1);
    uint64_t result = swift_release();
    if (v2) {
      return result;
    }
    sub_1C15176BC();
    sub_1C151793C();
    if (byte_1EA2B53C0 == 1)
    {
      double v15 = v14;
      objc_msgSend(v12, sel_pointSize);
      double v17 = round(v15 * (v16 * 4.0) * 0.25);
      if (byte_1EA2B53C0) {
        double v16 = v17;
      }
      uint64_t v18 = (uint64_t *)objc_msgSend(v12, sel_fontWithSize_, v16);

      char v12 = v18;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v19 = objc_msgSend(self, sel_configurationWithFont_, v12);
  }
  else
  {
    uint64_t v29 = *v1;
    swift_retain();
    id v20 = sub_1BFF63944(a1);
    uint64_t result = swift_release();
    if (v2) {
      return result;
    }
    sub_1C15176BC();
    sub_1C151793C();
    if (byte_1EA2B53C0 == 1)
    {
      double v22 = v21;
      objc_msgSend(v20, sel_pointSize);
      double v24 = round(v22 * (v23 * 4.0) * 0.25);
      if (byte_1EA2B53C0) {
        double v23 = v24;
      }
      id v25 = (uint64_t *)objc_msgSend(v20, sel_fontWithSize_, v23);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      uint64_t v26 = -1;
      char v12 = v25;
      switch(v11)
      {
        case 1:
          goto LABEL_14;
        case 2:
          goto LABEL_15;
        case 3:
          goto LABEL_16;
        case 4:
          goto LABEL_17;
        default:
          break;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      uint64_t v26 = -1;
      char v12 = v20;
      switch(v11)
      {
        case 1:
LABEL_14:
          uint64_t v26 = 0;
          break;
        case 2:
LABEL_15:
          uint64_t v26 = 1;
          break;
        case 3:
LABEL_16:
          uint64_t v26 = 2;
          break;
        case 4:
LABEL_17:
          uint64_t v26 = 3;
          break;
        default:
          break;
      }
    }
    id v19 = objc_msgSend(self, sel_configurationWithFont_scale_, v12, v26);
  }
  id v27 = v19;

  return (uint64_t)v27;
}

id sub_1C0BAC750()
{
  uint64_t v2 = sub_1C151794C();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v41 - v8;
  char v10 = *v0;
  uint64_t v11 = *((void *)v0 + 1);
  uint64_t v12 = v0[16];
  if (v11)
  {
    uint64_t v42 = v6;
    uint64_t v43 = v7;
    if (v12 == 5)
    {
      LOBYTE(v44) = v10;
      id v13 = sub_1BFF68690();
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v13);

      sub_1C1517EFC();
      id v15 = v44;
      double v16 = sub_1BFF493E4((uint64_t)v44, v11);
      if (!v1)
      {
        double v17 = v16;
        swift_release();
        objc_msgSend(v14, sel_scaledValueForValue_, v17);
        double v19 = v18;

        LOBYTE(v44) = v10;
        id v20 = sub_1BFF68690();
        double v21 = self;
        id v22 = objc_msgSend(v21, sel_configurationWithTextStyle_, v20);

        id v23 = v22;
        sub_1C15176BC();
        sub_1C151793C();
        double v25 = round(v19 * 4.0 * v24 * 0.25);
        if (byte_1EA2B53C0) {
          double v19 = v25;
        }
        (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v42);
        id v26 = objc_msgSend(v21, sel_configurationWithPointSize_, v19);
        id v27 = objc_msgSend(v23, sel_configurationByApplyingConfiguration_, v26);
LABEL_16:
        id v15 = v27;

        return v15;
      }
    }
    else
    {
      LOBYTE(v44) = v10;
      id v30 = sub_1BFF68690();
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v30);

      sub_1C1517EFC();
      id v15 = v44;
      double v31 = sub_1BFF493E4((uint64_t)v44, v11);
      if (!v1)
      {
        double v32 = v31;
        swift_release();
        objc_msgSend(v14, sel_scaledValueForValue_, v32);
        double v34 = v33;

        LOBYTE(v44) = v10;
        id v35 = sub_1BFF68690();
        uint64_t v36 = self;
        id v37 = objc_msgSend(v36, sel_configurationWithTextStyle_scale_, v35, v12 - 1);

        id v23 = v37;
        sub_1C15176BC();
        sub_1C151793C();
        double v39 = round(v34 * 4.0 * v38 * 0.25);
        if (byte_1EA2B53C0) {
          double v34 = v39;
        }
        (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v42);
        id v26 = objc_msgSend(v36, sel_configurationWithPointSize_, v34);
        id v27 = objc_msgSend(v23, sel_configurationByApplyingConfiguration_, v26);
        goto LABEL_16;
      }
    }

    swift_release();
  }
  else
  {
    LOBYTE(v44) = *v0;
    id v28 = sub_1BFF68690();
    if (v12 == 5) {
      id v29 = objc_msgSend(self, sel_configurationWithTextStyle_, v28);
    }
    else {
      id v29 = objc_msgSend(self, sel_configurationWithTextStyle_scale_, v28, v12 - 1);
    }
    id v15 = v29;
  }
  return v15;
}

uint64_t sub_1C0BACBEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.Font.init(from:)(a1, a2);
}

uint64_t sub_1C0BACC04(void *a1)
{
  return FormatSymbolConfig.Font.encode(to:)(a1);
}

uint64_t sub_1C0BACC24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSymbolConfig.TextStyle.init(from:)(a1, a2);
}

uint64_t sub_1C0BACC3C(void *a1)
{
  return FormatSymbolConfig.TextStyle.encode(to:)(a1);
}

BOOL static FormatSymbolConfig.Weight.== infix(_:_:)(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = a1[1];
  int v3 = *(unsigned __int8 *)(a2 + 1);
  if ((sub_1C1490D58(*a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 != 5) {
    return v3 != 5 && (sub_1C1491034(v2, v3) & 1) != 0;
  }
  return v3 == 5;
}

uint64_t sub_1C0BACCCC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatSymbolConfig.Weight.init(from:)(a1, a2);
}

uint64_t sub_1C0BACCE4(void *a1)
{
  return FormatSymbolConfig.Weight.encode(to:)(a1);
}

BOOL sub_1C0BACCFC(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = a1[1];
  int v3 = *(unsigned __int8 *)(a2 + 1);
  if ((sub_1C1490D58(*a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 != 5) {
    return v3 != 5 && (sub_1C1491034(v2, v3) & 1) != 0;
  }
  return v3 == 5;
}

BOOL static FormatSymbolConfig.Scale.== infix(_:_:)(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x746C7561666564;
  uint64_t v3 = *a1;
  int v4 = a1[1];
  int v5 = a2[1];
  unint64_t v6 = 0xE700000000000000;
  uint64_t v7 = 0x746C7561666564;
  switch(v3)
  {
    case 1:
      uint64_t v7 = 0x6669636570736E75;
      unint64_t v6 = 0xEA00000000006465;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v7 = 0x6C6C616D73;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v7 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v7 = 0x656772616CLL;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE700000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v8 = 0xEA00000000006465;
      if (v7 == 0x6669636570736E75) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v8 = 0xE500000000000000;
      if (v7 != 0x6C6C616D73) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v2 = 0x6D756964656DLL;
      goto LABEL_12;
    case 4:
      unint64_t v8 = 0xE500000000000000;
      if (v7 != 0x656772616CLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v7 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        char v9 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL result = 0;
        if ((v9 & 1) == 0) {
          return result;
        }
      }
      if (v4 != 10) {
        return v5 != 10 && (sub_1C1490D58(v4, v5) & 1) != 0;
      }
      return v5 == 10;
  }
}

uint64_t sub_1C0BACF78@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatSymbolConfig.Scale.init(from:)(a1, a2);
}

uint64_t sub_1C0BACF90(void *a1)
{
  return FormatSymbolConfig.Scale.encode(to:)(a1);
}

BOOL sub_1C0BACFA8(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = a1[1];
  int v3 = *(unsigned __int8 *)(a2 + 1);
  if ((sub_1C1491034(*a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 != 10) {
    return v3 != 10 && (sub_1C1490D58(v2, v3) & 1) != 0;
  }
  return v3 == 10;
}

uint64_t _s8NewsFeed18FormatSymbolConfigO9TextStyleV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v6 = FormatFontScalingStyle.rawValue.getter();
  uint64_t v8 = v7;
  if (v6 == FormatFontScalingStyle.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  if (v2)
  {
    if (!v4) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = sub_1C00DE998(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
LABEL_10:
    if (v3 == 5)
    {
      if (v5 != 5) {
        return 0;
      }
    }
    else if (v5 == 5 || (sub_1C1491034(v3, v5) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (!v4) {
    goto LABEL_10;
  }
  return 0;
}

uint64_t _s8NewsFeed18FormatSymbolConfigO4SizeV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 9);
  uint64_t v5 = *(void *)a2;
  int v6 = *(unsigned __int8 *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v8 = sub_1C00DE998(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return 0;
  }
  if (v3 != 10)
  {
    if (v6 == 10 || (sub_1C1490D58(v3, v6) & 1) == 0) {
      return 0;
    }
LABEL_7:
    if (v4 == 5)
    {
      if (v7 != 5) {
        return 0;
      }
    }
    else if (v7 == 5 || (sub_1C1491034(v4, v7) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (v6 == 10) {
    goto LABEL_7;
  }
  return 0;
}

uint64_t _s8NewsFeed18FormatSymbolConfigO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 17);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 17);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_18;
      }
      LOBYTE(v22) = *(void *)a1;
      uint64_t v23 = v2;
      char v24 = v4;
      LOBYTE(v19) = v7;
      uint64_t v20 = v6;
      char v21 = v8;
      sub_1BFF61744(v7, v6, v8, 1);
      sub_1BFF61744(v3, v2, v4, 1);
      sub_1BFF61744(v3, v2, v4, 1);
      sub_1BFF61744(v7, v6, v8, 1);
      char v10 = _s8NewsFeed18FormatSymbolConfigO9TextStyleV2eeoiySbAE_AEtFZ_0((uint64_t)&v22, (uint64_t)&v19);
      sub_1BFF61770(v3, v2, v4, 1);
      sub_1BFF61770(v7, v6, v8, 1);
      sub_1BFF61770(v7, v6, v8, 1);
      sub_1BFF61770(v3, v2, v4, 1);
      return v10 & 1;
    case 2:
      if (v9 != 2)
      {
LABEL_18:
        swift_bridgeObjectRetain();
        goto LABEL_19;
      }
      uint64_t v22 = *(void *)a1;
      LOWORD(v23) = v2;
      uint64_t v19 = v7;
      LOWORD(v20) = v6;
      sub_1BFF61744(v7, v6, v8, 2);
      sub_1BFF61744(v3, v2, v4, 2);
      sub_1BFF61744(v3, v2, v4, 2);
      sub_1BFF61744(v7, v6, v8, 2);
      char v10 = _s8NewsFeed18FormatSymbolConfigO4SizeV2eeoiySbAE_AEtFZ_0((uint64_t)&v22, (uint64_t)&v19);
      sub_1BFF61770(v3, v2, v4, 2);
      sub_1BFF61770(v7, v6, v8, 2);
      sub_1BFF61770(v7, v6, v8, 2);
      sub_1BFF61770(v3, v2, v4, 2);
      return v10 & 1;
    case 3:
      if (v9 != 3) {
        goto LABEL_19;
      }
      if ((sub_1C1490D58(*(void *)a1, *(void *)a2) & 1) == 0) {
        goto LABEL_28;
      }
      if (BYTE1(v3) == 5)
      {
        sub_1BFF61770(v3, v2, v4, 3);
        sub_1BFF61770(v7, v6, v8, 3);
        if (BYTE1(v7) != 5) {
          goto LABEL_21;
        }
        goto LABEL_38;
      }
      if (BYTE1(v7) == 5)
      {
LABEL_28:
        sub_1BFF61770(v3, v2, v4, 3);
        uint64_t v11 = v7;
        uint64_t v12 = v6;
        uint64_t v13 = v8;
        char v14 = 3;
        goto LABEL_20;
      }
      char v16 = sub_1C1491034(BYTE1(v3), SBYTE1(v7));
      sub_1BFF61770(v3, v2, v4, 3);
      sub_1BFF61770(v7, v6, v8, 3);
      if (v16) {
        goto LABEL_38;
      }
      goto LABEL_21;
    case 4:
      if (v9 != 4) {
        goto LABEL_19;
      }
      if ((sub_1C1491034(*(void *)a1, *(void *)a2) & 1) == 0) {
        goto LABEL_30;
      }
      if (BYTE1(v3) == 10)
      {
        sub_1BFF61770(v3, v2, v4, 4);
        sub_1BFF61770(v7, v6, v8, 4);
        if (BYTE1(v7) != 10) {
          goto LABEL_21;
        }
        goto LABEL_38;
      }
      if (BYTE1(v7) == 10)
      {
LABEL_30:
        sub_1BFF61770(v3, v2, v4, 4);
        uint64_t v11 = v7;
        uint64_t v12 = v6;
        uint64_t v13 = v8;
        char v14 = 4;
        goto LABEL_20;
      }
      char v17 = sub_1C1490D58(BYTE1(v3), SBYTE1(v7));
      sub_1BFF61770(v3, v2, v4, 4);
      sub_1BFF61770(v7, v6, v8, 4);
      if (v17) {
        goto LABEL_38;
      }
      goto LABEL_21;
    default:
      if (*(unsigned char *)(a2 + 17))
      {
        swift_retain();
LABEL_19:
        sub_1BFF61744(v7, v6, v8, v9);
        sub_1BFF61770(v3, v2, v4, v5);
        uint64_t v11 = v7;
        uint64_t v12 = v6;
        uint64_t v13 = v8;
        char v14 = v9;
        goto LABEL_20;
      }
      uint64_t v22 = *(void *)a1;
      uint64_t v19 = v7;
      sub_1BFF61744(v7, v6, v8, 0);
      sub_1BFF61744(v3, v2, v4, 0);
      sub_1BFF61744(v3, v2, v4, 0);
      sub_1BFF61744(v7, v6, v8, 0);
      if ((static FormatFont.== infix(_:_:)(&v22, (unint64_t *)&v19) & 1) == 0) {
        goto LABEL_32;
      }
      if (v2 == 5)
      {
        sub_1BFF61770(v3, v2, v4, 0);
        sub_1BFF61770(v7, v6, v8, 0);
        sub_1BFF61770(v7, v6, v8, 0);
        sub_1BFF61770(v3, v2, v4, 0);
        if (v6 != 5) {
          goto LABEL_21;
        }
      }
      else
      {
        if (v6 == 5)
        {
LABEL_32:
          sub_1BFF61770(v3, v2, v4, 0);
          sub_1BFF61770(v7, v6, v8, 0);
          sub_1BFF61770(v7, v6, v8, 0);
          uint64_t v11 = v3;
          uint64_t v12 = v2;
          uint64_t v13 = v4;
          char v14 = 0;
LABEL_20:
          sub_1BFF61770(v11, v12, v13, v14);
LABEL_21:
          char v10 = 0;
          return v10 & 1;
        }
        char v18 = sub_1C1491034(v2, v6);
        sub_1BFF61770(v3, v2, v4, 0);
        sub_1BFF61770(v7, v6, v8, 0);
        sub_1BFF61770(v7, v6, v8, 0);
        sub_1BFF61770(v3, v2, v4, 0);
        if ((v18 & 1) == 0) {
          goto LABEL_21;
        }
      }
LABEL_38:
      char v10 = 1;
      return v10 & 1;
  }
}

BOOL _s8NewsFeed18FormatSymbolConfigO4FontV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a2 + 8);
  unint64_t v6 = *(void *)a2;
  uint64_t v7 = v2;
  if ((static FormatFont.== infix(_:_:)(&v7, &v6) & 1) == 0) {
    return 0;
  }
  if (v3 != 5) {
    return v4 != 5 && (sub_1C1491034(v3, v4) & 1) != 0;
  }
  return v4 == 5;
}

unint64_t sub_1C0BAD8A0(uint64_t a1)
{
  unint64_t result = sub_1C0BAD8C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BAD8C8()
{
  unint64_t result = qword_1EA1A45C0;
  if (!qword_1EA1A45C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45C0);
  }
  return result;
}

uint64_t sub_1C0BAD91C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BADEAC(a1, a2, a3, (uint64_t (*)(void))sub_1C08BCD40, (uint64_t (*)(void))sub_1C08ED6FC, (uint64_t (*)(void))sub_1C0BAD95C);
}

unint64_t sub_1C0BAD95C()
{
  unint64_t result = qword_1EA1A45C8;
  if (!qword_1EA1A45C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45C8);
  }
  return result;
}

unint64_t sub_1C0BAD9B0(uint64_t a1)
{
  unint64_t result = sub_1C0BAD9D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BAD9D8()
{
  unint64_t result = qword_1EA1A45D0;
  if (!qword_1EA1A45D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45D0);
  }
  return result;
}

uint64_t sub_1C0BADA2C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BADEAC(a1, a2, a3, (uint64_t (*)(void))sub_1C08BCCEC, (uint64_t (*)(void))sub_1C08ED750, (uint64_t (*)(void))sub_1C0BADA6C);
}

unint64_t sub_1C0BADA6C()
{
  unint64_t result = qword_1EA1A45D8;
  if (!qword_1EA1A45D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45D8);
  }
  return result;
}

unint64_t sub_1C0BADAC0(uint64_t a1)
{
  unint64_t result = sub_1C0BADAE8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BADAE8()
{
  unint64_t result = qword_1EA1A45E0;
  if (!qword_1EA1A45E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45E0);
  }
  return result;
}

uint64_t sub_1C0BADB3C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BADEAC(a1, a2, a3, (uint64_t (*)(void))sub_1BFD55098, (uint64_t (*)(void))sub_1BFD41344, (uint64_t (*)(void))sub_1C0BADB7C);
}

unint64_t sub_1C0BADB7C()
{
  unint64_t result = qword_1EA1A45E8;
  if (!qword_1EA1A45E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45E8);
  }
  return result;
}

unint64_t sub_1C0BADBD0(uint64_t a1)
{
  unint64_t result = sub_1C0BADBF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BADBF8()
{
  unint64_t result = qword_1EA1A45F0;
  if (!qword_1EA1A45F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45F0);
  }
  return result;
}

uint64_t sub_1C0BADC4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BADEAC(a1, a2, a3, (uint64_t (*)(void))sub_1C08BCC98, (uint64_t (*)(void))sub_1C08ED7A4, (uint64_t (*)(void))sub_1C0BADC8C);
}

unint64_t sub_1C0BADC8C()
{
  unint64_t result = qword_1EA1A45F8;
  if (!qword_1EA1A45F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A45F8);
  }
  return result;
}

unint64_t sub_1C0BADCE0(uint64_t a1)
{
  unint64_t result = sub_1C0BADD08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BADD08()
{
  unint64_t result = qword_1EA1A4600;
  if (!qword_1EA1A4600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4600);
  }
  return result;
}

uint64_t sub_1C0BADD5C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BADEAC(a1, a2, a3, (uint64_t (*)(void))sub_1C08BCC44, (uint64_t (*)(void))sub_1C08ED7F8, (uint64_t (*)(void))sub_1C0BADD9C);
}

unint64_t sub_1C0BADD9C()
{
  unint64_t result = qword_1EA1A4608;
  if (!qword_1EA1A4608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4608);
  }
  return result;
}

unint64_t sub_1C0BADDF0(uint64_t a1)
{
  unint64_t result = sub_1C0BADE18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BADE18()
{
  unint64_t result = qword_1EA1A4610;
  if (!qword_1EA1A4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4610);
  }
  return result;
}

uint64_t sub_1C0BADE6C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BADEAC(a1, a2, a3, (uint64_t (*)(void))sub_1BFD67C50, (uint64_t (*)(void))sub_1BFDEBA30, (uint64_t (*)(void))sub_1C0BADF00);
}

uint64_t sub_1C0BADEAC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BADF00()
{
  unint64_t result = qword_1EA1A4618;
  if (!qword_1EA1A4618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4618);
  }
  return result;
}

uint64_t sub_1C0BADF54(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_1C0BADF5C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig()
{
  return &type metadata for FormatSymbolConfig;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatSymbolConfig.Font(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig.Font(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FormatSymbolConfig.Font(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.Font(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 251);
  }
  if (*(unsigned __int8 *)(a1 + 8) <= 5u) {
    int v3 = 5;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 8);
  }
  int v4 = v3 - 6;
  if (*(unsigned __int8 *)(a1 + 8) < 5u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.Font(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Font()
{
  return &type metadata for FormatSymbolConfig.Font;
}

uint64_t sub_1C0BAE0F8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig.TextStyle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatSymbolConfig.TextStyle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.TextStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.TextStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.TextStyle()
{
  return &type metadata for FormatSymbolConfig.TextStyle;
}

uint64_t sub_1C0BAE29C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig.Size(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for FormatSymbolConfig.Size(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Size()
{
  return &type metadata for FormatSymbolConfig.Size;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.Weight(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 65285 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65285 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65285;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 5u) {
    int v6 = 5;
  }
  else {
    int v6 = *((unsigned __int8 *)a1 + 1);
  }
  int v7 = v6 - 6;
  if (*((unsigned __int8 *)a1 + 1) < 5u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.Weight(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65285 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65285 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 251;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BAE4ECLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Weight()
{
  return &type metadata for FormatSymbolConfig.Weight;
}

uint64_t getEnumTagSinglePayload for FormatSymbolConfig.Scale(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 65284 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65284 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65284;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSymbolConfig.Scale(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65284 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65284 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 252;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BAE684);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolConfig.Scale()
{
  return &type metadata for FormatSymbolConfig.Scale;
}

id sub_1C0BAE6BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = -1;
  switch(v2)
  {
    case 1:
      uint64_t v3 = 0;
      goto LABEL_6;
    case 2:
      uint64_t v3 = 1;
      goto LABEL_6;
    case 3:
      uint64_t v3 = 2;
      goto LABEL_6;
    case 4:
      uint64_t v3 = 3;
      goto LABEL_6;
    case 5:
      id v9 = objc_msgSend(self, sel_configurationWithWeight_, v1);
      return v9;
    default:
LABEL_6:
      unsigned int v4 = self;
      id v5 = objc_msgSend(v4, sel_configurationWithScale_, v3);
      id v6 = objc_msgSend(v4, sel_configurationWithWeight_, v1);
      id v7 = objc_msgSend(v5, sel_configurationByApplyingConfiguration_, v6);

      return v7;
  }
}

id sub_1C0BAE800()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = *v0 - 1;
  uint64_t v3 = self;
  id result = objc_msgSend(v3, sel_configurationWithScale_, v2);
  switch(v1)
  {
    case 1:
      uint64_t v1 = 1;
      goto LABEL_11;
    case 2:
      uint64_t v1 = 2;
      goto LABEL_11;
    case 3:
      uint64_t v1 = 3;
      goto LABEL_11;
    case 4:
      uint64_t v1 = 4;
      goto LABEL_11;
    case 5:
      uint64_t v1 = 5;
      goto LABEL_11;
    case 6:
      uint64_t v1 = 6;
      goto LABEL_11;
    case 7:
      uint64_t v1 = 7;
      goto LABEL_11;
    case 8:
      uint64_t v1 = 8;
      goto LABEL_11;
    case 9:
      uint64_t v1 = 9;
      goto LABEL_11;
    case 10:
      return result;
    default:
LABEL_11:
      id v5 = result;
      id v6 = objc_msgSend(v3, sel_configurationWithWeight_, v1);
      id v7 = objc_msgSend(v5, sel_configurationByApplyingConfiguration_, v6);

      return v7;
  }
}

uint64_t FeedRefreshBasicAnimation.__allocating_init(refreshStateMachine:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t FeedRefreshBasicAnimation.animate(context:animation:applyUpdates:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(void (*a1)(void)), uint64_t))
{
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  a3(sub_1C0BAEAD8, v4);
  return swift_release_n();
}

uint64_t sub_1C0BAEA04()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0BAEA3C(void (*a1)(void))
{
  a1();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1C15181EC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0BAEAD8(void (*a1)(void))
{
  return sub_1C0BAEA3C(a1);
}

uint64_t FeedRefreshBasicAnimation.animationCancelled(context:animation:)()
{
  return sub_1C15181EC();
}

uint64_t FeedRefreshBasicAnimation.deinit()
{
  swift_release();
  return v0;
}

uint64_t FeedRefreshBasicAnimation.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BAEB88(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(void (*a1)(void)), uint64_t))
{
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  a3(sub_1C0BAEAD8, v4);
  return swift_release_n();
}

uint64_t sub_1C0BAEC14()
{
  return sub_1C15181EC();
}

uint64_t method lookup function for FeedRefreshBasicAnimation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedRefreshBasicAnimation);
}

uint64_t dispatch thunk of FeedRefreshBasicAnimation.__allocating_init(refreshStateMachine:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatBackgroundLayoutSolverResult.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFDBB6C4(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content, a1);
}

uint64_t FormatBackgroundLayoutSolverResult.layoutResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 32);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 40);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutResult + 48);
  char v6 = *(unsigned char *)(v2 + 56);
  long long v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBackgroundLayoutSolverResult.layoutOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions;
  uint64_t v4 = sub_1C151B62C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FormatBackgroundLayoutSolverResult.deinit()
{
  sub_1BFD60E9C(v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions;
  uint64_t v2 = sub_1C151B62C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FormatBackgroundLayoutSolverResult.__deallocating_deinit()
{
  sub_1BFD60E9C(v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_content);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed34FormatBackgroundLayoutSolverResult_layoutOptions;
  uint64_t v2 = sub_1C151B62C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BAEF08()
{
  return type metadata accessor for FormatBackgroundLayoutSolverResult();
}

uint64_t type metadata accessor for FormatBackgroundLayoutSolverResult()
{
  uint64_t result = qword_1EB869D20;
  if (!qword_1EB869D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0BAEF5C()
{
  uint64_t result = type metadata accessor for FormatContent.Resolved();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151B62C();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for FormatBackgroundLayoutSolverResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBackgroundLayoutSolverResult);
}

uint64_t sub_1C0BAF048()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FeedGapOffline.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FeedGapOffline.traits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

void FeedGapOffline.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedGapOffline.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGapOffline.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedGapOffline.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = *(void *)(v1 + 80);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

double FeedGapOffline.init(identifier:title:description:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7 = unk_1F1B899F8;
  if ((unk_1F1B899F8 & ~qword_1F1B899F0) == 0) {
    uint64_t v7 = 0;
  }
  *(void *)(a7 + 16) = v7 | qword_1F1B899F0;
  *(void *)(a7 + 24) = 0;
  *(unsigned char *)(a7 + 32) = 1;
  double result = 0.0;
  *(_OWORD *)(a7 + 72) = xmmword_1C152C800;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 40) = a3;
  *(void *)(a7 + 48) = a4;
  *(void *)(a7 + 56) = a5;
  *(void *)(a7 + 64) = a6;
  return result;
}

uint64_t FeedGapOffline.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedGapOffline.debugTitle.getter()
{
  return 0;
}

uint64_t FeedGapOffline.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedGapOffline.debugScoreProfile.getter()
{
  return 0;
}

unint64_t sub_1C0BAF1B4(uint64_t a1)
{
  unint64_t result = sub_1C0BAF1DC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0BAF1DC()
{
  unint64_t result = qword_1EB86EFC0;
  if (!qword_1EB86EFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86EFC0);
  }
  return result;
}

unint64_t destroy for FeedGapOffline(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 80);
  if (result >= 0x11)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeedGapOffline(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = (void *)(a2 + 72);
  unint64_t v8 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 0x11)
  {
    *(void *)(a1 + 72) = *v7;
    *(void *)(a1 + 80) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v7;
  }
  return a1;
}

uint64_t assignWithCopy for FeedGapOffline(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >= 0x11uLL)
  {
    if (v5 >= 0x11)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564(a1 + 72);
    goto LABEL_6;
  }
  if (v5 < 0x11)
  {
LABEL_6:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for FeedGapOffline(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  unint64_t v8 = (void *)(a2 + 72);
  if (*(void *)(a1 + 80) >= 0x11uLL)
  {
    unint64_t v9 = *(void *)(a2 + 80);
    if (v9 >= 0x11)
    {
      *(void *)(a1 + 72) = *v8;
      *(void *)(a1 + 80) = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C01A7564(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
  return a1;
}

unint64_t sub_1C0BAF504(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x65726F6373;
      break;
    case 3:
      unint64_t result = 0x656873696C627570;
      break;
    case 4:
      unint64_t result = 0x446873696C627570;
      break;
    case 5:
      unint64_t result = 0x6566694C666C6168;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0x6269737365636361;
      break;
    case 8:
      unint64_t result = 0x646961507369;
      break;
    case 9:
      unint64_t result = 0x656C646E75426E69;
      break;
    case 10:
      unint64_t result = 0x726143614C416E69;
      break;
    case 11:
      unint64_t result = 0x6F725065726F6373;
      break;
    case 12:
      unint64_t result = 0x736369706F74;
      break;
    case 13:
      unint64_t result = 0x7365727574616566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0BAF6CC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0BB23DC(0, &qword_1EA1A4668, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v12[-1] - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0BB1CEC();
  sub_1C1520F0C();
  LOBYTE(v12[0]) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_1C152074C();
    LOBYTE(v12[0]) = 2;
    sub_1C15207EC();
    LOBYTE(v12[0]) = 3;
    sub_1C152074C();
    LOBYTE(v12[0]) = 4;
    sub_1C152076C();
    LOBYTE(v12[0]) = 5;
    sub_1C152082C();
    LOBYTE(v12[0]) = 6;
    sub_1C152074C();
    LOBYTE(v12[0]) = 7;
    sub_1C15207DC();
    LOBYTE(v12[0]) = 8;
    sub_1C15207DC();
    LOBYTE(v12[0]) = 9;
    sub_1C15207DC();
    LOBYTE(v12[0]) = 10;
    sub_1C15207DC();
    sub_1C0BB07C0(v3 + 104, (uint64_t)v13, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    sub_1C0BB07C0((uint64_t)v13, (uint64_t)v12, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
    char v14 = 11;
    sub_1C0BB2440();
    sub_1C152078C();
    v12[0] = *(void *)(v3 + 544);
    char v14 = 12;
    sub_1C0BB1F34(0, &qword_1EA1A4638, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBB320]);
    sub_1C0BB2494((unint64_t *)&qword_1EA1A4678, (void (*)(void))sub_1C0BB2524);
    sub_1C152080C();
    v12[0] = *(void *)(v3 + 552);
    char v14 = 13;
    sub_1C0BB1F34(0, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
    sub_1C0BB2578((unint64_t *)&qword_1EA1A4688, (void (*)(void))sub_1C0BB2608);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0BAFB5C()
{
  return sub_1C0BAF504(*v0);
}

uint64_t sub_1C0BAFB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0BB2868(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0BAFB8C(uint64_t a1)
{
  unint64_t v2 = sub_1C0BB1CEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0BAFBC8(uint64_t a1)
{
  unint64_t v2 = sub_1C0BB1CEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C0BAFC04@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C0BB1324(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x230uLL);
  }
  return result;
}

uint64_t sub_1C0BAFC58(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_1C0BAF6CC(a1);
}

uint64_t sub_1C0BAFCAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1C0BAB8E4(0, &qword_1EA1A2778, (uint64_t (*)(uint64_t))sub_1C03A1444, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152A660;
  sub_1C0BB1F34(0, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C152A660;
  *(void *)(v5 + 32) = 0x696669746E656449;
  *(void *)(v5 + 40) = 0xEA00000000007265;
  long long v88 = *v2;
  long long v6 = v88;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  uint64_t v8 = MEMORY[0x1E4FBB208];
  *(void *)(v5 + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 80) = v8;
  *(_OWORD *)(v5 + 48) = v6;
  unint64_t v9 = (_OWORD *)(v5 + 112);
  *(void *)(v5 + 96) = 0x656C746954;
  *(void *)(v5 + 104) = 0xE500000000000000;
  *(unsigned char *)(v5 + 88) = 0;
  sub_1C0BB07C0((uint64_t)(v2 + 1), (uint64_t)v87, (unint64_t *)&qword_1EB879C00, v7);
  sub_1C0BB07C0((uint64_t)v87, (uint64_t)&v90, (unint64_t *)&qword_1EB879C00, v7);
  uint64_t v10 = *((void *)&v90 + 1);
  if (*((void *)&v90 + 1))
  {
    _OWORD *v9 = v90;
    uint64_t v10 = MEMORY[0x1E4FBB208];
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v11 = 0;
    *(void *)unint64_t v9 = 0;
    *(void *)(v5 + 120) = 0;
    *(void *)(v5 + 128) = 0;
  }
  *(void *)(v5 + 136) = v11;
  *(void *)(v5 + 144) = v10;
  *(unsigned char *)(v5 + 152) = 0;
  *(void *)(v5 + 160) = 0xD000000000000015;
  *(void *)(v5 + 168) = 0x80000001C16076B0;
  uint64_t v12 = *((void *)v2 + 4);
  uint64_t v13 = MEMORY[0x1E4FBB440];
  *(void *)(v5 + 200) = MEMORY[0x1E4FBB3D0];
  *(void *)(v5 + 208) = v13;
  *(void *)(v5 + 176) = v12;
  char v14 = (_OWORD *)(v5 + 240);
  strcpy((char *)(v5 + 224), "Publisher Name");
  *(unsigned char *)(v5 + 239) = -18;
  *(unsigned char *)(v5 + 216) = 0;
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  sub_1C0BB07C0((uint64_t)v2 + 40, (uint64_t)v86, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0]);
  sub_1C0BB07C0((uint64_t)v86, (uint64_t)&v91, (unint64_t *)&qword_1EB879C00, v15);
  uint64_t v16 = *((void *)&v91 + 1);
  if (*((void *)&v91 + 1))
  {
    *char v14 = v91;
    uint64_t v16 = MEMORY[0x1E4FBB208];
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
  }
  else
  {
    uint64_t v17 = 0;
    *(void *)char v14 = 0;
    *(void *)(v5 + 248) = 0;
    *(void *)(v5 + 256) = 0;
  }
  *(void *)(v5 + 264) = v17;
  *(void *)(v5 + 272) = v16;
  *(unsigned char *)(v5 + 280) = 0;
  *(void *)(v4 + 56) = &type metadata for DebugInspectionDataSection;
  *(void *)(v4 + 64) = &off_1F1B9F170;
  *(void *)(v4 + 32) = 0x6575737349;
  *(void *)(v4 + 40) = 0xE500000000000000;
  *(void *)(v4 + 48) = v5;
  sub_1C0BB07C0((uint64_t)v2 + 104, (uint64_t)v85, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  sub_1C0BB07C0((uint64_t)v85, (uint64_t)__src, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  if (sub_1C0BB0840((uint64_t)__src) == 1)
  {
    *(void *)(v4 + 104) = 0;
    *(_OWORD *)(v4 + 72) = 0u;
    *(_OWORD *)(v4 + 88) = 0u;
    sub_1BFF59A8C((uint64_t)&v88);
    sub_1BFF59A8C((uint64_t)v87);
    sub_1BFF59A8C((uint64_t)v86);
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    sub_1BFF59A8C((uint64_t)&v88);
    sub_1BFF59A8C((uint64_t)v87);
    sub_1BFF59A8C((uint64_t)v86);
    sub_1C020B680(v4 + 72);
  }
  uint64_t v18 = *((void *)v2 + 68);
  uint64_t v84 = v18;
  int64_t v19 = *(void *)(v18 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (v19)
  {
    uint64_t v21 = v4;
    uint64_t v74 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F7B68(0, v19, 0);
    uint64_t v20 = v74;
    uint64_t v22 = (uint64_t *)(v18 + 56);
    do
    {
      uint64_t v24 = *(v22 - 3);
      uint64_t v23 = *(v22 - 2);
      uint64_t v25 = *v22;
      uint64_t v76 = *(v22 - 1);
      uint64_t v77 = v25;
      uint64_t v80 = MEMORY[0x1E4FBB1A0];
      uint64_t v81 = MEMORY[0x1E4FBB208];
      uint64_t v78 = v24;
      uint64_t v79 = v23;
      char v82 = 0;
      unint64_t v26 = *(void *)(v74 + 16);
      unint64_t v27 = *(void *)(v74 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1) {
        sub_1C05F7B68(v27 > 1, v26 + 1, 1);
      }
      v22 += 4;
      *(void *)(v74 + 16) = v26 + 1;
      sub_1C0A1B3F4((uint64_t)&v76, v74 + (v26 << 6) + 32);
      --v19;
    }
    while (v19);
    sub_1BFCA59C8((uint64_t)&v84);
    uint64_t v4 = v21;
  }
  *(void *)(v4 + 144) = &off_1F1B9F170;
  *(void *)(v4 + 112) = 0x736369706F54;
  *(void *)(v4 + 120) = 0xE600000000000000;
  *(void *)(v4 + 128) = v20;
  *(void *)(v4 + 136) = &type metadata for DebugInspectionDataSection;
  uint64_t v73 = (void *)v4;
  uint64_t v28 = *((void *)v2 + 69);
  uint64_t v83 = v28;
  int64_t v29 = *(void *)(v28 + 16);
  if (!v29)
  {
    uint64_t v68 = MEMORY[0x1E4FBC860];
    goto LABEL_59;
  }
  long long v72 = a1;
  uint64_t v75 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C05F7B68(0, v29, 0);
  sub_1C0BB0858();
  uint64_t v30 = v28 + 64;
  do
  {
    uint64_t v31 = *(void *)(v30 - 24);
    uint64_t v32 = *(void *)(v30 - 16);
    char v33 = *(unsigned char *)(v30 + 24);
    uint64_t v76 = *(void *)(v30 - 32);
    uint64_t v77 = v31;
    double v34 = (void *)swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1C151E80C();
    sub_1C151EF6C();
    unint64_t v35 = 0;
    v34[4] = 0;
    v34[5] = 0xE000000000000000;
    if ((v33 & 1) == 0)
    {
      sub_1C151E80C();
      sub_1C151EF6C();
      unint64_t v35 = 0xE000000000000000;
    }
    v34[6] = 0;
    v34[7] = v35;
    sub_1C151E80C();
    sub_1C151EF6C();
    v34[8] = 0;
    v34[9] = 0xE000000000000000;
    sub_1C151E80C();
    sub_1C151EF6C();
    v34[10] = 0;
    v34[11] = 0xE000000000000000;
    if (v32)
    {
      sub_1C0BB1F34(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE99E40();
      sub_1C151E55C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v36 = 0x203A73676154;
      unint64_t v37 = 0xE600000000000000;
    }
    else
    {
      uint64_t v36 = 0;
      unint64_t v37 = 0;
    }
    v34[12] = v36;
    v34[13] = v37;
    uint64_t v38 = v34[5];
    if (!v38)
    {
      uint64_t v40 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v44 = v34[7];
      if (!v44) {
        goto LABEL_34;
      }
LABEL_29:
      uint64_t v45 = v34[6];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1BFEF9B68(0, v40[2] + 1, 1, v40);
      }
      unint64_t v47 = v40[2];
      unint64_t v46 = v40[3];
      if (v47 >= v46 >> 1) {
        uint64_t v40 = sub_1BFEF9B68((void *)(v46 > 1), v47 + 1, 1, v40);
      }
      v40[2] = v47 + 1;
      uint64_t v48 = &v40[2 * v47];
      v48[4] = v45;
      v48[5] = v44;
      goto LABEL_34;
    }
    uint64_t v39 = v34[4];
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v42 = v40[2];
    unint64_t v41 = v40[3];
    if (v42 >= v41 >> 1) {
      uint64_t v40 = sub_1BFEF9B68((void *)(v41 > 1), v42 + 1, 1, v40);
    }
    v40[2] = v42 + 1;
    uint64_t v43 = &v40[2 * v42];
    v43[4] = v39;
    v43[5] = v38;
    uint64_t v44 = v34[7];
    if (v44) {
      goto LABEL_29;
    }
LABEL_34:
    uint64_t v49 = v34[9];
    if (v49)
    {
      uint64_t v50 = v34[8];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1BFEF9B68(0, v40[2] + 1, 1, v40);
      }
      unint64_t v52 = v40[2];
      unint64_t v51 = v40[3];
      if (v52 >= v51 >> 1) {
        uint64_t v40 = sub_1BFEF9B68((void *)(v51 > 1), v52 + 1, 1, v40);
      }
      v40[2] = v52 + 1;
      uint64_t v53 = &v40[2 * v52];
      v53[4] = v50;
      v53[5] = v49;
    }
    uint64_t v54 = v34[11];
    if (v54)
    {
      uint64_t v55 = v34[10];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1BFEF9B68(0, v40[2] + 1, 1, v40);
      }
      unint64_t v57 = v40[2];
      unint64_t v56 = v40[3];
      if (v57 >= v56 >> 1) {
        uint64_t v40 = sub_1BFEF9B68((void *)(v56 > 1), v57 + 1, 1, v40);
      }
      v40[2] = v57 + 1;
      uint64_t v58 = &v40[2 * v57];
      v58[4] = v55;
      v58[5] = v54;
    }
    uint64_t v59 = v34[13];
    if (v59)
    {
      uint64_t v60 = v34[12];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1BFEF9B68(0, v40[2] + 1, 1, v40);
      }
      unint64_t v62 = v40[2];
      unint64_t v61 = v40[3];
      if (v62 >= v61 >> 1) {
        uint64_t v40 = sub_1BFEF9B68((void *)(v61 > 1), v62 + 1, 1, v40);
      }
      v40[2] = v62 + 1;
      unint64_t v63 = &v40[2 * v62];
      v63[4] = v60;
      v63[5] = v59;
    }
    swift_setDeallocating();
    uint64_t v64 = MEMORY[0x1E4FBB1A0];
    sub_1C0BB1F34(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1C0BB1F34(0, (unint64_t *)&qword_1EB879F20, v64, MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    uint64_t v65 = sub_1C151E55C();
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();
    uint64_t v80 = v64;
    uint64_t v81 = MEMORY[0x1E4FBB208];
    uint64_t v78 = v65;
    uint64_t v79 = v67;
    char v82 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v68 = v75;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C05F7B68(0, *(void *)(v75 + 16) + 1, 1);
      uint64_t v68 = v75;
    }
    unint64_t v70 = *(void *)(v68 + 16);
    unint64_t v69 = *(void *)(v68 + 24);
    if (v70 >= v69 >> 1)
    {
      sub_1C05F7B68(v69 > 1, v70 + 1, 1);
      uint64_t v68 = v75;
    }
    *(void *)(v68 + 16) = v70 + 1;
    sub_1C0A1B3F4((uint64_t)&v76, v68 + (v70 << 6) + 32);
    v30 += 96;
    --v29;
  }
  while (v29);
  sub_1BFCA59C8((uint64_t)&v83);
  a1 = v72;
LABEL_59:
  v73[23] = &off_1F1B9F170;
  v73[19] = 0x7365727574616546;
  v73[20] = 0xE800000000000000;
  v73[21] = v68;
  v73[22] = &type metadata for DebugInspectionDataSection;
  uint64_t result = sub_1C03A101C((uint64_t)v73);
  a1[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a1[4] = (uint64_t)&off_1F1B9F238;
  *a1 = result;
  return result;
}

uint64_t sub_1C0BB07C0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C0BB1F34(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0BB0840(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 304);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void sub_1C0BB0858()
{
  if (!qword_1EB87A898)
  {
    sub_1C0BB1F34(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A898);
    }
  }
}

uint64_t destroy for DebugInspectionIssue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 408))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugInspectionIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    long long v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    long long v9 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v9;
    long long v10 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v10;
    long long v11 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v11;
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    uint64_t v12 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = v12;
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    long long v13 = *(_OWORD *)(a2 + 440);
    long long v14 = *(_OWORD *)(a2 + 456);
    long long v15 = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 488) = v15;
    *(_OWORD *)(a1 + 440) = v13;
    *(_OWORD *)(a1 + 456) = v14;
    uint64_t v16 = *(void *)(a2 + 512);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = v16;
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x1B8uLL);
  }
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionIssue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  uint64_t v5 = *(void *)(a2 + 408);
  if (!*(void *)(a1 + 408))
  {
    if (v5)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      long long v6 = *(_OWORD *)(a2 + 440);
      long long v7 = *(_OWORD *)(a2 + 456);
      long long v8 = *(_OWORD *)(a2 + 488);
      *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
      *(_OWORD *)(a1 + 488) = v8;
      *(_OWORD *)(a1 + 440) = v6;
      *(_OWORD *)(a1 + 456) = v7;
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x1B8uLL);
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_1C0A1E2A8(a1 + 104);
    goto LABEL_7;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
LABEL_8:
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy560_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x230uLL);
}

uint64_t assignWithTake for DebugInspectionIssue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  if (!*(void *)(a1 + 408)) {
    goto LABEL_5;
  }
  if (!*(void *)(a2 + 408))
  {
    sub_1C0A1E2A8(a1 + 104);
LABEL_5:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x1B8uLL);
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  long long v8 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v8;
  long long v9 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v9;
  long long v10 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v10;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  uint64_t v11 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
LABEL_6:
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionIssue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 560)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionIssue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 552) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 560) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 560) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionIssue()
{
  return &type metadata for DebugInspectionIssue;
}

void *sub_1C0BB1324@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0BB23DC(0, &qword_1EA1A4620, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)v38 - v8;
  uint64_t v10 = a1[3];
  uint64_t v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C0BB1CEC();
  sub_1C1520EBC();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  unint64_t v51 = a2;
  uint64_t v52 = v7;
  LOBYTE(v55[0]) = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  v60[0] = v11;
  v60[1] = v12;
  LOBYTE(v55[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C152060C();
  uint64_t v50 = v13;
  v60[2] = v14;
  v60[3] = v15;
  LOBYTE(v55[0]) = 2;
  uint64_t v16 = v14;
  uint64_t v17 = v15;
  swift_bridgeObjectRetain();
  sub_1C15206BC();
  uint64_t v19 = v18;
  uint64_t v48 = v16;
  uint64_t v49 = v17;
  v60[4] = v18;
  LOBYTE(v55[0]) = 3;
  uint64_t v20 = sub_1C152060C();
  uint64_t v22 = v21;
  v60[5] = v20;
  v60[6] = v21;
  LOBYTE(v55[0]) = 4;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C152062C();
  uint64_t v46 = v20;
  uint64_t v47 = v23;
  uint64_t v60[7] = v23;
  LOBYTE(v60[8]) = v24 & 1;
  LOBYTE(v55[0]) = 5;
  LODWORD(v20) = v24;
  uint64_t v25 = sub_1C15206FC();
  int v44 = v20;
  uint64_t v45 = v11;
  v60[9] = v25;
  LOBYTE(v55[0]) = 6;
  uint64_t v26 = v25;
  uint64_t v27 = sub_1C152060C();
  uint64_t v29 = v28;
  uint64_t v43 = v27;
  v60[10] = v27;
  v60[11] = v28;
  LOBYTE(v55[0]) = 7;
  swift_bridgeObjectRetain();
  char v30 = sub_1C15206AC();
  int v42 = v30 & 1;
  LOBYTE(v60[12]) = v30 & 1;
  LOBYTE(v55[0]) = 8;
  char v31 = sub_1C15206AC() & 1;
  BYTE1(v60[12]) = v31;
  LOBYTE(v55[0]) = 9;
  char v32 = sub_1C15206AC();
  int v41 = v32 & 1;
  BYTE2(v60[12]) = v32 & 1;
  LOBYTE(v55[0]) = 10;
  char v33 = sub_1C15206AC();
  int v40 = v33 & 1;
  BYTE3(v60[12]) = v33 & 1;
  v58[447] = 11;
  sub_1C0BB1D8C();
  sub_1C152065C();
  sub_1C0BB07C0((uint64_t)&v59, (uint64_t)v58, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  sub_1C0BB07C0((uint64_t)v58, (uint64_t)&v60[13], &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  sub_1C0BB1F34(0, &qword_1EA1A4638, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBB320]);
  LOBYTE(v54[0]) = 12;
  sub_1C0BB1DE0((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0BB1E94);
  sub_1C0BB2494((unint64_t *)&qword_1EA1A4640, (void (*)(void))sub_1C0BB1EE0);
  sub_1C15206EC();
  uint64_t v34 = v55[0];
  v60[68] = v55[0];
  sub_1C0BB1F34(0, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
  v38[1] = v35;
  char v56 = 13;
  sub_1C0BB2578((unint64_t *)&qword_1EA1A4658, (void (*)(void))sub_1C0BB1F80);
  uint64_t v39 = v34;
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v6);
  uint64_t v36 = v57;
  v60[69] = v57;
  v54[0] = v45;
  v54[1] = v50;
  v54[2] = v48;
  v54[3] = v49;
  v54[4] = v19;
  v54[5] = v46;
  v54[6] = v22;
  v54[7] = v47;
  LOBYTE(v54[8]) = v44 & 1;
  v54[9] = v26;
  v54[10] = v43;
  v54[11] = v29;
  LOBYTE(v54[12]) = v42;
  BYTE1(v54[12]) = v31;
  BYTE2(v54[12]) = v41;
  BYTE3(v54[12]) = v40;
  sub_1C0BB07C0((uint64_t)v58, (uint64_t)&v54[13], &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile);
  v54[68] = v39;
  v54[69] = v36;
  sub_1C0BB1FD4((uint64_t)v54);
  swift_bridgeObjectRelease();
  sub_1C0BB1DE0((uint64_t)v58, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C0BB1D40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  memcpy(v55, v60, sizeof(v55));
  sub_1C0BB21D8((uint64_t)v55);
  return memcpy(v51, v54, 0x230uLL);
}

unint64_t sub_1C0BB1CEC()
{
  unint64_t result = qword_1EA1A4628;
  if (!qword_1EA1A4628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4628);
  }
  return result;
}

uint64_t sub_1C0BB1D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t result = a39;
  if (a39)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1C0BB1D8C()
{
  unint64_t result = qword_1EA1A4630;
  if (!qword_1EA1A4630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4630);
  }
  return result;
}

uint64_t sub_1C0BB1DE0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v15 = *(_OWORD *)(a1 + 416);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v13 = *(_OWORD *)(a1 + 384);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v5 = *(_OWORD *)(a1 + 256);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    v15,
    *((void *)&v15 + 1),
    *(void *)(a1 + 432));
  return a1;
}

uint64_t sub_1C0BB1E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  if (a39)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1C0BB1EE0()
{
  unint64_t result = qword_1EA1A4648;
  if (!qword_1EA1A4648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4648);
  }
  return result;
}

void sub_1C0BB1F34(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C0BB1F80()
{
  unint64_t result = qword_1EA1A4660;
  if (!qword_1EA1A4660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4660);
  }
  return result;
}

uint64_t sub_1C0BB1FD4(uint64_t a1)
{
  uint64_t v25 = *(void *)(a1 + 112);
  uint64_t v26 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a1 + 128);
  uint64_t v24 = *(void *)(a1 + 120);
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 160);
  long long v20 = *(_OWORD *)(a1 + 184);
  long long v21 = *(_OWORD *)(a1 + 168);
  long long v18 = *(_OWORD *)(a1 + 216);
  long long v19 = *(_OWORD *)(a1 + 200);
  long long v16 = *(_OWORD *)(a1 + 248);
  long long v17 = *(_OWORD *)(a1 + 232);
  long long v14 = *(_OWORD *)(a1 + 280);
  long long v15 = *(_OWORD *)(a1 + 264);
  long long v12 = *(_OWORD *)(a1 + 312);
  long long v13 = *(_OWORD *)(a1 + 296);
  long long v10 = *(_OWORD *)(a1 + 344);
  long long v11 = *(_OWORD *)(a1 + 328);
  long long v8 = *(_OWORD *)(a1 + 376);
  long long v9 = *(_OWORD *)(a1 + 360);
  long long v6 = *(_OWORD *)(a1 + 408);
  long long v7 = *(_OWORD *)(a1 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0BB1E94(v26, v25, v24, v23, v22, v2, v3, v4, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0BB21D8(uint64_t a1)
{
  uint64_t v25 = *(void *)(a1 + 112);
  uint64_t v26 = *(void *)(a1 + 104);
  uint64_t v23 = *(void *)(a1 + 128);
  uint64_t v24 = *(void *)(a1 + 120);
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 160);
  long long v20 = *(_OWORD *)(a1 + 184);
  long long v21 = *(_OWORD *)(a1 + 168);
  long long v18 = *(_OWORD *)(a1 + 216);
  long long v19 = *(_OWORD *)(a1 + 200);
  long long v16 = *(_OWORD *)(a1 + 248);
  long long v17 = *(_OWORD *)(a1 + 232);
  long long v14 = *(_OWORD *)(a1 + 280);
  long long v15 = *(_OWORD *)(a1 + 264);
  long long v12 = *(_OWORD *)(a1 + 312);
  long long v13 = *(_OWORD *)(a1 + 296);
  long long v10 = *(_OWORD *)(a1 + 344);
  long long v11 = *(_OWORD *)(a1 + 328);
  long long v8 = *(_OWORD *)(a1 + 376);
  long long v9 = *(_OWORD *)(a1 + 360);
  long long v6 = *(_OWORD *)(a1 + 408);
  long long v7 = *(_OWORD *)(a1 + 392);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0BB1D40(v26, v25, v24, v23, v22, v2, v3, v4, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C0BB23DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0BB1CEC();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionIssue.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0BB2440()
{
  unint64_t result = qword_1EA1A4670;
  if (!qword_1EA1A4670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4670);
  }
  return result;
}

uint64_t sub_1C0BB2494(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0BB1F34(255, &qword_1EA1A4638, (uint64_t)&type metadata for DebugInspectionTag, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0BB2524()
{
  unint64_t result = qword_1EA1A4680;
  if (!qword_1EA1A4680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4680);
  }
  return result;
}

uint64_t sub_1C0BB2578(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0BB1F34(255, &qword_1EA1A4650, (uint64_t)&type metadata for DebugInspectionAggregate, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0BB2608()
{
  unint64_t result = qword_1EA1A4690;
  if (!qword_1EA1A4690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4690);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionIssue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BB2728);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionIssue.CodingKeys()
{
  return &type metadata for DebugInspectionIssue.CodingKeys;
}

unint64_t sub_1C0BB2764()
{
  unint64_t result = qword_1EA1A4698;
  if (!qword_1EA1A4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4698);
  }
  return result;
}

unint64_t sub_1C0BB27BC()
{
  unint64_t result = qword_1EA1A46A0;
  if (!qword_1EA1A46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A46A0);
  }
  return result;
}

unint64_t sub_1C0BB2814()
{
  unint64_t result = qword_1EA1A46A8;
  if (!qword_1EA1A46A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A46A8);
  }
  return result;
}

uint64_t sub_1C0BB2868(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656873696C627570 && a2 == 0xED0000656D614E72 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6566694C666C6168 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C161E590 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEA0000000000656CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646961507369 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x656C646E75426E69 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x726143614C416E69 && a2 == 0xEA00000000006574 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F725065726F6373 && a2 == 0xEC000000656C6966 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x736369706F74 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_1C0BB2E48(uint64_t a1)
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v27 - v6;
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v27 - v9;
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v27 - v12;
  uint64_t v14 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  long long v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FormatDerivedDataBindingSwitchResult();
  uint64_t v19 = *(int *)(v18 + 20);
  uint64_t v27 = a1;
  sub_1C034CEE0(a1 + v19, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1C034CF60((uint64_t)v13);
    uint64_t v20 = v29;
    uint64_t v21 = (uint64_t)v28;
  }
  else
  {
    uint64_t v24 = (uint64_t)v10;
    sub_1C034CFD8((uint64_t)v13, (uint64_t)v17);
    uint64_t v20 = v29;
    if (*(unsigned char *)(v29 + 9) != 1)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1C00DAB28();
      swift_allocError();
      *(unsigned char *)uint64_t v26 = 5;
      *(void *)(v26 + 8) = 0xD00000000000007ALL;
      *(void *)(v26 + 16) = 0x80000001C161E5B0;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return sub_1C034D0EC((uint64_t)v17);
    }
    uint64_t v25 = v20 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchCaseResult() + 20);
    sub_1C034D088((uint64_t)v17, (uint64_t)v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
    sub_1C0F9F6C4(v25, (uint64_t)v7, v24);
    sub_1C034CF60((uint64_t)v7);
    uint64_t result = sub_1C034D0EC((uint64_t)v17);
    uint64_t v21 = (uint64_t)v28;
    if (v1) {
      return result;
    }
    sub_1C034D148(v24, v25);
  }
  uint64_t v22 = v20 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchCaseResult() + 24);
  uint64_t result = sub_1C0F9F6C4(v22, v27 + *(int *)(v18 + 24), v21);
  if (!v1) {
    return sub_1C034D148(v21, v22);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataBindingSwitchCaseResult()
{
  uint64_t result = qword_1EA1A46B0;
  if (!qword_1EA1A46B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0BB31C8()
{
  sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)v18 - v6;
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)v18 - v9;
  uint64_t v11 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C135A198((uint64_t)v10);
  if (!v1)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      return sub_1C034CF60((uint64_t)v10);
    }
    else
    {
      sub_1C034CFD8((uint64_t)v10, (uint64_t)v14);
      if (*(unsigned char *)(v0 + 9) == 1)
      {
        uint64_t v16 = v0 + *(int *)(type metadata accessor for FormatDerivedDataBindingSwitchCaseResult() + 20);
        sub_1C034D088((uint64_t)v14, (uint64_t)v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
        sub_1C0F9F6C4(v16, (uint64_t)v4, (uint64_t)v7);
        sub_1C034CF60((uint64_t)v4);
        sub_1C034D0EC((uint64_t)v14);
        return sub_1C034D148((uint64_t)v7, v16);
      }
      else
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1C00DAB28();
        swift_allocError();
        *(unsigned char *)uint64_t v17 = 5;
        *(void *)(v17 + 8) = 0xD00000000000007ALL;
        *(void *)(v17 + 16) = 0x80000001C161E5B0;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return sub_1C034D0EC((uint64_t)v14);
      }
    }
  }
  return result;
}

void *sub_1C0BB3474(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    long long v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for FormatSlotDefinitionItemSet();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v38 = v12;
      void *v9 = *v10;
      uint64_t v16 = v10[2];
      v9[1] = v10[1];
      _OWORD v9[2] = v16;
      uint64_t v17 = v10[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17)
      {
        uint64_t v18 = v10[4];
        void v9[3] = v17;
        v9[4] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v9 + 3) = *(_OWORD *)(v10 + 3);
      }
      uint64_t v19 = *(int *)(v11 + 36);
      __dst = (char *)v9 + v19;
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = sub_1C1518CDC();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      uint64_t v12 = v38;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v9, 0, 1, v11);
    }
    uint64_t v24 = *(int *)(a3 + 24);
    uint64_t v25 = (void *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    if (v13(v26, 1, v11))
    {
      sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      *uint64_t v25 = *v26;
      uint64_t v28 = v26[2];
      v25[1] = v26[1];
      v25[2] = v28;
      uint64_t v29 = v26[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29)
      {
        uint64_t v30 = v26[4];
        v25[3] = v29;
        v25[4] = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v25 + 3) = *(_OWORD *)(v26 + 3);
      }
      uint64_t v31 = *(int *)(v11 + 36);
      char v32 = (char *)v25 + v31;
      char v33 = (char *)v26 + v31;
      uint64_t v34 = sub_1C1518CDC();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1C0BB3954(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v4 + *(int *)(v5 + 36);
    uint64_t v8 = sub_1C1518CDC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v10 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = v10 + *(int *)(v5 + 36);
    uint64_t v13 = sub_1C1518CDC();
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13);
    if (!result)
    {
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
      return v14(v12, v13);
    }
  }
  return result;
}

uint64_t sub_1C0BB3BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v36 = v11;
    *uint64_t v8 = *v9;
    uint64_t v14 = v9[2];
    v8[1] = v9[1];
    long long v8[2] = v14;
    uint64_t v15 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15)
    {
      uint64_t v16 = v9[4];
      v8[3] = v15;
      void v8[4] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    }
    uint64_t v17 = *(int *)(v10 + 36);
    __dst = (char *)v8 + v17;
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = sub_1C1518CDC();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v11 = v36;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v8, 0, 1, v10);
  }
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  if (v12(v24, 1, v10))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    void *v23 = *v24;
    uint64_t v26 = v24[2];
    v23[1] = v24[1];
    v23[2] = v26;
    uint64_t v27 = v24[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      uint64_t v28 = v24[4];
      v23[3] = v27;
      v23[4] = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v23 + 3) = *(_OWORD *)(v24 + 3);
    }
    uint64_t v29 = *(int *)(v10 + 36);
    uint64_t v30 = (char *)v23 + v29;
    uint64_t v31 = (char *)v24 + v29;
    uint64_t v32 = sub_1C1518CDC();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1C0BB4034(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1C034D0EC(v8);
      goto LABEL_7;
    }
    uint64_t v62 = v11;
    uint64_t v64 = a3;
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v9 + 24);
    if (*(void *)(v8 + 24))
    {
      if (v17)
      {
        *(void *)(v8 + 24) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v8 + 32) = *(void *)(v9 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      sub_1C034DE40(v8 + 24);
    }
    else if (v17)
    {
      *(void *)(v8 + 24) = v17;
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
LABEL_20:
    uint64_t v24 = *(int *)(v10 + 36);
    uint64_t v25 = (void *)(v8 + v24);
    uint64_t v26 = (void *)(v9 + v24);
    uint64_t v27 = sub_1C1518CDC();
    uint64_t v59 = *(void *)(v27 - 8);
    uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v59 + 48);
    uint64_t v60 = v25;
    LODWORD(v25) = v28(v25, 1, v27);
    int v29 = v28(v26, 1, v27);
    if (v25)
    {
      a3 = v64;
      if (!v29)
      {
        (*(void (**)(void *, void *, uint64_t))(v59 + 16))(v60, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v27);
        goto LABEL_28;
      }
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      uint64_t v32 = v60;
    }
    else
    {
      a3 = v64;
      if (!v29)
      {
        (*(void (**)(void *, void *, uint64_t))(v59 + 24))(v60, v26, v27);
        goto LABEL_28;
      }
      (*(void (**)(void *, uint64_t))(v59 + 8))(v60, v27);
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      uint64_t v32 = v60;
    }
    memcpy(v32, v26, v31);
LABEL_28:
    uint64_t v11 = v62;
    goto LABEL_29;
  }
  if (v14)
  {
LABEL_7:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_29;
  }
  uint64_t v61 = v11;
  uint64_t v63 = a3;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  uint64_t v15 = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(void *)(v8 + 24) = v15;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  }
  uint64_t v18 = *(int *)(v10 + 36);
  uint64_t v19 = (void *)(v8 + v18);
  uint64_t v20 = (const void *)(v9 + v18);
  uint64_t v21 = sub_1C1518CDC();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v11 = v61;
  a3 = v63;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v8, 0, 1, v10);
LABEL_29:
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t)a2 + v34;
  int v37 = v12(a1 + v34, 1, v10);
  int v38 = v12(v36, 1, v10);
  if (!v37)
  {
    if (v38)
    {
      sub_1C034D0EC(v35);
      goto LABEL_35;
    }
    *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
    *(_DWORD *)(v35 + 4) = *(_DWORD *)(v36 + 4);
    *(void *)(v35 + 8) = *(void *)(v36 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void *)(v36 + 24);
    if (*(void *)(v35 + 24))
    {
      if (v43)
      {
        *(void *)(v35 + 24) = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v35 + 32) = *(void *)(v36 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_50:
        uint64_t v51 = *(int *)(v10 + 36);
        uint64_t v52 = (void *)(v35 + v51);
        v36 += v51;
        uint64_t v53 = sub_1C1518CDC();
        uint64_t v54 = *(void *)(v53 - 8);
        uint64_t v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
        int v56 = v55(v52, 1, v53);
        int v57 = v55((void *)v36, 1, v53);
        if (v56)
        {
          if (!v57)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v54 + 16))(v52, v36, v53);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v52, 0, 1, v53);
            return a1;
          }
        }
        else
        {
          if (!v57)
          {
            (*(void (**)(void *, uint64_t, uint64_t))(v54 + 24))(v52, v36, v53);
            return a1;
          }
          (*(void (**)(void *, uint64_t))(v54 + 8))(v52, v53);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v41 = *(void *)(*(void *)(v58 - 8) + 64);
        int v42 = v52;
        goto LABEL_36;
      }
      sub_1C034DE40(v35 + 24);
    }
    else if (v43)
    {
      *(void *)(v35 + 24) = v43;
      *(void *)(v35 + 32) = *(void *)(v36 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_50;
    }
    *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
    goto LABEL_50;
  }
  if (v38)
  {
LABEL_35:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v41 = *(void *)(*(void *)(v40 - 8) + 64);
    int v42 = (void *)v35;
LABEL_36:
    memcpy(v42, (const void *)v36, v41);
    return a1;
  }
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_DWORD *)(v35 + 4) = *(_DWORD *)(v36 + 4);
  *(void *)(v35 + 8) = *(void *)(v36 + 8);
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  uint64_t v39 = *(void *)(v36 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39)
  {
    *(void *)(v35 + 24) = v39;
    *(void *)(v35 + 32) = *(void *)(v36 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
  }
  uint64_t v44 = *(int *)(v10 + 36);
  uint64_t v45 = (void *)(v35 + v44);
  uint64_t v46 = (const void *)(v36 + v44);
  uint64_t v47 = sub_1C1518CDC();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  return a1;
}

_OWORD *sub_1C0BB49E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    uint64_t v14 = *(int *)(v10 + 36);
    uint64_t v30 = v11;
    __dst = (char *)v8 + v14;
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v16 = sub_1C1518CDC();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v11 = v30;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v8, 0, 1, v10);
  }
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  if (v12((_OWORD *)((char *)a2 + v19), 1, v10))
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v20 = *v21;
    *(_OWORD *)(v20 + 1) = *(_OWORD *)(v21 + 1);
    *(_OWORD *)(v20 + 3) = *(_OWORD *)(v21 + 3);
    uint64_t v23 = *(int *)(v10 + 36);
    uint64_t v24 = (char *)v20 + v23;
    uint64_t v25 = (char *)v21 + v23;
    uint64_t v26 = sub_1C1518CDC();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1C0BB4DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1C034D0EC((uint64_t)v8);
      goto LABEL_7;
    }
    uint64_t v62 = v11;
    *uint64_t v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRelease();
    long long v8[2] = v9[2];
    swift_bridgeObjectRelease();
    uint64_t v21 = v9[3];
    uint64_t v58 = a3;
    if (v8[3])
    {
      if (v21)
      {
        v8[3] = v21;
        swift_bridgeObjectRelease();
        void v8[4] = v9[4];
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_1C034DE40((uint64_t)(v8 + 3));
    }
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
LABEL_15:
    uint64_t v22 = *(int *)(v10 + 36);
    uint64_t v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    uint64_t v25 = sub_1C1518CDC();
    uint64_t v56 = *(void *)(v25 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
    __dsta = v23;
    LODWORD(v23) = v26(v23, 1, v25);
    __src = v24;
    int v27 = v26(v24, 1, v25);
    if (v23)
    {
      a3 = v58;
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v56 + 32))(__dsta, __src, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__dsta, 0, 1, v25);
        goto LABEL_23;
      }
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
      uint64_t v30 = __dsta;
    }
    else
    {
      a3 = v58;
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v56 + 40))(__dsta, __src, v25);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v56 + 8))(__dsta, v25);
      sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      size_t v29 = *(void *)(*(void *)(v31 - 8) + 64);
      uint64_t v30 = __dsta;
    }
    memcpy(v30, __src, v29);
LABEL_23:
    uint64_t v11 = v62;
    goto LABEL_24;
  }
  if (v14)
  {
LABEL_7:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_24;
  }
  *uint64_t v8 = *v9;
  *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
  *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
  uint64_t v15 = *(int *)(v10 + 36);
  __dst = (char *)v8 + v15;
  uint64_t v61 = v11;
  uint64_t v16 = (char *)v9 + v15;
  uint64_t v17 = sub_1C1518CDC();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v11 = v61;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v8, 0, 1, v10);
LABEL_24:
  uint64_t v32 = *(int *)(a3 + 24);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  int v35 = v12((void *)(a1 + v32), 1, v10);
  int v36 = v12(v34, 1, v10);
  if (!v35)
  {
    if (v36)
    {
      sub_1C034D0EC((uint64_t)v33);
      goto LABEL_30;
    }
    *uint64_t v33 = *v34;
    v33[1] = v34[1];
    swift_bridgeObjectRelease();
    void v33[2] = v34[2];
    swift_bridgeObjectRelease();
    uint64_t v46 = v34[3];
    if (v33[3])
    {
      if (v46)
      {
        v33[3] = v46;
        swift_bridgeObjectRelease();
        v33[4] = v34[4];
        swift_bridgeObjectRelease();
LABEL_40:
        uint64_t v48 = *(int *)(v10 + 36);
        uint64_t v49 = (char *)v33 + v48;
        uint64_t v34 = (void *)((char *)v34 + v48);
        uint64_t v50 = sub_1C1518CDC();
        uint64_t v51 = *(void *)(v50 - 8);
        uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
        int v53 = v52(v49, 1, v50);
        int v54 = v52((char *)v34, 1, v50);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, void *, uint64_t))(v51 + 32))(v49, v34, v50);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v49, 0, 1, v50);
            return a1;
          }
        }
        else
        {
          if (!v54)
          {
            (*(void (**)(char *, void *, uint64_t))(v51 + 40))(v49, v34, v50);
            return a1;
          }
          (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
        }
        sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v44 = *(void *)(*(void *)(v55 - 8) + 64);
        uint64_t v45 = v49;
        goto LABEL_31;
      }
      sub_1C034DE40((uint64_t)(v33 + 3));
    }
    *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
    goto LABEL_40;
  }
  if (v36)
  {
LABEL_30:
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    size_t v44 = *(void *)(*(void *)(v43 - 8) + 64);
    uint64_t v45 = (char *)v33;
LABEL_31:
    memcpy(v45, v34, v44);
    return a1;
  }
  *uint64_t v33 = *v34;
  *(_OWORD *)(v33 + 1) = *(_OWORD *)(v34 + 1);
  *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
  uint64_t v37 = *(int *)(v10 + 36);
  int v38 = (char *)v33 + v37;
  uint64_t v39 = (char *)v34 + v37;
  uint64_t v40 = sub_1C1518CDC();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    sub_1C034D4B8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
  return a1;
}

uint64_t sub_1C0BB5608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0BB561C);
}

uint64_t sub_1C0BB561C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1C0BB56F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0BB5708);
}

uint64_t sub_1C0BB5708(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    sub_1C034D4B8(0, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C0BB57CC()
{
  sub_1C034D4B8(319, &qword_1EA19A078, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C0BB5880()
{
  uint64_t v1 = v0;
  uint64_t v79 = *MEMORY[0x1E4F143B8];
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (char *)&v70 - v10;
  MEMORY[0x1F4188790](v11);
  int v13 = (char *)&v70 - v12;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C15198DC();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB93C7A8);
  uint64_t v16 = sub_1C15198AC();
  os_log_type_t v17 = sub_1C151F38C();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1BFC31000, v16, v17, "Checking expired subscription for notifications disabling...", v18, 2u);
    MEMORY[0x1C18C9B00](v18, -1, -1);
  }

  uint64_t v19 = (char *)objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_bundleSubscriptionManager), sel_cachedSubscription);
  if (objc_getAssociatedObject(v19, v19 + 1))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v75 = 0u;
    long long v76 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v75, (uint64_t)v77);
  id v72 = v4;
  uint64_t v73 = v15;
  if (!v78)
  {
    sub_1BFEFE4A0((uint64_t)v77);
    goto LABEL_13;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    id v20 = 0;
    unint64_t v22 = 0;
    goto LABEL_14;
  }
  id v20 = v74;
  id v21 = objc_msgSend(v74, sel_integerValue);
  if (v21 == (id)-1)
  {

    goto LABEL_31;
  }
  unint64_t v22 = (unint64_t)v21;
LABEL_14:
  if (objc_getAssociatedObject(v19, (const void *)~v22))
  {
    sub_1C151FF3C();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v75 = 0u;
    long long v76 = 0u;
  }
  sub_1BFFBE2FC((uint64_t)&v75, (uint64_t)v77);
  if (!v78)
  {
    sub_1BFEFE4A0((uint64_t)v77);
LABEL_22:

    if (v22) {
      goto LABEL_31;
    }
    goto LABEL_23;
  }
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  id v23 = v74;
  uint64_t v24 = v8;
  uint64_t v25 = v1;
  uint64_t v26 = v13;
  uint64_t v27 = v5;
  uint64_t v28 = v6;
  unsigned __int8 v29 = objc_msgSend(v23, sel_integerValue);

  char v30 = v29 ^ v22;
  uint64_t v6 = v28;
  uint64_t v5 = v27;
  int v13 = v26;
  uint64_t v1 = v25;
  uint64_t v8 = v24;
  if (v30)
  {
LABEL_31:
    uint64_t v49 = sub_1C15198AC();
    os_log_type_t v50 = sub_1C151F38C();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      uint64_t v52 = "User is a bundle subscriber. Skipping.";
      goto LABEL_33;
    }
    goto LABEL_34;
  }
LABEL_23:
  uint64_t v31 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_userInfo);
  if ((objc_msgSend(v31, sel_puzzleNotificationsEnabled) & 1) == 0)
  {
    uint64_t v49 = sub_1C15198AC();
    os_log_type_t v50 = sub_1C151F38C();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      uint64_t v52 = "Puzzle notifications already disabled. Skipping.";
LABEL_33:
      _os_log_impl(&dword_1BFC31000, v49, v50, v52, v51, 2u);
      MEMORY[0x1C18C9B00](v51, -1, -1);
    }
LABEL_34:

    return;
  }
  id v32 = objc_msgSend(v31, sel_puzzleNotificationsLastChangedDate);
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = v71;
    sub_1C15162BC();

    uint64_t v35 = v6;
    int v36 = *(void (**)(id, char *, uint64_t))(v6 + 32);
    uint64_t v37 = (uint64_t)v72;
    v36(v72, v34, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v37, 1, v5) != 1)
    {
      v36(v13, (char *)v37, v5);
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v8, v13, v5);
      int v38 = v13;
      uint64_t v39 = sub_1C15198AC();
      os_log_type_t v40 = sub_1C151F38C();
      uint64_t v41 = v35;
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v42 = v8;
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        size_t v44 = (void *)swift_slowAlloc();
        v77[0] = v44;
        uint64_t v73 = (uint64_t)v38;
        *(_DWORD *)uint64_t v43 = 136315138;
        sub_1BFC50500();
        uint64_t v45 = sub_1C152088C();
        *(void *)&long long v75 = sub_1BFDA76EC(v45, v46, (uint64_t *)v77);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
        v47(v42, v5);
        _os_log_impl(&dword_1BFC31000, v39, v40, "Puzzle notifications was set by user on [%s]. Skipping disabling notifications.", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v44, -1, -1);
        MEMORY[0x1C18C9B00](v43, -1, -1);

        uint64_t v48 = (char *)v73;
      }
      else
      {

        uint64_t v47 = *(void (**)(char *, uint64_t))(v35 + 8);
        v47(v8, v5);
        uint64_t v48 = v38;
      }
      v47(v48, v5);
      return;
    }
  }
  else
  {
    uint64_t v37 = (uint64_t)v72;
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v6 + 56))(v72, 1, 1, v5);
  }
  sub_1BFF97BE4(v37);
  int v53 = sub_1C15198AC();
  os_log_type_t v54 = sub_1C151F38C();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v55 = 0;
    _os_log_impl(&dword_1BFC31000, v53, v54, "Disabling notifications state.", v55, 2u);
    MEMORY[0x1C18C9B00](v55, -1, -1);
  }

  uint64_t v56 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_notificationController);
  v77[0] = 0;
  unsigned int v57 = objc_msgSend(v56, sel_setPuzzleNotificationsEnabled_userTriggered_error_, 0, 0, v77);
  id v58 = v77[0];
  if (v57)
  {
    id v59 = v58;
  }
  else
  {
    id v72 = v77[0];
    id v60 = v77[0];
    uint64_t v61 = (void *)sub_1C1515D3C();

    swift_willThrow();
    id v62 = v61;
    id v63 = v61;
    uint64_t v64 = sub_1C15198AC();
    os_log_type_t v65 = sub_1C151F38C();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 138412290;
      id v68 = v61;
      unint64_t v69 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v77[0] = v69;
      sub_1C151FE1C();
      *uint64_t v67 = v69;

      _os_log_impl(&dword_1BFC31000, v64, v65, "Failed to disable puzzle notifications. Error = %@.", v66, 0xCu);
      sub_1C01DA31C();
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v67, -1, -1);
      MEMORY[0x1C18C9B00](v66, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1C0BB621C()
{
  uint64_t v1 = v0;
  v87[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1C15198DC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v81 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151631C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v78 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v76 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = (char *)&v76 - v14;
  MEMORY[0x1F4188790](v15);
  os_log_type_t v17 = (char *)&v76 - v16;
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v76 - v19;
  MEMORY[0x1F4188790](v21);
  id v23 = (char *)&v76 - v22;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v79 = v3;
  char v82 = (uint8_t *)v2;
  uint64_t v84 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  uint64_t v24 = sub_1C15198AC();
  os_log_type_t v25 = sub_1C151F38C();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_1BFC31000, v24, v25, "Checking user puzzle engagement for notifications auto disabling...", v26, 2u);
    MEMORY[0x1C18C9B00](v26, -1, -1);
  }

  id v27 = objc_msgSend(objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_appConfigurationManager), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v28 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_userInfo), sel_puzzleNotificationsLastChangedDate);
  id v83 = v27;
  if (v28)
  {
    unsigned __int8 v29 = v28;
    sub_1C15162BC();

    char v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v7, v20, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v30(v23, v7, v8);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v23, v8);
      uint64_t v31 = sub_1C15198AC();
      os_log_type_t v32 = sub_1C151F38C();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = (void *)swift_slowAlloc();
        v87[0] = v34;
        *(_DWORD *)uint64_t v33 = 136315138;
        uint64_t v85 = (char *)(v33 + 4);
        sub_1BFC50500();
        uint64_t v35 = sub_1C152088C();
        uint64_t v86 = sub_1BFDA76EC(v35, v36, (uint64_t *)v87);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
        v37(v17, v8);
        _os_log_impl(&dword_1BFC31000, v31, v32, "Puzzle notifications were set by user on [%s]. Skipping auto disabling notifications.", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v34, -1, -1);
        MEMORY[0x1C18C9B00](v33, -1, -1);
      }
      else
      {

        uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
        v37(v17, v8);
      }
      v37(v23, v8);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1BFF97BE4((uint64_t)v7);
  sub_1C15162CC();
  objc_msgSend(v27, sel_autoDisableNotificationEngagementInterval);
  int v38 = v85;
  sub_1C151620C();
  uint64_t v80 = *(void (**)(char *, uint64_t))(v9 + 8);
  v80(v20, v8);
  uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService + 24);
  uint64_t v40 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService), v39);
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 64))(v38, v39, v40);
  if (*(void *)(v41 + 16))
  {
    uint64_t v77 = (char *)(v9 + 8);
    uint64_t v42 = v79;
    uint64_t v43 = v81;
    size_t v44 = v82;
    (*(void (**)(char *, uint64_t, uint8_t *))(v79 + 16))(v81, v84, v82);
    uint64_t v45 = v78;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v78, v38, v8);
    unint64_t v46 = sub_1C15198AC();
    os_log_type_t v47 = sub_1C151F38C();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 134218242;
      uint64_t v86 = *(void *)(v41 + 16);
      v87[0] = v49;
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      sub_1BFC50500();
      uint64_t v50 = sub_1C152088C();
      uint64_t v86 = sub_1BFDA76EC(v50, v51, (uint64_t *)v87);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      uint64_t v52 = v80;
      v80(v45, v8);
      _os_log_impl(&dword_1BFC31000, v46, v47, "User did engage with %ld puzzles since %s. Skipping auto disabling notifications.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v49, -1, -1);
      MEMORY[0x1C18C9B00](v48, -1, -1);

      (*(void (**)(char *, uint8_t *))(v42 + 8))(v81, v82);
      v52(v85, v8);
    }
    else
    {

      id v63 = v80;
      v80(v45, v8);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint8_t *))(v42 + 8))(v43, v44);
      v63(v38, v8);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    int v53 = v77;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v77, v38, v8);
    os_log_type_t v54 = sub_1C15198AC();
    os_log_type_t v55 = sub_1C151F38C();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = v53;
      unsigned int v57 = (uint8_t *)swift_slowAlloc();
      id v58 = (void *)swift_slowAlloc();
      v87[0] = v58;
      *(_DWORD *)unsigned int v57 = 136315138;
      char v82 = v57 + 4;
      sub_1BFC50500();
      uint64_t v59 = sub_1C152088C();
      uint64_t v86 = sub_1BFDA76EC(v59, v60, (uint64_t *)v87);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      uint64_t v61 = v56;
      id v62 = v80;
      v80(v61, v8);
      _os_log_impl(&dword_1BFC31000, v54, v55, "No puzzle engagement since %s. Auto disabling puzzle notifications...", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v58, -1, -1);
      MEMORY[0x1C18C9B00](v57, -1, -1);
    }
    else
    {
      id v62 = v80;
      v80(v53, v8);
    }

    uint64_t v64 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_notificationController);
    v87[0] = 0;
    if (objc_msgSend(v64, sel_setPuzzleNotificationsEnabled_userTriggered_error_, 0, 0, v87))
    {
      id v65 = v87[0];
      v62(v85, v8);
    }
    else
    {
      id v66 = v87[0];
      uint64_t v67 = (void *)sub_1C1515D3C();

      swift_willThrow();
      id v68 = v67;
      id v69 = v67;
      uint64_t v70 = sub_1C15198AC();
      os_log_type_t v71 = sub_1C151F36C();
      if (os_log_type_enabled(v70, v71))
      {
        id v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = (void *)swift_slowAlloc();
        *(_DWORD *)id v72 = 138412290;
        id v74 = v67;
        long long v75 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v87[0] = v75;
        id v62 = v80;
        sub_1C151FE1C();
        *uint64_t v73 = v75;

        _os_log_impl(&dword_1BFC31000, v70, v71, "Failed to disable puzzle notifications. Error = %@.", v72, 0xCu);
        sub_1C01DA31C();
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v73, -1, -1);
        MEMORY[0x1C18C9B00](v72, -1, -1);
      }
      else
      {
      }
      v62(v85, v8);
    }
  }
}

uint64_t sub_1C0BB6ED4()
{
  return type metadata accessor for PuzzleNotificationAutoEnableStartupTask();
}

id sub_1C0BB6FF0(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = &v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_executionPhase];
  uint64_t v16 = *MEMORY[0x1E4FAAE88];
  uint64_t v17 = sub_1C1518C6C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_notificationController] = a1;
  sub_1BFC66384(a3, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_featureAvailability]);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_bundleSubscriptionManager] = a2;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_userInfo] = a4;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_appConfigurationManager] = a5;
  sub_1BFC66384(a6, (uint64_t)&v7[OBJC_IVAR____TtC8NewsFeed39PuzzleNotificationAutoEnableStartupTask_puzzleHistoryService]);
  v22.receiver = v7;
  v22.super_class = ObjectType;
  id v18 = a1;
  swift_unknownObjectRetain();
  id v19 = a4;
  swift_unknownObjectRetain();
  id v20 = objc_msgSendSuper2(&v22, sel_init);
  objc_msgSend(a2, sel_addObserver_, v20, v22.receiver, v22.super_class);
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v20;
}

uint64_t sub_1C0BB7164(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t FormatItemNodeLayoutContext.key.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeLayoutContext.inventory.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeLayoutContext.annotator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeLayoutContext.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatItemNodeLayoutContext();
  return sub_1BFEEB19C(v1 + *(int *)(v3 + 28), a1, type metadata accessor for FeedItem);
}

double FormatItemNodeLayoutContext.itemFrame.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FormatItemNodeLayoutContext() + 32));
}

double FormatItemNodeLayoutContext.sectionFrame.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for FormatItemNodeLayoutContext() + 36));
}

uint64_t FormatItemNodeLayoutContext.copy(itemFrame:sectionFrame:)@<X0>(void *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  uint64_t v19 = *v9;
  uint64_t v20 = v9[1];
  uint64_t v22 = v9[2];
  uint64_t v21 = v9[3];
  uint64_t v24 = v9[4];
  uint64_t v23 = v9[5];
  os_log_type_t v25 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
  sub_1BFEEB19C((uint64_t)v9 + v25[7], (uint64_t)a1 + v25[7], type metadata accessor for FeedItem);
  *a1 = v19;
  a1[1] = v20;
  a1[2] = v22;
  a1[3] = v21;
  a1[4] = v24;
  a1[5] = v23;
  uint64_t v26 = (double *)((char *)a1 + v25[8]);
  *uint64_t v26 = a2;
  v26[1] = a3;
  void v26[2] = a4;
  void v26[3] = a5;
  id v27 = (double *)((char *)a1 + v25[9]);
  *id v27 = a6;
  v27[1] = a7;
  v27[2] = a8;
  v27[3] = a9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeLayoutContext.itemIdentifier.getter()
{
  return FeedItem.identifier.getter();
}

uint64_t FormatItemNodeLayoutContext.modelIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA2D8(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (id *)((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FormatItemNodeLayoutContext();
  sub_1BFEEB19C(v0 + *(int *)(v19 + 28), (uint64_t)v18, type metadata accessor for FeedItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      sub_1BFFBFECC((uint64_t)v18, (uint64_t)v15, type metadata accessor for FeedHeadline);
      id v20 = objc_msgSend(v15[5], sel_identifier);
      uint64_t v21 = sub_1C151E62C();

      sub_1BFEE30A0((uint64_t)v15, type metadata accessor for FeedHeadline);
      return v21;
    case 4u:
      sub_1BFFBFECC((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C0AB2C18((uint64_t)&v12[*(int *)(v10 + 52)], (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v9, 1, v4) == 1)
      {
        sub_1C0AB2CAC((uint64_t)v9);
LABEL_13:
        uint64_t v22 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
        uint64_t v23 = (uint64_t)v12;
        goto LABEL_14;
      }
      sub_1BFEEB19C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFEE30A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFEE30A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_13;
      }
      uint64_t v44 = *v6;
      sub_1BFEE30A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      *(void *)&long long v47 = v44;
      uint64_t v21 = SportsDataVisualization.umcCanonicalId.getter();
      swift_release();
      sub_1BFEE30A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v21;
    case 5u:
      long long v30 = *((_OWORD *)v18 + 7);
      long long v53 = *((_OWORD *)v18 + 6);
      *(_OWORD *)os_log_type_t v54 = v30;
      *(_OWORD *)&v54[9] = *(_OWORD *)(v18 + 121);
      long long v31 = *((_OWORD *)v18 + 1);
      long long v47 = *(_OWORD *)v18;
      long long v48 = v31;
      long long v32 = *((_OWORD *)v18 + 3);
      long long v49 = *((_OWORD *)v18 + 2);
      long long v33 = *((_OWORD *)v18 + 4);
      long long v52 = *((_OWORD *)v18 + 5);
      long long v50 = v32;
      long long v51 = v33;
      id v34 = objc_msgSend((id)v47, sel_identifier);
      uint64_t v21 = sub_1C151E62C();

      sub_1C01880A4((uint64_t)&v47);
      return v21;
    case 7u:
      long long v35 = *((_OWORD *)v18 + 7);
      long long v53 = *((_OWORD *)v18 + 6);
      *(_OWORD *)os_log_type_t v54 = v35;
      *(_OWORD *)&v54[16] = *((_OWORD *)v18 + 8);
      LOBYTE(v55) = v18[144];
      long long v36 = *((_OWORD *)v18 + 3);
      long long v49 = *((_OWORD *)v18 + 2);
      long long v37 = *((_OWORD *)v18 + 4);
      long long v38 = *((_OWORD *)v18 + 5);
      long long v50 = v36;
      long long v51 = v37;
      long long v52 = v38;
      long long v39 = *((_OWORD *)v18 + 1);
      long long v47 = *(_OWORD *)v18;
      long long v48 = v39;
      id v40 = objc_msgSend((id)v39, sel_identifier);
      uint64_t v21 = sub_1C151E62C();

      sub_1BFEA4290((uint64_t)&v47);
      return v21;
    case 8u:
      sub_1BFFBFECC((uint64_t)v18, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v21 = *v3;
      swift_bridgeObjectRetain();
      sub_1BFEE30A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      return v21;
    case 0xDu:
      long long v24 = *((_OWORD *)v18 + 11);
      long long v56 = *((_OWORD *)v18 + 10);
      long long v57 = v24;
      long long v58 = *((_OWORD *)v18 + 12);
      long long v25 = *((_OWORD *)v18 + 7);
      long long v53 = *((_OWORD *)v18 + 6);
      *(_OWORD *)os_log_type_t v54 = v25;
      long long v26 = *((_OWORD *)v18 + 9);
      *(_OWORD *)&v54[16] = *((_OWORD *)v18 + 8);
      long long v55 = v26;
      long long v27 = *((_OWORD *)v18 + 3);
      long long v49 = *((_OWORD *)v18 + 2);
      long long v28 = *((_OWORD *)v18 + 4);
      long long v52 = *((_OWORD *)v18 + 5);
      long long v50 = v27;
      long long v51 = v28;
      long long v29 = *(_OWORD *)v18;
      long long v48 = *((_OWORD *)v18 + 1);
      long long v47 = v29;
      uint64_t v21 = *((void *)&v49 + 1);
      swift_bridgeObjectRetain();
      sub_1C01F0A74((uint64_t)&v47);
      return v21;
    case 0xEu:
      uint64_t v41 = *((void *)v18 + 3);
      unint64_t v42 = *((void *)v18 + 4);
      uint64_t v21 = *((void *)v18 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEFC20(v41, v42);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v21;
    default:
      uint64_t v22 = type metadata accessor for FeedItem;
      uint64_t v23 = (uint64_t)v18;
LABEL_14:
      sub_1BFEE30A0(v23, v22);
      return 0;
  }
}

Swift::String __swiftcall FormatItemNodeLayoutContext.sourceIdentifier(layoutIdentifier:)(Swift::String layoutIdentifier)
{
  object = layoutIdentifier._object;
  uint64_t countAndFlagsBits = layoutIdentifier._countAndFlagsBits;
  type metadata accessor for FormatItemNodeLayoutContext();
  uint64_t v3 = FeedItem.identifier.getter();
  uint64_t v5 = v4;
  uint64_t v6 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  unint64_t v9 = v8 + 1;
  if (v8 >= v7 >> 1) {
    uint64_t v6 = sub_1BFEF9B68((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  _OWORD v6[2] = v9;
  uint64_t v10 = &v6[2 * v8];
  void v10[4] = v3;
  v10[5] = v5;
  unint64_t v11 = v6[3];
  swift_bridgeObjectRetain();
  if (v9 >= v11 >> 1) {
    uint64_t v6 = sub_1BFEF9B68((void *)(v11 > 1), v8 + 2, 1, v6);
  }
  _OWORD v6[2] = v8 + 2;
  uint64_t v12 = &v6[2 * v9];
  void v12[4] = countAndFlagsBits;
  v12[5] = object;
  sub_1BFED9C20();
  sub_1BFE99E40();
  uint64_t v13 = sub_1C151E55C();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v13;
  uint64_t v17 = v15;
  result._object = v17;
  result._uint64_t countAndFlagsBits = v16;
  return result;
}

double sub_1C0BB7BBC(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 32));
}

double sub_1C0BB7BD0(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_1C0BB7BE4()
{
  return FeedItem.identifier.getter();
}

uint64_t sub_1C0BB7C0C@<X0>(int *a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  uint64_t v21 = *v10;
  uint64_t v22 = v10[1];
  uint64_t v24 = v10[2];
  uint64_t v23 = v10[3];
  uint64_t v26 = v10[4];
  uint64_t v25 = v10[5];
  sub_1BFEEB19C((uint64_t)v10 + a1[7], (uint64_t)a2 + a1[7], type metadata accessor for FeedItem);
  *a2 = v21;
  a2[1] = v22;
  a2[2] = v24;
  a2[3] = v23;
  a2[4] = v26;
  a2[5] = v25;
  uint64_t v27 = a1[9];
  long long v28 = (double *)((char *)a2 + a1[8]);
  double *v28 = a3;
  v28[1] = a4;
  void v28[2] = a5;
  v28[3] = a6;
  long long v29 = (double *)((char *)a2 + v27);
  *long long v29 = a7;
  v29[1] = a8;
  _OWORD v29[2] = a9;
  v29[3] = a10;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatItemNodeLayoutContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3;
    unint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    uint64_t v10 = *(int *)(a3 + 28);
    unint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    a1[5] = a2[5];
    uint64_t v13 = type metadata accessor for FeedItem(0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v14 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v14;
        uint64_t v15 = v12[3];
        v11[2] = v12[2];
        uint64_t v11[3] = v15;
        *((unsigned char *)v11 + 32) = *((unsigned char *)v12 + 32);
        uint64_t v16 = v12 + 5;
        unint64_t v17 = v12[6];
        swift_bridgeObjectRetain();
        if (v17 >= 0x11)
        {
          v11[5] = *v16;
          v11[6] = v17;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 5) = *(_OWORD *)v16;
        }
        goto LABEL_204;
      case 1u:
        uint64_t v54 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v54;
        uint64_t v55 = v12[3];
        v11[2] = v12[2];
        uint64_t v11[3] = v55;
        *((unsigned char *)v11 + 32) = *((unsigned char *)v12 + 32);
        uint64_t v56 = v12[6];
        v11[5] = v12[5];
        v11[6] = v56;
        uint64_t v57 = v12[8];
        v11[7] = v12[7];
        v11[8] = v57;
        long long v58 = v12 + 9;
        unint64_t v59 = v12[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v59 >= 0x11)
        {
          v11[9] = *v58;
          v11[10] = v59;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 9) = *(_OWORD *)v58;
        }
        goto LABEL_204;
      case 2u:
        uint64_t v422 = v5;
        uint64_t v18 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v18;
        uint64_t v19 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v20 = v19[5];
        v416 = (char *)v11 + v20;
        uint64_t v21 = (char *)v12 + v20;
        uint64_t v22 = sub_1C151DBAC();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v416, v21, v22);
        *(void *)((char *)v11 + v19[6]) = *(void *)((char *)v12 + v19[6]);
        uint64_t v24 = v19[7];
        uint64_t v25 = (char *)v11 + v24;
        uint64_t v26 = (char *)v12 + v24;
        *(void *)uint64_t v25 = *(void *)v26;
        v25[8] = v26[8];
        uint64_t v27 = v19[8];
        long long v28 = (void *)((char *)v11 + v27);
        long long v29 = (void *)((char *)v12 + v27);
        unint64_t v30 = v29[1];
        if (v30 >= 0x11)
        {
          void *v28 = *v29;
          v28[1] = v30;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)long long v28 = *(_OWORD *)v29;
        }
        uint64_t v5 = v422;
        goto LABEL_204;
      case 3u:
        uint64_t v423 = v5;
        uint64_t v60 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v60;
        v11[2] = v12[2];
        *((unsigned char *)v11 + 24) = *((unsigned char *)v12 + 24);
        uint64_t v61 = v12[5];
        void v11[4] = v12[4];
        v11[5] = v61;
        v11[6] = v12[6];
        *((unsigned char *)v11 + 56) = *((unsigned char *)v12 + 56);
        v417 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v62 = v417[10];
        id v63 = (char *)v11 + v62;
        uint64_t v64 = (char *)v12 + v62;
        *id v63 = *((unsigned char *)v12 + v62);
        v63[1] = *((unsigned char *)v12 + v62 + 1);
        uint64_t v65 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v66 = *(int *)(v65 + 24);
        __dst = &v63[v66];
        v398 = (int *)v65;
        uint64_t v67 = &v64[v66];
        id v68 = (int *)type metadata accessor for SharedItem();
        uint64_t v393 = *((void *)v68 - 1);
        id v69 = *(unsigned int (**)(char *, uint64_t, int *))(v393 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v69(v67, 1, v68))
        {
          uint64_t v70 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v67, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          uint64_t v183 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(__dst, v67, v183);
          __dst[v68[5]] = v67[v68[5]];
          uint64_t v184 = v68[6];
          v402 = *(void **)&v67[v184];
          *(void *)&__dst[v184] = v402;
          uint64_t v185 = v68[7];
          v408 = &v67[v185];
          v414 = &__dst[v185];
          uint64_t v186 = sub_1C1515FDC();
          v392 = *(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16);
          id v187 = v402;
          v392(v414, v408, v186);
          (*(void (**)(char *, void, uint64_t, int *))(v393 + 56))(__dst, 0, 1, v68);
        }
        v63[v398[7]] = v64[v398[7]];
        v63[v398[8]] = v64[v398[8]];
        v63[v398[9]] = v64[v398[9]];
        v63[v398[10]] = v64[v398[10]];
        uint64_t v5 = v423;
        uint64_t v188 = v417[11];
        uint64_t v189 = (char *)v11 + v188;
        uint64_t v190 = (char *)v12 + v188;
        uint64_t v191 = sub_1C151D2DC();
        uint64_t v192 = *(void *)(v191 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v190, 1, v191))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v189, v190, *(void *)(*(void *)(v193 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v189, v190, v191);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v192 + 56))(v189, 0, 1, v191);
        }
        uint64_t v200 = v417[12];
        unint64_t v201 = (void *)((char *)v11 + v200);
        v202 = (void *)((char *)v12 + v200);
        unint64_t v203 = v202[1];
        if (v203 >= 0x11)
        {
          *unint64_t v201 = *v202;
          v201[1] = v203;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)unint64_t v201 = *(_OWORD *)v202;
        }
        uint64_t v204 = v417[13];
        unint64_t v205 = *(void *)((char *)v12 + v204);
        if (v205 >= 2)
        {
          if (v205 == 2)
          {
            *(void *)((char *)v11 + v204) = 2;
          }
          else
          {
            *(void *)((char *)v11 + v204) = v205;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v11 + v204) = v205;
        }
        uint64_t v243 = v417[14];
        v244 = *(void **)((char *)v12 + v243);
        *(void *)((char *)v11 + v243) = v244;
        id v245 = v244;
        goto LABEL_204;
      case 4u:
        uint64_t v31 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v31;
        *((unsigned char *)v11 + 16) = *((unsigned char *)v12 + 16);
        long long v32 = v12 + 3;
        unint64_t v33 = v12[4];
        if (v33 >= 0x11)
        {
          uint64_t v11[3] = *v32;
          void v11[4] = v33;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 3) = *(_OWORD *)v32;
        }
        uint64_t v122 = v12[6];
        v11[5] = v12[5];
        v11[6] = v122;
        uint64_t v123 = type metadata accessor for FeedWebEmbed();
        uint64_t v124 = *(int *)(v123 + 32);
        v419 = (char *)v11 + v124;
        v411 = (char *)v12 + v124;
        uint64_t v125 = sub_1C1515FDC();
        uint64_t v126 = *(void *)(v125 - 8);
        uint64_t v127 = *(void (**)(char *, char *, void *))(v126 + 16);
        uint64_t v128 = (void *)v125;
        swift_bridgeObjectRetain();
        v127(v419, v411, v128);
        v420 = (int *)v123;
        uint64_t v129 = *(int *)(v123 + 36);
        v412 = (char *)v11 + v129;
        uint64_t v130 = (char *)v12 + v129;
        __dsta = v127;
        uint64_t v424 = v5;
        v401 = v128;
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v126 + 48))((char *)v12 + v129, 1, v128))
        {
          sub_1BFECA2D8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v412, v130, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          v127(v412, v130, v128);
          (*(void (**)(char *, void, uint64_t, void *))(v126 + 56))(v412, 0, 1, v128);
        }
        *(void *)((char *)v11 + v420[10]) = *(void *)((char *)v12 + v420[10]);
        *(void *)((char *)v11 + v420[11]) = *(void *)((char *)v12 + v420[11]);
        uint64_t v163 = v420[12];
        v407 = (void *)((char *)v11 + v163);
        v413 = (void *)((char *)v12 + v163);
        uint64_t v164 = type metadata accessor for FeedHeadline(0);
        uint64_t v165 = *(void *)(v164 - 8);
        uint64_t v166 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v165 + 48);
        swift_retain();
        swift_retain();
        if (v166(v413, 1, v164))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v407, v413, *(void *)(*(void *)(v167 - 8) + 64));
        }
        else
        {
          uint64_t v391 = v165;
          uint64_t v173 = v413[1];
          void *v407 = *v413;
          v407[1] = v173;
          v407[2] = v413[2];
          *((unsigned char *)v407 + 24) = *((unsigned char *)v413 + 24);
          uint64_t v174 = v413[5];
          v407[4] = v413[4];
          v407[5] = v174;
          v407[6] = v413[6];
          *((unsigned char *)v407 + 56) = *((unsigned char *)v413 + 56);
          v394 = (int *)v164;
          uint64_t v175 = *(int *)(v164 + 40);
          uint64_t v176 = (char *)v407 + v175;
          uint64_t v177 = (char *)v413 + v175;
          *uint64_t v176 = *((unsigned char *)v413 + v175);
          v176[1] = *((unsigned char *)v413 + v175 + 1);
          v390 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v178 = v390[6];
          v389 = &v176[v178];
          uint64_t v179 = &v177[v178];
          uint64_t v180 = (int *)type metadata accessor for SharedItem();
          uint64_t v386 = *((void *)v180 - 1);
          v387 = *(unsigned int (**)(char *, uint64_t, int *))(v386 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v387(v179, 1, v180))
          {
            uint64_t v181 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v389, v179, *(void *)(*(void *)(v181 - 8) + 64));
          }
          else
          {
            uint64_t v269 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 16))(v389, v179, v269);
            v389[v180[5]] = v179[v180[5]];
            uint64_t v270 = v180[6];
            v271 = *(void **)&v179[v270];
            *(void *)&v389[v270] = v271;
            uint64_t v272 = v180[7];
            v388 = &v389[v272];
            v273 = &v179[v272];
            id v274 = v271;
            __dsta(v388, v273, v401);
            (*(void (**)(char *, void, uint64_t, int *))(v386 + 56))(v389, 0, 1, v180);
          }
          v176[v390[7]] = v177[v390[7]];
          v176[v390[8]] = v177[v390[8]];
          v176[v390[9]] = v177[v390[9]];
          v176[v390[10]] = v177[v390[10]];
          uint64_t v275 = v394[11];
          v276 = (char *)v407 + v275;
          v277 = (char *)v413 + v275;
          uint64_t v278 = sub_1C151D2DC();
          uint64_t v279 = *(void *)(v278 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v279 + 48))(v277, 1, v278))
          {
            sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v276, v277, *(void *)(*(void *)(v280 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v279 + 16))(v276, v277, v278);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v279 + 56))(v276, 0, 1, v278);
          }
          uint64_t v281 = v394[12];
          v282 = (void *)((char *)v407 + v281);
          v283 = (void *)((char *)v413 + v281);
          unint64_t v284 = v283[1];
          if (v284 >= 0x11)
          {
            void *v282 = *v283;
            v282[1] = v284;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v282 = *(_OWORD *)v283;
          }
          uint64_t v285 = v394[13];
          unint64_t v286 = *(void *)((char *)v413 + v285);
          if (v286 >= 2)
          {
            if (v286 == 2)
            {
              *(void *)((char *)v407 + v285) = 2;
            }
            else
            {
              *(void *)((char *)v407 + v285) = v286;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v407 + v285) = v286;
          }
          uint64_t v309 = v394[14];
          v310 = *(void **)((char *)v413 + v309);
          *(void *)((char *)v407 + v309) = v310;
          v311 = *(void (**)(void *, void, uint64_t, int *))(v391 + 56);
          id v312 = v310;
          v311(v407, 0, 1, v394);
        }
        uint64_t v313 = v420[13];
        v314 = (void *)((char *)v11 + v313);
        v315 = (void *)((char *)v12 + v313);
        uint64_t v316 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v317 = *(void *)(v316 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v317 + 48))(v315, 1, v316))
        {
          sub_1BFECA2D8(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v314, v315, *(void *)(*(void *)(v318 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v320 = *v315;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v321 = v315[1];
            void *v314 = v320;
            v314[1] = v321;
            uint64_t v322 = type metadata accessor for GenericDataVisualization();
            uint64_t v323 = *(int *)(v322 + 20);
            v409 = (char *)v315 + v323;
            v415 = (char *)v314 + v323;
            swift_bridgeObjectRetain();
            __dsta(v415, v409, v401);
            *(void *)((char *)v314 + *(int *)(v322 + 24)) = *(uint64_t *)((char *)v315 + *(int *)(v322 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            void *v314 = v320;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v317 + 56))(v314, 0, 1, v316);
        }
        *((unsigned char *)v11 + v420[14]) = *((unsigned char *)v12 + v420[14]);
        goto LABEL_172;
      case 5u:
        os_log_type_t v71 = (void *)*v12;
        uint64_t v72 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v72;
        v11[2] = v12[2];
        *((_WORD *)v11 + 12) = *((_WORD *)v12 + 12);
        void v11[4] = v12[4];
        *((unsigned char *)v11 + 40) = *((unsigned char *)v12 + 40);
        uint64_t v73 = (void *)v12[7];
        v11[6] = v12[6];
        v11[7] = v73;
        *((unsigned char *)v11 + 64) = *((unsigned char *)v12 + 64);
        uint64_t v74 = v12[10];
        id v75 = v71;
        swift_bridgeObjectRetain();
        id v76 = v73;
        if (v74 == 1)
        {
          long long v77 = *(_OWORD *)(v12 + 11);
          *(_OWORD *)(v11 + 9) = *(_OWORD *)(v12 + 9);
          *(_OWORD *)(v11 + 11) = v77;
          *(_OWORD *)(v11 + 13) = *(_OWORD *)(v12 + 13);
        }
        else
        {
          v11[9] = v12[9];
          v11[10] = v74;
          uint64_t v133 = v12[12];
          v11[11] = v12[11];
          v11[12] = v133;
          uint64_t v135 = (void *)v12[13];
          uint64_t v134 = v12[14];
          v11[13] = v135;
          v11[14] = v134;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v136 = v135;
        }
        uint64_t v137 = v12 + 15;
        unint64_t v138 = v12[16];
        if (v138 >= 0x11)
        {
          v11[15] = *v137;
          v11[16] = v138;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 15) = *(_OWORD *)v137;
        }
        *((unsigned char *)v11 + 136) = *((unsigned char *)v12 + 136);
        goto LABEL_204;
      case 6u:
        uint64_t v424 = v5;
        int v78 = *((unsigned __int8 *)v12 + 281);
        if (v78 == 2)
        {
          uint64_t v212 = v12[1];
          *unint64_t v11 = *v12;
          v11[1] = v212;
          v11[2] = v12[2];
          *((unsigned char *)v11 + 24) = *((unsigned char *)v12 + 24);
          void v11[4] = v12[4];
          *((unsigned char *)v11 + 40) = *((unsigned char *)v12 + 40);
          uint64_t v213 = v12[7];
          v11[6] = v12[6];
          v11[7] = v213;
          uint64_t v214 = v12[9];
          v11[8] = v12[8];
          v11[9] = v214;
          uint64_t v215 = v12[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v215 == 1)
          {
            long long v216 = *((_OWORD *)v12 + 8);
            *((_OWORD *)v11 + 7) = *((_OWORD *)v12 + 7);
            *((_OWORD *)v11 + 8) = v216;
            *((unsigned char *)v11 + 144) = *((unsigned char *)v12 + 144);
            long long v217 = *((_OWORD *)v12 + 6);
            *((_OWORD *)v11 + 5) = *((_OWORD *)v12 + 5);
            *((_OWORD *)v11 + 6) = v217;
          }
          else
          {
            v11[10] = v12[10];
            v11[11] = v215;
            uint64_t v253 = v12[15];
            swift_bridgeObjectRetain();
            if (v253)
            {
              uint64_t v254 = v12[16];
              v11[15] = v253;
              v11[16] = v254;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v253 - 8))((uint64_t)(v11 + 12), (uint64_t)(v12 + 12), v253);
              v11[17] = v12[17];
            }
            else
            {
              long long v346 = *((_OWORD *)v12 + 7);
              *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
              *((_OWORD *)v11 + 7) = v346;
              *((_OWORD *)v11 + 8) = *((_OWORD *)v12 + 8);
            }
            *((unsigned char *)v11 + 144) = *((unsigned char *)v12 + 144);
          }
        }
        else if (v78 == 1)
        {
          uint64_t v79 = (void *)*v12;
          uint64_t v80 = v12[1];
          *unint64_t v11 = *v12;
          v11[1] = v80;
          v11[2] = v12[2];
          *((_WORD *)v11 + 12) = *((_WORD *)v12 + 12);
          void v11[4] = v12[4];
          *((unsigned char *)v11 + 40) = *((unsigned char *)v12 + 40);
          uint64_t v81 = (void *)v12[7];
          v11[6] = v12[6];
          v11[7] = v81;
          *((unsigned char *)v11 + 64) = *((unsigned char *)v12 + 64);
          uint64_t v82 = v12[10];
          id v83 = v79;
          swift_bridgeObjectRetain();
          id v84 = v81;
          if (v82 == 1)
          {
            long long v85 = *(_OWORD *)(v12 + 11);
            *(_OWORD *)(v11 + 9) = *(_OWORD *)(v12 + 9);
            *(_OWORD *)(v11 + 11) = v85;
            *(_OWORD *)(v11 + 13) = *(_OWORD *)(v12 + 13);
          }
          else
          {
            v11[9] = v12[9];
            v11[10] = v82;
            uint64_t v247 = v12[12];
            v11[11] = v12[11];
            v11[12] = v247;
            v249 = (void *)v12[13];
            uint64_t v248 = v12[14];
            v11[13] = v249;
            v11[14] = v248;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v250 = v249;
          }
          v251 = v12 + 15;
          unint64_t v252 = v12[16];
          if (v252 >= 0x11)
          {
            v11[15] = *v251;
            v11[16] = v252;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v11 + 15) = *(_OWORD *)v251;
          }
          v261 = (void *)v12[18];
          *((unsigned char *)v11 + 136) = *((unsigned char *)v12 + 136);
          if (v261)
          {
            uint64_t v262 = v12[19];
            uint64_t v263 = v12[20];
            v11[18] = v261;
            v11[19] = v262;
            v11[20] = v263;
            *((_WORD *)v11 + 84) = *((_WORD *)v12 + 84);
            v11[22] = v12[22];
            *((unsigned char *)v11 + 184) = *((unsigned char *)v12 + 184);
            v264 = (void *)v12[25];
            unsigned char v11[24] = v12[24];
            v11[25] = v264;
            *((unsigned char *)v11 + 208) = *((unsigned char *)v12 + 208);
            uint64_t v265 = v12[28];
            id v266 = v261;
            swift_bridgeObjectRetain();
            id v267 = v264;
            if (v265 == 1)
            {
              long long v268 = *(_OWORD *)(v12 + 29);
              *(_OWORD *)(v11 + 27) = *(_OWORD *)(v12 + 27);
              *(_OWORD *)(v11 + 29) = v268;
              *(_OWORD *)(v11 + 31) = *(_OWORD *)(v12 + 31);
            }
            else
            {
              v11[27] = v12[27];
              v11[28] = v265;
              uint64_t v291 = v12[30];
              v11[29] = v12[29];
              v11[30] = v291;
              v293 = (void *)v12[31];
              uint64_t v292 = v12[32];
              v11[31] = v293;
              v11[32] = v292;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v294 = v293;
            }
            v295 = v12 + 33;
            unint64_t v296 = v12[34];
            if (v296 >= 0x11)
            {
              v11[33] = *v295;
              v11[34] = v296;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v11 + 33) = *(_OWORD *)v295;
            }
            *((unsigned char *)v11 + 280) = *((unsigned char *)v12 + 280);
          }
          else
          {
            long long v287 = *((_OWORD *)v12 + 16);
            *((_OWORD *)v11 + 15) = *((_OWORD *)v12 + 15);
            *((_OWORD *)v11 + 16) = v287;
            *(_OWORD *)((char *)v11 + 265) = *(_OWORD *)((char *)v12 + 265);
            long long v288 = *((_OWORD *)v12 + 12);
            *((_OWORD *)v11 + 11) = *((_OWORD *)v12 + 11);
            *((_OWORD *)v11 + 12) = v288;
            long long v289 = *((_OWORD *)v12 + 14);
            *((_OWORD *)v11 + 13) = *((_OWORD *)v12 + 13);
            *((_OWORD *)v11 + 14) = v289;
            long long v290 = *((_OWORD *)v12 + 10);
            *((_OWORD *)v11 + 9) = *((_OWORD *)v12 + 9);
            *((_OWORD *)v11 + 10) = v290;
          }
        }
        else
        {
          uint64_t v218 = (void *)*v12;
          uint64_t v219 = v12[1];
          *unint64_t v11 = *v12;
          v11[1] = v219;
          v11[2] = v12[2];
          *((_WORD *)v11 + 12) = *((_WORD *)v12 + 12);
          void v11[4] = v12[4];
          *((unsigned char *)v11 + 40) = *((unsigned char *)v12 + 40);
          v220 = (void *)v12[7];
          v11[6] = v12[6];
          v11[7] = v220;
          *((unsigned char *)v11 + 64) = *((unsigned char *)v12 + 64);
          uint64_t v221 = v12[10];
          id v222 = v218;
          swift_bridgeObjectRetain();
          id v223 = v220;
          if (v221 == 1)
          {
            long long v224 = *(_OWORD *)(v12 + 11);
            *(_OWORD *)(v11 + 9) = *(_OWORD *)(v12 + 9);
            *(_OWORD *)(v11 + 11) = v224;
            *(_OWORD *)(v11 + 13) = *(_OWORD *)(v12 + 13);
          }
          else
          {
            v11[9] = v12[9];
            v11[10] = v221;
            uint64_t v255 = v12[12];
            v11[11] = v12[11];
            v11[12] = v255;
            v257 = (void *)v12[13];
            uint64_t v256 = v12[14];
            v11[13] = v257;
            v11[14] = v256;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v258 = v257;
          }
          v259 = v12 + 15;
          unint64_t v260 = v12[16];
          if (v260 >= 0x11)
          {
            v11[15] = *v259;
            v11[16] = v260;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v11 + 15) = *(_OWORD *)v259;
          }
          *((unsigned char *)v11 + 136) = *((unsigned char *)v12 + 136);
        }
        *((unsigned char *)v11 + 281) = v78;
LABEL_172:
        swift_storeEnumTagMultiPayload();
        uint64_t v5 = v424;
        goto LABEL_205;
      case 7u:
        uint64_t v86 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v86;
        v11[2] = v12[2];
        *((unsigned char *)v11 + 24) = *((unsigned char *)v12 + 24);
        void v11[4] = v12[4];
        *((unsigned char *)v11 + 40) = *((unsigned char *)v12 + 40);
        uint64_t v87 = v12[7];
        v11[6] = v12[6];
        v11[7] = v87;
        uint64_t v88 = v12[9];
        v11[8] = v12[8];
        v11[9] = v88;
        uint64_t v89 = v12[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89 == 1)
        {
          long long v90 = *((_OWORD *)v12 + 8);
          *((_OWORD *)v11 + 7) = *((_OWORD *)v12 + 7);
          *((_OWORD *)v11 + 8) = v90;
          *((unsigned char *)v11 + 144) = *((unsigned char *)v12 + 144);
          long long v91 = *((_OWORD *)v12 + 6);
          *((_OWORD *)v11 + 5) = *((_OWORD *)v12 + 5);
          *((_OWORD *)v11 + 6) = v91;
        }
        else
        {
          v11[10] = v12[10];
          v11[11] = v89;
          uint64_t v139 = v12[15];
          swift_bridgeObjectRetain();
          if (v139)
          {
            uint64_t v140 = v12[16];
            v11[15] = v139;
            v11[16] = v140;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v139 - 8))((uint64_t)(v11 + 12), (uint64_t)(v12 + 12), v139);
            v11[17] = v12[17];
          }
          else
          {
            long long v246 = *((_OWORD *)v12 + 7);
            *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
            *((_OWORD *)v11 + 7) = v246;
            *((_OWORD *)v11 + 8) = *((_OWORD *)v12 + 8);
          }
          *((unsigned char *)v11 + 144) = *((unsigned char *)v12 + 144);
        }
        goto LABEL_204;
      case 8u:
        uint64_t v425 = v5;
        uint64_t v92 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v92;
        uint64_t v93 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v94 = (void *)((char *)v11 + v93);
        uint64_t v95 = (void *)((char *)v12 + v93);
        uint64_t v96 = v95[1];
        *uint64_t v94 = *v95;
        v94[1] = v96;
        uint64_t v97 = v95[3];
        v94[2] = v95[2];
        v94[3] = v97;
        uint64_t v98 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v99 = *(int *)(v98 + 24);
        v400 = (char *)v94 + v99;
        v406 = (int *)v98;
        v410 = (char *)v95 + v99;
        uint64_t v100 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v399 = *(void *)(v100 - 8);
        unint64_t v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v399 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v101(v410, 1, v100))
        {
          sub_1BFECA2D8(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v400, v410, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          uint64_t v194 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16))(v400, v410, v194);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v399 + 56))(v400, 0, 1, v100);
        }
        uint64_t v5 = v425;
        *(void *)((char *)v94 + v406[7]) = *(void *)((char *)v95 + v406[7]);
        swift_bridgeObjectRetain();
        goto LABEL_204;
      case 9u:
        uint64_t v34 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v34;
        uint64_t v35 = v12[3];
        v11[2] = v12[2];
        uint64_t v11[3] = v35;
        uint64_t v36 = v12[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36)
        {
          uint64_t v37 = v12[8];
          v11[7] = v36;
          v11[8] = v37;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v36 - 8))((uint64_t)(v11 + 4), (uint64_t)(v12 + 4), v36);
        }
        else
        {
          long long v158 = *((_OWORD *)v12 + 3);
          *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
          *((_OWORD *)v11 + 3) = v158;
          v11[8] = v12[8];
        }
        uint64_t v159 = v11 + 9;
        uint64_t v160 = v12 + 9;
        uint64_t v161 = v12[12];
        if (v161)
        {
          uint64_t v162 = v12[13];
          v11[12] = v161;
          v11[13] = v162;
          (**(void (***)(_OWORD *, _OWORD *))(v161 - 8))(v159, v160);
        }
        else
        {
          long long v168 = *(_OWORD *)(v12 + 11);
          *uint64_t v159 = *v160;
          *(_OWORD *)(v11 + 11) = v168;
          v11[13] = v12[13];
        }
        uint64_t v169 = v11 + 14;
        uint64_t v170 = v12 + 14;
        uint64_t v171 = v12[17];
        if (v171)
        {
          uint64_t v172 = v12[18];
          v11[17] = v171;
          v11[18] = v172;
          (**(void (***)(_OWORD *, _OWORD *))(v171 - 8))(v169, v170);
        }
        else
        {
          long long v182 = *((_OWORD *)v12 + 8);
          *uint64_t v169 = *v170;
          *((_OWORD *)v11 + 8) = v182;
          v11[18] = v12[18];
        }
        goto LABEL_204;
      case 0xAu:
        uint64_t v426 = v5;
        uint64_t v103 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v103;
        uint64_t v104 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v105 = v104[5];
        v418 = (char *)v11 + v105;
        uint64_t v106 = (char *)v12 + v105;
        uint64_t v107 = sub_1C151959C();
        uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
        swift_bridgeObjectRetain();
        v108(v418, v106, v107);
        *(void *)((char *)v11 + v104[6]) = *(void *)((char *)v12 + v104[6]);
        uint64_t v109 = v104[7];
        long long v110 = (char *)v11 + v109;
        uint64_t v111 = (char *)v12 + v109;
        *(void *)long long v110 = *(void *)v111;
        v110[8] = v111[8];
        uint64_t v112 = v104[8];
        uint64_t v113 = (void *)((char *)v11 + v112);
        long long v114 = (void *)((char *)v12 + v112);
        unint64_t v115 = v114[1];
        if (v115 >= 0x11)
        {
          *uint64_t v113 = *v114;
          v113[1] = v115;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
        }
        uint64_t v5 = v426;
        goto LABEL_204;
      case 0xBu:
        *unint64_t v11 = *v12;
        swift_retain();
        goto LABEL_204;
      case 0xCu:
        uint64_t v38 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v38;
        uint64_t v39 = v12[3];
        v11[2] = v12[2];
        uint64_t v11[3] = v39;
        *((unsigned char *)v11 + 32) = *((unsigned char *)v12 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_204;
      case 0xDu:
        uint64_t v116 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v116;
        *((unsigned char *)v11 + 16) = *((unsigned char *)v12 + 16);
        uint64_t v117 = v12 + 3;
        unint64_t v118 = v12[4];
        uint64_t v427 = v5;
        if (v118 >= 0x11)
        {
          uint64_t v11[3] = *v117;
          void v11[4] = v118;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 3) = *(_OWORD *)v117;
        }
        uint64_t v141 = v12[6];
        v11[5] = v12[5];
        v11[6] = v141;
        uint64_t v142 = (void *)v12[8];
        v11[7] = v12[7];
        v11[8] = v142;
        *((unsigned char *)v11 + 72) = *((unsigned char *)v12 + 72);
        v11[10] = v12[10];
        uint64_t v143 = v12[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v144 = v142;
        swift_bridgeObjectRetain();
        if (v143)
        {
          uint64_t v145 = v12[15];
          v11[14] = v143;
          v11[15] = v145;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v143 - 8))((uint64_t)(v11 + 11), (uint64_t)(v12 + 11), v143);
        }
        else
        {
          long long v195 = *(_OWORD *)(v12 + 13);
          *(_OWORD *)(v11 + 11) = *(_OWORD *)(v12 + 11);
          *(_OWORD *)(v11 + 13) = v195;
          v11[15] = v12[15];
        }
        uint64_t v5 = v427;
        uint64_t v196 = v11 + 16;
        v197 = v12 + 16;
        uint64_t v198 = v12[19];
        if (v198)
        {
          uint64_t v199 = v12[20];
          v11[19] = v198;
          v11[20] = v199;
          (**(void (***)(_OWORD *, _OWORD *))(v198 - 8))(v196, v197);
        }
        else
        {
          long long v206 = *((_OWORD *)v12 + 9);
          *uint64_t v196 = *v197;
          *((_OWORD *)v11 + 9) = v206;
          v11[20] = v12[20];
        }
        uint64_t v207 = v11 + 21;
        uint64_t v208 = v12 + 21;
        uint64_t v209 = v12[24];
        if (v209)
        {
          uint64_t v210 = v12[25];
          unsigned char v11[24] = v209;
          v11[25] = v210;
          (**(void (***)(_OWORD *, _OWORD *))(v209 - 8))(v207, v208);
        }
        else
        {
          long long v211 = *(_OWORD *)(v12 + 23);
          *uint64_t v207 = *v208;
          *(_OWORD *)(v11 + 23) = v211;
          v11[25] = v12[25];
        }
        goto LABEL_204;
      case 0xEu:
        uint64_t v40 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v40;
        *((unsigned char *)v11 + 16) = *((unsigned char *)v12 + 16);
        uint64_t v41 = v12 + 3;
        unint64_t v42 = v12[4];
        if (v42 >= 0x11)
        {
          uint64_t v11[3] = *v41;
          void v11[4] = v42;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 3) = *(_OWORD *)v41;
        }
        uint64_t v132 = v12[6];
        v11[5] = v12[5];
        v11[6] = v132;
        v11[7] = v12[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_204;
      case 0xFu:
        uint64_t v119 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v119;
        *((unsigned char *)v11 + 16) = *((unsigned char *)v12 + 16);
        uint64_t v120 = v12 + 3;
        unint64_t v121 = v12[4];
        if (v121 >= 0x11)
        {
          uint64_t v11[3] = *v120;
          void v11[4] = v121;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 3) = *(_OWORD *)v120;
        }
        break;
      case 0x10u:
        uint64_t v43 = v12[1];
        *unint64_t v11 = *v12;
        v11[1] = v43;
        uint64_t v44 = v12[3];
        v11[2] = v12[2];
        uint64_t v11[3] = v44;
        uint64_t v45 = v12[5];
        void v11[4] = v12[4];
        v11[5] = v45;
        *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
        *(_OWORD *)(v11 + 7) = *(_OWORD *)(v12 + 7);
        uint64_t v46 = v12[10];
        v11[9] = v12[9];
        v11[10] = v46;
        uint64_t v47 = v12[12];
        v11[11] = v12[11];
        v11[12] = v47;
        v11[13] = v12[13];
        *((unsigned char *)v11 + 112) = *((unsigned char *)v12 + 112);
        uint64_t v48 = v12[16];
        v11[15] = v12[15];
        v11[16] = v48;
        *((unsigned char *)v11 + 136) = *((unsigned char *)v12 + 136);
        uint64_t v49 = v12[19];
        v11[18] = v12[18];
        v11[19] = v49;
        uint64_t v50 = v12[21];
        v11[20] = v12[20];
        v11[21] = v50;
        *((unsigned char *)v11 + 184) = *((unsigned char *)v12 + 184);
        v11[22] = v12[22];
        uint64_t v51 = v12[25];
        unsigned char v11[24] = v12[24];
        v11[25] = v51;
        *((unsigned char *)v11 + 224) = *((unsigned char *)v12 + 224);
        uint64_t v52 = v12[27];
        v11[26] = v12[26];
        v11[27] = v52;
        v397 = v12 + 29;
        unint64_t v53 = v12[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v53 >= 0x11)
        {
          v11[29] = *v397;
          v11[30] = v53;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v11 + 29) = *(_OWORD *)v397;
        }
        goto LABEL_204;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_205;
    }
    uint64_t v146 = v12[6];
    v11[5] = v12[5];
    v11[6] = v146;
    uint64_t v147 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v148 = (char *)v11 + v147;
    uint64_t v149 = (void *)((char *)v12 + v147);
    *(void *)((char *)v11 + v147) = *v149;
    uint64_t v150 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    v421 = &v148[v150];
    uint64_t v151 = (void *)((char *)v149 + v150);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v229 = type metadata accessor for PuzzleStatisticValue(0);
        int v230 = swift_getEnumCaseMultiPayload();
        v403 = (void *)v229;
        if (v230 == 5)
        {
          uint64_t v342 = type metadata accessor for PuzzleStreak();
          uint64_t v343 = *(void *)(v342 - 8);
          v231 = v421;
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v343 + 48))(v151, 1, v342))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v421, v151, *(void *)(*(void *)(v344 - 8) + 64));
          }
          else
          {
            uint64_t v355 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v355 - 8) + 16))(v421, v151, v355);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v343 + 56))(v421, 0, 1, v342);
          }
          uint64_t v345 = v5;
          uint64_t v229 = (uint64_t)v403;
        }
        else
        {
          v231 = v421;
          if (v230 != 4)
          {
            uint64_t v345 = v5;
            memcpy(v421, v151, *(void *)(*(void *)(v229 - 8) + 64));
            goto LABEL_182;
          }
          uint64_t v232 = type metadata accessor for PuzzleStreak();
          uint64_t v233 = *(void *)(v232 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v233 + 48))(v151, 1, v232))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v421, v151, *(void *)(*(void *)(v234 - 8) + 64));
          }
          else
          {
            uint64_t v353 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v353 - 8) + 16))(v421, v151, v353);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v233 + 56))(v421, 0, 1, v232);
          }
          uint64_t v345 = v5;
          uint64_t v229 = (uint64_t)v403;
        }
        swift_storeEnumTagMultiPayload();
LABEL_182:
        uint64_t v356 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v357 = *(int *)(v356 + 20);
        v358 = (char *)v231 + v357;
        v359 = (char *)v151 + v357;
        int v360 = swift_getEnumCaseMultiPayload();
        if (v360 == 5)
        {
          uint64_t v364 = type metadata accessor for PuzzleStreak();
          uint64_t v365 = *(void *)(v364 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v365 + 48))(v359, 1, v364))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v358, v359, *(void *)(*(void *)(v366 - 8) + 64));
          }
          else
          {
            uint64_t v368 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v368 - 8) + 16))(v358, v359, v368);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v365 + 56))(v358, 0, 1, v364);
          }
          uint64_t v229 = (uint64_t)v403;
        }
        else
        {
          if (v360 != 4)
          {
            memcpy(v358, v359, *(void *)(*(void *)(v229 - 8) + 64));
            uint64_t v5 = v345;
            goto LABEL_194;
          }
          uint64_t v361 = type metadata accessor for PuzzleStreak();
          uint64_t v362 = *(void *)(v361 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v362 + 48))(v359, 1, v361))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v358, v359, *(void *)(*(void *)(v363 - 8) + 64));
          }
          else
          {
            uint64_t v367 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 16))(v358, v359, v367);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v362 + 56))(v358, 0, 1, v361);
          }
          uint64_t v229 = (uint64_t)v403;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v5 = v345;
LABEL_194:
        uint64_t v369 = *(int *)(v356 + 24);
        v370 = &v421[v369];
        v371 = (char *)v151 + v369;
        int v372 = swift_getEnumCaseMultiPayload();
        if (v372 == 5)
        {
          uint64_t v373 = type metadata accessor for PuzzleStreak();
          uint64_t v374 = *(void *)(v373 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v374 + 48))(v371, 1, v373)) {
            goto LABEL_197;
          }
        }
        else
        {
          if (v372 != 4)
          {
            memcpy(v370, v371, *(void *)(*(void *)(v229 - 8) + 64));
            goto LABEL_203;
          }
          uint64_t v373 = type metadata accessor for PuzzleStreak();
          uint64_t v374 = *(void *)(v373 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v374 + 48))(v371, 1, v373))
          {
LABEL_197:
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v370, v371, *(void *)(*(void *)(v375 - 8) + 64));
            goto LABEL_202;
          }
        }
        uint64_t v376 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16))(v370, v371, v376);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v374 + 56))(v370, 0, 1, v373);
        goto LABEL_202;
      case 2u:
        v225 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        v226 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v225 - 1);
        if (v226[6](v151, 1, v225))
        {
          sub_1BFECA2D8(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          size_t v228 = *(void *)(*(void *)(v227 - 8) + 64);
          uint64_t v154 = v421;
          goto LABEL_166;
        }
        v405 = v226;
        uint64_t v429 = v5;
        uint64_t v297 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v297 - 8) + 16))(v421, v151, v297);
        v298 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v299 = v298[5];
        v300 = &v421[v299];
        v301 = (void *)((char *)v151 + v299);
        uint64_t v302 = v301[1];
        *(void *)v300 = *v301;
        *((void *)v300 + 1) = v302;
        uint64_t v303 = v298[6];
        v304 = &v421[v303];
        v305 = (void *)((char *)v151 + v303);
        uint64_t v306 = v305[1];
        *(void *)v304 = *v305;
        *((void *)v304 + 1) = v306;
        v307 = v305 + 2;
        unint64_t v308 = v305[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v308 >> 60 == 15)
        {
          *((_OWORD *)v304 + 1) = *(_OWORD *)v307;
        }
        else
        {
          uint64_t v347 = *v307;
          sub_1BFE95820(*v307, v308);
          *((void *)v304 + 2) = v347;
          *((void *)v304 + 3) = v308;
        }
        *(void *)&v421[v298[7]] = *(void *)((char *)v151 + v298[7]);
        *(void *)&v421[v298[8]] = *(void *)((char *)v151 + v298[8]);
        *(void *)&v421[v225[5]] = *(void *)((char *)v151 + v225[5]);
        *(void *)&v421[v225[6]] = *(void *)((char *)v151 + v225[6]);
        uint64_t v348 = v225[7];
        v349 = &v421[v348];
        v350 = (void *)((char *)v151 + v348);
        uint64_t v351 = v350[1];
        *(void *)v349 = *v350;
        *((void *)v349 + 1) = v351;
        v352 = (void (*)(char *, void, uint64_t, int *))v405[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v352(v421, 0, 1, v225);
        uint64_t v5 = v429;
        goto LABEL_203;
      case 3u:
        uint64_t v428 = v5;
        uint64_t v235 = v151[1];
        *(void *)v421 = *v151;
        *((void *)v421 + 1) = v235;
        v421[16] = *((unsigned char *)v151 + 16);
        v236 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v237 = v236[6];
        v238 = &v421[v237];
        v239 = (char *)v151 + v237;
        uint64_t v240 = type metadata accessor for PuzzleStreak();
        uint64_t v241 = *(void *)(v240 - 8);
        v404 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v241 + 48);
        if (v404(v239, 1, v240))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v238, v239, *(void *)(*(void *)(v242 - 8) + 64));
        }
        else
        {
          uint64_t v324 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v238, v239, v324);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v241 + 56))(v238, 0, 1, v240);
        }
        uint64_t v325 = v236[7];
        v326 = &v421[v325];
        v327 = (char *)v151 + v325;
        if (v404((char *)v151 + v325, 1, v240))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v326, v327, *(void *)(*(void *)(v328 - 8) + 64));
        }
        else
        {
          uint64_t v329 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16))(v326, v327, v329);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v241 + 56))(v326, 0, 1, v240);
        }
        uint64_t v5 = v428;
        uint64_t v330 = v236[8];
        v331 = &v421[v330];
        v332 = (_OWORD *)((char *)v151 + v330);
        long long v333 = v332[1];
        *(_OWORD *)v331 = *v332;
        *((_OWORD *)v331 + 1) = v333;
        *(_OWORD *)(v331 + 25) = *(_OWORD *)((char *)v332 + 25);
        uint64_t v334 = v236[9];
        v335 = &v421[v334];
        v336 = (_OWORD *)((char *)v151 + v334);
        *(_OWORD *)(v335 + 25) = *(_OWORD *)((char *)v336 + 25);
        long long v337 = v336[1];
        *(_OWORD *)v335 = *v336;
        *((_OWORD *)v335 + 1) = v337;
        uint64_t v338 = v236[10];
        v339 = &v421[v338];
        v340 = (_OWORD *)((char *)v151 + v338);
        long long v341 = v340[1];
        *(_OWORD *)v339 = *v340;
        *((_OWORD *)v339 + 1) = v341;
        *(_OWORD *)(v339 + 25) = *(_OWORD *)((char *)v340 + 25);
        goto LABEL_203;
      default:
        uint64_t v152 = type metadata accessor for PuzzleStatisticValue(0);
        int v153 = swift_getEnumCaseMultiPayload();
        if (v153 == 5)
        {
          uint64_t v155 = type metadata accessor for PuzzleStreak();
          uint64_t v156 = *(void *)(v155 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v156 + 48))(v151, 1, v155)) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v154 = v421;
          if (v153 != 4)
          {
            size_t v228 = *(void *)(*(void *)(v152 - 8) + 64);
LABEL_166:
            memcpy(v154, v151, v228);
            goto LABEL_203;
          }
          uint64_t v155 = type metadata accessor for PuzzleStreak();
          uint64_t v156 = *(void *)(v155 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v156 + 48))(v151, 1, v155))
          {
LABEL_64:
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v421, v151, *(void *)(*(void *)(v157 - 8) + 64));
            goto LABEL_202;
          }
        }
        uint64_t v354 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v354 - 8) + 16))(v421, v151, v354);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v421, 0, 1, v155);
LABEL_202:
        swift_storeEnumTagMultiPayload();
LABEL_203:
        swift_storeEnumTagMultiPayload();
LABEL_204:
        swift_storeEnumTagMultiPayload();
LABEL_205:
        uint64_t v377 = *(int *)(v5 + 32);
        uint64_t v378 = *(int *)(v5 + 36);
        v379 = (_OWORD *)((char *)v7 + v377);
        v380 = (_OWORD *)((char *)a2 + v377);
        long long v381 = v380[1];
        _OWORD *v379 = *v380;
        v379[1] = v381;
        v382 = (_OWORD *)((char *)v7 + v378);
        v383 = (_OWORD *)((char *)a2 + v378);
        long long v384 = v383[1];
        _OWORD *v382 = *v383;
        v382[1] = v384;
        break;
    }
  }
  return v7;
}

void *assignWithCopy for FormatItemNodeLayoutContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    unint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1BFEE30A0((uint64_t)a1 + v6, type metadata accessor for FeedItem);
    uint64_t v9 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v10 = v8[3];
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        v7[3] = v10;
        unint64_t v11 = v8[6];
        swift_bridgeObjectRetain();
        if (v11 >= 0x11)
        {
          void v7[5] = v8[5];
          void v7[6] = v8[6];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 5) = *(_OWORD *)(v8 + 5);
        }
        goto LABEL_200;
      case 1u:
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v30 = v8[3];
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        v7[3] = v30;
        void v7[5] = v8[5];
        void v7[6] = v8[6];
        v7[7] = v8[7];
        v7[8] = v8[8];
        unint64_t v31 = v8[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31 >= 0x11)
        {
          v7[9] = v8[9];
          v7[10] = v8[10];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 9) = *(_OWORD *)(v8 + 9);
        }
        goto LABEL_200;
      case 2u:
        uint64_t v367 = a3;
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v12 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v13 = v12[5];
        uint64_t v362 = (char *)v7 + v13;
        uint64_t v14 = (char *)v8 + v13;
        uint64_t v15 = sub_1C151DBAC();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v362, v14, v15);
        *(void *)((char *)v7 + v12[6]) = *(void *)((char *)v8 + v12[6]);
        uint64_t v17 = v12[7];
        uint64_t v18 = (char *)v7 + v17;
        uint64_t v19 = (char *)v8 + v17;
        char v20 = v19[8];
        *(void *)uint64_t v18 = *(void *)v19;
        v18[8] = v20;
        uint64_t v21 = v12[8];
        uint64_t v22 = (void *)((char *)v7 + v21);
        uint64_t v23 = (void *)((char *)v8 + v21);
        if (v23[1] >= 0x11uLL)
        {
          *uint64_t v22 = *v23;
          v22[1] = v23[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        }
        a3 = v367;
        goto LABEL_200;
      case 3u:
        uint64_t v369 = a3;
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v32 = v8[2];
        *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
        v7[2] = v32;
        v7[4] = v8[4];
        void v7[5] = v8[5];
        void v7[6] = v8[6];
        *((unsigned char *)v7 + 56) = *((unsigned char *)v8 + 56);
        uint64_t v363 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v33 = v363[10];
        uint64_t v34 = (char *)v7 + v33;
        uint64_t v35 = (char *)v8 + v33;
        *uint64_t v34 = *((unsigned char *)v8 + v33);
        v34[1] = *((unsigned char *)v8 + v33 + 1);
        uint64_t v36 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v37 = *(int *)(v36 + 24);
        __dst = &v34[v37];
        v340 = (int *)v36;
        uint64_t v38 = &v35[v37];
        uint64_t v39 = (int *)type metadata accessor for SharedItem();
        uint64_t v337 = *((void *)v39 - 1);
        uint64_t v40 = *(unsigned int (**)(char *, uint64_t, int *))(v337 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v40(v38, 1, v39))
        {
          uint64_t v41 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v38, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v137 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(__dst, v38, v137);
          __dst[v39[5]] = v38[v39[5]];
          uint64_t v138 = v39[6];
          uint64_t v345 = *(void **)&v38[v138];
          *(void *)&__dst[v138] = v345;
          uint64_t v139 = v39[7];
          uint64_t v351 = &v38[v139];
          int v360 = &__dst[v139];
          uint64_t v140 = sub_1C1515FDC();
          v336 = *(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16);
          id v141 = v345;
          v336(v360, v351, v140);
          (*(void (**)(char *, void, uint64_t, int *))(v337 + 56))(__dst, 0, 1, v39);
        }
        v34[v340[7]] = v35[v340[7]];
        v34[v340[8]] = v35[v340[8]];
        v34[v340[9]] = v35[v340[9]];
        v34[v340[10]] = v35[v340[10]];
        a3 = v369;
        uint64_t v142 = v363[11];
        uint64_t v143 = (char *)v7 + v142;
        id v144 = (char *)v8 + v142;
        uint64_t v145 = sub_1C151D2DC();
        uint64_t v146 = *(void *)(v145 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v143, v144, *(void *)(*(void *)(v147 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v143, v144, v145);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
        }
        uint64_t v154 = v363[12];
        uint64_t v155 = (void *)((char *)v7 + v154);
        uint64_t v156 = (void *)((char *)v8 + v154);
        if (v156[1] >= 0x11uLL)
        {
          *uint64_t v155 = *v156;
          v155[1] = v156[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
        }
        uint64_t v157 = v363[13];
        unint64_t v158 = *(void *)((char *)v8 + v157);
        if (v158 >= 2)
        {
          if (v158 == 2)
          {
            *(void *)((char *)v7 + v157) = 2;
          }
          else
          {
            *(void *)((char *)v7 + v157) = v158;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v7 + v157) = v158;
        }
        uint64_t v196 = v363[14];
        v197 = *(void **)((char *)v8 + v196);
        *(void *)((char *)v7 + v196) = v197;
        id v198 = v197;
        goto LABEL_200;
      case 4u:
        *unint64_t v7 = *v8;
        uint64_t v24 = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        v7[1] = v24;
        uint64_t v368 = a3;
        if (v8[4] >= 0x11uLL)
        {
          v7[3] = v8[3];
          v7[4] = v8[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
        }
        void v7[5] = v8[5];
        void v7[6] = v8[6];
        uint64_t v86 = type metadata accessor for FeedWebEmbed();
        uint64_t v87 = *(int *)(v86 + 32);
        uint64_t v365 = (char *)v7 + v87;
        uint64_t v357 = (char *)v8 + v87;
        uint64_t v88 = sub_1C1515FDC();
        uint64_t v89 = *(void *)(v88 - 8);
        long long v90 = *(void (**)(char *, char *, void *))(v89 + 16);
        long long v91 = (void *)v88;
        swift_bridgeObjectRetain();
        v90(v365, v357, v91);
        uint64_t v366 = (int *)v86;
        uint64_t v92 = *(int *)(v86 + 36);
        v358 = (char *)v7 + v92;
        uint64_t v93 = (char *)v8 + v92;
        __dsta = v90;
        uint64_t v344 = v91;
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v89 + 48))((char *)v8 + v92, 1, v91))
        {
          sub_1BFECA2D8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v358, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          v90(v358, v93, v91);
          (*(void (**)(char *, void, uint64_t, void *))(v89 + 56))(v358, 0, 1, v91);
        }
        *(void *)((char *)v7 + v366[10]) = *(void *)((char *)v8 + v366[10]);
        *(void *)((char *)v7 + v366[11]) = *(void *)((char *)v8 + v366[11]);
        uint64_t v117 = v366[12];
        v350 = (void *)((char *)v7 + v117);
        v359 = (void *)((char *)v8 + v117);
        uint64_t v118 = type metadata accessor for FeedHeadline(0);
        uint64_t v119 = *(void *)(v118 - 8);
        uint64_t v120 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v119 + 48);
        swift_retain();
        swift_retain();
        if (v120(v359, 1, v118))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v350, v359, *(void *)(*(void *)(v121 - 8) + 64));
        }
        else
        {
          uint64_t v333 = v119;
          void *v350 = *v359;
          v350[1] = v359[1];
          uint64_t v127 = v359[2];
          *((unsigned char *)v350 + 24) = *((unsigned char *)v359 + 24);
          v350[2] = v127;
          v350[4] = v359[4];
          v350[5] = v359[5];
          v350[6] = v359[6];
          *((unsigned char *)v350 + 56) = *((unsigned char *)v359 + 56);
          uint64_t v334 = (int *)v118;
          uint64_t v128 = *(int *)(v118 + 40);
          uint64_t v129 = (char *)v350 + v128;
          uint64_t v130 = (char *)v359 + v128;
          *uint64_t v129 = *((unsigned char *)v359 + v128);
          v129[1] = *((unsigned char *)v359 + v128 + 1);
          v332 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v131 = v332[6];
          v335 = &v129[v131];
          uint64_t v132 = &v130[v131];
          uint64_t v133 = (int *)type metadata accessor for SharedItem();
          uint64_t v329 = *((void *)v133 - 1);
          uint64_t v330 = *(unsigned int (**)(char *, uint64_t, int *))(v329 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v330(v132, 1, v133))
          {
            uint64_t v134 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v335, v132, *(void *)(*(void *)(v134 - 8) + 64));
          }
          else
          {
            uint64_t v216 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v335, v132, v216);
            v335[v133[5]] = v132[v133[5]];
            uint64_t v217 = v133[6];
            uint64_t v218 = *(void **)&v132[v217];
            *(void *)&v335[v217] = v218;
            uint64_t v219 = v133[7];
            v331 = &v335[v219];
            v220 = &v132[v219];
            id v221 = v218;
            __dsta(v331, v220, v344);
            (*(void (**)(char *, void, uint64_t, int *))(v329 + 56))(v335, 0, 1, v133);
          }
          v129[v332[7]] = v130[v332[7]];
          v129[v332[8]] = v130[v332[8]];
          v129[v332[9]] = v130[v332[9]];
          v129[v332[10]] = v130[v332[10]];
          uint64_t v222 = v334[11];
          id v223 = (char *)v350 + v222;
          long long v224 = (char *)v359 + v222;
          uint64_t v225 = sub_1C151D2DC();
          uint64_t v226 = *(void *)(v225 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v226 + 48))(v224, 1, v225))
          {
            sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v223, v224, *(void *)(*(void *)(v227 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v226 + 16))(v223, v224, v225);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v226 + 56))(v223, 0, 1, v225);
          }
          uint64_t v228 = v334[12];
          uint64_t v229 = (void *)((char *)v350 + v228);
          int v230 = (void *)((char *)v359 + v228);
          if (v230[1] >= 0x11uLL)
          {
            *uint64_t v229 = *v230;
            v229[1] = v230[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v229 = *(_OWORD *)v230;
          }
          uint64_t v231 = v334[13];
          unint64_t v232 = *(void *)((char *)v359 + v231);
          if (v232 >= 2)
          {
            if (v232 == 2)
            {
              *(void *)((char *)v350 + v231) = 2;
            }
            else
            {
              *(void *)((char *)v350 + v231) = v232;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v350 + v231) = v232;
          }
          uint64_t v251 = v334[14];
          unint64_t v252 = *(void **)((char *)v359 + v251);
          *(void *)((char *)v350 + v251) = v252;
          uint64_t v253 = *(void (**)(void *, void, uint64_t, int *))(v333 + 56);
          id v254 = v252;
          v253(v350, 0, 1, v334);
        }
        uint64_t v255 = v366[13];
        uint64_t v256 = (void *)((char *)v7 + v255);
        v257 = (void *)((char *)v8 + v255);
        uint64_t v258 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v259 = *(void *)(v258 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v259 + 48))(v257, 1, v258))
        {
          sub_1BFECA2D8(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v256, v257, *(void *)(*(void *)(v260 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *uint64_t v256 = *v257;
          if (EnumCaseMultiPayload == 1)
          {
            v256[1] = v257[1];
            uint64_t v262 = type metadata accessor for GenericDataVisualization();
            uint64_t v263 = *(int *)(v262 + 20);
            uint64_t v354 = (char *)v257 + v263;
            uint64_t v361 = (char *)v256 + v263;
            swift_bridgeObjectRetain();
            __dsta(v361, v354, v344);
            *(void *)((char *)v256 + *(int *)(v262 + 24)) = *(void *)((char *)v257 + *(int *)(v262 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v259 + 56))(v256, 0, 1, v258);
        }
        *((unsigned char *)v7 + v366[14]) = *((unsigned char *)v8 + v366[14]);
        swift_storeEnumTagMultiPayload();
        a3 = v368;
        goto LABEL_201;
      case 5u:
        unint64_t v42 = (void *)*v8;
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
        *((unsigned char *)v7 + 25) = *((unsigned char *)v8 + 25);
        uint64_t v43 = v8[4];
        *((unsigned char *)v7 + 40) = *((unsigned char *)v8 + 40);
        v7[4] = v43;
        void v7[6] = v8[6];
        uint64_t v44 = (void *)v8[7];
        v7[7] = v44;
        *((unsigned char *)v7 + 64) = *((unsigned char *)v8 + 64);
        uint64_t v45 = v8[10];
        id v46 = v42;
        swift_bridgeObjectRetain();
        id v47 = v44;
        if (v45 == 1)
        {
          long long v48 = *(_OWORD *)(v8 + 9);
          long long v49 = *(_OWORD *)(v8 + 13);
          *(_OWORD *)(v7 + 11) = *(_OWORD *)(v8 + 11);
          *(_OWORD *)(v7 + 13) = v49;
          *(_OWORD *)(v7 + 9) = v48;
        }
        else
        {
          v7[9] = v8[9];
          v7[10] = v8[10];
          v7[11] = v8[11];
          v7[12] = v8[12];
          uint64_t v95 = (void *)v8[13];
          v7[13] = v95;
          v7[14] = v8[14];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v96 = v95;
        }
        if (v8[16] >= 0x11uLL)
        {
          v7[15] = v8[15];
          v7[16] = v8[16];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 15) = *(_OWORD *)(v8 + 15);
        }
        *((unsigned char *)v7 + 136) = *((unsigned char *)v8 + 136);
        goto LABEL_200;
      case 6u:
        int v50 = *((unsigned __int8 *)v8 + 281);
        if (v50 == 2)
        {
          *unint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
          uint64_t v166 = v8[4];
          *((unsigned char *)v7 + 40) = *((unsigned char *)v8 + 40);
          v7[4] = v166;
          void v7[6] = v8[6];
          v7[7] = v8[7];
          v7[8] = v8[8];
          v7[9] = v8[9];
          uint64_t v167 = v8[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v167 == 1)
          {
            *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
            long long v168 = *((_OWORD *)v8 + 6);
            long long v169 = *((_OWORD *)v8 + 7);
            long long v170 = *((_OWORD *)v8 + 8);
            *((unsigned char *)v7 + 144) = *((unsigned char *)v8 + 144);
            *((_OWORD *)v7 + 7) = v169;
            *((_OWORD *)v7 + 8) = v170;
            *((_OWORD *)v7 + 6) = v168;
          }
          else
          {
            v7[10] = v8[10];
            v7[11] = v8[11];
            uint64_t v204 = v8[15];
            swift_bridgeObjectRetain();
            if (v204)
            {
              v7[15] = v204;
              v7[16] = v8[16];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v204 - 8))((uint64_t)(v7 + 12), (uint64_t)(v8 + 12), v204);
              char v205 = *((unsigned char *)v8 + 144);
              v7[17] = v8[17];
              *((unsigned char *)v7 + 144) = v205;
            }
            else
            {
              long long v290 = *((_OWORD *)v8 + 6);
              long long v291 = *((_OWORD *)v8 + 7);
              long long v292 = *((_OWORD *)v8 + 8);
              *((unsigned char *)v7 + 144) = *((unsigned char *)v8 + 144);
              *((_OWORD *)v7 + 7) = v291;
              *((_OWORD *)v7 + 8) = v292;
              *((_OWORD *)v7 + 6) = v290;
            }
          }
        }
        else if (v50 == 1)
        {
          uint64_t v51 = (void *)*v8;
          *unint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
          *((unsigned char *)v7 + 25) = *((unsigned char *)v8 + 25);
          uint64_t v52 = v8[4];
          *((unsigned char *)v7 + 40) = *((unsigned char *)v8 + 40);
          v7[4] = v52;
          void v7[6] = v8[6];
          unint64_t v53 = (void *)v8[7];
          v7[7] = v53;
          *((unsigned char *)v7 + 64) = *((unsigned char *)v8 + 64);
          uint64_t v54 = v8[10];
          id v55 = v51;
          swift_bridgeObjectRetain();
          id v56 = v53;
          if (v54 == 1)
          {
            long long v57 = *(_OWORD *)(v8 + 9);
            long long v58 = *(_OWORD *)(v8 + 13);
            *(_OWORD *)(v7 + 11) = *(_OWORD *)(v8 + 11);
            *(_OWORD *)(v7 + 13) = v58;
            *(_OWORD *)(v7 + 9) = v57;
          }
          else
          {
            v7[9] = v8[9];
            v7[10] = v8[10];
            v7[11] = v8[11];
            v7[12] = v8[12];
            v202 = (void *)v8[13];
            v7[13] = v202;
            v7[14] = v8[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v203 = v202;
          }
          if (v8[16] >= 0x11uLL)
          {
            v7[15] = v8[15];
            v7[16] = v8[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 15) = *(_OWORD *)(v8 + 15);
          }
          *((unsigned char *)v7 + 136) = *((unsigned char *)v8 + 136);
          uint64_t v208 = (void *)v8[18];
          if (v208)
          {
            v7[18] = v208;
            v7[19] = v8[19];
            v7[20] = v8[20];
            *((unsigned char *)v7 + 168) = *((unsigned char *)v8 + 168);
            *((unsigned char *)v7 + 169) = *((unsigned char *)v8 + 169);
            uint64_t v209 = v8[22];
            *((unsigned char *)v7 + 184) = *((unsigned char *)v8 + 184);
            v7[22] = v209;
            v7[24] = v8[24];
            uint64_t v210 = (void *)v8[25];
            v7[25] = v210;
            *((unsigned char *)v7 + 208) = *((unsigned char *)v8 + 208);
            uint64_t v211 = v8[28];
            id v212 = v208;
            swift_bridgeObjectRetain();
            id v213 = v210;
            if (v211 == 1)
            {
              long long v214 = *(_OWORD *)(v8 + 27);
              long long v215 = *(_OWORD *)(v8 + 31);
              *(_OWORD *)(v7 + 29) = *(_OWORD *)(v8 + 29);
              *(_OWORD *)(v7 + 31) = v215;
              *(_OWORD *)(v7 + 27) = v214;
            }
            else
            {
              v7[27] = v8[27];
              v7[28] = v8[28];
              v7[29] = v8[29];
              v7[30] = v8[30];
              v239 = (void *)v8[31];
              v7[31] = v239;
              v7[32] = v8[32];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v240 = v239;
            }
            if (v8[34] >= 0x11uLL)
            {
              v7[33] = v8[33];
              v7[34] = v8[34];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v7 + 33) = *(_OWORD *)(v8 + 33);
            }
            *((unsigned char *)v7 + 280) = *((unsigned char *)v8 + 280);
          }
          else
          {
            *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
            long long v233 = *((_OWORD *)v8 + 10);
            long long v234 = *((_OWORD *)v8 + 11);
            long long v235 = *((_OWORD *)v8 + 13);
            *((_OWORD *)v7 + 12) = *((_OWORD *)v8 + 12);
            *((_OWORD *)v7 + 13) = v235;
            *((_OWORD *)v7 + 10) = v233;
            *((_OWORD *)v7 + 11) = v234;
            long long v236 = *((_OWORD *)v8 + 14);
            long long v237 = *((_OWORD *)v8 + 15);
            long long v238 = *((_OWORD *)v8 + 16);
            *(_OWORD *)((char *)v7 + 265) = *(_OWORD *)((char *)v8 + 265);
            *((_OWORD *)v7 + 15) = v237;
            *((_OWORD *)v7 + 16) = v238;
            *((_OWORD *)v7 + 14) = v236;
          }
        }
        else
        {
          uint64_t v171 = (void *)*v8;
          *unint64_t v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
          *((unsigned char *)v7 + 25) = *((unsigned char *)v8 + 25);
          uint64_t v172 = v8[4];
          *((unsigned char *)v7 + 40) = *((unsigned char *)v8 + 40);
          v7[4] = v172;
          void v7[6] = v8[6];
          uint64_t v173 = (void *)v8[7];
          v7[7] = v173;
          *((unsigned char *)v7 + 64) = *((unsigned char *)v8 + 64);
          uint64_t v174 = v8[10];
          id v175 = v171;
          swift_bridgeObjectRetain();
          id v176 = v173;
          if (v174 == 1)
          {
            long long v177 = *(_OWORD *)(v8 + 9);
            long long v178 = *(_OWORD *)(v8 + 13);
            *(_OWORD *)(v7 + 11) = *(_OWORD *)(v8 + 11);
            *(_OWORD *)(v7 + 13) = v178;
            *(_OWORD *)(v7 + 9) = v177;
          }
          else
          {
            v7[9] = v8[9];
            v7[10] = v8[10];
            v7[11] = v8[11];
            v7[12] = v8[12];
            long long v206 = (void *)v8[13];
            v7[13] = v206;
            v7[14] = v8[14];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v207 = v206;
          }
          if (v8[16] >= 0x11uLL)
          {
            v7[15] = v8[15];
            v7[16] = v8[16];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v7 + 15) = *(_OWORD *)(v8 + 15);
          }
          *((unsigned char *)v7 + 136) = *((unsigned char *)v8 + 136);
        }
        *((unsigned char *)v7 + 281) = v50;
        goto LABEL_200;
      case 7u:
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        *((unsigned char *)v7 + 24) = *((unsigned char *)v8 + 24);
        uint64_t v59 = v8[4];
        *((unsigned char *)v7 + 40) = *((unsigned char *)v8 + 40);
        v7[4] = v59;
        void v7[6] = v8[6];
        v7[7] = v8[7];
        v7[8] = v8[8];
        v7[9] = v8[9];
        uint64_t v60 = v8[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v60 == 1)
        {
          *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
          long long v61 = *((_OWORD *)v8 + 6);
          long long v62 = *((_OWORD *)v8 + 7);
          long long v63 = *((_OWORD *)v8 + 8);
          *((unsigned char *)v7 + 144) = *((unsigned char *)v8 + 144);
          *((_OWORD *)v7 + 7) = v62;
          *((_OWORD *)v7 + 8) = v63;
          *((_OWORD *)v7 + 6) = v61;
        }
        else
        {
          v7[10] = v8[10];
          v7[11] = v8[11];
          uint64_t v97 = v8[15];
          swift_bridgeObjectRetain();
          if (v97)
          {
            v7[15] = v97;
            v7[16] = v8[16];
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v97 - 8))((uint64_t)(v7 + 12), (uint64_t)(v8 + 12), v97);
            char v98 = *((unsigned char *)v8 + 144);
            v7[17] = v8[17];
            *((unsigned char *)v7 + 144) = v98;
          }
          else
          {
            long long v199 = *((_OWORD *)v8 + 6);
            long long v200 = *((_OWORD *)v8 + 7);
            long long v201 = *((_OWORD *)v8 + 8);
            *((unsigned char *)v7 + 144) = *((unsigned char *)v8 + 144);
            *((_OWORD *)v7 + 7) = v200;
            *((_OWORD *)v7 + 8) = v201;
            *((_OWORD *)v7 + 6) = v199;
          }
        }
        goto LABEL_200;
      case 8u:
        v370 = a3;
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v64 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v65 = (void *)((char *)v7 + v64);
        uint64_t v66 = (void *)((char *)v8 + v64);
        *uint64_t v65 = *v66;
        v65[1] = v66[1];
        v65[2] = v66[2];
        v65[3] = v66[3];
        uint64_t v67 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v68 = *(int *)(v67 + 24);
        uint64_t v343 = (char *)v65 + v68;
        v349 = (int *)v67;
        uint64_t v356 = (char *)v66 + v68;
        uint64_t v69 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v341 = *(void *)(v69 - 8);
        uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v341 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70(v356, 1, v69))
        {
          sub_1BFECA2D8(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v343, v356, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          uint64_t v148 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v343, v356, v148);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v341 + 56))(v343, 0, 1, v69);
        }
        a3 = v370;
        *(void *)((char *)v65 + v349[7]) = *(void *)((char *)v66 + v349[7]);
        swift_bridgeObjectRetain();
        goto LABEL_200;
      case 9u:
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        uint64_t v25 = v8[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25)
        {
          v7[7] = v25;
          v7[8] = v8[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))((uint64_t)(v7 + 4), (uint64_t)(v8 + 4), v25);
        }
        else
        {
          long long v112 = *((_OWORD *)v8 + 2);
          long long v113 = *((_OWORD *)v8 + 3);
          v7[8] = v8[8];
          *((_OWORD *)v7 + 2) = v112;
          *((_OWORD *)v7 + 3) = v113;
        }
        long long v114 = v7 + 9;
        unint64_t v115 = (long long *)(v8 + 9);
        uint64_t v116 = v8[12];
        if (v116)
        {
          v7[12] = v116;
          v7[13] = v8[13];
          (**(void (***)(_OWORD *, long long *))(v116 - 8))(v114, v115);
        }
        else
        {
          long long v122 = *v115;
          long long v123 = *(_OWORD *)(v8 + 11);
          v7[13] = v8[13];
          *long long v114 = v122;
          *(_OWORD *)(v7 + 11) = v123;
        }
        uint64_t v124 = v7 + 14;
        uint64_t v125 = (long long *)(v8 + 14);
        uint64_t v126 = v8[17];
        if (v126)
        {
          v7[17] = v126;
          v7[18] = v8[18];
          (**(void (***)(_OWORD *, long long *))(v126 - 8))(v124, v125);
        }
        else
        {
          long long v135 = *v125;
          long long v136 = *((_OWORD *)v8 + 8);
          v7[18] = v8[18];
          *uint64_t v124 = v135;
          *((_OWORD *)v7 + 8) = v136;
        }
        goto LABEL_200;
      case 0xAu:
        v371 = a3;
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v72 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v73 = v72[5];
        uint64_t v364 = (char *)v7 + v73;
        uint64_t v74 = (char *)v8 + v73;
        uint64_t v75 = sub_1C151959C();
        id v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v364, v74, v75);
        *(void *)((char *)v7 + v72[6]) = *(void *)((char *)v8 + v72[6]);
        uint64_t v77 = v72[7];
        int v78 = (char *)v7 + v77;
        uint64_t v79 = (char *)v8 + v77;
        char v80 = v79[8];
        *(void *)int v78 = *(void *)v79;
        v78[8] = v80;
        uint64_t v81 = v72[8];
        uint64_t v82 = (void *)((char *)v7 + v81);
        id v83 = (void *)((char *)v8 + v81);
        if (v83[1] >= 0x11uLL)
        {
          void *v82 = *v83;
          v82[1] = v83[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
        }
        a3 = v371;
        goto LABEL_200;
      case 0xBu:
        *unint64_t v7 = *v8;
        swift_retain();
        goto LABEL_200;
      case 0xCu:
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        uint64_t v26 = v8[3];
        *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
        v7[3] = v26;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_200;
      case 0xDu:
        *unint64_t v7 = *v8;
        uint64_t v84 = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        v7[1] = v84;
        int v372 = a3;
        if (v8[4] >= 0x11uLL)
        {
          v7[3] = v8[3];
          v7[4] = v8[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
        }
        void v7[5] = v8[5];
        void v7[6] = v8[6];
        v7[7] = v8[7];
        uint64_t v99 = (void *)v8[8];
        v7[8] = v99;
        *((unsigned char *)v7 + 72) = *((unsigned char *)v8 + 72);
        v7[10] = v8[10];
        uint64_t v100 = v8[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v101 = v99;
        swift_bridgeObjectRetain();
        if (v100)
        {
          v7[14] = v100;
          v7[15] = v8[15];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v100 - 8))((uint64_t)(v7 + 11), (uint64_t)(v8 + 11), v100);
        }
        else
        {
          long long v149 = *(_OWORD *)(v8 + 11);
          long long v150 = *(_OWORD *)(v8 + 13);
          v7[15] = v8[15];
          *(_OWORD *)(v7 + 11) = v149;
          *(_OWORD *)(v7 + 13) = v150;
        }
        a3 = v372;
        uint64_t v151 = v7 + 16;
        uint64_t v152 = (long long *)(v8 + 16);
        uint64_t v153 = v8[19];
        if (v153)
        {
          v7[19] = v153;
          v7[20] = v8[20];
          (**(void (***)(_OWORD *, long long *))(v153 - 8))(v151, v152);
        }
        else
        {
          long long v159 = *v152;
          long long v160 = *((_OWORD *)v8 + 9);
          v7[20] = v8[20];
          *uint64_t v151 = v159;
          *((_OWORD *)v7 + 9) = v160;
        }
        uint64_t v161 = v7 + 21;
        uint64_t v162 = (long long *)(v8 + 21);
        uint64_t v163 = v8[24];
        if (v163)
        {
          v7[24] = v163;
          v7[25] = v8[25];
          (**(void (***)(_OWORD *, long long *))(v163 - 8))(v161, v162);
        }
        else
        {
          long long v164 = *v162;
          long long v165 = *(_OWORD *)(v8 + 23);
          v7[25] = v8[25];
          *uint64_t v161 = v164;
          *(_OWORD *)(v7 + 23) = v165;
        }
        goto LABEL_200;
      case 0xEu:
        *unint64_t v7 = *v8;
        uint64_t v27 = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        v7[1] = v27;
        if (v8[4] >= 0x11uLL)
        {
          v7[3] = v8[3];
          v7[4] = v8[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
        }
        void v7[5] = v8[5];
        void v7[6] = v8[6];
        v7[7] = v8[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_200;
      case 0xFu:
        *unint64_t v7 = *v8;
        uint64_t v85 = v8[1];
        *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
        v7[1] = v85;
        if (v8[4] >= 0x11uLL)
        {
          v7[3] = v8[3];
          v7[4] = v8[4];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
        }
        break;
      case 0x10u:
        *unint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        v7[4] = v8[4];
        void v7[5] = v8[5];
        *((unsigned char *)v7 + 48) = *((unsigned char *)v8 + 48);
        *((unsigned char *)v7 + 49) = *((unsigned char *)v8 + 49);
        v7[7] = v8[7];
        v7[8] = v8[8];
        v7[9] = v8[9];
        v7[10] = v8[10];
        v7[11] = v8[11];
        v7[12] = v8[12];
        v7[13] = v8[13];
        *((unsigned char *)v7 + 112) = *((unsigned char *)v8 + 112);
        v7[15] = v8[15];
        v7[16] = v8[16];
        *((unsigned char *)v7 + 136) = *((unsigned char *)v8 + 136);
        v7[18] = v8[18];
        v7[19] = v8[19];
        v7[20] = v8[20];
        v7[21] = v8[21];
        uint64_t v28 = v8[22];
        *((unsigned char *)v7 + 184) = *((unsigned char *)v8 + 184);
        v7[22] = v28;
        v7[24] = v8[24];
        v7[25] = v8[25];
        v7[26] = v8[26];
        uint64_t v29 = v8[27];
        *((unsigned char *)v7 + 224) = *((unsigned char *)v8 + 224);
        v7[27] = v29;
        uint64_t v342 = (void *)v8[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)v342 >= 0x11)
        {
          v7[29] = v8[29];
          v7[30] = v8[30];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 29) = *(_OWORD *)(v8 + 29);
        }
        goto LABEL_200;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_201;
    }
    void v7[5] = v8[5];
    void v7[6] = v8[6];
    uint64_t v102 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v103 = (char *)v7 + v102;
    uint64_t v104 = (void *)((char *)v8 + v102);
    *(void *)((char *)v7 + v102) = *v104;
    uint64_t v105 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v106 = &v103[v105];
    uint64_t v107 = (void *)((char *)v104 + v105);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v183 = type metadata accessor for PuzzleStatisticValue(0);
        int v184 = swift_getEnumCaseMultiPayload();
        long long v346 = (void *)v183;
        if (v184 == 5)
        {
          uint64_t v286 = type metadata accessor for PuzzleStreak();
          uint64_t v287 = *(void *)(v286 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v287 + 48))(v107, 1, v286))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v106, v107, *(void *)(*(void *)(v288 - 8) + 64));
          }
          else
          {
            uint64_t v300 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v300 - 8) + 16))(v106, v107, v300);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v287 + 56))(v106, 0, 1, v286);
          }
          long long v289 = a3;
          uint64_t v183 = (uint64_t)v346;
        }
        else
        {
          if (v184 != 4)
          {
            long long v289 = a3;
            memcpy(v106, v107, *(void *)(*(void *)(v183 - 8) + 64));
            goto LABEL_178;
          }
          uint64_t v185 = type metadata accessor for PuzzleStreak();
          uint64_t v186 = *(void *)(v185 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v186 + 48))(v107, 1, v185))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v106, v107, *(void *)(*(void *)(v187 - 8) + 64));
          }
          else
          {
            uint64_t v298 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v298 - 8) + 16))(v106, v107, v298);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v186 + 56))(v106, 0, 1, v185);
          }
          long long v289 = a3;
          uint64_t v183 = (uint64_t)v346;
        }
        swift_storeEnumTagMultiPayload();
LABEL_178:
        uint64_t v301 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v302 = *(int *)(v301 + 20);
        uint64_t v355 = v106;
        uint64_t v303 = &v106[v302];
        v304 = (char *)v107 + v302;
        int v305 = swift_getEnumCaseMultiPayload();
        if (v305 == 5)
        {
          uint64_t v309 = type metadata accessor for PuzzleStreak();
          uint64_t v310 = *(void *)(v309 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v310 + 48))(v304, 1, v309))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v303, v304, *(void *)(*(void *)(v311 - 8) + 64));
          }
          else
          {
            uint64_t v313 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v303, v304, v313);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v310 + 56))(v303, 0, 1, v309);
          }
          uint64_t v183 = (uint64_t)v346;
        }
        else
        {
          if (v305 != 4)
          {
            memcpy(v303, v304, *(void *)(*(void *)(v183 - 8) + 64));
            goto LABEL_190;
          }
          uint64_t v306 = type metadata accessor for PuzzleStreak();
          uint64_t v307 = *(void *)(v306 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v307 + 48))(v304, 1, v306))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v303, v304, *(void *)(*(void *)(v308 - 8) + 64));
          }
          else
          {
            uint64_t v312 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16))(v303, v304, v312);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v307 + 56))(v303, 0, 1, v306);
          }
          uint64_t v183 = (uint64_t)v346;
        }
        swift_storeEnumTagMultiPayload();
LABEL_190:
        a3 = v289;
        uint64_t v314 = *(int *)(v301 + 24);
        v315 = &v355[v314];
        uint64_t v316 = (char *)v107 + v314;
        int v317 = swift_getEnumCaseMultiPayload();
        if (v317 == 5)
        {
          uint64_t v318 = type metadata accessor for PuzzleStreak();
          uint64_t v319 = *(void *)(v318 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v319 + 48))(v316, 1, v318)) {
            goto LABEL_193;
          }
        }
        else
        {
          if (v317 != 4)
          {
            memcpy(v315, v316, *(void *)(*(void *)(v183 - 8) + 64));
            goto LABEL_199;
          }
          uint64_t v318 = type metadata accessor for PuzzleStreak();
          uint64_t v319 = *(void *)(v318 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v319 + 48))(v316, 1, v318))
          {
LABEL_193:
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v315, v316, *(void *)(*(void *)(v320 - 8) + 64));
            goto LABEL_198;
          }
        }
        uint64_t v321 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 16))(v315, v316, v321);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v319 + 56))(v315, 0, 1, v318);
        goto LABEL_198;
      case 2u:
        uint64_t v179 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v180 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v179 - 1);
        if (v180[6](v107, 1, v179))
        {
          sub_1BFECA2D8(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          size_t v182 = *(void *)(*(void *)(v181 - 8) + 64);
          goto LABEL_163;
        }
        uint64_t v348 = v180;
        uint64_t v374 = a3;
        uint64_t v241 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v241 - 8) + 16))(v106, v107, v241);
        uint64_t v242 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v243 = v242[5];
        v244 = &v106[v243];
        id v245 = (void *)((char *)v107 + v243);
        *(void *)v244 = *v245;
        *((void *)v244 + 1) = v245[1];
        uint64_t v246 = v242[6];
        uint64_t v353 = v106;
        uint64_t v247 = &v106[v246];
        uint64_t v248 = (void *)((char *)v107 + v246);
        *(void *)uint64_t v247 = *v248;
        *((void *)v247 + 1) = v248[1];
        v249 = v248 + 2;
        unint64_t v250 = v248[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v250 >> 60 == 15)
        {
          *((_OWORD *)v247 + 1) = *(_OWORD *)v249;
        }
        else
        {
          uint64_t v293 = *v249;
          sub_1BFE95820(*v249, v250);
          *((void *)v247 + 2) = v293;
          *((void *)v247 + 3) = v250;
        }
        *(void *)&v353[v242[7]] = *(void *)((char *)v107 + v242[7]);
        *(void *)&v353[v242[8]] = *(void *)((char *)v107 + v242[8]);
        *(void *)&v353[v179[5]] = *(void *)((char *)v107 + v179[5]);
        *(void *)&v353[v179[6]] = *(void *)((char *)v107 + v179[6]);
        uint64_t v294 = v179[7];
        v295 = &v353[v294];
        unint64_t v296 = (void *)((char *)v107 + v294);
        *(void *)v295 = *v296;
        *((void *)v295 + 1) = v296[1];
        uint64_t v297 = (void (*)(char *, void, uint64_t, int *))v348[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v297(v353, 0, 1, v179);
        a3 = v374;
        goto LABEL_199;
      case 3u:
        uint64_t v373 = a3;
        *(void *)uint64_t v106 = *v107;
        uint64_t v188 = v107[1];
        v106[16] = *((unsigned char *)v107 + 16);
        *((void *)v106 + 1) = v188;
        uint64_t v189 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v190 = v189[6];
        v352 = v106;
        uint64_t v191 = &v106[v190];
        uint64_t v192 = (char *)v107 + v190;
        uint64_t v193 = type metadata accessor for PuzzleStreak();
        uint64_t v194 = *(void *)(v193 - 8);
        uint64_t v347 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48);
        if (v347(v192, 1, v193))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v191, v192, *(void *)(*(void *)(v195 - 8) + 64));
        }
        else
        {
          uint64_t v264 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16))(v191, v192, v264);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v191, 0, 1, v193);
        }
        uint64_t v265 = v189[7];
        id v266 = &v352[v265];
        id v267 = (char *)v107 + v265;
        if (v347((char *)v107 + v265, 1, v193))
        {
          sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v266, v267, *(void *)(*(void *)(v268 - 8) + 64));
        }
        else
        {
          uint64_t v269 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 16))(v266, v267, v269);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v266, 0, 1, v193);
        }
        a3 = v373;
        uint64_t v270 = v189[8];
        v271 = &v352[v270];
        uint64_t v272 = (long long *)((char *)v107 + v270);
        long long v273 = *v272;
        long long v274 = v272[1];
        *(_OWORD *)(v271 + 25) = *(long long *)((char *)v272 + 25);
        *(_OWORD *)v271 = v273;
        *((_OWORD *)v271 + 1) = v274;
        uint64_t v275 = v189[9];
        v276 = &v352[v275];
        v277 = (long long *)((char *)v107 + v275);
        long long v278 = *v277;
        long long v279 = v277[1];
        *(_OWORD *)(v276 + 25) = *(long long *)((char *)v277 + 25);
        *(_OWORD *)v276 = v278;
        *((_OWORD *)v276 + 1) = v279;
        uint64_t v280 = v189[10];
        uint64_t v281 = &v352[v280];
        v282 = (long long *)((char *)v107 + v280);
        long long v283 = *v282;
        long long v284 = v282[1];
        *(_OWORD *)(v281 + 25) = *(long long *)((char *)v282 + 25);
        *(_OWORD *)uint64_t v281 = v283;
        *((_OWORD *)v281 + 1) = v284;
        goto LABEL_199;
      default:
        uint64_t v108 = type metadata accessor for PuzzleStatisticValue(0);
        int v109 = swift_getEnumCaseMultiPayload();
        if (v109 == 5)
        {
          uint64_t v110 = type metadata accessor for PuzzleStreak();
          uint64_t v111 = *(void *)(v110 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v111 + 48))(v107, 1, v110))
          {
LABEL_161:
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v106, v107, *(void *)(*(void *)(v285 - 8) + 64));
            goto LABEL_198;
          }
        }
        else
        {
          if (v109 != 4)
          {
            size_t v182 = *(void *)(*(void *)(v108 - 8) + 64);
LABEL_163:
            memcpy(v106, v107, v182);
            goto LABEL_199;
          }
          uint64_t v110 = type metadata accessor for PuzzleStreak();
          uint64_t v111 = *(void *)(v110 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v111 + 48))(v107, 1, v110)) {
            goto LABEL_161;
          }
        }
        uint64_t v299 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v299 - 8) + 16))(v106, v107, v299);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v106, 0, 1, v110);
LABEL_198:
        swift_storeEnumTagMultiPayload();
LABEL_199:
        swift_storeEnumTagMultiPayload();
LABEL_200:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_201:
  uint64_t v322 = a3[8];
  uint64_t v323 = (void *)((char *)a1 + v322);
  uint64_t v324 = (void *)((char *)a2 + v322);
  *uint64_t v323 = *v324;
  v323[1] = v324[1];
  v323[2] = v324[2];
  v323[3] = v324[3];
  uint64_t v325 = a3[9];
  v326 = (void *)((char *)a1 + v325);
  v327 = (void *)((char *)a2 + v325);
  void *v326 = *v327;
  v326[1] = v327[1];
  v326[2] = v327[2];
  v326[3] = v327[3];
  return a1;
}

_OWORD *initializeWithTake for FormatItemNodeLayoutContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      unint64_t v11 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v12 = v11[5];
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      uint64_t v15 = sub_1C151DBAC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
      uint64_t v16 = v11[7];
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      v17[8] = v18[8];
      *(void *)uint64_t v17 = *(void *)v18;
      *(_OWORD *)&v8[v11[8]] = *(_OWORD *)&v9[v11[8]];
      goto LABEL_92;
    case 3u:
      id v203 = v4;
      uint64_t v206 = v3;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((void *)v8 + 2) = *((void *)v9 + 2);
      v8[24] = v9[24];
      *((void *)v8 + 4) = *((void *)v9 + 4);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      v8[56] = v9[56];
      long long v201 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v19 = v201[10];
      char v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      *char v20 = v9[v19];
      v20[1] = v9[v19 + 1];
      uint64_t v22 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v23 = v22[6];
      uint64_t v24 = &v20[v23];
      uint64_t v25 = &v21[v23];
      uint64_t v26 = (int *)type metadata accessor for SharedItem();
      uint64_t v27 = *((void *)v26 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v72 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v24, v25, v72);
        v24[v26[5]] = v25[v26[5]];
        *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
        uint64_t v73 = v26[7];
        long long v200 = &v24[v73];
        uint64_t v74 = &v25[v73];
        uint64_t v75 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v200, v74, v75);
        (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
      }
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      v20[v22[9]] = v21[v22[9]];
      v20[v22[10]] = v21[v22[10]];
      uint64_t v76 = v201[11];
      uint64_t v77 = &v8[v76];
      int v78 = &v9[v76];
      uint64_t v79 = sub_1C151D2DC();
      uint64_t v80 = *(void *)(v79 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
      {
        sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      }
      uint64_t v4 = v203;
      uint64_t v3 = v206;
      *(_OWORD *)&v8[v201[12]] = *(_OWORD *)&v9[v201[12]];
      uint64_t v90 = v201[13];
      uint64_t v91 = *(void *)&v9[v90];
      if (v91 == 2) {
        uint64_t v91 = 2;
      }
      *(void *)&v8[v90] = v91;
      *(void *)&v8[v201[14]] = *(void *)&v9[v201[14]];
      goto LABEL_92;
    case 4u:
      uint64_t v207 = v3;
      long long v199 = v5;
      uint64_t v29 = *((void *)v9 + 1);
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v29;
      v8[16] = v9[16];
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      uint64_t v30 = type metadata accessor for FeedWebEmbed();
      uint64_t v31 = *(int *)(v30 + 32);
      uint64_t v32 = &v8[v31];
      uint64_t v33 = &v9[v31];
      uint64_t v34 = sub_1C1515FDC();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = v32;
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v37(v36, v33, v34);
      v202 = (int *)v30;
      uint64_t v38 = *(int *)(v30 + 36);
      uint64_t v39 = &v8[v38];
      uint64_t v40 = &v9[v38];
      uint64_t v204 = v4;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v9[v38], 1, v34))
      {
        sub_1BFECA2D8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v37(v39, v40, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v39, 0, 1, v34);
      }
      uint64_t v82 = v202;
      *(void *)&v8[v202[10]] = *(void *)&v9[v202[10]];
      *(void *)&v8[v202[11]] = *(void *)&v9[v202[11]];
      uint64_t v83 = v202[12];
      uint64_t v84 = &v8[v83];
      uint64_t v85 = &v9[v83];
      uint64_t v86 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v87 = *((void *)v86 - 1);
      uint64_t v196 = v34;
      uint64_t v195 = v37;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v87 + 48))(v85, 1, v86))
      {
        sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
        uint64_t v4 = v204;
        uint64_t v5 = v199;
      }
      else
      {
        uint64_t v194 = v87;
        *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
        *((void *)v84 + 2) = *((void *)v85 + 2);
        v84[24] = v85[24];
        *((void *)v84 + 4) = *((void *)v85 + 4);
        *(_OWORD *)(v84 + 40) = *(_OWORD *)(v85 + 40);
        v84[56] = v85[56];
        uint64_t v92 = v86[10];
        uint64_t v93 = &v84[v92];
        uint64_t v94 = &v85[v92];
        *uint64_t v93 = v85[v92];
        v93[1] = v85[v92 + 1];
        uint64_t v95 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v96 = v95[6];
        uint64_t v193 = &v93[v96];
        uint64_t v97 = &v94[v96];
        char v98 = (int *)type metadata accessor for SharedItem();
        uint64_t v192 = *((void *)v98 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v192 + 48))(v97, 1, v98))
        {
          uint64_t v99 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v193, v97, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          uint64_t v117 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v193, v97, v117);
          v193[v98[5]] = v97[v98[5]];
          *(void *)&v193[v98[6]] = *(void *)&v97[v98[6]];
          v195(&v193[v98[7]], &v97[v98[7]], v196);
          (*(void (**)(char *, void, uint64_t, int *))(v192 + 56))(v193, 0, 1, v98);
        }
        uint64_t v5 = v199;
        v93[v95[7]] = v94[v95[7]];
        v93[v95[8]] = v94[v95[8]];
        v93[v95[9]] = v94[v95[9]];
        v93[v95[10]] = v94[v95[10]];
        uint64_t v118 = v86[11];
        uint64_t v119 = &v84[v118];
        uint64_t v120 = &v85[v118];
        uint64_t v121 = sub_1C151D2DC();
        uint64_t v122 = *(void *)(v121 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v119, v120, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v119, v120, v121);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
        }
        uint64_t v82 = v202;
        *(_OWORD *)&v84[v86[12]] = *(_OWORD *)&v85[v86[12]];
        uint64_t v124 = v86[13];
        uint64_t v125 = *(void *)&v85[v124];
        if (v125 == 2) {
          uint64_t v125 = 2;
        }
        *(void *)&v84[v124] = v125;
        *(void *)&v84[v86[14]] = *(void *)&v85[v86[14]];
        (*(void (**)(char *, void, uint64_t, int *))(v194 + 56))(v84, 0, 1, v86);
        uint64_t v4 = v204;
      }
      uint64_t v126 = v82[13];
      uint64_t v127 = &v8[v126];
      uint64_t v128 = &v9[v126];
      uint64_t v129 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v130 = *(void *)(v129 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
      {
        sub_1BFECA2D8(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v127, v128, *(void *)(*(void *)(v131 - 8) + 64));
        uint64_t v3 = v207;
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
          uint64_t v132 = type metadata accessor for GenericDataVisualization();
          v195(&v127[*(int *)(v132 + 20)], &v128[*(int *)(v132 + 20)], v196);
          uint64_t v133 = *(int *)(v132 + 24);
          uint64_t v82 = v202;
          *(void *)&v127[v133] = *(void *)&v128[v133];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v127, v128, *(void *)(v130 + 64));
        }
        uint64_t v3 = v207;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
      }
      v8[v82[14]] = v9[v82[14]];
      goto LABEL_92;
    case 8u:
      uint64_t v208 = v3;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      uint64_t v42 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v43 = &v8[v42];
      uint64_t v44 = &v9[v42];
      long long v45 = *(_OWORD *)&v9[v42 + 16];
      *(_OWORD *)uint64_t v43 = *(_OWORD *)&v9[v42];
      *((_OWORD *)v43 + 1) = v45;
      uint64_t v46 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v47 = *(int *)(v46 + 24);
      long long v48 = &v43[v47];
      long long v49 = &v44[v47];
      uint64_t v50 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        sub_1BFECA2D8(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        uint64_t v89 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v48, v49, v89);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      *(void *)&v43[*(int *)(v46 + 28)] = *(void *)&v44[*(int *)(v46 + 28)];
      swift_storeEnumTagMultiPayload();
      uint64_t v3 = v208;
      goto LABEL_93;
    case 0xAu:
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      unint64_t v53 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v54 = v53[5];
      id v55 = &v8[v54];
      id v56 = &v9[v54];
      uint64_t v57 = sub_1C151959C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      *(void *)&v8[v53[6]] = *(void *)&v9[v53[6]];
      uint64_t v58 = v53[7];
      uint64_t v59 = &v8[v58];
      uint64_t v60 = &v9[v58];
      v59[8] = v60[8];
      *(void *)uint64_t v59 = *(void *)v60;
      *(_OWORD *)&v8[v53[8]] = *(_OWORD *)&v9[v53[8]];
      goto LABEL_92;
    case 0xFu:
      uint64_t v61 = *((void *)v9 + 1);
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v61;
      v8[16] = v9[16];
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      uint64_t v62 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      long long v63 = &v8[v62];
      uint64_t v64 = &v9[v62];
      *(void *)&v8[v62] = *(void *)&v9[v62];
      uint64_t v65 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v66 = &v63[v65];
      uint64_t v67 = &v64[v65];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          char v205 = v4;
          uint64_t v103 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v159 = type metadata accessor for PuzzleStreak();
            uint64_t v160 = *(void *)(v159 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v67, 1, v159))
            {
              sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v66, v67, *(void *)(*(void *)(v161 - 8) + 64));
            }
            else
            {
              uint64_t v165 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v66, v67, v165);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v66, 0, 1, v159);
            }
            uint64_t v162 = v3;
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              uint64_t v162 = v3;
              memcpy(v66, v67, *(void *)(*(void *)(v103 - 8) + 64));
              goto LABEL_72;
            }
            uint64_t v105 = type metadata accessor for PuzzleStreak();
            uint64_t v106 = *(void *)(v105 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v67, 1, v105))
            {
              sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v66, v67, *(void *)(*(void *)(v107 - 8) + 64));
            }
            else
            {
              uint64_t v163 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v66, v67, v163);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v66, 0, 1, v105);
            }
            uint64_t v162 = v3;
          }
          swift_storeEnumTagMultiPayload();
LABEL_72:
          uint64_t v166 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v167 = *(int *)(v166 + 20);
          id v198 = v66;
          long long v168 = &v66[v167];
          long long v169 = &v67[v167];
          int v170 = swift_getEnumCaseMultiPayload();
          if (v170 == 5)
          {
            uint64_t v171 = type metadata accessor for PuzzleStreak();
            uint64_t v172 = *(void *)(v171 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v169, 1, v171))
            {
LABEL_77:
              sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v168, v169, *(void *)(*(void *)(v173 - 8) + 64));
              goto LABEL_80;
            }
          }
          else
          {
            if (v170 != 4)
            {
              memcpy(v168, v169, *(void *)(*(void *)(v103 - 8) + 64));
              goto LABEL_81;
            }
            uint64_t v171 = type metadata accessor for PuzzleStreak();
            uint64_t v172 = *(void *)(v171 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v169, 1, v171)) {
              goto LABEL_77;
            }
          }
          uint64_t v174 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v168, v169, v174);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v168, 0, 1, v171);
LABEL_80:
          swift_storeEnumTagMultiPayload();
LABEL_81:
          uint64_t v3 = v162;
          uint64_t v175 = *(int *)(v166 + 24);
          id v176 = (char *)v198 + v175;
          long long v177 = &v67[v175];
          int v178 = swift_getEnumCaseMultiPayload();
          if (v178 == 5)
          {
            uint64_t v179 = type metadata accessor for PuzzleStreak();
            uint64_t v180 = *(void *)(v179 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v177, 1, v179))
            {
LABEL_86:
              sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v176, v177, *(void *)(*(void *)(v181 - 8) + 64));
              goto LABEL_89;
            }
          }
          else
          {
            if (v178 != 4)
            {
              memcpy(v176, v177, *(void *)(*(void *)(v103 - 8) + 64));
              goto LABEL_90;
            }
            uint64_t v179 = type metadata accessor for PuzzleStreak();
            uint64_t v180 = *(void *)(v179 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48))(v177, 1, v179)) {
              goto LABEL_86;
            }
          }
          uint64_t v182 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v176, v177, v182);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v180 + 56))(v176, 0, 1, v179);
LABEL_89:
          swift_storeEnumTagMultiPayload();
LABEL_90:
          uint64_t v4 = v205;
LABEL_91:
          swift_storeEnumTagMultiPayload();
LABEL_92:
          swift_storeEnumTagMultiPayload();
LABEL_93:
          uint64_t v183 = *(int *)(v3 + 32);
          uint64_t v184 = *(int *)(v3 + 36);
          uint64_t v185 = (_OWORD *)((char *)v5 + v183);
          uint64_t v186 = (_OWORD *)((char *)v4 + v183);
          long long v187 = v186[1];
          _OWORD *v185 = *v186;
          v185[1] = v187;
          uint64_t v188 = (_OWORD *)((char *)v5 + v184);
          uint64_t v189 = (_OWORD *)((char *)v4 + v184);
          long long v190 = v189[1];
          *uint64_t v188 = *v189;
          v188[1] = v190;
          return v5;
        case 2u:
          uint64_t v100 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v101 = *((void *)v100 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v101 + 48))(v67, 1, v100))
          {
            sub_1BFECA2D8(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            memcpy(v66, v67, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            uint64_t v134 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v66, v67, v134);
            long long v135 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v66[v135[5]] = *(_OWORD *)&v67[v135[5]];
            uint64_t v136 = v135[6];
            uint64_t v137 = &v66[v136];
            uint64_t v138 = &v67[v136];
            long long v139 = *((_OWORD *)v138 + 1);
            *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
            *((_OWORD *)v137 + 1) = v139;
            *(void *)&v66[v135[7]] = *(void *)&v67[v135[7]];
            *(void *)&v66[v135[8]] = *(void *)&v67[v135[8]];
            *(void *)&v66[v100[5]] = *(void *)&v67[v100[5]];
            *(void *)&v66[v100[6]] = *(void *)&v67[v100[6]];
            *(_OWORD *)&v66[v100[7]] = *(_OWORD *)&v67[v100[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v101 + 56))(v66, 0, 1, v100);
          }
          goto LABEL_91;
        case 3u:
          uint64_t v209 = v3;
          uint64_t v108 = *((void *)v67 + 1);
          *(void *)uint64_t v66 = *(void *)v67;
          *((void *)v66 + 1) = v108;
          void v66[16] = v67[16];
          int v109 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v110 = v109[6];
          v197 = v66;
          uint64_t v111 = &v66[v110];
          long long v112 = &v67[v110];
          uint64_t v113 = type metadata accessor for PuzzleStreak();
          uint64_t v114 = *(void *)(v113 - 8);
          unint64_t v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48);
          if (v115(v112, 1, v113))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v111, v112, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            uint64_t v140 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v111, v112, v140);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
          }
          uint64_t v141 = v109[7];
          uint64_t v142 = (char *)v197 + v141;
          uint64_t v143 = &v67[v141];
          if (v115(&v67[v141], 1, v113))
          {
            sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
          }
          else
          {
            uint64_t v145 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v142, v143, v145);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v142, 0, 1, v113);
          }
          uint64_t v3 = v209;
          uint64_t v146 = v109[8];
          uint64_t v147 = (_OWORD *)((char *)v197 + v146);
          uint64_t v148 = &v67[v146];
          long long v149 = *((_OWORD *)v148 + 1);
          *uint64_t v147 = *(_OWORD *)v148;
          v147[1] = v149;
          *(_OWORD *)((char *)v147 + 25) = *(_OWORD *)(v148 + 25);
          uint64_t v150 = v109[9];
          uint64_t v151 = (_OWORD *)((char *)v197 + v150);
          uint64_t v152 = &v67[v150];
          *(_OWORD *)((char *)v151 + 25) = *(_OWORD *)(v152 + 25);
          long long v153 = *((_OWORD *)v152 + 1);
          *uint64_t v151 = *(_OWORD *)v152;
          v151[1] = v153;
          uint64_t v154 = v109[10];
          uint64_t v155 = (_OWORD *)((char *)v197 + v154);
          uint64_t v156 = &v67[v154];
          long long v157 = *((_OWORD *)v156 + 1);
          *uint64_t v155 = *(_OWORD *)v156;
          v155[1] = v157;
          *(_OWORD *)((char *)v155 + 25) = *(_OWORD *)(v156 + 25);
          goto LABEL_91;
        default:
          uint64_t v68 = type metadata accessor for PuzzleStatisticValue(0);
          int v69 = swift_getEnumCaseMultiPayload();
          if (v69 == 5)
          {
            uint64_t v70 = type metadata accessor for PuzzleStreak();
            uint64_t v71 = *(void *)(v70 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v67, 1, v70))
            {
LABEL_59:
              sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v66, v67, *(void *)(*(void *)(v158 - 8) + 64));
LABEL_68:
              swift_storeEnumTagMultiPayload();
              goto LABEL_91;
            }
          }
          else
          {
            if (v69 != 4)
            {
              memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
              goto LABEL_91;
            }
            uint64_t v70 = type metadata accessor for PuzzleStreak();
            uint64_t v71 = *(void *)(v70 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v67, 1, v70)) {
              goto LABEL_59;
            }
          }
          uint64_t v164 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v66, v67, v164);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v66, 0, 1, v70);
          goto LABEL_68;
      }
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_93;
  }
}

void *assignWithTake for FormatItemNodeLayoutContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1BFEE30A0((uint64_t)a1 + v8, type metadata accessor for FeedItem);
    uint64_t v11 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        uint64_t v12 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v13 = v12[5];
        uint64_t v14 = &v9[v13];
        uint64_t v15 = &v10[v13];
        uint64_t v16 = sub_1C151DBAC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
        uint64_t v17 = v12[7];
        uint64_t v18 = &v9[v17];
        uint64_t v19 = &v10[v17];
        v18[8] = v19[8];
        *(void *)uint64_t v18 = *(void *)v19;
        *(_OWORD *)&v9[v12[8]] = *(_OWORD *)&v10[v12[8]];
        goto LABEL_71;
      case 3u:
        long long v214 = a3;
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        v9[24] = v10[24];
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
        v9[56] = v10[56];
        uint64_t v210 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v20 = v210[10];
        uint64_t v218 = v9;
        uint64_t v21 = &v9[v20];
        uint64_t v22 = &v10[v20];
        char *v21 = v10[v20];
        v21[1] = v10[v20 + 1];
        uint64_t v23 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v24 = v23[6];
        uint64_t v25 = &v21[v24];
        uint64_t v26 = &v22[v24];
        uint64_t v27 = (int *)type metadata accessor for SharedItem();
        uint64_t v28 = *((void *)v27 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
        {
          uint64_t v29 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          uint64_t v76 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v25, v26, v76);
          v25[v27[5]] = v26[v27[5]];
          *(void *)&v25[v27[6]] = *(void *)&v26[v27[6]];
          uint64_t v77 = v27[7];
          __dstc = &v25[v77];
          int v78 = &v26[v77];
          uint64_t v79 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(__dstc, v78, v79);
          (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0, 1, v27);
        }
        v21[v23[7]] = v22[v23[7]];
        v21[v23[8]] = v22[v23[8]];
        v21[v23[9]] = v22[v23[9]];
        v21[v23[10]] = v22[v23[10]];
        a3 = v214;
        uint64_t v80 = v210[11];
        uint64_t v81 = &v218[v80];
        uint64_t v82 = &v10[v80];
        uint64_t v83 = sub_1C151D2DC();
        uint64_t v84 = *(void *)(v83 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v82, v83);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
        }
        *(_OWORD *)&v218[v210[12]] = *(_OWORD *)&v10[v210[12]];
        uint64_t v95 = v210[13];
        uint64_t v96 = *(void *)&v10[v95];
        if (v96 == 2) {
          uint64_t v96 = 2;
        }
        *(void *)&v218[v95] = v96;
        *(void *)&v218[v210[14]] = *(void *)&v10[v210[14]];
        goto LABEL_71;
      case 4u:
        long long v215 = a3;
        uint64_t v30 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v30;
        v9[16] = v10[16];
        *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
        uint64_t v31 = type metadata accessor for FeedWebEmbed();
        uint64_t v32 = *(int *)(v31 + 32);
        uint64_t v33 = &v9[v32];
        __dstb = &v10[v32];
        uint64_t v34 = sub_1C1515FDC();
        uint64_t v35 = v9;
        uint64_t v36 = *(void *)(v34 - 8);
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
        uint64_t v38 = v33;
        uint64_t v39 = v34;
        v37(v38, __dstb, v34);
        uint64_t v211 = (int *)v31;
        uint64_t v40 = *(int *)(v31 + 36);
        uint64_t v41 = v39;
        uint64_t v219 = v35;
        uint64_t v42 = &v35[v40];
        uint64_t v43 = &v10[v40];
        uint64_t v205 = v41;
        uint64_t v204 = v37;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v10[v40], 1, v41))
        {
          sub_1BFECA2D8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          v37(v42, v43, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v42, 0, 1, v41);
        }
        uint64_t v86 = v219;
        uint64_t v87 = v211;
        *(void *)&v219[v211[10]] = *(void *)&v10[v211[10]];
        *(void *)&v219[v211[11]] = *(void *)&v10[v211[11]];
        uint64_t v88 = v211[12];
        uint64_t v89 = &v219[v88];
        uint64_t v90 = &v10[v88];
        uint64_t v91 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v92 = *((void *)v91 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v92 + 48))(v90, 1, v91))
        {
          sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          uint64_t v203 = v92;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
          *((void *)v89 + 2) = *((void *)v90 + 2);
          v89[24] = v90[24];
          *((void *)v89 + 4) = *((void *)v90 + 4);
          *(_OWORD *)(v89 + 40) = *(_OWORD *)(v90 + 40);
          v89[56] = v90[56];
          uint64_t v97 = v91[10];
          char v98 = &v89[v97];
          uint64_t v99 = &v90[v97];
          *char v98 = v90[v97];
          v98[1] = v90[v97 + 1];
          v202 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v100 = v202[6];
          __dst = &v98[v100];
          uint64_t v101 = &v99[v100];
          uint64_t v102 = (int *)type metadata accessor for SharedItem();
          uint64_t v201 = *((void *)v102 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v201 + 48))(v101, 1, v102))
          {
            uint64_t v103 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v101, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            uint64_t v121 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(__dst, v101, v121);
            __dst[v102[5]] = v101[v102[5]];
            *(void *)&__dst[v102[6]] = *(void *)&v101[v102[6]];
            v204(&__dst[v102[7]], &v101[v102[7]], v205);
            (*(void (**)(char *, void, uint64_t, int *))(v201 + 56))(__dst, 0, 1, v102);
          }
          uint64_t v86 = v219;
          v98[v202[7]] = v99[v202[7]];
          v98[v202[8]] = v99[v202[8]];
          v98[v202[9]] = v99[v202[9]];
          v98[v202[10]] = v99[v202[10]];
          uint64_t v122 = v91[11];
          __dsta = &v89[v122];
          uint64_t v123 = &v90[v122];
          uint64_t v124 = sub_1C151D2DC();
          uint64_t v125 = *(void *)(v124 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124))
          {
            sub_1BFECA2D8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(__dsta, v123, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v125 + 32))(__dsta, v123, v124);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(__dsta, 0, 1, v124);
          }
          uint64_t v87 = v211;
          *(_OWORD *)&v89[v91[12]] = *(_OWORD *)&v90[v91[12]];
          uint64_t v127 = v91[13];
          uint64_t v128 = *(void *)&v90[v127];
          if (v128 == 2) {
            uint64_t v128 = 2;
          }
          *(void *)&v89[v127] = v128;
          *(void *)&v89[v91[14]] = *(void *)&v90[v91[14]];
          (*(void (**)(char *, void, uint64_t, int *))(v203 + 56))(v89, 0, 1, v91);
        }
        a3 = v215;
        uint64_t v129 = v87[13];
        uint64_t v130 = &v86[v129];
        uint64_t v131 = &v10[v129];
        uint64_t v132 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v133 = *(void *)(v132 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
        {
          sub_1BFECA2D8(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
            uint64_t v135 = type metadata accessor for GenericDataVisualization();
            v204(&v130[*(int *)(v135 + 20)], &v131[*(int *)(v135 + 20)], v205);
            uint64_t v136 = *(int *)(v135 + 24);
            uint64_t v87 = v211;
            *(void *)&v130[v136] = *(void *)&v131[v136];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v130, v131, *(void *)(v133 + 64));
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        v86[v87[14]] = v10[v87[14]];
        goto LABEL_71;
      case 8u:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        uint64_t v45 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v46 = &v9[v45];
        uint64_t v47 = &v10[v45];
        long long v48 = *(_OWORD *)&v10[v45 + 16];
        *(_OWORD *)uint64_t v46 = *(_OWORD *)&v10[v45];
        *((_OWORD *)v46 + 1) = v48;
        uint64_t v49 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v50 = *(int *)(v49 + 24);
        uint64_t v51 = &v46[v50];
        uint64_t v52 = &v47[v50];
        uint64_t v53 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v54 = *(void *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
        {
          sub_1BFECA2D8(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          uint64_t v94 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v51, v52, v94);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        }
        *(void *)&v46[*(int *)(v49 + 28)] = *(void *)&v47[*(int *)(v49 + 28)];
        goto LABEL_71;
      case 0xAu:
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        id v56 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v57 = v56[5];
        uint64_t v58 = &v9[v57];
        uint64_t v59 = &v10[v57];
        uint64_t v60 = sub_1C151959C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
        *(void *)&v9[v56[6]] = *(void *)&v10[v56[6]];
        uint64_t v61 = v56[7];
        uint64_t v62 = &v9[v61];
        long long v63 = &v10[v61];
        v62[8] = v63[8];
        *(void *)uint64_t v62 = *(void *)v63;
        *(_OWORD *)&v9[v56[8]] = *(_OWORD *)&v10[v56[8]];
        goto LABEL_71;
      case 0xFu:
        uint64_t v64 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v64;
        v9[16] = v10[16];
        *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
        uint64_t v65 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        uint64_t v66 = &v9[v65];
        uint64_t v67 = &v10[v65];
        *(void *)uint64_t v66 = *(void *)&v10[v65];
        uint64_t v68 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        int v69 = &v66[v68];
        uint64_t v70 = &v67[v68];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v107 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v216 = v107;
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v161 = type metadata accessor for PuzzleStreak();
              uint64_t v162 = *(void *)(v161 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v70, 1, v161))
              {
                sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v69, v70, *(void *)(*(void *)(v163 - 8) + 64));
              }
              else
              {
                uint64_t v176 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v69, v70, v176);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v69, 0, 1, v161);
              }
              uint64_t v165 = v107;
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                memcpy(v69, v70, *(void *)(*(void *)(v107 - 8) + 64));
                goto LABEL_76;
              }
              uint64_t v109 = type metadata accessor for PuzzleStreak();
              uint64_t v110 = *(void *)(v109 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v70, 1, v109))
              {
                sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v69, v70, *(void *)(*(void *)(v111 - 8) + 64));
              }
              else
              {
                uint64_t v164 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v69, v70, v164);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v69, 0, 1, v109);
              }
              uint64_t v165 = v107;
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v107 = v165;
LABEL_76:
            uint64_t v177 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v178 = *(int *)(v177 + 20);
            id v213 = v69;
            uint64_t v179 = &v69[v178];
            uint64_t v180 = &v70[v178];
            int v181 = swift_getEnumCaseMultiPayload();
            if (v181 == 5)
            {
              uint64_t v186 = a3;
              uint64_t v187 = type metadata accessor for PuzzleStreak();
              uint64_t v188 = *(void *)(v187 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v180, 1, v187))
              {
                sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v179, v180, *(void *)(*(void *)(v189 - 8) + 64));
              }
              else
              {
                uint64_t v192 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 32))(v179, v180, v192);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v179, 0, 1, v187);
              }
              a3 = v186;
            }
            else
            {
              if (v181 != 4)
              {
                memcpy(v179, v180, *(void *)(*(void *)(v107 - 8) + 64));
                long long v190 = v213;
                goto LABEL_88;
              }
              uint64_t v182 = a3;
              uint64_t v183 = type metadata accessor for PuzzleStreak();
              uint64_t v184 = *(void *)(v183 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48))(v180, 1, v183))
              {
                sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v179, v180, *(void *)(*(void *)(v185 - 8) + 64));
              }
              else
              {
                uint64_t v191 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v179, v180, v191);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v179, 0, 1, v183);
              }
              a3 = v182;
            }
            swift_storeEnumTagMultiPayload();
            long long v190 = v213;
LABEL_88:
            uint64_t v193 = *(int *)(v177 + 24);
            uint64_t v194 = (char *)v190 + v193;
            uint64_t v195 = &v70[v193];
            int v196 = swift_getEnumCaseMultiPayload();
            if (v196 == 5)
            {
              uint64_t v197 = type metadata accessor for PuzzleStreak();
              uint64_t v198 = *(void *)(v197 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48))(v195, 1, v197)) {
                goto LABEL_91;
              }
            }
            else
            {
              if (v196 != 4)
              {
                memcpy(v194, v195, *(void *)(*(void *)(v216 - 8) + 64));
                goto LABEL_70;
              }
              uint64_t v197 = type metadata accessor for PuzzleStreak();
              uint64_t v198 = *(void *)(v197 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48))(v195, 1, v197))
              {
LABEL_91:
                sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v194, v195, *(void *)(*(void *)(v199 - 8) + 64));
                goto LABEL_69;
              }
            }
            uint64_t v200 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v194, v195, v200);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v198 + 56))(v194, 0, 1, v197);
            goto LABEL_69;
          case 2u:
            uint64_t v104 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v105 = *((void *)v104 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v105 + 48))(v70, 1, v104))
            {
              sub_1BFECA2D8(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              memcpy(v69, v70, *(void *)(*(void *)(v106 - 8) + 64));
            }
            else
            {
              uint64_t v137 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v69, v70, v137);
              uint64_t v138 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)&v69[v138[5]] = *(_OWORD *)&v70[v138[5]];
              uint64_t v139 = v138[6];
              uint64_t v140 = &v69[v139];
              uint64_t v141 = &v70[v139];
              long long v142 = *((_OWORD *)v141 + 1);
              *(_OWORD *)uint64_t v140 = *(_OWORD *)v141;
              *((_OWORD *)v140 + 1) = v142;
              *(void *)&v69[v138[7]] = *(void *)&v70[v138[7]];
              *(void *)&v69[v138[8]] = *(void *)&v70[v138[8]];
              *(void *)&v69[v104[5]] = *(void *)&v70[v104[5]];
              *(void *)&v69[v104[6]] = *(void *)&v70[v104[6]];
              *(_OWORD *)&v69[v104[7]] = *(_OWORD *)&v70[v104[7]];
              (*(void (**)(char *, void, uint64_t, int *))(v105 + 56))(v69, 0, 1, v104);
            }
            goto LABEL_70;
          case 3u:
            uint64_t v217 = a3;
            uint64_t v112 = *((void *)v70 + 1);
            *(void *)int v69 = *(void *)v70;
            *((void *)v69 + 1) = v112;
            void v69[16] = v70[16];
            uint64_t v113 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v114 = v113[6];
            id v212 = v69;
            unint64_t v115 = &v69[v114];
            uint64_t v116 = &v70[v114];
            uint64_t v117 = type metadata accessor for PuzzleStreak();
            uint64_t v118 = *(void *)(v117 - 8);
            uint64_t v119 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
            if (v119(v116, 1, v117))
            {
              sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v115, v116, *(void *)(*(void *)(v120 - 8) + 64));
            }
            else
            {
              uint64_t v143 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v115, v116, v143);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
            }
            uint64_t v144 = v113[7];
            uint64_t v145 = (char *)v212 + v144;
            uint64_t v146 = &v70[v144];
            if (v119(&v70[v144], 1, v117))
            {
              sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
            }
            else
            {
              uint64_t v148 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v145, v146, v148);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v145, 0, 1, v117);
            }
            a3 = v217;
            uint64_t v149 = v113[8];
            uint64_t v150 = (_OWORD *)((char *)v212 + v149);
            uint64_t v151 = &v70[v149];
            long long v152 = *((_OWORD *)v151 + 1);
            *uint64_t v150 = *(_OWORD *)v151;
            v150[1] = v152;
            *(_OWORD *)((char *)v150 + 25) = *(_OWORD *)(v151 + 25);
            uint64_t v153 = v113[9];
            uint64_t v154 = (_OWORD *)((char *)v212 + v153);
            uint64_t v155 = &v70[v153];
            *(_OWORD *)((char *)v154 + 25) = *(_OWORD *)(v155 + 25);
            long long v156 = *((_OWORD *)v155 + 1);
            *uint64_t v154 = *(_OWORD *)v155;
            v154[1] = v156;
            uint64_t v157 = v113[10];
            uint64_t v158 = (_OWORD *)((char *)v212 + v157);
            uint64_t v159 = &v70[v157];
            long long v160 = *((_OWORD *)v159 + 1);
            *uint64_t v158 = *(_OWORD *)v159;
            v158[1] = v160;
            *(_OWORD *)((char *)v158 + 25) = *(_OWORD *)(v159 + 25);
            goto LABEL_70;
          default:
            uint64_t v71 = type metadata accessor for PuzzleStatisticValue(0);
            int v72 = swift_getEnumCaseMultiPayload();
            if (v72 == 5)
            {
              uint64_t v73 = type metadata accessor for PuzzleStreak();
              uint64_t v74 = *(void *)(v73 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v70, 1, v73)) {
                goto LABEL_16;
              }
            }
            else
            {
              if (v72 != 4)
              {
                memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
                goto LABEL_70;
              }
              uint64_t v73 = type metadata accessor for PuzzleStreak();
              uint64_t v74 = *(void *)(v73 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v70, 1, v73))
              {
LABEL_16:
                sub_1BFECA2D8(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v69, v70, *(void *)(*(void *)(v75 - 8) + 64));
                goto LABEL_69;
              }
            }
            uint64_t v166 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v69, v70, v166);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v69, 0, 1, v73);
LABEL_69:
            swift_storeEnumTagMultiPayload();
LABEL_70:
            swift_storeEnumTagMultiPayload();
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  uint64_t v167 = a3[8];
  uint64_t v168 = a3[9];
  long long v169 = (_OWORD *)((char *)a1 + v167);
  int v170 = (_OWORD *)((char *)a2 + v167);
  long long v171 = v170[1];
  *long long v169 = *v170;
  v169[1] = v171;
  uint64_t v172 = (_OWORD *)((char *)a1 + v168);
  uint64_t v173 = (_OWORD *)((char *)a2 + v168);
  long long v174 = v173[1];
  *uint64_t v172 = *v173;
  v172[1] = v174;
  return a1;
}

uint64_t sub_1C0BC148C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedItem(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

void *sub_1C0BC153C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *Swift::String result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FeedItem(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0BC15E8(unsigned __int8 *a1, char *a2)
{
  return sub_1C1486DE4(*a1, *a2);
}

uint64_t sub_1C0BC15F4()
{
  return sub_1C015E660();
}

uint64_t sub_1C0BC15FC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BC16E4()
{
  return sub_1C044EC10();
}

uint64_t sub_1C0BC16EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0BC3990();
  *a1 = result;
  return result;
}

void sub_1C0BC171C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000657275;
  uint64_t v3 = 0x74617265706D6574;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEF65727574617265;
      uint64_t v3 = 0x706D655468676968;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "lowTemperature");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000014;
      *(void *)(a1 + 8) = 0x80000001C16001A0;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C0BC17DC()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0BC183C()
{
  return sub_1C151EAEC();
}

void sub_1C0BC188C(void *a1@<X8>)
{
  *a1 = &unk_1F1B6AD20;
}

uint64_t sub_1C0BC189C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWeatherBinding.Temperature.init(from:)(a1, a2);
}

uint64_t sub_1C0BC18B4(void *a1)
{
  return FormatWeatherBinding.Temperature.encode(to:)(a1);
}

uint64_t sub_1C0BC18D0@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v229 = a4;
  uint64_t v232 = a2;
  int v230 = a1;
  uint64_t v231 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1F4188790](v231);
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v227 = (char *)&v220 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v226 = (uint64_t)&v220 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v220 - v13;
  MEMORY[0x1F4188790](v15);
  MEMORY[0x1F4188790](v16);
  MEMORY[0x1F4188790]((char *)&v220 - v17);
  MEMORY[0x1F4188790](v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v220 = (uint64_t)&v220 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v220 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v220 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v220 - v28;
  MEMORY[0x1F4188790](v30);
  MEMORY[0x1F4188790](v31);
  MEMORY[0x1F4188790](v32);
  id v221 = (char *)&v220 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v224 = (uint64_t)&v220 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v220 - v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v220 - v40;
  MEMORY[0x1F4188790](v42);
  id v223 = (char *)&v220 - v43;
  MEMORY[0x1F4188790](v44);
  MEMORY[0x1F4188790](v45);
  uint64_t v222 = (char *)&v220 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v225 = (uint64_t)&v220 - v48;
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v220 - v50;
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v220 - v53;
  MEMORY[0x1F4188790](v55);
  uint64_t v68 = (char *)&v220 - v67;
  switch(*v230)
  {
    case 1:
      uint64_t v225 = v62;
      uint64_t v226 = v58;
      uint64_t v227 = v29;
      sub_1C0605BA8(0);
      uint64_t v81 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v82 = *(void *)(v81 + 72);
      unint64_t v83 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
      uint64_t v84 = (unsigned char *)swift_allocObject();
      *((_OWORD *)v84 + 1) = xmmword_1C152FC70;
      int v230 = v84;
      uint64_t v85 = &v84[v83];
      sub_1C0373C80(v232, (uint64_t)v41);
      uint64_t v86 = v231;
      uint64_t v87 = *(int *)(v231 + 36);
      uint64_t v88 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v89 = (uint64_t)&v41[v87 + *(int *)(v88 + 20)];
      sub_1C01677F4(a3);
      uint64_t v90 = v228;
      uint64_t v91 = sub_1C0A75B3C(v89, a3, 1, 0, 0);
      if (v90)
      {

        uint64_t v93 = 0;
        uint64_t v94 = 0;
      }
      else
      {
        uint64_t v93 = (uint64_t)v91;
        uint64_t v94 = v92;
      }
      sub_1C0433600(0xD000000000000019, 0x80000001C1619B90, v93, v94, v85);
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v41);
      sub_1C0373C80(v232, (uint64_t)v38);
      uint64_t v124 = (uint64_t)&v38[*(int *)(v86 + 36) + (uint64_t)*(int *)(v88 + 20)];
      sub_1C01677F4(a3);
      uint64_t v133 = sub_1C0A75B3C(v124, a3, 1, 0, 64);
      sub_1C0433600(0xD000000000000024, 0x80000001C1619BB0, (uint64_t)v133, v134, (void *)((char *)v85 + v82));
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v38);
      uint64_t v135 = v224;
      sub_1C0373C80(v232, v224);
      uint64_t v136 = v135 + *(int *)(v86 + 36) + (uint64_t)*(int *)(v88 + 20);
      sub_1C01677F4(a3);
      uint64_t v148 = sub_1C0A75B3C(v136, a3, 0, 0, 64);
      uint64_t v149 = (uint64_t)v221;
      sub_1C0433600(0xD000000000000024, 0x80000001C1619BE0, (uint64_t)v148, v150, (void *)((char *)v85 + 2 * v82));
      sub_1C0167828(a3);
      sub_1C0373CE4(v224);
      sub_1C0373C80(v232, v149);
      uint64_t v151 = v149 + *(int *)(v86 + 36) + (uint64_t)*(int *)(v88 + 20);
      sub_1C01677F4(a3);
      uint64_t v164 = sub_1C0A75B3C(v151, a3, 1, 0, 128);
      sub_1C0433600(0xD000000000000027, 0x80000001C1619C10, (uint64_t)v164, v165, (void *)((char *)v85 + 3 * v82));
      sub_1C0167828(a3);
      sub_1C0373CE4(v149);
      uint64_t v166 = v225;
      sub_1C0373C80(v232, v225);
      uint64_t v167 = v166 + *(int *)(v86 + 36) + (uint64_t)*(int *)(v88 + 20);
      sub_1C01677F4(a3);
      uint64_t v180 = sub_1C0A75B3C(v167, a3, 0, 0, 128);
      sub_1C0433600(0xD000000000000027, 0x80000001C1619C40, (uint64_t)v180, v181, (void *)((char *)v85 + 4 * v82));
      sub_1C0167828(a3);
      sub_1C0373CE4(v225);
      uint64_t v182 = v226;
      sub_1C0373C80(v232, v226);
      uint64_t v183 = v182 + *(int *)(v86 + 36) + (uint64_t)*(int *)(v88 + 20);
      sub_1C01677F4(a3);
      int v196 = sub_1C0A75B3C(v183, a3, 1, 0, 192);
      sub_1C0433600(0xD000000000000023, 0x80000001C1619C70, (uint64_t)v196, v197, (void *)((char *)v85 + 5 * v82));
      sub_1C0167828(a3);
      sub_1C0373CE4(v226);
      uint64_t v198 = (uint64_t)v227;
      sub_1C0373C80(v232, (uint64_t)v227);
      uint64_t v199 = v198 + *(int *)(v86 + 36) + (uint64_t)*(int *)(v88 + 20);
      sub_1C01677F4(a3);
      uint64_t v209 = sub_1C0A75B3C(v199, a3, 0, 0, 192);
      uint64_t v211 = v210;
      id v212 = v229;
      uint64_t v111 = v230;
      id v213 = (void *)((char *)v85 + 6 * v82);
      uint64_t v214 = 0xD000000000000023;
      uint64_t v215 = 0x80000001C1619CA0;
      goto LABEL_18;
    case 2:
      uint64_t v224 = v63;
      uint64_t v225 = v59;
      uint64_t v226 = v56;
      uint64_t v227 = (unsigned char *)v65;
      sub_1C0605BA8(0);
      uint64_t v95 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v96 = *(void *)(v95 + 72);
      unint64_t v97 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
      char v98 = (unsigned char *)swift_allocObject();
      *((_OWORD *)v98 + 1) = xmmword_1C152FC70;
      uint64_t v99 = &v98[v97];
      sub_1C0373C80(v232, (uint64_t)v26);
      uint64_t v100 = *(int *)(v231 + 36);
      uint64_t v101 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v102 = (uint64_t)&v26[v100 + *(int *)(v101 + 24)];
      sub_1C01677F4(a3);
      uint64_t v103 = v228;
      uint64_t v104 = sub_1C0A75B3C(v102, a3, 1, 0, 0);
      int v230 = v98;
      if (v103)
      {

        uint64_t v106 = 0;
        uint64_t v107 = 0;
      }
      else
      {
        uint64_t v106 = (uint64_t)v104;
        uint64_t v107 = v105;
      }
      sub_1C0433600(0xD000000000000018, 0x80000001C1619A50, v106, v107, v99);
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v26);
      sub_1C0373C80(v232, (uint64_t)v23);
      uint64_t v125 = (uint64_t)&v23[*(int *)(v231 + 36) + (uint64_t)*(int *)(v101 + 24)];
      sub_1C01677F4(a3);
      uint64_t v137 = sub_1C0A75B3C(v125, a3, 1, 0, 64);
      sub_1C0433600(0xD000000000000023, 0x80000001C1619A70, (uint64_t)v137, v138, (void *)((char *)v99 + v96));
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v23);
      uint64_t v139 = v220;
      sub_1C0373C80(v232, v220);
      uint64_t v140 = v139 + *(int *)(v231 + 36) + (uint64_t)*(int *)(v101 + 24);
      sub_1C01677F4(a3);
      long long v152 = sub_1C0A75B3C(v140, a3, 0, 0, 64);
      sub_1C0433600(0xD000000000000023, 0x80000001C1619AA0, (uint64_t)v152, v153, (void *)((char *)v99 + 2 * v96));
      sub_1C0167828(a3);
      sub_1C0373CE4(v139);
      uint64_t v154 = v224;
      sub_1C0373C80(v232, v224);
      uint64_t v155 = v154 + *(int *)(v231 + 36) + (uint64_t)*(int *)(v101 + 24);
      sub_1C01677F4(a3);
      uint64_t v168 = sub_1C0A75B3C(v155, a3, 1, 0, 128);
      sub_1C0433600(0xD000000000000026, 0x80000001C1619AD0, (uint64_t)v168, v169, (void *)((char *)v99 + 3 * v96));
      sub_1C0167828(a3);
      sub_1C0373CE4(v224);
      uint64_t v170 = v225;
      sub_1C0373C80(v232, v225);
      uint64_t v171 = v170 + *(int *)(v231 + 36) + (uint64_t)*(int *)(v101 + 24);
      sub_1C01677F4(a3);
      uint64_t v184 = sub_1C0A75B3C(v171, a3, 0, 0, 128);
      sub_1C0433600(0xD000000000000026, 0x80000001C1619B00, (uint64_t)v184, v185, (void *)((char *)v99 + 4 * v96));
      sub_1C0167828(a3);
      sub_1C0373CE4(v225);
      uint64_t v186 = v226;
      sub_1C0373C80(v232, v226);
      uint64_t v187 = v231;
      uint64_t v188 = v186 + *(int *)(v231 + 36) + (uint64_t)*(int *)(v101 + 24);
      sub_1C01677F4(a3);
      uint64_t v200 = sub_1C0A75B3C(v188, a3, 1, 0, 192);
      uint64_t v111 = v230;
      sub_1C0433600(0xD000000000000022, 0x80000001C1619B30, (uint64_t)v200, v201, (void *)((char *)v99 + 5 * v96));
      sub_1C0167828(a3);
      sub_1C0373CE4(v226);
      uint64_t v202 = (uint64_t)v227;
      sub_1C0373C80(v232, (uint64_t)v227);
      uint64_t v203 = v202 + *(int *)(v187 + 36) + (uint64_t)*(int *)(v101 + 24);
      sub_1C01677F4(a3);
      uint64_t v209 = sub_1C0A75B3C(v203, a3, 0, 0, 192);
      uint64_t v211 = v216;
      id v212 = v229;
      id v213 = (void *)((char *)v99 + 6 * v96);
      uint64_t v215 = 0x80000001C1619B60;
      uint64_t v214 = 0xD000000000000022;
LABEL_18:
      sub_1C0433600(v214, v215, (uint64_t)v209, v211, v213);
      uint64_t v144 = v227;
      goto LABEL_20;
    case 3:
      id v223 = (unsigned char *)v60;
      uint64_t v224 = v57;
      uint64_t v225 = v66;
      int v230 = v64;
      sub_1C0605BA8(0);
      uint64_t v108 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v109 = *(void *)(v108 + 72);
      unint64_t v110 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
      uint64_t v111 = (unsigned char *)swift_allocObject();
      *((_OWORD *)v111 + 1) = xmmword_1C152FC70;
      uint64_t v112 = &v111[v110];
      sub_1C0373C80(v232, (uint64_t)v14);
      uint64_t v113 = v231;
      uint64_t v114 = *(int *)(v231 + 36);
      uint64_t v115 = type metadata accessor for FeedWeather.Temperature(0);
      uint64_t v116 = (uint64_t)&v14[v114 + *(int *)(v115 + 28)];
      sub_1C01677F4(a3);
      uint64_t v117 = v228;
      uint64_t v118 = sub_1C0A75B3C(v116, a3, 1, 0, 0);
      if (v117)
      {

        uint64_t v120 = 0;
        uint64_t v121 = 0;
      }
      else
      {
        uint64_t v120 = (uint64_t)v118;
        uint64_t v121 = v119;
      }
      sub_1C0433600(0xD00000000000001FLL, 0x80000001C1619910, v120, v121, v112);
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v14);
      uint64_t v126 = v226;
      sub_1C0373C80(v232, v226);
      uint64_t v127 = v126 + *(int *)(v113 + 36) + (uint64_t)*(int *)(v115 + 28);
      sub_1C01677F4(a3);
      uint64_t v128 = sub_1C0A75B3C(v127, a3, 1, 0, 64);
      sub_1C0433600(0xD00000000000002ALL, 0x80000001C1619930, (uint64_t)v128, v141, (void *)((char *)v112 + v109));
      sub_1C0167828(a3);
      sub_1C0373CE4(v226);
      uint64_t v142 = (uint64_t)v227;
      sub_1C0373C80(v232, (uint64_t)v227);
      uint64_t v143 = v142 + *(int *)(v113 + 36) + (uint64_t)*(int *)(v115 + 28);
      sub_1C01677F4(a3);
      long long v156 = sub_1C0A75B3C(v143, a3, 0, 0, 64);
      sub_1C0433600(0xD00000000000002ALL, 0x80000001C1619960, (uint64_t)v156, v157, (void *)((char *)v112 + 2 * v109));
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v227);
      uint64_t v158 = (uint64_t)v223;
      sub_1C0373C80(v232, (uint64_t)v223);
      uint64_t v159 = v158 + *(int *)(v113 + 36) + (uint64_t)*(int *)(v115 + 28);
      sub_1C01677F4(a3);
      uint64_t v172 = sub_1C0A75B3C(v159, a3, 1, 0, 128);
      sub_1C0433600(0xD00000000000002DLL, 0x80000001C1619990, (uint64_t)v172, v173, (void *)((char *)v112 + 3 * v109));
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v223);
      uint64_t v174 = v224;
      sub_1C0373C80(v232, v224);
      uint64_t v175 = v174 + *(int *)(v113 + 36) + (uint64_t)*(int *)(v115 + 28);
      sub_1C01677F4(a3);
      uint64_t v189 = sub_1C0A75B3C(v175, a3, 0, 0, 128);
      sub_1C0433600(0xD00000000000002DLL, 0x80000001C16199C0, (uint64_t)v189, v190, (void *)((char *)v112 + 4 * v109));
      sub_1C0167828(a3);
      sub_1C0373CE4(v224);
      uint64_t v191 = v225;
      sub_1C0373C80(v232, v225);
      uint64_t v192 = v191 + *(int *)(v113 + 36) + (uint64_t)*(int *)(v115 + 28);
      sub_1C01677F4(a3);
      uint64_t v204 = sub_1C0A75B3C(v192, a3, 1, 0, 192);
      sub_1C0433600(0xD000000000000029, 0x80000001C16199F0, (uint64_t)v204, v205, (void *)((char *)v112 + 5 * v109));
      sub_1C0167828(a3);
      sub_1C0373CE4(v225);
      uint64_t v206 = v230;
      sub_1C0373C80(v232, (uint64_t)v230);
      uint64_t v207 = (uint64_t)&v206[*(int *)(v113 + 36) + (uint64_t)*(int *)(v115 + 28)];
      sub_1C01677F4(a3);
      uint64_t v217 = sub_1C0A75B3C(v207, a3, 0, 0, 192);
      sub_1C0433600(0xD000000000000029, 0x80000001C1619A20, (uint64_t)v217, v218, (void *)((char *)v112 + 6 * v109));
      uint64_t v144 = v230;
      goto LABEL_19;
    default:
      uint64_t v69 = v61;
      sub_1C0605BA8(0);
      uint64_t v70 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
      uint64_t v71 = *(void *)(v70 + 72);
      unint64_t v72 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      uint64_t v73 = (unsigned char *)swift_allocObject();
      *((_OWORD *)v73 + 1) = xmmword_1C152FC70;
      int v230 = v73;
      uint64_t v74 = &v73[v72];
      sub_1C0373C80(v232, (uint64_t)v68);
      uint64_t v75 = (uint64_t)&v68[*(int *)(v231 + 36)];
      sub_1C01677F4(a3);
      uint64_t v76 = v228;
      uint64_t v77 = sub_1C0A75B3C(v75, a3, 1, 0, 0);
      if (v76)
      {

        uint64_t v79 = 0;
        uint64_t v80 = 0;
      }
      else
      {
        uint64_t v79 = (uint64_t)v77;
        uint64_t v80 = v78;
      }
      sub_1C0433600(0xD000000000000014, 0x80000001C1619CD0, v79, v80, v74);
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v68);
      sub_1C0373C80(v232, (uint64_t)v54);
      uint64_t v122 = v231;
      uint64_t v123 = (uint64_t)&v54[*(int *)(v231 + 36)];
      sub_1C01677F4(a3);
      uint64_t v129 = sub_1C0A75B3C(v123, a3, 1, 0, 64);
      sub_1C0433600(0xD00000000000001FLL, 0x80000001C1619CF0, (uint64_t)v129, v130, (void *)((char *)v74 + v71));
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v54);
      sub_1C0373C80(v232, (uint64_t)v51);
      uint64_t v131 = (uint64_t)&v51[*(int *)(v122 + 36)];
      sub_1C01677F4(a3);
      uint64_t v132 = sub_1C0A75B3C(v131, a3, 0, 0, 64);
      uint64_t v144 = v223;
      sub_1C0433600(0xD00000000000001FLL, 0x80000001C1619D10, (uint64_t)v132, v145, (void *)((char *)v74 + 2 * v71));
      sub_1C0167828(a3);
      sub_1C0373CE4((uint64_t)v51);
      uint64_t v146 = v225;
      sub_1C0373C80(v232, v225);
      uint64_t v147 = v146 + *(int *)(v122 + 36);
      sub_1C01677F4(a3);
      long long v160 = sub_1C0A75B3C(v147, a3, 1, 0, 128);
      uint64_t v161 = (uint64_t)v222;
      sub_1C0433600(0xD000000000000022, 0x80000001C1619D30, (uint64_t)v160, v162, (void *)((char *)v74 + 3 * v71));
      sub_1C0167828(a3);
      sub_1C0373CE4(v225);
      sub_1C0373C80(v232, v161);
      uint64_t v163 = v161 + *(int *)(v122 + 36);
      sub_1C01677F4(a3);
      uint64_t v176 = sub_1C0A75B3C(v163, a3, 0, 0, 128);
      sub_1C0433600(0xD000000000000022, 0x80000001C1619D60, (uint64_t)v176, v177, (void *)((char *)v74 + 4 * v71));
      sub_1C0167828(a3);
      sub_1C0373CE4(v161);
      sub_1C0373C80(v232, v69);
      uint64_t v178 = v69 + *(int *)(v122 + 36);
      sub_1C01677F4(a3);
      uint64_t v179 = sub_1C0A75B3C(v178, a3, 1, 0, 192);
      sub_1C0433600(0xD00000000000001ELL, 0x80000001C1619D90, (uint64_t)v179, v193, (void *)((char *)v74 + 5 * v71));
      sub_1C0167828(a3);
      sub_1C0373CE4(v69);
      sub_1C0373C80(v232, (uint64_t)v144);
      uint64_t v194 = (uint64_t)&v144[*(int *)(v122 + 36)];
      sub_1C01677F4(a3);
      uint64_t v195 = sub_1C0A75B3C(v194, a3, 0, 0, 192);
      uint64_t v111 = v230;
      sub_1C0433600(0xD00000000000001ELL, 0x80000001C1619DB0, (uint64_t)v195, v208, (void *)((char *)v74 + 6 * v71));
LABEL_19:
      id v212 = v229;
LABEL_20:
      sub_1C0167828(a3);
      uint64_t result = sub_1C0373CE4((uint64_t)v144);
      void *v212 = v111;
      return result;
  }
}

BOOL _s8NewsFeed20FormatWeatherBindingV11TemperatureO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 16);
  switch((v4 >> 4) & 3)
  {
    case 1u:
      if ((v7 & 0x30) != 0x10) {
        goto LABEL_10;
      }
      goto LABEL_5;
    case 2u:
      if ((v7 & 0x30) != 0x20) {
        goto LABEL_10;
      }
      goto LABEL_5;
    case 3u:
      if ((~v7 & 0x30) != 0) {
        goto LABEL_10;
      }
LABEL_5:
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = v2;
      char v15 = v4 & 0xCF;
      uint64_t v10 = v6;
      uint64_t v11 = v5;
      char v12 = v7 & 0xCF;
      goto LABEL_6;
    default:
      if ((v7 & 0x30) != 0)
      {
LABEL_10:
        sub_1C0BC33F0(*(void *)a1, v2, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
        sub_1C0BC33F0(v6, v5, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
        sub_1C0BC33F0(v3, v2, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
        sub_1C0BC33F0(v6, v5, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
        return 0;
      }
      else
      {
        uint64_t v13 = *(void *)a1;
        uint64_t v14 = v2;
        char v15 = v4;
        uint64_t v10 = v6;
        uint64_t v11 = v5;
        char v12 = v7;
LABEL_6:
        sub_1C0BC33F0(v6, v5, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
        sub_1C0BC33F0(v3, v2, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
        sub_1C0BC33F0(v3, v2, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
        sub_1C0BC33F0(v6, v5, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
        BOOL v8 = _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0((uint64_t)&v13, (uint64_t)&v10);
        sub_1C0BC33F0(v3, v2, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
        sub_1C0BC33F0(v6, v5, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
        sub_1C0BC33F0(v6, v5, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
        sub_1C0BC33F0(v3, v2, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
      }
      return v8;
  }
}

unint64_t sub_1C0BC32AC(uint64_t a1)
{
  unint64_t result = sub_1C0BC32D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BC32D4()
{
  unint64_t result = qword_1EA1A46C0;
  if (!qword_1EA1A46C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A46C0);
  }
  return result;
}

unint64_t sub_1C0BC3328(void *a1)
{
  a1[1] = sub_1C088A48C();
  a1[2] = sub_1C08FA704();
  unint64_t result = sub_1C0BC3360();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BC3360()
{
  unint64_t result = qword_1EA1A46C8;
  if (!qword_1EA1A46C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A46C8);
  }
  return result;
}

uint64_t _s11TemperatureOwxx(uint64_t a1)
{
  return sub_1C0BC33F0(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
}

uint64_t sub_1C0BC33F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  switch((a3 >> 4) & 3)
  {
    case 1u:
    case 2u:
    case 3u:
      a3 = a3 & 0xFFFFFFCF;
      break;
    default:
      return a4(a1, a2, a3);
  }
  return a4(a1, a2, a3);
}

uint64_t _s11TemperatureOwCP_1(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1C0BC33F0(*(void *)a2, v4, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11TemperatureOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1C0BC33F0(*(void *)a2, v4, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0223FA8);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0BC33F0(v6, v7, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
  return a1;
}

uint64_t _s11TemperatureOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0BC33F0(v4, v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C0224254);
  return a1;
}

uint64_t sub_1C0BC356C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 4) & 3;
}

uint64_t sub_1C0BC3578(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0xCFu;
  return result;
}

uint64_t sub_1C0BC3588(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 0xC1 | (16 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Temperature()
{
  return &type metadata for FormatWeatherBinding.Temperature;
}

unsigned char *_s11TemperatureO10CodingTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BC367CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11TemperatureO10CodingTypeOMa()
{
  return &_s11TemperatureO10CodingTypeON;
}

unint64_t sub_1C0BC36B8()
{
  unint64_t result = qword_1EA1A46D0;
  if (!qword_1EA1A46D0)
  {
    sub_1C0BC3710();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A46D0);
  }
  return result;
}

void sub_1C0BC3710()
{
  if (!qword_1EA1A46D8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A46D8);
    }
  }
}

unint64_t sub_1C0BC376C()
{
  unint64_t result = qword_1EA1A46E0;
  if (!qword_1EA1A46E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A46E0);
  }
  return result;
}

unint64_t sub_1C0BC37C0()
{
  unint64_t result = qword_1EA1A46E8;
  if (!qword_1EA1A46E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A46E8);
  }
  return result;
}

double sub_1C0BC3814@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&v11[0] = MEMORY[0x1E4FBC860];
  char v10 = byte_1F1B68510;
  sub_1C0BC18D0(&v10, a2, a1, &v9);
  sub_1C1047634(v9);
  char v10 = byte_1F1B68511;
  sub_1C0BC18D0(&v10, a2, a1, &v9);
  sub_1C1047634(v9);
  char v10 = byte_1F1B68512;
  sub_1C0BC18D0(&v10, a2, a1, &v9);
  sub_1C1047634(v9);
  char v10 = byte_1F1B68513;
  sub_1C0BC18D0(&v10, a2, a1, &v9);
  sub_1C1047634(v9);
  uint64_t v6 = sub_1C0233D40(*(uint64_t *)&v11[0]);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x74617265706D6554, 0xEB00000000657275, 0, 0, v6, v11);
  swift_bridgeObjectRelease();
  double result = *(double *)v11;
  long long v8 = v11[1];
  *(_OWORD *)a3 = v11[0];
  *(_OWORD *)(a3 + 16) = v8;
  *(void *)(a3 + 32) = v12;
  return result;
}

uint64_t sub_1C0BC3990()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v39 = a8;
  uint64_t v42 = a3;
  uint64_t v43 = a7;
  uint64_t v37 = a4;
  int v38 = a10;
  uint64_t v15 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  v36[0] = (uint64_t)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)v36 - v19;
  *a9 = qword_1F1B651E0;
  a9[1] = 0;
  *((unsigned char *)a9 + 16) = 1;
  *(_OWORD *)(a9 + 3) = xmmword_1C158A220;
  a9[5] = a1;
  a9[6] = a2;
  uint64_t v21 = (int *)type metadata accessor for FeedWebEmbed();
  uint64_t v22 = (uint64_t)a9 + v21[8];
  uint64_t v23 = sub_1C1515FDC();
  uint64_t v40 = *(void *)(v23 - 8);
  uint64_t v41 = v23;
  uint64_t v24 = v22;
  uint64_t v25 = v37;
  (*(void (**)(uint64_t, uint64_t))(v40 + 16))(v24, v42);
  sub_1BFE0BF20(v25, (uint64_t)a9 + v21[9], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  *(uint64_t *)((char *)a9 + v21[10]) = a5;
  uint64_t v26 = v21[11];
  v36[1] = a6;
  *(uint64_t *)((char *)a9 + v26) = a6;
  sub_1BFE0BF20(v43, (uint64_t)a9 + v21[12], (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v27 = v39;
  sub_1BFE0BF20(v39, (uint64_t)a9 + v21[13], &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v28 = v21[14];
  uint64_t v29 = v27;
  *((unsigned char *)a9 + v28) = v38 & 1;
  sub_1BFE0BF20(v27, (uint64_t)v20, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15) == 1)
  {
    sub_1C0BC7A98((uint64_t)v20, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    uint64_t v30 = (unint64_t *)v36[0];
    sub_1BFDB5F24((uint64_t)v20, v36[0], (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_retain();
      swift_retain();
      sub_1BFECFEB0((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFEB0((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      swift_release();
      swift_release();
    }
    else
    {
      unint64_t v31 = *v30;
      swift_retain();
      swift_retain();
      sub_1BFECFEB0((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      switch(v31 >> 61)
      {
        case 1uLL:
          uint64_t v33 = *a9;
          if ((*a9 & 0x800000) == 0)
          {
            v33 |= 0x800000uLL;
            goto LABEL_23;
          }
          break;
        case 2uLL:
          uint64_t v33 = *a9;
          if ((*a9 & 0x20000000) == 0)
          {
            v33 |= 0x20000000uLL;
            goto LABEL_23;
          }
          break;
        case 3uLL:
          uint64_t v33 = *a9;
          if ((*a9 & 0x200000000) == 0)
          {
            v33 |= 0x200000000uLL;
            goto LABEL_23;
          }
          break;
        case 4uLL:
          uint64_t v33 = *a9;
          if ((*a9 & 0x400000000) == 0)
          {
            v33 |= 0x400000000uLL;
            goto LABEL_23;
          }
          break;
        case 5uLL:
          uint64_t v33 = *a9;
          if ((*a9 & 0x800000000) == 0)
          {
            v33 |= 0x800000000uLL;
            goto LABEL_23;
          }
          break;
        case 6uLL:
          uint64_t v33 = *a9;
          if ((*a9 & 0x1000000000) == 0)
          {
            v33 |= 0x1000000000uLL;
            goto LABEL_23;
          }
          break;
        default:
          uint64_t v32 = *(void *)(v31 + 16);
          uint64_t v33 = *a9;
          if ((*a9 & 0x400000) == 0)
          {
            v33 |= 0x400000uLL;
            *a9 = v33;
          }
          if ((v33 & 0x20) == 0 && *(unsigned char *)(v32 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_isFeatured))
          {
            v33 |= 0x20uLL;
LABEL_23:
            *a9 = v33;
          }
          break;
      }
      unint64_t v44 = v31;
      uint64_t v34 = SportsDataVisualization.event.getter();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      if (v34 && (v33 & 0x2000000000) == 0) {
        *a9 = v33 | 0x2000000000;
      }
    }
  }
  sub_1C0BC7A98(v29, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  sub_1C0BC7A98(v43, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  sub_1C0BC7A98(v25, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
}

uint64_t sub_1C0BC3F28()
{
  uint64_t v1 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (unint64_t *)((char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v0 + *(int *)(v8 + 52), (uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1C0BC7A98((uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BFDB5F24((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BFECFEB0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      unint64_t v9 = *v4;
      sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      switch(v9 >> 61)
      {
        case 1uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config;
          goto LABEL_15;
        case 2uLL:
          sub_1C00FD9D4();
          swift_retain();
          sub_1C151939C();
          uint64_t v14 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
          uint64_t v15 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
          uint64_t v11 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
          sub_1C025C670(v14, v15);
          swift_release();
          if (v15)
          {
            swift_bridgeObjectRetain();
            sub_1C025EF94(v14, v15);
            swift_release();
            swift_release();
            return v11;
          }
          swift_release();
LABEL_18:
          swift_release();
          break;
        case 3uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config;
          goto LABEL_15;
        case 4uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config;
          goto LABEL_15;
        case 5uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config;
          goto LABEL_15;
        case 6uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config;
LABEL_15:
          uint64_t v16 = v12 + *v13;
          if (!*(void *)(v16 + 8)) {
            goto LABEL_18;
          }
          uint64_t v11 = *(void *)(v16 + 32);
          goto LABEL_17;
        default:
          uint64_t v10 = *(void *)(v9 + 16) + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_config;
          if (!*(void *)(v10 + 8)) {
            goto LABEL_18;
          }
          uint64_t v11 = *(void *)(v10 + 32);
LABEL_17:
          swift_bridgeObjectRetain();
          swift_release();
          return v11;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0BC4320()
{
  uint64_t v1 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (unint64_t *)((char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v0 + *(int *)(v8 + 52), (uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1C0BC7A98((uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BFDB5F24((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BFECFEB0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      unint64_t v9 = *v4;
      sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      switch(v9 >> 61)
      {
        case 1uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config;
          goto LABEL_15;
        case 2uLL:
          sub_1C00FD9D4();
          swift_retain();
          sub_1C151939C();
          uint64_t v14 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
          uint64_t v15 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 8);
          uint64_t v11 = *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 24);
          sub_1C025C670(v14, v15);
          swift_release();
          if (v15)
          {
            swift_bridgeObjectRetain();
            sub_1C025EF94(v14, v15);
            swift_release();
            swift_release();
            return v11;
          }
          swift_release();
LABEL_18:
          swift_release();
          break;
        case 3uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config;
          goto LABEL_15;
        case 4uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config;
          goto LABEL_15;
        case 5uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config;
          goto LABEL_15;
        case 6uLL:
          uint64_t v12 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v13 = &OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config;
LABEL_15:
          uint64_t v16 = v12 + *v13;
          if (!*(void *)(v16 + 8)) {
            goto LABEL_18;
          }
          uint64_t v11 = *(void *)(v16 + 24);
          goto LABEL_17;
        default:
          uint64_t v10 = *(void *)(v9 + 16) + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_config;
          if (!*(void *)(v10 + 8)) {
            goto LABEL_18;
          }
          uint64_t v11 = *(void *)(v10 + 24);
LABEL_17:
          swift_bridgeObjectRetain();
          swift_release();
          return v11;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t FeedWebEmbed.debugIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (id *)((char *)&v13 - v5);
  sub_1BFE0BF20(v0 + *(int *)(v1 + 48), (uint64_t)&v13 - v5, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    sub_1C0BC7A98((uint64_t)v6, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    sub_1BFDB5F24(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
LABEL_4:
    uint64_t v9 = sub_1C1515E2C();
    goto LABEL_5;
  }
  id v8 = objc_msgSend(v6[5], sel_identifier);
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  sub_1BFECFEB0((uint64_t)v6, type metadata accessor for FeedHeadline);
  sub_1BFDB5F24(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if (!v11) {
    goto LABEL_4;
  }
LABEL_5:
  sub_1BFECFEB0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  return v9;
}

uint64_t FeedWebEmbed.debugSourceName.getter()
{
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)&v10 - v2);
  uint64_t v4 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v0 + *(int *)(v4 + 48), (uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1C0BC7A98((uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    id v7 = objc_msgSend(v3[5], sel_sourceChannel);
    uint64_t v6 = (uint64_t)v7;
    if (v7)
    {
      id v8 = objc_msgSend(v7, sel_name);
      swift_unknownObjectRelease();
      uint64_t v6 = sub_1C151E62C();
    }
    sub_1BFECFEB0((uint64_t)v3, type metadata accessor for FeedHeadline);
  }
  return v6;
}

uint64_t FeedWebEmbed.debugTitle.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (id *)((char *)&v15 - v6);
  sub_1BFE0BF20(v1 + *(int *)(v2 + 48), (uint64_t)&v15 - v6, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_1C0BC7A98((uint64_t)v7, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
LABEL_7:
    sub_1BFDB5F24(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
LABEL_8:
    uint64_t v11 = sub_1C1515E2C();
    goto LABEL_9;
  }
  id v9 = objc_msgSend(v7[5], sel_title);
  if (!v9)
  {
    sub_1BFECFEB0((uint64_t)v7, type metadata accessor for FeedHeadline);
    goto LABEL_7;
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  sub_1BFECFEB0((uint64_t)v7, type metadata accessor for FeedHeadline);
  sub_1BFDB5F24(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if (!v13) {
    goto LABEL_8;
  }
LABEL_9:
  sub_1BFECFEB0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  return v11;
}

id FeedWebEmbed.debugAssetHandle.getter()
{
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)&v9 - v2);
  uint64_t v4 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v0 + *(int *)(v4 + 48), (uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1C0BC7A98((uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    id v7 = objc_msgSend(v3[5], sel_thumbnail);
    id v6 = objc_msgSend(v7, sel_thumbnailAssetHandle);

    sub_1BFECFEB0((uint64_t)v3, type metadata accessor for FeedHeadline);
  }
  return v6;
}

id FeedWebEmbed.debugScoreProfile.getter()
{
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)&v8 - v2);
  uint64_t v4 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v0 + *(int *)(v4 + 48), (uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_1C0BC7A98((uint64_t)v3, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    id v6 = objc_msgSend(v3[5], sel_scoreProfile);
    sub_1BFECFEB0((uint64_t)v3, type metadata accessor for FeedHeadline);
  }
  return v6;
}

void *FeedWebEmbed.additionalFormatFeedItems.getter()
{
  uint64_t v1 = v0;
  uint64_t v70 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v73 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v67 = (uint64_t *)((char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  unint64_t v72 = (uint64_t *)((char *)&v66 - v4);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v74 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v71 = (uint64_t)&v66 - v9;
  uint64_t v10 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], v5);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v66 - v14;
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v5);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v19 = type metadata accessor for FeedHeadline(0);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v66 - v24;
  uint64_t v93 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v68 = type metadata accessor for FeedWebEmbed();
  uint64_t v26 = *(int *)(v68 + 48);
  uint64_t v69 = v1;
  sub_1BFE0BF20(v1 + v26, (uint64_t)v18, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1C0BC7A98((uint64_t)v18, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    uint64_t v27 = v70;
    uint64_t v28 = v69;
    uint64_t v29 = v68;
  }
  else
  {
    sub_1BFF977B8((uint64_t)v18, (uint64_t)v25, type metadata accessor for FeedHeadline);
    uint64_t v30 = (void *)*((void *)v25 + 5);
    uint64_t v31 = sub_1C151D2DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v15, 1, 1, v31);
    sub_1BFDB5F24((uint64_t)&v25[*(int *)(v19 + 40)], (uint64_t)v12, type metadata accessor for FeedHeadline.State);
    *(void *)&long long v76 = 0;
    *(void *)&long long v79 = 0;
    BYTE8(v79) = 1;
    char v75 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v30, 0, &v75, (uint64_t)v15, (uint64_t)v12, (void **)&v76, (uint64_t)v22, (uint64_t)&v79);
    uint64_t v32 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
    uint64_t v93 = v32;
    unint64_t v34 = v32[2];
    unint64_t v33 = v32[3];
    if (v34 >= v33 >> 1)
    {
      uint64_t v32 = sub_1BFEA4268((void *)(v33 > 1), v34 + 1, 1, v32);
      uint64_t v93 = v32;
    }
    uint64_t v27 = v70;
    uint64_t v28 = v69;
    uint64_t v29 = v68;
    uint64_t v81 = (ValueMetadata *)v19;
    unint64_t v82 = sub_1BFEDDD20((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v79);
    sub_1BFDB5F24((uint64_t)v22, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
    v32[2] = v34 + 1;
    sub_1BFC773DC(&v79, (uint64_t)&v32[5 * v34 + 4]);
    sub_1BFECFEB0((uint64_t)v22, type metadata accessor for FeedHeadline);
    uint64_t v36 = FeedHeadline.additionalFormatFeedItems.getter();
    sub_1BFEACADC((uint64_t)v36);
    sub_1BFECFEB0((uint64_t)v25, type metadata accessor for FeedHeadline);
  }
  uint64_t v37 = v28 + *(int *)(v29 + 52);
  uint64_t v38 = v71;
  sub_1BFE0BF20(v37, v71, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  int v40 = v39(v38, 1, v27);
  uint64_t v41 = v72;
  if (v40 == 1)
  {
    sub_1C0BC7A98(v38, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BFDB5F24(v38, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BFECFEB0((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFEB0(v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      uint64_t v42 = *v41;
      sub_1BFECFEB0(v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      *(void *)&long long v79 = v42;
      uint64_t v43 = SportsDataVisualization.event.getter();
      swift_release();
      if (v43)
      {
        id v44 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
        uint64_t v45 = sub_1C151E62C();
        uint64_t v47 = v46;

        uint64_t v48 = v93;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v48 = sub_1BFEA4268(0, v48[2] + 1, 1, v48);
        }
        unint64_t v50 = v48[2];
        unint64_t v49 = v48[3];
        if (v50 >= v49 >> 1) {
          uint64_t v48 = sub_1BFEA4268((void *)(v49 > 1), v50 + 1, 1, v48);
        }
        uint64_t v81 = &type metadata for FeedSportsEvent;
        unint64_t v82 = sub_1C0642200();
        uint64_t v51 = swift_allocObject();
        *(void *)&long long v79 = v51;
        *(void *)(v51 + 16) = v45;
        *(void *)(v51 + 24) = v47;
        *(void *)(v51 + 32) = v43;
        *(void *)(v51 + 40) = 0;
        *(unsigned char *)(v51 + 48) = 0;
        v48[2] = v50 + 1;
        sub_1BFC773DC(&v79, (uint64_t)&v48[5 * v50 + 4]);
        swift_unknownObjectRelease();
        uint64_t v93 = v48;
      }
    }
  }
  uint64_t v52 = v74;
  sub_1BFE0BF20(v37, v74, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if (v39(v52, 1, v27) == 1)
  {
    sub_1C0BC7A98(v52, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    uint64_t v53 = v67;
    sub_1BFDB5F24(v52, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BFECFEB0((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFEB0(v52, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      uint64_t v54 = *v53;
      sub_1BFECFEB0(v52, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      *(void *)&long long v76 = v54;
      SportsDataVisualization.config.getter((uint64_t *)&v79);
      swift_release();
      uint64_t v55 = *((void *)&v79 + 1);
      if (*((void *)&v79 + 1))
      {
        uint64_t v56 = v80;
        uint64_t v57 = v79;
        swift_unknownObjectRetain();
        sub_1C025EF94(v57, v55);
        if (v56)
        {
          id v58 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          uint64_t v59 = sub_1C151E62C();
          uint64_t v61 = v60;

          long long v88 = xmmword_1C152C800;
          long long v89 = 0u;
          long long v90 = 0u;
          long long v91 = 0u;
          char v92 = 0;
          *(void *)&long long v79 = v59;
          *((void *)&v79 + 1) = v61;
          uint64_t v80 = v56;
          LOBYTE(v81) = 0;
          uint64_t v84 = 0;
          unint64_t v85 = 0xE000000000000000;
          unint64_t v82 = 0;
          LOBYTE(v83) = 0;
          uint64_t v86 = 0;
          uint64_t v87 = MEMORY[0x1E4FBC870];
          uint64_t v62 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v62 = sub_1BFEA4268(0, v62[2] + 1, 1, v62);
            uint64_t v93 = v62;
          }
          unint64_t v64 = v62[2];
          unint64_t v63 = v62[3];
          if (v64 >= v63 >> 1)
          {
            uint64_t v62 = sub_1BFEA4268((void *)(v63 > 1), v64 + 1, 1, v62);
            uint64_t v93 = v62;
          }
          uint64_t v77 = &type metadata for FeedTag;
          unint64_t v78 = sub_1BFEA44FC();
          *(void *)&long long v76 = swift_allocObject();
          sub_1BFEA435C((uint64_t)&v79, v76 + 16);
          v62[2] = v64 + 1;
          sub_1BFC773DC(&v76, (uint64_t)&v62[5 * v64 + 4]);
          sub_1BFEA4290((uint64_t)&v79);
          swift_unknownObjectRelease();
        }
      }
    }
  }
  return v93;
}

uint64_t FeedWebEmbed.sportsDataVisualization.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (unint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v1 + *(int *)(v10 + 52), (uint64_t)v9, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    uint64_t result = sub_1C0BC7A98((uint64_t)v9, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    *a1 = 0xF000000000000007;
  }
  else
  {
    sub_1BFDB5F24((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BFECFEB0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      unint64_t v12 = 0xF000000000000007;
    }
    else
    {
      unint64_t v12 = *v6;
    }
    *a1 = v12;
    return sub_1BFECFEB0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  }
  return result;
}

void FeedWebEmbed.traits.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

void FeedWebEmbed.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedWebEmbed.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFF7FF04(v2, v3);
}

uint64_t FeedWebEmbed.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedWebEmbed.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*FeedWebEmbed.identifier.modify())(void)
{
  return nullsub_1;
}

uint64_t FeedWebEmbed.URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedWebEmbed() + 32);
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedWebEmbed.actionURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedWebEmbed();
  return sub_1BFE0BF20(v1 + *(int *)(v3 + 36), a1, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
}

uint64_t FeedWebEmbed.indexFileURLPromise.getter()
{
  type metadata accessor for FeedWebEmbed();
  return swift_retain();
}

uint64_t FeedWebEmbed.dataURLPromise.getter()
{
  type metadata accessor for FeedWebEmbed();
  return swift_retain();
}

uint64_t FeedWebEmbed.headline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedWebEmbed();
  return sub_1BFE0BF20(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
}

uint64_t FeedWebEmbed.dataVisualization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedWebEmbed();
  return sub_1BFE0BF20(v1 + *(int *)(v3 + 52), a1, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
}

uint64_t FeedWebEmbed.isLiveUpdating.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedWebEmbed() + 56));
}

uint64_t FeedWebEmbed.copy(headline:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for WebEmbedDataVisualization;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - v5;
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v3);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v3);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = sub_1C1515FDC();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v2 + 48);
  uint64_t v24 = *(void *)(v2 + 40);
  uint64_t v19 = (int *)type metadata accessor for FeedWebEmbed();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v2 + v19[8], v14);
  sub_1BFE0BF20(v2 + v19[9], (uint64_t)v13, (unint64_t *)&qword_1EB8948A0, v10);
  uint64_t v20 = *(void *)(v2 + v19[10]);
  uint64_t v21 = *(void *)(v2 + v19[11]);
  sub_1BFDB5F24(v25, (uint64_t)v9, type metadata accessor for FeedHeadline);
  uint64_t v22 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v9, 0, 1, v22);
  sub_1BFE0BF20(v2 + v19[13], (uint64_t)v6, &qword_1EB88BF40, (uint64_t (*)(uint64_t))v26);
  LOBYTE(v19) = *(unsigned char *)(v2 + v19[14]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v24, v18, (uint64_t)v17, (uint64_t)v13, v20, v21, (uint64_t)v9, (uint64_t)v6, v27, v19);
}

void sub_1C0BC6324(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1C0BC633C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C0BC6378(uint64_t a1)
{
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (id *)((char *)&v10 - v4);
  sub_1BFE0BF20(v1 + *(int *)(a1 + 48), (uint64_t)&v10 - v4, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_1C0BC7A98((uint64_t)v5, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    id v8 = objc_msgSend(v5[5], sel_thumbnail);
    id v7 = objc_msgSend(v8, sel_thumbnailAssetHandle);

    sub_1BFECFEB0((uint64_t)v5, type metadata accessor for FeedHeadline);
  }
  return v7;
}

id sub_1C0BC6504(uint64_t a1)
{
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (id *)((char *)&v9 - v4);
  sub_1BFE0BF20(v1 + *(int *)(a1 + 48), (uint64_t)&v9 - v4, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_1C0BC7A98((uint64_t)v5, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    id v7 = objc_msgSend(v5[5], sel_scoreProfile);
    sub_1BFECFEB0((uint64_t)v5, type metadata accessor for FeedHeadline);
  }
  return v7;
}

uint64_t FeedWebEmbed.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFDB5F24(v1, a1, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0BC66D8@<X0>(uint64_t a1@<X8>)
{
  sub_1BFDB5F24(v1, a1, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedWebEmbed.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0BC67C8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0BC6820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BFEDDD20(&qword_1EA1A46F8, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  return MEMORY[0x1F415EE48](a1, a2, v4);
}

uint64_t sub_1C0BC689C()
{
  return sub_1C1520E0C();
}

void FeedWebEmbed.dragItem.getter(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v28 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v2 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v27 = (unint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v26 - v6;
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v4);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v1 + *(int *)(v15 + 48), (uint64_t)v10, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    sub_1BFF977B8((uint64_t)v10, (uint64_t)v14, type metadata accessor for FeedHeadline);
    FeedHeadline.dragItem.getter(v29);
    sub_1BFECFEB0((uint64_t)v14, type metadata accessor for FeedHeadline);
    return;
  }
  uint64_t v16 = v29;
  sub_1C0BC7A98((uint64_t)v10, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  sub_1BFE0BF20(v1 + *(int *)(v15 + 52), (uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v28) == 1)
  {
    sub_1C0BC7A98((uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    uint64_t v17 = v27;
    sub_1BFDB5F24((uint64_t)v7, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BFECFEB0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      unint64_t v18 = *v17;
      sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (!(v18 >> 61))
      {
        uint64_t v19 = *(void **)(*(void *)(v18 + 16) + 56);
        if (v19)
        {
          swift_retain();
          id v20 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          if (!v20)
          {
            sub_1C151E62C();
            id v20 = (id)sub_1C151E5EC();
            swift_bridgeObjectRelease();
          }
          id v21 = objc_msgSend(self, sel_nss_NewsURLForTagID_feedConfiguration_, v20, 8);

          if (!v21)
          {
            __break(1u);
            return;
          }
          id v22 = objc_msgSend(v19, sel_name);
          sub_1C151E62C();

          sub_1C151CA2C();
          swift_unknownObjectRelease();
          swift_release();
          uint64_t v23 = sub_1C151CA3C();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 0, 1, v23);
        }
        else
        {
          uint64_t v25 = sub_1C151CA3C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v16, 1, 1, v25);
        }
        swift_release();
        return;
      }
      swift_release();
    }
  }
  uint64_t v24 = sub_1C151CA3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 1, 1, v24);
}

void *sub_1C0BC6E78()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v55 - v4;
  uint64_t v57 = type metadata accessor for FeedHeadline(0);
  uint64_t v6 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v2);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v65 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v15 = type metadata accessor for FeedWebEmbed();
  uint64_t v16 = *(int *)(v15 + 52);
  id v58 = v1;
  sub_1BFE0BF20((uint64_t)v1 + v16, (uint64_t)v14, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_1C0BC7A98((uint64_t)v14, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    sub_1BFDB5F24((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BFECFEB0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFEB0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    else
    {
      uint64_t v17 = *v11;
      sub_1BFECFEB0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      uint64_t v59 = 0xD000000000000015;
      unint64_t v60 = 0x80000001C161E720;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v18 = v59;
      unint64_t v19 = v60;
      id v20 = (void *)MEMORY[0x1E4FBC860];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v20 = sub_1BFEF9B68(0, v20[2] + 1, 1, v20);
      }
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1) {
        id v20 = sub_1BFEF9B68((void *)(v21 > 1), v22 + 1, 1, v20);
      }
      v20[2] = v22 + 1;
      uint64_t v23 = &v20[2 * v22];
      v23[4] = v18;
      void v23[5] = v19;
      uint64_t v65 = v20;
      uint64_t v59 = v17;
      uint64_t v24 = SportsDataVisualization.event.getter();
      if (v24)
      {
        uint64_t v25 = v24;
        unint64_t v27 = v20[2];
        unint64_t v26 = v20[3];
        if (v27 >= v26 >> 1) {
          id v20 = sub_1BFEF9B68((void *)(v26 > 1), v27 + 1, 1, v20);
        }
        v20[2] = v27 + 1;
        uint64_t v28 = &v20[2 * v27];
        v28[4] = 0xD00000000000001ALL;
        v28[5] = 0x80000001C161E760;
        uint64_t v65 = v20;
        id v29 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
        uint64_t v30 = sub_1C151E62C();
        unint64_t v32 = v31;

        uint64_t v59 = v30;
        unint64_t v60 = v32;
        uint64_t v61 = v25;
        uint64_t v62 = 0;
        LOBYTE(v63) = 0;
        uint64_t v33 = sub_1C0910BFC();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF95B8(v33);
        swift_unknownObjectRelease();
      }
      uint64_t v64 = v17;
      SportsDataVisualization.config.getter(&v59);
      uint64_t v34 = v60;
      if (v60)
      {
        uint64_t v35 = v61;
        uint64_t v36 = v59;
        swift_unknownObjectRetain();
        sub_1C025EF94(v36, v34);
        if (v35)
        {
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v38 = sub_1BFFAFDA8(0xD00000000000001DLL, 0x80000001C161E740, ObjectType);
          sub_1BFEF95B8((uint64_t)v38);
          swift_unknownObjectRelease();
        }
      }
      swift_release();
    }
  }
  uint64_t v39 = v57;
  sub_1BFE0BF20((uint64_t)v58 + *(int *)(v15 + 48), (uint64_t)v5, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v39) == 1)
  {
    sub_1C0BC7A98((uint64_t)v5, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  }
  else
  {
    uint64_t v40 = v56;
    sub_1BFF977B8((uint64_t)v5, v56, type metadata accessor for FeedHeadline);
    uint64_t v41 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v41 = sub_1BFEF9B68(0, v41[2] + 1, 1, v41);
    }
    unint64_t v43 = v41[2];
    unint64_t v42 = v41[3];
    if (v43 >= v42 >> 1) {
      uint64_t v41 = sub_1BFEF9B68((void *)(v42 > 1), v43 + 1, 1, v41);
    }
    long long v41[2] = v43 + 1;
    id v44 = &v41[2 * v43];
    v44[4] = 0xD000000000000016;
    v44[5] = 0x80000001C161E6E0;
    uint64_t v65 = v41;
    uint64_t v45 = sub_1BFEAB418();
    int64_t v46 = v45[2];
    if (v46)
    {
      uint64_t v64 = MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v46, 0);
      uint64_t v47 = v64;
      id v58 = v45;
      uint64_t v48 = v45 + 5;
      do
      {
        uint64_t v59 = 0;
        unint64_t v60 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1C15200FC();
        swift_bridgeObjectRelease();
        uint64_t v59 = 0xD000000000000013;
        unint64_t v60 = 0x80000001C161E700;
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v49 = v59;
        unint64_t v50 = v60;
        uint64_t v64 = v47;
        unint64_t v52 = *(void *)(v47 + 16);
        unint64_t v51 = *(void *)(v47 + 24);
        if (v52 >= v51 >> 1)
        {
          sub_1BFF661B8(v51 > 1, v52 + 1, 1);
          uint64_t v47 = v64;
        }
        v48 += 2;
        *(void *)(v47 + 16) = v52 + 1;
        uint64_t v53 = v47 + 16 * v52;
        *(void *)(v53 + 32) = v49;
        *(void *)(v53 + 40) = v50;
        --v46;
      }
      while (v46);
      swift_bridgeObjectRelease();
      uint64_t v40 = v56;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = MEMORY[0x1E4FBC860];
    }
    sub_1BFEF95B8(v47);
    sub_1BFECFEB0(v40, type metadata accessor for FeedHeadline);
  }
  return v65;
}

uint64_t sub_1C0BC771C()
{
  uint64_t v0 = sub_1C0BC6E78();
  int64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v8;
    uint64_t v3 = v0 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v8 + 16);
      unint64_t v4 = *(void *)(v8 + 24);
      if (v5 >= v4 >> 1) {
        sub_1BFF661B8(v4 > 1, v5 + 1, 1);
      }
      v3 += 2;
      *(void *)(v8 + 16) = v5 + 1;
      uint64_t v6 = v8 + 16 * v5;
      *(void *)(v6 + 32) = 0x2D70756F7267;
      *(void *)(v6 + 40) = 0xE600000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v2;
}

uint64_t FeedWebEmbed.score.getter()
{
  uint64_t v1 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (unint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = type metadata accessor for FeedWebEmbed();
  sub_1BFE0BF20(v0 + *(int *)(v8 + 52), (uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1C0BC7A98((uint64_t)v7, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    return 0;
  }
  sub_1BFDB5F24((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFECFEB0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    return 0;
  }
  unint64_t v9 = *v4;
  sub_1BFECFEB0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  if (v9 >> 61)
  {
    swift_release();
    return 0;
  }
  uint64_t v10 = *(void *)(v9 + 16);
  swift_retain();
  swift_release();
  return v10;
}

uint64_t sub_1C0BC7A98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFECA32C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0BC7B08()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C0BC7B78()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t _s8NewsFeed0B8WebEmbedV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v109 = *(void *)(v4 - 8);
  uint64_t v110 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v106 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v107 = (uint64_t)&v103 - v8;
  sub_1C0BCCD9C(0, &qword_1EB867CB8, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v108 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v111 = (uint64_t)&v103 - v10;
  uint64_t v116 = type metadata accessor for FeedHeadline(0);
  uint64_t v118 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v112 = (uint64_t *)((char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v6);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v114 = (uint64_t *)((char *)&v103 - v13);
  sub_1C0BCCD9C(0, &qword_1EB865590, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v115 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v117 = (uint64_t)&v103 - v15;
  uint64_t v16 = sub_1C1515FDC();
  uint64_t v119 = *(void *)(v16 - 8);
  uint64_t v120 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v113 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v6);
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v21 = (char *)&v103 - v20;
  sub_1C0BCCD9C(0, (unint64_t *)&qword_1EB871130, (unint64_t *)&qword_1EB8948A0, v18);
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v103 - v24;
  uint64_t v26 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v26);
  uint64_t v124 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v125 = (char *)&v103 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v121 = (uint64_t)&v103 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v127 = (char *)&v103 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v129 = (uint64_t)&v103 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v128 = (uint64_t)&v103 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v123 = (uint64_t)&v103 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v122 = (uint64_t)&v103 - v41;
  MEMORY[0x1F4188790](v42);
  id v44 = (char *)&v103 - v43;
  __n128 v46 = MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v103 - v47;
  LOBYTE(v18) = MEMORY[0x1C18BDA40](a1 + *(int *)(v49 + 32), a2 + *(int *)(v49 + 32), v46);
  uint64_t v126 = a1;
  sub_1BFDB5F24(a1, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v50 = a2;
  sub_1BFDB5F24(a2, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if ((v18 & 1) == 0)
  {
    sub_1BFECFEB0((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    uint64_t v59 = (uint64_t)v125;
    uint64_t v62 = v126;
    uint64_t v63 = v123;
    uint64_t v60 = (uint64_t)v124;
    uint64_t v64 = v128;
    uint64_t v61 = v122;
LABEL_9:
    sub_1BFDB5F24(v62, v61, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFDB5F24(v50, v63, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    goto LABEL_10;
  }
  uint64_t v105 = a2;
  uint64_t v51 = *(int *)(v26 + 36);
  uint64_t v52 = (uint64_t)&v44[v51];
  uint64_t v53 = (uint64_t)&v25[*(int *)(v23 + 48)];
  uint64_t v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFE0BF20((uint64_t)&v48[v51], (uint64_t)v25, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1BFE0BF20(v52, v53, (unint64_t *)&qword_1EB8948A0, v54);
  uint64_t v55 = v119;
  uint64_t v56 = v120;
  uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48);
  if (v57((uint64_t)v25, 1, v120) != 1)
  {
    sub_1BFE0BF20((uint64_t)v25, (uint64_t)v21, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    if (v57(v53, 1, v56) != 1)
    {
      uint64_t v104 = v26;
      uint64_t v70 = v113;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v113, v53, v56);
      sub_1BFEDDD20((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
      uint64_t v71 = v55;
      char v72 = sub_1C151E5CC();
      uint64_t v73 = *(void (**)(char *, uint64_t))(v71 + 8);
      v73(v70, v56);
      sub_1BFECFEB0((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1BFECFEB0((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      v73(v21, v56);
      sub_1C0BC7A98((uint64_t)v25, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v62 = v126;
      uint64_t v61 = v122;
      sub_1BFDB5F24(v126, v122, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v50 = v105;
      uint64_t v63 = v123;
      sub_1BFDB5F24(v105, v123, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v60 = (uint64_t)v124;
      uint64_t v59 = (uint64_t)v125;
      uint64_t v64 = v128;
      if (v72) {
        goto LABEL_18;
      }
LABEL_10:
      sub_1BFECFEB0(v61, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1BFECFEB0(v63, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1BFDB5F24(v62, v64, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v65 = v129;
      sub_1BFDB5F24(v50, v129, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      goto LABEL_11;
    }
    sub_1BFECFEB0((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v56);
    uint64_t v60 = (uint64_t)v124;
    uint64_t v59 = (uint64_t)v125;
    uint64_t v61 = v122;
    goto LABEL_8;
  }
  sub_1BFECFEB0((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFECFEB0((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  unsigned int v58 = v57(v53, 1, v56);
  uint64_t v60 = (uint64_t)v124;
  uint64_t v59 = (uint64_t)v125;
  uint64_t v61 = v122;
  if (v58 != 1)
  {
LABEL_8:
    sub_1C0BCCE14((uint64_t)v25, (unint64_t *)&qword_1EB871130, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v50 = v105;
    uint64_t v62 = v126;
    uint64_t v64 = v128;
    uint64_t v63 = v123;
    goto LABEL_9;
  }
  uint64_t v104 = v26;
  sub_1C0BC7A98((uint64_t)v25, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  uint64_t v62 = v126;
  sub_1BFDB5F24(v126, v61, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v50 = v105;
  uint64_t v63 = v123;
  sub_1BFDB5F24(v105, v123, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v64 = v128;
LABEL_18:
  if (*(void *)(v61 + 40) == *(void *)(v63 + 40) && *(void *)(v61 + 48) == *(void *)(v63 + 48))
  {
    sub_1BFECFEB0(v61, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v63, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFDB5F24(v62, v64, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    uint64_t v65 = v129;
    sub_1BFDB5F24(v50, v129, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    uint64_t v74 = v104;
    goto LABEL_22;
  }
  char v75 = sub_1C1520A9C();
  sub_1BFECFEB0(v61, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFECFEB0(v63, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFDB5F24(v62, v64, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v65 = v129;
  sub_1BFDB5F24(v50, v129, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v74 = v104;
  if ((v75 & 1) == 0)
  {
LABEL_11:
    sub_1BFECFEB0(v65, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v64, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    uint64_t v66 = v121;
    uint64_t v67 = (uint64_t)v127;
LABEL_12:
    sub_1BFDB5F24(v62, v67, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFDB5F24(v50, v66, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
LABEL_13:
    sub_1BFECFEB0(v66, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v67, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFDB5F24(v62, v59, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFDB5F24(v50, v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
LABEL_14:
    sub_1BFECFEB0(v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v59, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
LABEL_15:
    char v68 = 0;
    return v68 & 1;
  }
LABEL_22:
  uint64_t v104 = v74;
  uint64_t v76 = *(int *)(v74 + 48);
  uint64_t v77 = v65 + v76;
  uint64_t v78 = v117;
  uint64_t v79 = v117 + *(int *)(v115 + 48);
  sub_1BFE0BF20(v64 + v76, v117, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  sub_1BFE0BF20(v77, v79, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  uint64_t v81 = v118 + 48;
  uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  uint64_t v82 = v116;
  int v83 = v80(v78, 1, v116);
  uint64_t v67 = (uint64_t)v127;
  if (v83 == 1)
  {
    uint64_t v118 = v81;
    sub_1BFECFEB0(v129, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v128, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    int v84 = v80(v79, 1, v82);
    uint64_t v66 = v121;
    if (v84 == 1)
    {
      sub_1C0BC7A98(v78, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
      sub_1BFDB5F24(v62, v67, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1BFDB5F24(v50, v66, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  sub_1BFE0BF20(v78, (uint64_t)v114, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  if (v80(v79, 1, v82) == 1)
  {
    sub_1BFECFEB0(v129, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v128, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0((uint64_t)v114, type metadata accessor for FeedHeadline);
    uint64_t v66 = v121;
LABEL_27:
    sub_1C0BCCE14(v78, &qword_1EB865590, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    goto LABEL_12;
  }
  unint64_t v85 = v112;
  sub_1BFF977B8(v79, (uint64_t)v112, type metadata accessor for FeedHeadline);
  uint64_t v86 = v114;
  char v87 = static FeedHeadline.== infix(_:_:)(v114, v85);
  sub_1BFECFEB0((uint64_t)v85, type metadata accessor for FeedHeadline);
  sub_1BFECFEB0(v129, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFECFEB0(v128, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFECFEB0((uint64_t)v86, type metadata accessor for FeedHeadline);
  sub_1C0BC7A98(v78, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
  sub_1BFDB5F24(v62, v67, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  uint64_t v66 = v121;
  sub_1BFDB5F24(v50, v121, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if ((v87 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_29:
  uint64_t v88 = v104;
  int v89 = *(unsigned __int8 *)(v67 + *(int *)(v104 + 56));
  sub_1BFECFEB0(v67, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  int v90 = *(unsigned __int8 *)(v66 + *(int *)(v88 + 56));
  sub_1BFECFEB0(v66, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFDB5F24(v62, v59, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFDB5F24(v50, v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if (v89 != v90) {
    goto LABEL_14;
  }
  uint64_t v91 = *(int *)(v88 + 52);
  uint64_t v92 = v60 + v91;
  uint64_t v93 = v111;
  uint64_t v94 = v111 + *(int *)(v108 + 48);
  sub_1BFE0BF20(v59 + v91, v111, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  sub_1BFE0BF20(v92, v94, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v95 = v110;
  uint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
  if (v96(v93, 1, v110) == 1)
  {
    sub_1BFECFEB0(v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v59, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    if (v96(v94, 1, v95) == 1)
    {
      sub_1C0BC7A98(v93, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      char v68 = 1;
      return v68 & 1;
    }
    goto LABEL_35;
  }
  uint64_t v97 = v107;
  sub_1BFE0BF20(v93, v107, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  if (v96(v94, 1, v95) == 1)
  {
    sub_1BFECFEB0(v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v59, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    sub_1BFECFEB0(v97, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_35:
    sub_1C0BCCE14(v93, &qword_1EB867CB8, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_15;
  }
  uint64_t v98 = v106;
  sub_1BFF977B8(v94, v106, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  uint64_t v99 = WebEmbedDataVisualization.identifier.getter();
  uint64_t v101 = v100;
  if (v99 == WebEmbedDataVisualization.identifier.getter() && v101 == v102) {
    char v68 = 1;
  }
  else {
    char v68 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFECFEB0(v98, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1BFECFEB0(v60, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFECFEB0(v59, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFECFEB0(v97, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
  sub_1C0BC7A98(v93, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  return v68 & 1;
}

uint64_t sub_1C0BC8E6C(uint64_t a1)
{
  uint64_t result = sub_1BFEDDD20(&qword_1EB85B490, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0BC8EC4()
{
  return sub_1BFEDDD20(&qword_1EA1A46F0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

uint64_t sub_1C0BC8F0C()
{
  return sub_1BFEDDD20(&qword_1EB85B490, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

uint64_t sub_1C0BC8F54()
{
  return sub_1BFEDDD20(&qword_1EB865598, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
}

void *initializeBufferWithCopyOfBuffer for FeedWebEmbed(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2 + 3;
    unint64_t v9 = a2[4];
    if (v9 >= 0x11)
    {
      v4[3] = *v8;
      v4[4] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *(_OWORD *)v8;
    }
    uint64_t v11 = a2[6];
    uint64_t v4[5] = a2[5];
    v4[6] = v11;
    uint64_t v12 = a3[8];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C1515FDC();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    swift_bridgeObjectRetain();
    v17(v13, v14, v15);
    uint64_t v18 = a3[9];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v84 = v15;
    int v83 = (void (*)(char *, char *, uint64_t))v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))((uint64_t)a2 + v18, 1, v15))
    {
      sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v17(v19, (uint64_t)v20, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    uint64_t v22 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(void *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    unint64_t v85 = a3;
    uint64_t v23 = a3[12];
    uint64_t v24 = (void *)((char *)v4 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for FeedHeadline(0);
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48);
    swift_retain();
    swift_retain();
    if (v28(v25, 1, v26))
    {
      sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = v25[1];
      uint64_t v82 = (int *)v26;
      *uint64_t v24 = *v25;
      v24[1] = v30;
      v24[2] = v25[2];
      *((unsigned char *)v24 + 24) = *((unsigned char *)v25 + 24);
      uint64_t v80 = v27;
      uint64_t v81 = v25[5];
      v24[4] = v25[4];
      v24[5] = v81;
      v24[6] = v25[6];
      *((unsigned char *)v24 + 56) = *((unsigned char *)v25 + 56);
      uint64_t v31 = *(int *)(v26 + 40);
      uint64_t v32 = (char *)v24 + v31;
      uint64_t v33 = (char *)v25 + v31;
      *uint64_t v32 = *((unsigned char *)v25 + v31);
      v32[1] = *((unsigned char *)v25 + v31 + 1);
      uint64_t v34 = type metadata accessor for FeedHeadline.State(0);
      uint64_t v35 = *(int *)(v34 + 24);
      __dst = &v32[v35];
      uint64_t v79 = (int *)v34;
      uint64_t v36 = &v33[v35];
      uint64_t v37 = (int *)type metadata accessor for SharedItem();
      uint64_t v77 = *((void *)v37 - 1);
      uint64_t v38 = *(unsigned int (**)(char *, uint64_t, int *))(v77 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v38(v36, 1, v37))
      {
        uint64_t v39 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v40 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(__dst, v36, v40);
        __dst[v37[5]] = v36[v37[5]];
        uint64_t v41 = v37[6];
        uint64_t v42 = *(void **)&v36[v41];
        *(void *)&__dst[v41] = v42;
        uint64_t v43 = v37[7];
        id v44 = &__dst[v43];
        uint64_t v45 = &v36[v43];
        id v46 = v42;
        v83(v44, v45, v84);
        (*(void (**)(char *, void, uint64_t, int *))(v77 + 56))(__dst, 0, 1, v37);
      }
      v32[v79[7]] = v33[v79[7]];
      v32[v79[8]] = v33[v79[8]];
      v32[v79[9]] = v33[v79[9]];
      v32[v79[10]] = v33[v79[10]];
      uint64_t v47 = v82[11];
      uint64_t v48 = (char *)v24 + v47;
      uint64_t v49 = (char *)v25 + v47;
      uint64_t v50 = sub_1C151D2DC();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      uint64_t v53 = v82[12];
      uint64_t v54 = (void *)((char *)v24 + v53);
      uint64_t v55 = (void *)((char *)v25 + v53);
      unint64_t v56 = v55[1];
      if (v56 >= 0x11)
      {
        *uint64_t v54 = *v55;
        v54[1] = v56;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      }
      uint64_t v57 = v82[13];
      unint64_t v58 = *(void *)((char *)v25 + v57);
      if (v58 >= 2)
      {
        if (v58 == 2)
        {
          *(void *)((char *)v24 + v57) = 2;
        }
        else
        {
          *(void *)((char *)v24 + v57) = v58;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)v24 + v57) = v58;
      }
      uint64_t v59 = v82[14];
      uint64_t v60 = *(void **)((char *)v25 + v59);
      *(void *)((char *)v24 + v59) = v60;
      uint64_t v61 = *(void (**)(void *, void, uint64_t, int *))(v80 + 56);
      id v62 = v60;
      v61(v24, 0, 1, v82);
    }
    uint64_t v63 = v85;
    uint64_t v64 = v85[13];
    uint64_t v65 = (void *)((char *)v4 + v64);
    uint64_t v66 = (uint64_t *)((char *)a2 + v64);
    uint64_t v67 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v68 = *(void *)(v67 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v71 = *v66;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v72 = v66[1];
        *uint64_t v65 = v71;
        v65[1] = v72;
        uint64_t v73 = type metadata accessor for GenericDataVisualization();
        uint64_t v74 = *(int *)(v73 + 20);
        uint64_t v86 = (char *)v65 + v74;
        char v75 = (char *)v66 + v74;
        swift_bridgeObjectRetain();
        v83(v86, v75, v84);
        *(void *)((char *)v65 + *(int *)(v73 + 24)) = *(uint64_t *)((char *)v66 + *(int *)(v73 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *uint64_t v65 = v71;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
    *((unsigned char *)v4 + v63[14]) = *((unsigned char *)a2 + v63[14]);
  }
  return v4;
}

uint64_t destroy for FeedWebEmbed(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 32) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + a2[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_release();
  swift_release();
  uint64_t v9 = a1 + a2[12];
  uint64_t v10 = (int *)type metadata accessor for FeedHeadline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v10 - 1) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v11 = v9 + v10[10];
    uint64_t v12 = v11 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
    uint64_t v13 = type metadata accessor for SharedItem();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      uint64_t v14 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);

      v7(v12 + *(int *)(v13 + 28), v5);
    }
    uint64_t v15 = v9 + v10[11];
    uint64_t v16 = sub_1C151D2DC();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    if (*(void *)(v9 + v10[12] + 8) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v9 + v10[13]) >= 3uLL) {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v18 = a1 + a2[13];
  uint64_t v19 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19);
  if (!result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = type metadata accessor for GenericDataVisualization();
      v7(v18 + *(int *)(v21 + 20), v5);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t initializeWithCopy for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (void *)(a2 + 24);
  unint64_t v8 = *(void *)(a2 + 32);
  if (v8 >= 0x11)
  {
    *(void *)(a1 + 24) = *v7;
    *(void *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  v15(v11, v12, v13);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v91 = v13;
  int v90 = (void (*)(char *, char *, uint64_t))v15;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a2 + v16, 1, v13))
  {
    sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v17, (uint64_t)v18, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  uint64_t v20 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v92 = v23;
  uint64_t v25 = (void *)(v23 + v21);
  uint64_t v26 = type metadata accessor for FeedHeadline(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48);
  swift_retain();
  uint64_t v29 = v25;
  swift_retain();
  if (v28(v25, 1, v26))
  {
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
    memcpy(v22, v25, *(void *)(*(void *)(v30 - 8) + 64));
    uint64_t v31 = v24;
    uint64_t v32 = v92;
  }
  else
  {
    uint64_t v85 = v27;
    uint64_t v86 = (int *)v26;
    char v87 = v25;
    uint64_t v88 = v24;
    uint64_t v33 = v25[1];
    *uint64_t v22 = *v25;
    v22[1] = v33;
    v22[2] = v25[2];
    *((unsigned char *)v22 + 24) = *((unsigned char *)v25 + 24);
    uint64_t v34 = v25[5];
    v22[4] = v25[4];
    void v22[5] = v34;
    v22[6] = v25[6];
    *((unsigned char *)v22 + 56) = *((unsigned char *)v25 + 56);
    uint64_t v35 = *(int *)(v26 + 40);
    uint64_t v36 = (char *)v22 + v35;
    uint64_t v37 = (char *)v29 + v35;
    *uint64_t v36 = *((unsigned char *)v29 + v35);
    v36[1] = *((unsigned char *)v29 + v35 + 1);
    uint64_t v38 = type metadata accessor for FeedHeadline.State(0);
    uint64_t v39 = *(int *)(v38 + 24);
    __dst = &v36[v39];
    uint64_t v84 = (int *)v38;
    uint64_t v40 = &v37[v39];
    uint64_t v41 = (int *)type metadata accessor for SharedItem();
    uint64_t v82 = *((void *)v41 - 1);
    uint64_t v42 = *(unsigned int (**)(char *, uint64_t, int *))(v82 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v42(v40, 1, v41))
    {
      uint64_t v43 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      uint64_t v44 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(__dst, v40, v44);
      __dst[v41[5]] = v40[v41[5]];
      uint64_t v45 = v41[6];
      id v46 = *(void **)&v40[v45];
      *(void *)&__dst[v45] = v46;
      uint64_t v47 = v41[7];
      uint64_t v48 = &__dst[v47];
      uint64_t v49 = &v40[v47];
      id v50 = v46;
      v90(v48, v49, v91);
      (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(__dst, 0, 1, v41);
    }
    uint64_t v32 = v92;
    v36[v84[7]] = v37[v84[7]];
    v36[v84[8]] = v37[v84[8]];
    v36[v84[9]] = v37[v84[9]];
    v36[v84[10]] = v37[v84[10]];
    uint64_t v51 = v86[11];
    uint64_t v52 = (char *)v22 + v51;
    uint64_t v53 = (char *)v87 + v51;
    uint64_t v54 = sub_1C151D2DC();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
      memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    uint64_t v31 = v88;
    uint64_t v57 = v86[12];
    unint64_t v58 = (void *)((char *)v22 + v57);
    uint64_t v59 = (void *)((char *)v87 + v57);
    unint64_t v60 = v59[1];
    if (v60 >= 0x11)
    {
      *unint64_t v58 = *v59;
      v58[1] = v60;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)unint64_t v58 = *(_OWORD *)v59;
    }
    uint64_t v61 = v86[13];
    unint64_t v62 = *(void *)((char *)v87 + v61);
    if (v62 >= 2)
    {
      if (v62 == 2)
      {
        *(void *)((char *)v22 + v61) = 2;
      }
      else
      {
        *(void *)((char *)v22 + v61) = v62;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(void *)((char *)v22 + v61) = v62;
    }
    uint64_t v63 = v86[14];
    uint64_t v64 = *(void **)((char *)v87 + v63);
    *(void *)((char *)v22 + v63) = v64;
    uint64_t v65 = *(void (**)(void *, void, uint64_t, int *))(v85 + 56);
    id v66 = v64;
    v65(v22, 0, 1, v86);
  }
  uint64_t v67 = v31[13];
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (uint64_t *)(v32 + v67);
  uint64_t v70 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v71 = *(void *)(v70 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v74 = *v69;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v75 = v69[1];
      *uint64_t v68 = v74;
      v68[1] = v75;
      uint64_t v76 = type metadata accessor for GenericDataVisualization();
      uint64_t v77 = *(int *)(v76 + 20);
      uint64_t v78 = (char *)v68 + v77;
      int v89 = v31;
      uint64_t v79 = (char *)v69 + v77;
      swift_bridgeObjectRetain();
      uint64_t v80 = v79;
      uint64_t v31 = v89;
      v90(v78, v80, v91);
      *(void *)((char *)v68 + *(int *)(v76 + 24)) = *(uint64_t *)((char *)v69 + *(int *)(v76 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *uint64_t v68 = v74;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  *(unsigned char *)(a1 + v31[14]) = *(unsigned char *)(v32 + v31[14]);
  return a1;
}

uint64_t assignWithCopy for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = (_OWORD *)(a1 + 24);
  unint64_t v8 = (_OWORD *)(a2 + 24);
  unint64_t v9 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) < 0x11uLL)
  {
    if (v9 >= 0x11)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 < 0x11)
  {
    sub_1C01A7564(a1 + 24);
LABEL_6:
    *uint64_t v7 = *v8;
    goto LABEL_8;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24);
  v141(v11, v12, v13);
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v147 = v14;
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v11) = v18(a1 + v15, 1, v13);
  uint64_t v150 = v13;
  int v19 = v18((uint64_t)v17, 1, v13);
  if (v11)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v16, v17, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
LABEL_13:
    sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  v141((uint64_t)v16, (uint64_t)v17, v13);
LABEL_14:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  uint64_t v21 = a3[12];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for FeedHeadline(0);
  uint64_t v143 = *(void *)(v24 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
  int v26 = v25(v22, 1, v24);
  int v27 = v25(v23, 1, v24);
  if (!v26)
  {
    if (v27)
    {
      sub_1BFECFEB0(v22, type metadata accessor for FeedHeadline);
      goto LABEL_20;
    }
    uint64_t v136 = a3;
    *(void *)uint64_t v22 = *(void *)v23;
    *(void *)(v22 + 8) = *(void *)(v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void *)(v23 + 16);
    *(unsigned char *)(v22 + 24) = *(unsigned char *)(v23 + 24);
    *(void *)(v22 + 16) = v39;
    *(void *)(v22 + 32) = *(void *)(v23 + 32);
    *(void *)(v22 + 40) = *(void *)(v23 + 40);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(void *)(v22 + 48) = *(void *)(v23 + 48);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    *(unsigned char *)(v22 + 56) = *(unsigned char *)(v23 + 56);
    uint64_t v138 = (int *)v24;
    uint64_t v140 = v23;
    uint64_t v40 = *(int *)(v24 + 40);
    uint64_t v41 = (unsigned char *)(v22 + v40);
    uint64_t v42 = (unsigned char *)(v23 + v40);
    *uint64_t v41 = *v42;
    v41[1] = v42[1];
    uint64_t v144 = (int *)type metadata accessor for FeedHeadline.State(0);
    uint64_t v43 = v144[6];
    uint64_t v132 = v41;
    uint64_t v44 = &v41[v43];
    uint64_t v45 = &v42[v43];
    id v46 = (int *)type metadata accessor for SharedItem();
    uint64_t v130 = *((void *)v46 - 1);
    uint64_t v47 = *(uint64_t (**)(char *, uint64_t, int *))(v130 + 48);
    uint64_t v134 = (uint64_t)v44;
    LODWORD(v44) = v47(v44, 1, v46);
    int v48 = v47(v45, 1, v46);
    if (v44)
    {
      if (v48)
      {
        size_t v49 = *(void *)(*(void *)(type metadata accessor for FeedItem.SharedState(0) - 8) + 64);
        id v50 = (void *)v134;
LABEL_40:
        memcpy(v50, v45, v49);
        goto LABEL_43;
      }
      uint64_t v74 = sub_1C151631C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v134, v45, v74);
      *(unsigned char *)(v134 + v46[5]) = v45[v46[5]];
      uint64_t v75 = v46[6];
      uint64_t v76 = *(void **)&v45[v75];
      *(void *)(v134 + v75) = v76;
      uint64_t v77 = v46[7];
      uint64_t v78 = v134 + v77;
      uint64_t v79 = &v45[v77];
      uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v147 + 16);
      id v81 = v76;
      v80(v78, v79, v150);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v130 + 56))(v134, 0, 1, v46);
    }
    else
    {
      if (v48)
      {
        sub_1BFECFEB0(v134, (uint64_t (*)(void))type metadata accessor for SharedItem);
        size_t v49 = *(void *)(*(void *)(type metadata accessor for FeedItem.SharedState(0) - 8) + 64);
        id v50 = (void *)v134;
        goto LABEL_40;
      }
      uint64_t v82 = sub_1C151631C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v82 - 8) + 24))(v134, v45, v82);
      *(unsigned char *)(v134 + v46[5]) = v45[v46[5]];
      uint64_t v83 = v46[6];
      uint64_t v84 = *(void **)&v45[v83];
      uint64_t v85 = *(void **)(v134 + v83);
      *(void *)(v134 + v83) = v84;
      id v86 = v84;

      v141(v134 + v46[7], (uint64_t)&v45[v46[7]], v150);
    }
LABEL_43:
    v132[v144[7]] = v42[v144[7]];
    v132[v144[8]] = v42[v144[8]];
    v132[v144[9]] = v42[v144[9]];
    v132[v144[10]] = v42[v144[10]];
    uint64_t v87 = v138[11];
    uint64_t v88 = (void *)(v22 + v87);
    int v89 = (void *)(v140 + v87);
    uint64_t v90 = sub_1C151D2DC();
    uint64_t v91 = *(void *)(v90 - 8);
    uint64_t v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
    int v93 = v92(v88, 1, v90);
    int v94 = v92(v89, 1, v90);
    if (v93)
    {
      if (!v94)
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v94)
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 24))(v88, v89, v90);
LABEL_49:
        a3 = v136;
        uint64_t v96 = v138[12];
        uint64_t v97 = (void *)(v22 + v96);
        uint64_t v98 = (void *)(v140 + v96);
        unint64_t v99 = *(void *)(v22 + v96 + 8);
        unint64_t v100 = *(void *)(v140 + v96 + 8);
        if (v99 >= 0x11)
        {
          if (v100 >= 0x11)
          {
            *uint64_t v97 = *v98;
            v97[1] = v98[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_56:
            uint64_t v101 = v138[13];
            uint64_t v102 = (void *)(v22 + v101);
            unint64_t v103 = *(void *)(v22 + v101);
            unint64_t v104 = *(void *)(v140 + v101);
            if (v103 == 2)
            {
              if (v104 < 2)
              {
LABEL_58:
                *uint64_t v102 = v104;
LABEL_71:
                uint64_t v106 = v138[14];
                uint64_t v107 = *(void **)(v22 + v106);
                uint64_t v108 = *(void **)(v140 + v106);
                *(void *)(v22 + v106) = v108;
                id v109 = v108;

                goto LABEL_72;
              }
              if (v104 == 2)
              {
                uint64_t v105 = 2;
LABEL_70:
                *uint64_t v102 = v105;
                goto LABEL_71;
              }
LABEL_65:
              *uint64_t v102 = v104;
              swift_unknownObjectRetain();
              goto LABEL_71;
            }
            if (v104 == 2)
            {
              sub_1C01A75B8(v22 + v101);
            }
            else
            {
              if (v103 < 2)
              {
                if (v104 < 2) {
                  goto LABEL_58;
                }
                goto LABEL_65;
              }
              if (v104 >= 2)
              {
                *uint64_t v102 = v104;
                swift_unknownObjectRetain();
                swift_unknownObjectRelease();
                goto LABEL_71;
              }
              swift_unknownObjectRelease();
            }
            uint64_t v105 = *(void *)(v140 + v101);
            goto LABEL_70;
          }
          sub_1C01A7564((uint64_t)v97);
        }
        else if (v100 >= 0x11)
        {
          *uint64_t v97 = *v98;
          v97[1] = v98[1];
          swift_bridgeObjectRetain();
          goto LABEL_56;
        }
        *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
        goto LABEL_56;
      }
      (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    }
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v88, v89, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_49;
  }
  if (v27)
  {
LABEL_20:
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
    memcpy((void *)v22, (const void *)v23, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_72;
  }
  *(void *)uint64_t v22 = *(void *)v23;
  uint64_t v139 = v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  uint64_t v28 = *(void *)(v23 + 16);
  *(unsigned char *)(v22 + 24) = *(unsigned char *)(v23 + 24);
  *(void *)(v22 + 16) = v28;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = *(void *)(v23 + 40);
  *(void *)(v22 + 48) = *(void *)(v23 + 48);
  *(unsigned char *)(v22 + 56) = *(unsigned char *)(v23 + 56);
  uint64_t v135 = a3;
  uint64_t v137 = (int *)v24;
  uint64_t v29 = *(int *)(v24 + 40);
  uint64_t v30 = (unsigned char *)(v22 + v29);
  uint64_t v31 = v23 + v29;
  *uint64_t v30 = *(unsigned char *)(v23 + v29);
  v30[1] = *(unsigned char *)(v23 + v29 + 1);
  uint64_t v32 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v33 = *(int *)(v32 + 24);
  uint64_t v131 = (int *)v32;
  __dst = &v30[v33];
  uint64_t v34 = (char *)(v31 + v33);
  uint64_t v35 = (int *)type metadata accessor for SharedItem();
  uint64_t v129 = *((void *)v35 - 1);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, int *))(v129 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v36(v34, 1, v35))
  {
    uint64_t v37 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    uint64_t v51 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(__dst, v34, v51);
    __dst[v35[5]] = v34[v35[5]];
    uint64_t v52 = v35[6];
    uint64_t v53 = *(void **)&v34[v52];
    *(void *)&__dst[v52] = v53;
    uint64_t v54 = v35[7];
    uint64_t v55 = &__dst[v54];
    uint64_t v56 = &v34[v54];
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v147 + 16);
    id v58 = v53;
    v57(v55, v56, v150);
    (*(void (**)(char *, void, uint64_t, int *))(v129 + 56))(__dst, 0, 1, v35);
  }
  a3 = v135;
  v30[v131[7]] = *(unsigned char *)(v31 + v131[7]);
  v30[v131[8]] = *(unsigned char *)(v31 + v131[8]);
  v30[v131[9]] = *(unsigned char *)(v31 + v131[9]);
  v30[v131[10]] = *(unsigned char *)(v31 + v131[10]);
  uint64_t v59 = *(int *)(v24 + 44);
  unint64_t v60 = (void *)(v22 + v59);
  uint64_t v61 = (const void *)(v139 + v59);
  uint64_t v62 = sub_1C151D2DC();
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  uint64_t v65 = v137[12];
  id v66 = (void *)(v22 + v65);
  uint64_t v67 = (void *)(v139 + v65);
  if (v67[1] >= 0x11uLL)
  {
    *id v66 = *v67;
    v66[1] = v67[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)id v66 = *(_OWORD *)v67;
  }
  uint64_t v68 = v137[13];
  unint64_t v69 = *(void *)(v139 + v68);
  if (v69 >= 2)
  {
    if (v69 == 2)
    {
      *(void *)(v22 + v68) = 2;
    }
    else
    {
      *(void *)(v22 + v68) = v69;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(void *)(v22 + v68) = v69;
  }
  uint64_t v70 = v137[14];
  uint64_t v71 = *(void **)(v139 + v70);
  *(void *)(v22 + v70) = v71;
  uint64_t v72 = *(void (**)(uint64_t, void, uint64_t, int *))(v143 + 56);
  id v73 = v71;
  v72(v22, 0, 1, v137);
LABEL_72:
  uint64_t v110 = a3;
  uint64_t v111 = a3[13];
  uint64_t v112 = (void *)(a1 + v111);
  uint64_t v113 = (void *)(a2 + v111);
  uint64_t v114 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v115 = *(void *)(v114 - 8);
  uint64_t v116 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v115 + 48);
  int v117 = v116(v112, 1, v114);
  int v118 = v116(v113, 1, v114);
  if (v117)
  {
    if (!v118)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v112 = *v113;
      if (EnumCaseMultiPayload == 1)
      {
        v112[1] = v113[1];
        uint64_t v120 = type metadata accessor for GenericDataVisualization();
        uint64_t v121 = *(int *)(v120 + 20);
        uint64_t v142 = (char *)v113 + v121;
        uint64_t v145 = (char *)v112 + v121;
        uint64_t v148 = *(void (**)(char *, char *, uint64_t))(v147 + 16);
        swift_bridgeObjectRetain();
        v148(v145, v142, v150);
        *(void *)((char *)v112 + *(int *)(v120 + 24)) = *(void *)((char *)v113 + *(int *)(v120 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
      goto LABEL_85;
    }
LABEL_78:
    sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v112, v113, *(void *)(*(void *)(v122 - 8) + 64));
LABEL_85:
    uint64_t v123 = v110;
    goto LABEL_86;
  }
  if (v118)
  {
    sub_1BFECFEB0((uint64_t)v112, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_78;
  }
  uint64_t v123 = v110;
  if (a1 != a2)
  {
    sub_1BFECFEB0((uint64_t)v112, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    int v124 = swift_getEnumCaseMultiPayload();
    *uint64_t v112 = *v113;
    if (v124 == 1)
    {
      v112[1] = v113[1];
      uint64_t v125 = type metadata accessor for GenericDataVisualization();
      uint64_t v126 = *(int *)(v125 + 20);
      uint64_t v127 = (char *)v113 + v126;
      uint64_t v146 = (char *)v112 + v126;
      uint64_t v149 = *(void (**)(char *, char *, uint64_t))(v147 + 16);
      swift_bridgeObjectRetain();
      v149(v146, v127, v150);
      uint64_t v123 = v110;
      *(void *)((char *)v112 + *(int *)(v125 + 24)) = *(void *)((char *)v113 + *(int *)(v125 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_86:
  *(unsigned char *)(a1 + v123[14]) = *(unsigned char *)(a2 + v123[14]);
  return a1;
}

uint64_t initializeWithTake for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = v3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v56 = (void (*)(char *, char *, uint64_t))v12;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v14, (uint64_t)v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = v3[11];
  *(void *)(a1 + v3[10]) = *(void *)(a2 + v3[10]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = v3[12];
  int v19 = (_OWORD *)(a1 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v52 = v22;
    uint64_t v53 = v10;
    uint64_t v54 = v3;
    *int v19 = *v20;
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((unsigned char *)v19 + 24) = *((unsigned char *)v20 + 24);
    *((void *)v19 + 4) = *((void *)v20 + 4);
    *(_OWORD *)((char *)v19 + 40) = *(_OWORD *)((char *)v20 + 40);
    *((unsigned char *)v19 + 56) = *((unsigned char *)v20 + 56);
    uint64_t v24 = v21[10];
    uint64_t v25 = (char *)v19 + v24;
    int v26 = (char *)v20 + v24;
    *uint64_t v25 = *((unsigned char *)v20 + v24);
    v25[1] = *((unsigned char *)v20 + v24 + 1);
    int v27 = (int *)type metadata accessor for FeedHeadline.State(0);
    uint64_t v28 = v27[6];
    __dst = &v25[v28];
    uint64_t v29 = &v26[v28];
    uint64_t v30 = (int *)type metadata accessor for SharedItem();
    uint64_t v51 = *((void *)v30 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v29, 1, v30))
    {
      uint64_t v31 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64));
      uint64_t v10 = v53;
    }
    else
    {
      uint64_t v32 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(__dst, v29, v32);
      __dst[v30[5]] = v29[v30[5]];
      *(void *)&__dst[v30[6]] = *(void *)&v29[v30[6]];
      uint64_t v33 = v30[7];
      uint64_t v34 = &v29[v33];
      uint64_t v10 = v53;
      v56(&__dst[v33], v34, v53);
      (*(void (**)(char *, void, uint64_t, int *))(v51 + 56))(__dst, 0, 1, v30);
    }
    v25[v27[7]] = v26[v27[7]];
    v25[v27[8]] = v26[v27[8]];
    v25[v27[9]] = v26[v27[9]];
    v25[v27[10]] = v26[v27[10]];
    uint64_t v35 = v21[11];
    uint64_t v36 = (char *)v19 + v35;
    uint64_t v37 = (char *)v20 + v35;
    uint64_t v38 = sub_1C151D2DC();
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    uint64_t v3 = v54;
    *(_OWORD *)((char *)v19 + v21[12]) = *(_OWORD *)((char *)v20 + v21[12]);
    uint64_t v41 = v21[13];
    uint64_t v42 = *(void *)((char *)v20 + v41);
    if (v42 == 2) {
      uint64_t v42 = 2;
    }
    *(void *)((char *)v19 + v41) = v42;
    *(void *)((char *)v19 + v21[14]) = *(void *)((char *)v20 + v21[14]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v52 + 56))(v19, 0, 1, v21);
  }
  uint64_t v43 = v3[13];
  uint64_t v44 = (_OWORD *)(a1 + v43);
  uint64_t v45 = (_OWORD *)(a2 + v43);
  uint64_t v46 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v44 = *v45;
      uint64_t v49 = type metadata accessor for GenericDataVisualization();
      v56((char *)v44 + *(int *)(v49 + 20), (char *)v45 + *(int *)(v49 + 20), v10);
      *(void *)((char *)v44 + *(int *)(v49 + 24)) = *(void *)((char *)v45 + *(int *)(v49 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v44, v45, *(void *)(v47 + 64));
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  *(unsigned char *)(a1 + v3[14]) = *(unsigned char *)(a2 + v3[14]);
  return a1;
}

uint64_t assignWithTake for FeedWebEmbed(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (_OWORD *)(a1 + 24);
  uint64_t v8 = (_OWORD *)(a2 + 24);
  if (*(void *)(a1 + 32) < 0x11uLL) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 32);
  if (v9 < 0x11)
  {
    sub_1C01A7564((uint64_t)v7);
LABEL_4:
    *uint64_t v7 = *v8;
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)v8;
  *(void *)(a1 + 32) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1C1515FDC();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v106(v12, v13, v14);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v109 = v15;
  int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v12) = v19(a1 + v16, 1, v14);
  uint64_t v111 = v14;
  int v20 = v19((uint64_t)v18, 1, v14);
  if (v12)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v17, v18, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
LABEL_11:
    sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_12;
  }
  v106((uint64_t)v17, (uint64_t)v18, v14);
LABEL_12:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  uint64_t v22 = a3[12];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = type metadata accessor for FeedHeadline(0);
  uint64_t v107 = *(void *)(v25 - 8);
  int v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
  int v27 = v26(v23, 1, v25);
  uint64_t v110 = (int *)v25;
  int v28 = v26(v24, 1, v25);
  if (!v27)
  {
    if (v28)
    {
      sub_1BFECFEB0(v23, type metadata accessor for FeedHeadline);
      goto LABEL_18;
    }
    unint64_t v103 = a3;
    uint64_t v40 = *(void *)(v24 + 8);
    *(void *)uint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = v40;
    swift_bridgeObjectRelease();
    *(void *)(v23 + 16) = *(void *)(v24 + 16);
    *(unsigned char *)(v23 + 24) = *(unsigned char *)(v24 + 24);
    uint64_t v41 = *(void *)(v24 + 40);
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
    *(void *)(v23 + 40) = v41;
    swift_unknownObjectRelease();
    *(void *)(v23 + 48) = *(void *)(v24 + 48);
    swift_unknownObjectRelease();
    *(unsigned char *)(v23 + 56) = *(unsigned char *)(v24 + 56);
    uint64_t v42 = *(int *)(v25 + 40);
    uint64_t v43 = (unsigned char *)(v23 + v42);
    uint64_t v44 = v24 + v42;
    *uint64_t v43 = *(unsigned char *)(v24 + v42);
    v43[1] = *(unsigned char *)(v24 + v42 + 1);
    uint64_t v101 = (int *)type metadata accessor for FeedHeadline.State(0);
    uint64_t v45 = v101[6];
    uint64_t v108 = v43;
    uint64_t v46 = &v43[v45];
    uint64_t v99 = v44;
    uint64_t v47 = (char *)(v44 + v45);
    uint64_t v48 = (int *)type metadata accessor for SharedItem();
    uint64_t v98 = *((void *)v48 - 1);
    uint64_t v49 = *(uint64_t (**)(char *, uint64_t, int *))(v98 + 48);
    uint64_t v100 = (uint64_t)v46;
    LODWORD(v46) = v49(v46, 1, v48);
    int v50 = v49(v47, 1, v48);
    uint64_t v105 = v24;
    if (v46)
    {
      if (v50)
      {
        size_t v51 = *(void *)(*(void *)(type metadata accessor for FeedItem.SharedState(0) - 8) + 64);
        uint64_t v52 = (void *)v100;
LABEL_32:
        memcpy(v52, v47, v51);
        goto LABEL_35;
      }
      uint64_t v62 = sub_1C151631C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v100, v47, v62);
      *(unsigned char *)(v100 + v48[5]) = v47[v48[5]];
      *(void *)(v100 + v48[6]) = *(void *)&v47[v48[6]];
      (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v100 + v48[7], &v47[v48[7]], v111);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v98 + 56))(v100, 0, 1, v48);
    }
    else
    {
      if (v50)
      {
        sub_1BFECFEB0(v100, (uint64_t (*)(void))type metadata accessor for SharedItem);
        size_t v51 = *(void *)(*(void *)(type metadata accessor for FeedItem.SharedState(0) - 8) + 64);
        uint64_t v52 = (void *)v100;
        goto LABEL_32;
      }
      uint64_t v63 = sub_1C151631C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 40))(v100, v47, v63);
      *(unsigned char *)(v100 + v48[5]) = v47[v48[5]];
      uint64_t v64 = v48[6];
      uint64_t v65 = *(void **)(v100 + v64);
      *(void *)(v100 + v64) = *(void *)&v47[v64];

      v106(v100 + v48[7], (uint64_t)&v47[v48[7]], v111);
    }
LABEL_35:
    v108[v101[7]] = *(unsigned char *)(v99 + v101[7]);
    v108[v101[8]] = *(unsigned char *)(v99 + v101[8]);
    v108[v101[9]] = *(unsigned char *)(v99 + v101[9]);
    v108[v101[10]] = *(unsigned char *)(v99 + v101[10]);
    uint64_t v66 = v110[11];
    uint64_t v67 = (void *)(v23 + v66);
    uint64_t v68 = (void *)(v105 + v66);
    uint64_t v69 = sub_1C151D2DC();
    uint64_t v70 = *(void *)(v69 - 8);
    uint64_t v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
    int v72 = v71(v67, 1, v69);
    int v73 = v71(v68, 1, v69);
    if (v72)
    {
      if (!v73)
      {
        (*(void (**)(void *, void *, uint64_t))(v70 + 32))(v67, v68, v69);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v73)
      {
        (*(void (**)(void *, void *, uint64_t))(v70 + 40))(v67, v68, v69);
LABEL_41:
        a3 = v103;
        uint64_t v75 = v110[12];
        uint64_t v76 = (void *)(v23 + v75);
        uint64_t v77 = (void *)(v105 + v75);
        if (*(void *)(v23 + v75 + 8) >= 0x11uLL)
        {
          unint64_t v78 = v77[1];
          if (v78 >= 0x11)
          {
            *uint64_t v76 = *v77;
            v76[1] = v78;
            swift_bridgeObjectRelease();
LABEL_46:
            uint64_t v79 = v110[13];
            uint64_t v80 = (unint64_t *)(v23 + v79);
            unint64_t v81 = *(void *)(v23 + v79);
            unint64_t v82 = *(void *)(v105 + v79);
            if (v81 == 2)
            {
              if (v82 == 2) {
                unint64_t v82 = 2;
              }
              goto LABEL_57;
            }
            if (v82 == 2)
            {
              sub_1C01A75B8(v23 + v79);
            }
            else
            {
              if (v81 < 2) {
                goto LABEL_57;
              }
              if (v82 >= 2)
              {
                *uint64_t v80 = v82;
                swift_unknownObjectRelease();
                goto LABEL_58;
              }
              swift_unknownObjectRelease();
            }
            unint64_t v82 = *(void *)(v105 + v79);
LABEL_57:
            *uint64_t v80 = v82;
LABEL_58:
            uint64_t v83 = v110[14];
            uint64_t v84 = *(void **)(v23 + v83);
            *(void *)(v23 + v83) = *(void *)(v105 + v83);

            goto LABEL_59;
          }
          sub_1C01A7564((uint64_t)v76);
        }
        *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
        goto LABEL_46;
      }
      (*(void (**)(void *, uint64_t))(v70 + 8))(v67, v69);
    }
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v67, v68, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_41;
  }
  if (v28)
  {
LABEL_18:
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
    memcpy((void *)v23, (const void *)v24, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_59;
  }
  uint64_t v102 = a3;
  uint64_t v104 = v24;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  *(unsigned char *)(v23 + 24) = *(unsigned char *)(v24 + 24);
  *(void *)(v23 + 32) = *(void *)(v24 + 32);
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v24 + 40);
  *(unsigned char *)(v23 + 56) = *(unsigned char *)(v24 + 56);
  uint64_t v29 = *(int *)(v25 + 40);
  uint64_t v30 = (unsigned char *)(v23 + v29);
  uint64_t v31 = v24 + v29;
  *uint64_t v30 = *(unsigned char *)(v24 + v29);
  v30[1] = *(unsigned char *)(v24 + v29 + 1);
  uint64_t v32 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v33 = v32[6];
  uint64_t v34 = &v30[v33];
  uint64_t v35 = (char *)(v31 + v33);
  uint64_t v36 = (int *)type metadata accessor for SharedItem();
  uint64_t v37 = *((void *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v53 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v34, v35, v53);
    v34[v36[5]] = v35[v36[5]];
    *(void *)&v34[v36[6]] = *(void *)&v35[v36[6]];
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v34[v36[7]], &v35[v36[7]], v111);
    (*(void (**)(char *, void, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
  }
  v30[v32[7]] = *(unsigned char *)(v31 + v32[7]);
  v30[v32[8]] = *(unsigned char *)(v31 + v32[8]);
  v30[v32[9]] = *(unsigned char *)(v31 + v32[9]);
  v30[v32[10]] = *(unsigned char *)(v31 + v32[10]);
  uint64_t v54 = v110[11];
  uint64_t v55 = (void *)(v23 + v54);
  a3 = v102;
  uint64_t v56 = (const void *)(v104 + v54);
  uint64_t v57 = sub_1C151D2DC();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    sub_1BFECA32C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v58 + 32))(v55, v56, v57);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  *(_OWORD *)(v23 + v110[12]) = *(_OWORD *)(v104 + v110[12]);
  uint64_t v60 = v110[13];
  uint64_t v61 = *(void *)(v104 + v60);
  if (v61 == 2) {
    uint64_t v61 = 2;
  }
  *(void *)(v23 + v60) = v61;
  *(void *)(v23 + v110[14]) = *(void *)(v104 + v110[14]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v107 + 56))(v23, 0, 1, v110);
LABEL_59:
  uint64_t v85 = a3[13];
  id v86 = (char *)(a1 + v85);
  uint64_t v87 = (char *)(a2 + v85);
  uint64_t v88 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  int v91 = v90(v86, 1, v88);
  int v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (!v92)
    {
      if (a1 == a2) {
        goto LABEL_72;
      }
      sub_1BFECFEB0((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)id v86 = *(_OWORD *)v87;
        uint64_t v96 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v86[*(int *)(v96 + 20)], &v87[*(int *)(v96 + 20)], v111);
        *(void *)&v86[*(int *)(v96 + 24)] = *(void *)&v87[*(int *)(v96 + 24)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_72;
      }
      size_t v95 = *(void *)(v89 + 64);
      goto LABEL_66;
    }
    sub_1BFECFEB0((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_65:
    sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    size_t v95 = *(void *)(*(void *)(v94 - 8) + 64);
LABEL_66:
    memcpy(v86, v87, v95);
    goto LABEL_72;
  }
  if (v92) {
    goto LABEL_65;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)id v86 = *(_OWORD *)v87;
    uint64_t v93 = type metadata accessor for GenericDataVisualization();
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v86[*(int *)(v93 + 20)], &v87[*(int *)(v93 + 20)], v111);
    *(void *)&v86[*(int *)(v93 + 24)] = *(void *)&v87[*(int *)(v93 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v86, v87, *(void *)(v89 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
LABEL_72:
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1C0BCC8F4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1C1515FDC();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[8];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_11;
  }
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_11;
  }
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[13];
  return v16(v18, a2, v17);
}

uint64_t sub_1C0BCCB48(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1C1515FDC();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  sub_1BFECA32C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  sub_1BFECA32C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_9;
  }
  sub_1BFECA32C(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[13];
  return v16(v18, a2, a2, v17);
}

void sub_1C0BCCD9C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1BFECA32C(255, a3, a4, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0BCCE14(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C0BCCD9C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C0BCCE74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSplitBackgroundSide.init(from:)(a1, a2);
}

uint64_t sub_1C0BCCE8C(void *a1)
{
  return FormatSplitBackgroundSide.encode(to:)(a1);
}

uint64_t _s8NewsFeed25FormatSplitBackgroundSideO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  int v10 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v12 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  char v19 = *(unsigned char *)(a2 + 64);
  v58[0] = *(void *)a1;
  v58[1] = v2;
  v58[2] = v4;
  v58[3] = v5;
  v58[4] = v6;
  v58[5] = v7;
  v58[6] = v8;
  v58[7] = v9;
  char v59 = v10;
  uint64_t v60 = v12;
  uint64_t v61 = v11;
  uint64_t v62 = v14;
  uint64_t v63 = v13;
  uint64_t v64 = v16;
  uint64_t v65 = v15;
  uint64_t v66 = v18;
  uint64_t v67 = v17;
  char v68 = v19;
  if (v10 != 1)
  {
    if ((v19 & 1) == 0)
    {
      v57[0] = v3;
      v56[0] = v12;
      uint64_t v30 = v12;
      uint64_t v43 = v12;
      uint64_t v44 = v16;
      uint64_t v31 = v4;
      uint64_t v32 = v14;
      uint64_t v47 = v14;
      uint64_t v33 = v5;
      uint64_t v50 = v6;
      uint64_t v51 = v8;
      uint64_t v34 = v16;
      uint64_t v35 = v18;
      uint64_t v40 = v18;
      uint64_t v36 = v7;
      uint64_t v37 = v9;
      uint64_t v53 = v9;
      uint64_t v55 = v2;
      uint64_t v38 = v2;
      sub_1C03A98B4(v30, v11, v32, v13, v34, v15, v35, v17, 0);
      sub_1C03A98B4(v3, v38, v31, v33, v50, v36, v51, v37, 0);
      sub_1C03A98B4(v3, v55, v31, v33, v50, v36, v51, v37, 0);
      sub_1C03A98B4(v43, v11, v47, v13, v44, v15, v40, v17, 0);
      char v29 = static FormatColor.== infix(_:_:)(v57, v56);
      sub_1C0BCD608((uint64_t)v58);
      sub_1C03596EC(v43, v11, v47, v13, v44, v15, v40, v17, 0);
      sub_1C03596EC(v3, v55, v31, v33, v50, v36, v51, v53, 0);
      return v29 & 1;
    }
    goto LABEL_5;
  }
  if ((v19 & 1) == 0)
  {
LABEL_5:
    sub_1C03A98B4(v3, v2, v4, v5, v6, v7, v8, v9, v10);
    sub_1C03A98B4(v12, v11, v14, v13, v16, v15, v18, v17, v19);
    sub_1C0BCD608((uint64_t)v58);
    char v29 = 0;
    return v29 & 1;
  }
  v57[0] = v3;
  v57[1] = v2;
  v57[2] = v4;
  v57[3] = v5;
  v57[4] = v6;
  v57[5] = v7;
  v57[6] = v8;
  v57[7] = v9;
  v56[0] = v12;
  v56[1] = v11;
  v56[2] = v14;
  v56[3] = v13;
  v56[4] = v16;
  v56[5] = v15;
  v56[6] = v18;
  v56[7] = v17;
  uint64_t v20 = v11;
  uint64_t v21 = v4;
  uint64_t v41 = v17;
  uint64_t v42 = v11;
  uint64_t v22 = v5;
  uint64_t v23 = v13;
  uint64_t v45 = v15;
  uint64_t v46 = v13;
  uint64_t v24 = v6;
  uint64_t v48 = v7;
  uint64_t v25 = v15;
  uint64_t v26 = v17;
  uint64_t v27 = v8;
  uint64_t v52 = v9;
  uint64_t v54 = v2;
  uint64_t v28 = v2;
  sub_1C03A98B4(v12, v20, v14, v23, v16, v25, v18, v26, 1);
  uint64_t v49 = v21;
  sub_1C03A98B4(v3, v28, v21, v22, v24, v48, v27, v52, 1);
  sub_1C03A98B4(v3, v54, v21, v22, v24, v48, v27, v52, 1);
  sub_1C03A98B4(v12, v42, v14, v46, v16, v45, v18, v41, 1);
  char v29 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)v57, (uint64_t)v56);
  sub_1C0BCD608((uint64_t)v58);
  sub_1C03596EC(v12, v42, v14, v46, v16, v45, v18, v41, 1);
  sub_1C03596EC(v3, v54, v49, v22, v24, v48, v27, v52, 1);
  return v29 & 1;
}

unint64_t sub_1C0BCD24C(uint64_t a1)
{
  unint64_t result = sub_1C0BCD274();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BCD274()
{
  unint64_t result = qword_1EA1A4700;
  if (!qword_1EA1A4700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4700);
  }
  return result;
}

unint64_t sub_1C0BCD2C8(void *a1)
{
  a1[1] = sub_1C08686E0();
  a1[2] = sub_1C0904FB8();
  unint64_t result = sub_1C0BCD300();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BCD300()
{
  unint64_t result = qword_1EA1A4708;
  if (!qword_1EA1A4708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4708);
  }
  return result;
}

uint64_t destroy for FormatSplitBackgroundSide(uint64_t a1)
{
  return sub_1C03596EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatSplitBackgroundSide(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1C03A98B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for FormatSplitBackgroundSide(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1C03A98B4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_1C03596EC(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for FormatSplitBackgroundSide(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_1C03596EC(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSplitBackgroundSide(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatSplitBackgroundSide(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0BCD5EC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSplitBackgroundSide()
{
  return &type metadata for FormatSplitBackgroundSide;
}

uint64_t sub_1C0BCD608(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_1C03596EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  sub_1C03596EC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

BOOL sub_1C0BCD6B0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v12 = *(void *)v6;
  uint64_t v13 = *(unsigned __int8 *)(v6 + 8);
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v14 = sub_1BFF493E4(v21, v12);
  swift_bridgeObjectRelease();
  swift_release();
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x1C0BCD878);
  }
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  double Width = CGRectGetWidth(v22);
  sub_1C0BCD8AC((uint64_t)v14, a6, Width);
  double v17 = v16;
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.width = a3;
  v23.size.height = a4;
  double Height = CGRectGetHeight(v23);
  switch(v13)
  {
    case 1:
    case 7:
      BOOL result = Height != v17;
      break;
    case 2:
    case 8:
      BOOL result = Height < v17;
      break;
    case 3:
    case 9:
      BOOL v20 = Height > v17;
      goto LABEL_13;
    case 4:
    case 10:
      BOOL result = v17 < Height;
      break;
    case 5:
    case 11:
      BOOL v20 = v17 > Height;
LABEL_13:
      BOOL result = !v20;
      break;
    default:
      BOOL result = Height == v17;
      break;
  }
  return result;
}

void sub_1C0BCD8AC(int64_t a1, uint64_t *a2, double a3)
{
  if (a1 >= 1)
  {
    uint64_t v33 = *(void *)(v3 + 16);
    int v31 = *(unsigned __int8 *)(v3 + 24);
    uint64_t v34 = MEMORY[0x1E4FBC860];
    uint64_t v7 = sub_1BFF661B8(0, a1, 0);
    BOOL v8 = 0;
    uint64_t v9 = 1;
    int64_t v10 = a1;
    while (1)
    {
      if (v8) {
        goto LABEL_22;
      }
      unint64_t v12 = *(void *)(v34 + 16);
      unint64_t v11 = *(void *)(v34 + 24);
      if (v12 >= v11 >> 1) {
        uint64_t v7 = sub_1BFF661B8(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v34 + 16) = v12 + 1;
      uint64_t v13 = v34 + 16 * v12;
      *(void *)(v13 + 32) = 87;
      *(void *)(v13 + 40) = 0xE100000000000000;
      BOOL v8 = v9 == a1;
      if (v9 == a1)
      {
        uint64_t v9 = 0;
      }
      else if (__OFADD__(v9++, 1))
      {
        __break(1u);
LABEL_18:
        uint64_t v26 = (void *)v7;
        swift_release();
        sub_1BFF630AC((uint64_t)v35);
        swift_bridgeObjectRelease();
        objc_msgSend(v26, sel_boundingRectWithSize_options_context_, 33, 0, a3, 100000.0);
        if (v31) {
          CGRectIntegral(*(CGRect *)&v27);
        }
        swift_release();

        return;
      }
      if (!--v10)
      {
        sub_1BFED9C20();
        sub_1BFE99E40();
        uint64_t v15 = sub_1C151E55C();
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        uint64_t v18 = (uint64_t *)(*(uint64_t *)((char *)a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                        + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        uint64_t v19 = *v18;
        uint64_t v20 = v18[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = v33;
        uint64_t v22 = swift_retain();
        uint64_t v23 = sub_1BFF6B3AC(v22, (uint64_t)a2, v19, v20);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v24 = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v24) {
          uint64_t v21 = v24;
        }
        else {
          swift_retain();
        }
        swift_retain();
        swift_retain();
        uint64_t v25 = sub_1BFF636C0(v21, a2);
        sub_1BFF6492C(v25, v21, (objc_class *)a2, 18, v35);
        type metadata accessor for FormatAttributedString();
        swift_allocObject();
        swift_bridgeObjectRetain();
        sub_1BFF6364C((uint64_t)v35);
        sub_1BFF63168(v15, v17, (uint64_t)v35);
        sub_1BFF630AC((uint64_t)v35);
        sub_1BFF2BB80((uint64_t)a2);
        goto LABEL_18;
      }
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_1C0BCDC44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFrameExpressionLogicTextLines.init(from:)(a1, a2);
}

uint64_t sub_1C0BCDC5C(void *a1)
{
  return FormatFrameExpressionLogicTextLines.encode(to:)(a1);
}

uint64_t _s8NewsFeed35FormatFrameExpressionLogicTextLinesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v8 = sub_1C00DE998(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return 0;
  }
  unint64_t v9 = FormatOperator.rawValue.getter();
  uint64_t v11 = v10;
  if (v9 == FormatOperator.rawValue.getter() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (_s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v3, v6)) {
    return v4 ^ v7 ^ 1u;
  }
  else {
    return 0;
  }
}

unint64_t sub_1C0BCDDAC(uint64_t a1)
{
  unint64_t result = sub_1C0BCDDD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BCDDD4()
{
  unint64_t result = qword_1EA1A4710;
  if (!qword_1EA1A4710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4710);
  }
  return result;
}

unint64_t sub_1C0BCDE28(void *a1)
{
  a1[1] = sub_1C0867394();
  a1[2] = sub_1C0905C3C();
  unint64_t result = sub_1C0BCDE60();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BCDE60()
{
  unint64_t result = qword_1EA1A4718;
  if (!qword_1EA1A4718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4718);
  }
  return result;
}

uint64_t destroy for FormatFrameExpressionLogicTextLines()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FormatFrameExpressionLogicTextLines(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatFrameExpressionLogicTextLines(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for FormatFrameExpressionLogicTextLines(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatFrameExpressionLogicTextLines(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatFrameExpressionLogicTextLines(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFrameExpressionLogicTextLines()
{
  return &type metadata for FormatFrameExpressionLogicTextLines;
}

uint64_t SportsTaxonomyGraphHeader.title.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (v2)
  {
    if (v2 != 1)
    {
      swift_bridgeObjectRetain();
      return v1;
    }
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v4 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t v5 = swift_getObjCClassFromMetadata();
    id v4 = objc_msgSend(self, sel_bundleForClass_, v5);
  }
  uint64_t v1 = sub_1C1515B8C();

  return v1;
}

uint64_t SportsTaxonomyGraphHeader.identifier.getter()
{
  uint64_t v1 = v0[1];
  if (!v1) {
    return 0x74726F70536C6C61;
  }
  if (v1 == 1) {
    return 0x726F705365726F6DLL;
  }
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C0BCE288()
{
  uint64_t v1 = v0[1];
  if (!v1) {
    return 0x74726F70536C6C61;
  }
  if (v1 == 1) {
    return 0x726F705365726F6DLL;
  }
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t destroy for SportsTaxonomyGraphHeader(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s8NewsFeed25SportsTaxonomyGraphHeaderOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for SportsTaxonomyGraphHeader(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for SportsTaxonomyGraphHeader(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsTaxonomyGraphHeader(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

void *sub_1C0BCE4F0(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphHeader()
{
  return &type metadata for SportsTaxonomyGraphHeader;
}

Swift::Void __swiftcall FormatProgressCircleView.setUpCircleView(options:)(NewsFeed::FormatProgressCircleOptionsResolved *options)
{
  Swift::Bool clockwise = options->clockwise;
  Swift::Double stepPercentage = options->stepPercentage;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius) = options->radius;
  Swift::Double minPercentage = options->minPercentage;
  Swift::Double maxPercentage = options->maxPercentage;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise) = clockwise;
  uint64_t v6 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage;
  *(Swift::Double *)uint64_t v6 = stepPercentage;
  *(unsigned char *)(v6 + 8) = 0;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage) = minPercentage;
  *(Swift::Double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage) = maxPercentage;
  uint64_t v7 = (void *)**((void **)&unk_1E6416F60 + options->lineCap);
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap);
  *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap) = v7;
  id v8 = v7;
}

Swift::Void __swiftcall FormatProgressCircleView.setProgressColors(backgroundColor:strokeColor:)(UIColor backgroundColor, UIColor strokeColor)
{
  int v5 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer);
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_clearColor);
  id v8 = objc_msgSend(v7, sel_CGColor);

  objc_msgSend(v5, sel_setFillColor_, v8);
  id v9 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer);
  id v10 = objc_msgSend(v6, sel_clearColor);
  id v11 = objc_msgSend(v10, sel_CGColor);

  objc_msgSend(v9, sel_setFillColor_, v11);
  id v12 = [(objc_class *)backgroundColor.super.isa CGColor];
  objc_msgSend(v5, sel_setStrokeColor_, v12);

  id v13 = [(objc_class *)strokeColor.super.isa CGColor];
  objc_msgSend(v9, sel_setStrokeColor_, v13);
}

Swift::Void __swiftcall FormatProgressCircleView.updateCircleProgress(progress:)(Swift::Double progress)
{
  double v2 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage];
  if (v2 < progress)
  {
    double v2 = *(double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage];
    if (v2 > progress)
    {
      unint64_t v3 = (double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage];
      if (v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage + 8])
      {
        double v2 = progress;
      }
      else
      {
        double v4 = round(progress / *v3);
        if (*v3 > 0.0) {
          double v2 = *v3 * v4;
        }
        else {
          double v2 = progress;
        }
      }
    }
  }
  objc_msgSend(v1, sel_bounds);
  CGFloat v5 = CGRectGetWidth(v22) * 0.5;
  objc_msgSend(v1, sel_bounds);
  CGFloat v6 = CGRectGetHeight(v23) * 0.5;
  objc_msgSend(v1, sel_bounds);
  CGFloat Height = CGRectGetHeight(v24);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius;
  CGFloat v9 = Height * 0.5 - *(double *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius] * 0.5;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise;
  uint64_t v11 = v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise];
  id v12 = self;
  id v13 = objc_msgSend(v12, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, v11, v5, v6, v9, 0.0, 6.28318531);
  objc_msgSend(v1, sel_bounds);
  CGFloat v14 = CGRectGetWidth(v25) * 0.5;
  objc_msgSend(v1, sel_bounds);
  CGFloat v15 = CGRectGetHeight(v26) * 0.5;
  objc_msgSend(v1, sel_bounds);
  id v20 = objc_msgSend(v12, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, v1[v10], v14, v15, CGRectGetHeight(v27) * 0.5 - *(double *)&v1[v8] * 0.5, -1.57079633, v2 * 360.0 * 3.14159265 / 180.0 + -1.57079633);
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer];
  id v17 = objc_msgSend(v13, sel_CGPath);
  objc_msgSend(v16, sel_setPath_, v17);

  objc_msgSend(v16, sel_setLineWidth_, *(double *)&v1[v8]);
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer];
  id v19 = objc_msgSend(v20, sel_CGPath);
  objc_msgSend(v18, sel_setPath_, v19);

  objc_msgSend(v18, sel_setLineWidth_, *(double *)&v1[v8]);
  objc_msgSend(v18, sel_setLineCap_, *(void *)&v1[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap]);
}

uint64_t FormatProgressCircleView.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FormatProgressCircleView.identifier.setter(uint64_t a1, uint64_t a2)
{
  CGFloat v5 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
  swift_beginAccess();
  *CGFloat v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressCircleView.identifier.modify())()
{
  return j__swift_endAccess;
}

char *sub_1C0BCEB2C(double a1, double a2, double a3, double a4)
{
  CGFloat v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v4[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0xE000000000000000;
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer;
  id v13 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
  CGFloat v14 = v4;
  *(void *)&v5[v12] = objc_msgSend(v13, sel_init);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer;
  *(void *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius] = 0;
  v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise] = 0;
  uint64_t v16 = &v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage];
  *(void *)uint64_t v16 = 0;
  _OWORD v16[8] = 1;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage] = 0;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage] = 0x3FF0000000000000;
  id v17 = (void *)*MEMORY[0x1E4F3A450];
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap] = *MEMORY[0x1E4F3A450];
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_layerDelegate;
  id v19 = objc_allocWithZone((Class)type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate());
  id v20 = v17;
  *(void *)&v14[v18] = objc_msgSend(v19, sel_init);

  v30.receiver = v14;
  v30.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  id v22 = objc_msgSend(v21, sel_layer);
  uint64_t v23 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer;
  objc_msgSend(v22, sel_addSublayer_, *(void *)&v21[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer]);

  id v24 = objc_msgSend(v21, sel_layer);
  uint64_t v25 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer;
  objc_msgSend(v24, sel_addSublayer_, *(void *)&v21[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer]);

  CGRect v26 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_layerDelegate];
  objc_msgSend(*(id *)&v21[v23], sel_setDelegate_, v26);
  id v27 = *(id *)&v21[v25];
  id v28 = v26;
  objc_msgSend(v27, sel_setDelegate_, v28);

  return v21;
}

Swift::Void __swiftcall FormatProgressCircleView.layoutSubviews()()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_layer);
  id v2 = objc_msgSend(self, sel_clearColor);
  id v3 = objc_msgSend(v2, sel_CGColor);

  objc_msgSend(v1, sel_setBackgroundColor_, v3);
}

id sub_1C0BCF00C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id FormatProgressCircleView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0BCF0FC()
{
  id v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate()
{
  return self;
}

void sub_1C0BCF17C()
{
  id v1 = &v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier];
  void *v1 = 0;
  v1[1] = 0xE000000000000000;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_backgroundLayer;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_progressLayer;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_radius] = 0;
  v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_clockwise] = 0;
  objc_super v4 = &v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_stepPercentage];
  *(void *)objc_super v4 = 0;
  v4[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_minPercentage] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_maxPercentage] = 0x3FF0000000000000;
  CGFloat v5 = (void *)*MEMORY[0x1E4F3A450];
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_lineCap] = *MEMORY[0x1E4F3A450];
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_layerDelegate;
  id v7 = objc_allocWithZone((Class)type metadata accessor for FormatProgressCircleView.NonAnimatingLayerDelegate());
  id v8 = v5;
  *(void *)&v0[v6] = objc_msgSend(v7, sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0BCF2CC(uint64_t a1)
{
  sub_1C0178190();
  MEMORY[0x1F4188790](v3 - 8);
  CGFloat v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1EB93CA98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v5, v10, v9);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
  *(void *)id v8 = 0xD000000000000010;
  *((void *)v8 + 1) = 0x80000001C1611A50;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  *((void *)v8 + 2) = 3;
  char v8[40] = 0;
  *((void *)v8 + 6) = MEMORY[0x1E4FBC860];
  sub_1C0BCFA6C((uint64_t)v5, (uint64_t)&v8[*(int *)(v6 + 28)], (uint64_t (*)(void))sub_1C0178190);
  sub_1C0F49000((uint64_t)v8);
  uint64_t result = sub_1C0387D2C((uint64_t)v8);
  if (!v1) {
    return sub_1C059DCC4(a1);
  }
  return result;
}

uint64_t FormatAnimationNodeSpringAnimation.keyPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v8 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 48) = v8;
  return sub_1BFCCE6B0(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatAnimationNodeSpringAnimation.cumulative.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatAnimationNodeSpringAnimation.additive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFFC8784(v2, v3, v4);
}

uint64_t FormatAnimationNodeSpringAnimation.mass.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.stiffness.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.damping.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 136);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.initialVelocity.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t FormatAnimationNodeSpringAnimation.mediaTiming.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C0BCFA6C(v1 + 152, (uint64_t)v4, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C0BCFA6C((uint64_t)v4, a1, (uint64_t (*)(void))sub_1C00F652C);
  return sub_1C00F6940((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
}

uint64_t FormatAnimationNodeSpringAnimation.__allocating_init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)(long long *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  FormatAnimationNodeSpringAnimation.init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t FormatAnimationNodeSpringAnimation.init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)(long long *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t a8)
{
  long long v21 = a1[1];
  long long v22 = *a1;
  uint64_t v9 = *((void *)a1 + 4);
  uint64_t v10 = *((void *)a1 + 5);
  char v11 = *((unsigned char *)a1 + 48);
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  char v14 = *((unsigned char *)a2 + 16);
  uint64_t v15 = *a3;
  uint64_t v16 = a3[1];
  char v20 = *((unsigned char *)a3 + 16);
  uint64_t v18 = *a5;
  uint64_t v19 = *a4;
  uint64_t v23 = *a7;
  uint64_t v24 = *a6;
  sub_1C0BCFA6C(a8, (uint64_t)v25, (uint64_t (*)(void))sub_1C00F652C);
  *(_OWORD *)(v8 + 16) = v22;
  *(_OWORD *)(v8 + 32) = v21;
  *(void *)(v8 + 48) = v9;
  *(void *)(v8 + 56) = v10;
  *(unsigned char *)(v8 + 64) = v11;
  *(void *)(v8 + 72) = v12;
  *(void *)(v8 + 80) = v13;
  *(unsigned char *)(v8 + 88) = v14;
  *(void *)(v8 + 96) = v15;
  *(void *)(v8 + 104) = v16;
  *(unsigned char *)(v8 + 112) = v20;
  *(void *)(v8 + 120) = v19;
  *(void *)(v8 + 128) = v18;
  *(void *)(v8 + 136) = v24;
  *(void *)(v8 + 144) = v23;
  sub_1C0BCFA6C((uint64_t)v25, v8 + 152, (uint64_t (*)(void))sub_1C00F652C);
  return v8;
}

uint64_t FormatAnimationNodeSpringAnimation.deinit()
{
  sub_1BFCCE780(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_1BFFC879C(*(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  sub_1BFFC879C(*(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0BCFA6C(v0 + 152, (uint64_t)v2, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C00F6940((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
  return v0;
}

uint64_t FormatAnimationNodeSpringAnimation.__deallocating_deinit()
{
  FormatAnimationNodeSpringAnimation.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BCF868(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0BCF9EC(&qword_1EA1A47D0, a2, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0BCF8C0(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0BCF9EC(&qword_1EB85F5A0, a2, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation);
  a1[2] = sub_1C0BCF9EC(&qword_1EB85F598, v3, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation);
  uint64_t result = sub_1C0BCF9EC(&qword_1EA1A47D8, v4, (void (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0BCF96C(void *a1)
{
  return FormatAnimationNodeSpringAnimation.encode(to:)(a1);
}

uint64_t sub_1C0BCF990(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed025FormatAnimationNodeSpringD0C2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0BCF99C(uint64_t a1)
{
  return sub_1C0BCF2CC(a1);
}

uint64_t method lookup function for FormatAnimationNodeSpringAnimation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAnimationNodeSpringAnimation);
}

uint64_t dispatch thunk of FormatAnimationNodeSpringAnimation.__allocating_init(keyPath:cumulative:additive:mass:stiffness:damping:initialVelocity:mediaTiming:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1C0BCF9EC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0BCFA34()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0BCFA6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_1C0BCFAD4(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF197F8(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF197F8(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, v2);
  uint64_t v41 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v3 = *(void *)(v41 - 8);
  unint64_t v36 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
  sub_1BFF197F8(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v2);
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1527210;
  sub_1BFF197F8(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
  sub_1C0181BEC(0);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C15445C0;
  uint64_t v38 = v8;
  uint64_t v9 = (void *)(v8 + v7);
  if (a1)
  {
    uint64_t v10 = *(void *)(a1 + 72);
    uint64_t v11 = *(void *)(a1 + 80);
    unsigned __int8 v12 = *(unsigned char *)(a1 + 88);
    sub_1BFFC8784(v10, v11, v12);
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unsigned __int8 v12 = -1;
  }
  sub_1C0437874(0x6974616C756D7543, 0xEA00000000006576, v10, v11, v12, v9);
  uint64_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v3 + 56);
  uint64_t v14 = v41;
  v13(v9, 0, 1, v41);
  if (a1)
  {
    uint64_t v15 = *(void *)(a1 + 96);
    uint64_t v16 = *(void *)(a1 + 104);
    unsigned __int8 v17 = *(unsigned char *)(a1 + 112);
    sub_1BFFC8784(v15, v16, v17);
    uint64_t v18 = v16;
    uint64_t v14 = v41;
    sub_1C0437874(0x6576697469646441, 0xE800000000000000, v15, v18, v17, (void *)((char *)v9 + v6));
    v13((void *)((char *)v9 + v6), 0, 1, v41);
    uint64_t v19 = *(void *)(a1 + 120);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1C0437874(0x6576697469646441, 0xE800000000000000, 0, 0, 0xFFu, (void *)((char *)v9 + v6));
    v13((void *)((char *)v9 + v6), 0, 1, v41);
    uint64_t v19 = 0;
  }
  sub_1C042F6B0(1936941389, 0xE400000000000000, v19, (void *)((char *)v9 + 2 * v6));
  v13((void *)((char *)v9 + 2 * v6), 0, 1, v14);
  if (a1)
  {
    uint64_t v20 = *(void *)(a1 + 128);
    swift_bridgeObjectRetain();
    sub_1C042F6B0(0x73656E6666697453, 0xE900000000000073, v20, (void *)((char *)v9 + 3 * v6));
    v13((void *)((char *)v9 + 3 * v6), 0, 1, v14);
    uint64_t v21 = *(void *)(a1 + 136);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1C042F6B0(0x73656E6666697453, 0xE900000000000073, 0, (void *)((char *)v9 + 3 * v6));
    v13((void *)((char *)v9 + 3 * v6), 0, 1, v14);
    uint64_t v21 = 0;
  }
  uint64_t v37 = (void *)(v40 + v36);
  sub_1C042F6B0(0x676E69706D6144, 0xE700000000000000, v21, (void *)((char *)v9 + 4 * v6));
  v13((void *)((char *)v9 + 4 * v6), 0, 1, v14);
  if (a1)
  {
    uint64_t v22 = *(void *)(a1 + 144);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v22 = 0;
  }
  sub_1C042F6B0(0xD000000000000010, 0x80000001C161EA40, v22, (void *)((char *)v9 + 5 * v6));
  v13((void *)((char *)v9 + 5 * v6), 0, 1, v41);
  sub_1C09BCFA4(0xD000000000000010, 0x80000001C161EA20, 0, 0, v38, v47);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v4 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v4 + 64) = &off_1F1BDEC90;
  uint64_t v23 = swift_allocObject();
  *(void *)(v4 + 32) = v23;
  *(void *)(v23 + 48) = v48;
  long long v24 = v47[1];
  *(_OWORD *)(v23 + 16) = v47[0];
  *(_OWORD *)(v23 + 32) = v24;
  if (a1)
  {
    sub_1C0BCFA6C(a1 + 152, (uint64_t)&v42, (uint64_t (*)(void))sub_1C00F652C);
    sub_1C00F6940((uint64_t)&v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5BF4C);
  }
  else
  {
    sub_1C032F954((uint64_t)&v42);
  }
  sub_1C0BCFA6C((uint64_t)&v42, (uint64_t)v46, (uint64_t (*)(void))sub_1C00F652C);
  sub_1C0BCFA6C((uint64_t)v46, (uint64_t)&v42, (uint64_t (*)(void))sub_1C00F652C);
  uint64_t v25 = sub_1C0A5C3AC((uint64_t)&v42);
  sub_1C00F6940((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BFC5A634);
  *(void *)(v4 + 96) = &type metadata for FormatInspection;
  *(void *)(v4 + 104) = &off_1F1C29D30;
  *(void *)(v4 + 72) = v25;
  uint64_t v26 = sub_1C0233FC8(v4);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  id v27 = sub_1C131B79C(v26);
  swift_bridgeObjectRelease();
  sub_1C042F458(1701869908, 0xE400000000000000, (uint64_t)v27, 0x676E69727053, 0xE600000000000000, v37);
  if (a1)
  {
    char v28 = *(unsigned char *)(a1 + 64);
    long long v29 = *(_OWORD *)(a1 + 32);
    long long v42 = *(_OWORD *)(a1 + 16);
    long long v43 = v29;
    long long v44 = *(_OWORD *)(a1 + 48);
    char v45 = v28;
    uint64_t v30 = sub_1C0A155C0();
  }
  else
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v42 = v40;
  sub_1C1047634(v30);
  uint64_t v31 = sub_1C0233D40(v42);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x6F6974616D696E41, 0xE90000000000006ELL, 0, 0, v31, &v42);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v32 = swift_allocObject();
  *(void *)(inited + 32) = v32;
  *(void *)(v32 + 48) = v44;
  long long v33 = v43;
  *(_OWORD *)(v32 + 16) = v42;
  *(_OWORD *)(v32 + 32) = v33;
  uint64_t v34 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v34;
}

uint64_t sub_1C0BD02C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t static FormatColorConditionalProcessor.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  unint64_t v6 = *a2;
  uint64_t v7 = v2;
  if ((static FormatColorExpression.== infix(_:_:)(&v7, &v6) & 1) == 0) {
    return 0;
  }
  return sub_1C00E5A8C(v3, v4);
}

void *FormatColorConditionalProcessor.init(expression:processors:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1C0BD0388(char *a1, unsigned __int8 *a2)
{
  return sub_1C147A938(*a1, *a2);
}

uint64_t sub_1C0BD0394()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0BD0440()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BD04D8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0BD0580@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0BD0A50();
  *a1 = result;
  return result;
}

void sub_1C0BD05B0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006E6FLL;
  int v3 = *v1;
  unint64_t v4 = 0xEA00000000007372;
  if (v3 != 1) {
    unint64_t v4 = 0xE900000000000072;
  }
  BOOL v5 = v3 == 0;
  if (*v1) {
    uint64_t v6 = 0x6F737365636F7270;
  }
  else {
    uint64_t v6 = 0x6973736572707865;
  }
  if (!v5) {
    unint64_t v2 = v4;
  }
  *a1 = v6;
  a1[1] = v2;
}

uint64_t sub_1C0BD0618@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0BD0A50();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BD0640(uint64_t a1)
{
  unint64_t v2 = sub_1BFD460F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0BD067C(uint64_t a1)
{
  unint64_t v2 = sub_1BFD460F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0BD06B8(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  unint64_t v6 = *a2;
  uint64_t v7 = v2;
  if ((static FormatColorExpression.== infix(_:_:)(&v7, &v6) & 1) == 0) {
    return 0;
  }
  return sub_1C00E5A8C(v3, v4);
}

unint64_t sub_1C0BD0724(void *a1)
{
  a1[1] = sub_1BFDF6C30();
  a1[2] = sub_1BFDAF6CC();
  unint64_t result = sub_1C0BD075C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BD075C()
{
  unint64_t result = qword_1EA1A47E0;
  if (!qword_1EA1A47E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A47E0);
  }
  return result;
}

uint64_t destroy for FormatColorConditionalProcessor()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed31FormatColorConditionalProcessorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatColorConditionalProcessor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FormatColorConditionalProcessor(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorConditionalProcessor()
{
  return &type metadata for FormatColorConditionalProcessor;
}

unsigned char *storeEnumTagSinglePayload for FormatColorConditionalProcessor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BD09C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorConditionalProcessor.CodingKeys()
{
  return &type metadata for FormatColorConditionalProcessor.CodingKeys;
}

unint64_t sub_1C0BD09FC()
{
  unint64_t result = qword_1EA1A47E8;
  if (!qword_1EA1A47E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A47E8);
  }
  return result;
}

uint64_t sub_1C0BD0A50()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void sub_1C0BD0A9C()
{
  qword_1EA2B5148 = 0x4064000000000000;
}

id sub_1C0BD0AAC(uint64_t a1)
{
  uint64_t v2 = &v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)a1;
  *((_OWORD *)v2 + 1) = v3;
  v2[48] = *(unsigned char *)(a1 + 48);
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

char *sub_1C0BD0B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = &v4[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *((void *)v7 + 4) = 0;
  *((void *)v7 + 5) = v8;
  v7[48] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer;
  id v10 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_init);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v11[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_borderLayers] = v8;
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton;
  sub_1C151AF1C();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(void *)&v11[v14] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton;
  *(void *)&v11[v16] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton;
  *(void *)&v11[v17] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton;
  *(void *)&v11[v18] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton;
  *(void *)&v11[v19] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);

  if (a3)
  {
    uint64_t v20 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  v76.receiver = v11;
  v76.super_class = ObjectType;
  uint64_t v21 = (char *)objc_msgSendSuper2(&v76, sel_initWithStyle_reuseIdentifier_, a1, v20);

  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer;
  uint64_t v23 = *(void **)&v21[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer];
  long long v24 = v21;
  objc_msgSend(v23, sel_setLineWidth_, 1.0);
  sub_1BFE4DBE0();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C15320E0;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
  id v26 = v23;
  *(void *)(v25 + 32) = sub_1C151FB4C();
  sub_1C151EBEC();
  id v27 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setLineDashPattern_, v27);

  char v28 = *(void **)&v21[v22];
  long long v29 = self;
  id v30 = v28;
  id v31 = objc_msgSend(v29, sel_lightGrayColor);
  id v32 = objc_msgSend(v31, sel_CGColor);

  objc_msgSend(v30, sel_setStrokeColor_, v32);
  id v33 = *(id *)&v21[v22];
  id v74 = v29;
  id v34 = objc_msgSend(v29, sel_clearColor);
  id v35 = objc_msgSend(v34, sel_CGColor);

  objc_msgSend(v33, sel_setFillColor_, v35);
  id v36 = objc_msgSend(v24, sel_contentView);
  id v37 = objc_msgSend(v36, sel_layer);

  objc_msgSend(v37, sel_addSublayer_, *(void *)&v21[v22]);
  uint64_t v38 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel;
  uint64_t v39 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel];
  uint64_t v40 = self;
  id v41 = v39;
  id v42 = objc_msgSend(v40, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v41, sel_setFont_, v42);

  id v43 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v43, sel_addSubview_, *(void *)&v24[v38]);

  uint64_t v44 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel;
  id v45 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel];
  id v46 = objc_msgSend(v40, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v45, sel_setFont_, v46);

  id v47 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v47, sel_addSubview_, *(void *)&v24[v44]);

  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C15418C0;
  uint64_t v49 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton];
  *(void *)(inited + 32) = v49;
  uint64_t v50 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton];
  *(void *)(inited + 40) = v50;
  uint64_t v51 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton];
  *(void *)(inited + 48) = v51;
  uint64_t v52 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton];
  *(void *)(inited + 56) = v52;
  uint64_t v75 = inited;
  sub_1C151EBEC();
  if ((v75 & 0xC000000000000001) == 0 && *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_15;
  }
  id v53 = v49;
  id v54 = v50;
  id v55 = v51;
  id v56 = v52;
  uint64_t v57 = self;
  uint64_t v58 = 0;
  do
  {
    if ((v75 & 0xC000000000000001) != 0) {
      id v62 = (id)MEMORY[0x1C18C7CB0](v58, v75);
    }
    else {
      id v62 = *(id *)(v75 + 8 * v58 + 32);
    }
    id v63 = v62;
    id v64 = objc_msgSend(v74, sel_labelColor);
    objc_msgSend(v63, sel_setTintColor_, v64);

    uint64_t v65 = (void *)sub_1C151E5EC();
    id v66 = objc_msgSend(v57, sel_systemImageNamed_, v65);

    if (v66)
    {
      id v59 = objc_msgSend(self, sel_configurationWithPointSize_, 15.0);
      id v60 = objc_msgSend(v66, sel_imageWithConfiguration_, v59);
    }
    else
    {
      id v60 = 0;
    }
    ++v58;
    objc_msgSend(v63, sel_setImage_forState_, v60, 0);

    objc_msgSend(v63, sel_setFrame_, 0.0, 0.0, 22.0, 22.0);
    objc_msgSend(v63, sel_addTarget_action_forControlEvents_, v24, sel_didTapBorderButtonWithSender_, 64);
    id v61 = objc_msgSend(v24, sel_contentView);
    objc_msgSend(v61, sel_addSubview_, v63);
  }
  while (v58 != 4);
  swift_bridgeObjectRelease();
  uint64_t v67 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton;
  id v68 = *(id *)&v24[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton];
  id v69 = objc_msgSend(v74, sel_labelColor);
  objc_msgSend(v68, sel_setTintColor_, v69);

  uint64_t v70 = *(void **)&v24[v67];
  objc_msgSend(v70, sel_setFrame_, 0.0, 0.0, 22.0, 22.0);
  objc_msgSend(v70, sel_addTarget_action_forControlEvents_, v24, sel_didTapHiddenButtonWithSender_, 64);
  id v71 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v71, sel_addSubview_, v70);

  if (qword_1EA194538 != -1) {
    goto LABEL_17;
  }
LABEL_15:
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C0BD3E60(&qword_1EA1A4848);
  sub_1C1516FCC();
  swift_release();
  sub_1C0BD1470();

  return v24;
}

void sub_1C0BD1414(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C18C9C60](v2);
  if (v3)
  {
    unsigned int v4 = (void *)v3;
    sub_1C0BD1470();
  }
}

void sub_1C0BD1470()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton);
  uint64_t v2 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_systemImageNamed_, v2);

  if (v3)
  {
    id v4 = objc_msgSend(self, sel_configurationWithPointSize_, 15.0);
    id v5 = objc_msgSend(v3, sel_imageWithConfiguration_, v4);
  }
  else
  {
    id v5 = 0;
  }
  objc_msgSend(v1, sel_setImage_forState_, v5, 0);
}

void sub_1C0BD1614()
{
  uint64_t v1 = v0;
  v138.receiver = v0;
  v138.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v138, sel_layoutSubviews);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton];
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v153);
  objc_msgSend(v2, sel_bounds);
  double v4 = Width - CGRectGetWidth(v154);
  objc_msgSend(v0, sel_layoutMargins);
  double v6 = v4 - v5;
  objc_msgSend(v2, sel_bounds);
  double v7 = CGRectGetWidth(v155);
  objc_msgSend(v2, sel_bounds);
  objc_msgSend(v2, sel_setFrame_, v6, 8.0, v7, CGRectGetHeight(v156));
  uint64_t v8 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  objc_msgSend(v2, sel_setHidden_, (v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 48] < 6u) & (0x39u >> v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 48]));
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel];
  uint64_t v139 = 0;
  unint64_t v140 = 0xE000000000000000;
  long long v10 = *((_OWORD *)v8 + 1);
  long long v145 = *(_OWORD *)v8;
  long long v146 = v10;
  type metadata accessor for CGRect(0);
  sub_1C152036C();
  uint64_t v11 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v11);

  objc_msgSend(v9, sel_sizeToFit);
  id v12 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v12, sel_center);
  double v14 = v13;
  double v16 = v15;

  objc_msgSend(v9, sel_setCenter_, v14, v16);
  uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel];
  objc_msgSend(v17, sel_setHidden_, v8[48] != 0);
  *(void *)&long long v145 = 0x207865646E692D7ALL;
  *((void *)&v145 + 1) = 0xEA0000000000203DLL;
  uint64_t v139 = *((void *)v8 + 4);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setText_, v18);

  objc_msgSend(v17, sel_sizeToFit);
  objc_msgSend(v1, sel_bounds);
  double v19 = CGRectGetWidth(v157);
  objc_msgSend(v17, sel_frame);
  double v20 = v19 - CGRectGetWidth(v158);
  objc_msgSend(v1, sel_layoutMargins);
  double v22 = v20 - v21;
  objc_msgSend(v1, sel_bounds);
  double Height = CGRectGetHeight(v159);
  objc_msgSend(v17, sel_frame);
  double v24 = Height - CGRectGetHeight(v160) + -4.0;
  objc_msgSend(v17, sel_frame);
  double v25 = CGRectGetWidth(v161);
  objc_msgSend(v17, sel_frame);
  objc_msgSend(v17, sel_setFrame_, v22, v24, v25, CGRectGetHeight(v162));
  objc_msgSend(v1, sel_bounds);
  CGFloat v26 = CGRectGetWidth(v163) * 0.5;
  id v27 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer];
  objc_msgSend(v1, sel_bounds);
  CGFloat v28 = CGRectGetWidth(v164) * 0.5 - v26 * 0.5;
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v27, sel_setFrame_, v28, CGRectGetHeight(v165) * 0.5 + -40.0, v26, 80.0);
  objc_msgSend(v27, sel_bounds);
  id v33 = objc_msgSend(self, sel_bezierPathWithRect_, v29, v30, v31, v32);
  id v34 = objc_msgSend(v33, sel_CGPath);

  objc_msgSend(v27, sel_setPath_, v34);
  id v35 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton];
  objc_msgSend(v27, sel_frame);
  double MinX = CGRectGetMinX(v166);
  objc_msgSend(v35, sel_frame);
  double v37 = MinX - CGRectGetWidth(v167) + -8.0;
  objc_msgSend(v1, sel_bounds);
  CGFloat v38 = CGRectGetHeight(v168) * 0.5;
  objc_msgSend(v35, sel_frame);
  CGFloat v39 = v38 - CGRectGetHeight(v169) * 0.5;
  objc_msgSend(v35, sel_frame);
  double v40 = CGRectGetWidth(v170);
  objc_msgSend(v35, sel_frame);
  objc_msgSend(v35, sel_setFrame_, v37, v39, v40, CGRectGetHeight(v171));
  id v41 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton];
  objc_msgSend(v27, sel_frame);
  CGFloat v42 = CGRectGetMaxX(v172) + 8.0;
  objc_msgSend(v1, sel_bounds);
  CGFloat v43 = CGRectGetHeight(v173) * 0.5;
  objc_msgSend(v41, sel_frame);
  CGFloat v44 = v43 - CGRectGetHeight(v174) * 0.5;
  objc_msgSend(v41, sel_frame);
  double v45 = CGRectGetWidth(v175);
  objc_msgSend(v41, sel_frame);
  objc_msgSend(v41, sel_setFrame_, v42, v44, v45, CGRectGetHeight(v176));
  id v46 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton];
  objc_msgSend(v1, sel_bounds);
  CGFloat v47 = CGRectGetWidth(v177) * 0.5;
  objc_msgSend(v46, sel_frame);
  CGFloat v48 = v47 - CGRectGetWidth(v178) * 0.5;
  objc_msgSend(v27, sel_frame);
  double MinY = CGRectGetMinY(v179);
  objc_msgSend(v46, sel_frame);
  double v50 = MinY - CGRectGetHeight(v180) + -8.0;
  objc_msgSend(v46, sel_frame);
  double v51 = CGRectGetWidth(v181);
  objc_msgSend(v46, sel_frame);
  objc_msgSend(v46, sel_setFrame_, v48, v50, v51, CGRectGetHeight(v182));
  uint64_t v52 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton];
  objc_msgSend(v1, sel_bounds);
  CGFloat v53 = CGRectGetWidth(v183) * 0.5;
  objc_msgSend(v52, sel_frame);
  CGFloat v54 = v53 - CGRectGetWidth(v184) * 0.5;
  id v123 = v27;
  objc_msgSend(v27, sel_frame);
  CGFloat v55 = CGRectGetMaxY(v185) + 8.0;
  objc_msgSend(v52, sel_frame);
  double v56 = CGRectGetWidth(v186);
  objc_msgSend(v52, sel_frame);
  objc_msgSend(v52, sel_setFrame_, v54, v55, v56, CGRectGetHeight(v187));
  id v122 = v1;
  uint64_t v57 = &v1[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_borderLayers];
  swift_beginAccess();
  int v124 = v57;
  unint64_t v58 = *(void *)v57;
  if (v58 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1C15204BC();
    if (v59) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v59)
    {
LABEL_3:
      if (v59 < 1) {
        goto LABEL_49;
      }
      for (uint64_t i = 0; i != v59; ++i)
      {
        if ((v58 & 0xC000000000000001) != 0) {
          id v61 = (id)MEMORY[0x1C18C7CB0](i, v58);
        }
        else {
          id v61 = *(id *)(v58 + 8 * i + 32);
        }
        id v62 = v61;
        objc_msgSend(v61, sel_removeFromSuperlayer);
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  id v63 = v35;
  id v64 = v41;
  id v65 = v46;
  id v134 = v52;
  objc_msgSend(v63, sel_setEnabled_, 0);
  id v66 = v63;
  uint64_t v67 = (void *)sub_1C151FA6C();
  objc_msgSend(v66, sel_setTintColor_, v67);

  objc_msgSend(v66, sel_setHidden_, (v8[48] & 0xFD) != 0);
  id v68 = v64;
  objc_msgSend(v68, sel_setEnabled_, 0);
  id v69 = v68;
  uint64_t v70 = (void *)sub_1C151FA6C();
  objc_msgSend(v69, sel_setTintColor_, v70);

  objc_msgSend(v69, sel_setHidden_, (v8[48] & 0xFD) != 0);
  id v71 = v65;
  objc_msgSend(v71, sel_setEnabled_, 0);
  id v72 = v71;
  int v73 = (void *)sub_1C151FA6C();
  objc_msgSend(v72, sel_setTintColor_, v73);

  objc_msgSend(v72, sel_setHidden_, (v8[48] & 0xFD) != 0);
  id v74 = v134;
  objc_msgSend(v74, sel_setEnabled_, 0);
  id v75 = v74;
  objc_super v76 = (void *)sub_1C151FA6C();
  objc_msgSend(v75, sel_setTintColor_, v76);

  objc_msgSend(v75, sel_setHidden_, (v8[48] & 0xFD) != 0);
  uint64_t v121 = v66;

  uint64_t v119 = v72;
  uint64_t v120 = v69;

  int v118 = v75;
  *(void *)int v124 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v77 = *((void *)v8 + 5);
  if (!v77) {
    return;
  }
  uint64_t v117 = *(void *)(v77 + 16);
  if (!v117) {
    return;
  }
  uint64_t v115 = v77 + 32;
  id v116 = self;
  swift_bridgeObjectRetain();
  unint64_t v78 = 0;
  uint64_t v114 = v77;
LABEL_13:
  if (v78 < *(void *)(v77 + 16))
  {
    uint64_t v79 = (long long *)(v115 + 40 * v78);
    uint64_t v80 = *((void *)v79 + 4);
    long long v81 = v79[1];
    long long v149 = *v79;
    long long v150 = v81;
    uint64_t v151 = v80;
    v152[0] = v149;
    unint64_t v125 = v78 + 1;
    id v82 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
    sub_1C0BD3EF8((uint64_t)&v149);
    id v83 = objc_msgSend(v82, sel_init);
    objc_msgSend(v83, sel_setLineWidth_, 2.0);
    id v84 = objc_msgSend(v116, sel_labelColor);
    id v85 = objc_msgSend(v84, sel_CGColor);

    objc_msgSend(v83, sel_setStrokeColor_, v85);
    id v86 = objc_msgSend(v116, sel_clearColor);
    id v87 = objc_msgSend(v86, sel_CGColor);

    objc_msgSend(v83, sel_setFillColor_, v87);
    id v88 = v83;
    objc_msgSend(v123, sel_frame);
    objc_msgSend(v88, sel_setFrame_);
    id v130 = v88;

    CGMutablePathRef Mutable = CGPathCreateMutable();
    uint64_t v126 = v152[0] + 56;
    uint64_t v129 = v152[0];
    uint64_t v90 = 1 << *(unsigned char *)(v152[0] + 32);
    if (v90 < 64) {
      uint64_t v91 = ~(-1 << v90);
    }
    else {
      uint64_t v91 = -1;
    }
    unint64_t v92 = v91 & *(void *)(v152[0] + 56);
    char v128 = BYTE8(v150);
    sub_1BFFAF7A4((uint64_t)v152);
    int64_t v93 = 0;
    int64_t v127 = (unint64_t)(v90 + 63) >> 6;
    while (1)
    {
      if (v92)
      {
        uint64_t v131 = (v92 - 1) & v92;
        int64_t v132 = v93;
        unint64_t v94 = __clz(__rbit64(v92)) | (v93 << 6);
      }
      else
      {
        int64_t v95 = v93 + 1;
        if (__OFADD__(v93, 1))
        {
          __break(1u);
LABEL_47:
          __break(1u);
          break;
        }
        if (v95 >= v127) {
          goto LABEL_41;
        }
        unint64_t v96 = *(void *)(v126 + 8 * v95);
        int64_t v97 = v93 + 1;
        if (!v96)
        {
          int64_t v97 = v93 + 2;
          if (v93 + 2 >= v127) {
            goto LABEL_41;
          }
          unint64_t v96 = *(void *)(v126 + 8 * v97);
          if (!v96)
          {
            int64_t v97 = v93 + 3;
            if (v93 + 3 >= v127) {
              goto LABEL_41;
            }
            unint64_t v96 = *(void *)(v126 + 8 * v97);
            if (!v96)
            {
              uint64_t v98 = v93 + 4;
              if (v93 + 4 >= v127)
              {
LABEL_41:
                swift_release();
                objc_msgSend(v130, sel_setPath_, Mutable);
                id v112 = objc_msgSend(v122, sel_layer);
                objc_msgSend(v112, sel_addSublayer_, v130);

                swift_beginAccess();
                id v113 = v130;
                MEMORY[0x1C18C66D0]();
                if (*(void *)((*(void *)v124 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v124 & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
                  sub_1C151EC8C();
                sub_1C151ECEC();
                sub_1C151EBEC();
                swift_endAccess();
                LOBYTE(v135[0]) = 1;
                sub_1C0BD2544(v121, (unsigned __int8 *)v135, (uint64_t *)&v149);
                LOBYTE(v135[0]) = 2;
                sub_1C0BD2544(v120, (unsigned __int8 *)v135, (uint64_t *)&v149);
                LOBYTE(v135[0]) = 0;
                sub_1C0BD2544(v119, (unsigned __int8 *)v135, (uint64_t *)&v149);
                LOBYTE(v135[0]) = 3;
                sub_1C0BD2544(v118, (unsigned __int8 *)v135, (uint64_t *)&v149);
                sub_1C0BD3F84((uint64_t)&v149);

                unint64_t v78 = v125;
                uint64_t v77 = v114;
                if (v125 == v117)
                {
                  swift_bridgeObjectRelease();
                  return;
                }
                goto LABEL_13;
              }
              unint64_t v96 = *(void *)(v126 + 8 * v98);
              if (!v96)
              {
                while (1)
                {
                  int64_t v97 = v98 + 1;
                  if (__OFADD__(v98, 1)) {
                    goto LABEL_47;
                  }
                  if (v97 >= v127) {
                    goto LABEL_41;
                  }
                  unint64_t v96 = *(void *)(v126 + 8 * v97);
                  ++v98;
                  if (v96) {
                    goto LABEL_34;
                  }
                }
              }
              int64_t v97 = v93 + 4;
            }
          }
        }
LABEL_34:
        uint64_t v131 = (v96 - 1) & v96;
        int64_t v132 = v97;
        unint64_t v94 = __clz(__rbit64(v96)) + (v97 << 6);
      }
      v137[1] = *(unsigned char *)(*(void *)(v129 + 48) + v94);
      objc_msgSend(v130, sel_bounds, v114);
      v135[0] = 0;
      v135[1] = 0;
      char v136 = 0;
      v137[0] = v128;
      uint64_t v133 = sub_1C12C23E0((uint64_t)v135, v137, v99, v100, v101, v102, 0.0);
      uint64_t v103 = v133[2];
      if (v103)
      {
        uint64_t v104 = (unsigned __int8 *)(v133 + 8);
        do
        {
          uint64_t v107 = (void *)*((void *)v104 - 4);
          uint64_t v106 = *((void *)v104 - 3);
          uint64_t v108 = *((void *)v104 - 2);
          uint64_t v109 = *((void *)v104 - 1);
          unsigned __int8 v110 = *v104;
          if (*v104)
          {
            sub_1C0BD3F54(*((id *)v104 - 4), *((void *)v104 - 3), *((void *)v104 - 2), *((void *)v104 - 1), *v104);
            id v111 = objc_msgSend(v107, sel_CGPath);
            *(void *)&long long v146 = 0;
            long long v145 = 0x3FF0000000000000uLL;
            *((void *)&v146 + 1) = 0x3FF0000000000000;
            uint64_t v147 = 0;
            uint64_t v148 = 0;
            sub_1C151F3CC();
            sub_1C0BD3F6C(v107, v106, v108, v109, v110);
          }
          else
          {
            sub_1C04C8678();
            uint64_t v105 = swift_allocObject();
            *(_OWORD *)(v105 + 16) = xmmword_1C1527210;
            *(void *)(v105 + 32) = v107;
            *(void *)(v105 + 40) = v106;
            *(void *)(v105 + 48) = v108;
            *(void *)(v105 + 56) = v109;
            unint64_t v140 = 0;
            uint64_t v141 = 0;
            uint64_t v139 = 0x3FF0000000000000;
            uint64_t v142 = 0x3FF0000000000000;
            uint64_t v143 = 0;
            uint64_t v144 = 0;
            sub_1C151F40C();
            swift_bridgeObjectRelease();
          }
          v104 += 40;
          --v103;
        }
        while (v103);
      }
      swift_bridgeObjectRelease();
      unint64_t v92 = v131;
      int64_t v93 = v132;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
}

void sub_1C0BD2544(void *a1, unsigned __int8 *a2, uint64_t *a3)
{
  unsigned __int8 v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t v13 = v5;
  if (!*(void *)(v5 + 16))
  {
LABEL_8:
    sub_1BFFAF7A4((uint64_t)&v13);
    char v11 = sub_1C0451638(v4, v5);
    sub_1BFCA59C8((uint64_t)&v13);
    if (v11) {
      goto LABEL_12;
    }
    return;
  }
  sub_1C1520DBC();
  sub_1BFFAF7A4((uint64_t)&v13);
  sub_1C151E77C();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    sub_1BFCA59C8((uint64_t)&v13);
    goto LABEL_8;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_11;
      default:
        char v10 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_7;
          }
          continue;
        }
LABEL_11:
        sub_1BFCA59C8((uint64_t)&v13);
LABEL_12:
        objc_msgSend(a1, sel_setEnabled_, 1);
        id v12 = objc_msgSend(self, sel_labelColor);
        objc_msgSend(a1, sel_setTintColor_, v12);

        return;
    }
  }
}

uint64_t sub_1C0BD2798(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate;
  uint64_t result = MEMORY[0x1C18C9C60](v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    long long v7 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 16);
    v9[0] = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame);
    v9[1] = v7;
    _OWORD v9[2] = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 32);
    char v10 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 48);
    sub_1C0BD3EA0((uint64_t)v9);
    uint64_t v8 = sub_1C0BD2878(a1);
    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, v9, a1, v8, ObjectType, v5);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return sub_1C0BD3ECC((uint64_t)v9);
  }
  return result;
}

uint64_t sub_1C0BD2878(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 40);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton) != a1)
  {
    uint64_t v96 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame + 40);
    if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton) != a1)
    {
      if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton) == a1)
      {
        uint64_t v87 = *(void *)(v2 + 16);
        if (v87)
        {
          swift_bridgeObjectRetain();
          unint64_t v62 = 0;
          uint64_t v4 = MEMORY[0x1E4FBC860];
          while (1)
          {
            if (v62 >= *(void *)(v2 + 16)) {
              goto LABEL_136;
            }
            uint64_t v63 = v2 + 32 + 40 * v62;
            uint64_t v64 = *(void *)v63;
            char v65 = *(unsigned char *)(v63 + 24);
            char v95 = *(unsigned char *)(v63 + 25);
            uint64_t v66 = *(void *)(v63 + 32);
            long long v101 = *(_OWORD *)(v63 + 8);
            if (!*(void *)(*(void *)v63 + 16)) {
              break;
            }
            sub_1C1520DBC();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_retain();
            sub_1C151E77C();
            uint64_t v67 = sub_1C1520E0C();
            uint64_t v68 = -1 << *(unsigned char *)(v64 + 32);
            unint64_t v69 = v67 & ~v68;
            if (((*(void *)(v64 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              if (!*(void *)(v64 + 16)) {
                goto LABEL_103;
              }
              goto LABEL_118;
            }
            char v91 = v65;
            uint64_t v70 = ~v68;
            while (2)
            {
              switch(*(unsigned char *)(*(void *)(v64 + 48) + v69))
              {
                case 4:
LABEL_126:
                  swift_bridgeObjectRelease();
                  goto LABEL_127;
                default:
                  char v71 = sub_1C1520A9C();
                  swift_bridgeObjectRelease();
                  if (v71)
                  {
LABEL_127:
                    swift_bridgeObjectRelease();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      sub_1BFFB3A2C(0, *(void *)(v4 + 16) + 1, 1);
                    }
                    long long v77 = v101;
                    unint64_t v79 = *(void *)(v4 + 16);
                    unint64_t v78 = *(void *)(v4 + 24);
                    if (v79 >= v78 >> 1)
                    {
                      sub_1BFFB3A2C(v78 > 1, v79 + 1, 1);
                      long long v77 = v101;
                    }
                    *(void *)(v4 + 16) = v79 + 1;
                    uint64_t v80 = v4 + 40 * v79;
                    *(void *)(v80 + 32) = v64;
                    *(_OWORD *)(v80 + 40) = v77;
                    *(unsigned char *)(v80 + 56) = v91;
                    *(unsigned char *)(v80 + 57) = v95;
                    *(void *)(v80 + 64) = v66;
                    goto LABEL_105;
                  }
                  unint64_t v69 = (v69 + 1) & v70;
                  if ((*(void *)(v64 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69)) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  char v65 = v91;
                  if (!*(void *)(v64 + 16)) {
                    goto LABEL_103;
                  }
LABEL_118:
                  sub_1C1520DBC();
                  swift_bridgeObjectRetain();
                  sub_1C151E77C();
                  uint64_t v72 = sub_1C1520E0C();
                  uint64_t v73 = -1 << *(unsigned char *)(v64 + 32);
                  unint64_t v74 = v72 & ~v73;
                  if (((*(void *)(v64 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v74) & 1) == 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
LABEL_104:
                    swift_release();
                    swift_release();
                    goto LABEL_105;
                  }
                  char v91 = v65;
                  uint64_t v75 = ~v73;
                  while (2)
                  {
                    switch(*(unsigned char *)(*(void *)(v64 + 48) + v74))
                    {
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                        char v76 = sub_1C1520A9C();
                        swift_bridgeObjectRelease();
                        if (v76) {
                          goto LABEL_127;
                        }
                        unint64_t v74 = (v74 + 1) & v75;
                        if ((*(void *)(v64 + 56 + ((v74 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v74)) {
                          continue;
                        }
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease_n();
                        swift_release();
                        swift_release();
                        break;
                      default:
                        goto LABEL_126;
                    }
                    break;
                  }
LABEL_105:
                  if (++v62 == v87) {
                    goto LABEL_132;
                  }
                  break;
              }
              break;
            }
          }
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (*(void *)(v64 + 16)) {
            goto LABEL_118;
          }
LABEL_103:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_104;
        }
      }
      else if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton) == a1)
      {
        uint64_t v84 = *(void *)(v2 + 16);
        if (v84)
        {
          uint64_t v82 = v2 + 32;
          swift_bridgeObjectRetain();
          unint64_t v3 = 0;
          uint64_t v4 = MEMORY[0x1E4FBC860];
          while (1)
          {
            if (v3 >= *(void *)(v2 + 16)) {
              goto LABEL_137;
            }
            uint64_t v5 = (uint64_t *)(v82 + 40 * v3);
            uint64_t v6 = *v5;
            char v88 = *((unsigned char *)v5 + 24);
            char v92 = *((unsigned char *)v5 + 25);
            uint64_t v7 = v5[4];
            long long v98 = *(_OWORD *)(v5 + 1);
            if (!*(void *)(*v5 + 16))
            {
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              if (*(void *)(v6 + 16)) {
                goto LABEL_23;
              }
LABEL_8:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_9;
            }
            sub_1C1520DBC();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_retain();
            sub_1C151E77C();
            uint64_t v8 = sub_1C1520E0C();
            uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
            unint64_t v10 = v8 & ~v9;
            if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              if (!*(void *)(v6 + 16)) {
                goto LABEL_8;
              }
              goto LABEL_23;
            }
            uint64_t v11 = ~v9;
            while (2)
            {
              switch(*(unsigned char *)(*(void *)(v6 + 48) + v10))
              {
                case 4:
LABEL_31:
                  char v18 = v88;
                  swift_bridgeObjectRelease();
                  uint64_t v2 = v96;
                  goto LABEL_32;
                default:
                  char v12 = sub_1C1520A9C();
                  swift_bridgeObjectRelease();
                  if ((v12 & 1) == 0)
                  {
                    unint64_t v10 = (v10 + 1) & v11;
                    if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                    {
                      swift_bridgeObjectRelease();
                      if (!*(void *)(v6 + 16)) {
                        goto LABEL_8;
                      }
LABEL_23:
                      sub_1C1520DBC();
                      swift_bridgeObjectRetain();
                      sub_1C151E77C();
                      uint64_t v13 = sub_1C1520E0C();
                      uint64_t v14 = -1 << *(unsigned char *)(v6 + 32);
                      unint64_t v15 = v13 & ~v14;
                      if ((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
                      {
                        uint64_t v16 = ~v14;
                        while (2)
                        {
                          switch(*(unsigned char *)(*(void *)(v6 + 48) + v15))
                          {
                            case 3:
                              goto LABEL_31;
                            default:
                              char v17 = sub_1C1520A9C();
                              swift_bridgeObjectRelease();
                              if (v17) {
                                goto LABEL_29;
                              }
                              unint64_t v15 = (v15 + 1) & v16;
                              if ((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15)) {
                                continue;
                              }
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease_n();
                              swift_release();
                              swift_release();
                              uint64_t v2 = v96;
                              break;
                          }
                          goto LABEL_10;
                        }
                      }
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease_n();
LABEL_9:
                      swift_release();
                      swift_release();
                      uint64_t v2 = v96;
                      goto LABEL_10;
                    }
                    continue;
                  }
LABEL_29:
                  uint64_t v2 = v96;
                  char v18 = v88;
LABEL_32:
                  swift_bridgeObjectRelease();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_1BFFB3A2C(0, *(void *)(v4 + 16) + 1, 1);
                  }
                  long long v19 = v98;
                  unint64_t v21 = *(void *)(v4 + 16);
                  unint64_t v20 = *(void *)(v4 + 24);
                  if (v21 >= v20 >> 1)
                  {
                    sub_1BFFB3A2C(v20 > 1, v21 + 1, 1);
                    long long v19 = v98;
                  }
                  *(void *)(v4 + 16) = v21 + 1;
                  uint64_t v22 = v4 + 40 * v21;
                  *(void *)(v22 + 32) = v6;
                  *(_OWORD *)(v22 + 40) = v19;
                  *(unsigned char *)(v22 + 56) = v18;
                  *(unsigned char *)(v22 + 57) = v92;
                  *(void *)(v22 + 64) = v7;
LABEL_10:
                  if (++v3 == v84) {
                    goto LABEL_132;
                  }
                  break;
              }
              break;
            }
          }
        }
      }
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v86 = *(void *)(v2 + 16);
    if (v86)
    {
      uint64_t v83 = v2 + 32;
      swift_bridgeObjectRetain();
      unint64_t v43 = 0;
      uint64_t v4 = MEMORY[0x1E4FBC860];
      while (1)
      {
        if (v43 >= *(void *)(v2 + 16)) {
          goto LABEL_135;
        }
        CGFloat v44 = (uint64_t *)(v83 + 40 * v43);
        uint64_t v45 = *v44;
        char v90 = *((unsigned char *)v44 + 24);
        char v94 = *((unsigned char *)v44 + 25);
        uint64_t v46 = v44[4];
        long long v100 = *(_OWORD *)(v44 + 1);
        if (!*(void *)(*v44 + 16))
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (*(void *)(v45 + 16)) {
            goto LABEL_86;
          }
LABEL_71:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_72;
        }
        sub_1C1520DBC();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_retain();
        sub_1C151E77C();
        uint64_t v47 = sub_1C1520E0C();
        uint64_t v48 = -1 << *(unsigned char *)(v45 + 32);
        unint64_t v49 = v47 & ~v48;
        if (((*(void *)(v45 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          if (!*(void *)(v45 + 16)) {
            goto LABEL_71;
          }
          goto LABEL_86;
        }
        uint64_t v50 = ~v48;
        while (2)
        {
          switch(*(unsigned char *)(*(void *)(v45 + 48) + v49))
          {
            case 4:
LABEL_94:
              char v57 = v90;
              swift_bridgeObjectRelease();
              uint64_t v2 = v96;
              goto LABEL_95;
            default:
              char v51 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              if ((v51 & 1) == 0)
              {
                unint64_t v49 = (v49 + 1) & v50;
                if (((*(void *)(v45 + 56 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  if (!*(void *)(v45 + 16)) {
                    goto LABEL_71;
                  }
LABEL_86:
                  sub_1C1520DBC();
                  swift_bridgeObjectRetain();
                  sub_1C151E77C();
                  uint64_t v52 = sub_1C1520E0C();
                  uint64_t v53 = -1 << *(unsigned char *)(v45 + 32);
                  unint64_t v54 = v52 & ~v53;
                  if ((*(void *)(v45 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54))
                  {
                    uint64_t v55 = ~v53;
                    while (2)
                    {
                      switch(*(unsigned char *)(*(void *)(v45 + 48) + v54))
                      {
                        case 2:
                          goto LABEL_94;
                        default:
                          char v56 = sub_1C1520A9C();
                          swift_bridgeObjectRelease();
                          if (v56) {
                            goto LABEL_92;
                          }
                          unint64_t v54 = (v54 + 1) & v55;
                          if ((*(void *)(v45 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54)) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease_n();
                          swift_release();
                          swift_release();
                          uint64_t v2 = v96;
                          break;
                      }
                      goto LABEL_73;
                    }
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
LABEL_72:
                  swift_release();
                  swift_release();
                  uint64_t v2 = v96;
                  goto LABEL_73;
                }
                continue;
              }
LABEL_92:
              uint64_t v2 = v96;
              char v57 = v90;
LABEL_95:
              swift_bridgeObjectRelease();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1BFFB3A2C(0, *(void *)(v4 + 16) + 1, 1);
              }
              long long v58 = v100;
              unint64_t v60 = *(void *)(v4 + 16);
              unint64_t v59 = *(void *)(v4 + 24);
              if (v60 >= v59 >> 1)
              {
                sub_1BFFB3A2C(v59 > 1, v60 + 1, 1);
                long long v58 = v100;
              }
              *(void *)(v4 + 16) = v60 + 1;
              uint64_t v61 = v4 + 40 * v60;
              *(void *)(v61 + 32) = v45;
              *(_OWORD *)(v61 + 40) = v58;
              *(unsigned char *)(v61 + 56) = v57;
              *(unsigned char *)(v61 + 57) = v94;
              *(void *)(v61 + 64) = v46;
LABEL_73:
              if (++v43 == v86) {
                goto LABEL_132;
              }
              break;
          }
          break;
        }
      }
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v89 = *(void *)(v2 + 16);
  if (!v89) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v85 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v97 = v2;
LABEL_43:
  if (v23 >= *(void *)(v2 + 16))
  {
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
    JUMPOUT(0x1C0BD3B14);
  }
  uint64_t v24 = v4;
  double v25 = (uint64_t *)(v85 + 40 * v23);
  uint64_t v26 = *v25;
  char v27 = *((unsigned char *)v25 + 24);
  char v93 = *((unsigned char *)v25 + 25);
  uint64_t v28 = v25[4];
  long long v99 = *(_OWORD *)(v25 + 1);
  if (!*(void *)(*v25 + 16))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (*(void *)(v26 + 16)) {
      goto LABEL_55;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  sub_1C1520DBC();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1C151E77C();
  uint64_t v29 = sub_1C1520E0C();
  uint64_t v30 = -1 << *(unsigned char *)(v26 + 32);
  unint64_t v31 = v29 & ~v30;
  if (((*(void *)(v26 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (!*(void *)(v26 + 16)) {
      goto LABEL_39;
    }
    goto LABEL_55;
  }
  uint64_t v32 = ~v30;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v26 + 48) + v31))
    {
      case 4:
LABEL_63:
        uint64_t v4 = v24;
        swift_bridgeObjectRelease();
        goto LABEL_64;
      default:
        char v33 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v33)
        {
LABEL_61:
          uint64_t v4 = v24;
LABEL_64:
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1BFFB3A2C(0, *(void *)(v4 + 16) + 1, 1);
          }
          long long v39 = v99;
          unint64_t v41 = *(void *)(v4 + 16);
          unint64_t v40 = *(void *)(v4 + 24);
          if (v41 >= v40 >> 1)
          {
            sub_1BFFB3A2C(v40 > 1, v41 + 1, 1);
            long long v39 = v99;
          }
          *(void *)(v4 + 16) = v41 + 1;
          uint64_t v42 = v4 + 40 * v41;
          *(void *)(v42 + 32) = v26;
          *(_OWORD *)(v42 + 40) = v39;
          *(unsigned char *)(v42 + 56) = v27;
          *(unsigned char *)(v42 + 57) = v93;
          *(void *)(v42 + 64) = v28;
          uint64_t v2 = v97;
          goto LABEL_42;
        }
        unint64_t v31 = (v31 + 1) & v32;
        if ((*(void *)(v26 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31)) {
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v97;
        if (!*(void *)(v26 + 16)) {
          goto LABEL_39;
        }
LABEL_55:
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v34 = sub_1C1520E0C();
        uint64_t v35 = -1 << *(unsigned char *)(v26 + 32);
        unint64_t v36 = v34 & ~v35;
        if (((*(void *)(v26 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
LABEL_40:
          swift_release();
          swift_release();
          goto LABEL_41;
        }
        uint64_t v37 = ~v35;
        while (2)
        {
          switch(*(unsigned char *)(*(void *)(v26 + 48) + v36))
          {
            case 1:
              goto LABEL_63;
            default:
              char v38 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              if (v38) {
                goto LABEL_61;
              }
              unint64_t v36 = (v36 + 1) & v37;
              if ((*(void *)(v26 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36)) {
                continue;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_release();
              swift_release();
              uint64_t v2 = v97;
              break;
          }
          break;
        }
LABEL_41:
        uint64_t v4 = v24;
LABEL_42:
        if (++v23 != v89) {
          goto LABEL_43;
        }
LABEL_132:
        swift_bridgeObjectRelease();
        break;
    }
    return v4;
  }
}

uint64_t type metadata accessor for DebugFormatInspectorFrameCell()
{
  return self;
}

uint64_t sub_1C0BD3E2C()
{
  return sub_1C0BD3E60(&qword_1EA1A4848);
}

uint64_t sub_1C0BD3E60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DebugFormatInspectorFrameCell();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0BD3EA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0BD3ECC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0BD3EF8(uint64_t a1)
{
  return a1;
}

id sub_1C0BD3F54(id result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 <= 1) {
    return result;
  }
  return result;
}

void sub_1C0BD3F6C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 1 <= 1) {
}
  }

uint64_t sub_1C0BD3F84(uint64_t a1)
{
  return a1;
}

void sub_1C0BD3FD8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_displayFrame];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *((void *)v1 + 4) = 0;
  *((void *)v1 + 5) = v2;
  v1[48] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLayer;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_frameLabel;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_zIndexLabel;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_borderLayers] = v2;
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_hiddenButton;
  sub_1C151AF1C();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(void *)&v0[v6] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_leftBorderButton;
  *(void *)&v0[v8] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_rightBorderButton;
  *(void *)&v0[v9] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_topBorderButton;
  *(void *)&v0[v10] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_bottomBorderButton;
  *(void *)&v0[v11] = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithType_, 0);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0BD41D4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0BD420C(uint64_t a1)
{
  sub_1C0BD1414(a1, v1);
}

uint64_t FormatSnippetCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 8);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(a1, a2);
    if (v9)
    {
      unint64_t v10 = v8;
      uint64_t v11 = *(void *)(v5 + 56);
      sub_1BFF1D9F4(0);
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)(v12 - 8);
      sub_1BFF1D72C(v11 + *(void *)(v14 + 72) * v10, a3);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      sub_1BFF1D9F4(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFF1D9F4(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    return v16(a3, 1, 1, v15);
  }
}

uint64_t FormatSnippetCollection.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BFE03B00(0, &qword_1EB880CC0, MEMORY[0x1E4FBB320]);
  sub_1BFE03CCC(&qword_1EB860C60, &qword_1EB85FD18);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatSnippetCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

NewsFeed::FormatSnippetCollection __swiftcall FormatSnippetCollection.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = (void *)sub_1BFD8C670(MEMORY[0x1E4FBC860]);
  void *v1 = v2;
  v1[1] = v3;
  result.snippetsByIdentifier._rawValue = v4;
  result.snippets._rawValue = v3;
  return result;
}

unint64_t sub_1C0BD44F8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1BFD8C670(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

__n128 sub_1C0BD452C(unint64_t *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  void v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  sub_1BFF0A72C(a1, (uint64_t)v7, *v2);
  return result;
}

ValueMetadata *type metadata accessor for FormatSnippetCollection()
{
  return &type metadata for FormatSnippetCollection;
}

uint64_t sub_1C0BD4584(uint64_t a1, uint64_t a2)
{
  sub_1BFF1D9F4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BD45E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0BD4630(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C05F7DC8(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1BFEABF78(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    char v24 = *(unsigned char *)(*(void *)(a1 + 48) + v6);
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    unint64_t v14 = *(void *)(v25 + 16);
    unint64_t v13 = *(void *)(v25 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      uint64_t result = sub_1C05F7DC8(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v25 + 16) = v14 + 1;
    uint64_t v15 = v25 + 16 * v14;
    *(unsigned char *)(v15 + 32) = v24;
    *(void *)(v15 + 40) = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t FormatPropertyDefinition.identifier.getter()
{
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v50 = (char *)&v46 - v1;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v49 = (char *)&v46 - v3;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v48 = (char *)&v46 - v5;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v47 = (char *)&v46 - v7;
  sub_1BFF719C0();
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v46 - v12;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v46 - v15;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v20 - 8);
  int v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v46 - v27;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v29 - 8);
  unint64_t v31 = (char *)&v46 - v30;
  uint64_t v32 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v46 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF6DBA4(v51, (uint64_t)v34);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v36 = &type metadata for FormatColor;
      sub_1C0BD50B8((uint64_t)v34, (uint64_t)v28, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
      uint64_t v35 = *((void *)v28 + 2);
      swift_bridgeObjectRetain();
      uint64_t v37 = (uint64_t)v28;
      char v38 = &qword_1EB88E9B8;
      long long v39 = sub_1C003F2E8;
      goto LABEL_16;
    case 2u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      uint64_t v35 = *((void *)v25 + 2);
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      return v35;
    case 3u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v22, type metadata accessor for FormatEnumPropertyDefinition);
      uint64_t v35 = *((void *)v22 + 2);
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatEnumPropertyDefinition);
      return v35;
    case 4u:
      unint64_t v40 = &qword_1EB88E990;
      unint64_t v36 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      unint64_t v41 = sub_1C0092008;
      sub_1C0BD50B8((uint64_t)v34, (uint64_t)v19, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v35 = *((void *)v19 + 2);
      swift_bridgeObjectRetain();
      uint64_t v37 = (uint64_t)v19;
      goto LABEL_15;
    case 5u:
      sub_1C0BD51AC((uint64_t)v34, (uint64_t)v16);
      uint64_t v35 = *((void *)v16 + 2);
      swift_bridgeObjectRetain();
      sub_1C0BD523C((uint64_t)v16);
      return v35;
    case 6u:
      sub_1BFF7C110((uint64_t)v34, (uint64_t)v13);
      uint64_t v35 = *((void *)v13 + 2);
      swift_bridgeObjectRetain();
      sub_1BFFB476C((uint64_t)v13);
      return v35;
    case 7u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF719C0);
      uint64_t v35 = *((void *)v10 + 2);
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v10, (uint64_t (*)(void))sub_1BFF719C0);
      return v35;
    case 8u:
      unint64_t v40 = &qword_1EB88E9A0;
      unint64_t v36 = &type metadata for FormatAsyncImageContent;
      uint64_t v42 = sub_1C0036630;
      unint64_t v41 = sub_1C0036630;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v47;
      goto LABEL_14;
    case 9u:
      unint64_t v40 = &qword_1EB88E998;
      unint64_t v36 = &type metadata for FormatVideoNodeContent;
      uint64_t v42 = sub_1C00738F0;
      unint64_t v41 = sub_1C00738F0;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v48;
      goto LABEL_14;
    case 0xAu:
      unint64_t v40 = &qword_1EB88E9B0;
      unint64_t v36 = &type metadata for FormatFont;
      uint64_t v42 = sub_1C0084C58;
      unint64_t v41 = sub_1C0084C58;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v49;
      goto LABEL_14;
    case 0xBu:
      unint64_t v40 = &qword_1EB88E9A8;
      unint64_t v36 = &type metadata for FormatVideoPlayerContent;
      uint64_t v42 = sub_1C006F9DC;
      unint64_t v41 = sub_1C006F9DC;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v50;
LABEL_14:
      sub_1C0BD50B8(v43, v44, v40, (uint64_t (*)(void))v42, (uint64_t)v36);
      uint64_t v35 = *(void *)(v44 + 16);
      swift_bridgeObjectRetain();
      uint64_t v37 = v44;
LABEL_15:
      char v38 = v40;
      long long v39 = v41;
LABEL_16:
      sub_1C0BD513C(v37, v38, (uint64_t (*)(void))v39, (uint64_t)v36);
      break;
    default:
      sub_1BFFBFF9C((uint64_t)v34, (uint64_t)v31);
      uint64_t v35 = *((void *)v31 + 2);
      swift_bridgeObjectRetain();
      sub_1C001A1B0((uint64_t)v31);
      break;
  }
  return v35;
}

uint64_t sub_1C0BD50B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  sub_1BFF718BC(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C0BD513C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  sub_1BFF718BC(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C0BD51AC(uint64_t a1, uint64_t a2)
{
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BD523C(uint64_t a1)
{
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0BD52C4()
{
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v54 = (char *)&v48 - v1;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v53 = (char *)&v48 - v3;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v52 = (char *)&v48 - v5;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v51 = (char *)&v48 - v7;
  sub_1BFF719C0();
  uint64_t v50 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v49 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v48 - v11;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v48 - v14;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v48 - v27;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v29 - 8);
  unint64_t v31 = (char *)&v48 - v30;
  uint64_t v32 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v48 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF6DBA4(v55, (uint64_t)v34);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v36 = &qword_1EB88E9B8;
      uint64_t v37 = &type metadata for FormatColor;
      char v38 = sub_1C003F2E8;
      long long v39 = sub_1C003F2E8;
      uint64_t v40 = (uint64_t)v34;
      goto LABEL_14;
    case 2u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      uint64_t v35 = v25[*(int *)(v23 + 56)];
      sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      return v35;
    case 3u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v21, type metadata accessor for FormatEnumPropertyDefinition);
      uint64_t v35 = v21[112];
      sub_1C0BF0490((uint64_t)v21, type metadata accessor for FormatEnumPropertyDefinition);
      return v35;
    case 4u:
      uint64_t v41 = MEMORY[0x1E4FBC958];
      sub_1C0BD50B8((uint64_t)v34, (uint64_t)v18, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v35 = v18[81];
      uint64_t v42 = (uint64_t)v18;
      uint64_t v43 = &qword_1EB88E990;
      uint64_t v44 = sub_1C0092008;
      uint64_t v45 = v41;
      goto LABEL_15;
    case 5u:
      sub_1C0BD51AC((uint64_t)v34, (uint64_t)v15);
      uint64_t v35 = v15[81];
      sub_1C0BD523C((uint64_t)v15);
      return v35;
    case 6u:
      sub_1BFF7C110((uint64_t)v34, (uint64_t)v12);
      uint64_t v35 = v12[88];
      sub_1BFFB476C((uint64_t)v12);
      return v35;
    case 7u:
      uint64_t v46 = v49;
      sub_1BFF71A74((uint64_t)v34, v49, (uint64_t (*)(void))sub_1BFF719C0);
      uint64_t v35 = *(unsigned __int8 *)(v46 + *(int *)(v50 + 56));
      sub_1C0BF0490(v46, (uint64_t (*)(void))sub_1BFF719C0);
      return v35;
    case 8u:
      unint64_t v36 = &qword_1EB88E9A0;
      uint64_t v37 = &type metadata for FormatAsyncImageContent;
      char v38 = sub_1C0036630;
      long long v39 = sub_1C0036630;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v51;
      goto LABEL_14;
    case 9u:
      unint64_t v36 = &qword_1EB88E998;
      uint64_t v37 = &type metadata for FormatVideoNodeContent;
      char v38 = sub_1C00738F0;
      long long v39 = sub_1C00738F0;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v52;
      goto LABEL_14;
    case 0xAu:
      unint64_t v36 = &qword_1EB88E9B0;
      uint64_t v37 = &type metadata for FormatFont;
      char v38 = sub_1C0084C58;
      long long v39 = sub_1C0084C58;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v53;
      goto LABEL_14;
    case 0xBu:
      unint64_t v36 = &qword_1EB88E9A8;
      uint64_t v37 = &type metadata for FormatVideoPlayerContent;
      char v38 = sub_1C006F9DC;
      long long v39 = sub_1C006F9DC;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v54;
LABEL_14:
      sub_1C0BD50B8(v40, (uint64_t)v28, v36, (uint64_t (*)(void))v38, (uint64_t)v37);
      uint64_t v35 = v28[80];
      uint64_t v42 = (uint64_t)v28;
      uint64_t v43 = v36;
      uint64_t v44 = v39;
      uint64_t v45 = (uint64_t)v37;
LABEL_15:
      sub_1C0BD513C(v42, v43, (uint64_t (*)(void))v44, v45);
      break;
    default:
      sub_1BFFBFF9C((uint64_t)v34, (uint64_t)v31);
      uint64_t v35 = v31[66];
      sub_1C001A1B0((uint64_t)v31);
      break;
  }
  return v35;
}

uint64_t sub_1C0BD5AFC()
{
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v54 = (char *)&v48 - v1;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v53 = (char *)&v48 - v3;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v52 = (char *)&v48 - v5;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v51 = (char *)&v48 - v7;
  sub_1BFF719C0();
  uint64_t v50 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v49 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v48 - v11;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v48 - v14;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v48 - v27;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v29 - 8);
  unint64_t v31 = (char *)&v48 - v30;
  uint64_t v32 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v48 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF6DBA4(v55, (uint64_t)v34);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v36 = &qword_1EB88E9B8;
      uint64_t v37 = &type metadata for FormatColor;
      char v38 = sub_1C003F2E8;
      long long v39 = sub_1C003F2E8;
      uint64_t v40 = (uint64_t)v34;
      goto LABEL_14;
    case 2u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      uint64_t v35 = *(void *)&v25[*(int *)(v23 + 60)];
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      return v35;
    case 3u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v21, type metadata accessor for FormatEnumPropertyDefinition);
      uint64_t v35 = *((void *)v21 + 15);
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v21, type metadata accessor for FormatEnumPropertyDefinition);
      return v35;
    case 4u:
      uint64_t v41 = MEMORY[0x1E4FBC958];
      sub_1C0BD50B8((uint64_t)v34, (uint64_t)v18, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v35 = *((void *)v18 + 11);
      swift_bridgeObjectRetain();
      uint64_t v42 = (uint64_t)v18;
      uint64_t v43 = &qword_1EB88E990;
      uint64_t v44 = sub_1C0092008;
      uint64_t v45 = v41;
      goto LABEL_15;
    case 5u:
      sub_1C0BD51AC((uint64_t)v34, (uint64_t)v15);
      uint64_t v35 = *((void *)v15 + 11);
      swift_bridgeObjectRetain();
      sub_1C0BD523C((uint64_t)v15);
      return v35;
    case 6u:
      sub_1BFF7C110((uint64_t)v34, (uint64_t)v12);
      uint64_t v35 = *((void *)v12 + 12);
      swift_bridgeObjectRetain();
      sub_1BFFB476C((uint64_t)v12);
      return v35;
    case 7u:
      uint64_t v46 = v49;
      sub_1BFF71A74((uint64_t)v34, v49, (uint64_t (*)(void))sub_1BFF719C0);
      uint64_t v35 = *(void *)(v46 + *(int *)(v50 + 60));
      swift_bridgeObjectRetain();
      sub_1C0BF0490(v46, (uint64_t (*)(void))sub_1BFF719C0);
      return v35;
    case 8u:
      unint64_t v36 = &qword_1EB88E9A0;
      uint64_t v37 = &type metadata for FormatAsyncImageContent;
      char v38 = sub_1C0036630;
      long long v39 = sub_1C0036630;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v51;
      goto LABEL_14;
    case 9u:
      unint64_t v36 = &qword_1EB88E998;
      uint64_t v37 = &type metadata for FormatVideoNodeContent;
      char v38 = sub_1C00738F0;
      long long v39 = sub_1C00738F0;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v52;
      goto LABEL_14;
    case 0xAu:
      unint64_t v36 = &qword_1EB88E9B0;
      uint64_t v37 = &type metadata for FormatFont;
      char v38 = sub_1C0084C58;
      long long v39 = sub_1C0084C58;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v53;
      goto LABEL_14;
    case 0xBu:
      unint64_t v36 = &qword_1EB88E9A8;
      uint64_t v37 = &type metadata for FormatVideoPlayerContent;
      char v38 = sub_1C006F9DC;
      long long v39 = sub_1C006F9DC;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v54;
LABEL_14:
      sub_1C0BD50B8(v40, (uint64_t)v28, v36, (uint64_t (*)(void))v38, (uint64_t)v37);
      uint64_t v35 = *((void *)v28 + 11);
      swift_bridgeObjectRetain();
      uint64_t v42 = (uint64_t)v28;
      uint64_t v43 = v36;
      uint64_t v44 = v39;
      uint64_t v45 = (uint64_t)v37;
LABEL_15:
      sub_1C0BD513C(v42, v43, (uint64_t (*)(void))v44, v45);
      break;
    default:
      sub_1BFFBFF9C((uint64_t)v34, (uint64_t)v31);
      uint64_t v35 = *((void *)v31 + 9);
      swift_bridgeObjectRetain();
      sub_1C001A1B0((uint64_t)v31);
      break;
  }
  return v35;
}

uint64_t sub_1C0BD6374()
{
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v51 = (char *)&v47 - v1;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v50 = (char *)&v47 - v3;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v49 = (char *)&v47 - v5;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v48 = (char *)&v47 - v7;
  sub_1BFF719C0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v47 - v12;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v47 - v15;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v47 - v27;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v29 - 8);
  unint64_t v31 = (char *)&v47 - v30;
  uint64_t v32 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v47 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF6DBA4(v52, (uint64_t)v34);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v36 = &qword_1EB88E9B8;
      uint64_t v37 = &type metadata for FormatColor;
      char v38 = sub_1C003F2E8;
      long long v39 = sub_1C003F2E8;
      uint64_t v40 = (uint64_t)v34;
      goto LABEL_14;
    case 2u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      uint64_t v35 = v25[64];
      sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      return v35;
    case 3u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v22, type metadata accessor for FormatEnumPropertyDefinition);
      uint64_t v35 = v22[80];
      sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatEnumPropertyDefinition);
      return v35;
    case 4u:
      uint64_t v41 = MEMORY[0x1E4FBC958];
      sub_1C0BD50B8((uint64_t)v34, (uint64_t)v19, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v35 = v19[64];
      uint64_t v42 = (uint64_t)v19;
      uint64_t v43 = &qword_1EB88E990;
      uint64_t v44 = sub_1C0092008;
      uint64_t v45 = v41;
      goto LABEL_15;
    case 5u:
      sub_1C0BD51AC((uint64_t)v34, (uint64_t)v16);
      uint64_t v35 = v16[64];
      sub_1C0BD523C((uint64_t)v16);
      return v35;
    case 6u:
      sub_1BFF7C110((uint64_t)v34, (uint64_t)v13);
      uint64_t v35 = v13[64];
      sub_1BFFB476C((uint64_t)v13);
      return v35;
    case 7u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF719C0);
      uint64_t v35 = v10[64];
      sub_1C0BF0490((uint64_t)v10, (uint64_t (*)(void))sub_1BFF719C0);
      return v35;
    case 8u:
      unint64_t v36 = &qword_1EB88E9A0;
      uint64_t v37 = &type metadata for FormatAsyncImageContent;
      char v38 = sub_1C0036630;
      long long v39 = sub_1C0036630;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v48;
      goto LABEL_14;
    case 9u:
      unint64_t v36 = &qword_1EB88E998;
      uint64_t v37 = &type metadata for FormatVideoNodeContent;
      char v38 = sub_1C00738F0;
      long long v39 = sub_1C00738F0;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v49;
      goto LABEL_14;
    case 0xAu:
      unint64_t v36 = &qword_1EB88E9B0;
      uint64_t v37 = &type metadata for FormatFont;
      char v38 = sub_1C0084C58;
      long long v39 = sub_1C0084C58;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v50;
      goto LABEL_14;
    case 0xBu:
      unint64_t v36 = &qword_1EB88E9A8;
      uint64_t v37 = &type metadata for FormatVideoPlayerContent;
      char v38 = sub_1C006F9DC;
      long long v39 = sub_1C006F9DC;
      uint64_t v40 = (uint64_t)v34;
      uint64_t v28 = v51;
LABEL_14:
      sub_1C0BD50B8(v40, (uint64_t)v28, v36, (uint64_t (*)(void))v38, (uint64_t)v37);
      uint64_t v35 = v28[64];
      uint64_t v42 = (uint64_t)v28;
      uint64_t v43 = v36;
      uint64_t v44 = v39;
      uint64_t v45 = (uint64_t)v37;
LABEL_15:
      sub_1C0BD513C(v42, v43, (uint64_t (*)(void))v44, v45);
      break;
    default:
      sub_1BFFBFF9C((uint64_t)v34, (uint64_t)v31);
      uint64_t v35 = v31[64];
      sub_1C001A1B0((uint64_t)v31);
      break;
  }
  return v35;
}

uint64_t FormatEnumPropertyDefinition.deprecated.getter()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t FormatEnumPropertyDefinition.compilerFlags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0BD6B98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v49[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF05A0();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E60A8();
  sub_1BFF8784C(&qword_1EB8923A0, (void (*)(uint64_t))sub_1C08E60A8);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v60 = v8;
  char v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF718BC(0, &qword_1EB88E968, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v49[-32] = v29;
      *(void *)&v49[-24] = sub_1C08E6168();
      *(void *)&v49[-16] = sub_1C08E61F8();
      *(void *)&v49[-8] = sub_1C08E6288();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86C38);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v69 = 0uLL;
  char v70 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v69 = xmmword_1C153AB20;
  char v70 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v69 = xmmword_1C1557FA0;
  char v70 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v69 = xmmword_1C1557FB0;
  char v70 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v69 = xmmword_1C1557FD0;
  char v70 = 0;
  int v53 = sub_1C15206AC();
  long long v69 = xmmword_1C1557FC0;
  char v70 = 0;
  sub_1BFE113DC();
  sub_1C152065C();
  uint64_t v52 = v33;
  long long v51 = xmmword_1C1557FE0;
  long long v69 = xmmword_1C1557FE0;
  char v70 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1C15206EC();
    int v50 = v66;
  }
  else
  {
    int v50 = 0;
  }
  long long v51 = xmmword_1C1557FF0;
  long long v69 = xmmword_1C1557FF0;
  char v70 = 0;
  if (sub_1C152071C())
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v51 = v24;
    long long v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v51 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v69 = xmmword_1C1558010;
  char v70 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v71;
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v44 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  uint64_t v45 = v51;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v45;
  uint64_t v46 = v52;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v46;
  uint64_t v47 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v47;
  uint64_t v48 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v48;
  *(unsigned char *)(v17 + 64) = v53 & 1;
  *(unsigned char *)(v17 + 80) = v50;
  *(void *)(v17 + 88) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BD7500@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned __int8 v66 = &v53[-v5];
  sub_1BFF8796C();
  uint64_t v68 = v6;
  uint64_t v65 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v3);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v53[-v10];
  sub_1C0BF0634();
  uint64_t v13 = v12;
  uint64_t v67 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E6564();
  sub_1BFF8784C(&qword_1EA1A0700, (void (*)(uint64_t))sub_1C08E6564);
  uint64_t v16 = (uint64_t)v70;
  sub_1C1520EBC();
  uint64_t v17 = (void *)v16;
  if (v16)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v17);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v64 = v8;
  uint64_t v18 = v68;
  char v70 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v19 = sub_1C1520EAC();
  char v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = v13;
  uint64_t v22 = v69;
  if (v20)
  {
    uint64_t v23 = sub_1C152070C();
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v25 = (unsigned char *)(v23 + 48);
      while (*v25 != 1)
      {
        v25 += 24;
        if (!--v24) {
          goto LABEL_7;
        }
      }
      uint64_t v30 = v15;
      uint64_t v32 = *((void *)v25 - 2);
      uint64_t v31 = *((void *)v25 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v33 = swift_bridgeObjectRelease();
      char v70 = (unsigned char *)v21;
      MEMORY[0x1F4188790](v33);
      sub_1C08E6668();
      *(void *)&v53[-32] = v34;
      *(void *)&v53[-24] = sub_1BFF8784C(&qword_1EA1A06E8, (void (*)(uint64_t))sub_1C08E6668);
      *(void *)&v53[-16] = sub_1BFF8784C(&qword_1EA1A06F0, (void (*)(uint64_t))sub_1C08E6668);
      *(void *)&v53[-8] = sub_1BFF8784C(&qword_1EA1A06F8, (void (*)(uint64_t))sub_1C08E6668);
      swift_getKeyPath();
      swift_retain();
      uint64_t v35 = sub_1C085FB14((uint64_t)&unk_1F1B86C68);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v17 = (void *)swift_allocError();
      *(void *)uint64_t v36 = v32;
      *(void *)(v36 + 8) = v31;
      *(void *)(v36 + 16) = v35;
      *(_OWORD *)(v36 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v32, v31, 1);
      (*(void (**)(unsigned char *, unsigned char *))(v67 + 8))(v30, v70);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v73 = 0uLL;
  char v74 = 0;
  uint64_t v26 = sub_1C152069C();
  uint64_t v28 = v27;
  uint64_t v63 = v26;
  long long v73 = xmmword_1C153AB20;
  char v74 = 0;
  uint64_t v29 = sub_1C152069C();
  uint64_t v38 = v37;
  uint64_t v62 = v29;
  long long v73 = xmmword_1C1557FA0;
  char v74 = 0;
  uint64_t v60 = sub_1C152069C();
  uint64_t v61 = v39;
  long long v73 = xmmword_1C1557FB0;
  char v74 = 0;
  uint64_t v58 = sub_1C152069C();
  uint64_t v59 = v40;
  long long v73 = xmmword_1C1557FD0;
  char v74 = 0;
  int v75 = sub_1C15206AC();
  uint64_t v57 = v38;
  sub_1C151631C();
  long long v73 = xmmword_1C1557FC0;
  char v74 = 0;
  sub_1BFF8784C(&qword_1EB871168, MEMORY[0x1E4F27928]);
  sub_1C152065C();
  uint64_t v56 = v28;
  long long v55 = xmmword_1C1557FE0;
  long long v73 = xmmword_1C1557FE0;
  char v74 = 0;
  char v42 = sub_1C152071C();
  if (v42)
  {
    long long v71 = v55;
    char v72 = 0;
    sub_1C15206EC();
    int v54 = v76;
  }
  else
  {
    int v54 = 0;
  }
  long long v55 = xmmword_1C1557FF0;
  long long v73 = xmmword_1C1557FF0;
  char v74 = 0;
  if (sub_1C152071C())
  {
    long long v71 = v55;
    char v72 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v43 = v18;
    sub_1C15206EC();
    uint64_t v44 = v64;
    uint64_t v45 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v44, v43);
  }
  else
  {
    uint64_t v45 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v73 = xmmword_1C1558010;
  char v74 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  uint64_t v46 = (uint64_t)v66;
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v15, v21);
  sub_1BFF71B30();
  uint64_t v48 = v47;
  sub_1BFF883B8((uint64_t)v70, v22 + v47[13], (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1BFF883B8(v46, v22 + v48[16], (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v49 = v56;
  *(void *)uint64_t v22 = v63;
  *(void *)(v22 + 8) = v49;
  uint64_t v50 = v57;
  *(void *)(v22 + 16) = v62;
  *(void *)(v22 + 24) = v50;
  uint64_t v51 = v61;
  *(void *)(v22 + 32) = v60;
  *(void *)(v22 + 40) = v51;
  uint64_t v52 = v59;
  *(void *)(v22 + 48) = v58;
  *(void *)(v22 + 56) = v52;
  *(unsigned char *)(v22 + 64) = v75 & 1;
  *(unsigned char *)(v22 + v48[14]) = v54;
  *(void *)(v22 + v48[15]) = v45;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BD7FD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v50[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF06C8();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E6948();
  sub_1BFF8784C(&qword_1EB86CF08, (void (*)(uint64_t))sub_1C08E6948);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v60 = v8;
  uint64_t v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF718BC(0, &qword_1EB869B88, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v50[-32] = v29;
      *(void *)&v50[-24] = sub_1C08E6A08();
      *(void *)&v50[-16] = sub_1C08E6A98();
      *(void *)&v50[-8] = sub_1C08E6B28();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86C98);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v70 = 0uLL;
  char v71 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v70 = xmmword_1C153AB20;
  char v71 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v70 = xmmword_1C1557FA0;
  char v71 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v70 = xmmword_1C1557FB0;
  char v71 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v70 = xmmword_1C1557FD0;
  char v71 = 0;
  int v72 = sub_1C15206AC();
  long long v70 = xmmword_1C1557FC0;
  char v71 = 0;
  sub_1BFE7E344();
  sub_1C152065C();
  uint64_t v53 = v33;
  long long v52 = xmmword_1C1557FE0;
  long long v70 = xmmword_1C1557FE0;
  char v71 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v66 = v52;
    char v67 = 0;
    sub_1C15206EC();
    int v51 = v73;
  }
  else
  {
    int v51 = 0;
  }
  long long v52 = xmmword_1C1557FF0;
  long long v70 = xmmword_1C1557FF0;
  char v71 = 0;
  if (sub_1C152071C())
  {
    long long v66 = v52;
    char v67 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v52 = v24;
    uint64_t v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v52 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v70 = xmmword_1C1558010;
  char v71 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v68;
  char v44 = v69;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v45 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  *(unsigned char *)(v17 + 80) = v44;
  uint64_t v46 = v52;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v46;
  uint64_t v47 = v53;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v47;
  uint64_t v48 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v48;
  uint64_t v49 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v49;
  *(unsigned char *)(v17 + 64) = v72 & 1;
  *(unsigned char *)(v17 + 81) = v51;
  *(void *)(v17 + 88) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BD8938@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v50[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF075C();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E6E04();
  sub_1BFF8784C(&qword_1EB86CF18, (void (*)(uint64_t))sub_1C08E6E04);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v60 = v8;
  uint64_t v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF71970(0, &qword_1EB869B98, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v50[-32] = v29;
      *(void *)&v50[-24] = sub_1C08E6EB8();
      *(void *)&v50[-16] = sub_1C08E6F3C();
      *(void *)&v50[-8] = sub_1C08E6FC0();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86CC8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v70 = 0uLL;
  char v71 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v70 = xmmword_1C153AB20;
  char v71 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v70 = xmmword_1C1557FA0;
  char v71 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v70 = xmmword_1C1557FB0;
  char v71 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v70 = xmmword_1C1557FD0;
  char v71 = 0;
  int v72 = sub_1C15206AC();
  long long v70 = xmmword_1C1557FC0;
  char v71 = 0;
  sub_1C152065C();
  uint64_t v53 = v33;
  long long v52 = xmmword_1C1557FE0;
  long long v70 = xmmword_1C1557FE0;
  char v71 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v66 = v52;
    char v67 = 0;
    sub_1C15206EC();
    int v51 = v73;
  }
  else
  {
    int v51 = 0;
  }
  long long v52 = xmmword_1C1557FF0;
  long long v70 = xmmword_1C1557FF0;
  char v71 = 0;
  if (sub_1C152071C())
  {
    long long v66 = v52;
    char v67 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v52 = v24;
    uint64_t v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v52 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v70 = xmmword_1C1558010;
  char v71 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v68;
  char v44 = v69;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v45 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  *(unsigned char *)(v17 + 80) = v44;
  uint64_t v46 = v52;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v46;
  uint64_t v47 = v53;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v47;
  uint64_t v48 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v48;
  uint64_t v49 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v49;
  *(unsigned char *)(v17 + 64) = v72 & 1;
  *(unsigned char *)(v17 + 81) = v51;
  *(void *)(v17 + 88) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BD9284@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v49[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF0918();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E79E8();
  sub_1BFF8784C(&qword_1EB892390, (void (*)(uint64_t))sub_1C08E79E8);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v60 = v8;
  uint64_t v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF718BC(0, &qword_1EB88E958, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v49[-32] = v29;
      *(void *)&v49[-24] = sub_1C08E7AA8();
      *(void *)&v49[-16] = sub_1C08E7B38();
      *(void *)&v49[-8] = sub_1C08E7BC8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86D58);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v69 = 0uLL;
  char v70 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v69 = xmmword_1C153AB20;
  char v70 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v69 = xmmword_1C1557FA0;
  char v70 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v69 = xmmword_1C1557FB0;
  char v70 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v69 = xmmword_1C1557FD0;
  char v70 = 0;
  int v53 = sub_1C15206AC();
  long long v69 = xmmword_1C1557FC0;
  char v70 = 0;
  sub_1BFE3D1DC();
  sub_1C152065C();
  uint64_t v52 = v33;
  long long v51 = xmmword_1C1557FE0;
  long long v69 = xmmword_1C1557FE0;
  char v70 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1C15206EC();
    int v50 = v66;
  }
  else
  {
    int v50 = 0;
  }
  long long v51 = xmmword_1C1557FF0;
  long long v69 = xmmword_1C1557FF0;
  char v70 = 0;
  if (sub_1C152071C())
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v51 = v24;
    uint64_t v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v51 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v69 = xmmword_1C1558010;
  char v70 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v71;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v44 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  uint64_t v45 = v51;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v45;
  uint64_t v46 = v52;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v46;
  uint64_t v47 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v47;
  uint64_t v48 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v48;
  *(unsigned char *)(v17 + 64) = v53 & 1;
  *(unsigned char *)(v17 + 80) = v50;
  *(void *)(v17 + 88) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BD9BEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v49[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF09AC();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E7EA4();
  sub_1BFF8784C(&qword_1EA1A0748, (void (*)(uint64_t))sub_1C08E7EA4);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v60 = v8;
  uint64_t v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF718BC(0, &qword_1EA1A0728, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v49[-32] = v29;
      *(void *)&v49[-24] = sub_1C08E7F64();
      *(void *)&v49[-16] = sub_1C08E7FF4();
      *(void *)&v49[-8] = sub_1C08E8084();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86D88);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v69 = 0uLL;
  char v70 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v69 = xmmword_1C153AB20;
  char v70 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v69 = xmmword_1C1557FA0;
  char v70 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v69 = xmmword_1C1557FB0;
  char v70 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v69 = xmmword_1C1557FD0;
  char v70 = 0;
  int v53 = sub_1C15206AC();
  long long v69 = xmmword_1C1557FC0;
  char v70 = 0;
  sub_1C0073944();
  sub_1C152065C();
  uint64_t v52 = v33;
  long long v51 = xmmword_1C1557FE0;
  long long v69 = xmmword_1C1557FE0;
  char v70 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1C15206EC();
    int v50 = v66;
  }
  else
  {
    int v50 = 0;
  }
  long long v51 = xmmword_1C1557FF0;
  long long v69 = xmmword_1C1557FF0;
  char v70 = 0;
  if (sub_1C152071C())
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v51 = v24;
    uint64_t v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v51 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v69 = xmmword_1C1558010;
  char v70 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v71;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v44 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  uint64_t v45 = v51;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v45;
  uint64_t v46 = v52;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v46;
  uint64_t v47 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v47;
  uint64_t v48 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v48;
  *(unsigned char *)(v17 + 64) = v53 & 1;
  *(unsigned char *)(v17 + 80) = v50;
  *(void *)(v17 + 88) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BDA554@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v49[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF0A40();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E8360();
  sub_1BFF8784C(&qword_1EA1A0790, (void (*)(uint64_t))sub_1C08E8360);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v60 = v8;
  uint64_t v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF718BC(0, &qword_1EA1A0770, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v49[-32] = v29;
      *(void *)&v49[-24] = sub_1C08E8420();
      *(void *)&v49[-16] = sub_1C08E84B0();
      *(void *)&v49[-8] = sub_1C08E8540();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86DB8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v69 = 0uLL;
  char v70 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v69 = xmmword_1C153AB20;
  char v70 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v69 = xmmword_1C1557FA0;
  char v70 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v69 = xmmword_1C1557FB0;
  char v70 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v69 = xmmword_1C1557FD0;
  char v70 = 0;
  int v53 = sub_1C15206AC();
  long long v69 = xmmword_1C1557FC0;
  char v70 = 0;
  sub_1BFE9439C();
  sub_1C152065C();
  uint64_t v52 = v33;
  long long v51 = xmmword_1C1557FE0;
  long long v69 = xmmword_1C1557FE0;
  char v70 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1C15206EC();
    int v50 = v66;
  }
  else
  {
    int v50 = 0;
  }
  long long v51 = xmmword_1C1557FF0;
  long long v69 = xmmword_1C1557FF0;
  char v70 = 0;
  if (sub_1C152071C())
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v51 = v24;
    uint64_t v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v51 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v69 = xmmword_1C1558010;
  char v70 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v71;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v44 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  uint64_t v45 = v51;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v45;
  uint64_t v46 = v52;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v46;
  uint64_t v47 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v47;
  uint64_t v48 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v48;
  *(unsigned char *)(v17 + 64) = v53 & 1;
  *(unsigned char *)(v17 + 80) = v50;
  *(void *)(v17 + 88) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BDAEBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v49[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF0AD4();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E881C();
  sub_1BFF8784C(&qword_1EA1A07D8, (void (*)(uint64_t))sub_1C08E881C);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v60 = v8;
  uint64_t v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF718BC(0, &qword_1EA1A07B8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v49[-32] = v29;
      *(void *)&v49[-24] = sub_1C08E88DC();
      *(void *)&v49[-16] = sub_1C08E896C();
      *(void *)&v49[-8] = sub_1C08E89FC();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86DE8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v69 = 0uLL;
  char v70 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v69 = xmmword_1C153AB20;
  char v70 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v69 = xmmword_1C1557FA0;
  char v70 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v69 = xmmword_1C1557FB0;
  char v70 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v69 = xmmword_1C1557FD0;
  char v70 = 0;
  int v53 = sub_1C15206AC();
  long long v69 = xmmword_1C1557FC0;
  char v70 = 0;
  sub_1C006FA30();
  sub_1C152065C();
  uint64_t v52 = v33;
  long long v51 = xmmword_1C1557FE0;
  long long v69 = xmmword_1C1557FE0;
  char v70 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1C15206EC();
    int v50 = v66;
  }
  else
  {
    int v50 = 0;
  }
  long long v51 = xmmword_1C1557FF0;
  long long v69 = xmmword_1C1557FF0;
  char v70 = 0;
  if (sub_1C152071C())
  {
    long long v67 = v51;
    char v68 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v51 = v24;
    uint64_t v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v51 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v69 = xmmword_1C1558010;
  char v70 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v71;
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v44 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  uint64_t v45 = v51;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v45;
  uint64_t v46 = v52;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v46;
  uint64_t v47 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v47;
  uint64_t v48 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v48;
  *(unsigned char *)(v17 + 64) = v53 & 1;
  *(unsigned char *)(v17 + 80) = v50;
  *(void *)(v17 + 88) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0BDB824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10;
  uint64_t v15 = (int *)type metadata accessor for FormatPrimitivePropertyDefinition();
  uint64_t v16 = a9 + v15[13];
  uint64_t v17 = sub_1C151FD8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a11, v17);
  *(unsigned char *)(a9 + v15[14]) = a12;
  *(void *)(a9 + v15[15]) = a13;
  return sub_1BFF883B8(a14, a9 + v15[16], (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

uint64_t sub_1C0BDB91C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E5F80();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E60A8();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EB8923A0, (void (*)(uint64_t))sub_1C08E60A8);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B3390(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E5F80);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B3390(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B3390(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  long long v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B3390(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B3524(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F8E9C(v36[9], 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 80);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C0831850(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E5F80);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E6014();
      sub_1BFF8784C(&qword_1EB86EA80, (void (*)(uint64_t))sub_1C08E6014);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F90F4(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E5F80);
}

uint64_t sub_1C0BDC378(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v73 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v73 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v73 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v79 = (char *)&v73 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v73 - v15;
  MEMORY[0x1F4188790](v16);
  long long v81 = (uint64_t *)((char *)&v73 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v82 = (char *)&v73 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v73 - v21;
  sub_1C08E643C();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF71B30();
  uint64_t v29 = v28;
  sub_1C08E6564();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EA1A0700, (void (*)(uint64_t))sub_1C08E6564);
  unint64_t v78 = (int *)v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v83 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v84;
  sub_1C06B3068(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E643C);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v82;
  uint64_t v84 = v46;
  ((void (*)(char *))v41)(v82);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B3068(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v81;
  uint64_t v54 = v51;
  v51((char *)v81, v84, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B3068(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v80;
  uint64_t v82 = v42;
  v54(v80, v84, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B3068(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v79;
  v54(v79, v84, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B31FC(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  uint64_t v60 = (uint64_t)v36 + v78[13];
  v54(v77, v84, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F8684(v60, 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  int v61 = v54;
  uint64_t v84 = 0;
  int v62 = *((unsigned __int8 *)v36 + v78[14]);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v63 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v64 = (uint64_t)v76;
  v54(v76, v63, v38);
  swift_storeEnumTagMultiPayload();
  if (v62)
  {
    uint64_t v65 = v84;
    char v66 = sub_1C0831614(v64, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v65)
    {
LABEL_11:
      sub_1C0BF0490(v64, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E643C);
    }
    uint64_t v84 = 0;
    if (v66)
    {
      long long v85 = xmmword_1C1557FE0;
      char v86 = 0;
      char v87 = 1;
      sub_1C08E64D0();
      sub_1BFF8784C(&qword_1EA1A0708, (void (*)(uint64_t))sub_1C08E64D0);
      uint64_t v67 = v84;
      sub_1C1520BAC();
      if (v67) {
        goto LABEL_11;
      }
      uint64_t v84 = 0;
    }
  }
  sub_1C0BF0490(v64, type metadata accessor for FormatVersionRequirement);
  uint64_t v68 = qword_1EB887628;
  swift_bridgeObjectRetain();
  long long v81 = v36;
  if (v68 != -1) {
    swift_once();
  }
  uint64_t v69 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v70 = (uint64_t)v74;
  v61(v74, v69, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v70, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v71 = (uint64_t)v81 + v78[16];
  uint64_t v72 = (uint64_t)v75;
  v61(v75, v69, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F8A90(v71, 8, 0, 0, v72, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v72, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E643C);
}

uint64_t sub_1C0BDCDB4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E6820();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E6948();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EB86CF08, (void (*)(uint64_t))sub_1C08E6948);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B2D40(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E6820);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B2D40(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B2D40(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  long long v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B2D40(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B2ED4(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F8058(v36[9], *((unsigned char *)v36 + 80), 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 81);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C08313D8(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E6820);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E68B4();
      sub_1BFF8784C(&qword_1EB86EA60, (void (*)(uint64_t))sub_1C08E68B4);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F8278(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E6820);
}

uint64_t sub_1C0BDD814(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E6CDC();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E6E04();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EB86CF18, (void (*)(uint64_t))sub_1C08E6E04);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B2A18(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E6CDC);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B2A18(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B2A18(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  long long v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B2A18(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B2BAC(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F7A30(v36[9], *((unsigned char *)v36 + 80), 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 81);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C083119C(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E6CDC);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E6D70();
      sub_1BFF8784C(&qword_1EB86EAB0, (void (*)(uint64_t))sub_1C08E6D70);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F7C4C(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E6CDC);
}

uint64_t sub_1C0BDE268(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E78C0();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E79E8();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EB892390, (void (*)(uint64_t))sub_1C08E79E8);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B20A0(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E78C0);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B20A0(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B20A0(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  long long v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B20A0(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B2234(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F6560(v36[9], 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 80);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C0830AE8(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E78C0);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E7954();
      sub_1BFF8784C(&qword_1EB86EA70, (void (*)(uint64_t))sub_1C08E7954);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F67B8(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E78C0);
}

uint64_t sub_1C0BDECC4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E7D7C();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E7EA4();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EA1A0748, (void (*)(uint64_t))sub_1C08E7EA4);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B1D78(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E7D7C);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1D78(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1D78(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  long long v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1D78(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B1F0C(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F5EFC(v36[9], 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 80);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C08308AC(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E7D7C);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E7E10();
      sub_1BFF8784C(&qword_1EA1A0750, (void (*)(uint64_t))sub_1C08E7E10);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F6154(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E7D7C);
}

uint64_t sub_1C0BDF720(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E8238();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E8360();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EA1A0790, (void (*)(uint64_t))sub_1C08E8360);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B1A50(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E8238);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1A50(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1A50(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  long long v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1A50(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B1BE4(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F5898(v36[9], 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 80);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C0830670(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E8238);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E82CC();
      sub_1BFF8784C(&qword_1EA1A0798, (void (*)(uint64_t))sub_1C08E82CC);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F5AF0(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E8238);
}

uint64_t sub_1C0BE017C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  unsigned __int8 v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  long long v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  unint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  long long v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E86F4();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E881C();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EA1A07D8, (void (*)(uint64_t))sub_1C08E881C);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B1728(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E86F4);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1728(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  long long v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1728(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  long long v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B1728(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B18BC(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F5234(v36[9], 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 80);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C0830434(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E86F4);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E8788();
      sub_1BFF8784C(&qword_1EA1A07E0, (void (*)(uint64_t))sub_1C08E8788);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F548C(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E86F4);
}

uint64_t FormatPrimitivePropertyDefinition.deprecated.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

uint64_t FormatPrimitivePropertyDefinition.compilerFlags.getter(uint64_t a1)
{
  sub_1C0BEA2E8(a1);
  return swift_bridgeObjectRetain();
}

uint64_t FormatPropertyDefinition.type.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF6DBA4(v1, (uint64_t)v5);
  *a1 = byte_1C1595BDA[(int)swift_getEnumCaseMultiPayload()];
  return sub_1C0BF0490((uint64_t)v5, type metadata accessor for FormatPropertyDefinition);
}

uint64_t FormatPropertyDefinition.description.getter()
{
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v50 = (char *)&v46 - v1;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v49 = (char *)&v46 - v3;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v48 = (char *)&v46 - v5;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v47 = (char *)&v46 - v7;
  sub_1BFF719C0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v46 - v12;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v46 - v15;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v46 - v27;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v46 - v30;
  uint64_t v32 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v46 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF6DBA4(v51, (uint64_t)v34);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = &type metadata for FormatColor;
      sub_1C0BD50B8((uint64_t)v34, (uint64_t)v28, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
      uint64_t v35 = *((void *)v28 + 6);
      swift_bridgeObjectRetain();
      uint64_t v37 = (uint64_t)v28;
      uint64_t v38 = &qword_1EB88E9B8;
      uint64_t v39 = sub_1C003F2E8;
      goto LABEL_16;
    case 2u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      uint64_t v35 = *((void *)v25 + 6);
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1BFF71B30);
      return v35;
    case 3u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v22, type metadata accessor for FormatEnumPropertyDefinition);
      uint64_t v35 = *((void *)v22 + 8);
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatEnumPropertyDefinition);
      return v35;
    case 4u:
      uint64_t v40 = &qword_1EB88E990;
      uint64_t v36 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v41 = sub_1C0092008;
      sub_1C0BD50B8((uint64_t)v34, (uint64_t)v19, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v35 = *((void *)v19 + 6);
      swift_bridgeObjectRetain();
      uint64_t v37 = (uint64_t)v19;
      goto LABEL_15;
    case 5u:
      sub_1C0BD51AC((uint64_t)v34, (uint64_t)v16);
      uint64_t v35 = *((void *)v16 + 6);
      swift_bridgeObjectRetain();
      sub_1C0BD523C((uint64_t)v16);
      return v35;
    case 6u:
      sub_1BFF7C110((uint64_t)v34, (uint64_t)v13);
      uint64_t v35 = *((void *)v13 + 6);
      swift_bridgeObjectRetain();
      sub_1BFFB476C((uint64_t)v13);
      return v35;
    case 7u:
      sub_1BFF71A74((uint64_t)v34, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF719C0);
      uint64_t v35 = *((void *)v10 + 6);
      swift_bridgeObjectRetain();
      sub_1C0BF0490((uint64_t)v10, (uint64_t (*)(void))sub_1BFF719C0);
      return v35;
    case 8u:
      uint64_t v40 = &qword_1EB88E9A0;
      uint64_t v36 = &type metadata for FormatAsyncImageContent;
      uint64_t v42 = sub_1C0036630;
      uint64_t v41 = sub_1C0036630;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v47;
      goto LABEL_14;
    case 9u:
      uint64_t v40 = &qword_1EB88E998;
      uint64_t v36 = &type metadata for FormatVideoNodeContent;
      uint64_t v42 = sub_1C00738F0;
      uint64_t v41 = sub_1C00738F0;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v48;
      goto LABEL_14;
    case 0xAu:
      uint64_t v40 = &qword_1EB88E9B0;
      uint64_t v36 = &type metadata for FormatFont;
      uint64_t v42 = sub_1C0084C58;
      uint64_t v41 = sub_1C0084C58;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v49;
      goto LABEL_14;
    case 0xBu:
      uint64_t v40 = &qword_1EB88E9A8;
      uint64_t v36 = &type metadata for FormatVideoPlayerContent;
      uint64_t v42 = sub_1C006F9DC;
      uint64_t v41 = sub_1C006F9DC;
      uint64_t v43 = (uint64_t)v34;
      uint64_t v44 = (uint64_t)v50;
LABEL_14:
      sub_1C0BD50B8(v43, v44, v40, (uint64_t (*)(void))v42, (uint64_t)v36);
      uint64_t v35 = *(void *)(v44 + 48);
      swift_bridgeObjectRetain();
      uint64_t v37 = v44;
LABEL_15:
      uint64_t v38 = v40;
      uint64_t v39 = v41;
LABEL_16:
      sub_1C0BD513C(v37, v38, (uint64_t (*)(void))v39, (uint64_t)v36);
      break;
    default:
      sub_1BFFBFF9C((uint64_t)v34, (uint64_t)v31);
      uint64_t v35 = *((void *)v31 + 6);
      swift_bridgeObjectRetain();
      sub_1C001A1B0((uint64_t)v31);
      break;
  }
  return v35;
}

uint64_t sub_1C0BE15A0()
{
  return 0;
}

uint64_t sub_1C0BE166C()
{
  return 0;
}

uint64_t sub_1C0BE1744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return 0;
}

uint64_t sub_1C0BE17F4()
{
  return 0;
}

uint64_t sub_1C0BE18CC()
{
  return 0;
}

uint64_t sub_1C0BE1998()
{
  return 0;
}

uint64_t sub_1C0BE1A64()
{
  return 0;
}

uint64_t sub_1C0BE1B3C()
{
  return 0;
}

uint64_t sub_1C0BE1C14()
{
  return 0;
}

uint64_t sub_1C0BE1CEC()
{
  return 0;
}

BOOL sub_1C0BE1DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - v11;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v42 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v42 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v22 = sub_1C1520A9C(), result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v26 = sub_1C1520A9C(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          int v27 = *(unsigned __int8 *)(a1 + 65);
          int v28 = *(unsigned __int8 *)(a2 + 65);
          if (v27 == 2)
          {
            if (v28 != 2) {
              return 0;
            }
          }
          else if (v28 == 2 || ((v28 & 1) == 0) == (v27 & 1))
          {
            return 0;
          }
          if (*(unsigned __int8 *)(a1 + 66) != *(unsigned __int8 *)(a2 + 66)) {
            return 0;
          }
          uint64_t v43 = v5;
          uint64_t v45 = *(void *)(a1 + 72);
          uint64_t v29 = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v44 = sub_1C00AC354(v45, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v44 & 1) == 0) {
            return 0;
          }
          sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          uint64_t v31 = v30;
          uint64_t v32 = a1 + *(int *)(v30 + 64);
          uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF2341C(v32, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF2341C(a2 + *(int *)(v31 + 64), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v33);
          uint64_t v34 = (uint64_t)&v12[*(int *)(v10 + 48)];
          sub_1BFF2341C((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v33);
          sub_1BFF2341C((uint64_t)v18, v34, (unint64_t *)&qword_1EB884FE0, v33);
          uint64_t v35 = v43;
          uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
          if (v36((uint64_t)v12, 1, v4) == 1)
          {
            uint64_t v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
            if (v36(v34, 1, v4) == 1)
            {
              sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              return 1;
            }
          }
          else
          {
            sub_1BFF2341C((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            if (v36(v34, 1, v4) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v7, v34, v4);
              sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
              char v39 = sub_1C151E5CC();
              uint64_t v40 = *(void (**)(char *, uint64_t))(v35 + 8);
              v40(v7, v4);
              uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v41);
              v40(v15, v4);
              sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v41);
              return (v39 & 1) != 0;
            }
            uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v38);
            (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v4);
          }
          sub_1C0BEA420((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE2414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v44[-v10];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v7, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v44[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v44[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v46 = v4;
          uint64_t v26 = *(void *)(a1 + 72);
          uint64_t v27 = *(void *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            uint64_t v49 = *(void *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              uint64_t v48 = v27;
              swift_retain_n();
              char v28 = static FormatColor.== infix(_:_:)(&v49, (unint64_t *)&v48);
              swift_release();
              sub_1BFDC11BC(v26);
              if ((v28 & 1) == 0) {
                return 0;
              }
              goto LABEL_21;
            }
            sub_1BFDC11A4(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              uint64_t v29 = *(void *)(a1 + 88);
              uint64_t v30 = *(void *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v45 = sub_1C00AC354(v29, v30);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v45)
              {
                sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                uint64_t v32 = v31;
                uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF2341C(a1 + *(int *)(v31 + 64), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF2341C(a2 + *(int *)(v32 + 64), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v34 = (uint64_t)&v11[*(int *)(v9 + 48)];
                sub_1BFF2341C((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v33);
                sub_1BFF2341C((uint64_t)v17, v34, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v36 = v46;
                uint64_t v35 = v47;
                uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
                if (v37((uint64_t)v11, 1, v46) == 1)
                {
                  uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                  if (v37(v34, 1, v36) == 1)
                  {
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BFF2341C((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  if (v37(v34, 1, v36) != 1)
                  {
                    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v6, v34, v36);
                    sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                    uint64_t v40 = v35;
                    char v41 = sub_1C151E5CC();
                    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
                    v42(v6, v36);
                    uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v43);
                    v42(v14, v36);
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v43);
                    return (v41 & 1) != 0;
                  }
                  char v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v39);
                  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v14, v36);
                }
                sub_1C0BEA420((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              }
            }
            return 0;
          }
          sub_1BFDC11A4(v27);
          sub_1BFDC11BC(v26);
          sub_1BFDC11BC(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE2AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v91 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v87 = &v81[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v88 = v7;
  MEMORY[0x1F4188790](v7);
  char v92 = &v81[-v8];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v6, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v81[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v89 = &v81[-v14];
  MEMORY[0x1F4188790](v15);
  char v90 = &v81[-v16];
  uint64_t v17 = sub_1C151631C();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v93 = v17;
  uint64_t v94 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = &v81[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB85C768, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v22);
  char v25 = &v81[-v24];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB871180, v21, v9);
  MEMORY[0x1F4188790](v26 - 8);
  char v28 = &v81[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = &v81[-v30];
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = &v81[-v33];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v35 = sub_1C1520A9C(), BOOL result = 0, (v35 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v37 = sub_1C1520A9C(), BOOL result = 0, (v37 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v38 = sub_1C1520A9C(), BOOL result = 0, (v38 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (v39 = sub_1C1520A9C(), BOOL result = 0, (v39 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v84 = v4;
          char v85 = v20;
          uint64_t v83 = v12;
          sub_1BFF71B30();
          uint64_t v41 = v40;
          uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          sub_1BFF2341C(a1 + *(int *)(v40 + 52), (uint64_t)v34, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          uint64_t v86 = v41;
          sub_1BFF2341C(a2 + *(int *)(v41 + 52), (uint64_t)v31, (unint64_t *)&qword_1EB871180, v42);
          uint64_t v43 = (uint64_t)&v25[*(int *)(v23 + 48)];
          sub_1BFF2341C((uint64_t)v34, (uint64_t)v25, (unint64_t *)&qword_1EB871180, v42);
          sub_1BFF2341C((uint64_t)v31, v43, (unint64_t *)&qword_1EB871180, v42);
          uint64_t v44 = v93;
          int v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
          if (v45((uint64_t)v25, 1, v93) == 1)
          {
            uint64_t v46 = v44;
            uint64_t v47 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
            sub_1BFE305AC((uint64_t)v31, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
            sub_1BFE305AC((uint64_t)v34, (unint64_t *)&qword_1EB871180, v47);
            if (v45(v43, 1, v46) == 1)
            {
              sub_1BFE305AC((uint64_t)v25, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
LABEL_22:
              uint64_t v59 = v86;
              if (*(unsigned __int8 *)(a1 + *(int *)(v86 + 56)) != *(unsigned __int8 *)(a2 + *(int *)(v86 + 56))) {
                return 0;
              }
              uint64_t v60 = *(int *)(v86 + 60);
              uint64_t v61 = *(void *)(a1 + v60);
              uint64_t v62 = *(void *)(a2 + v60);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v63 = sub_1C00AC354(v61, v62);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v63 & 1) == 0) {
                return 0;
              }
              uint64_t v64 = a1 + *(int *)(v59 + 64);
              char v65 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              uint64_t v66 = v90;
              sub_1BFF2341C(v64, (uint64_t)v90, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              uint64_t v67 = v89;
              sub_1BFF2341C(a2 + *(int *)(v59 + 64), (uint64_t)v89, (unint64_t *)&qword_1EB884FE0, v65);
              uint64_t v68 = v92;
              uint64_t v69 = (uint64_t)&v92[*(int *)(v88 + 48)];
              sub_1BFF2341C((uint64_t)v66, (uint64_t)v92, (unint64_t *)&qword_1EB884FE0, v65);
              sub_1BFF2341C((uint64_t)v67, v69, (unint64_t *)&qword_1EB884FE0, v65);
              uint64_t v70 = v91;
              uint64_t v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
              uint64_t v72 = v84;
              if (v71((uint64_t)v68, 1, v84) == 1)
              {
                uint64_t v73 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFE305AC((uint64_t)v67, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFE305AC((uint64_t)v66, (unint64_t *)&qword_1EB884FE0, v73);
                if (v71(v69, 1, v72) == 1)
                {
                  sub_1BFE305AC((uint64_t)v68, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  return 1;
                }
              }
              else
              {
                uint64_t v74 = (uint64_t)v83;
                sub_1BFF2341C((uint64_t)v68, (uint64_t)v83, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                if (v71(v69, 1, v72) != 1)
                {
                  long long v77 = v87;
                  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v70 + 32))(v87, v69, v72);
                  sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                  char v78 = sub_1C151E5CC();
                  unint64_t v79 = *(void (**)(unsigned char *, uint64_t))(v70 + 8);
                  v79(v77, v72);
                  uint64_t v80 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v67, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v66, (unint64_t *)&qword_1EB884FE0, v80);
                  v79((unsigned char *)v74, v72);
                  sub_1BFE305AC((uint64_t)v68, (unint64_t *)&qword_1EB884FE0, v80);
                  return (v78 & 1) != 0;
                }
                uint64_t v75 = v74;
                unsigned __int8 v76 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFE305AC((uint64_t)v67, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFE305AC((uint64_t)v66, (unint64_t *)&qword_1EB884FE0, v76);
                (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v75, v72);
              }
              uint64_t v50 = &qword_1EB884FE8;
              uint64_t v51 = &qword_1EB884FE0;
              uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              uint64_t v53 = (uint64_t)v68;
              goto LABEL_20;
            }
          }
          else
          {
            sub_1BFF2341C((uint64_t)v25, (uint64_t)v28, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
            if (v45(v43, 1, v44) != 1)
            {
              uint64_t v54 = v94;
              uint64_t v55 = v44;
              uint64_t v56 = v85;
              (*(void (**)(unsigned char *, uint64_t, uint64_t))(v94 + 32))(v85, v43, v55);
              sub_1BFF8784C((unint64_t *)&qword_1EB871160, MEMORY[0x1E4F27928]);
              int v82 = sub_1C151E5CC();
              uint64_t v57 = *(void (**)(unsigned char *, uint64_t))(v54 + 8);
              v57(v56, v55);
              uint64_t v58 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
              sub_1BFE305AC((uint64_t)v31, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
              sub_1BFE305AC((uint64_t)v34, (unint64_t *)&qword_1EB871180, v58);
              v57(v28, v55);
              sub_1BFE305AC((uint64_t)v25, (unint64_t *)&qword_1EB871180, v58);
              if ((v82 & 1) == 0) {
                return 0;
              }
              goto LABEL_22;
            }
            uint64_t v48 = v44;
            uint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
            sub_1BFE305AC((uint64_t)v31, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
            sub_1BFE305AC((uint64_t)v34, (unint64_t *)&qword_1EB871180, v49);
            (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v28, v48);
          }
          uint64_t v50 = &qword_1EB85C768;
          uint64_t v51 = &qword_1EB871180;
          uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
          uint64_t v53 = (uint64_t)v25;
LABEL_20:
          sub_1C0BEA420(v53, (unint64_t *)v50, (unint64_t *)v51, v52);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE355C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - v11;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v41 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v22 = sub_1C1520A9C(), result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v26 = sub_1C1520A9C(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          char v27 = *(unsigned char *)(a2 + 80);
          if (*(unsigned char *)(a1 + 80))
          {
            if (!*(unsigned char *)(a2 + 80)) {
              return 0;
            }
          }
          else
          {
            if (*(double *)(a1 + 72) != *(double *)(a2 + 72)) {
              char v27 = 1;
            }
            if (v27) {
              return 0;
            }
          }
          if (*(unsigned __int8 *)(a1 + 81) != *(unsigned __int8 *)(a2 + 81)) {
            return 0;
          }
          uint64_t v42 = v5;
          uint64_t v44 = *(void *)(a1 + 88);
          uint64_t v28 = *(void *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v43 = sub_1C00AC354(v44, v28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0) {
            return 0;
          }
          sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          uint64_t v30 = v29;
          uint64_t v31 = a1 + *(int *)(v29 + 64);
          uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF2341C(v31, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF2341C(a2 + *(int *)(v30 + 64), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v32);
          uint64_t v33 = (uint64_t)&v12[*(int *)(v10 + 48)];
          sub_1BFF2341C((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v32);
          sub_1BFF2341C((uint64_t)v18, v33, (unint64_t *)&qword_1EB884FE0, v32);
          uint64_t v34 = v42;
          char v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
          if (v35((uint64_t)v12, 1, v4) == 1)
          {
            uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v36);
            if (v35(v33, 1, v4) == 1)
            {
              sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              return 1;
            }
          }
          else
          {
            sub_1BFF2341C((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            if (v35(v33, 1, v4) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v7, v33, v4);
              sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
              char v38 = sub_1C151E5CC();
              char v39 = *(void (**)(char *, uint64_t))(v34 + 8);
              v39(v7, v4);
              uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v40);
              v39(v15, v4);
              sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v40);
              return (v38 & 1) != 0;
            }
            char v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
            (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v4);
          }
          sub_1C0BEA420((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE3BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v41 - v11;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v41 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v22 = sub_1C1520A9C(), result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v26 = sub_1C1520A9C(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          char v27 = *(unsigned char *)(a2 + 80);
          if (*(unsigned char *)(a1 + 80))
          {
            if (!*(unsigned char *)(a2 + 80)) {
              return 0;
            }
          }
          else
          {
            if (*(void *)(a1 + 72) != *(void *)(a2 + 72)) {
              char v27 = 1;
            }
            if (v27) {
              return 0;
            }
          }
          if (*(unsigned __int8 *)(a1 + 81) != *(unsigned __int8 *)(a2 + 81)) {
            return 0;
          }
          uint64_t v42 = v5;
          uint64_t v44 = *(void *)(a1 + 88);
          uint64_t v28 = *(void *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v43 = sub_1C00AC354(v44, v28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0) {
            return 0;
          }
          sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          uint64_t v30 = v29;
          uint64_t v31 = a1 + *(int *)(v29 + 64);
          uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFF2341C(v31, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFF2341C(a2 + *(int *)(v30 + 64), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v32);
          uint64_t v33 = (uint64_t)&v12[*(int *)(v10 + 48)];
          sub_1BFF2341C((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v32);
          sub_1BFF2341C((uint64_t)v18, v33, (unint64_t *)&qword_1EB884FE0, v32);
          uint64_t v34 = v42;
          char v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
          if (v35((uint64_t)v12, 1, v4) == 1)
          {
            uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v36);
            if (v35(v33, 1, v4) == 1)
            {
              sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              return 1;
            }
          }
          else
          {
            sub_1BFF2341C((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            if (v35(v33, 1, v4) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v7, v33, v4);
              sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
              char v38 = sub_1C151E5CC();
              char v39 = *(void (**)(char *, uint64_t))(v34 + 8);
              v39(v7, v4);
              uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v40);
              v39(v15, v4);
              sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v40);
              return (v38 & 1) != 0;
            }
            char v37 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v37);
            (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v4);
          }
          sub_1C0BEA420((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE41E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v43 - v11;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v43 - v20;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v22 = sub_1C1520A9C(), result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v26 = sub_1C1520A9C(), result = 0, (v26 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v27 = *(void *)(a1 + 80);
          uint64_t v28 = *(void *)(a2 + 80);
          if (!v27)
          {
            if (v28) {
              return 0;
            }
            goto LABEL_23;
          }
          if (!v28) {
            return 0;
          }
          if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && v27 == v28
            || (char v29 = sub_1C1520A9C(), result = 0, (v29 & 1) != 0))
          {
LABEL_23:
            if (*(unsigned __int8 *)(a1 + 88) != *(unsigned __int8 *)(a2 + 88)) {
              return 0;
            }
            uint64_t v44 = v5;
            uint64_t v46 = *(void *)(a1 + 96);
            uint64_t v30 = *(void *)(a2 + 96);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            int v45 = sub_1C00AC354(v46, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v45 & 1) == 0) {
              return 0;
            }
            sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
            uint64_t v32 = v31;
            uint64_t v33 = a1 + *(int *)(v31 + 64);
            uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFF2341C(v33, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFF2341C(a2 + *(int *)(v32 + 64), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v34);
            uint64_t v35 = (uint64_t)&v12[*(int *)(v10 + 48)];
            sub_1BFF2341C((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v34);
            sub_1BFF2341C((uint64_t)v18, v35, (unint64_t *)&qword_1EB884FE0, v34);
            uint64_t v36 = v44;
            char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
            if (v37((uint64_t)v12, 1, v4) == 1)
            {
              char v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v38);
              if (v37(v35, 1, v4) == 1)
              {
                sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                return 1;
              }
            }
            else
            {
              sub_1BFF2341C((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              if (v37(v35, 1, v4) != 1)
              {
                (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v7, v35, v4);
                sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                char v40 = sub_1C151E5CC();
                uint64_t v41 = *(void (**)(char *, uint64_t))(v36 + 8);
                v41(v7, v4);
                uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v42);
                v41(v15, v4);
                sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v42);
                return (v40 & 1) != 0;
              }
              char v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v39);
              (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v4);
            }
            sub_1C0BEA420((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            return 0;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE4838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v91 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v87 = &v81[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v88 = v7;
  MEMORY[0x1F4188790](v7);
  char v92 = &v81[-v8];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v6, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v81[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v89 = &v81[-v14];
  MEMORY[0x1F4188790](v15);
  char v90 = &v81[-v16];
  uint64_t v17 = sub_1C1515FDC();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v93 = v17;
  uint64_t v94 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = &v81[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB871130, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v22);
  char v25 = &v81[-v24];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB8948A0, v21, v9);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = &v81[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = &v81[-v30];
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = &v81[-v33];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v35 = sub_1C1520A9C(), BOOL result = 0, (v35 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v37 = sub_1C1520A9C(), BOOL result = 0, (v37 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v38 = sub_1C1520A9C(), BOOL result = 0, (v38 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (v39 = sub_1C1520A9C(), BOOL result = 0, (v39 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v84 = v4;
          char v85 = v20;
          uint64_t v83 = v12;
          sub_1BFF719C0();
          uint64_t v41 = v40;
          uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
          sub_1BFF2341C(a1 + *(int *)(v40 + 52), (uint64_t)v34, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          uint64_t v86 = v41;
          sub_1BFF2341C(a2 + *(int *)(v41 + 52), (uint64_t)v31, (unint64_t *)&qword_1EB8948A0, v42);
          uint64_t v43 = (uint64_t)&v25[*(int *)(v23 + 48)];
          sub_1BFF2341C((uint64_t)v34, (uint64_t)v25, (unint64_t *)&qword_1EB8948A0, v42);
          sub_1BFF2341C((uint64_t)v31, v43, (unint64_t *)&qword_1EB8948A0, v42);
          uint64_t v44 = v93;
          int v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
          if (v45((uint64_t)v25, 1, v93) == 1)
          {
            uint64_t v46 = v44;
            uint64_t v47 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
            sub_1BFE305AC((uint64_t)v31, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            sub_1BFE305AC((uint64_t)v34, (unint64_t *)&qword_1EB8948A0, v47);
            if (v45(v43, 1, v46) == 1)
            {
              sub_1BFE305AC((uint64_t)v25, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
LABEL_22:
              uint64_t v59 = v86;
              if (*(unsigned __int8 *)(a1 + *(int *)(v86 + 56)) != *(unsigned __int8 *)(a2 + *(int *)(v86 + 56))) {
                return 0;
              }
              uint64_t v60 = *(int *)(v86 + 60);
              uint64_t v61 = *(void *)(a1 + v60);
              uint64_t v62 = *(void *)(a2 + v60);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v63 = sub_1C00AC354(v61, v62);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v63 & 1) == 0) {
                return 0;
              }
              uint64_t v64 = a1 + *(int *)(v59 + 64);
              char v65 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              uint64_t v66 = v90;
              sub_1BFF2341C(v64, (uint64_t)v90, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              uint64_t v67 = v89;
              sub_1BFF2341C(a2 + *(int *)(v59 + 64), (uint64_t)v89, (unint64_t *)&qword_1EB884FE0, v65);
              uint64_t v68 = v92;
              uint64_t v69 = (uint64_t)&v92[*(int *)(v88 + 48)];
              sub_1BFF2341C((uint64_t)v66, (uint64_t)v92, (unint64_t *)&qword_1EB884FE0, v65);
              sub_1BFF2341C((uint64_t)v67, v69, (unint64_t *)&qword_1EB884FE0, v65);
              uint64_t v70 = v91;
              uint64_t v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
              uint64_t v72 = v84;
              if (v71((uint64_t)v68, 1, v84) == 1)
              {
                uint64_t v73 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFE305AC((uint64_t)v67, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFE305AC((uint64_t)v66, (unint64_t *)&qword_1EB884FE0, v73);
                if (v71(v69, 1, v72) == 1)
                {
                  sub_1BFE305AC((uint64_t)v68, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  return 1;
                }
              }
              else
              {
                uint64_t v74 = (uint64_t)v83;
                sub_1BFF2341C((uint64_t)v68, (uint64_t)v83, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                if (v71(v69, 1, v72) != 1)
                {
                  long long v77 = v87;
                  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v70 + 32))(v87, v69, v72);
                  sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                  char v78 = sub_1C151E5CC();
                  unint64_t v79 = *(void (**)(unsigned char *, uint64_t))(v70 + 8);
                  v79(v77, v72);
                  uint64_t v80 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v67, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v66, (unint64_t *)&qword_1EB884FE0, v80);
                  v79((unsigned char *)v74, v72);
                  sub_1BFE305AC((uint64_t)v68, (unint64_t *)&qword_1EB884FE0, v80);
                  return (v78 & 1) != 0;
                }
                uint64_t v75 = v74;
                unsigned __int8 v76 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFE305AC((uint64_t)v67, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFE305AC((uint64_t)v66, (unint64_t *)&qword_1EB884FE0, v76);
                (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v75, v72);
              }
              uint64_t v50 = &qword_1EB884FE8;
              uint64_t v51 = &qword_1EB884FE0;
              uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
              uint64_t v53 = (uint64_t)v68;
              goto LABEL_20;
            }
          }
          else
          {
            sub_1BFF2341C((uint64_t)v25, (uint64_t)v28, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            if (v45(v43, 1, v44) != 1)
            {
              uint64_t v54 = v94;
              uint64_t v55 = v44;
              uint64_t v56 = v85;
              (*(void (**)(unsigned char *, uint64_t, uint64_t))(v94 + 32))(v85, v43, v55);
              sub_1BFF8784C((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
              int v82 = sub_1C151E5CC();
              uint64_t v57 = *(void (**)(unsigned char *, uint64_t))(v54 + 8);
              v57(v56, v55);
              uint64_t v58 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
              sub_1BFE305AC((uint64_t)v31, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
              sub_1BFE305AC((uint64_t)v34, (unint64_t *)&qword_1EB8948A0, v58);
              v57(v28, v55);
              sub_1BFE305AC((uint64_t)v25, (unint64_t *)&qword_1EB8948A0, v58);
              if ((v82 & 1) == 0) {
                return 0;
              }
              goto LABEL_22;
            }
            uint64_t v48 = v44;
            uint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
            sub_1BFE305AC((uint64_t)v31, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            sub_1BFE305AC((uint64_t)v34, (unint64_t *)&qword_1EB8948A0, v49);
            (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v28, v48);
          }
          uint64_t v50 = &qword_1EB871130;
          uint64_t v51 = &qword_1EB8948A0;
          uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
          uint64_t v53 = (uint64_t)v25;
LABEL_20:
          sub_1C0BEA420(v53, (unint64_t *)v50, (unint64_t *)v51, v52);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE52D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v44[-v10];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v7, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v44[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v44[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v46 = v4;
          uint64_t v26 = *(void *)(a1 + 72);
          uint64_t v27 = *(void *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            unint64_t v49 = *(void *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              uint64_t v48 = v27;
              swift_retain_n();
              char v28 = static FormatAsyncImageContent.== infix(_:_:)(&v49, (unint64_t *)&v48);
              swift_release();
              sub_1BFDC11BC(v26);
              if ((v28 & 1) == 0) {
                return 0;
              }
              goto LABEL_21;
            }
            sub_1BFDC11A4(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              uint64_t v29 = *(void *)(a1 + 88);
              uint64_t v30 = *(void *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v45 = sub_1C00AC354(v29, v30);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v45)
              {
                sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                uint64_t v32 = v31;
                uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF2341C(a1 + *(int *)(v31 + 64), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF2341C(a2 + *(int *)(v32 + 64), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v34 = (uint64_t)&v11[*(int *)(v9 + 48)];
                sub_1BFF2341C((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v33);
                sub_1BFF2341C((uint64_t)v17, v34, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v36 = v46;
                uint64_t v35 = v47;
                char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
                if (v37((uint64_t)v11, 1, v46) == 1)
                {
                  char v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                  if (v37(v34, 1, v36) == 1)
                  {
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BFF2341C((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  if (v37(v34, 1, v36) != 1)
                  {
                    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v6, v34, v36);
                    sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                    uint64_t v40 = v35;
                    char v41 = sub_1C151E5CC();
                    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
                    v42(v6, v36);
                    uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v43);
                    v42(v14, v36);
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v43);
                    return (v41 & 1) != 0;
                  }
                  char v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v39);
                  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v14, v36);
                }
                sub_1C0BEA420((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              }
            }
            return 0;
          }
          sub_1BFDC11A4(v27);
          sub_1BFDC11BC(v26);
          sub_1BFDC11BC(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE5980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v44[-v10];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v7, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v44[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v44[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v46 = v4;
          uint64_t v26 = *(void *)(a1 + 72);
          uint64_t v27 = *(void *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            unint64_t v49 = *(void *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              uint64_t v48 = v27;
              swift_retain_n();
              char v28 = static FormatVideoNodeContent.== infix(_:_:)(&v49, (unint64_t *)&v48);
              swift_release();
              sub_1BFEF68C0(v26);
              if ((v28 & 1) == 0) {
                return 0;
              }
              goto LABEL_21;
            }
            sub_1BFEF683C(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              uint64_t v29 = *(void *)(a1 + 88);
              uint64_t v30 = *(void *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v45 = sub_1C00AC354(v29, v30);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v45)
              {
                sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                uint64_t v32 = v31;
                uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF2341C(a1 + *(int *)(v31 + 64), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF2341C(a2 + *(int *)(v32 + 64), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v34 = (uint64_t)&v11[*(int *)(v9 + 48)];
                sub_1BFF2341C((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v33);
                sub_1BFF2341C((uint64_t)v17, v34, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v36 = v46;
                uint64_t v35 = v47;
                char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
                if (v37((uint64_t)v11, 1, v46) == 1)
                {
                  char v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                  if (v37(v34, 1, v36) == 1)
                  {
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BFF2341C((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  if (v37(v34, 1, v36) != 1)
                  {
                    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v6, v34, v36);
                    sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                    uint64_t v40 = v35;
                    char v41 = sub_1C151E5CC();
                    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
                    v42(v6, v36);
                    uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v43);
                    v42(v14, v36);
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v43);
                    return (v41 & 1) != 0;
                  }
                  char v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v39);
                  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v14, v36);
                }
                sub_1C0BEA420((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              }
            }
            return 0;
          }
          sub_1BFEF683C(v27);
          sub_1BFEF68C0(v26);
          sub_1BFEF68C0(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE602C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v44[-v10];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v7, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v44[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v44[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v46 = v4;
          uint64_t v26 = *(void *)(a1 + 72);
          uint64_t v27 = *(void *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            uint64_t v49 = *(void *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              uint64_t v48 = v27;
              swift_retain_n();
              char v28 = static FormatFont.== infix(_:_:)(&v49, (unint64_t *)&v48);
              swift_release();
              sub_1BFEF68C0(v26);
              if ((v28 & 1) == 0) {
                return 0;
              }
              goto LABEL_21;
            }
            sub_1BFEF683C(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              uint64_t v29 = *(void *)(a1 + 88);
              uint64_t v30 = *(void *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v45 = sub_1C00AC354(v29, v30);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v45)
              {
                sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                uint64_t v32 = v31;
                uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF2341C(a1 + *(int *)(v31 + 64), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF2341C(a2 + *(int *)(v32 + 64), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v34 = (uint64_t)&v11[*(int *)(v9 + 48)];
                sub_1BFF2341C((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v33);
                sub_1BFF2341C((uint64_t)v17, v34, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v36 = v46;
                uint64_t v35 = v47;
                char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
                if (v37((uint64_t)v11, 1, v46) == 1)
                {
                  char v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                  if (v37(v34, 1, v36) == 1)
                  {
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BFF2341C((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  if (v37(v34, 1, v36) != 1)
                  {
                    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v6, v34, v36);
                    sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                    uint64_t v40 = v35;
                    char v41 = sub_1C151E5CC();
                    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
                    v42(v6, v36);
                    uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v43);
                    v42(v14, v36);
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v43);
                    return (v41 & 1) != 0;
                  }
                  char v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v39);
                  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v14, v36);
                }
                sub_1C0BEA420((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              }
            }
            return 0;
          }
          sub_1BFEF683C(v27);
          sub_1BFEF68C0(v26);
          sub_1BFEF68C0(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C0BE66D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v44[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v44[-v10];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v7, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v44[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v44[-v19];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C1520A9C(), BOOL result = 0, (v21 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v23 = sub_1C1520A9C(), BOOL result = 0, (v23 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v46 = v4;
          uint64_t v26 = *(void *)(a1 + 72);
          uint64_t v27 = *(void *)(a2 + 72);
          if ((~v26 & 0xF000000000000007) != 0)
          {
            uint64_t v49 = *(void *)(a1 + 72);
            if ((~v27 & 0xF000000000000007) != 0)
            {
              uint64_t v48 = v27;
              swift_retain_n();
              char v28 = static FormatVideoPlayerContent.== infix(_:_:)(&v49, &v48);
              swift_release();
              sub_1BFE14324(v26);
              if ((v28 & 1) == 0) {
                return 0;
              }
              goto LABEL_21;
            }
            sub_1BFF51F0C(v26);
          }
          else if ((~v27 & 0xF000000000000007) == 0)
          {
LABEL_21:
            if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
            {
              uint64_t v29 = *(void *)(a1 + 88);
              uint64_t v30 = *(void *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v45 = sub_1C00AC354(v29, v30);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v45)
              {
                sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
                uint64_t v32 = v31;
                uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                sub_1BFF2341C(a1 + *(int *)(v31 + 64), (uint64_t)v20, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                sub_1BFF2341C(a2 + *(int *)(v32 + 64), (uint64_t)v17, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v34 = (uint64_t)&v11[*(int *)(v9 + 48)];
                sub_1BFF2341C((uint64_t)v20, (uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v33);
                sub_1BFF2341C((uint64_t)v17, v34, (unint64_t *)&qword_1EB884FE0, v33);
                uint64_t v36 = v46;
                uint64_t v35 = v47;
                char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
                if (v37((uint64_t)v11, 1, v46) == 1)
                {
                  char v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v38);
                  if (v37(v34, 1, v36) == 1)
                  {
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    return 1;
                  }
                }
                else
                {
                  sub_1BFF2341C((uint64_t)v11, (uint64_t)v14, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  if (v37(v34, 1, v36) != 1)
                  {
                    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v6, v34, v36);
                    sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                    uint64_t v40 = v35;
                    char v41 = sub_1C151E5CC();
                    uint64_t v42 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
                    v42(v6, v36);
                    uint64_t v43 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v43);
                    v42(v14, v36);
                    sub_1BFE305AC((uint64_t)v11, (unint64_t *)&qword_1EB884FE0, v43);
                    return (v41 & 1) != 0;
                  }
                  char v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  sub_1BFE305AC((uint64_t)v17, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  sub_1BFE305AC((uint64_t)v20, (unint64_t *)&qword_1EB884FE0, v39);
                  (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v14, v36);
                }
                sub_1C0BEA420((uint64_t)v11, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
              }
            }
            return 0;
          }
          sub_1BFF51F0C(v27);
          sub_1BFE14324(v26);
          sub_1BFE14324(v27);
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL static FormatPrimitivePropertyDefinition.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v84 = a4;
  uint64_t v7 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unsigned __int8 v76 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v78 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v70 - v12;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v10, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v79 = (uint64_t)&v70 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v80 = (uint64_t)&v70 - v19;
  char v85 = *(char **)(a3 - 8);
  MEMORY[0x1F4188790](v20);
  long long v81 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C151FD8C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v82 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  char v24 = (char *)&v70 - v23;
  uint64_t v87 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v83 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v70 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v70 - v31;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v33 = sub_1C1520A9C(), BOOL result = 0, (v33 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v35 = sub_1C1520A9C(), BOOL result = 0, (v35 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v36 = sub_1C1520A9C(), BOOL result = 0, (v36 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (v37 = sub_1C1520A9C(), BOOL result = 0, (v37 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            return 0;
          }
          uint64_t v71 = v8;
          uint64_t v72 = v13;
          uint64_t v70 = v7;
          uint64_t v38 = type metadata accessor for FormatPrimitivePropertyDefinition();
          char v39 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
          v39(v32, a1 + *(int *)(v38 + 52), v22);
          uint64_t v73 = v38;
          v39(v29, a2 + *(int *)(v38 + 52), v22);
          uint64_t v40 = &v24[*(int *)(TupleTypeMetadata2 + 48)];
          v39(v24, (uint64_t)v32, v22);
          uint64_t v75 = v40;
          v39(v40, (uint64_t)v29, v22);
          uint64_t v74 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v85 + 6);
          if (v74(v24, 1, a3) == 1)
          {
            char v41 = v24;
            uint64_t v42 = *(void (**)(char *, uint64_t))(v87 + 8);
            v42(v29, v22);
            v42(v32, v22);
            if (v74(v75, 1, a3) == 1)
            {
              v42(v24, v22);
LABEL_21:
              uint64_t v49 = v73;
              if (*(unsigned __int8 *)(a1 + *(int *)(v73 + 56)) == *(unsigned __int8 *)(a2 + *(int *)(v73 + 56)))
              {
                uint64_t v50 = *(int *)(v73 + 60);
                uint64_t v51 = *(void *)(a1 + v50);
                uint64_t v52 = *(void *)(a2 + v50);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                char v53 = sub_1C00AC354(v51, v52);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v53)
                {
                  uint64_t v54 = a1 + *(int *)(v49 + 64);
                  uint64_t v55 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                  uint64_t v56 = v80;
                  sub_1BFF2341C(v54, v80, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                  uint64_t v57 = v79;
                  sub_1BFF2341C(a2 + *(int *)(v49 + 64), v79, (unint64_t *)&qword_1EB884FE0, v55);
                  uint64_t v58 = (uint64_t)v72;
                  uint64_t v59 = (uint64_t)&v72[*(int *)(v78 + 48)];
                  sub_1BFF2341C(v56, (uint64_t)v72, (unint64_t *)&qword_1EB884FE0, v55);
                  sub_1BFF2341C(v57, v59, (unint64_t *)&qword_1EB884FE0, v55);
                  uint64_t v60 = v70;
                  uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
                  if (v61(v58, 1, v70) == 1)
                  {
                    uint64_t v62 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFE305AC(v57, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFE305AC(v56, (unint64_t *)&qword_1EB884FE0, v62);
                    if (v61(v59, 1, v60) == 1)
                    {
                      sub_1BFE305AC((uint64_t)v72, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                      return 1;
                    }
                  }
                  else
                  {
                    uint64_t v63 = v77;
                    sub_1BFF2341C(v58, v77, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    if (v61(v59, 1, v60) != 1)
                    {
                      uint64_t v65 = v71;
                      uint64_t v66 = v76;
                      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v76, v59, v60);
                      sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
                      char v67 = sub_1C151E5CC();
                      uint64_t v68 = *(void (**)(char *, uint64_t))(v65 + 8);
                      v68(v66, v60);
                      uint64_t v69 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                      sub_1BFE305AC(v57, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                      sub_1BFE305AC(v56, (unint64_t *)&qword_1EB884FE0, v69);
                      v68((char *)v63, v60);
                      sub_1BFE305AC(v58, (unint64_t *)&qword_1EB884FE0, v69);
                      return (v67 & 1) != 0;
                    }
                    uint64_t v64 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
                    sub_1BFE305AC(v57, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                    sub_1BFE305AC(v56, (unint64_t *)&qword_1EB884FE0, v64);
                    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v63, v60);
                  }
                  sub_1C0BEA420((uint64_t)v72, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
                }
              }
              return 0;
            }
          }
          else
          {
            v39(v83, (uint64_t)v24, v22);
            uint64_t v43 = v75;
            if (v74(v75, 1, a3) != 1)
            {
              int v45 = v85;
              uint64_t v46 = v81;
              (*((void (**)(char *, char *, uint64_t))v85 + 4))(v81, v43, a3);
              LODWORD(TupleTypeMetadata2) = sub_1C151E5CC();
              uint64_t v47 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
              v47(v46, a3);
              char v85 = v24;
              uint64_t v48 = *(void (**)(char *, uint64_t))(v87 + 8);
              v48(v29, v22);
              v48(v32, v22);
              v47(v83, a3);
              v48(v85, v22);
              if ((TupleTypeMetadata2 & 1) == 0) {
                return 0;
              }
              goto LABEL_21;
            }
            char v41 = v24;
            uint64_t v44 = *(void (**)(char *, uint64_t))(v87 + 8);
            v44(v29, v22);
            v44(v32, v22);
            (*((void (**)(char *, uint64_t))v85 + 1))(v83, a3);
          }
          (*(void (**)(char *, uint64_t))(v82 + 8))(v41, TupleTypeMetadata2);
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t FormatPrimitivePropertyDefinition.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPrimitivePropertyDefinition.required.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FormatPrimitivePropertyDefinition.default.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t FormatPrimitivePropertyDefinition.deprecated.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 56)) = result;
  return result;
}

uint64_t (*FormatPrimitivePropertyDefinition.deprecated.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0BE795C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatPrimitivePropertyDefinition();
  *a1 = sub_1C0BEA2E8(v2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0BE79A8()
{
  uint64_t v0 = type metadata accessor for FormatPrimitivePropertyDefinition();
  uint64_t v1 = swift_bridgeObjectRetain();
  return FormatPrimitivePropertyDefinition.compilerFlags.setter(v1, v0);
}

uint64_t FormatPrimitivePropertyDefinition.compilerFlags.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 60);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FormatPrimitivePropertyDefinition.compilerFlags.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPrimitivePropertyDefinition.editorProperties.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFF2341C(v2 + *(int *)(a1 + 64), a2, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

uint64_t sub_1C0BE7A94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatPrimitivePropertyDefinition.init(from:)(a1, *(void *)(a2 + 16), *(char **)(a2 + 24), a3);
}

uint64_t sub_1C0BE7AB4(void *a1, uint64_t a2)
{
  return FormatPrimitivePropertyDefinition.encode(to:)(a1, a2);
}

BOOL sub_1C0BE7ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatPrimitivePropertyDefinition.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t FormatEnumPropertyDefinition.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.enumName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.required.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t FormatEnumPropertyDefinition.default.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatEnumPropertyDefinition.cases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatEnumPropertyDefinition.deprecated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  return result;
}

uint64_t (*FormatEnumPropertyDefinition.deprecated.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatEnumPropertyDefinition.compilerFlags.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*FormatEnumPropertyDefinition.compilerFlags.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatEnumPropertyDefinition.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatEnumPropertyDefinition(0);
  return sub_1BFF2341C(v1 + *(int *)(v3 + 56), a1, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
}

uint64_t sub_1C0BE7CD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatEnumPropertyDefinition.init(from:)(a1, a2);
}

uint64_t sub_1C0BE7CE8(void *a1)
{
  return FormatEnumPropertyDefinition.encode(to:)(a1);
}

uint64_t sub_1C0BE7D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v21 - v12;
  *(void *)a5 = 1836412517;
  *(void *)(a5 + 8) = 0xE400000000000000;
  uint64_t v14 = *(void *)(a1 + 8);
  *(void *)(a5 + 16) = *(void *)a1;
  *(void *)(a5 + 24) = v14;
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)(a5 + 32) = *(void *)(a1 + 32);
  *(void *)(a5 + 40) = v15;
  *(void *)(a5 + 48) = a2;
  *(void *)(a5 + 56) = a3;
  uint64_t v16 = *(void *)(a1 + 56);
  *(void *)(a5 + 64) = *(void *)(a1 + 48);
  *(void *)(a5 + 72) = v16;
  *(unsigned char *)(a5 + 80) = *(unsigned char *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 80);
  *(void *)(a5 + 88) = *(void *)(a1 + 72);
  *(void *)(a5 + 96) = v17;
  *(void *)(a5 + 104) = a4;
  *(unsigned char *)(a5 + 112) = *(unsigned char *)(a1 + 88);
  *(void *)(a5 + 120) = *(void *)(a1 + 96);
  uint64_t v18 = type metadata accessor for FormatCompilerEnumProperty(0);
  sub_1BFF2341C(a1 + *(int *)(v18 + 48), (uint64_t)v13, (unint64_t *)&qword_1EB884FE0, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C0BF0490(a1, type metadata accessor for FormatCompilerEnumProperty);
  uint64_t v19 = type metadata accessor for FormatEnumPropertyDefinition(0);
  return sub_1BFF883B8((uint64_t)v13, a5 + *(int *)(v19 + 56), (unint64_t *)&qword_1EB884FE0, v10);
}

uint64_t sub_1C0BE7EA4(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE79B90(0, &qword_1EB8782E8, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v76 - v7;
  uint64_t v100 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v9 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v89 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v103 = (uint64_t)&v76 - v12;
  uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (long long *)((char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v97 = (uint64_t)&v76 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v88 = (uint64_t)&v76 - v20;
  sub_1BFE79B90(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, v2);
  uint64_t v99 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v102 = (uint64_t)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v76 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v96 = (uint64_t)&v76 - v27;
  uint64_t v105 = a1;
  sub_1BFE79B90(0, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
  sub_1C0BF032C();
  sub_1C007E638();
  uint64_t v28 = sub_1C151E93C();
  sub_1C0BD4630(v28);
  swift_bridgeObjectRelease();
  sub_1C0607488();
  uint64_t v29 = sub_1C151EC4C();
  swift_bridgeObjectRelease();
  int64_t v30 = *(void *)(v29 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v105 = MEMORY[0x1E4FBC860];
  sub_1C05F7928(0, v30, 0);
  uint64_t v31 = 0;
  uint64_t v76 = v29;
  uint64_t v79 = v29 + 32;
  uint64_t v94 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  char v95 = (void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
  char v92 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
  uint64_t v93 = v16 + 1;
  uint64_t v91 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  long long v90 = xmmword_1C157D0F0;
  uint64_t v81 = v9;
  long long v101 = v25;
  uint64_t v78 = v5;
  uint64_t v87 = v14;
  uint64_t v77 = v16;
  int64_t v80 = v30;
  uint64_t v98 = v13;
  do
  {
    uint64_t v32 = v31;
    char v33 = (unsigned __int8 *)(v79 + 16 * v31);
    uint64_t v86 = v32 + 1;
    uint64_t v34 = *v33;
    uint64_t v35 = *((void *)v33 + 1);
    unint64_t v36 = 0xE700000000000000;
    uint64_t v37 = 0x6E61656C6F6F62;
    switch(v34)
    {
      case 1:
        unint64_t v36 = 0xE400000000000000;
        uint64_t v37 = 1702125924;
        break;
      case 2:
        unint64_t v36 = 0xE400000000000000;
        uint64_t v37 = 1836412517;
        break;
      case 3:
        unint64_t v36 = 0xE500000000000000;
        uint64_t v37 = 0x74616F6C66;
        break;
      case 4:
        uint64_t v37 = 0x72656765746E69;
        break;
      case 5:
        unint64_t v36 = 0xE600000000000000;
        uint64_t v37 = 0x676E69727473;
        break;
      case 6:
        unint64_t v36 = 0xE300000000000000;
        uint64_t v37 = 7107189;
        break;
      case 7:
        unint64_t v36 = 0xE500000000000000;
        uint64_t v37 = 0x726F6C6F63;
        break;
      case 8:
        unint64_t v36 = 0xE500000000000000;
        uint64_t v37 = 0x6567616D69;
        break;
      case 9:
        unint64_t v36 = 0xE500000000000000;
        uint64_t v37 = 0x6F65646976;
        break;
      case 10:
        unint64_t v36 = 0xE400000000000000;
        uint64_t v37 = 1953394534;
        break;
      case 11:
        unint64_t v36 = 0xEB00000000726579;
        uint64_t v37 = 0x616C506F65646976;
        break;
      default:
        break;
    }
    uint64_t v84 = v37;
    unint64_t v85 = v36;
    swift_bridgeObjectRetain();
    uint64_t v83 = v35;
    uint64_t v38 = sub_1C151EC4C();
    int64_t v39 = *(void *)(v38 + 16);
    if (v39)
    {
      uint64_t v104 = MEMORY[0x1E4FBC860];
      sub_1C05F62D0(0, v39, 0);
      unint64_t v40 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v82 = v38;
      uint64_t v41 = v38 + v40;
      uint64_t v42 = *(void *)(v9 + 72);
      do
      {
        uint64_t v43 = v103;
        sub_1BFF6DBA4(v41, v103);
        sub_1BFF6DBA4(v43, (uint64_t)v8);
        uint64_t v44 = v100;
        (*v95)(v8, 0, 1, v100);
        sub_1BFF2341C((uint64_t)v8, (uint64_t)v5, &qword_1EB8782E8, type metadata accessor for FormatPropertyDefinition);
        if ((*v94)(v5, 1, v44) == 1)
        {
          sub_1BFE305AC((uint64_t)v8, &qword_1EB8782E8, type metadata accessor for FormatPropertyDefinition);
          int v45 = (char *)v16 + *(int *)(v13 + 24);
          uint64_t v46 = type metadata accessor for FormatInspectionItem.Value(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
          *uint64_t v16 = v90;
          uint64_t v47 = v93;
          *uint64_t v93 = 0;
          v47[1] = 0;
          uint64_t v48 = (char *)v16 + *(int *)(v13 + 28);
          *(void *)uint64_t v48 = 0;
          *((void *)v48 + 1) = 0;
          v48[16] = -1;
        }
        else
        {
          uint64_t v49 = v89;
          sub_1BFF6DBA4((uint64_t)v5, v89);
          sub_1BFE305AC((uint64_t)v8, &qword_1EB8782E8, type metadata accessor for FormatPropertyDefinition);
          uint64_t v50 = (uint64_t)v16 + *(int *)(v13 + 24);
          sub_1BFF71A74(v49, v50, type metadata accessor for FormatPropertyDefinition);
          uint64_t v51 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
          *uint64_t v16 = v90;
          uint64_t v52 = v93;
          *uint64_t v93 = 0;
          v52[1] = 0;
          char v53 = (char *)v16 + *(int *)(v13 + 28);
          *(void *)char v53 = 0;
          *((void *)v53 + 1) = 0;
          v53[16] = -1;
          sub_1C0BF0490((uint64_t)v5, type metadata accessor for FormatPropertyDefinition);
        }
        uint64_t v54 = v102;
        sub_1BFF71A74((uint64_t)v16, v102, type metadata accessor for FormatInspectionItem);
        (*v92)(v54, 0, 1, v13);
        sub_1C0BF0490(v103, type metadata accessor for FormatPropertyDefinition);
        uint64_t v55 = v104;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F62D0(0, *(void *)(v55 + 16) + 1, 1);
          uint64_t v55 = v104;
        }
        unint64_t v57 = *(void *)(v55 + 16);
        unint64_t v56 = *(void *)(v55 + 24);
        if (v57 >= v56 >> 1)
        {
          sub_1C05F62D0(v56 > 1, v57 + 1, 1);
          uint64_t v55 = v104;
        }
        *(void *)(v55 + 16) = v57 + 1;
        sub_1BFF883B8(v102, v55+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(void *)(v99 + 72) * v57, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem);
        v41 += v42;
        --v39;
        uint64_t v25 = v101;
      }
      while (v39);
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void *)(v55 + 16);
      if (!v58)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v62 = MEMORY[0x1E4FBC860];
        goto LABEL_38;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v55 = MEMORY[0x1E4FBC860];
      uint64_t v58 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (!v58) {
        goto LABEL_37;
      }
    }
    uint64_t v59 = v99;
    uint64_t v60 = v55 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
    swift_bridgeObjectRetain();
    uint64_t v61 = *(void *)(v59 + 72);
    unint64_t v62 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v63 = v8;
      uint64_t v64 = v96;
      sub_1BFF2341C(v60, v96, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem);
      sub_1BFF883B8(v64, (uint64_t)v25, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem);
      if ((*v91)(v25, 1, v98) == 1)
      {
        sub_1BFE305AC((uint64_t)v25, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem);
        uint64_t v8 = v63;
      }
      else
      {
        uint64_t v65 = (uint64_t)v25;
        uint64_t v66 = v88;
        sub_1BFF71A74(v65, v88, type metadata accessor for FormatInspectionItem);
        sub_1BFF71A74(v66, v97, type metadata accessor for FormatInspectionItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v62 = sub_1C0EDFAD8(0, *(void *)(v62 + 16) + 1, 1, v62);
        }
        uint64_t v8 = v63;
        unint64_t v68 = *(void *)(v62 + 16);
        unint64_t v67 = *(void *)(v62 + 24);
        if (v68 >= v67 >> 1) {
          unint64_t v62 = sub_1C0EDFAD8(v67 > 1, v68 + 1, 1, v62);
        }
        *(void *)(v62 + 16) = v68 + 1;
        sub_1BFF71A74(v97, v62+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v68, type metadata accessor for FormatInspectionItem);
        uint64_t v25 = v101;
      }
      v60 += v61;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v5 = v78;
    uint64_t v13 = v98;
    uint64_t v16 = v77;
LABEL_38:
    uint64_t v69 = v105;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = v81;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C05F7928(0, *(void *)(v69 + 16) + 1, 1);
      uint64_t v69 = v105;
    }
    uint64_t v31 = v86;
    unint64_t v72 = *(void *)(v69 + 16);
    unint64_t v71 = *(void *)(v69 + 24);
    if (v72 >= v71 >> 1)
    {
      sub_1C05F7928(v71 > 1, v72 + 1, 1);
      uint64_t v31 = v86;
      uint64_t v69 = v105;
    }
    *(void *)(v69 + 16) = v72 + 1;
    uint64_t v73 = (void *)(v69 + 40 * v72);
    unint64_t v74 = v85;
    v73[4] = v84;
    v73[5] = v74;
    v73[6] = 0;
    v73[7] = 0;
    v73[8] = v62;
    uint64_t v25 = v101;
  }
  while (v31 != v80);
  swift_bridgeObjectRelease();
  return v69;
}

uint64_t sub_1C0BE8B54@<X0>(unsigned char *a1@<X8>)
{
  return FormatPropertyDefinition.type.getter(a1);
}

unsigned char *sub_1C0BE8B78@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E61656C6F6F62;
  switch(*result)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702125924;
      goto LABEL_3;
    case 2:
      *a2 = 1836412517;
      a2[1] = 0xE400000000000000;
      break;
    case 3:
      *a2 = 0x74616F6C66;
      a2[1] = 0xE500000000000000;
      break;
    case 4:
      *a2 = 0x72656765746E69;
      a2[1] = 0xE700000000000000;
      break;
    case 5:
      *a2 = 0x676E69727473;
      a2[1] = 0xE600000000000000;
      break;
    case 6:
      *a2 = 7107189;
      a2[1] = 0xE300000000000000;
      break;
    case 7:
      *a2 = 0x726F6C6F63;
      a2[1] = 0xE500000000000000;
      break;
    case 8:
      *a2 = 0x6567616D69;
      a2[1] = 0xE500000000000000;
      break;
    case 9:
      *a2 = 0x6F65646976;
      a2[1] = 0xE500000000000000;
      break;
    case 0xA:
      *a2 = 1953394534;
      a2[1] = 0xE400000000000000;
      break;
    case 0xB:
      *a2 = 0x616C506F65646976;
      a2[1] = 0xEB00000000726579;
      break;
    default:
LABEL_3:
      *a2 = v3;
      a2[1] = v2;
      break;
  }
  return result;
}

uint64_t sub_1C0BE8CE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatPropertyDefinition.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL _s8NewsFeed28FormatEnumPropertyDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1518CDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  sub_1C0BF0418(0, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v43[-v11];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, v8, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = &v43[-v17];
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = &v43[-v20];
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v22 = sub_1C1520A9C(), result = 0, (v22 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v24 = sub_1C1520A9C(), result = 0, (v24 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v25 = sub_1C1520A9C(), result = 0, (v25 & 1) != 0))
      {
        uint64_t v26 = *(void *)(a1 + 56);
        uint64_t v27 = *(void *)(a2 + 56);
        if (v26)
        {
          if (!v27) {
            return 0;
          }
          if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v26 != v27)
          {
            char v28 = sub_1C1520A9C();
            BOOL result = 0;
            if ((v28 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v27)
        {
          return 0;
        }
        if (*(void *)(a1 + 64) != *(void *)(a2 + 64) || *(void *)(a1 + 72) != *(void *)(a2 + 72))
        {
          char v29 = sub_1C1520A9C();
          BOOL result = 0;
          if ((v29 & 1) == 0) {
            return result;
          }
        }
        if (*(unsigned __int8 *)(a1 + 80) != *(unsigned __int8 *)(a2 + 80)) {
          return 0;
        }
        uint64_t v30 = *(void *)(a1 + 96);
        uint64_t v31 = *(void *)(a2 + 96);
        if (v30)
        {
          if (!v31) {
            return 0;
          }
          if (*(void *)(a1 + 88) != *(void *)(a2 + 88) || v30 != v31)
          {
            char v32 = sub_1C1520A9C();
            BOOL result = 0;
            if ((v32 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v31)
        {
          return 0;
        }
        if ((sub_1C00DEEB0(*(void *)(a1 + 104), *(void *)(a2 + 104)) & 1) == 0) {
          return 0;
        }
        if (*(unsigned __int8 *)(a1 + 112) != *(unsigned __int8 *)(a2 + 112)) {
          return 0;
        }
        uint64_t v33 = *(void *)(a2 + 120);
        uint64_t v45 = *(void *)(a1 + 120);
        uint64_t v46 = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v44 = sub_1C00AC354(v45, v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v44 & 1) == 0) {
          return 0;
        }
        uint64_t v46 = type metadata accessor for FormatEnumPropertyDefinition(0);
        uint64_t v34 = a1 + *(int *)(v46 + 56);
        uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
        sub_1BFF2341C(v34, (uint64_t)v21, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        sub_1BFF2341C(a2 + *(int *)(v46 + 56), (uint64_t)v18, (unint64_t *)&qword_1EB884FE0, v35);
        uint64_t v36 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_1BFF2341C((uint64_t)v21, (uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v35);
        sub_1BFF2341C((uint64_t)v18, v36, (unint64_t *)&qword_1EB884FE0, v35);
        uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v37((uint64_t)v12, 1, v4) == 1)
        {
          uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v38);
          if (v37(v36, 1, v4) == 1)
          {
            sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            return 1;
          }
        }
        else
        {
          sub_1BFF2341C((uint64_t)v12, (uint64_t)v15, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          if (v37(v36, 1, v4) != 1)
          {
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32))(v7, v36, v4);
            sub_1BFF8784C(&qword_1EA196BE0, MEMORY[0x1E4FAAFC8]);
            char v40 = sub_1C151E5CC();
            uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
            v41(v7, v4);
            uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
            sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
            sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v42);
            v41(v15, v4);
            sub_1BFE305AC((uint64_t)v12, (unint64_t *)&qword_1EB884FE0, v42);
            return (v40 & 1) != 0;
          }
          int64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
          sub_1BFE305AC((uint64_t)v18, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
          sub_1BFE305AC((uint64_t)v21, (unint64_t *)&qword_1EB884FE0, v39);
          (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v15, v4);
        }
        sub_1C0BEA420((uint64_t)v12, (unint64_t *)&qword_1EB884FE8, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        return 0;
      }
    }
  }
  return result;
}

BOOL _s8NewsFeed24FormatPropertyDefinitionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v121 = a2;
  uint64_t v122 = a1;
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v114 = (uint64_t)&v102 - v3;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v113 = (uint64_t)&v102 - v5;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v112 = (uint64_t)&v102 - v7;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v111 = (uint64_t)&v102 - v9;
  sub_1BFF719C0();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v110 = (uint64_t)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v109 = (uint64_t)&v102 - v13;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v108 = (uint64_t)&v102 - v15;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v107 = (uint64_t)&v102 - v17;
  uint64_t v18 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v106 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v105 = (uint64_t)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v104 = (uint64_t)&v102 - v23;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v103 = (uint64_t)&v102 - v25;
  uint64_t v26 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v26);
  uint64_t v120 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v119 = (char *)&v102 - v29;
  MEMORY[0x1F4188790](v30);
  int v118 = (char *)&v102 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v117 = (char *)&v102 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v116 = (uint64_t)&v102 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v115 = (uint64_t)&v102 - v37;
  MEMORY[0x1F4188790](v38);
  char v40 = (char *)&v102 - v39;
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)&v102 - v42;
  MEMORY[0x1F4188790](v44);
  uint64_t v46 = (char *)&v102 - v45;
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = (char *)&v102 - v48;
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)&v102 - v51;
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v102 - v54;
  sub_1C0BF03B4();
  MEMORY[0x1F4188790](v56 - 8);
  uint64_t v58 = (char *)&v102 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = (uint64_t)&v58[*(int *)(v59 + 56)];
  sub_1BFF6DBA4(v122, (uint64_t)v58);
  uint64_t v61 = v60;
  sub_1BFF6DBA4(v121, v60);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v52);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v62 = v104;
        sub_1C0BD50B8(v60, v104, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
        BOOL v63 = sub_1C0BE2414((uint64_t)v52, v62);
        sub_1C0BD513C(v62, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
        uint64_t v64 = (uint64_t)v52;
        uint64_t v65 = &qword_1EB88E9B8;
        uint64_t v66 = sub_1C003F2E8;
        unint64_t v67 = &type metadata for FormatColor;
        goto LABEL_28;
      }
      uint64_t v94 = &qword_1EB88E9B8;
      char v95 = &type metadata for FormatColor;
      uint64_t v96 = sub_1C003F2E8;
      uint64_t v97 = (uint64_t)v52;
      goto LABEL_42;
    case 2u:
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v49);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v68 = v105;
        sub_1BFF71A74(v60, v105, (uint64_t (*)(void))sub_1BFF71B30);
        BOOL v63 = sub_1C0BE2AC0((uint64_t)v49, v68);
        uint64_t v69 = (uint64_t (*)(void))sub_1BFF71B30;
        sub_1C0BF0490(v68, (uint64_t (*)(void))sub_1BFF71B30);
        uint64_t v70 = (uint64_t)v49;
        goto LABEL_10;
      }
      sub_1C0BF0490((uint64_t)v49, (uint64_t (*)(void))sub_1BFF71B30);
      goto LABEL_43;
    case 3u:
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v46);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_1C0BF0490((uint64_t)v46, type metadata accessor for FormatEnumPropertyDefinition);
        goto LABEL_43;
      }
      uint64_t v71 = v106;
      sub_1BFF71A74(v60, v106, type metadata accessor for FormatEnumPropertyDefinition);
      BOOL v63 = _s8NewsFeed28FormatEnumPropertyDefinitionV2eeoiySbAC_ACtFZ_0((uint64_t)v46, v71);
      uint64_t v69 = type metadata accessor for FormatEnumPropertyDefinition;
      sub_1C0BF0490(v71, type metadata accessor for FormatEnumPropertyDefinition);
      uint64_t v70 = (uint64_t)v46;
LABEL_10:
      sub_1C0BF0490(v70, v69);
      unint64_t v72 = type metadata accessor for FormatPropertyDefinition;
      goto LABEL_44;
    case 4u:
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v43);
      uint64_t v73 = v60;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        unint64_t v74 = &qword_1EB88E990;
        uint64_t v75 = (ValueMetadata *)MEMORY[0x1E4FBC958];
        uint64_t v76 = sub_1C0092008;
        uint64_t v77 = v73;
        uint64_t v78 = v107;
        sub_1C0BD50B8(v77, v107, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
        BOOL v79 = sub_1C0BE355C((uint64_t)v43, v78);
        goto LABEL_27;
      }
      uint64_t v94 = &qword_1EB88E990;
      char v95 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v98 = sub_1C0092008;
      goto LABEL_41;
    case 5u:
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v40);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v80 = v108;
        sub_1C0BD51AC(v60, v108);
        BOOL v63 = sub_1C0BE3BA4((uint64_t)v40, v80);
        sub_1C0BD523C(v80);
        sub_1C0BD523C((uint64_t)v40);
        unint64_t v72 = type metadata accessor for FormatPropertyDefinition;
        goto LABEL_44;
      }
      sub_1C0BD523C((uint64_t)v40);
      goto LABEL_43;
    case 6u:
      uint64_t v81 = v115;
      sub_1BFF6DBA4((uint64_t)v58, v115);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v82 = v109;
        sub_1BFF7C110(v61, v109);
        BOOL v63 = sub_1C0BE41E0(v81, v82);
        sub_1BFFB476C(v82);
        sub_1BFFB476C(v81);
        unint64_t v72 = type metadata accessor for FormatPropertyDefinition;
        goto LABEL_44;
      }
      sub_1BFFB476C(v81);
      goto LABEL_43;
    case 7u:
      uint64_t v83 = v116;
      sub_1BFF6DBA4((uint64_t)v58, v116);
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        uint64_t v84 = v110;
        sub_1BFF71A74(v60, v110, (uint64_t (*)(void))sub_1BFF719C0);
        BOOL v63 = sub_1C0BE4838(v83, v84);
        sub_1C0BF0490(v84, (uint64_t (*)(void))sub_1BFF719C0);
        sub_1C0BF0490(v83, (uint64_t (*)(void))sub_1BFF719C0);
        unint64_t v85 = type metadata accessor for FormatPropertyDefinition;
      }
      else
      {
        sub_1C0BF0490(v83, (uint64_t (*)(void))sub_1BFF719C0);
        BOOL v63 = 0;
        unint64_t v85 = (uint64_t (*)(void))sub_1C0BF03B4;
      }
      uint64_t v99 = v85;
      goto LABEL_45;
    case 8u:
      uint64_t v43 = v117;
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v117);
      uint64_t v86 = v60;
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        unint64_t v74 = &qword_1EB88E9A0;
        uint64_t v75 = &type metadata for FormatAsyncImageContent;
        uint64_t v76 = sub_1C0036630;
        uint64_t v87 = v86;
        uint64_t v78 = v111;
        sub_1C0BD50B8(v87, v111, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent);
        BOOL v79 = sub_1C0BE52D4((uint64_t)v43, v78);
        goto LABEL_27;
      }
      uint64_t v94 = &qword_1EB88E9A0;
      char v95 = &type metadata for FormatAsyncImageContent;
      uint64_t v98 = sub_1C0036630;
      goto LABEL_41;
    case 9u:
      uint64_t v43 = v118;
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v118);
      uint64_t v88 = v60;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        unint64_t v74 = &qword_1EB88E998;
        uint64_t v75 = &type metadata for FormatVideoNodeContent;
        uint64_t v76 = sub_1C00738F0;
        uint64_t v89 = v88;
        uint64_t v78 = v112;
        sub_1C0BD50B8(v89, v112, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent);
        BOOL v79 = sub_1C0BE5980((uint64_t)v43, v78);
        goto LABEL_27;
      }
      uint64_t v94 = &qword_1EB88E998;
      char v95 = &type metadata for FormatVideoNodeContent;
      uint64_t v98 = sub_1C00738F0;
      goto LABEL_41;
    case 0xAu:
      uint64_t v43 = v119;
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v119);
      uint64_t v90 = v60;
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        unint64_t v74 = &qword_1EB88E9B0;
        uint64_t v75 = &type metadata for FormatFont;
        uint64_t v76 = sub_1C0084C58;
        uint64_t v91 = v90;
        uint64_t v78 = v113;
        sub_1C0BD50B8(v91, v113, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont);
        BOOL v79 = sub_1C0BE602C((uint64_t)v43, v78);
        goto LABEL_27;
      }
      uint64_t v94 = &qword_1EB88E9B0;
      char v95 = &type metadata for FormatFont;
      uint64_t v98 = sub_1C0084C58;
      goto LABEL_41;
    case 0xBu:
      uint64_t v43 = v120;
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v120);
      uint64_t v92 = v60;
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        unint64_t v74 = &qword_1EB88E9A8;
        uint64_t v75 = &type metadata for FormatVideoPlayerContent;
        uint64_t v76 = sub_1C006F9DC;
        uint64_t v93 = v92;
        uint64_t v78 = v114;
        sub_1C0BD50B8(v93, v114, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent);
        BOOL v79 = sub_1C0BE66D8((uint64_t)v43, v78);
LABEL_27:
        BOOL v63 = v79;
        sub_1C0BD513C(v78, v74, (uint64_t (*)(void))v76, (uint64_t)v75);
        uint64_t v64 = (uint64_t)v43;
        uint64_t v65 = v74;
        uint64_t v66 = v76;
        unint64_t v67 = v75;
LABEL_28:
        sub_1C0BD513C(v64, v65, (uint64_t (*)(void))v66, (uint64_t)v67);
        unint64_t v72 = type metadata accessor for FormatPropertyDefinition;
        goto LABEL_44;
      }
      uint64_t v94 = &qword_1EB88E9A8;
      char v95 = &type metadata for FormatVideoPlayerContent;
      uint64_t v98 = sub_1C006F9DC;
LABEL_41:
      uint64_t v96 = v98;
      uint64_t v97 = (uint64_t)v43;
LABEL_42:
      sub_1C0BD513C(v97, v94, (uint64_t (*)(void))v96, (uint64_t)v95);
      goto LABEL_43;
    default:
      sub_1BFF6DBA4((uint64_t)v58, (uint64_t)v55);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1C001A1B0((uint64_t)v55);
LABEL_43:
        BOOL v63 = 0;
        unint64_t v72 = (uint64_t (*)(void))sub_1C0BF03B4;
      }
      else
      {
        uint64_t v101 = v103;
        sub_1BFFBFF9C(v60, v103);
        BOOL v63 = sub_1C0BE1DC8((uint64_t)v55, v101);
        sub_1C001A1B0(v101);
        sub_1C001A1B0((uint64_t)v55);
        unint64_t v72 = type metadata accessor for FormatPropertyDefinition;
      }
LABEL_44:
      uint64_t v99 = v72;
LABEL_45:
      sub_1C0BF0490((uint64_t)v58, v99);
      return v63;
  }
}

uint64_t sub_1C0BEA2E8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 60));
}

uint64_t sub_1C0BEA2F4()
{
  return sub_1C0BE1CEC();
}

uint64_t sub_1C0BEA2FC()
{
  return sub_1C0BE1C14();
}

uint64_t sub_1C0BEA304()
{
  return sub_1C0BE1B3C();
}

uint64_t sub_1C0BEA30C()
{
  return sub_1C0BE1A64();
}

uint64_t sub_1C0BEA314()
{
  return sub_1C0BE1744(*(void *)(v0 + 16), 32, 0xD00000000000001DLL, 0x80000001C161ECE0, (void (*)(void))sub_1BFF719C0);
}

uint64_t sub_1C0BEA360()
{
  return sub_1C0BE1998();
}

uint64_t sub_1C0BEA368()
{
  return sub_1C0BE18CC();
}

uint64_t sub_1C0BEA370()
{
  return sub_1C0BE17F4();
}

uint64_t sub_1C0BEA378()
{
  return sub_1C0BE1744(*(void *)(v0 + 16), 33, 0xD00000000000001ELL, 0x80000001C161EC40, (void (*)(void))type metadata accessor for FormatEnumPropertyDefinition);
}

uint64_t sub_1C0BEA3C4()
{
  return sub_1C0BE1744(*(void *)(v0 + 16), 33, 0xD00000000000001ELL, 0x80000001C161EC20, (void (*)(void))sub_1BFF71B30);
}

uint64_t sub_1C0BEA410()
{
  return sub_1C0BE166C();
}

uint64_t sub_1C0BEA418()
{
  return sub_1C0BE15A0();
}

uint64_t sub_1C0BEA420(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C0BF0418(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C0BEA47C(void *a1)
{
  a1[1] = sub_1BFF8784C(&qword_1EB8782A8, (void (*)(uint64_t))type metadata accessor for FormatPropertyDefinition);
  a1[2] = sub_1BFF8784C(&qword_1EB87BA38, (void (*)(uint64_t))type metadata accessor for FormatPropertyDefinition);
  uint64_t result = sub_1BFF8784C(&qword_1EA1A4858, (void (*)(uint64_t))type metadata accessor for FormatPropertyDefinition);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0BEA528(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0BEA564(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0BEA5E4(uint64_t a1)
{
  uint64_t result = sub_1BFF8784C(&qword_1EA1A4860, (void (*)(uint64_t))type metadata accessor for FormatEnumPropertyDefinition);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0BEA63C(void *a1)
{
  a1[1] = sub_1BFF8784C(&qword_1EA1A4868, (void (*)(uint64_t))type metadata accessor for FormatEnumPropertyDefinition);
  a1[2] = sub_1BFF8784C(&qword_1EA1A4870, (void (*)(uint64_t))type metadata accessor for FormatEnumPropertyDefinition);
  uint64_t result = sub_1BFF8784C(&qword_1EA1A4878, (void (*)(uint64_t))type metadata accessor for FormatEnumPropertyDefinition);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0BEA6E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatPrimitivePropertyDefinition();
  uint64_t result = FormatPrimitivePropertyDefinition.deprecated.getter(v2);
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C0BEA728(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = type metadata accessor for FormatPrimitivePropertyDefinition();
  return FormatPrimitivePropertyDefinition.deprecated.setter(v1, v2);
}

uint64_t sub_1C0BEA768()
{
  return 16;
}

__n128 sub_1C0BEA774(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C0BEA788()
{
  return 16;
}

__n128 sub_1C0BEA794(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C0BEA7A0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 112);
  return result;
}

unsigned char *sub_1C0BEA7AC(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 112) = *result;
  return result;
}

uint64_t sub_1C0BEA7B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0BEA7C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 120) = v3;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatPropertyDefinition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v17;
        uint64_t v18 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v18;
        uint64_t v19 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v19;
        uint64_t v20 = a2[6];
        uint64_t v21 = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v22 = a2[9];
        *(void *)(a1 + 48) = v20;
        *(void *)(a1 + 56) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v22 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v22;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 88) = a2[11];
        sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v24 = *(int *)(v23 + 64);
        uint64_t v25 = (void *)(a1 + v24);
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_1C1518CDC();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        if (!v29(v26, 1, v27)) {
          goto LABEL_39;
        }
        goto LABEL_48;
      case 2u:
        uint64_t v30 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v30;
        uint64_t v31 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v31;
        uint64_t v32 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v32;
        uint64_t v33 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v33;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        sub_1BFF71B30();
        uint64_t v35 = v34[13];
        uint64_t v135 = (void *)(a1 + v35);
        __dsta = v34;
        int64_t v132 = (char *)a2 + v35;
        uint64_t v36 = sub_1C151631C();
        uint64_t v37 = *(void *)(v36 - 8);
        uint64_t v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v38(v132, 1, v36))
        {
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
          memcpy(v135, v132, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v135, v132, v36);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v135, 0, 1, v36);
        }
        *(unsigned char *)(a1 + __dsta[14]) = *((unsigned char *)a2 + __dsta[14]);
        *(void *)(a1 + __dsta[15]) = *(uint64_t *)((char *)a2 + __dsta[15]);
        uint64_t v124 = __dsta[16];
        uint64_t v25 = (void *)(a1 + v124);
        uint64_t v26 = (char *)a2 + v124;
        uint64_t v27 = sub_1C1518CDC();
        uint64_t v28 = *(void *)(v27 - 8);
        unint64_t v125 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        if (v125(v26, 1, v27)) {
          goto LABEL_48;
        }
LABEL_39:
        (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        break;
      case 3u:
        uint64_t v40 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v40;
        uint64_t v41 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v41;
        uint64_t v42 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v42;
        uint64_t v43 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v43;
        uint64_t v44 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v44;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        uint64_t v45 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v45;
        *(void *)(a1 + 104) = a2[13];
        *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
        *(void *)(a1 + 120) = a2[15];
        uint64_t v46 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
        __dstb = (void *)(a1 + v46);
        id v130 = (char *)a2 + v46;
        uint64_t v47 = sub_1C1518CDC();
        uint64_t v48 = *(void *)(v47 - 8);
        uint64_t v131 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v131(v130, 1, v47))
        {
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(__dstb, v130, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v48 + 16))(__dstb, v130, v47);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(__dstb, 0, 1, v47);
        }
        break;
      case 4u:
        uint64_t v50 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v50;
        uint64_t v51 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v51;
        uint64_t v52 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v52;
        uint64_t v53 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v53;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v54 = a2[9];
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 72) = v54;
        *(unsigned char *)(a1 + 81) = *((unsigned char *)a2 + 81);
        *(void *)(a1 + 88) = a2[11];
        sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v56 = *(int *)(v55 + 64);
        __dst = (void *)(a1 + v56);
        uint64_t v12 = (char *)a2 + v56;
        uint64_t v13 = sub_1C1518CDC();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v57 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v57(v12, 1, v13)) {
          goto LABEL_19;
        }
        goto LABEL_44;
      case 5u:
        uint64_t v58 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v58;
        uint64_t v59 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v59;
        uint64_t v60 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v60;
        uint64_t v61 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v61;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v62 = a2[9];
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 72) = v62;
        *(unsigned char *)(a1 + 81) = *((unsigned char *)a2 + 81);
        *(void *)(a1 + 88) = a2[11];
        sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v64 = *(int *)(v63 + 64);
        __dst = (void *)(a1 + v64);
        uint64_t v12 = (char *)a2 + v64;
        uint64_t v13 = sub_1C1518CDC();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v65(v12, 1, v13)) {
          goto LABEL_19;
        }
        goto LABEL_44;
      case 6u:
        uint64_t v66 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v66;
        uint64_t v67 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v67;
        uint64_t v68 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v68;
        uint64_t v69 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v69;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v70 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v70;
        *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
        *(void *)(a1 + 96) = a2[12];
        sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v72 = *(int *)(v71 + 64);
        __dst = (void *)(a1 + v72);
        uint64_t v12 = (char *)a2 + v72;
        uint64_t v73 = sub_1C1518CDC();
        uint64_t v74 = *(void *)(v73 - 8);
        uint64_t v133 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v74 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v133(v12, 1, v73)) {
          goto LABEL_19;
        }
        (*(void (**)(void *, char *, uint64_t))(v74 + 16))(__dst, v12, v73);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v73);
        break;
      case 7u:
        uint64_t v76 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v76;
        uint64_t v77 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v77;
        uint64_t v78 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v78;
        uint64_t v79 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v79;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        sub_1BFF719C0();
        uint64_t v81 = v80[13];
        char v136 = (void *)(a1 + v81);
        __dstc = v80;
        uint64_t v82 = (char *)a2 + v81;
        uint64_t v83 = sub_1C1515FDC();
        uint64_t v84 = *(void *)(v83 - 8);
        id v134 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v134(v82, 1, v83))
        {
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v136, v82, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v84 + 16))(v136, v82, v83);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v136, 0, 1, v83);
        }
        *(unsigned char *)(a1 + __dstc[14]) = *((unsigned char *)a2 + __dstc[14]);
        *(void *)(a1 + __dstc[15]) = *(uint64_t *)((char *)a2 + __dstc[15]);
        uint64_t v126 = __dstc[16];
        uint64_t v25 = (void *)(a1 + v126);
        uint64_t v26 = (char *)a2 + v126;
        uint64_t v94 = sub_1C1518CDC();
        uint64_t v95 = *(void *)(v94 - 8);
        int64_t v127 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v95 + 48);
        swift_bridgeObjectRetain();
        if (v127(v26, 1, v94)) {
          goto LABEL_48;
        }
        goto LABEL_52;
      case 8u:
        uint64_t v86 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v86;
        uint64_t v87 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v87;
        uint64_t v88 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v88;
        uint64_t v89 = a2[6];
        uint64_t v90 = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v91 = a2[9];
        *(void *)(a1 + 48) = v89;
        *(void *)(a1 + 56) = v90;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v91 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v91;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 88) = a2[11];
        sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v93 = *(int *)(v92 + 64);
        uint64_t v25 = (void *)(a1 + v93);
        uint64_t v26 = (char *)a2 + v93;
        uint64_t v94 = sub_1C1518CDC();
        uint64_t v95 = *(void *)(v94 - 8);
        uint64_t v96 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v95 + 48);
        swift_bridgeObjectRetain();
        if (v96(v26, 1, v94)) {
          goto LABEL_48;
        }
        goto LABEL_52;
      case 9u:
        uint64_t v97 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v97;
        uint64_t v98 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v98;
        uint64_t v99 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v99;
        uint64_t v100 = a2[6];
        uint64_t v101 = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v102 = a2[9];
        *(void *)(a1 + 48) = v100;
        *(void *)(a1 + 56) = v101;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v102 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v102;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 88) = a2[11];
        sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v104 = *(int *)(v103 + 64);
        uint64_t v25 = (void *)(a1 + v104);
        uint64_t v26 = (char *)a2 + v104;
        uint64_t v94 = sub_1C1518CDC();
        uint64_t v95 = *(void *)(v94 - 8);
        uint64_t v105 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v95 + 48);
        swift_bridgeObjectRetain();
        if (v105(v26, 1, v94)) {
          goto LABEL_48;
        }
        goto LABEL_52;
      case 0xAu:
        uint64_t v106 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v106;
        uint64_t v107 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v107;
        uint64_t v108 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v108;
        uint64_t v109 = a2[6];
        uint64_t v110 = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v111 = a2[9];
        *(void *)(a1 + 48) = v109;
        *(void *)(a1 + 56) = v110;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v111 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v111;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 88) = a2[11];
        sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v113 = *(int *)(v112 + 64);
        uint64_t v25 = (void *)(a1 + v113);
        uint64_t v26 = (char *)a2 + v113;
        uint64_t v94 = sub_1C1518CDC();
        uint64_t v95 = *(void *)(v94 - 8);
        uint64_t v114 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v95 + 48);
        swift_bridgeObjectRetain();
        if (v114(v26, 1, v94)) {
          goto LABEL_48;
        }
        goto LABEL_52;
      case 0xBu:
        uint64_t v115 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v115;
        uint64_t v116 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v116;
        uint64_t v117 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v117;
        uint64_t v118 = a2[6];
        uint64_t v119 = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v120 = a2[9];
        *(void *)(a1 + 48) = v118;
        *(void *)(a1 + 56) = v119;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v120 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v120;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 88) = a2[11];
        sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v122 = *(int *)(v121 + 64);
        uint64_t v25 = (void *)(a1 + v122);
        uint64_t v26 = (char *)a2 + v122;
        uint64_t v94 = sub_1C1518CDC();
        uint64_t v95 = *(void *)(v94 - 8);
        id v123 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v95 + 48);
        swift_bridgeObjectRetain();
        if (v123(v26, 1, v94))
        {
LABEL_48:
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v25, v26, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
LABEL_52:
          (*(void (**)(void *, char *, uint64_t))(v95 + 16))(v25, v26, v94);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v25, 0, 1, v94);
        }
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        uint64_t v8 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v8;
        uint64_t v9 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v9;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
        *(unsigned char *)(a1 + 66) = *((unsigned char *)a2 + 66);
        *(void *)(a1 + 72) = a2[9];
        sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v11 = *(int *)(v10 + 64);
        __dst = (void *)(a1 + v11);
        uint64_t v12 = (char *)a2 + v11;
        uint64_t v13 = sub_1C1518CDC();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15(v12, 1, v13))
        {
LABEL_19:
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(__dst, v12, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
LABEL_44:
          (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for FormatPropertyDefinition(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0BF0490(a1, type metadata accessor for FormatPropertyDefinition);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v10 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v10 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v10;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v12 = *(int *)(v11 + 64);
        uint64_t v13 = (void *)(a1 + v12);
        uint64_t v14 = (const void *)(a2 + v12);
        uint64_t v15 = sub_1C1518CDC();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
        swift_bridgeObjectRetain();
        if (v17(v14, 1, v15)) {
          goto LABEL_36;
        }
        (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        sub_1BFF71B30();
        uint64_t v19 = v18[13];
        uint64_t v71 = (void *)(a1 + v19);
        __dsta = v18;
        uint64_t v20 = (const void *)(a2 + v19);
        uint64_t v21 = sub_1C151631C();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v67(v20, 1, v21))
        {
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
          size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
          uint64_t v25 = v71;
          uint64_t v26 = v20;
          goto LABEL_22;
        }
        uint64_t v61 = v71;
        (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v71, v20, v21);
        goto LABEL_41;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        uint64_t v27 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
        __dstb = (void *)(a1 + v27);
        uint64_t v66 = (const void *)(a2 + v27);
        uint64_t v28 = sub_1C1518CDC();
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v65(v66, 1, v28))
        {
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
          uint64_t v32 = __dstb;
          uint64_t v33 = v66;
          goto LABEL_19;
        }
        (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dstb, v66, v28);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dstb, 0, 1, v28);
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v34 = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 72) = v34;
        *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        goto LABEL_15;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v36 = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 72) = v36;
        *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_15:
        uint64_t v37 = *(int *)(v35 + 64);
        __dst = (void *)(a1 + v37);
        uint64_t v9 = (const void *)(a2 + v37);
        uint64_t v6 = sub_1C1518CDC();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v38(v9, 1, v6)) {
          goto LABEL_16;
        }
        goto LABEL_18;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v40 = *(int *)(v39 + 64);
        __dst = (void *)(a1 + v40);
        uint64_t v9 = (const void *)(a2 + v40);
        uint64_t v41 = sub_1C1518CDC();
        uint64_t v42 = *(void *)(v41 - 8);
        uint64_t v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v68(v9, 1, v41)) {
          goto LABEL_18;
        }
        (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(__dst, v9, v41);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v41);
        break;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        sub_1BFF719C0();
        uint64_t v45 = v44[13];
        uint64_t v72 = (void *)(a1 + v45);
        __dsta = v44;
        uint64_t v46 = (const void *)(a2 + v45);
        uint64_t v21 = sub_1C1515FDC();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v69(v46, 1, v21))
        {
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          size_t v24 = *(void *)(*(void *)(v47 - 8) + 64);
          uint64_t v25 = v72;
          uint64_t v26 = v46;
LABEL_22:
          memcpy(v25, v26, v24);
        }
        else
        {
          uint64_t v61 = v72;
          (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v72, v46, v21);
LABEL_41:
          (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v61, 0, 1, v21);
        }
        *(unsigned char *)(a1 + __dsta[14]) = *(unsigned char *)(a2 + __dsta[14]);
        *(void *)(a1 + __dsta[15]) = *(void *)(a2 + __dsta[15]);
        uint64_t v62 = __dsta[16];
        uint64_t v13 = (void *)(a1 + v62);
        uint64_t v14 = (const void *)(a2 + v62);
        uint64_t v57 = sub_1C1518CDC();
        uint64_t v58 = *(void *)(v57 - 8);
        uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48);
        swift_bridgeObjectRetain();
        if (!v63(v14, 1, v57)) {
          goto LABEL_43;
        }
        goto LABEL_36;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v48 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v48 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v48;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v49 = &qword_1EB88E9A0;
        uint64_t v50 = &type metadata for FormatAsyncImageContent;
        uint64_t v51 = sub_1C0036630;
        goto LABEL_35;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v52 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v52 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v52;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v49 = &qword_1EB88E998;
        uint64_t v50 = &type metadata for FormatVideoNodeContent;
        uint64_t v51 = sub_1C00738F0;
        goto LABEL_35;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v53 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v53 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v53;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v49 = &qword_1EB88E9B0;
        uint64_t v50 = &type metadata for FormatFont;
        uint64_t v51 = sub_1C0084C58;
        goto LABEL_35;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v54 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((~v54 & 0xF000000000000007) != 0) {
          swift_retain();
        }
        *(void *)(a1 + 72) = v54;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v49 = &qword_1EB88E9A8;
        uint64_t v50 = &type metadata for FormatVideoPlayerContent;
        uint64_t v51 = sub_1C006F9DC;
LABEL_35:
        sub_1BFF718BC(0, v49, (uint64_t (*)(void))v51, (uint64_t)v50, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v56 = *(int *)(v55 + 64);
        uint64_t v13 = (void *)(a1 + v56);
        uint64_t v14 = (const void *)(a2 + v56);
        uint64_t v57 = sub_1C1518CDC();
        uint64_t v58 = *(void *)(v57 - 8);
        uint64_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48);
        swift_bridgeObjectRetain();
        if (v59(v14, 1, v57))
        {
LABEL_36:
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v13, v14, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
LABEL_43:
          (*(void (**)(void *, const void *, uint64_t))(v58 + 16))(v13, v14, v57);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v13, 0, 1, v57);
        }
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
        *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v5 = *(int *)(v4 + 64);
        uint64_t v70 = (void *)(a2 + v5);
        __dst = (void *)(a1 + v5);
        uint64_t v6 = sub_1C1518CDC();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v8 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v9 = v70;
        swift_bridgeObjectRetain();
        if (v8(v70, 1, v6))
        {
LABEL_18:
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          size_t v31 = *(void *)(*(void *)(v43 - 8) + 64);
          uint64_t v32 = __dst;
          uint64_t v33 = v9;
LABEL_19:
          memcpy(v32, v33, v31);
        }
        else
        {
LABEL_16:
          (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(__dst, v9, v6);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for FormatPropertyDefinition(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      long long v10 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v10;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v11 = &qword_1EB88E9B8;
      uint64_t v12 = &type metadata for FormatColor;
      uint64_t v13 = sub_1C003F2E8;
      goto LABEL_18;
    case 2u:
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
      long long v15 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v15;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      sub_1BFF71B30();
      uint64_t v17 = v16;
      uint64_t v18 = v16[13];
      uint64_t v19 = (void *)(a1 + v18);
      uint64_t v20 = (const void *)(a2 + v18);
      uint64_t v21 = sub_1C151631C();
      uint64_t v22 = *(void *)(v21 - 8);
      if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
        goto LABEL_24;
      }
      uint64_t v23 = &qword_1EB871180;
      size_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      goto LABEL_13;
    case 3u:
      long long v25 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v25;
      long long v26 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v26;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      uint64_t v27 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
      goto LABEL_20;
    case 4u:
      long long v28 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v28;
      long long v29 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v29;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v11 = &qword_1EB88E990;
      uint64_t v12 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v13 = sub_1C0092008;
      goto LABEL_18;
    case 5u:
      long long v30 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      long long v31 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v31;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v6 = &qword_1EB88E9D0;
      uint64_t v7 = MEMORY[0x1E4FBB550];
      uint64_t v8 = &protocol witness table for Int;
      goto LABEL_10;
    case 6u:
      long long v32 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v32;
      long long v33 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v33;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      uint64_t v6 = &qword_1EB88E9C0;
      uint64_t v7 = MEMORY[0x1E4FBB1A0];
      uint64_t v8 = &protocol witness table for String;
      goto LABEL_10;
    case 7u:
      long long v35 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v35;
      long long v36 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v36;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      sub_1BFF719C0();
      uint64_t v17 = v37;
      uint64_t v38 = v37[13];
      uint64_t v19 = (void *)(a1 + v38);
      uint64_t v20 = (const void *)(a2 + v38);
      uint64_t v21 = sub_1C1515FDC();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = &qword_1EB8948A0;
        size_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_13:
        sub_1BFE79B90(0, (unint64_t *)v23, v24, MEMORY[0x1E4FBB718]);
        memcpy(v19, v20, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
LABEL_24:
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      *(unsigned char *)(a1 + v17[14]) = *(unsigned char *)(a2 + v17[14]);
      *(void *)(a1 + v17[15]) = *(void *)(a2 + v17[15]);
      uint64_t v27 = v17[16];
      goto LABEL_20;
    case 8u:
      long long v40 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v40;
      long long v41 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v41;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v11 = &qword_1EB88E9A0;
      uint64_t v12 = &type metadata for FormatAsyncImageContent;
      uint64_t v13 = sub_1C0036630;
      goto LABEL_18;
    case 9u:
      long long v42 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v42;
      long long v43 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v43;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v11 = &qword_1EB88E998;
      uint64_t v12 = &type metadata for FormatVideoNodeContent;
      uint64_t v13 = sub_1C00738F0;
      goto LABEL_18;
    case 0xAu:
      long long v44 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v44;
      long long v45 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v45;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v11 = &qword_1EB88E9B0;
      uint64_t v12 = &type metadata for FormatFont;
      uint64_t v13 = sub_1C0084C58;
      goto LABEL_18;
    case 0xBu:
      long long v46 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v46;
      long long v47 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v47;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v11 = &qword_1EB88E9A8;
      uint64_t v12 = &type metadata for FormatVideoPlayerContent;
      uint64_t v13 = sub_1C006F9DC;
LABEL_18:
      sub_1BFF718BC(0, v11, (uint64_t (*)(void))v13, (uint64_t)v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
      goto LABEL_19;
    default:
      long long v4 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v4;
      long long v5 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v5;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v6 = &qword_1EB88E9C8;
      uint64_t v7 = MEMORY[0x1E4FBB390];
      uint64_t v8 = &protocol witness table for Bool;
LABEL_10:
      sub_1BFF71970(0, v6, v7, (uint64_t)v8, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_19:
      uint64_t v27 = *(int *)(v34 + 64);
LABEL_20:
      uint64_t v48 = (void *)(a1 + v27);
      uint64_t v49 = (const void *)(a2 + v27);
      uint64_t v50 = sub_1C1518CDC();
      uint64_t v51 = *(void *)(v50 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t assignWithTake for FormatPropertyDefinition(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0BF0490(a1, type metadata accessor for FormatPropertyDefinition);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        long long v10 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v10;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v11 = &qword_1EB88E9B8;
        uint64_t v12 = &type metadata for FormatColor;
        uint64_t v13 = sub_1C003F2E8;
        goto LABEL_19;
      case 2u:
        long long v14 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v14;
        long long v15 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v15;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        sub_1BFF71B30();
        uint64_t v17 = v16;
        uint64_t v18 = v16[13];
        uint64_t v19 = (void *)(a1 + v18);
        uint64_t v20 = (const void *)(a2 + v18);
        uint64_t v21 = sub_1C151631C();
        uint64_t v22 = *(void *)(v21 - 8);
        if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
          goto LABEL_26;
        }
        uint64_t v23 = &qword_1EB871180;
        size_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        goto LABEL_14;
      case 3u:
        long long v25 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v25;
        long long v26 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v26;
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        uint64_t v27 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
        goto LABEL_21;
      case 4u:
        long long v28 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v28;
        long long v29 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v29;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v11 = &qword_1EB88E990;
        uint64_t v12 = (ValueMetadata *)MEMORY[0x1E4FBC958];
        uint64_t v13 = sub_1C0092008;
        goto LABEL_19;
      case 5u:
        long long v30 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v30;
        long long v31 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v31;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v6 = &qword_1EB88E9D0;
        uint64_t v7 = MEMORY[0x1E4FBB550];
        uint64_t v8 = &protocol witness table for Int;
        goto LABEL_11;
      case 6u:
        long long v32 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v32;
        long long v33 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v33;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        uint64_t v6 = &qword_1EB88E9C0;
        uint64_t v7 = MEMORY[0x1E4FBB1A0];
        uint64_t v8 = &protocol witness table for String;
        goto LABEL_11;
      case 7u:
        long long v35 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v35;
        long long v36 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v36;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        sub_1BFF719C0();
        uint64_t v17 = v37;
        uint64_t v38 = v37[13];
        uint64_t v19 = (void *)(a1 + v38);
        uint64_t v20 = (const void *)(a2 + v38);
        uint64_t v21 = sub_1C1515FDC();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          uint64_t v23 = &qword_1EB8948A0;
          size_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
LABEL_14:
          sub_1BFE79B90(0, (unint64_t *)v23, v24, MEMORY[0x1E4FBB718]);
          memcpy(v19, v20, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
LABEL_26:
          (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        *(unsigned char *)(a1 + v17[14]) = *(unsigned char *)(a2 + v17[14]);
        *(void *)(a1 + v17[15]) = *(void *)(a2 + v17[15]);
        uint64_t v27 = v17[16];
        goto LABEL_21;
      case 8u:
        long long v40 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v40;
        long long v41 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v41;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v11 = &qword_1EB88E9A0;
        uint64_t v12 = &type metadata for FormatAsyncImageContent;
        uint64_t v13 = sub_1C0036630;
        goto LABEL_19;
      case 9u:
        long long v42 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v42;
        long long v43 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v43;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v11 = &qword_1EB88E998;
        uint64_t v12 = &type metadata for FormatVideoNodeContent;
        uint64_t v13 = sub_1C00738F0;
        goto LABEL_19;
      case 0xAu:
        long long v44 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v44;
        long long v45 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v45;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v11 = &qword_1EB88E9B0;
        uint64_t v12 = &type metadata for FormatFont;
        uint64_t v13 = sub_1C0084C58;
        goto LABEL_19;
      case 0xBu:
        long long v46 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v46;
        long long v47 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v47;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v11 = &qword_1EB88E9A8;
        uint64_t v12 = &type metadata for FormatVideoPlayerContent;
        uint64_t v13 = sub_1C006F9DC;
LABEL_19:
        sub_1BFF718BC(0, v11, (uint64_t (*)(void))v13, (uint64_t)v12, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        goto LABEL_20;
      default:
        long long v4 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v4;
        long long v5 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v5;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v6 = &qword_1EB88E9C8;
        uint64_t v7 = MEMORY[0x1E4FBB390];
        uint64_t v8 = &protocol witness table for Bool;
LABEL_11:
        sub_1BFF71970(0, v6, v7, (uint64_t)v8, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_20:
        uint64_t v27 = *(int *)(v34 + 64);
LABEL_21:
        uint64_t v48 = (void *)(a1 + v27);
        uint64_t v49 = (const void *)(a2 + v27);
        uint64_t v50 = sub_1C1518CDC();
        uint64_t v51 = *(void *)(v50 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
        {
          sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v51 + 32))(v48, v49, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
        }
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t *sub_1C0BEE034(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v12 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v12 = *(void *)(v10 + 64) + 1;
  }
  if ((v11 | (unint64_t)v7) > 7
    || ((*(_DWORD *)(v10 + 80) | v7) & 0x100000) != 0
    || v12
     + ((v11
       + ((((v7 + 65) & ~(unint64_t)v7) + v8) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v11) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = v15 + (((v11 | v7) & 0xF8 ^ 0x1F8) & ((v11 | v7) + 16));
    swift_retain();
  }
  else
  {
    size_t __n = v12;
    uint64_t v37 = v9;
    uint64_t v38 = a1;
    uint64_t v36 = ~v11;
    uint64_t v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    uint64_t v18 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v19 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v18 = *v19;
    v18[1] = v19[1];
    uint64_t v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v20 = *v21;
    v20[1] = v21[1];
    unint64_t v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v22 = *(void *)v23;
    *(void *)(v22 + 8) = *(void *)(v23 + 8);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
    __dst = (void *)((v22 + v7 + 17) & ~(unint64_t)v7);
    size_t v24 = (const void *)((v23 + v7 + 17) & ~(unint64_t)v7);
    long long v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v24, 1, v5))
    {
      memcpy(__dst, v24, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(__dst, v24, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(__dst, 0, 1, v5);
    }
    *((unsigned char *)__dst + v8) = *((unsigned char *)v24 + v8);
    unint64_t v27 = ((unint64_t)__dst + v8) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = ((unint64_t)v24 + v8) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v27 + 8) = *(void *)(v28 + 8);
    uint64_t v29 = v28 + v11;
    long long v30 = (void *)((v27 + v11 + 16) & v36);
    long long v31 = (const void *)((v29 + 16) & v36);
    long long v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v32(v31, 1, v37))
    {
      memcpy(v30, v31, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v30, v31, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v30, 0, 1, v37);
    }
    return v38;
  }
  return (uint64_t *)v16;
}

void *sub_1C0BEE39C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  int v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  long long v14 = (char *)((v13 + 17 + v9) & ~v13);
  uint64_t v15 = (char *)((v13 + 17 + v10) & ~v13);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v15, 1, v11))
  {
    int v17 = *(_DWORD *)(v12 + 84);
    uint64_t v18 = *(void *)(v12 + 64);
    if (v17) {
      size_t v19 = *(void *)(v12 + 64);
    }
    else {
      size_t v19 = v18 + 1;
    }
    memcpy(v14, v15, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v15, v11);
    uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
    uint64_t v20 = v12 + 56;
    v21(v14, 0, 1, v11);
    int v17 = *(_DWORD *)(v20 + 28);
    uint64_t v18 = *(void *)(v20 + 8);
  }
  if (v17) {
    uint64_t v22 = v18;
  }
  else {
    uint64_t v22 = v18 + 1;
  }
  unint64_t v23 = (unint64_t)&v14[v22];
  unint64_t v24 = (unint64_t)&v15[v22];
  *(unsigned char *)unint64_t v23 = *(unsigned char *)v24;
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v27 = sub_1C1518CDC();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  long long v30 = (void *)((v29 + 16 + v25) & ~v29);
  long long v31 = (const void *)((v29 + 16 + v26) & ~v29);
  long long v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  if (v32(v31, 1, v27))
  {
    if (*(_DWORD *)(v28 + 84)) {
      size_t v33 = *(void *)(v28 + 64);
    }
    else {
      size_t v33 = *(void *)(v28 + 64) + 1;
    }
    memcpy(v30, v31, v33);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v30, v31, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v27);
  }
  return a1;
}

void *sub_1C0BEE658(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  size_t v8 = (void *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *size_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (char *)((v14 + 17 + v10) & ~v14);
  uint64_t v16 = (char *)((v14 + 17 + v11) & ~v14);
  int v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v11) = v17(v15, 1, v12);
  int v18 = v17(v16, 1, v12);
  if (v11)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v16, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
      goto LABEL_12;
    }
    int v19 = *(_DWORD *)(v13 + 84);
    size_t v20 = *(void *)(v13 + 64);
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v15, v16, v12);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    int v19 = *(_DWORD *)(v13 + 84);
    size_t v20 = *(void *)(v13 + 64);
  }
  if (v19) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = v20 + 1;
  }
  memcpy(v15, v16, v21);
LABEL_12:
  if (*(_DWORD *)(v13 + 84)) {
    uint64_t v22 = *(void *)(v13 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v13 + 64) + 1;
  }
  unint64_t v23 = (unint64_t)&v15[v22];
  unint64_t v24 = (unint64_t)&v16[v22];
  *(unsigned char *)unint64_t v23 = *(unsigned char *)v24;
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1C1518CDC();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  long long v30 = (void *)((v29 + 16 + v25) & ~v29);
  long long v31 = (void *)((v29 + 16 + v26) & ~v29);
  long long v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v33 = v32(v30, 1, v27);
  int v34 = v32(v31, 1, v27);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v30, v31, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v27);
      return a1;
    }
    int v35 = *(_DWORD *)(v28 + 84);
    size_t v36 = *(void *)(v28 + 64);
  }
  else
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v30, v31, v27);
      return a1;
    }
    uint64_t v38 = *(void (**)(void *, uint64_t))(v28 + 8);
    uint64_t v37 = v28 + 8;
    v38(v30, v27);
    int v35 = *(_DWORD *)(v37 + 76);
    size_t v36 = *(void *)(v37 + 56);
  }
  if (v35) {
    size_t v39 = v36;
  }
  else {
    size_t v39 = v36 + 1;
  }
  memcpy(v30, v31, v39);
  return a1;
}

_OWORD *sub_1C0BEEA10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  unint64_t v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (char *)((v12 + 17 + v8) & ~v12);
  uint64_t v14 = (char *)((v12 + 17 + v9) & ~v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10))
  {
    int v15 = *(_DWORD *)(v11 + 84);
    size_t v16 = *(void *)(v11 + 64);
    if (v15) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v16 + 1;
    }
    memcpy(v13, v14, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v14, v10);
    int v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    uint64_t v18 = v11 + 56;
    v19(v13, 0, 1, v10);
    int v15 = *(_DWORD *)(v18 + 28);
    size_t v16 = *(void *)(v18 + 8);
  }
  if (v15) {
    size_t v20 = v16;
  }
  else {
    size_t v20 = v16 + 1;
  }
  unint64_t v21 = (unint64_t)&v13[v20];
  unint64_t v22 = (unint64_t)&v14[v20];
  *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v25 = sub_1C1518CDC();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (void *)((v27 + 16 + v23) & ~v27);
  uint64_t v29 = (const void *)((v27 + 16 + v24) & ~v27);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v29, 1, v25))
  {
    if (*(_DWORD *)(v26 + 84)) {
      size_t v30 = *(void *)(v26 + 64);
    }
    else {
      size_t v30 = *(void *)(v26 + 64) + 1;
    }
    memcpy(v28, v29, v30);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v28, v29, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
  }
  return a1;
}

void *sub_1C0BEEC74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  int v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  unint64_t v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  size_t v16 = (char *)((v15 + 17 + v11) & ~v15);
  size_t v17 = (char *)((v15 + 17 + v12) & ~v15);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v12) = v18(v16, 1, v13);
  int v19 = v18(v17, 1, v13);
  if (v12)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v17, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
      goto LABEL_12;
    }
    int v20 = *(_DWORD *)(v14 + 84);
    size_t v21 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v16, v17, v13);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    int v20 = *(_DWORD *)(v14 + 84);
    size_t v21 = *(void *)(v14 + 64);
  }
  if (v20) {
    size_t v22 = v21;
  }
  else {
    size_t v22 = v21 + 1;
  }
  memcpy(v16, v17, v22);
LABEL_12:
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v23 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v14 + 64) + 1;
  }
  unint64_t v24 = (unint64_t)&v16[v23];
  unint64_t v25 = (unint64_t)&v17[v23];
  *(unsigned char *)unint64_t v24 = *(unsigned char *)v25;
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v25 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1C1518CDC();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  long long v31 = (void *)((v30 + 16 + v26) & ~v30);
  long long v32 = (void *)((v30 + 16 + v27) & ~v30);
  int v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  int v34 = v33(v31, 1, v28);
  int v35 = v33(v32, 1, v28);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v31, v32, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v28);
      return a1;
    }
    int v36 = *(_DWORD *)(v29 + 84);
    size_t v37 = *(void *)(v29 + 64);
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v31, v32, v28);
      return a1;
    }
    size_t v39 = *(void (**)(void *, uint64_t))(v29 + 8);
    uint64_t v38 = v29 + 8;
    v39(v31, v28);
    int v36 = *(_DWORD *)(v38 + 76);
    size_t v37 = *(void *)(v38 + 56);
  }
  if (v36) {
    size_t v40 = v37;
  }
  else {
    size_t v40 = v37 + 1;
  }
  memcpy(v31, v32, v40);
  return a1;
}

uint64_t sub_1C0BEEFFC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v8 <= v12) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = v8;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(v6 + 64);
  if (!v7) {
    ++v15;
  }
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
  if (v11) {
    uint64_t v18 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    uint64_t v18 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v17 + 16;
  if (a2 <= v14) {
    goto LABEL_37;
  }
  unint64_t v20 = v18 + ((v19 + ((((v16 + 65) & ~v16) + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v17);
  char v21 = 8 * v20;
  if (v20 <= 3)
  {
    unsigned int v23 = ((a2 - v14 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      int v22 = *(_DWORD *)((char *)a1 + v20);
      if (!v22) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v23 > 0xFF)
    {
      int v22 = *(unsigned __int16 *)((char *)a1 + v20);
      if (!*(unsigned __int16 *)((char *)a1 + v20)) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
    if (v23 < 2)
    {
LABEL_37:
      if ((v13 & 0x80000000) == 0)
      {
        unint64_t v27 = *((void *)a1 + 1);
        if (v27 >= 0xFFFFFFFF) {
          LODWORD(v27) = -1;
        }
        return (v27 + 1);
      }
      unint64_t v29 = ((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + v16
           + 17) & ~v16;
      if (v8 == v14)
      {
        if (v7 >= 2)
        {
          unsigned int v30 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v29, v7, v5);
          goto LABEL_47;
        }
      }
      else if (v11 >= 2)
      {
        unsigned int v30 = (*(uint64_t (**)(unint64_t))(v10 + 48))((v19 + ((v29 + v15) & 0xFFFFFFFFFFFFFFF8)) & ~v17);
LABEL_47:
        if (v30 >= 2) {
          return v30 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v22 = *((unsigned __int8 *)a1 + v20);
  if (!*((unsigned char *)a1 + v20)) {
    goto LABEL_37;
  }
LABEL_27:
  int v24 = (v22 - 1) << v21;
  if (v20 > 3) {
    int v24 = 0;
  }
  if (v20)
  {
    if (v20 <= 3) {
      int v25 = v20;
    }
    else {
      int v25 = 4;
    }
    switch(v25)
    {
      case 2:
        int v26 = *a1;
        break;
      case 3:
        int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)a1;
        break;
      default:
        int v26 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  return v14 + (v26 | v24) + 1;
}

void sub_1C0BEF2DC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v33 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  int v11 = 0;
  uint64_t v12 = *(void *)(sub_1C1518CDC() - 8);
  uint64_t v13 = v12;
  unsigned int v14 = *(_DWORD *)(v12 + 84);
  if (v14) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = 0;
  }
  uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = *(void *)(v12 + 64);
  if (v10 <= v15) {
    unsigned int v19 = v15;
  }
  else {
    unsigned int v19 = v10;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v9) {
    uint64_t v21 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v22 = v17 + 16;
  if (!v14) {
    ++v18;
  }
  size_t v23 = v18 + ((v17 + 16 + ((((v16 + 65) & ~v16) + v21) & 0xFFFFFFFFFFFFFFF8)) & ~v17);
  if (a3 <= v20) {
    goto LABEL_26;
  }
  if (v23 <= 3)
  {
    unsigned int v24 = ((a3 - v20 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v24))
    {
      int v11 = 4;
      if (v20 >= a2) {
        goto LABEL_34;
      }
      goto LABEL_27;
    }
    if (v24 >= 0x100) {
      int v11 = 2;
    }
    else {
      int v11 = v24 > 1;
    }
LABEL_26:
    if (v20 >= a2) {
      goto LABEL_34;
    }
    goto LABEL_27;
  }
  int v11 = 1;
  if (v20 >= a2)
  {
LABEL_34:
    uint64_t v28 = ~v17;
    switch(v11)
    {
      case 1:
        a1[v23] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      case 2:
        *(_WORD *)&a1[v23] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)&a1[v23] = 0;
        goto LABEL_38;
      default:
LABEL_38:
        if (a2)
        {
LABEL_39:
          if ((v19 & 0x80000000) != 0)
          {
            unint64_t v29 = (((((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                 + v16
                 + 17) & ~v16;
            if (v10 == v20)
            {
              if (v9 >= 2)
              {
                unsigned int v30 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v33 + 56);
                v30(v29, a2 + 1, v9, v7);
              }
            }
            else if (v14 >= 2)
            {
              unint64_t v31 = (v22 + ((v29 + v21) & 0xFFFFFFFFFFFFFFF8)) & v28;
              long long v32 = *(void (**)(unint64_t, void))(v13 + 56);
              v32(v31, a2 + 1);
            }
          }
          else if ((a2 & 0x80000000) != 0)
          {
            *(void *)a1 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            *((void *)a1 + 1) = a2 - 1;
          }
        }
        break;
    }
    return;
  }
LABEL_27:
  unsigned int v25 = ~v20 + a2;
  if (v23 < 4)
  {
    int v26 = (v25 >> (8 * v23)) + 1;
    if (v23)
    {
      int v27 = v25 & ~(-1 << (8 * v23));
      bzero(a1, v23);
      if (v23 == 3)
      {
        *(_WORD *)a1 = v27;
        a1[2] = BYTE2(v27);
      }
      else if (v23 == 2)
      {
        *(_WORD *)a1 = v27;
      }
      else
      {
        *a1 = v27;
      }
    }
  }
  else
  {
    bzero(a1, v23);
    *(_DWORD *)a1 = v25;
    int v26 = 1;
  }
  switch(v11)
  {
    case 1:
      a1[v23] = v26;
      break;
    case 2:
      *(_WORD *)&a1[v23] = v26;
      break;
    case 3:
LABEL_61:
      __break(1u);
      JUMPOUT(0x1C0BEF694);
    case 4:
      *(_DWORD *)&a1[v23] = v26;
      break;
    default:
      return;
  }
}

void *initializeBufferWithCopyOfBuffer for FormatEnumPropertyDefinition(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v10 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = a2[13];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v11 = *(int *)(a3 + 56);
    unsigned int v19 = (char *)a2 + v11;
    __dst = (void *)(a1 + v11);
    *(void *)(a1 + 120) = a2[15];
    uint64_t v12 = sub_1C1518CDC();
    uint64_t v17 = *(void *)(v12 - 8);
    uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v19, 1, v13))
    {
      sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v19, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(__dst, v19, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v13);
    }
  }
  return v3;
}

uint64_t initializeWithCopy for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = *(int *)(a3 + 56);
  uint64_t v17 = (const void *)(a2 + v10);
  __dst = (void *)(a1 + v10);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v11 = sub_1C1518CDC();
  uint64_t v15 = *(void *)(v11 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v12 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v17, 1, v12))
  {
    sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v17, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v17, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithCopy for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 56);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v6 = *(int *)(a3 + 56);
  uint64_t v7 = (const void *)(a2 + v6);
  uint64_t v8 = (void *)(a1 + v6);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v9 = sub_1C1518CDC();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
  {
    sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v8, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v8, v7, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithTake for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 56);
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1C1518CDC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0BF0160);
}

uint64_t sub_1C0BF0160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0BF0254);
}

uint64_t sub_1C0BF0254(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unint64_t sub_1C0BF032C()
{
  unint64_t result = qword_1EB863310;
  if (!qword_1EB863310)
  {
    sub_1BFE79B90(255, &qword_1EB879EE0, type metadata accessor for FormatPropertyDefinition, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863310);
  }
  return result;
}

void sub_1C0BF03B4()
{
  if (!qword_1EA1A4880)
  {
    type metadata accessor for FormatPropertyDefinition(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A4880);
    }
  }
}

void sub_1C0BF0418(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1BFE79B90(255, a3, a4, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0BF0490(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0BF04F0()
{
  if (!qword_1EB893078)
  {
    sub_1C08E5C74();
    sub_1BFF8784C(&qword_1EB8923C0, (void (*)(uint64_t))sub_1C08E5C74);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893078);
    }
  }
}

uint64_t sub_1C0BF0588()
{
  return 32;
}

__n128 sub_1C0BF0594(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

void sub_1C0BF05A0()
{
  if (!qword_1EB893068)
  {
    sub_1C08E60A8();
    sub_1BFF8784C(&qword_1EB8923A0, (void (*)(uint64_t))sub_1C08E60A8);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893068);
    }
  }
}

void sub_1C0BF0634()
{
  if (!qword_1EA1A4888)
  {
    sub_1C08E6564();
    sub_1BFF8784C(&qword_1EA1A0700, (void (*)(uint64_t))sub_1C08E6564);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A4888);
    }
  }
}

void sub_1C0BF06C8()
{
  if (!qword_1EB86E008)
  {
    sub_1C08E6948();
    sub_1BFF8784C(&qword_1EB86CF08, (void (*)(uint64_t))sub_1C08E6948);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86E008);
    }
  }
}

void sub_1C0BF075C()
{
  if (!qword_1EB86E010)
  {
    sub_1C08E6E04();
    sub_1BFF8784C(&qword_1EB86CF18, (void (*)(uint64_t))sub_1C08E6E04);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86E010);
    }
  }
}

void sub_1C0BF07F0()
{
  if (!qword_1EB893070)
  {
    sub_1C08E7290();
    sub_1BFF8784C(&qword_1EB8923B0, (void (*)(uint64_t))sub_1C08E7290);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893070);
    }
  }
}

void sub_1C0BF0884()
{
  if (!qword_1EB893058)
  {
    sub_1C08E7698();
    sub_1BFF8784C(&qword_1EB892380, (void (*)(uint64_t))sub_1C08E7698);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893058);
    }
  }
}

void sub_1C0BF0918()
{
  if (!qword_1EB893060)
  {
    sub_1C08E79E8();
    sub_1BFF8784C(&qword_1EB892390, (void (*)(uint64_t))sub_1C08E79E8);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893060);
    }
  }
}

void sub_1C0BF09AC()
{
  if (!qword_1EA1A4890)
  {
    sub_1C08E7EA4();
    sub_1BFF8784C(&qword_1EA1A0748, (void (*)(uint64_t))sub_1C08E7EA4);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A4890);
    }
  }
}

void sub_1C0BF0A40()
{
  if (!qword_1EA1A4898)
  {
    sub_1C08E8360();
    sub_1BFF8784C(&qword_1EA1A0790, (void (*)(uint64_t))sub_1C08E8360);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A4898);
    }
  }
}

void sub_1C0BF0AD4()
{
  if (!qword_1EA1A48A0)
  {
    sub_1C08E881C();
    sub_1BFF8784C(&qword_1EA1A07D8, (void (*)(uint64_t))sub_1C08E881C);
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A48A0);
    }
  }
}

uint64_t static BlueprintLayoutCollectionPipelineProcessorConfig.feed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C151C78C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8918D8 != -1) {
    swift_once();
  }
  if (byte_1EB8918C8 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD6B8], v2);
    sub_1C151C79C();
    uint64_t v6 = sub_1C151C7AC();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    uint64_t v8 = sub_1C151C7AC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
}

ValueMetadata *type metadata accessor for DebugFormatUploadTargetResult()
{
  return &type metadata for DebugFormatUploadTargetResult;
}

uint64_t sub_1C0BF0D2C(uint64_t a1)
{
  return sub_1C0BF0D44(a1);
}

uint64_t sub_1C0BF0D44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 56;
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v16 = v1;
    uint64_t v4 = *(void *)(v2 + 32);
    sub_1BFEE0A78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 16);
    int64_t v6 = v3[2];
    int64_t v7 = v6 + v5;
    if (__OFADD__(v6, v5)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v7 <= v3[3] >> 1)
    {
      if (*(void *)(v4 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v6 <= v7) {
        int64_t v9 = v6 + v5;
      }
      else {
        int64_t v9 = v6;
      }
      uint64_t v3 = sub_1C0EDFD18(isUniquelyReferenced_nonNull_native, v9, 1, v3);
      if (*(void *)(v4 + 16))
      {
LABEL_14:
        uint64_t v10 = v3[2];
        if ((v3[3] >> 1) - v10 < v5) {
          goto LABEL_25;
        }
        unint64_t v11 = (unint64_t)&v3[8 * v10 + 4];
        if (v4 + 32 < v11 + (v5 << 6) && v11 < v4 + 32 + (v5 << 6)) {
          goto LABEL_27;
        }
        swift_arrayInitWithCopy();
        if (v5)
        {
          uint64_t v12 = v3[2];
          BOOL v13 = __OFADD__(v12, v5);
          uint64_t v14 = v12 + v5;
          if (v13) {
            goto LABEL_26;
          }
          v3[2] = v14;
        }
        goto LABEL_4;
      }
    }
    if (v5) {
      goto LABEL_24;
    }
LABEL_4:
    v2 += 80;
    swift_bridgeObjectRelease();
    uint64_t v1 = v16 - 1;
    if (v16 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0BF0F6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 64; ; i += 64)
  {
    uint64_t v5 = *(void *)(a1 + i);
    uint64_t v6 = *(void *)(v5 + 16);
    int64_t v7 = *(void *)(v3 + 16);
    int64_t v8 = v7 + v6;
    if (__OFADD__(v7, v6)) {
      break;
    }
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= *(void *)(v3 + 24) >> 1)
    {
      if (*(void *)(v5 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v7 <= v8) {
        int64_t v10 = v7 + v6;
      }
      else {
        int64_t v10 = v7;
      }
      unint64_t v3 = sub_1C0EDFCD0(isUniquelyReferenced_nonNull_native, v10, 1, v3);
      if (*(void *)(v5 + 16))
      {
LABEL_14:
        uint64_t v11 = *(void *)(v3 + 16);
        uint64_t v12 = (*(void *)(v3 + 24) >> 1) - v11;
        uint64_t v13 = *(void *)(type metadata accessor for FormatContentSlotItemObject.Resolved() - 8);
        uint64_t v14 = *(void *)(v13 + 72);
        if (v12 < v6) {
          goto LABEL_28;
        }
        unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        unint64_t v16 = v3 + v15 + v14 * v11;
        unint64_t v17 = v5 + v15;
        uint64_t v18 = v14 * v6;
        unint64_t v19 = v16 + v18;
        unint64_t v20 = v17 + v18;
        if (v17 < v19 && v16 < v20) {
          goto LABEL_30;
        }
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v22 = *(void *)(v3 + 16);
          BOOL v23 = __OFADD__(v22, v6);
          uint64_t v24 = v22 + v6;
          if (v23) {
            goto LABEL_29;
          }
          *(void *)(v3 + 16) = v24;
        }
        goto LABEL_4;
      }
    }
    if (v6) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0BF1170(uint64_t a1)
{
  return sub_1C0BF1610(a1, sub_1C1046A68, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEC42E4, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t sub_1C0BF11C4(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v25 = *(void *)(a1 + 16);
  if (!v25) {
    return (uint64_t)v3;
  }
  uint64_t v24 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  while (1)
  {
    int v26 = v3;
    uint64_t v5 = v24 + 80 * v4;
    uint64_t v6 = *(void *)(v5 + 64);
    uint64_t v7 = *(void *)(v5 + 56);
    sub_1BFEE0A78();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C10468B0(v6);
    uint64_t v27 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BFEE0654(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v10 = *(void *)(v7 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = v7 + 48;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFDDF900(v28);
        v11 += 64;
        --v10;
      }
      while (v10);
      swift_release();
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v27;
      unint64_t v3 = v26;
    }
    else
    {
      uint64_t v12 = v27;
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v3 = v26;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v9 + 16);
    int64_t v14 = v3[2];
    int64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v15 <= v3[3] >> 1)
    {
      if (*(void *)(v9 + 16)) {
        goto LABEL_19;
      }
    }
    else
    {
      if (v14 <= v15) {
        int64_t v17 = v14 + v13;
      }
      else {
        int64_t v17 = v14;
      }
      unint64_t v3 = sub_1C0EE03E0((void *)isUniquelyReferenced_nonNull_native, v17, 1, v3);
      if (*(void *)(v9 + 16))
      {
LABEL_19:
        uint64_t v18 = v3[2];
        if ((v3[3] >> 1) - v18 < v13) {
          goto LABEL_29;
        }
        unint64_t v19 = (unint64_t)&v3[2 * v18 + 4];
        if (v9 + 32 < v19 + 16 * v13 && v19 < v9 + 32 + 16 * v13) {
          goto LABEL_31;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v20 = v3[2];
          BOOL v21 = __OFADD__(v20, v13);
          uint64_t v22 = v20 + v13;
          if (v21) {
            goto LABEL_30;
          }
          v3[2] = v22;
        }
        goto LABEL_4;
      }
    }
    if (v13) {
      goto LABEL_28;
    }
LABEL_4:
    ++v4;
    swift_bridgeObjectRelease();
    uint64_t v2 = v12;
    if (v4 == v25)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0BF1610(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t), uint64_t (*a4)(void))
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = swift_bridgeObjectRetain() + 56;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v33 = v5;
      uint64_t v31 = v6;
      uint64_t v9 = *(void *)(v7 + 40);
      uint64_t v32 = *(void *)(v7 + 32);
      sub_1BFEE0A78();
      sub_1BFEE0A78();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1C10468B0(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BFEE0654(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = a2(v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0033494();
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v14 = v13 + v12;
      if (__OFADD__(v13, v12)) {
        break;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v14 > *(void *)(v8 + 24) >> 1)
      {
        if (v13 <= v14) {
          uint64_t v16 = v13 + v12;
        }
        else {
          uint64_t v16 = v13;
        }
        uint64_t v8 = a3(isUniquelyReferenced_nonNull_native, v16);
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v17 = *(void *)(v8 + 16);
        uint64_t v18 = (*(void *)(v8 + 24) >> 1) - v17;
        uint64_t v19 = *(void *)(a4(0) - 8);
        uint64_t v20 = *(void *)(v19 + 72);
        if (v18 < v12) {
          goto LABEL_24;
        }
        unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
        unint64_t v22 = v8 + v21 + v20 * v17;
        uint64_t v23 = v20 * v12;
        if (v11 + v21 < v22 + v23 && v22 < v11 + v21 + v23) {
          goto LABEL_26;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v24 = *(void *)(v8 + 16);
          BOOL v25 = __OFADD__(v24, v12);
          uint64_t v26 = v24 + v12;
          if (v25) {
            goto LABEL_25;
          }
          *(void *)(v8 + 16) = v26;
        }
      }
      else if (v12)
      {
        goto LABEL_23;
      }
      v7 += 80;
      swift_bridgeObjectRelease();
      --v6;
      uint64_t v5 = v33;
      if (v31 == 1)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = sub_1C152052C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t FormatContent.Resolved.slotItems.getter()
{
  type metadata accessor for FormatContent.Resolved();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C0BF0D44(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C0BF0F6C(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t FormatContent.Resolved.convertSection(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = (int *)type metadata accessor for FormatContent.Resolved();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C0BF57F4(v9, v6, v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = *v3;
  uint64_t v29 = v3[1];
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v10 = v8[5];
  uint64_t v11 = (char *)v3 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
  uint64_t v14 = *(void *)((char *)v3 + v8[11]);
  uint64_t v26 = *(void **)((char *)v3 + v8[12]);
  uint64_t v15 = *(void *)((char *)v3 + v8[13]);
  sub_1C0BF9308((uint64_t)v3 + v8[14], (uint64_t)a2 + v8[14], (uint64_t (*)(void))sub_1BFEE6554);
  uint64_t v16 = *(void **)((char *)v3 + v8[15]);
  char v25 = *((unsigned char *)v3 + v8[16]);
  uint64_t v17 = *(void *)((char *)v3 + v8[17]);
  uint64_t v18 = *(void *)((char *)v3 + v8[6]);
  uint64_t v19 = *(void *)((char *)v3 + v8[7]);
  uint64_t v20 = *(void *)((char *)v3 + v8[9]);
  uint64_t v24 = *(void *)((char *)v3 + v8[10]);
  sub_1C0BF9308((uint64_t)v3 + v8[18], (uint64_t)a2 + v8[18], (uint64_t (*)(void))sub_1BFEE3854);
  *a2 = v28;
  a2[1] = v29;
  *(void *)((char *)a2 + v8[6]) = v18;
  *(void *)((char *)a2 + v8[7]) = v19;
  *(void *)((char *)a2 + v8[8]) = v27;
  *(void *)((char *)a2 + v8[9]) = v20;
  *(void *)((char *)a2 + v8[11]) = v14;
  *(void *)((char *)a2 + v8[12]) = v26;
  *(void *)((char *)a2 + v8[13]) = v15;
  *(void *)((char *)a2 + v8[15]) = v16;
  *((unsigned char *)a2 + v8[16]) = v25;
  *(void *)((char *)a2 + v8[17]) = v17;
  *(void *)((char *)a2 + v8[10]) = v24;
  id v21 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v22 = v26;
  return swift_unknownObjectRetain();
}

uint64_t sub_1C0BF1D1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v4 = a1 + 56;
    do
    {
      sub_1BFEE0A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      v4 += 80;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t FormatContent.Resolved.webEmbeds.getter()
{
  return sub_1C0BF4A48(sub_1C1046A68, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEC42E4, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t FormatContent.Resolved.itemAuxiliaries.getter()
{
  type metadata accessor for FormatContent.Resolved();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C0BF11C4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FormatContent.Resolved.init(identifier:publishDate:tag:issue:headline:webEmbed:subscription:subscriptionPaidAccess:affinityTagIDs:iAdKeywords:themes:subgroups:options:selectors:sponsoredAdBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  char v25 = *a10;
  *a9 = a1;
  a9[1] = a2;
  id v21 = (int *)type metadata accessor for FormatContent.Resolved();
  id v22 = (char *)a9 + v21[5];
  uint64_t v23 = sub_1C151631C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a3, v23);
  *(void *)((char *)a9 + v21[6]) = a12;
  *(void *)((char *)a9 + v21[7]) = a13;
  *(void *)((char *)a9 + v21[8]) = a14;
  *(void *)((char *)a9 + v21[9]) = a15;
  *(void *)((char *)a9 + v21[11]) = a4;
  *(void *)((char *)a9 + v21[12]) = a5;
  *(void *)((char *)a9 + v21[13]) = a6;
  sub_1BFDDF6A4(a7, (uint64_t)a9 + v21[14], (uint64_t (*)(void))sub_1BFEE6554);
  *(void *)((char *)a9 + v21[15]) = a8;
  *((unsigned char *)a9 + v21[16]) = v25;
  *(void *)((char *)a9 + v21[17]) = a11;
  *(void *)((char *)a9 + v21[10]) = a16;
  return sub_1BFDDF6A4(a17, (uint64_t)a9 + v21[18], (uint64_t (*)(void))sub_1BFEE3854);
}

unint64_t FormatContent.Resolved.headlines.getter()
{
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v78 = (uint64_t)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v79);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v66 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (id *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  unint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v82 = MEMORY[0x1E4FBC860];
  uint64_t v50 = *(void *)(v8 + 16);
  if (v50)
  {
    uint64_t v65 = v5;
    uint64_t v77 = v4;
    uint64_t v49 = v8 + 32;
    uint64_t v48 = v8;
    swift_bridgeObjectRetain_n();
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v61 = v11;
      uint64_t v62 = v10;
      uint64_t v12 = (uint64_t *)(v49 + 80 * v10);
      uint64_t v13 = v12[1];
      uint64_t v64 = *v12;
      uint64_t v14 = v12[2];
      uint64_t v15 = v12[3];
      uint64_t v16 = v12[4];
      uint64_t v17 = v12[5];
      unint64_t v18 = v12[7];
      uint64_t v63 = v12[6];
      uint64_t v19 = v12[8];
      uint64_t v20 = v12[9];
      uint64_t v52 = v16 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v57 = v19;
      uint64_t v58 = v13;
      uint64_t v60 = v14;
      uint64_t v59 = v15;
      unint64_t v53 = v18;
      sub_1BFEE0A78();
      uint64_t v56 = v20;
      uint64_t v54 = v17;
      sub_1BFEE0A78();
      unint64_t v21 = v53;
      sub_1BFEE0A78();
      uint64_t v55 = v16;
      sub_1BFEE0A78();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v22 = v21;
      swift_bridgeObjectRetain();
      uint64_t v23 = v57;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v24 = v61;
      uint64_t v25 = sub_1C10468B0(v23);
      uint64_t v61 = v24;
      swift_bridgeObjectRelease();
      unint64_t v81 = v22;
      swift_bridgeObjectRetain();
      sub_1BFEE0654(v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v26 = v81;
      unint64_t v81 = v9;
      uint64_t v68 = *(void *)(v26 + 16);
      if (v68)
      {
        unint64_t v67 = v26 + 32;
        unint64_t v51 = v26;
        swift_bridgeObjectRetain();
        unint64_t v27 = 0;
        do
        {
          uint64_t v29 = (void *)(v67 + (v27 << 6));
          uint64_t v30 = v29[1];
          uint64_t v31 = v29[2];
          uint64_t v33 = v29[3];
          uint64_t v32 = v29[4];
          uint64_t v35 = v29[5];
          uint64_t v34 = v29[6];
          uint64_t v36 = v29[7];
          unint64_t v80 = v9;
          uint64_t v37 = *(void *)(v32 + 16);
          if (v37)
          {
            uint64_t v75 = v30;
            unint64_t v76 = v27;
            uint64_t v38 = v66;
            uint64_t v39 = v32 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
            swift_bridgeObjectRetain_n();
            uint64_t v73 = v31;
            swift_bridgeObjectRetain_n();
            uint64_t v72 = v33;
            swift_bridgeObjectRetain_n();
            uint64_t v74 = v32;
            swift_bridgeObjectRetain_n();
            uint64_t v71 = v35;
            swift_bridgeObjectRetain_n();
            uint64_t v70 = v34;
            swift_bridgeObjectRetain_n();
            uint64_t v69 = v36;
            swift_bridgeObjectRetain_n();
            uint64_t v40 = *(void *)(v38 + 72);
            do
            {
              sub_1C0BF9308(v39, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
              uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              switch((int)EnumCaseMultiPayload)
              {
                case 1:

                  break;
                case 2:
                case 4:
                case 5:
                  swift_unknownObjectRelease();
                  break;
                case 3:
                  uint64_t v42 = (uint64_t)v77;
                  sub_1BFDDF6A4((uint64_t)v7, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                  uint64_t v43 = v78;
                  sub_1C0BF9308(v42 + *(int *)(v79 + 36), v78, (uint64_t (*)(void))sub_1BFEC8548);
                  sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
                  uint64_t v45 = v44;
                  uint64_t v46 = *(void *)(v44 - 8);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v43, 1, v44) != 1)
                  {
                    sub_1C151948C();
                    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v43, v45);
                    uint64_t EnumCaseMultiPayload = sub_1BFECF0C4(v42, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                    goto LABEL_20;
                  }
                  sub_1BFECF0C4(v43, (uint64_t (*)(void))sub_1BFEC8548);
                  sub_1BFECF0C4(v42, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                  break;
                case 6:
                case 7:
                  sub_1BFECF0C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  break;
                case 8:
                  swift_bridgeObjectRelease();
                  break;
                default:
LABEL_20:
                  MEMORY[0x1C18C66D0](EnumCaseMultiPayload);
                  if (*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    sub_1C151EC8C();
                  }
                  sub_1C151ECEC();
                  sub_1C151EBEC();
                  break;
              }
              v39 += v40;
              --v37;
            }
            while (v37);
            unint64_t v28 = v80;
            unint64_t v9 = MEMORY[0x1E4FBC860];
            unint64_t v27 = v76;
          }
          else
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            unint64_t v28 = v9;
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          ++v27;
          sub_1BFE52C14(v28);
        }
        while (v27 != v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v76 = v81;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v76 = v9;
      }
      ++v62;
      sub_1C0033494();
      sub_1C0033494();
      sub_1C0033494();
      uint64_t v10 = v62;
      sub_1BFE52C14(v76);
      uint64_t v11 = v61;
    }
    while (v10 != v50);
    swift_bridgeObjectRelease_n();
    return v82;
  }
  return v9;
}

uint64_t FormatContent.Resolved.compilerOptionIdentifiers.getter()
{
  sub_1BFF01444(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v63 = (char *)v61 - v2;
  sub_1BFF01444(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v76 = (void *)((char *)v61 - v4);
  sub_1BFE83B60();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v75 = (void *)((char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE82920(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v74 = (void *)((char *)v61 - v8);
  sub_1BFE82920(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v73 = (void *)((char *)v61 - v10);
  sub_1BFF01444(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v72 = (void *)((char *)v61 - v12);
  uint64_t v13 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v71 = (void *)((char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE83BF4();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v70 = (void *)((char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF01444(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v69 = (void *)((char *)v61 - v18);
  sub_1BFE82920(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v68 = (void *)((char *)v61 - v20);
  uint64_t v88 = type metadata accessor for FormatCompilerProperty(0);
  uint64_t v62 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  unint64_t v22 = (char *)v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v91 = MEMORY[0x1E4FBC860];
  uint64_t v65 = *(void *)(v23 + 16);
  if (v65)
  {
    uint64_t v64 = v23 + 32;
    v61[1] = v23;
    swift_bridgeObjectRetain_n();
    uint64_t v25 = 0;
    do
    {
      uint64_t v87 = v25;
      unint64_t v26 = (uint64_t *)(v64 + 80 * v25);
      uint64_t v27 = v26[1];
      uint64_t v86 = *v26;
      uint64_t v28 = v26[2];
      uint64_t v29 = v26[3];
      uint64_t v30 = v26[4];
      uint64_t v31 = v26[5];
      uint64_t v33 = v26[6];
      uint64_t v32 = v26[7];
      uint64_t v35 = v26[8];
      uint64_t v34 = v26[9];
      uint64_t v66 = v30 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v83 = *(void *)((v30 & 0x7FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
      sub_1BFEE0A78();
      uint64_t v85 = v35;
      uint64_t v81 = v29;
      uint64_t v82 = v28;
      uint64_t v80 = v30;
      uint64_t v84 = v33;
      sub_1BFEE0A78();
      int64_t v36 = *(void *)(v83 + 16);
      uint64_t v78 = v32;
      uint64_t v67 = v27;
      uint64_t v79 = v31;
      uint64_t v77 = v34;
      if (v36)
      {
        sub_1BFEE0A78();
        sub_1BFEE0A78();
        uint64_t v89 = MEMORY[0x1E4FBC860];
        uint64_t v37 = v83;
        swift_bridgeObjectRetain();
        sub_1BFF661B8(0, v36, 0);
        uint64_t v38 = v89;
        uint64_t v39 = v37 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        uint64_t v40 = *(void *)(v62 + 72);
        long long v41 = (uint64_t *)v63;
        do
        {
          sub_1C0BF9308(v39, (uint64_t)v22, type metadata accessor for FormatCompilerProperty);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v45 = v69;
              sub_1C087DC64((uint64_t)v22, (uint64_t)v69);
              uint64_t v44 = *v45;
              uint64_t v43 = v45[1];
              swift_bridgeObjectRetain();
              sub_1C087DF44((uint64_t)v45);
              break;
            case 2u:
              uint64_t v46 = v70;
              sub_1BFDDF6A4((uint64_t)v22, (uint64_t)v70, (uint64_t (*)(void))sub_1BFE83BF4);
              uint64_t v44 = *v46;
              uint64_t v43 = v46[1];
              swift_bridgeObjectRetain();
              long long v47 = (uint64_t (*)(void))sub_1BFE83BF4;
              goto LABEL_15;
            case 3u:
              uint64_t v46 = v71;
              sub_1BFDDF6A4((uint64_t)v22, (uint64_t)v71, type metadata accessor for FormatCompilerEnumProperty);
              uint64_t v44 = *v46;
              uint64_t v43 = v46[1];
              swift_bridgeObjectRetain();
              long long v47 = type metadata accessor for FormatCompilerEnumProperty;
              goto LABEL_15;
            case 4u:
              uint64_t v48 = v72;
              sub_1C087DB38((uint64_t)v22, (uint64_t)v72);
              uint64_t v44 = *v48;
              uint64_t v43 = v48[1];
              swift_bridgeObjectRetain();
              sub_1C087DEB0((uint64_t)v48);
              break;
            case 5u:
              uint64_t v49 = v73;
              sub_1C087DA18((uint64_t)v22, (uint64_t)v73);
              uint64_t v44 = *v49;
              uint64_t v43 = v49[1];
              swift_bridgeObjectRetain();
              sub_1C087DE28((uint64_t)v49);
              break;
            case 6u:
              uint64_t v50 = v74;
              sub_1BFE83E80((uint64_t)v22, (uint64_t)v74);
              uint64_t v44 = *v50;
              uint64_t v43 = v50[1];
              swift_bridgeObjectRetain();
              sub_1BFE86F20((uint64_t)v50);
              break;
            case 7u:
              uint64_t v46 = v75;
              sub_1BFDDF6A4((uint64_t)v22, (uint64_t)v75, (uint64_t (*)(void))sub_1BFE83B60);
              uint64_t v44 = *v46;
              uint64_t v43 = v46[1];
              swift_bridgeObjectRetain();
              long long v47 = (uint64_t (*)(void))sub_1BFE83B60;
LABEL_15:
              sub_1BFECF0C4((uint64_t)v46, v47);
              break;
            case 8u:
              unint64_t v51 = v76;
              sub_1C087D8F8((uint64_t)v22, (uint64_t)v76);
              uint64_t v44 = *v51;
              uint64_t v43 = v51[1];
              swift_bridgeObjectRetain();
              sub_1C087DD94((uint64_t)v51);
              break;
            case 9u:
              sub_1C087D7CC((uint64_t)v22, (uint64_t)v41);
              uint64_t v44 = *v41;
              uint64_t v43 = v41[1];
              swift_bridgeObjectRetain();
              sub_1C087DD00((uint64_t)v41);
              break;
            default:
              uint64_t v42 = v68;
              sub_1BFE86E90((uint64_t)v22, (uint64_t)v68);
              uint64_t v44 = *v42;
              uint64_t v43 = v42[1];
              swift_bridgeObjectRetain();
              sub_1BFE87264((uint64_t)v42);
              break;
          }
          uint64_t v89 = v38;
          unint64_t v53 = *(void *)(v38 + 16);
          unint64_t v52 = *(void *)(v38 + 24);
          if (v53 >= v52 >> 1)
          {
            sub_1BFF661B8(v52 > 1, v53 + 1, 1);
            long long v41 = (uint64_t *)v63;
            uint64_t v38 = v89;
          }
          *(void *)(v38 + 16) = v53 + 1;
          uint64_t v54 = v38 + 16 * v53;
          *(void *)(v54 + 32) = v44;
          *(void *)(v54 + 40) = v43;
          v39 += v40;
          --v36;
        }
        while (v36);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BFEE0A78();
        sub_1BFEE0A78();
        uint64_t v38 = MEMORY[0x1E4FBC860];
      }
      uint64_t v90 = sub_1C151EFFC();
      uint64_t v55 = *(void *)(v38 + 16);
      if (v55)
      {
        uint64_t v56 = (uint64_t *)(v38 + 40);
        do
        {
          uint64_t v57 = *(v56 - 1);
          uint64_t v58 = *v56;
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v89, v57, v58);
          swift_bridgeObjectRelease();
          v56 += 2;
          --v55;
        }
        while (v55);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v87;
      sub_1C0033494();
      sub_1C0033494();
      sub_1C0033494();
      sub_1BFE72794(v90);
      uint64_t v25 = v87;
    }
    while (v87 != v65);
    swift_bridgeObjectRelease_n();
    uint64_t v24 = v91;
  }
  uint64_t v59 = sub_1BFEF4060(v24);
  swift_bridgeObjectRelease();
  return v59;
}

uint64_t FormatContent.Resolved.scrollingTrait.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatContent.Resolved();
  uint64_t v4 = *(void *)(v1 + *(int *)(result + 32));
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(v4 + 64);
    while (1)
    {
      uint64_t v8 = *v6;
      v6 += 10;
      uint64_t v7 = v8;
      if ((v8 & 0x8000000000000000) == 0)
      {
        uint64_t v9 = (unsigned __int8 *)(v7 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
        uint64_t result = swift_beginAccess();
        int v10 = *v9;
        if (v10 != 4) {
          break;
        }
      }
      if (!--v5) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    LOBYTE(v10) = 4;
  }
  *a1 = v10;
  return result;
}

uint64_t FormatContent.Resolved.createPlugins2<A>(block:)()
{
  type metadata accessor for FormatContent.Resolved();
  sub_1BFEF9B1C(0, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
  sub_1C0BF5A4C();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C151E97C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatContent.Resolved.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContent.Resolved.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatContent.Resolved() + 20);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FormatContent.Resolved.options.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.Resolved.selectors.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

void *FormatContent.Resolved.issue.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 48));
  id v2 = v1;
  return v1;
}

uint64_t FormatContent.Resolved.headline.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_unknownObjectRetain();
}

uint64_t FormatContent.Resolved.webEmbed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatContent.Resolved();
  return sub_1C0BF9308(v1 + *(int *)(v3 + 56), a1, (uint64_t (*)(void))sub_1BFEE6554);
}

void *FormatContent.Resolved.subscription.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 60));
  id v2 = v1;
  return v1;
}

uint64_t FormatContent.Resolved.subscriptionPaidAccess.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FormatContent.Resolved();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t FormatContent.Resolved.affinityTagIDs.getter()
{
  type metadata accessor for FormatContent.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FormatContent.Resolved.sponsoredAdBanner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatContent.Resolved();
  return sub_1C0BF9308(v1 + *(int *)(v3 + 72), a1, (uint64_t (*)(void))sub_1BFEE3854);
}

unint64_t FormatContent.Resolved.requiresPlugin.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = (unint64_t *)(v1 + 64);
  do
  {
    uint64_t v5 = v3;
    unint64_t v6 = *v4;
    v4 += 10;
    unint64_t result = v6 >> 63;
    if ((v6 & 0x8000000000000000) != 0) {
      break;
    }
    --v3;
  }
  while (v5);
  return result;
}

uint64_t FormatContent.Resolved.copy(identifier:publishDate:tag:issue:headline:webEmbed:subscription:subscriptionPaidAccess:affinityTagIDs:iAdKeywords:themes:subgroups:options:selectors:sponsoredAdBanner:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, char *a9@<X8>, unsigned __int8 *a10, uint64_t a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = v17;
  uint64_t v117 = a8;
  uint64_t v122 = a6;
  uint64_t v123 = a7;
  uint64_t v124 = a5;
  uint64_t v131 = a1;
  id v132 = a4;
  uint64_t v126 = a3;
  uint64_t v137 = a10;
  sub_1BFEE3854(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v130 = (uint64_t)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v120 = (uint64_t)&v111 - v24;
  sub_1BFEE6554(0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v114 = (char *)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v134 = (uint64_t)&v111 - v28;
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1C151631C();
  uint64_t v135 = *(void *)(v32 - 8);
  uint64_t v136 = v32;
  MEMORY[0x1F4188790](v32);
  uint64_t v133 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (int *)type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v34);
  uint64_t v129 = (uint64_t)&v111 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v128 = (char *)&v111 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v127 = (uint64_t)&v111 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v118 = (char *)&v111 - v41;
  MEMORY[0x1F4188790](v42);
  unint64_t v125 = (char *)&v111 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v116 = (char *)&v111 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v115 = (char *)&v111 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v113 = (char *)&v111 - v49;
  MEMORY[0x1F4188790](v50);
  uint64_t v112 = (uint64_t)&v111 - v51;
  MEMORY[0x1F4188790](v52);
  uint64_t v121 = (uint64_t)&v111 - v53;
  MEMORY[0x1F4188790](v54);
  uint64_t v56 = (char *)&v111 - v55;
  MEMORY[0x1F4188790](v57);
  uint64_t v59 = (char *)&v111 - v58;
  MEMORY[0x1F4188790](v60);
  uint64_t v62 = (char *)&v111 - v61;
  MEMORY[0x1F4188790](v63);
  uint64_t v65 = (char *)&v111 - v64;
  MEMORY[0x1F4188790](v66);
  uint64_t v68 = (uint64_t *)((char *)&v111 - v67);
  LODWORD(v137) = *v137;
  sub_1C0BF9308(v18, (uint64_t)&v111 - v67, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  if (a2)
  {
    uint64_t v119 = a2;
  }
  else
  {
    uint64_t v69 = v68[1];
    uint64_t v131 = *v68;
    uint64_t v119 = v69;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFECF0C4((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v126, (uint64_t)v31, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1C0BF9308(v18, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v71 = v135;
  uint64_t v70 = v136;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v31, 1, v136) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v133, &v65[v34[5]], v70);
    sub_1BFECF0C4((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    sub_1BFECF0C4((uint64_t)v31, (uint64_t (*)(void))sub_1BFF97C40);
  }
  else
  {
    sub_1BFECF0C4((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v133, v31, v70);
  }
  uint64_t v72 = (uint64_t)v116;
  uint64_t v73 = (uint64_t)v114;
  sub_1C0BF9308(v18, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v74 = (uint64_t)v132;
  if (!v132)
  {
    uint64_t v74 = *(void *)&v62[v34[11]];
    swift_unknownObjectRetain();
  }
  swift_unknownObjectRetain();
  sub_1BFECF0C4((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v75 = v124;
  id v132 = v124;
  if (!v124)
  {
    id v132 = *(id *)&v59[v34[12]];
    id v76 = v132;
  }
  uint64_t v126 = v74;
  id v77 = v75;
  sub_1BFECF0C4((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v78 = v122;
  if (!v122) {
    uint64_t v78 = swift_unknownObjectRetain();
  }
  uint64_t v124 = (void *)v78;
  swift_unknownObjectRetain();
  sub_1BFECF0C4((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v123, v73, (uint64_t (*)(void))sub_1BFEE6554);
  uint64_t v79 = v121;
  sub_1C0BF9308(v18, v121, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v80 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v81 = *(void *)(v80 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v73, 1, v80) == 1)
  {
    sub_1C0BF9308(v79 + v34[14], v134, (uint64_t (*)(void))sub_1BFEE6554);
    sub_1BFECF0C4(v79, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    sub_1BFECF0C4(v73, (uint64_t (*)(void))sub_1BFEE6554);
  }
  else
  {
    sub_1BFECF0C4(v79, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    uint64_t v82 = v134;
    sub_1BFDDF6A4(v73, v134, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v82, 0, 1, v80);
  }
  uint64_t v83 = v117;
  uint64_t v84 = (uint64_t)v118;
  uint64_t v85 = (uint64_t)v115;
  uint64_t v86 = (uint64_t)v113;
  uint64_t v87 = v112;
  sub_1C0BF9308(v18, v112, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v88 = v83;
  if (!v83)
  {
    uint64_t v88 = *(void **)(v87 + v34[15]);
    id v89 = v88;
  }
  uint64_t v123 = (uint64_t)v88;
  id v90 = v83;
  sub_1BFECF0C4(v87, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, v86, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  if (v137 == 3) {
    LODWORD(v137) = *(unsigned __int8 *)(v86 + v34[16]);
  }
  sub_1BFECF0C4(v86, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, v85, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v91 = (uint64_t)v125;
  if (a11)
  {
    uint64_t v122 = a11;
  }
  else
  {
    uint64_t v122 = *(void *)(v85 + v34[17]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFECF0C4(v85, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, v72, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  if (a12)
  {
    uint64_t v121 = a12;
  }
  else
  {
    uint64_t v121 = *(void *)(v72 + v34[6]);
    swift_bridgeObjectRetain();
  }
  uint64_t v92 = (uint64_t)v128;
  swift_bridgeObjectRetain();
  sub_1BFECF0C4(v72, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, v91, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  if (a13)
  {
    uint64_t v93 = a13;
  }
  else
  {
    uint64_t v93 = *(char **)(v91 + v34[7]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFECF0C4(v91, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, v84, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v128 = v93;
  if (a14)
  {
    uint64_t v94 = a14;
  }
  else
  {
    uint64_t v94 = *(void *)(v84 + v34[8]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFECF0C4(v84, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v95 = v127;
  sub_1C0BF9308(v18, v127, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  if (a15)
  {
    uint64_t v96 = a15;
  }
  else
  {
    uint64_t v96 = *(void *)(v95 + v34[9]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFECF0C4(v95, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  sub_1C0BF9308(v18, v92, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  if (a16)
  {
    uint64_t v97 = a16;
  }
  else
  {
    uint64_t v97 = *(void *)(v92 + v34[10]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BFECF0C4(v92, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v98 = v130;
  sub_1C0BF9308(a17, v130, (uint64_t (*)(void))sub_1BFEE3854);
  uint64_t v99 = v129;
  sub_1C0BF9308(v18, v129, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v100 = sub_1C151D6DC();
  uint64_t v101 = *(void *)(v100 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v98, 1, v100) == 1)
  {
    uint64_t v102 = v98;
    uint64_t v103 = v120;
    sub_1C0BF9308(v99 + v34[18], v120, (uint64_t (*)(void))sub_1BFEE3854);
    sub_1BFECF0C4(v99, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    sub_1BFECF0C4(v102, (uint64_t (*)(void))sub_1BFEE3854);
  }
  else
  {
    sub_1BFECF0C4(v99, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
    uint64_t v104 = v98;
    uint64_t v103 = v120;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v120, v104, v100);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v103, 0, 1, v100);
  }
  id v105 = v132;
  uint64_t v106 = v119;
  uint64_t v108 = v121;
  uint64_t v107 = v122;
  uint64_t v109 = v128;
  *(void *)a9 = v131;
  *((void *)a9 + 1) = v106;
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(&a9[v34[5]], v133, v136);
  *(void *)&a9[v34[6]] = v108;
  *(void *)&a9[v34[7]] = v109;
  *(void *)&a9[v34[8]] = v94;
  *(void *)&a9[v34[9]] = v96;
  *(void *)&a9[v34[11]] = v126;
  *(void *)&a9[v34[12]] = v105;
  *(void *)&a9[v34[13]] = v124;
  sub_1BFDDF6A4(v134, (uint64_t)&a9[v34[14]], (uint64_t (*)(void))sub_1BFEE6554);
  *(void *)&a9[v34[15]] = v123;
  a9[v34[16]] = (char)v137;
  *(void *)&a9[v34[17]] = v107;
  *(void *)&a9[v34[10]] = v97;
  return sub_1BFDDF6A4(v103, (uint64_t)&a9[v34[18]], (uint64_t (*)(void))sub_1BFEE3854);
}

uint64_t FormatContent.Resolved.slots.getter()
{
  type metadata accessor for FormatContent.Resolved();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C0BF0D44(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t FormatContent.Resolved.customItems.getter()
{
  return sub_1C0BF4A48(sub_1C1046FB0, (uint64_t (*)(uint64_t, uint64_t))sub_1C0EE7510, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
}

uint64_t sub_1C0BF4A48(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t, uint64_t), uint64_t (*a3)(void))
{
  type metadata accessor for FormatContent.Resolved();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C0BF1610(v6, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t FormatContent.Resolved.feedItemIdentifiers.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v27 = *(void *)(v1 + 16);
  if (v27)
  {
    uint64_t v26 = v1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    do
    {
      uint64_t v6 = v26 + 80 * v3;
      uint64_t v7 = *(void *)(v6 + 56);
      uint64_t v8 = *(void *)(v6 + 64);
      sub_1BFEE0A78();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C10468B0(v8);
      swift_bridgeObjectRelease();
      uint64_t v29 = v7;
      swift_bridgeObjectRetain();
      sub_1BFEE0654(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v29;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v34 = MEMORY[0x1E4FBC860];
      uint64_t v12 = *(void *)(v29 + 16);
      if (v12)
      {
        uint64_t v13 = v4;
        swift_bridgeObjectRetain();
        uint64_t v14 = v10 + 56;
        do
        {
          uint64_t v15 = *(void *)(v14 + 32);
          uint64_t v29 = *(void *)(v14 - 24);
          long long v30 = *(_OWORD *)(v14 - 16);
          long long v16 = *(_OWORD *)v14;
          long long v17 = *(_OWORD *)(v14 + 16);
          v14 += 64;
          long long v31 = v16;
          long long v32 = v17;
          uint64_t v33 = v15;
          uint64_t v18 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
          sub_1BFE72794(v18);
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease_n();
        uint64_t v11 = v34;
      }
      else
      {
        uint64_t v13 = v4;
        swift_bridgeObjectRelease();
      }
      uint64_t v19 = *(void *)(v11 + 16);
      uint64_t v20 = sub_1C151EFFC();
      uint64_t v34 = v20;
      if (v19)
      {
        uint64_t v28 = v13;
        uint64_t v21 = (uint64_t *)(v11 + 40);
        do
        {
          uint64_t v22 = *(v21 - 1);
          uint64_t v23 = *v21;
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v29, v22, v23);
          swift_bridgeObjectRelease();
          v21 += 2;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = v34;
        uint64_t v4 = v28;
      }
      else
      {
        uint64_t v5 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v13;
      }
      ++v3;
      sub_1BFE72794(v5);
    }
    while (v3 != v27);
    swift_bridgeObjectRelease();
    uint64_t v2 = v35;
  }
  uint64_t v24 = sub_1BFEF4060(v2);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t FormatContent.Resolved.createPlugins(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C02848E8((void (*)(uint64_t *__return_ptr, void *))sub_1C0BF5AC8, (uint64_t)&v10, v5);
  swift_bridgeObjectRelease();
  sub_1C00BC390(0);
  uint64_t v14 = v6;
  uint64_t v7 = (void *)sub_1C1518E7C();
  sub_1C00BC3C4(0);
  sub_1BFF87894(&qword_1EB86AFD0, sub_1C00BC3C4);
  uint64_t v8 = sub_1C1518FAC();
  swift_bridgeObjectRelease();

  return v8;
}

void sub_1C0BF4F34(uint64_t *a1@<X0>, uint64_t (*a2)(void *)@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = 0;
  uint64_t v13 = a1[4];
  if (v13 < 0)
  {
    uint64_t v29 = a2;
    long long v30 = a4;
    uint64_t v14 = a1[8];
    uint64_t v15 = a1[9];
    v31[11] = v4;
    uint64_t v16 = a1[6];
    uint64_t v22 = a1[7];
    uint64_t v23 = v16;
    uint64_t v17 = a1[5];
    uint64_t v18 = a1[2];
    uint64_t v19 = a1[3];
    uint64_t v26 = a3;
    uint64_t v20 = a1[1];
    uint64_t v27 = *a1;
    uint64_t v28 = v18;
    v31[0] = v27;
    v31[1] = v20;
    _OWORD v31[2] = v18;
    v31[3] = v19;
    v31[4] = v13 & 0x7FFFFFFFFFFFFFFFLL;
    v31[5] = v17;
    uint64_t v24 = v14;
    uint64_t v25 = v17;
    v31[6] = v16;
    v31[7] = v22;
    v31[8] = v14;
    v31[9] = v15;
    sub_1C003EFB0(v31, v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = v29(v11);
    a4 = v30;
    sub_1C0033494();
    sub_1BFECF0C4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  }
  *a4 = v12;
}

uint64_t sub_1C0BF50E8@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for FormatContent.Resolved();
  __n128 v12 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[4];
  if ((v14 & 0x8000000000000000) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(a4 - 8) + 56))(a5, 1, 1, a4, v12);
  }
  uint64_t v17 = a1[8];
  uint64_t v16 = a1[9];
  uint64_t v31 = a3;
  v25[1] = v17;
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[5];
  uint64_t v27 = a5;
  uint64_t v28 = a2;
  uint64_t v21 = a1[3];
  uint64_t v26 = a1[2];
  uint64_t v22 = *a1;
  uint64_t v23 = a1[1];
  uint64_t v29 = a4;
  uint64_t v30 = v22;
  v32[0] = v22;
  v32[1] = v23;
  v25[3] = v16;
  v25[4] = v23;
  v32[2] = v26;
  v32[3] = v21;
  v32[4] = v14 & 0x7FFFFFFFFFFFFFFFLL;
  v32[5] = v20;
  v25[2] = v20;
  v32[6] = v18;
  v32[7] = v19;
  v25[0] = v18;
  v32[8] = v17;
  v32[9] = v16;
  sub_1C003EFB0(v32, (void *)((char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0)));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = v27;
  v28(v13, v26, v21);
  sub_1C0033494();
  sub_1BFECF0C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 56))(v24, 0, 1);
}

unint64_t sub_1C0BF532C(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x446873696C627570;
      break;
    case 2:
      unint64_t result = 0x6F7779654B644169;
      break;
    case 3:
      unint64_t result = 0x73656D656874;
      break;
    case 4:
      unint64_t result = 0x70756F7267627573;
      break;
    case 5:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 6:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 7:
      unint64_t result = 6775156;
      break;
    case 8:
      unint64_t result = 0x6575737369;
      break;
    case 9:
      unint64_t result = 0x7069726373627573;
      break;
    case 10:
      unint64_t result = 0x7974696E69666661;
      break;
    case 11:
      unint64_t result = 0xD000000000000016;
      break;
    case 12:
      unint64_t result = 0x656E696C64616568;
      break;
    case 13:
      unint64_t result = 0x6465626D45626577;
      break;
    case 14:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0BF5554(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1C0BF532C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1C0BF532C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0BF55E0()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0BF532C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0BF5644()
{
  sub_1C0BF532C(*v0);
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BF5698()
{
  char v1 = *v0;
  sub_1C1520DBC();
  sub_1C0BF532C(v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  return sub_1C1520E0C();
}

uint64_t sub_1C0BF56F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0BF9290();
  *a1 = result;
  return result;
}

unint64_t sub_1C0BF5728@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0BF532C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0BF5754@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0BF9290();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BF577C(uint64_t a1)
{
  unint64_t v2 = sub_1BFDDEEC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0BF57B8(uint64_t a1)
{
  unint64_t v2 = sub_1BFDDEEC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0BF57F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C05F63E0(0, v4, 0);
    uint64_t v5 = v23;
    uint64_t v7 = (void *)(a1 + 56);
    do
    {
      uint64_t v8 = v7[1];
      uint64_t v10 = v7[4];
      uint64_t v9 = v7[5];
      uint64_t v22 = v7[6];
      long long v21 = *((_OWORD *)v7 - 1);
      uint64_t v19 = *v7;
      uint64_t v20 = *(v7 - 3);
      uint64_t v17 = v7[3];
      uint64_t v18 = v7[2];
      if (v8 < 0 || !*(void *)(v9 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v10 = a4;
        swift_bridgeObjectRetain();
        uint64_t v9 = MEMORY[0x1E4FBC860];
      }
      uint64_t v11 = swift_bridgeObjectRetain();
      unint64_t v13 = *(void *)(v23 + 16);
      unint64_t v12 = *(void *)(v23 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C05F63E0(v12 > 1, v13 + 1, 1);
        uint64_t v11 = v22;
      }
      *(void *)(v23 + 16) = v13 + 1;
      uint64_t v14 = v23 + 80 * v13;
      *(void *)(v14 + 32) = v20;
      *(_OWORD *)(v14 + 40) = v21;
      *(void *)(v14 + 56) = v19;
      *(void *)(v14 + 64) = v8;
      *(void *)(v14 + 72) = v18;
      *(void *)(v14 + 80) = v17;
      *(void *)(v14 + 88) = v10;
      *(void *)(v14 + 96) = v9;
      *(void *)(v14 + 104) = v11;
      v7 += 10;
      --v4;
    }
    while (v4);
  }
  return v5;
}

void sub_1C0BF59D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C15194BC();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0BF5A2C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0BF50E8(a1, *(void (**)(char *, uint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), a2);
}

unint64_t sub_1C0BF5A4C()
{
  unint64_t result = qword_1EB890020;
  if (!qword_1EB890020)
  {
    sub_1BFEF9B1C(255, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890020);
  }
  return result;
}

void sub_1C0BF5AC8(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0BF4F34(a1, *(uint64_t (**)(void *))(v2 + 24), *(void *)(v2 + 32), a2);
}

void sub_1C0BF5AE8()
{
  if (!qword_1EB85ABA0)
  {
    sub_1C0BF59D0(255, &qword_1EB85AB98, (uint64_t)&qword_1EB85C530, 0x1E4F7E7F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85ABA0);
    }
  }
}

void sub_1C0BF5B6C()
{
  if (!qword_1EB85F318)
  {
    sub_1C0BF59D0(255, (unint64_t *)&unk_1EB85E4C0, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85F318);
    }
  }
}

uint64_t sub_1C0BF5BF0()
{
  return sub_1BFF87894(&qword_1EB85BDC0, (void (*)(uint64_t))type metadata accessor for FormatPackageInventory);
}

unint64_t sub_1C0BF5C24()
{
  unint64_t result = qword_1EB85ABC0;
  if (!qword_1EB85ABC0)
  {
    sub_1C0BF59D0(255, (unint64_t *)&unk_1EB85ABD0, (uint64_t)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ABC0);
  }
  return result;
}

unint64_t sub_1C0BF5CA8()
{
  unint64_t result = qword_1EB85F310;
  if (!qword_1EB85F310)
  {
    sub_1C0BF59D0(255, (unint64_t *)&unk_1EB85E4C0, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F310);
  }
  return result;
}

unint64_t sub_1C0BF5D2C()
{
  unint64_t result = qword_1EB85AB90;
  if (!qword_1EB85AB90)
  {
    sub_1C0BF59D0(255, &qword_1EB85AB98, (uint64_t)&qword_1EB85C530, 0x1E4F7E7F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AB90);
  }
  return result;
}

uint64_t sub_1C0BF5DB0()
{
  return sub_1BFF87894((unint64_t *)&unk_1EB85BDB0, (void (*)(uint64_t))type metadata accessor for FormatPackageInventory);
}

uint64_t sub_1C0BF5DE4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEF9B1C(255, (unint64_t *)&unk_1EB890010, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0BF5E74()
{
  unint64_t result = qword_1EB85ABB0;
  if (!qword_1EB85ABB0)
  {
    sub_1C0BF59D0(255, (unint64_t *)&unk_1EB85ABD0, (uint64_t)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ABB0);
  }
  return result;
}

unint64_t sub_1C0BF5EF8()
{
  unint64_t result = qword_1EB85F0F0;
  if (!qword_1EB85F0F0)
  {
    sub_1C0BF59D0(255, (unint64_t *)&unk_1EB85E4C0, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F0F0);
  }
  return result;
}

uint64_t sub_1C0BF5F7C()
{
  return sub_1BFF87894(&qword_1EB85B7B0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
}

unint64_t sub_1C0BF5FB0()
{
  unint64_t result = qword_1EB85AB80;
  if (!qword_1EB85AB80)
  {
    sub_1C0BF59D0(255, &qword_1EB85AB98, (uint64_t)&qword_1EB85C530, 0x1E4F7E7F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85AB80);
  }
  return result;
}

uint64_t dispatch thunk of FormatContentProviding.formatContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *_s8ResolvedVwCP_1(void *a1, void *a2, int *a3)
{
  unint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    uint64_t v25 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151631C();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)v3 + a3[6]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)v3 + v13);
    uint64_t v14 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)v3 + a3[8]);
    *(void *)((char *)a1 + v14) = *(void *)((char *)v3 + v14);
    uint64_t v15 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)v3 + a3[10]);
    *(void *)((char *)a1 + v15) = *(void *)((char *)v3 + v15);
    uint64_t v16 = a3[12];
    uint64_t v17 = a3[13];
    uint64_t v18 = a1;
    uint64_t v19 = *(void **)((char *)v3 + v16);
    *(void *)((char *)v18 + v16) = v19;
    *(void *)((char *)v18 + v17) = *(void *)((char *)v3 + v17);
    id v90 = v18;
    uint64_t v92 = a3;
    uint64_t v20 = a3[14];
    uint64_t v98 = (void *)((char *)v18 + v20);
    uint64_t v93 = v3;
    uint64_t v97 = (void *)((char *)v3 + v20);
    long long v21 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
    uint64_t v89 = *((void *)v21 - 1);
    __dstb = *(unsigned int (**)(void *, uint64_t, int *))(v89 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v22 = v19;
    swift_unknownObjectRetain();
    if (__dstb(v97, 1, v21))
    {
      sub_1BFEE6554(0);
      memcpy(v98, v97, *(void *)(*(void *)(v23 - 8) + 64));
      uint64_t v24 = v92;
      uint64_t v25 = v90;
    }
    else
    {
      uint64_t v27 = v97[1];
      *uint64_t v98 = *v97;
      v98[1] = v27;
      uint64_t v28 = v21[5];
      uint64_t v29 = (void *)((char *)v98 + v28);
      uint64_t v30 = (char *)v97 + v28;
      uint64_t v31 = *(void *)((char *)v97 + v28 + 8);
      *uint64_t v29 = *(void *)((char *)v97 + v28);
      v29[1] = v31;
      long long v32 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v33 = v32[5];
      uint64_t v84 = &v30[v33];
      uint64_t v86 = (char *)v29 + v33;
      uint64_t v34 = sub_1C1515FDC();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v86, v84, v34);
      uint64_t v37 = v32[6];
      __dst = (char *)v29 + v37;
      uint64_t v38 = &v30[v37];
      uint64_t v82 = v34;
      uint64_t v81 = v36;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v30[v37], 1, v34))
      {
        uint64_t v39 = v97;
        sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(__dst, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        uint64_t v41 = v34;
        uint64_t v39 = v97;
        v36(__dst, v38, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v41);
      }
      uint64_t v25 = v90;
      *(void *)((char *)v29 + v32[7]) = *(void *)&v30[v32[7]];
      uint64_t v42 = v32[8];
      uint64_t v43 = (void *)((char *)v29 + v42);
      uint64_t v44 = &v30[v42];
      uint64_t v87 = *((void *)v44 + 1);
      *uint64_t v43 = *(void *)v44;
      v43[1] = v87;
      uint64_t v45 = v32[9];
      uint64_t v46 = (void *)((char *)v29 + v45);
      uint64_t v47 = &v30[v45];
      uint64_t v48 = *((void *)v47 + 1);
      *uint64_t v46 = *(void *)v47;
      v46[1] = v48;
      *(void *)((char *)v29 + v32[10]) = *(void *)&v30[v32[10]];
      *(void *)((char *)v29 + v32[11]) = *(void *)&v30[v32[11]];
      *(void *)((char *)v29 + v32[12]) = *(void *)&v30[v32[12]];
      *(void *)((char *)v98 + v21[6]) = *(void *)((char *)v39 + v21[6]);
      *(void *)((char *)v98 + v21[7]) = *(void *)((char *)v39 + v21[7]);
      __dsta = v21;
      uint64_t v49 = v21[8];
      uint64_t v83 = (void *)((char *)v98 + v49);
      uint64_t v50 = (void *)((char *)v39 + v49);
      uint64_t v51 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v85 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v52 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v85(v50, 1, v51))
      {
        sub_1BFF95180(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v83, v50, *(void *)(*(void *)(v53 - 8) + 64));
        uint64_t v24 = v92;
        unint64_t v3 = v93;
        uint64_t v54 = v98;
      }
      else
      {
        uint64_t v91 = v52;
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v56 = *v50;
        uint64_t v24 = v92;
        unint64_t v3 = v93;
        uint64_t v54 = v98;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v88 = v51;
          uint64_t v57 = v50[1];
          *uint64_t v83 = v56;
          v83[1] = v57;
          uint64_t v58 = type metadata accessor for GenericDataVisualization();
          uint64_t v59 = *(int *)(v58 + 20);
          uint64_t v60 = (char *)v83 + v59;
          uint64_t v61 = (char *)v50 + v59;
          uint64_t v51 = v88;
          swift_bridgeObjectRetain();
          v81(v60, v61, v82);
          *(void *)((char *)v83 + *(int *)(v58 + 24)) = *(uint64_t *)((char *)v50 + *(int *)(v58 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *uint64_t v83 = v56;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v83, 0, 1, v51);
      }
      uint64_t v62 = __dsta[9];
      uint64_t v63 = (char *)v54 + v62;
      uint64_t v64 = (char *)v97 + v62;
      sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
      uint64_t v66 = v65;
      uint64_t v67 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65))
      {
        sub_1BFEC8548(0);
        memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v64, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v89 + 56))(v54, 0, 1, __dsta);
    }
    uint64_t v69 = v24[15];
    uint64_t v70 = v24[16];
    uint64_t v71 = *(void **)((char *)v3 + v69);
    *(void *)((char *)v25 + v69) = v71;
    *((unsigned char *)v25 + v70) = *((unsigned char *)v3 + v70);
    uint64_t v72 = v24[18];
    *(void *)((char *)v25 + v24[17]) = *(void *)((char *)v3 + v24[17]);
    uint64_t v73 = (char *)v25 + v72;
    uint64_t v74 = (char *)v3 + v72;
    uint64_t v75 = sub_1C151D6DC();
    uint64_t v76 = *(void *)(v75 - 8);
    id v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    id v78 = v71;
    swift_bridgeObjectRetain();
    if (v77(v74, 1, v75))
    {
      sub_1BFEE3854(0);
      memcpy(v73, v74, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
  }
  return v25;
}

void *_s8ResolvedVwca_2(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v10 = a3[12];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  unint64_t v12 = *(void **)((char *)a2 + v10);
  *(void *)((char *)a1 + v10) = v12;
  id v13 = v12;

  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v14 = a3[14];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_1BFECF0C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    *uint64_t v15 = *v16;
    v15[1] = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v149 = (int *)v17;
    uint64_t v37 = *(int *)(v17 + 20);
    uint64_t v151 = v15;
    uint64_t v38 = (void *)((char *)v15 + v37);
    uint64_t v147 = v16;
    uint64_t v39 = (char *)v16 + v37;
    *uint64_t v38 = *(void *)((char *)v16 + v37);
    v38[1] = *(void *)((char *)v16 + v37 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v40 = type metadata accessor for FormatWebEmbed();
    uint64_t v41 = *(int *)(v40 + 20);
    __dstb = (char *)v38 + v41;
    uint64_t v42 = &v39[v41];
    uint64_t v43 = sub_1C1515FDC();
    uint64_t v44 = *(void *)(v43 - 8);
    unint64_t v125 = *(void (**)(char *, char *, uint64_t))(v44 + 24);
    v125(__dstb, v42, v43);
    objc_super v138 = v39;
    __dsta = (int *)v40;
    uint64_t v45 = *(int *)(v40 + 24);
    uint64_t v46 = &v39[v45];
    uint64_t v127 = (void (**)(void, const void *, uint64_t))v44;
    uint64_t v47 = *(uint64_t (**)(void))(v44 + 48);
    uint64_t v133 = (char *)v38 + v45;
    LODWORD(v44) = v47();
    uint64_t v130 = v43;
    int v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v46, 1, v43);
    if (v44)
    {
      if (v48)
      {
        sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v50 = *(void *)(*(void *)(v49 - 8) + 64);
        uint64_t v51 = v133;
LABEL_19:
        memcpy(v51, v46, v50);
        goto LABEL_36;
      }
      ((void (**)(char *, const void *, uint64_t))v127)[2](v133, v46, v43);
      ((void (*)(char *, void, uint64_t, uint64_t))v127[7])(v133, 0, 1, v43);
    }
    else
    {
      if (v48)
      {
        ((void (*)(char *, uint64_t))v127[1])(v133, v43);
        sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v50 = *(void *)(*(void *)(v69 - 8) + 64);
        uint64_t v51 = v133;
        goto LABEL_19;
      }
      v125(v133, v46, v43);
    }
LABEL_36:
    *(void *)((char *)v38 + __dsta[7]) = *(void *)&v138[__dsta[7]];
    swift_retain();
    swift_release();
    uint64_t v91 = __dsta[8];
    uint64_t v92 = (void *)((char *)v38 + v91);
    uint64_t v93 = &v138[v91];
    *uint64_t v92 = *(void *)v93;
    v92[1] = *((void *)v93 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v94 = __dsta[9];
    uint64_t v95 = (void *)((char *)v38 + v94);
    uint64_t v96 = &v138[v94];
    *uint64_t v95 = *(void *)v96;
    v95[1] = *((void *)v96 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v38 + __dsta[10]) = *(void *)&v138[__dsta[10]];
    *(void *)((char *)v38 + __dsta[11]) = *(void *)&v138[__dsta[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v38 + __dsta[12]) = *(void *)&v138[__dsta[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)((char *)v151 + v149[6]) = *(void *)((char *)v147 + v149[6]);
    swift_retain();
    swift_release();
    *(void *)((char *)v151 + v149[7]) = *(void *)((char *)v147 + v149[7]);
    swift_retain();
    swift_release();
    uint64_t v97 = v149[8];
    uint64_t v98 = (void *)((char *)v151 + v97);
    uint64_t v99 = (void *)((char *)v147 + v97);
    uint64_t v100 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v101 = *(void *)(v100 - 8);
    uint64_t v102 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v101 + 48);
    int v103 = v102(v98, 1, v100);
    int v104 = v102(v99, 1, v100);
    if (v103)
    {
      if (!v104)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *uint64_t v98 = *v99;
        if (EnumCaseMultiPayload == 1)
        {
          v98[1] = v99[1];
          uint64_t v106 = type metadata accessor for GenericDataVisualization();
          uint64_t v107 = *(int *)(v106 + 20);
          uint64_t v139 = (char *)v98 + v107;
          __dstc = (int *)v106;
          __srca = (char *)v99 + v107;
          uint64_t v108 = (void (*)(char *, const void *, uint64_t))v127[2];
          swift_bridgeObjectRetain();
          v108(v139, __srca, v130);
          *(void *)((char *)v98 + __dstc[6]) = *(void *)((char *)v99 + __dstc[6]);
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v104)
      {
        if (a1 != a2)
        {
          sub_1BFECF0C4((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          int v110 = swift_getEnumCaseMultiPayload();
          *uint64_t v98 = *v99;
          if (v110 == 1)
          {
            v98[1] = v99[1];
            uint64_t v111 = type metadata accessor for GenericDataVisualization();
            uint64_t v112 = *(int *)(v111 + 20);
            unint64_t v140 = (char *)v99 + v112;
            __dstd = (char *)v98 + v112;
            uint64_t v113 = (void (*)(char *, const void *, uint64_t))v127[2];
            swift_bridgeObjectRetain();
            v113(__dstd, v140, v130);
            *(void *)((char *)v98 + *(int *)(v111 + 24)) = *(void *)((char *)v99 + *(int *)(v111 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_49;
      }
      sub_1BFECF0C4((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1BFF95180(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v98, v99, *(void *)(*(void *)(v109 - 8) + 64));
LABEL_49:
    uint64_t v114 = v149[9];
    uint64_t v115 = (char *)v151 + v114;
    uint64_t v116 = (char *)v147 + v114;
    sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    uint64_t v118 = v117;
    uint64_t v119 = *(void *)(v117 - 8);
    uint64_t v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v119 + 48);
    int v121 = v120(v115, 1, v117);
    int v122 = v120(v116, 1, v118);
    if (v121)
    {
      if (!v122)
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v115, v116, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v115, 0, 1, v118);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v122)
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 24))(v115, v116, v118);
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v119 + 8))(v115, v118);
    }
    sub_1BFEC8548(0);
    size_t v34 = *(void *)(*(void *)(v123 - 8) + 64);
    uint64_t v35 = v115;
    uint64_t v36 = v116;
LABEL_8:
    memcpy(v35, v36, v34);
    goto LABEL_26;
  }
  if (v21)
  {
LABEL_7:
    sub_1BFEE6554(0);
    size_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
    uint64_t v35 = (char *)v15;
    uint64_t v36 = (char *)v16;
    goto LABEL_8;
  }
  uint64_t v129 = a3;
  *uint64_t v15 = *v16;
  uint64_t v137 = v18;
  v15[1] = v16[1];
  uint64_t v148 = (int *)v17;
  uint64_t v22 = *(int *)(v17 + 20);
  long long v150 = v15;
  uint64_t v23 = (void *)((char *)v15 + v22);
  long long v146 = v16;
  uint64_t v24 = (char *)v16 + v22;
  void *v23 = *(void *)((char *)v16 + v22);
  v23[1] = *(void *)((char *)v16 + v22 + 8);
  uint64_t v25 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v26 = v25[5];
  id v132 = &v24[v26];
  __src = (char *)v23 + v26;
  uint64_t v27 = sub_1C1515FDC();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(__src, v132, v27);
  uint64_t v30 = v25[6];
  __dst = (char *)v23 + v30;
  uint64_t v31 = &v24[v30];
  uint64_t v124 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v24[v30], 1, v27))
  {
    sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    v29(__dst, v31, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  a3 = v129;
  *(void *)((char *)v23 + v25[7]) = *(void *)&v24[v25[7]];
  uint64_t v52 = v25[8];
  uint64_t v53 = (void *)((char *)v23 + v52);
  uint64_t v54 = &v24[v52];
  *uint64_t v53 = *(void *)v54;
  v53[1] = *((void *)v54 + 1);
  uint64_t v55 = v25[9];
  uint64_t v56 = (void *)((char *)v23 + v55);
  uint64_t v57 = &v24[v55];
  void *v56 = *(void *)v57;
  v56[1] = *((void *)v57 + 1);
  *(void *)((char *)v23 + v25[10]) = *(void *)&v24[v25[10]];
  *(void *)((char *)v23 + v25[11]) = *(void *)&v24[v25[11]];
  *(void *)((char *)v23 + v25[12]) = *(void *)&v24[v25[12]];
  *(void *)((char *)v150 + v148[6]) = *(void *)((char *)v146 + v148[6]);
  *(void *)((char *)v150 + v148[7]) = *(void *)((char *)v146 + v148[7]);
  uint64_t v58 = v148[8];
  uint64_t v128 = (void *)((char *)v150 + v58);
  uint64_t v134 = (void *)((char *)v146 + v58);
  uint64_t v59 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v126 = *(void *)(v59 - 8);
  uint64_t v131 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v126 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v131(v134, 1, v59))
  {
    sub_1BFF95180(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v128, v134, *(void *)(*(void *)(v60 - 8) + 64));
    uint64_t v61 = v150;
    uint64_t v62 = v146;
    uint64_t v63 = v148;
  }
  else
  {
    int v64 = swift_getEnumCaseMultiPayload();
    *uint64_t v128 = *v134;
    if (v64 == 1)
    {
      v128[1] = v134[1];
      uint64_t v65 = type metadata accessor for GenericDataVisualization();
      uint64_t v66 = *(int *)(v65 + 20);
      uint64_t v67 = (char *)v128 + v66;
      uint64_t v68 = (char *)v134 + v66;
      swift_bridgeObjectRetain();
      v29(v67, v68, v124);
      *(void *)((char *)v128 + *(int *)(v65 + 24)) = *(void *)((char *)v134 + *(int *)(v65 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    uint64_t v61 = v150;
    uint64_t v62 = v146;
    uint64_t v63 = v148;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v126 + 56))(v128, 0, 1, v59);
  }
  uint64_t v70 = v63[9];
  uint64_t v71 = (char *)v61 + v70;
  uint64_t v72 = (char *)v62 + v70;
  sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v74 = v73;
  uint64_t v75 = *(void *)(v73 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v72, 1, v73))
  {
    sub_1BFEC8548(0);
    memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v71, v72, v74);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v71, 0, 1, v74);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v137 + 56))(v61, 0, 1, v63);
LABEL_26:
  uint64_t v77 = a3[15];
  id v78 = *(void **)((char *)a1 + v77);
  uint64_t v79 = *(void **)((char *)a2 + v77);
  *(void *)((char *)a1 + v77) = v79;
  id v80 = v79;

  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = a3[18];
  uint64_t v82 = (char *)a1 + v81;
  uint64_t v83 = (char *)a2 + v81;
  uint64_t v84 = sub_1C151D6DC();
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v86 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48);
  int v87 = v86(v82, 1, v84);
  int v88 = v86(v83, 1, v84);
  if (!v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 24))(v82, v83, v84);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v84);
    goto LABEL_31;
  }
  if (v88)
  {
LABEL_31:
    sub_1BFEE3854(0);
    memcpy(v82, v83, *(void *)(*(void *)(v89 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  return a1;
}

_OWORD *_s8ResolvedVwtk_1(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[14];
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v16 = (_OWORD *)((char *)a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    sub_1BFEE6554(0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v54 = v18;
    uint64_t v55 = v15;
    *uint64_t v15 = *v16;
    uint64_t v20 = v17[5];
    int v21 = (_OWORD *)((char *)v15 + v20);
    uint64_t v53 = v16;
    uint64_t v22 = (char *)v16 + v20;
    _OWORD *v21 = *(_OWORD *)((char *)v16 + v20);
    uint64_t v23 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v24 = v23[5];
    uint64_t v56 = &v22[v24];
    uint64_t v58 = (char *)v21 + v24;
    uint64_t v25 = sub_1C1515FDC();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v27(v58, v56, v25);
    uint64_t v28 = v23[6];
    uint64_t v59 = (char *)v21 + v28;
    uint64_t v57 = &v22[v28];
    uint64_t v52 = v27;
    if ((*(unsigned int (**)(void))(v26 + 48))())
    {
      sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v59, v57, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v27(v59, v57, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v59, 0, 1, v25);
    }
    *(void *)((char *)v21 + v23[7]) = *(void *)&v22[v23[7]];
    *(_OWORD *)((char *)v21 + v23[8]) = *(_OWORD *)&v22[v23[8]];
    *(_OWORD *)((char *)v21 + v23[9]) = *(_OWORD *)&v22[v23[9]];
    *(void *)((char *)v21 + v23[10]) = *(void *)&v22[v23[10]];
    *(void *)((char *)v21 + v23[11]) = *(void *)&v22[v23[11]];
    *(void *)((char *)v21 + v23[12]) = *(void *)&v22[v23[12]];
    *(void *)((char *)v55 + v17[6]) = *(void *)((char *)v53 + v17[6]);
    *(void *)((char *)v55 + v17[7]) = *(void *)((char *)v53 + v17[7]);
    uint64_t v30 = v17[8];
    uint64_t v31 = (_OWORD *)((char *)v55 + v30);
    uint64_t v32 = (_OWORD *)((char *)v53 + v30);
    uint64_t v33 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      sub_1BFF95180(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v31 = *v32;
        uint64_t v36 = type metadata accessor for GenericDataVisualization();
        v52((char *)v31 + *(int *)(v36 + 20), (char *)v32 + *(int *)(v36 + 20), v25);
        *(void *)((char *)v31 + *(int *)(v36 + 24)) = *(void *)((char *)v32 + *(int *)(v36 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v31, v32, *(void *)(v34 + 64));
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    uint64_t v37 = v17[9];
    uint64_t v38 = (char *)v55 + v37;
    uint64_t v39 = (char *)v53 + v37;
    sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    uint64_t v41 = v40;
    uint64_t v42 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v40))
    {
      sub_1BFEC8548(0);
      memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v38, v39, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v54 + 56))(v55, 0, 1, v17);
  }
  uint64_t v44 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  uint64_t v45 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_1C151D6DC();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    sub_1BFEE3854(0);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  return a1;
}

void *_s8ResolvedVwta_2(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_unknownObjectRelease();
  uint64_t v11 = a3[12];
  uint64_t v12 = *(void **)((char *)a1 + v11);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);

  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_unknownObjectRelease();
  uint64_t v13 = a3[14];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_1BFECF0C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      goto LABEL_7;
    }
    uint64_t v40 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v40;
    swift_bridgeObjectRelease();
    uint64_t v41 = v16[5];
    objc_super v138 = v14;
    unint64_t v140 = v15;
    uint64_t v42 = (void *)((char *)v14 + v41);
    uint64_t v43 = (char *)v15 + v41;
    uint64_t v44 = *((void *)v43 + 1);
    *uint64_t v42 = *(void *)v43;
    v42[1] = v44;
    swift_bridgeObjectRelease();
    uint64_t v45 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v46 = v45[5];
    uint64_t v131 = &v43[v46];
    __dstd = (char *)v42 + v46;
    uint64_t v47 = sub_1C1515FDC();
    uint64_t v48 = *(void *)(v47 - 8);
    int v122 = *(void (**)(char *, char *, uint64_t))(v48 + 40);
    v122(__dstd, v131, v47);
    __dsta = v43;
    uint64_t v49 = v45[6];
    uint64_t v126 = v42;
    uint64_t v50 = (char *)v42 + v49;
    uint64_t v51 = &v43[v49];
    uint64_t v123 = v48;
    uint64_t v52 = *(uint64_t (**)(void))(v48 + 48);
    uint64_t v129 = v50;
    LODWORD(v48) = v52();
    uint64_t v124 = v47;
    int v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v51, 1, v47);
    if (v48)
    {
      if (v53)
      {
        sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v55 = *(void *)(*(void *)(v54 - 8) + 64);
        uint64_t v56 = v129;
LABEL_19:
        memcpy(v56, v51, v55);
        goto LABEL_36;
      }
      (*(void (**)(void *, char *, uint64_t))(v123 + 32))(v129, v51, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v129, 0, 1, v47);
    }
    else
    {
      if (v53)
      {
        (*(void (**)(void *, uint64_t))(v123 + 8))(v129, v47);
        sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v55 = *(void *)(*(void *)(v65 - 8) + 64);
        uint64_t v56 = v129;
        goto LABEL_19;
      }
      v122((char *)v129, v51, v47);
    }
LABEL_36:
    *(void *)((char *)v126 + v45[7]) = *(void *)&__dsta[v45[7]];
    swift_release();
    uint64_t v86 = v45[8];
    int v87 = (void *)((char *)v126 + v86);
    int v88 = &__dsta[v86];
    uint64_t v90 = *(void *)v88;
    uint64_t v89 = *((void *)v88 + 1);
    *int v87 = v90;
    v87[1] = v89;
    swift_bridgeObjectRelease();
    uint64_t v91 = v45[9];
    uint64_t v92 = (void *)((char *)v126 + v91);
    uint64_t v93 = &__dsta[v91];
    uint64_t v95 = *(void *)v93;
    uint64_t v94 = *((void *)v93 + 1);
    *uint64_t v92 = v95;
    v92[1] = v94;
    swift_bridgeObjectRelease();
    *(void *)((char *)v126 + v45[10]) = *(void *)&__dsta[v45[10]];
    *(void *)((char *)v126 + v45[11]) = *(void *)&__dsta[v45[11]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v126 + v45[12]) = *(void *)&__dsta[v45[12]];
    swift_bridgeObjectRelease();
    *(void *)((char *)v138 + v16[6]) = *(void *)((char *)v140 + v16[6]);
    swift_release();
    *(void *)((char *)v138 + v16[7]) = *(void *)((char *)v140 + v16[7]);
    swift_release();
    uint64_t v96 = v16[8];
    uint64_t v97 = (_OWORD *)((char *)v138 + v96);
    uint64_t v98 = (char *)v140 + v96;
    uint64_t v99 = type metadata accessor for WebEmbedDataVisualization();
    __dstb = *(void **)(v99 - 8);
    uint64_t v100 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstb[6];
    uint64_t v101 = v97;
    uint64_t v102 = (char *)v97;
    int v103 = v98;
    LODWORD(v98) = v100(v102, 1, v99);
    int v104 = v100(v103, 1, v99);
    if (v98)
    {
      if (!v104)
      {
        id v105 = v103;
        uint64_t v106 = v101;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v101 = *(_OWORD *)v105;
          uint64_t v107 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v123 + 32))((char *)v101 + *(int *)(v107 + 20), &v105[*(int *)(v107 + 20)], v124);
          *(void *)((char *)v101 + *(int *)(v107 + 24)) = *(void *)&v105[*(int *)(v107 + 24)];
          swift_storeEnumTagMultiPayload();
          uint64_t v108 = __dstb;
        }
        else
        {
          uint64_t v108 = __dstb;
          memcpy(v106, v105, __dstb[8]);
        }
        ((void (*)(void *, void, uint64_t, uint64_t))v108[7])(v106, 0, 1, v99);
        goto LABEL_49;
      }
    }
    else
    {
      if (!v104)
      {
        if (a1 == a2) {
          goto LABEL_49;
        }
        sub_1BFECF0C4((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v101 = *(_OWORD *)v103;
          uint64_t v111 = type metadata accessor for GenericDataVisualization();
          (*(void (**)(char *, char *, uint64_t))(v123 + 32))((char *)v101 + *(int *)(v111 + 20), &v103[*(int *)(v111 + 20)], v124);
          *(void *)((char *)v101 + *(int *)(v111 + 24)) = *(void *)&v103[*(int *)(v111 + 24)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_49;
        }
        size_t v110 = __dstb[8];
LABEL_43:
        memcpy(v101, v103, v110);
LABEL_49:
        uint64_t v112 = v16[9];
        uint64_t v113 = (char *)v138 + v112;
        uint64_t v114 = (char *)v140 + v112;
        sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
        uint64_t v116 = v115;
        uint64_t v117 = *(void *)(v115 - 8);
        uint64_t v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
        int v119 = v118(v113, 1, v115);
        int v120 = v118(v114, 1, v116);
        if (v119)
        {
          if (!v120)
          {
            (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v113, v114, v116);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v113, 0, 1, v116);
            goto LABEL_26;
          }
        }
        else
        {
          if (!v120)
          {
            (*(void (**)(char *, char *, uint64_t))(v117 + 40))(v113, v114, v116);
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v117 + 8))(v113, v116);
        }
        sub_1BFEC8548(0);
        size_t v37 = *(void *)(*(void *)(v121 - 8) + 64);
        uint64_t v38 = v113;
        uint64_t v39 = v114;
LABEL_8:
        memcpy(v38, v39, v37);
        goto LABEL_26;
      }
      sub_1BFECF0C4((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    }
    sub_1BFF95180(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    size_t v110 = *(void *)(*(void *)(v109 - 8) + 64);
    goto LABEL_43;
  }
  if (v20)
  {
LABEL_7:
    sub_1BFEE6554(0);
    size_t v37 = *(void *)(*(void *)(v36 - 8) + 64);
    uint64_t v38 = (char *)v14;
    uint64_t v39 = (char *)v15;
    goto LABEL_8;
  }
  uint64_t v128 = v16;
  uint64_t v130 = v17;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  uint64_t v21 = v16[5];
  uint64_t v137 = v14;
  uint64_t v139 = v15;
  uint64_t v22 = (char *)v14 + v21;
  uint64_t v23 = (char *)v15 + v21;
  *(_OWORD *)((char *)v14 + v21) = *(_OWORD *)((char *)v15 + v21);
  uint64_t v24 = (int *)type metadata accessor for FormatWebEmbed();
  uint64_t v25 = v24[5];
  __dstc = &v22[v25];
  uint64_t v26 = &v23[v25];
  uint64_t v27 = sub_1C1515FDC();
  uint64_t v28 = *(void *)(v27 - 8);
  __src = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  __src(__dstc, v26, v27);
  uint64_t v29 = v24[6];
  __dst = &v22[v29];
  uint64_t v30 = &v23[v29];
  uint64_t v125 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v23[v29], 1, v27))
  {
    sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v30, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = v137;
    uint64_t v33 = v139;
    uint64_t v34 = __src;
    uint64_t v35 = v128;
  }
  else
  {
    __src(__dst, v30, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    uint64_t v32 = v137;
    uint64_t v33 = v139;
    uint64_t v35 = v128;
    uint64_t v34 = __src;
  }
  *(void *)&v22[v24[7]] = *(void *)&v23[v24[7]];
  *(_OWORD *)&v22[v24[8]] = *(_OWORD *)&v23[v24[8]];
  *(_OWORD *)&v22[v24[9]] = *(_OWORD *)&v23[v24[9]];
  *(void *)&v22[v24[10]] = *(void *)&v23[v24[10]];
  *(void *)&v22[v24[11]] = *(void *)&v23[v24[11]];
  *(void *)&v22[v24[12]] = *(void *)&v23[v24[12]];
  *(void *)((char *)v32 + v35[6]) = *(void *)((char *)v33 + v35[6]);
  *(void *)((char *)v32 + v35[7]) = *(void *)((char *)v33 + v35[7]);
  uint64_t v57 = v35[8];
  uint64_t v58 = (_OWORD *)((char *)v32 + v57);
  uint64_t v59 = (_OWORD *)((char *)v33 + v57);
  uint64_t v60 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
  {
    sub_1BFF95180(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    uint64_t v63 = v137;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v58 = *v59;
      uint64_t v64 = type metadata accessor for GenericDataVisualization();
      v34((char *)v58 + *(int *)(v64 + 20), (char *)v59 + *(int *)(v64 + 20), v125);
      *(void *)((char *)v58 + *(int *)(v64 + 24)) = *(void *)((char *)v59 + *(int *)(v64 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v58, v59, *(void *)(v61 + 64));
    }
    uint64_t v63 = v137;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
  }
  uint64_t v66 = v35[9];
  uint64_t v67 = (char *)v63 + v66;
  uint64_t v68 = (char *)v139 + v66;
  sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v70 = v69;
  uint64_t v71 = *(void *)(v69 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v68, 1, v69))
  {
    sub_1BFEC8548(0);
    memcpy(v67, v68, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v67, v68, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v67, 0, 1, v70);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v130 + 56))(v63, 0, 1, v35);
LABEL_26:
  uint64_t v73 = a3[15];
  uint64_t v74 = *(void **)((char *)a1 + v73);
  *(void *)((char *)a1 + v73) = *(void *)((char *)a2 + v73);

  uint64_t v75 = a3[17];
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *(void *)((char *)a1 + v75) = *(void *)((char *)a2 + v75);
  swift_bridgeObjectRelease();
  uint64_t v76 = a3[18];
  uint64_t v77 = (char *)a1 + v76;
  id v78 = (char *)a2 + v76;
  uint64_t v79 = sub_1C151D6DC();
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  int v82 = v81(v77, 1, v79);
  int v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 40))(v77, v78, v79);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
    goto LABEL_31;
  }
  if (v83)
  {
LABEL_31:
    sub_1BFEE3854(0);
    memcpy(v77, v78, *(void *)(*(void *)(v84 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  return a1;
}

uint64_t sub_1C0BF8E44(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1C151631C();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_1BFEE6554(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[14];
    goto LABEL_9;
  }
  sub_1BFEE3854(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[18];
  return v15(v17, a2, v16);
}

uint64_t sub_1C0BF8FBC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1C151631C();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_1BFEE6554(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[14];
    goto LABEL_7;
  }
  sub_1BFEE3854(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[18];
  return v15(v17, a2, a2, v16);
}

unsigned char *_s8ResolvedV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BF9200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa()
{
  return &_s8ResolvedV10CodingKeysON;
}

unint64_t sub_1C0BF923C()
{
  unint64_t result = qword_1EA1A48B0;
  if (!qword_1EA1A48B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48B0);
  }
  return result;
}

uint64_t sub_1C0BF9290()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xF) {
    return 15;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0BF92E0()
{
  return 8;
}

void *sub_1C0BF92EC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0BF92FC()
{
  return 8;
}

uint64_t sub_1C0BF9308(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0BF9370()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t LayeredMediaViewProvider.view(for:filters:)(uint64_t a1, uint64_t a2)
{
  sub_1BFC6CA08(0, &qword_1EB895E78);
  sub_1C151932C();
  swift_retain();
  unsigned int v4 = (void *)sub_1C1518E7C();
  sub_1BFC6CA08(0, &qword_1EB85DF48);
  sub_1C1518FFC();
  swift_release();
  swift_release();

  uint64_t v5 = (void *)sub_1C151806C();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  type metadata accessor for LayeredMediaView(0);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C1518FFC();
  swift_release();

  swift_release();
  return v7;
}

uint64_t sub_1C0BF94E4()
{
  return LayeredMediaLayerProvider.layers()();
}

uint64_t sub_1C0BF9510()
{
  return LayeredMediaLayerProvider.layers()();
}

uint64_t sub_1C0BF9538@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_retain();
  uint64_t v4 = sub_1C0198FB4(v3);
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

char *sub_1C0BF959C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char **a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a2[5];
  uint64_t v8 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v11 = v10;
  type metadata accessor for LayeredMediaViewModel();
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v9;
  v12[3] = v11;
  void v12[4] = v6;
  v12[5] = a3;
  id v13 = objc_allocWithZone((Class)type metadata accessor for LayeredMediaView(0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C1248B48((uint64_t)v12);
  *a4 = result;
  return result;
}

uint64_t sub_1C0BF9668()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t LayeredMediaViewProvider.deinit()
{
  swift_release();
  return v0;
}

uint64_t LayeredMediaViewProvider.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for LayeredMediaViewProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaViewProvider);
}

unint64_t sub_1C0BF9908()
{
  unint64_t result = qword_1EB891588;
  if (!qword_1EB891588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891588);
  }
  return result;
}

uint64_t sub_1C0BF995C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0BF99C4()
{
  FormatSystemColor.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BF9A28()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0BF9A8C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatSystemColor.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C0BF9AB4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0BF9AE4();
  unint64_t result = sub_1BFD51CD4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0BF9AE4()
{
  unint64_t result = qword_1EA1A48B8;
  if (!qword_1EA1A48B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48B8);
  }
  return result;
}

uint64_t sub_1C0BF9B38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148CBF4(*a1, *a2);
}

unint64_t sub_1C0BF9B44(uint64_t a1)
{
  unint64_t result = sub_1C087B428();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BF9B6C(void *a1)
{
  a1[1] = sub_1BFE01228();
  a1[2] = sub_1BFDC753C();
  unint64_t result = sub_1C0BF9908();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSystemColor()
{
  return &type metadata for FormatSystemColor;
}

void sub_1C0BF9BDC(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  if (!*(unsigned char *)(v1 + 8))
  {
    sub_1C1517EFC();
    double v5 = sub_1BFF493E4(v10, v3);
    swift_release();
    if (v2) {
      return;
    }
    float v6 = v5;
    goto LABEL_10;
  }
  if (*(unsigned char *)(v1 + 8) != 1)
  {
    double v7 = sub_1C1018F9C(a1, *(void *)v1);
    if (v2) {
      return;
    }
    float v6 = v7;
LABEL_10:
    id v8 = objc_allocWithZone(NSNumber);
    *(float *)&double v9 = v6;
    objc_msgSend(v8, sel_initWithFloat_, v9);
    return;
  }
  sub_1C1517EFC();
  unint64_t v4 = sub_1BFF45118(v10, v3);
  swift_release();
  if (!v2) {
    objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v4);
  }
}

uint64_t sub_1C0BF9D00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNumber.init(from:)(a1, a2);
}

uint64_t sub_1C0BF9D18(void *a1)
{
  return FormatNumber.encode(to:)(a1);
}

uint64_t _s8NewsFeed12FormatNumberO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = *(void *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8))
    {
      sub_1C01EF338(*(void *)a2, 0);
      sub_1C01EF338(v2, 0);
      sub_1C01EF338(v2, 0);
      sub_1C01EF338(v4, 0);
      int v6 = sub_1C00DE998(v2, v4);
      sub_1C01EF35C(v2, 0);
      sub_1C01EF35C(v4, 0);
      sub_1C01EF35C(v4, 0);
      uint64_t v7 = v2;
      unsigned __int8 v8 = 0;
      goto LABEL_16;
    }
    goto LABEL_6;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      sub_1C01EF338(*(void *)a2, 1u);
      sub_1C01EF338(v2, 1u);
      sub_1C01EF338(v2, 1u);
      sub_1C01EF338(v4, 1u);
      LOBYTE(v6) = sub_1C00E0258(v2, v4);
      sub_1C01EF35C(v2, 1u);
      sub_1C01EF35C(v4, 1u);
      sub_1C01EF35C(v4, 1u);
      uint64_t v7 = v2;
      unsigned __int8 v8 = 1;
LABEL_16:
      sub_1C01EF35C(v7, v8);
      return v6 & 1;
    }
LABEL_6:
    swift_bridgeObjectRetain();
LABEL_13:
    sub_1C01EF338(v4, v5);
    sub_1C01EF35C(v2, v3);
    sub_1C01EF35C(v4, v5);
    return 0;
  }
  if (v5 != 2) {
    goto LABEL_13;
  }
  sub_1C01EF35C(*(void *)a1, 2u);
  sub_1C01EF35C(v4, 2u);
  unsigned int v9 = ((char)v2 >> 5) & 3;
  if (v9)
  {
    if (v9 == 1)
    {
      if ((v4 & 0x60) != 0x20 || ((v4 ^ v2) & 0x9FLL) != 0) {
        return 0;
      }
    }
    else
    {
      if ((v4 & 0x60) != 0x40) {
        return 0;
      }
      if ((char)v2 < 0)
      {
        if ((v4 & 0x80) == 0 || ((v4 ^ v2) & 0x1F) != 0) {
          return 0;
        }
      }
      else if (v4 & 0x80) != 0 || ((v4 ^ v2))
      {
        return 0;
      }
    }
  }
  else if (v4 & 0x60) != 0 || ((v4 ^ v2))
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1C0BF9F40(uint64_t a1)
{
  unint64_t result = sub_1C0BF9F68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BF9F68()
{
  unint64_t result = qword_1EA1A48C0;
  if (!qword_1EA1A48C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48C0);
  }
  return result;
}

unint64_t sub_1C0BF9FBC(void *a1)
{
  a1[1] = sub_1C086205C();
  a1[2] = sub_1C0907E70();
  unint64_t result = sub_1C0BF9FF4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0BF9FF4()
{
  unint64_t result = qword_1EA1A48C8;
  if (!qword_1EA1A48C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48C8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1C01EF338(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithCopy for FormatNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1C01EF338(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C01EF35C(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatNumber(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C01EF35C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for FormatNumber()
{
  return &type metadata for FormatNumber;
}

uint64_t FormatVideoGravity.rawValue.getter()
{
  unint64_t v1 = 0x7341657A69736572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657A69736572;
  }
}

NewsFeed::FormatVideoGravity_optional __swiftcall FormatVideoGravity.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0BFA1F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148F118(*a1, *a2);
}

uint64_t sub_1C0BFA204()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0BFA2B0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BFA348()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatVideoGravity_optional sub_1C0BFA3F0(Swift::String *a1)
{
  return FormatVideoGravity.init(rawValue:)(*a1);
}

void sub_1C0BFA3FC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xEC00000074636570;
  unint64_t v5 = 0x7341657A69736572;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000010;
    unint64_t v4 = 0x80000001C15FF890;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x657A69736572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0BFA464()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0BFA4C4(void *a1)
{
  return FormatVideoGravity.encode(to:)(a1);
}

uint64_t FormatVideoGravity.description.getter()
{
  unint64_t v1 = 0x7341657A69736572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657A69736572;
  }
}

unint64_t sub_1C0BFA544()
{
  unint64_t result = qword_1EA1A48D0;
  if (!qword_1EA1A48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48D0);
  }
  return result;
}

unint64_t sub_1C0BFA598(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0BFA5C8();
  unint64_t result = sub_1C0BFA61C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0BFA5C8()
{
  unint64_t result = qword_1EA1A48D8;
  if (!qword_1EA1A48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48D8);
  }
  return result;
}

unint64_t sub_1C0BFA61C()
{
  unint64_t result = qword_1EA1A48E0;
  if (!qword_1EA1A48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48E0);
  }
  return result;
}

unint64_t sub_1C0BFA670(uint64_t a1)
{
  unint64_t result = sub_1C0BFA698();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BFA698()
{
  unint64_t result = qword_1EA1A48E8;
  if (!qword_1EA1A48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48E8);
  }
  return result;
}

unint64_t sub_1C0BFA6EC(void *a1)
{
  a1[1] = sub_1C086B78C();
  a1[2] = sub_1C0903730();
  unint64_t result = sub_1C0BFA544();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0BFA724()
{
  unint64_t v1 = 0x7341657A69736572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x657A69736572;
  }
}

unsigned char *storeEnumTagSinglePayload for FormatVideoGravity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0BFA854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoGravity()
{
  return &type metadata for FormatVideoGravity;
}

void sub_1C0BFA88C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatOption();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (void *)((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v13 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0BFBCCC(v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1C0C49248(v7, (uint64_t)v10);
      if (v2) {
        break;
      }
      sub_1C0BFAA10((uint64_t)v10);
      uint64_t v2 = 0;
      sub_1C0387D2C((uint64_t)v10);
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0BFAA10(uint64_t a1)
{
  sub_1C0BFBBB4(0, &qword_1EA197258, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = type metadata accessor for FormatDerivedDataOption();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v1 + 56);
  if (!*(void *)(v14 + 16))
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v17(v8, 1, 1, v9);
LABEL_7:
    sub_1C0BFBC08((uint64_t)v8, &qword_1EA197258, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
    swift_endAccess();
    uint64_t v18 = *(void *)a1;
    uint64_t v19 = *(void *)(a1 + 8);
    sub_1C0BFBCCC(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    v17(v5, 0, 1, v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C02E7FC8((uint64_t)v5, v18, v19);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1BFEF2D8C(v13, v12);
  uint64_t v36 = v13;
  if (v16)
  {
    sub_1C0BFBCCC(*(void *)(v14 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v17(v8, 0, 1, v9);
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v17(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    goto LABEL_7;
  }
  uint64_t v21 = (uint64_t)v8;
  uint64_t v22 = v37;
  sub_1C0BFBC64(v21, v37, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
  swift_endAccess();
  if (*(unsigned char *)(v22 + 40) || *(unsigned char *)(a1 + 40)) {
    goto LABEL_14;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  int v39 = *(unsigned __int8 *)(v22 + 16);
  char v38 = v39;
  uint64_t v34 = v23;
  char v40 = v23;
  uint64_t v35 = FormatOptionType.rawValue.getter();
  uint64_t v25 = v24;
  if (v35 == FormatOptionType.rawValue.getter() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v22 = v37;
LABEL_14:
    sub_1C0BFBCCC(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    v17(v5, 0, 1, v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C02E7FC8((uint64_t)v5, v36, v12);
    swift_endAccess();
    return sub_1C0387D2C(v22);
  }
  LODWORD(v35) = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v37;
  if (v35) {
    goto LABEL_14;
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1C00DAB28();
  swift_allocError();
  uint64_t v28 = v27;
  uint64_t v30 = *(void *)v22;
  uint64_t v29 = *(void *)(v22 + 8);
  sub_1BFEFDD10(0, (unint64_t *)&qword_1EB87A750, (uint64_t)&type metadata for FormatOptionType, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(unsigned char *)(inited + 32) = v34;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1C00B857C(inited);
  swift_setDeallocating();
  *(void *)uint64_t v28 = v30;
  *(void *)(v28 + 8) = v29;
  *(unsigned char *)(v28 + 16) = v39;
  *(void *)(v28 + 24) = v32;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return sub_1C0387D2C(v22);
}

uint64_t sub_1C0BFAF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0BFBBB4(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 16);
  uint64_t v11 = *(void *)(v2 + 24);
  if (!*(void *)(v11 + 16))
  {
    uint64_t v18 = type metadata accessor for FormatDerivedDataFile();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v7, 1, 1, v18);
LABEL_7:
    sub_1C0BFBC08((uint64_t)v7, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    type metadata accessor for FormatDerivedDataError();
    sub_1C00DAB28();
    swift_allocError();
    *(void *)uint64_t v19 = v8;
    *(void *)(v19 + 8) = v9;
    *(unsigned char *)(v19 + 16) = v10;
    swift_storeEnumTagMultiPayload();
    sub_1C024FAC0(v8, v9, v10);
    return swift_willThrow();
  }
  sub_1C024FAC0(v8, v9, v10);
  unint64_t v12 = sub_1C1052498(v8, v9, v10);
  if (v13)
  {
    unint64_t v14 = v12;
    uint64_t v22 = *(void *)(v11 + 56);
    uint64_t v15 = type metadata accessor for FormatDerivedDataFile();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v23 = a2;
    uint64_t v17 = v16;
    sub_1C0BFBCCC(v22 + *(void *)(v16 + 72) * v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v15);
    a2 = v23;
  }
  else
  {
    uint64_t v15 = type metadata accessor for FormatDerivedDataFile();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  }
  sub_1C024F49C(v8, v9, v10);
  type metadata accessor for FormatDerivedDataFile();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v7, 1, v15) == 1) {
    goto LABEL_7;
  }
  return sub_1C0BFBC64((uint64_t)v7, a2, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
}

uint64_t sub_1C0BFB22C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 48);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_44;
  }
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  *((void *)&v69 + 1) = v7;
  unint64_t v8 = sub_1BFEF2D8C(v7, v6);
  if ((v9 & 1) == 0)
  {
LABEL_43:
    swift_bridgeObjectRelease();
LABEL_44:
    swift_endAccess();
    goto LABEL_45;
  }
  uint64_t v10 = *(void *)(*(void *)(v5 + 56) + 8 * v8);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)(v10 + 16);
  if (v66)
  {
    *(void *)&long long v69 = v6;
    uint64_t v62 = a2;
    uint64_t v63 = a1;
    unint64_t v11 = 0;
    uint64_t v64 = v10;
    uint64_t v65 = v10 + 32;
    while (1)
    {
      unint64_t v72 = v11;
      unint64_t v12 = (long long *)(v65 + (v11 << 7));
      long long v14 = v12[2];
      long long v13 = v12[3];
      long long v15 = v12[1];
      long long v74 = *v12;
      long long v75 = v15;
      long long v76 = v14;
      long long v77 = v13;
      long long v16 = v12[4];
      long long v17 = v12[5];
      long long v18 = v12[7];
      long long v80 = v12[6];
      long long v81 = v18;
      long long v78 = v16;
      long long v79 = v17;
      uint64_t v19 = *((void *)&v15 + 1);
      uint64_t v70 = v15;
      long long v20 = v76;
      uint64_t v21 = v77;
      a2 = WORD6(v77);
      uint64_t v22 = DWORD2(v77);
      uint64_t v67 = *((void *)&v16 + 1);
      uint64_t v23 = v16;
      if (__PAIR128__(v74, *((unint64_t *)&v74 + 1)) == v69
        || (uint64_t v24 = v77,
            uint64_t v25 = v16,
            uint64_t v26 = *((void *)&v75 + 1),
            char v27 = sub_1C1520A9C(),
            uint64_t v19 = v26,
            uint64_t v21 = v24,
            uint64_t v23 = v25,
            (v27 & 1) != 0))
      {
        unint64_t v28 = v22 | (a2 << 32);
        uint64_t v30 = v63[2];
        uint64_t v29 = v63[3];
        uint64_t v31 = v63[4];
        uint64_t v32 = v63[5];
        uint64_t v33 = v63[6];
        unint64_t v34 = *((unsigned int *)v63 + 14) | ((unint64_t)*((unsigned __int16 *)v63 + 30) << 32);
        uint64_t v36 = v63[8];
        uint64_t v35 = v63[9];
        if (((v28 >> 41) & 0x7F) == 0x7F)
        {
          if (((v34 >> 41) & 0x7F) != 0x7F) {
            goto LABEL_11;
          }
LABEL_13:
          uint64_t v40 = *(void *)(v23 + 16);
          if (v40 != *(void *)(v36 + 16)) {
            goto LABEL_40;
          }
          uint64_t v41 = v35;
          if (!v40 || v23 == v36)
          {
            sub_1C090FEBC((uint64_t)&v74);
          }
          else
          {
            uint64_t v71 = v23;
            unint64_t v42 = *(void *)(v23 + 32);
            uint64_t v43 = v36;
            unint64_t v44 = *(void *)(v36 + 32);
            sub_1C090FEBC((uint64_t)&v74);
            swift_retain();
            swift_retain();
            a2 = sub_1C0387D88(v42, v44);
            swift_release();
            uint64_t result = swift_release();
            if ((a2 & 1) == 0) {
              goto LABEL_39;
            }
            if (v40 != 1)
            {
              if (*(void *)(v71 + 16) < 2uLL)
              {
LABEL_51:
                __break(1u);
                return result;
              }
              unint64_t v46 = *(void *)(v71 + 40);
              uint64_t v47 = v43;
              unint64_t v48 = *(void *)(v43 + 40);
              swift_retain();
              swift_retain();
              a2 = sub_1C0387D88(v46, v48);
              swift_release();
              uint64_t result = swift_release();
              if (a2)
              {
                uint64_t v49 = 0;
                uint64_t v50 = v47 + 48;
                uint64_t v51 = v40 - 2;
                uint64_t v52 = v71;
                while (v51 != v49)
                {
                  if ((unint64_t)(v49 + 2) >= *(void *)(v52 + 16))
                  {
                    __break(1u);
                    goto LABEL_51;
                  }
                  unint64_t v53 = *(void *)(v71 + 48 + 8 * v49);
                  unint64_t v54 = *(void *)(v50 + 8 * v49);
                  swift_retain();
                  swift_retain();
                  a2 = sub_1C0387D88(v53, v54);
                  swift_release();
                  uint64_t result = swift_release();
                  uint64_t v52 = v71;
                  ++v49;
                  if ((a2 & 1) == 0) {
                    goto LABEL_39;
                  }
                }
                goto LABEL_26;
              }
LABEL_39:
              sub_1C090FFA8((uint64_t)&v74);
              goto LABEL_40;
            }
          }
LABEL_26:
          a2 = *(void *)(v67 + 16);
          if (a2 == *(void *)(v41 + 16))
          {
            v73[4] = v78;
            v73[5] = v79;
            v73[6] = v80;
            v73[7] = v81;
            v73[0] = v74;
            v73[1] = v75;
            v73[2] = v76;
            v73[3] = v77;
            nullsub_1();
            if (!a2 || v67 == v41)
            {
LABEL_49:
              swift_bridgeObjectRelease();
              sub_1C0BFBB2C((uint64_t)v73, (uint64_t)v90);
              a2 = v62;
              return sub_1C0BFBB2C((uint64_t)v90, a2);
            }
            size_t v55 = (uint64_t *)(v41 + 56);
            uint64_t v56 = (uint64_t *)(v67 + 56);
            while (1)
            {
              uint64_t v58 = *(v56 - 1);
              uint64_t v57 = *v56;
              uint64_t v60 = *(v55 - 1);
              uint64_t v59 = *v55;
              BOOL v61 = *(v56 - 3) == *(v55 - 3) && *(v56 - 2) == *(v55 - 2);
              if (!v61 && (sub_1C1520A9C() & 1) == 0 || v58 != v60 || v57 != v59) {
                break;
              }
              v55 += 4;
              v56 += 4;
              if (!--a2) {
                goto LABEL_49;
              }
            }
          }
          goto LABEL_39;
        }
        if (((v34 >> 41) & 0x7F) == 0x7F)
        {
LABEL_11:
          a2 = v21;
          uint64_t v68 = v19;
          sub_1C017F510(v70, v19, v20, *((uint64_t *)&v20 + 1), v21, v28);
          sub_1C017F510(v30, v29, v31, v32, v33, v34);
          sub_1C017F59C(v70, v68, v20, *((uint64_t *)&v20 + 1), a2, v28);
          sub_1C017F59C(v30, v29, v31, v32, v33, v34);
          goto LABEL_40;
        }
        v82[0] = v70;
        v82[1] = v19;
        long long v83 = v20;
        uint64_t v84 = v21;
        int v85 = v28;
        __int16 v86 = WORD2(v28);
        v87[0] = v30;
        v87[1] = v29;
        id v87[2] = v31;
        v87[3] = v32;
        v87[4] = v33;
        int v88 = v34;
        __int16 v89 = WORD2(v34);
        a2 = v35;
        uint64_t v37 = v23;
        uint64_t v38 = v36;
        char v39 = sub_1C14C3B50((uint64_t)v82, (uint64_t)v87);
        uint64_t v36 = v38;
        uint64_t v23 = v37;
        uint64_t v35 = a2;
        if (v39) {
          goto LABEL_13;
        }
      }
LABEL_40:
      unint64_t v11 = v72 + 1;
      if (v72 + 1 == v66)
      {
        swift_bridgeObjectRelease();
        a2 = v62;
        goto LABEL_45;
      }
      if (v11 >= *(void *)(v64 + 16))
      {
        __break(1u);
        goto LABEL_43;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_45:
  sub_1C017F2B4(&v74);
  sub_1C0BFBB2C((uint64_t)&v74, (uint64_t)v90);
  return sub_1C0BFBB2C((uint64_t)v90, a2);
}

uint64_t sub_1C0BFB74C(uint64_t a1)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 48);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (v7 && (unint64_t v8 = sub_1BFEF2D8C(v4, v3), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void **)(*(void *)(v6 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1C090FEBC(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_1C0EE4784(0, v10[2] + 1, 1, v10);
  }
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_1C0EE4784((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  v10[2] = v12 + 1;
  long long v13 = &v10[16 * v12];
  long long v14 = *(_OWORD *)a1;
  long long v15 = *(_OWORD *)(a1 + 16);
  long long v16 = *(_OWORD *)(a1 + 48);
  v13[4] = *(_OWORD *)(a1 + 32);
  void v13[5] = v16;
  void v13[2] = v14;
  v13[3] = v15;
  long long v17 = *(_OWORD *)(a1 + 64);
  long long v18 = *(_OWORD *)(a1 + 80);
  long long v19 = *(_OWORD *)(a1 + 112);
  v13[8] = *(_OWORD *)(a1 + 96);
  v13[9] = v19;
  v13[6] = v17;
  v13[7] = v18;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  sub_1C10676B4((uint64_t)v10, v4, v3, isUniquelyReferenced_nonNull_native);
  *uint64_t v5 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1C0BFB8F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v6 = *(void *)(v5 + 24);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1C1052498(v7, v6, 7u);
    if (v9)
    {
      unint64_t v10 = v8;
      uint64_t v11 = *(void *)(v4 + 56);
      uint64_t v12 = type metadata accessor for FormatDerivedDataFile();
      uint64_t v13 = *(void *)(v12 - 8);
      sub_1C0BFBCCC(v11 + *(void *)(v13 + 72) * v10, a1, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
    else
    {
      uint64_t v17 = type metadata accessor for FormatDerivedDataFile();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = type metadata accessor for FormatDerivedDataFile();
    long long v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a1, 1, 1, v14);
  }
}

uint64_t sub_1C0BFBAA8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDerivedDataState()
{
  return self;
}

uint64_t sub_1C0BFBB2C(uint64_t a1, uint64_t a2)
{
  sub_1BFEFDD10(0, (unint64_t *)&qword_1EA1A0FB8, (uint64_t)&type metadata for FormatDerivedDataResultBlock, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0BFBBB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0BFBC08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0BFBBB4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0BFBC64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0BFBCCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

NewsFeed::FeedGroupBindingOptionsVariant __swiftcall FeedGroupBindingOptionsVariant.init(maxNoAccessArticles:minNoAccessArticles:)(Swift::Int_optional maxNoAccessArticles, Swift::Int_optional minNoAccessArticles)
{
  Swift::Bool is_nil = maxNoAccessArticles.is_nil;
  Swift::Int value = 0x7FFFFFFFFFFFFFFFLL;
  if (!maxNoAccessArticles.is_nil) {
    Swift::Int value = maxNoAccessArticles.value;
  }
  if (minNoAccessArticles.is_nil)
  {
    if ((value & 0x8000000000000000) == 0)
    {
      char v5 = 1;
      goto LABEL_9;
    }
LABEL_8:
    minNoAccessArticles.Swift::Int value = 0;
    maxNoAccessArticles.Swift::Int value = 0;
    char v5 = 1;
    Swift::Bool is_nil = 1;
    goto LABEL_9;
  }
  if (value < minNoAccessArticles.value) {
    goto LABEL_8;
  }
  char v5 = 0;
LABEL_9:
  *(void *)uint64_t v2 = maxNoAccessArticles.value;
  *(unsigned char *)(v2 + 8) = is_nil;
  *(void *)(v2 + 16) = minNoAccessArticles.value;
  *(unsigned char *)(v2 + 24) = v5;
  result.minNoAccessArticles = minNoAccessArticles;
  result.maxNoAccessArticles = maxNoAccessArticles;
  return result;
}

void __swiftcall FeedGroupBindingOptions.init(small:large:)(NewsFeed::FeedGroupBindingOptions *__return_ptr retstr, NewsFeed::FeedGroupBindingOptionsVariant small, NewsFeed::FeedGroupBindingOptionsVariant large)
{
  char v3 = *(unsigned char *)(small.maxNoAccessArticles.value + 8);
  Swift::Int v4 = *(void *)(small.maxNoAccessArticles.value + 16);
  char v5 = *(unsigned char *)(small.maxNoAccessArticles.value + 24);
  Swift::Int v6 = **(void **)&small.maxNoAccessArticles.is_nil;
  char v7 = *(unsigned char *)(*(void *)&small.maxNoAccessArticles.is_nil + 8);
  Swift::Int v8 = *(void *)(*(void *)&small.maxNoAccessArticles.is_nil + 16);
  char v9 = *(unsigned char *)(*(void *)&small.maxNoAccessArticles.is_nil + 24);
  retstr->small.maxNoAccessArticles.Swift::Int value = *(void *)small.maxNoAccessArticles.value;
  retstr->small.maxNoAccessArticles.Swift::Bool is_nil = v3;
  retstr->small.minNoAccessArticles.Swift::Int value = v4;
  retstr->small.minNoAccessArticles.Swift::Bool is_nil = v5;
  retstr->large.maxNoAccessArticles.Swift::Int value = v6;
  retstr->large.maxNoAccessArticles.Swift::Bool is_nil = v7;
  retstr->large.minNoAccessArticles.Swift::Int value = v8;
  retstr->large.minNoAccessArticles.Swift::Bool is_nil = v9;
}

uint64_t getEnumTagSinglePayload for FeedEditionConfig.DateWindow(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t getEnumTagSinglePayload for FeedGroupBindingOptionsVariant(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedGroupBindingOptionsVariant(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)NewsFeed::FeedGroupBindingOptionsVariant result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupBindingOptionsVariant()
{
  return &type metadata for FeedGroupBindingOptionsVariant;
}

uint64_t sub_1C0BFBE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v5 = sub_1C1519E9C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  Swift::Int v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LayeredMediaImageVariant();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - v13;
  long long v15 = *(_OWORD *)(a2 + 16);
  v47[0] = *(_OWORD *)a2;
  v47[1] = v15;
  uint64_t v48 = *(void *)(a2 + 32);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v46 = MEMORY[0x1E4FBC860];
  uint64_t v17 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v17)
  {
    unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v19 = *(void *)(v10 + 72);
    uint64_t v37 = a1;
    unint64_t v41 = v18;
    uint64_t v20 = a1 + v18;
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v22 = (uint64_t (**)(char *, uint64_t))(v6 + 88);
    uint64_t v23 = v19;
    int v45 = *MEMORY[0x1E4FABB28];
    int v43 = *MEMORY[0x1E4FABB20];
    uint64_t v36 = v17;
    uint64_t v42 = v9;
    uint64_t v40 = v19;
    while (1)
    {
      sub_1C0BA1CE8(v20, (uint64_t)v14);
      (*v21)(v8, &v14[*(int *)(v9 + 24)], v5);
      int v24 = (*v22)(v8, v5);
      if (v24 == v45) {
        goto LABEL_3;
      }
      if (v24 != v43)
      {
        uint64_t result = sub_1C152040C();
        __break(1u);
        return result;
      }
      sub_1C15180CC();
      if ((sub_1C15180AC() & 1) == 0)
      {
LABEL_3:
        sub_1C0BFC2B0((uint64_t)v14);
      }
      else
      {
        sub_1C03BEA24((uint64_t)v14, v44);
        uint64_t v25 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F6A5C(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v27 = *(void *)(v25 + 16);
        unint64_t v26 = *(void *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1C05F6A5C(v26 > 1, v27 + 1, 1);
          uint64_t v25 = v46;
        }
        *(void *)(v25 + 16) = v27 + 1;
        uint64_t v23 = v40;
        sub_1C03BEA24(v44, v25 + v41 + v27 * v40);
        uint64_t v9 = v42;
      }
      v20 += v23;
      if (!--v17)
      {
        uint64_t v16 = v46;
        uint64_t v17 = v36;
        a1 = v37;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1EB85E5D8 != -1) {
    swift_once();
  }
  unint64_t v28 = (void *)qword_1EB93C270;
  sub_1BFFDEB20();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C1527210;
  uint64_t v30 = *(void *)(v16 + 16);
  uint64_t v31 = MEMORY[0x1E4FBB550];
  uint64_t v32 = MEMORY[0x1E4FBB5C8];
  *(void *)(v29 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v29 + 64) = v32;
  *(void *)(v29 + 32) = v30;
  *(void *)(v29 + 96) = v31;
  *(void *)(v29 + 104) = v32;
  *(void *)(v29 + 72) = v17;
  id v33 = v28;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  if (*(void *)(v16 + 16))
  {
    a1 = v16;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRetain();
  }
  __swift_project_boxed_opaque_existential_1((void *)(v38 + 16), *(void *)(v38 + 40));
  sub_1C111B1A4(a1, (double *)v47, v39);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BFC2B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayeredMediaImageVariant();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding()
{
  return &type metadata for FormatPuzzleTypeBinding;
}

void *sub_1C0BFC31C(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v98 = *(void *)(v2 - 8);
  uint64_t v99 = v2;
  MEMORY[0x1F4188790](v2);
  Swift::Int v4 = (long long *)((char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *a1;
  uint64_t v86 = a1[1];
  uint64_t v87 = v5;
  int v85 = *((unsigned __int8 *)a1 + 16);
  uint64_t v7 = a1[3];
  unint64_t v6 = a1[4];
  uint64_t v8 = a1[6];
  uint64_t v84 = a1[5];
  uint64_t v9 = (void *)a1[7];
  sub_1BFF9E4C4(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = 0;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v107 = MEMORY[0x1E4FBC860];
  uint64_t v92 = v4 + 1;
  long long v97 = xmmword_1C1529AE0;
  long long v91 = xmmword_1C1596550;
  long long v90 = xmmword_1C1596540;
  long long v89 = xmmword_1C1596530;
  uint64_t v95 = v4;
  uint64_t v96 = v7;
  uint64_t v93 = v8;
  uint64_t v94 = v9;
  do
  {
    if (byte_1F1B68788[v10 + 32])
    {
      if (byte_1F1B68788[v10 + 32] == 1)
      {
        sub_1BFF9E4C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
        unint64_t v15 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
        uint64_t v100 = swift_allocObject();
        *(_OWORD *)(v100 + 16) = v97;
        sub_1C151706C();
        sub_1BFF7FF04(v7, v6);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_1C151704C();
        if (qword_1EB896B90 != -1) {
          swift_once();
        }
        sub_1C151703C();
        swift_release();
        unint64_t v16 = v6;
        sub_1BFEEFC20(v7, v6);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        long long v101 = 0u;
        long long v102 = 0u;
        sub_1C0223628((uint64_t)&v101, (uint64_t)&v111);
        if (*((void *)&v112 + 1))
        {
          sub_1C0223798((uint64_t)&v111, (uint64_t)&v108);
          sub_1C02236B0((uint64_t)&v101);
          uint64_t v17 = v99;
          unint64_t v18 = (long long *)((char *)v4 + *(int *)(v99 + 24));
          long long v19 = v109;
          *unint64_t v18 = v108;
          v18[1] = v19;
          uint64_t v20 = v8;
          uint64_t v21 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v22 = *(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
          uint64_t v23 = v21;
          uint64_t v8 = v20;
          uint64_t v7 = v96;
          v22(v18, 0, 1, v23);
          *Swift::Int v4 = v90;
          int v24 = v92;
          *uint64_t v92 = 0;
          v24[1] = 0;
          uint64_t v25 = (char *)v4 + *(int *)(v17 + 28);
          *(void *)uint64_t v25 = 0;
          *((void *)v25 + 1) = 0;
          v25[16] = -1;
          sub_1C02237F4((uint64_t)&v111);
        }
        else
        {
          sub_1C02236B0((uint64_t)&v101);
          uint64_t v46 = v99;
          uint64_t v47 = (char *)v4 + *(int *)(v99 + 24);
          uint64_t v48 = type metadata accessor for FormatInspectionItem.Value(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
          *Swift::Int v4 = v90;
          uint64_t v49 = v92;
          *uint64_t v92 = 0;
          v49[1] = 0;
          uint64_t v50 = (char *)v4 + *(int *)(v46 + 28);
          *(void *)uint64_t v50 = 0;
          *((void *)v50 + 1) = 0;
          v50[16] = -1;
        }
        uint64_t v51 = v100 + v15;
        uint64_t v52 = v100;
        sub_1C09FF9C8((uint64_t)v4, v51);
      }
      else
      {
        sub_1BFF9E4C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
        unint64_t v37 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = v97;
        sub_1C151706C();
        sub_1BFF7FF04(v7, v6);
        uint64_t v39 = v9;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        sub_1C151704C();
        if (qword_1EB896B90 != -1) {
          swift_once();
        }
        uint64_t v40 = v38;
        sub_1C151703C();
        swift_release();
        id v41 = objc_msgSend(v39, sel_nameCompact);
        if (v41)
        {
          uint64_t v42 = v41;
          uint64_t v43 = sub_1C151E62C();
          unint64_t v45 = v44;
        }
        else
        {
          uint64_t v43 = 0;
          unint64_t v45 = 0xE000000000000000;
        }
        uint64_t v7 = v96;
        sub_1BFEEFC20(v96, v6);
        swift_unknownObjectRelease();
        uint64_t v8 = v93;
        swift_bridgeObjectRelease();
        uint64_t v60 = HIBYTE(v45) & 0xF;
        if ((v45 & 0x2000000000000000) == 0) {
          uint64_t v60 = v43 & 0xFFFFFFFFFFFFLL;
        }
        if (v60)
        {
          *(void *)&long long v101 = v43;
          *((void *)&v101 + 1) = v45;
          uint64_t v61 = MEMORY[0x1E4FBB1A0];
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v61 = 0;
          long long v101 = 0uLL;
          *(void *)&long long v102 = 0;
        }
        unint64_t v16 = v6;
        uint64_t v52 = v40;
        unint64_t v66 = v40 + v37;
        *((void *)&v102 + 1) = v61;
        sub_1C0223628((uint64_t)&v101, (uint64_t)&v111);
        if (*((void *)&v112 + 1))
        {
          sub_1C0223798((uint64_t)&v111, (uint64_t)&v108);
          sub_1C02236B0((uint64_t)&v101);
          uint64_t v67 = v99;
          uint64_t v68 = (_OWORD *)(v66 + *(int *)(v99 + 24));
          long long v69 = v109;
          *uint64_t v68 = v108;
          v68[1] = v69;
          uint64_t v70 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v71 = *(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
          uint64_t v72 = v70;
          uint64_t v8 = v93;
          uint64_t v7 = v96;
          v71(v68, 0, 1, v72);
          *(_OWORD *)unint64_t v66 = v89;
          *(void *)(v66 + 16) = 0;
          *(void *)(v66 + 24) = 0;
          unint64_t v73 = v66 + *(int *)(v67 + 28);
          *(void *)unint64_t v73 = 0;
          *(void *)(v73 + 8) = 0;
          *(unsigned char *)(v73 + 16) = -1;
          sub_1C02237F4((uint64_t)&v111);
        }
        else
        {
          sub_1C02236B0((uint64_t)&v101);
          uint64_t v11 = v99;
          unint64_t v12 = v66 + *(int *)(v99 + 24);
          uint64_t v13 = type metadata accessor for FormatInspectionItem.Value(0);
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
          *(_OWORD *)unint64_t v66 = v89;
          *(void *)(v66 + 16) = 0;
          *(void *)(v66 + 24) = 0;
          unint64_t v14 = v66 + *(int *)(v11 + 28);
          *(void *)unint64_t v14 = 0;
          *(void *)(v14 + 8) = 0;
          *(unsigned char *)(v14 + 16) = -1;
        }
        uint64_t v9 = v94;
        Swift::Int v4 = v95;
      }
      unint64_t v6 = v16;
    }
    else
    {
      sub_1BFF9E4C4(0, (unint64_t *)&unk_1EA1974B0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBBE00]);
      unint64_t v26 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      uint64_t v100 = swift_allocObject();
      *(_OWORD *)(v100 + 16) = v97;
      sub_1C151706C();
      sub_1BFF7FF04(v7, v6);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      sub_1C151704C();
      uint64_t v27 = v8;
      if (qword_1EB896B90 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      id v28 = objc_msgSend(v9, sel_name);
      uint64_t v29 = sub_1C151E62C();
      unint64_t v31 = v30;

      unint64_t v32 = v6;
      sub_1BFEEFC20(v7, v6);
      id v33 = v9;
      swift_unknownObjectRelease();
      uint64_t v34 = v27;
      swift_bridgeObjectRelease();
      uint64_t v35 = HIBYTE(v31) & 0xF;
      if ((v31 & 0x2000000000000000) == 0) {
        uint64_t v35 = v29 & 0xFFFFFFFFFFFFLL;
      }
      if (v35)
      {
        *(void *)&long long v101 = v29;
        *((void *)&v101 + 1) = v31;
        uint64_t v36 = MEMORY[0x1E4FBB1A0];
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = 0;
        long long v101 = 0uLL;
        *(void *)&long long v102 = 0;
      }
      unint64_t v53 = v100 + v26;
      *((void *)&v102 + 1) = v36;
      sub_1C0223628((uint64_t)&v101, (uint64_t)&v111);
      unint64_t v54 = v32;
      if (*((void *)&v112 + 1))
      {
        sub_1C0223798((uint64_t)&v111, (uint64_t)&v108);
        sub_1C02236B0((uint64_t)&v101);
        uint64_t v55 = v99;
        uint64_t v56 = (_OWORD *)(v53 + *(int *)(v99 + 24));
        long long v57 = v109;
        _OWORD *v56 = v108;
        v56[1] = v57;
        uint64_t v58 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v7 = v96;
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v56, 0, 1, v58);
        *(_OWORD *)unint64_t v53 = v91;
        *(void *)(v53 + 16) = 0;
        *(void *)(v53 + 24) = 0;
        unint64_t v59 = v53 + *(int *)(v55 + 28);
        *(void *)unint64_t v59 = 0;
        *(void *)(v59 + 8) = 0;
        *(unsigned char *)(v59 + 16) = -1;
        sub_1C02237F4((uint64_t)&v111);
      }
      else
      {
        sub_1C02236B0((uint64_t)&v101);
        uint64_t v62 = v99;
        unint64_t v63 = v53 + *(int *)(v99 + 24);
        uint64_t v64 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 1, 1, v64);
        *(_OWORD *)unint64_t v53 = v91;
        *(void *)(v53 + 16) = 0;
        *(void *)(v53 + 24) = 0;
        unint64_t v65 = v53 + *(int *)(v62 + 28);
        *(void *)unint64_t v65 = 0;
        *(void *)(v65 + 8) = 0;
        *(unsigned char *)(v65 + 16) = -1;
      }
      uint64_t v8 = v34;
      uint64_t v9 = v33;
      Swift::Int v4 = v95;
      unint64_t v6 = v54;
      uint64_t v52 = v100;
    }
    ++v10;
    sub_1C1047634(v52);
  }
  while (v10 != 3);
  unint64_t v74 = v6;
  uint64_t v75 = sub_1C0233D40(v107);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x7954656C7A7A7550, 0xEA00000000006570, 0, 0, v75, &v108);
  swift_bridgeObjectRelease();
  long long v76 = (void *)inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  v76[8] = &off_1F1BDEC90;
  uint64_t v77 = swift_allocObject();
  v76[4] = v77;
  *(void *)(v77 + 48) = v110;
  long long v78 = v109;
  *(_OWORD *)(v77 + 16) = v108;
  *(_OWORD *)(v77 + 32) = v78;
  *(void *)&long long v101 = v87;
  *((void *)&v101 + 1) = v86;
  LOBYTE(v102) = v85;
  *((void *)&v102 + 1) = v7;
  unint64_t v103 = v74;
  uint64_t v104 = v84;
  uint64_t v105 = v8;
  uint64_t v106 = v9;
  sub_1C0D9A9D4(&v101, (uint64_t)&v111);
  v76[12] = &type metadata for FormatInspectionGroup;
  v76[13] = &off_1F1BDEC90;
  uint64_t v79 = swift_allocObject();
  v76[9] = v79;
  *(void *)(v79 + 48) = v113;
  long long v80 = v112;
  *(_OWORD *)(v79 + 16) = v111;
  *(_OWORD *)(v79 + 32) = v80;
  long long v81 = sub_1C131B79C((uint64_t)v76);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v81;
}

void sub_1C0BFCDFC()
{
  if (!qword_1EA1983A8)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1983A8);
    }
  }
}

uint64_t sub_1C0BFCE54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0BFCE9C()
{
  unint64_t result = qword_1EB879168;
  if (!qword_1EB879168)
  {
    type metadata accessor for FormatMicaSectionDecorationItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879168);
  }
  return result;
}

id sub_1C0BFCF0C(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  double v5 = a4.n128_f64[0];
  double v6 = a3.n128_f64[0];
  double v7 = a2.n128_f64[0];
  double v8 = a1.n128_f64[0];
  switch(*v4 >> 61)
  {
    case 1:
      uint64_t v9 = (objc_class *)sub_1C151C0BC();
      goto LABEL_7;
    case 2:
      uint64_t v9 = (objc_class *)sub_1C151C61C();
      goto LABEL_7;
    case 3:
      uint64_t v9 = (objc_class *)sub_1C151C00C();
      goto LABEL_7;
    case 4:
      uint64_t v9 = (objc_class *)type metadata accessor for FormatMicaSectionDecorationView();
      goto LABEL_7;
    case 5:
      return (id)sub_1C0BFCF0C(a1, a2, a3, a4);
    default:
      uint64_t v9 = (objc_class *)sub_1C151BE4C();
LABEL_7:
      id v10 = objc_allocWithZone(v9);
      return objc_msgSend(v10, sel_initWithFrame_, v8, v7, v6, v5);
  }
}

uint64_t FeedHeadlineAudioCommandContext.headline.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFDB5F8C(v1, a1, type metadata accessor for FeedHeadline);
}

NewsFeed::FeedAudioPlaybackState_optional __swiftcall FeedAudioPlaybackState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FeedAudioPlaybackState.rawValue.getter()
{
  uint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E6979616C70;
      break;
    case 2:
      uint64_t result = 0x646573756170;
      break;
    case 3:
      uint64_t result = 0x6574656C706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0BFD150(unsigned __int8 *a1, char *a2)
{
  return sub_1C1494050(*a1, *a2);
}

uint64_t sub_1C0BFD15C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0BFD234()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BFD2F4()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedAudioPlaybackState_optional sub_1C0BFD3C8(Swift::String *a1)
{
  return FeedAudioPlaybackState.init(rawValue:)(*a1);
}

void sub_1C0BFD3D4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6C616974696E69;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x676E6979616C70;
      goto LABEL_3;
    case 2:
      *a1 = 0x646573756170;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6574656C706D6F63;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_1C0BFD46C(uint64_t a1)
{
  unint64_t v2 = sub_1C0C01A68();
  return MEMORY[0x1F4163458](a1, v2);
}

BOOL static AudioPlayMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AudioPlayMethod.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t AudioPlayMethod.hashValue.getter()
{
  return sub_1C1520E0C();
}

BOOL static AudioOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AudioOrigin.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t AudioCommandContext.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t AudioCommandContext.source.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 28));
  return result;
}

uint64_t AudioCommandContext.method.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 32));
  return result;
}

uint64_t AudioCommandContext.origin.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 36));
  return result;
}

uint64_t AudioCommandContext.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFC816B4(v2 + *(int *)(a1 + 40), a2);
}

uint64_t AudioCommandContext.init(data:source:method:origin:metadata:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v9 = *a2;
  char v10 = *a3;
  char v11 = *a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7, a1, a6);
  unint64_t v12 = (int *)type metadata accessor for AudioCommandContext();
  *(unsigned char *)(a7 + v12[7]) = v9;
  *(unsigned char *)(a7 + v12[8]) = v10;
  *(unsigned char *)(a7 + v12[9]) = v11;
  uint64_t v13 = a7 + v12[10];
  return sub_1BFFBE2FC(a5, v13);
}

uint64_t AudioCommandContext.copy<A>(with:)@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 v8 = MEMORY[0x1F4188790](a1);
  char v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, __n128))(v11 + 16))(v10, v8);
  uint64_t v12 = a2[8];
  char v19 = *(unsigned char *)(v4 + a2[7]);
  char v18 = *(unsigned char *)(v4 + v12);
  uint64_t v13 = a2[10];
  char v17 = *(unsigned char *)(v4 + a2[9]);
  sub_1BFC816B4(v4 + v13, (uint64_t)v16);
  return AudioCommandContext.init(data:source:method:origin:metadata:)((uint64_t)v10, &v19, &v18, &v17, (uint64_t)v16, a3, a4);
}

uint64_t static AudioCommandContext<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(*(id *)a1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(*(id *)a2, sel_identifier);
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = 0;
    if ((v13 & 1) == 0) {
      return v14 & 1;
    }
  }
  int v15 = *(unsigned __int8 *)(a1 + 10);
  int v16 = *(unsigned __int8 *)(a2 + 10);
  uint64_t v17 = type metadata accessor for AudioCommandContext();
  uint64_t v18 = *(void *)(v17 - 8);
  char v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16);
  v19(v29, a1, v17);
  v19(v28, a2, v17);
  if (v15 != v16)
  {
    uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v18 + 8);
    v21(v28, v17);
    v21(v29, v17);
    v19(v27, a1, v17);
    v19(v26, a2, v17);
    goto LABEL_12;
  }
  int v20 = v29[8];
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v18 + 8);
  v21(v29, v17);
  int v22 = v28[8];
  v21(v28, v17);
  v19(v27, a1, v17);
  v19(v26, a2, v17);
  if (v20 != v22)
  {
LABEL_12:
    v21(v26, v17);
    v21(v27, v17);
    char v14 = 0;
    return v14 & 1;
  }
  char v23 = v27[9];
  v21(v27, v17);
  char v24 = v26[9];
  v21(v26, v17);
  char v14 = v23 ^ v24 ^ 1;
  return v14 & 1;
}

uint64_t sub_1C0BFDA7C(uint64_t a1, uint64_t a2)
{
  return static AudioCommandContext<A>.== infix(_:_:)(a1, a2);
}

uint64_t static ContextMenuGroup.Audio.playLaterInNews(headline:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1C0BFEB58(a2);
}

uint64_t static ContextMenuItem.Audio.playLaterInNewsItems(headline:context:)(uint64_t a1, uint64_t a2)
{
  sub_1BFEFDFBC(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15320F0;
  *(void *)(v3 + 32) = sub_1C0BFE6B8(a2);
  *(void *)(v3 + 40) = sub_1C0BFE908(a2);
  sub_1C151EBEC();
  return v3;
}

uint64_t static ContextMenuItem.Audio.playLaterInNewsNext(headline:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1C0BFE6B8(a2);
}

uint64_t static ContextMenuItem.Audio.playLaterInNewsLast(headline:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1C0BFE908(a2);
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB85F530 != -1) {
    swift_once();
  }
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v12 = a1;
  __int16 v13 = 0;
  char v14 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A80 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2D8;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB85F510 != -1) {
    swift_once();
  }
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v12 = a1;
  __int16 v13 = 0;
  char v14 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A88 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2E0;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV6remove8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB85F4F0 != -1) {
    swift_once();
  }
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v12 = a1;
  __int16 v13 = 0;
  char v14 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194AA0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2F8;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3D8], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH7History8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8644B0 != -1) {
    swift_once();
  }
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v12 = a1;
  __int16 v13 = 0;
  char v14 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194AA0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2F8;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3D8], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH8Playlist8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB8644C8 != -1) {
    swift_once();
  }
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v12 = a1;
  __int16 v13 = 0;
  char v14 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194AA0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2F8;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3D8], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

uint64_t sub_1C0BFE6B8(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EB861C38 != -1) {
    swift_once();
  }
  sub_1BFDB5F8C(a1, (uint64_t)v12, (uint64_t (*)(void))sub_1C0025BE4);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A90 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2E8;
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

uint64_t sub_1C0BFE908(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EB86BCC0 != -1) {
    swift_once();
  }
  sub_1BFDB5F8C(a1, (uint64_t)v12, (uint64_t (*)(void))sub_1C0025BE4);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  swift_retain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A98 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EA1AA2F0;
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

uint64_t sub_1C0BFEB58(uint64_t a1)
{
  uint64_t v2 = sub_1C151AB3C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1BFEFDFBC(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C15320F0;
  *(void *)(inited + 32) = sub_1C0BFE6B8(a1);
  *(void *)(inited + 40) = sub_1C0BFE908(a1);
  unint64_t v11 = inited;
  sub_1C151EBEC();
  sub_1C02352E4(v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC1C0], v2);
  sub_1C151AB2C();
  swift_allocObject();
  return sub_1C151AB0C();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    if (qword_1EB87CA30 == -1) {
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  if (qword_1EB87C988 != -1) {
LABEL_8:
  }
    swift_once();
LABEL_5:
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v14 = a1;
  __int16 v15 = 0;
  char v16 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB86FD38 != -1) {
    swift_once();
  }
  unint64_t v11 = (void *)qword_1EB86FD28;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3E0], v4);
  sub_1C151A81C();
  swift_allocObject();
  id v12 = v11;
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV07previewH08headlineACSgSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87C988 != -1) {
    swift_once();
  }
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v12 = a1;
  __int16 v13 = 0;
  char v14 = 0;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB86FD38 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1EB86FD28;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  sub_1C151A81C();
  swift_allocObject();
  id v10 = v9;
  return sub_1C151A7FC();
}

unint64_t sub_1C0BFF27C()
{
  unint64_t result = qword_1EA1A48F8;
  if (!qword_1EA1A48F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A48F8);
  }
  return result;
}

unint64_t sub_1C0BFF2D4()
{
  unint64_t result = qword_1EA1A4900;
  if (!qword_1EA1A4900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4900);
  }
  return result;
}

unint64_t sub_1C0BFF32C()
{
  unint64_t result = qword_1EA1A4908;
  if (!qword_1EA1A4908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4908);
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.FeedAudio()
{
  return &type metadata for Commands.FeedAudio;
}

ValueMetadata *type metadata accessor for Commands.Audio()
{
  return &type metadata for Commands.Audio;
}

uint64_t initializeBufferWithCopyOfBuffer for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    unint64_t v44 = (int *)v4;
    uint64_t v45 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v45;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v6 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v7 = *(int *)(v4 + 40);
    id v8 = (unsigned char *)(a1 + v7);
    uint64_t v9 = (uint64_t)a2 + v7;
    *id v8 = *((unsigned char *)a2 + v7);
    v8[1] = *((unsigned char *)a2 + v7 + 1);
    uint64_t v10 = type metadata accessor for FeedHeadline.State(0);
    uint64_t v11 = *(int *)(v10 + 24);
    __dst = &v8[v11];
    uint64_t v43 = (int *)v10;
    uint64_t v12 = (char *)(v9 + v11);
    __int16 v13 = (int *)type metadata accessor for SharedItem();
    uint64_t v41 = *((void *)v13 - 1);
    char v14 = *(unsigned int (**)(char *, uint64_t, int *))(v41 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v14(v12, 1, v13))
    {
      uint64_t v15 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v12, v17);
      __dst[v13[5]] = v12[v13[5]];
      uint64_t v18 = v13[6];
      char v19 = *(void **)&v12[v18];
      *(void *)&__dst[v18] = v19;
      uint64_t v20 = v13[7];
      uint64_t v46 = &__dst[v20];
      uint64_t v40 = &v12[v20];
      uint64_t v21 = sub_1C1515FDC();
      int v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      id v23 = v19;
      v22(v46, v40, v21);
      (*(void (**)(char *, void, uint64_t, int *))(v41 + 56))(__dst, 0, 1, v13);
    }
    v8[v43[7]] = *(unsigned char *)(v9 + v43[7]);
    v8[v43[8]] = *(unsigned char *)(v9 + v43[8]);
    v8[v43[9]] = *(unsigned char *)(v9 + v43[9]);
    v8[v43[10]] = *(unsigned char *)(v9 + v43[10]);
    uint64_t v24 = v44[11];
    uint64_t v25 = (void *)(a1 + v24);
    unint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1C151D2DC();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1BFEEF3DC(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v30 = v44[12];
    unint64_t v31 = (void *)(a1 + v30);
    unint64_t v32 = (uint64_t *)((char *)a2 + v30);
    unint64_t v33 = v32[1];
    if (v33 >= 0x11)
    {
      *unint64_t v31 = *v32;
      v31[1] = v33;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
    }
    uint64_t v34 = v44[13];
    unint64_t v35 = *(uint64_t *)((char *)a2 + v34);
    if (v35 >= 2)
    {
      if (v35 == 2)
      {
        *(void *)(a1 + v34) = 2;
      }
      else
      {
        *(void *)(a1 + v34) = v35;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(void *)(a1 + v34) = v35;
    }
    uint64_t v36 = v44[14];
    unint64_t v37 = *(void **)((char *)a2 + v36);
    *(void *)(a1 + v36) = v37;
    id v38 = v37;
  }
  return a1;
}

void destroy for FeedHeadlineAudioCommandContext(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v3 = a1 + v2[10];
  uint64_t v4 = v3 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v5 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);

    uint64_t v7 = v4 + *(int *)(v5 + 28);
    uint64_t v8 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + v2[11];
  uint64_t v10 = sub_1C151D2DC();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  if (*(void *)(a1 + v2[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + v2[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }
  uint64_t v12 = *(void **)(a1 + v2[14]);
}

uint64_t initializeWithCopy for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v43 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v6 = v43[10];
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(unsigned char *)(a2 + v6);
  v7[1] = *(unsigned char *)(a2 + v6 + 1);
  uint64_t v9 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v10 = *(int *)(v9 + 24);
  __dst = &v7[v10];
  uint64_t v42 = (int *)v9;
  uint64_t v11 = (char *)(v8 + v10);
  uint64_t v12 = (int *)type metadata accessor for SharedItem();
  uint64_t v39 = *((void *)v12 - 1);
  __int16 v13 = *(unsigned int (**)(char *, uint64_t, int *))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v13(v11, 1, v12))
  {
    uint64_t v14 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(__dst, v11, v15);
    __dst[v12[5]] = v11[v12[5]];
    uint64_t v16 = v12[6];
    uint64_t v17 = *(void **)&v11[v16];
    *(void *)&__dst[v16] = v17;
    uint64_t v18 = v12[7];
    uint64_t v40 = &__dst[v18];
    id v38 = &v11[v18];
    uint64_t v19 = sub_1C1515FDC();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    id v21 = v17;
    v20(v40, v38, v19);
    (*(void (**)(char *, void, uint64_t, int *))(v39 + 56))(__dst, 0, 1, v12);
  }
  v7[v42[7]] = *(unsigned char *)(v8 + v42[7]);
  v7[v42[8]] = *(unsigned char *)(v8 + v42[8]);
  v7[v42[9]] = *(unsigned char *)(v8 + v42[9]);
  v7[v42[10]] = *(unsigned char *)(v8 + v42[10]);
  uint64_t v22 = v43[11];
  id v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = sub_1C151D2DC();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1BFEEF3DC(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v28 = v43[12];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  unint64_t v31 = v30[1];
  if (v31 >= 0x11)
  {
    *uint64_t v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  uint64_t v32 = v43[13];
  unint64_t v33 = *(void *)(a2 + v32);
  if (v33 >= 2)
  {
    if (v33 == 2)
    {
      *(void *)(a1 + v32) = 2;
    }
    else
    {
      *(void *)(a1 + v32) = v33;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(void *)(a1 + v32) = v33;
  }
  uint64_t v34 = v43[14];
  unint64_t v35 = *(void **)(a2 + v34);
  *(void *)(a1 + v34) = v35;
  id v36 = v35;
  return a1;
}

uint64_t assignWithCopy for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v60 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v61 = a2;
  uint64_t v5 = v60[10];
  uint64_t v6 = (unsigned char *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  *uint64_t v6 = *(unsigned char *)(a2 + v5);
  v6[1] = *(unsigned char *)(a2 + v5 + 1);
  uint64_t v8 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = (unsigned char *)(v7 + v9);
  uint64_t v12 = (int *)type metadata accessor for SharedItem();
  uint64_t v59 = *((void *)v12 - 1);
  __int16 v13 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v59 + 48);
  int v14 = v13(v10, 1, v12);
  int v15 = v13(v11, 1, v12);
  if (v14)
  {
    if (!v15)
    {
      uint64_t v16 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v11, v16);
      v10[v12[5]] = v11[v12[5]];
      uint64_t v17 = v12[6];
      uint64_t v18 = *(void **)&v11[v17];
      *(void *)&v10[v17] = v18;
      uint64_t v19 = v12[7];
      long long v57 = &v11[v19];
      uint64_t v58 = &v10[v19];
      uint64_t v20 = sub_1C1515FDC();
      id v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      id v22 = v18;
      v21(v58, v57, v20);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v59 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_1C0C00398((uint64_t)v10);
LABEL_6:
    uint64_t v23 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v10, v11, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v43 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 24))(v10, v11, v43);
  v10[v12[5]] = v11[v12[5]];
  uint64_t v44 = v12[6];
  uint64_t v45 = *(void **)&v11[v44];
  uint64_t v46 = *(void **)&v10[v44];
  *(void *)&v10[v44] = v45;
  id v47 = v45;

  uint64_t v48 = v12[7];
  uint64_t v49 = &v10[v48];
  uint64_t v50 = &v11[v48];
  uint64_t v51 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
LABEL_7:
  v6[v8[7]] = *(unsigned char *)(v7 + v8[7]);
  v6[v8[8]] = *(unsigned char *)(v7 + v8[8]);
  v6[v8[9]] = *(unsigned char *)(v7 + v8[9]);
  v6[v8[10]] = *(unsigned char *)(v7 + v8[10]);
  uint64_t v24 = v60[11];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(v61 + v24);
  uint64_t v27 = sub_1C151D2DC();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_12:
    sub_1BFEEF3DC(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v25, v26, v27);
LABEL_13:
  uint64_t v33 = v60[12];
  uint64_t v34 = (void *)(a1 + v33);
  unint64_t v35 = (void *)(v61 + v33);
  unint64_t v36 = *(void *)(a1 + v33 + 8);
  unint64_t v37 = *(void *)(v61 + v33 + 8);
  if (v36 < 0x11)
  {
    if (v37 >= 0x11)
    {
      *uint64_t v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v37 < 0x11)
  {
    sub_1C01A7564((uint64_t)v34);
LABEL_18:
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    goto LABEL_20;
  }
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v38 = v60[13];
  uint64_t v39 = (void *)(a1 + v38);
  unint64_t v40 = *(void *)(a1 + v38);
  unint64_t v41 = *(void *)(v61 + v38);
  if (v40 == 2)
  {
    if (v41 >= 2)
    {
      if (v41 == 2)
      {
        uint64_t v42 = 2;
LABEL_35:
        *uint64_t v39 = v42;
        goto LABEL_36;
      }
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v41 == 2)
  {
    sub_1C01A75B8(a1 + v38);
LABEL_34:
    uint64_t v42 = *(void *)(v61 + v38);
    goto LABEL_35;
  }
  if (v40 >= 2)
  {
    if (v41 >= 2)
    {
      *uint64_t v39 = v41;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_36;
    }
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  if (v41 >= 2)
  {
LABEL_29:
    *uint64_t v39 = v41;
    swift_unknownObjectRetain();
    goto LABEL_36;
  }
LABEL_28:
  *uint64_t v39 = v41;
LABEL_36:
  uint64_t v52 = v60[14];
  unint64_t v53 = *(void **)(a1 + v52);
  unint64_t v54 = *(void **)(v61 + v52);
  *(void *)(a1 + v52) = v54;
  id v55 = v54;

  return a1;
}

uint64_t sub_1C0C00398(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v5 = v4[10];
  uint64_t v6 = (unsigned char *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  *uint64_t v6 = *(unsigned char *)(a2 + v5);
  v6[1] = *(unsigned char *)(a2 + v5 + 1);
  uint64_t v8 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = (char *)(v7 + v9);
  uint64_t v12 = (int *)type metadata accessor for SharedItem();
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
    v10[v12[5]] = v11[v12[5]];
    *(void *)&v10[v12[6]] = *(void *)&v11[v12[6]];
    uint64_t v16 = v12[7];
    uint64_t v28 = &v10[v16];
    uint64_t v17 = &v11[v16];
    uint64_t v18 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v28, v17, v18);
    (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  }
  v6[v8[7]] = *(unsigned char *)(v7 + v8[7]);
  v6[v8[8]] = *(unsigned char *)(v7 + v8[8]);
  v6[v8[9]] = *(unsigned char *)(v7 + v8[9]);
  v6[v8[10]] = *(unsigned char *)(v7 + v8[10]);
  uint64_t v19 = v4[11];
  uint64_t v20 = (void *)(a1 + v19);
  id v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_1C151D2DC();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1BFEEF3DC(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(_OWORD *)(a1 + v4[12]) = *(_OWORD *)(a2 + v4[12]);
  uint64_t v25 = v4[13];
  uint64_t v26 = *(void *)(a2 + v25);
  if (v26 == 2) {
    uint64_t v26 = 2;
  }
  *(void *)(a1 + v25) = v26;
  *(void *)(a1 + v4[14]) = *(void *)(a2 + v4[14]);
  return a1;
}

uint64_t assignWithTake for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v51 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v6 = v51[10];
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(unsigned char *)(a2 + v6);
  v7[1] = *(unsigned char *)(a2 + v6 + 1);
  uint64_t v50 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v9 = v50[6];
  uint64_t v10 = &v7[v9];
  uint64_t v11 = (unsigned char *)(v8 + v9);
  uint64_t v12 = (int *)type metadata accessor for SharedItem();
  uint64_t v49 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v49 + 48);
  int v14 = v13(v10, 1, v12);
  int v15 = v13(v11, 1, v12);
  if (v14)
  {
    if (!v15)
    {
      uint64_t v16 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
      v10[v12[5]] = v11[v12[5]];
      *(void *)&v10[v12[6]] = *(void *)&v11[v12[6]];
      uint64_t v17 = v12[7];
      uint64_t v18 = &v10[v17];
      uint64_t v19 = &v11[v17];
      uint64_t v20 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v49 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_1C0C00398((uint64_t)v10);
LABEL_6:
    uint64_t v21 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v39 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 40))(v10, v11, v39);
  v10[v12[5]] = v11[v12[5]];
  uint64_t v40 = v12[6];
  unint64_t v41 = *(void **)&v10[v40];
  *(void *)&v10[v40] = *(void *)&v11[v40];

  uint64_t v42 = v12[7];
  uint64_t v43 = &v10[v42];
  uint64_t v44 = &v11[v42];
  uint64_t v45 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
LABEL_7:
  v7[v50[7]] = *(unsigned char *)(v8 + v50[7]);
  v7[v50[8]] = *(unsigned char *)(v8 + v50[8]);
  v7[v50[9]] = *(unsigned char *)(v8 + v50[9]);
  v7[v50[10]] = *(unsigned char *)(v8 + v50[10]);
  uint64_t v22 = v51[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_1C151D2DC();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
LABEL_12:
    sub_1BFEEF3DC(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_13:
  uint64_t v31 = v51[12];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  if (*(void *)(a1 + v31 + 8) < 0x11uLL)
  {
LABEL_16:
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    goto LABEL_18;
  }
  unint64_t v34 = *(void *)(v33 + 8);
  if (v34 < 0x11)
  {
    sub_1C01A7564(v32);
    goto LABEL_16;
  }
  *(void *)uint64_t v32 = *(void *)v33;
  *(void *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v35 = v51[13];
  unint64_t v36 = (unint64_t *)(a1 + v35);
  unint64_t v37 = *(void *)(a1 + v35);
  unint64_t v38 = *(void *)(a2 + v35);
  if (v37 == 2)
  {
    if (v38 == 2) {
      unint64_t v38 = 2;
    }
    goto LABEL_30;
  }
  if (v38 == 2)
  {
    sub_1C01A75B8(a1 + v35);
  }
  else
  {
    if (v37 < 2) {
      goto LABEL_30;
    }
    if (v38 >= 2)
    {
      *unint64_t v36 = v38;
      swift_unknownObjectRelease();
      goto LABEL_31;
    }
    swift_unknownObjectRelease();
  }
  unint64_t v38 = *(void *)(a2 + v35);
LABEL_30:
  *unint64_t v36 = v38;
LABEL_31:
  uint64_t v46 = v51[14];
  id v47 = *(void **)(a1 + v46);
  *(void *)(a1 + v46) = *(void *)(a2 + v46);

  return a1;
}

uint64_t getEnumTagSinglePayload for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C00CCC);
}

uint64_t sub_1C0C00CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeedHeadlineAudioCommandContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C00D4C);
}

uint64_t sub_1C0C00D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for FeedAudioPlaybackState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C00E88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioListeningSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C00F7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioListeningSource()
{
  return &type metadata for AudioListeningSource;
}

unsigned char *storeEnumTagSinglePayload for AudioPlayMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C01080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioPlayMethod()
{
  return &type metadata for AudioPlayMethod;
}

unsigned char *storeEnumTagSinglePayload for AudioOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C01184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioOrigin()
{
  return &type metadata for AudioOrigin;
}

void *sub_1C0C011BC(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 10) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    uint64_t v10 = (char *)v4 + v6;
    *uint64_t v10 = *((unsigned char *)a2 + v6);
    v10[1] = *((unsigned char *)a2 + v6 + 1);
    v10[2] = *((unsigned char *)a2 + v6 + 2);
    unint64_t v11 = ((unint64_t)v4 + v6 + 10) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v12 = ((unint64_t)a2 + v6 + 10) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = *(void *)(v12 + 24);
    if (v13 < 0xFFFFFFFF)
    {
      long long v14 = *(_OWORD *)(v12 + 16);
      *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
      *(_OWORD *)(v11 + 16) = v14;
    }
    else
    {
      *(void *)(v11 + 24) = v13;
      (**(void (***)(void))(v13 - 8))();
    }
  }
  return v4;
}

unint64_t sub_1C0C0130C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t result = (a1 + *(void *)(v3 + 56) + 10) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t sub_1C0C01394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  int v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *int v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  unint64_t v9 = (unint64_t)(v7 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (unint64_t)(v8 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = *(void *)(v10 + 24);
  if (v11 < 0xFFFFFFFF)
  {
    long long v12 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v12;
  }
  else
  {
    *(void *)(v9 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
  }
  return a1;
}

uint64_t sub_1C0C0146C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  int v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *int v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  unint64_t v9 = (unint64_t)(v7 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (unint64_t)(v8 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = *(void *)(v10 + 24);
  if (*(void *)(v9 + 24) < 0xFFFFFFFFuLL)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      *(void *)(v9 + 24) = v11;
      (**(void (***)(unint64_t, unint64_t))(v11 - 8))(v9, v10);
      return a1;
    }
LABEL_7:
    long long v12 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v12;
    return a1;
  }
  if (v11 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(v9);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)v9, (uint64_t *)v10);
  return a1;
}

uint64_t sub_1C0C01580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  int v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *int v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  unint64_t v9 = (_OWORD *)((unint64_t)(v7 + 10) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_OWORD *)((unint64_t)(v8 + 10) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = v10[1];
  _OWORD *v9 = *v10;
  v9[1] = v11;
  return a1;
}

uint64_t sub_1C0C01618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  int v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = v6 + a2;
  *int v7 = *(unsigned char *)(v6 + a2);
  v7[1] = *(unsigned char *)(v6 + a2 + 1);
  v7[2] = *(unsigned char *)(v6 + a2 + 2);
  unint64_t v9 = (v6 + a1 + 10) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v9 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(v9);
  }
  unint64_t v10 = (_OWORD *)((v8 + 10) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = v10[1];
  *(_OWORD *)unint64_t v9 = *v10;
  *(_OWORD *)(v9 + 16) = v11;
  return a1;
}

uint64_t sub_1C0C016C8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 10) & 0xFFFFFFFFFFFFFFF8) + 32;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C0C0181CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 10) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

double sub_1C0C01830(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 10) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (((v9 + 10) & 0xFFFFFFF8) == 0xFFFFFFE0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 10) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 10) & 0xFFFFFFF8) != 0xFFFFFFE0)
    {
      unsigned int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 10) & 0xFFFFFFFFFFFFFFF8) + 32);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C0C01A20);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 10] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0x7FFFFFFE)
          {
            double result = 0.0;
            *(_OWORD *)unint64_t v19 = 0u;
            *(_OWORD *)(v19 + 16) = 0u;
            *(_DWORD *)unint64_t v19 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *(void *)(v19 + 24) = a2;
          }
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

ValueMetadata *type metadata accessor for ContextMenuGroup.Audio()
{
  return &type metadata for ContextMenuGroup.Audio;
}

ValueMetadata *type metadata accessor for ContextMenuItem.Audio()
{
  return &type metadata for ContextMenuItem.Audio;
}

unint64_t sub_1C0C01A68()
{
  unint64_t result = qword_1EB886278;
  if (!qword_1EB886278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886278);
  }
  return result;
}

void sub_1C0C01ABC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C151A23C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t FormatDataAccessibilityValue.deinit()
{
  swift_release();
  sub_1BFE14324(*(void *)(v0 + 24));
  return v0;
}

uint64_t FormatDataAccessibilityValue.__deallocating_deinit()
{
  swift_release();
  sub_1BFE14324(*(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatDataAccessibilityValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatDataAccessibilityValue);
}

ValueMetadata *type metadata accessor for A12_V10()
{
  return &type metadata for A12_V10;
}

uint64_t sub_1C0C01BD4(void *a1)
{
  sub_1C0C06C94(0, &qword_1EA1A49C8, (uint64_t (*)(void))sub_1C0C06C40, (uint64_t)&type metadata for A12_V10.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v12 - v6;
  long long v12 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  memcpy(v15, v1 + 2, sizeof(v15));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C06C40();
  sub_1C1520F0C();
  v14[0] = v12;
  *(void *)&v14[1] = v8;
  *((void *)&v14[1] + 1) = v9;
  char v16 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0C06688(&qword_1EA197288, type metadata accessor for CGRect);
  uint64_t v10 = v13;
  sub_1C152080C();
  if (!v10)
  {
    memcpy(v14, v15, sizeof(v14));
    char v16 = 1;
    sub_1C007AA58();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0C01E04@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v17 = a2;
  sub_1C0C06C94(0, &qword_1EA1A49B8, (uint64_t (*)(void))sub_1C0C06C40, (uint64_t)&type metadata for A12_V10.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v18 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C06C40();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v8 = v5;
    uint64_t v9 = v17;
    type metadata accessor for CGRect(0);
    char v20 = 0;
    sub_1C0C06688(&qword_1EB87A290, type metadata accessor for CGRect);
    uint64_t v10 = v18;
    sub_1C15206EC();
    uint64_t v11 = v19[0];
    uint64_t v12 = v19[1];
    uint64_t v13 = v19[2];
    uint64_t v14 = v19[3];
    char v20 = 1;
    sub_1C007AA04();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v10);
    memcpy(v9 + 4, v19, 0x130uLL);
    void *v9 = v11;
    v9[1] = v12;
    _OWORD v9[2] = v13;
    _OWORD v9[3] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0C02070(uint64_t a1)
{
  unint64_t v2 = sub_1C0C06C40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C020AC(uint64_t a1)
{
  unint64_t v2 = sub_1C0C06C40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C020E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0C01E04(a1, a2);
}

uint64_t sub_1C0C02100(void *a1)
{
  return sub_1C0C01BD4(a1);
}

uint64_t sub_1C0C02118()
{
  sub_1C0C0672C();
  return sub_1C151798C();
}

uint64_t sub_1C0C02194@<X0>(uint64_t *a1@<X8>)
{
  memset(v5, 0, 32);
  v5[32] = 1;
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0C06B80((uint64_t)v5);
  sub_1C0C06BB8((uint64_t)v5, (uint64_t)v4);
  sub_1C0C06C94(0, &qword_1EA1A4988, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB4F0]);
  swift_allocObject();
  uint64_t result = sub_1C15172BC();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0C0226C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v67 = a2;
  id v47 = a3;
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v56 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151635C();
  uint64_t v48 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v50 = *(void *)(v15 - 8);
  uint64_t v51 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v49 = *v3;
  uint64_t v18 = (void *)*((void *)v3 + 1);
  unsigned __int8 v19 = v3[16];
  *(void *)&long long v63 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v63))
  {
    sub_1C0020AF0();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = 0u;
    *(_OWORD *)(v20 + 16) = 0u;
    *(void *)(v20 + 32) = 0;
    *(unsigned char *)(v20 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v46 = a1;
    uint64_t v43 = v17;
    sub_1BFF1B0DC(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    uint64_t v45 = type metadata accessor for GroupLayoutContext;
    uint64_t v44 = v14;
    sub_1BFF1B0DC(v67, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    unsigned __int8 v22 = v19;
    sub_1BFFFC7A0(v18, v19);
    sub_1C151634C();
    uint64_t v42 = sub_1C151633C();
    uint64_t v41 = v23;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v7);
    unint64_t v65 = &type metadata for A12_V10;
    unint64_t v24 = sub_1C01867D0();
    unint64_t v66 = v24;
    char v25 = v49;
    LOBYTE(v63) = v49;
    *((void *)&v63 + 1) = v18;
    unsigned __int8 v64 = v22;
    type metadata accessor for GroupLayoutKey();
    uint64_t v26 = swift_allocObject();
    sub_1BFFFC7A0(v18, v22);
    uint64_t v61 = sub_1C1520FAC();
    uint64_t v62 = v27;
    uint64_t v59 = 95;
    unint64_t v60 = 0xE100000000000000;
    uint64_t v57 = 45;
    unint64_t v58 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v28 = sub_1C151FEBC();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = v30;
    uint64_t v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v32 = v41;
    *uint64_t v31 = v42;
    v31[1] = v32;
    sub_1BFC66384((uint64_t)&v63, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BFF23A3C((uint64_t)v43, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v33, 0, 1, v51);
    uint64_t v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BFF23A3C((uint64_t)v44, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v34, 0, 1, v53);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
    sub_1BFFFC630(v18, v22);
    unint64_t v65 = &type metadata for A12_V10;
    unint64_t v66 = v24;
    LOBYTE(v63) = v25;
    *((void *)&v63 + 1) = v18;
    unsigned __int8 v64 = v22;
    uint64_t v35 = v54;
    sub_1BFF1B0DC(v67, v54, (uint64_t (*)(void))v45);
    sub_1BFFFC7A0(v18, v22);
    uint64_t v36 = v55;
    uint64_t v37 = v56;
    sub_1BFFB8494(0, 0, 0, 0, 1, 0, 0, 0, v56);
    if (v36)
    {
      sub_1BFF1F344(v35, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
    }
    else
    {
      uint64_t v38 = type metadata accessor for A12_V10.Bound();
      uint64_t v39 = v47;
      _OWORD v47[3] = v38;
      v39[4] = sub_1C0C06688(&qword_1EA1A4920, (void (*)(uint64_t))type metadata accessor for A12_V10.Bound);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v39);
      uint64_t *boxed_opaque_existential_0 = v26;
      sub_1BFC773DC(&v63, (uint64_t)(boxed_opaque_existential_0 + 1));
      sub_1BFF23A3C(v35, (uint64_t)boxed_opaque_existential_0 + *(int *)(v38 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      return sub_1BFF23A3C(v37, (uint64_t)boxed_opaque_existential_0 + *(int *)(v38 + 28), type metadata accessor for FeedHeadline);
    }
  }
}

uint64_t sub_1C0C028B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = (void *)sub_1C1517A9C();
  uint64_t v2 = *(v39 - 1);
  MEMORY[0x1F4188790](v39);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *v1;
  uint64_t v12 = type metadata accessor for A12_V10.Bound();
  sub_1BFF1B0DC((uint64_t)v1 + *(int *)(v12 + 28), (uint64_t)v7, type metadata accessor for FeedHeadline);
  uint64_t v13 = (char *)v1 + *(int *)(v12 + 24);
  uint64_t v14 = type metadata accessor for GroupLayoutContext();
  uint64_t v15 = *(void *)(*(void *)&v13[*(int *)(v14 + 40)] + 16);
  uint64_t v37 = v14;
  double v16 = *(double *)&v13[*(int *)(v14 + 32)];
  sub_1BFC66384(v15 + 16, (uint64_t)v41);
  sub_1BFC66384(v15 + 56, (uint64_t)v47);
  double v17 = v16 * *(double *)(v15 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v41, inited + 16);
  sub_1BFC773DC(v47, inited + 56);
  *(double *)(inited + 96) = v17;
  char v46 = 2;
  swift_retain();
  FeedLayoutStylerFactory.styler(withHeading:)(&v46, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  HeadlineViewLayout.Context.init(key:model:styler:)(v11, (uint64_t)v7, (uint64_t)&v42, v10);
  uint64_t v19 = *MEMORY[0x1E4FAB6D8];
  uint64_t v20 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v4, v19, v20);
  (*(void (**)(char *, void, void *))(v2 + 104))(v4, *MEMORY[0x1E4FAB8F0], v39);
  uint64_t v39 = v10;
  uint64_t v40 = v10;
  sub_1C0C067DC(0, &qword_1EA1A4940, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  sub_1C1517BFC();
  long long v36 = v42;
  uint64_t v22 = v43;
  uint64_t v21 = v44;
  memcpy(v41, v45, sizeof(v41));
  sub_1BFCA5A7C(0, (unint64_t *)&unk_1EB87A620, (uint64_t)&type metadata for FeedItemLayoutAttributes, MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1529AE0;
  sub_1BFE298EC();
  uint64_t v25 = v24;
  uint64_t v26 = swift_allocBox();
  uint64_t v28 = v27;
  uint64_t v29 = (void *)(v27 + *(int *)(v25 + 48));
  uint64_t v30 = *(int *)(v25 + 64);
  uint64_t v31 = (uint64_t)v39;
  sub_1BFF1B0DC((uint64_t)v39, v27, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v29, v41, 0x130uLL);
  *(void *)(v28 + v30) = *(void *)&v13[*(int *)(v37 + 28)];
  *(void *)(v23 + 32) = v26 | 0x4000000000000000;
  *(void *)&v47[0] = v23;
  sub_1BFCA5A7C(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, MEMORY[0x1E4FBB320]);
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  uint64_t v32 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = v38;
  *uint64_t v38 = 0;
  *(_OWORD *)(v33 + 8) = v36;
  *((void *)v33 + 3) = v22;
  *((void *)v33 + 4) = v21;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  *((void *)v33 + 5) = v32;
  *((void *)v33 + 6) = v34;
  return sub_1BFF1F344(v31, type metadata accessor for HeadlineViewLayout.Context);
}

uint64_t sub_1C0C02D8C(uint64_t a1, uint64_t a2)
{
  sub_1C0C06C94(0, &qword_1EA1A4958, (uint64_t (*)(void))sub_1C0C066D8, (uint64_t)&type metadata for A12_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 12;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0C067DC(0, &qword_1EA1A4960, MEMORY[0x1E4FAB6F0]);
  sub_1C0C06798(&qword_1EA1A4968, &qword_1EA1A4960, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0C02F78(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v43 = a1;
  uint64_t v51 = sub_1C1517A9C();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151794C();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v4);
  id v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v7 = (int *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0C06C94(0, &qword_1EA1A4958, (uint64_t (*)(void))sub_1C0C066D8, (uint64_t)&type metadata for A12_V10.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v42 - v13);
  uint64_t v55 = a1;
  uint64_t v15 = sub_1C151729C();
  uint64_t v16 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FAB4E8], v15);
  *uint64_t v14 = v16;
  uint64_t v18 = *(void (**)(uint64_t *, void, uint64_t))(v12 + 104);
  v18(v14, *MEMORY[0x1E4FAB940], v11);
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0C067DC(0, &qword_1EA1A4970, MEMORY[0x1E4FAB4D0]);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1C0C06798(&qword_1EA1A4978, &qword_1EA1A4970, v19);
  uint64_t v48 = v21;
  uint64_t v45 = v22;
  sub_1C151738C();
  char v46 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  uint64_t v44 = v12 + 8;
  v46(v14, v11);
  uint64_t v55 = v43;
  swift_getKeyPath();
  v18(v14, *MEMORY[0x1E4FABA28], v11);
  uint64_t v23 = (char *)v9 + v7[7];
  uint64_t v24 = *MEMORY[0x1E4FAB8C8];
  uint64_t v25 = sub_1C1517A7C();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  uint64_t v27 = (void **)MEMORY[0x1E4FB27D0];
  void *v9 = 0;
  *(void *)((char *)v9 + v7[8]) = 0;
  uint64_t v28 = *v27;
  *(void *)((char *)v9 + v7[9]) = v28;
  uint64_t v29 = *MEMORY[0x1E4FB2848];
  uint64_t v30 = *(void *)(MEMORY[0x1E4FB2848] + 8);
  uint64_t v31 = *(void *)(MEMORY[0x1E4FB2848] + 16);
  uint64_t v32 = *(void *)(MEMORY[0x1E4FB2848] + 24);
  uint64_t v33 = qword_1EB87CC48;
  id v34 = v28;
  if (v33 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v35 = v47;
  sub_1C151709C();
  uint64_t v36 = swift_release();
  __n128 v37 = MEMORY[0x1F4188790](v36);
  *(&v42 - 8) = v29;
  *(&v42 - 7) = v30;
  *(&v42 - 6) = v31;
  *(&v42 - 5) = v32;
  uint64_t v39 = v50;
  uint64_t v38 = v51;
  *(&v42 - 4) = (uint64_t)v35;
  *(&v42 - 3) = v39;
  unint64_t v41 = (unint64_t)v9;
  (*(void (**)(char *, void, uint64_t, __n128))(v49 + 104))(v52, *MEMORY[0x1E4FAB8F8], v38, v37);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v54);
  sub_1BFF1F344((uint64_t)v9, type metadata accessor for HeadlineViewLayout.Options);
  unint64_t v41 = sub_1C0C06860();
  sub_1C151735C();
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t *, uint64_t))v46)(v14, v11);
}

uint64_t sub_1C0C03570(uint64_t a1)
{
  sub_1C0C068F0(0, (unint64_t *)&qword_1EB87A680, (uint64_t (*)(uint64_t))sub_1BFFFCF34, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  uint64_t v4 = v1 + *(int *)(a1 + 28);
  *(void *)(v3 + 56) = type metadata accessor for FeedHeadline(0);
  *(void *)(v3 + 64) = sub_1C0C06688((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v3 + 32));
  sub_1BFF1B0DC(v4, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  return v3;
}

uint64_t sub_1C0C0366C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0C0226C(a1, a2, a3);
}

uint64_t sub_1C0C03684()
{
  return sub_1C12BC37C();
}

unint64_t sub_1C0C03694(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0C036C4();
  unint64_t result = sub_1C0C03718();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0C036C4()
{
  unint64_t result = qword_1EA1A4910;
  if (!qword_1EA1A4910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4910);
  }
  return result;
}

unint64_t sub_1C0C03718()
{
  unint64_t result = qword_1EA1A4918;
  if (!qword_1EA1A4918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4918);
  }
  return result;
}

uint64_t type metadata accessor for A12_V10.Bound()
{
  uint64_t result = qword_1EA1A4928;
  if (!qword_1EA1A4928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C037B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v31 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v76 = a3;
    uint64_t v78 = a1;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    uint64_t v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C0C068F0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 16))(__dst, v27, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v25 + 40)) = *(void *)(v23 + *(int *)(v25 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    uint64_t v33 = *(int *)(v76 + 28);
    uint64_t v34 = v78 + v33;
    uint64_t v35 = (uint64_t)a2 + v33;
    uint64_t v36 = *(uint64_t *)((char *)a2 + v33 + 8);
    *(void *)uint64_t v34 = *(uint64_t *)((char *)a2 + v33);
    *(void *)(v34 + 8) = v36;
    *(void *)(v34 + 16) = *(uint64_t *)((char *)a2 + v33 + 16);
    *(unsigned char *)(v34 + 24) = *((unsigned char *)a2 + v33 + 24);
    uint64_t v37 = *(uint64_t *)((char *)a2 + v33 + 32);
    uint64_t v38 = *(void *)(v35 + 40);
    *(void *)(v34 + 32) = v37;
    *(void *)(v34 + 40) = v38;
    *(void *)(v34 + 48) = *(void *)(v35 + 48);
    *(unsigned char *)(v34 + 56) = *(unsigned char *)(v35 + 56);
    uint64_t v72 = (int *)type metadata accessor for FeedHeadline(0);
    uint64_t v39 = v72[10];
    uint64_t v40 = (unsigned char *)(v34 + v39);
    uint64_t v41 = v35 + v39;
    unsigned char *v40 = *(unsigned char *)(v35 + v39);
    v40[1] = *(unsigned char *)(v35 + v39 + 1);
    uint64_t v42 = (int *)type metadata accessor for FeedHeadline.State(0);
    uint64_t v43 = v42[6];
    uint64_t v71 = &v40[v43];
    uint64_t v44 = (char *)(v41 + v43);
    uint64_t v45 = (int *)type metadata accessor for SharedItem();
    uint64_t v70 = *((void *)v45 - 1);
    char v46 = *(unsigned int (**)(char *, uint64_t, int *))(v70 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v46(v44, 1, v45))
    {
      uint64_t v47 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(v71, v44, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v71, v44, v48);
      v71[v45[5]] = v44[v45[5]];
      uint64_t v49 = v45[6];
      uint64_t v50 = *(void **)&v44[v49];
      *(void *)&v71[v49] = v50;
      uint64_t v51 = v45[7];
      __dsta = &v44[v51];
      uint64_t v77 = &v71[v51];
      uint64_t v52 = sub_1C1515FDC();
      unint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
      id v53 = v50;
      v73(v77, __dsta, v52);
      (*(void (**)(char *, void, uint64_t, int *))(v70 + 56))(v71, 0, 1, v45);
    }
    uint64_t v31 = v78;
    v40[v42[7]] = *(unsigned char *)(v41 + v42[7]);
    v40[v42[8]] = *(unsigned char *)(v41 + v42[8]);
    v40[v42[9]] = *(unsigned char *)(v41 + v42[9]);
    v40[v42[10]] = *(unsigned char *)(v41 + v42[10]);
    uint64_t v54 = v72[11];
    uint64_t v55 = (void *)(v34 + v54);
    uint64_t v56 = (const void *)(v35 + v54);
    uint64_t v57 = sub_1C151D2DC();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      sub_1C0C068F0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v60 = v72[12];
    uint64_t v61 = (void *)(v34 + v60);
    uint64_t v62 = (void *)(v35 + v60);
    unint64_t v63 = v62[1];
    if (v63 >= 0x11)
    {
      *uint64_t v61 = *v62;
      v61[1] = v63;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    }
    uint64_t v64 = v72[13];
    unint64_t v65 = *(void *)(v35 + v64);
    if (v65 >= 2)
    {
      if (v65 == 2)
      {
        *(void *)(v34 + v64) = 2;
      }
      else
      {
        *(void *)(v34 + v64) = v65;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(void *)(v34 + v64) = v65;
    }
    uint64_t v66 = v72[14];
    uint64_t v67 = *(void **)(v35 + v66);
    *(void *)(v34 + v66) = v67;
    id v68 = v67;
  }
  return v31;
}

void sub_1C0C03EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = v5 + *(int *)(v7 + 20);
  uint64_t v9 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v5 + *(int *)(v7 + 24);
  if (*(void *)(v10 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v10 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v12 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v13 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  swift_release();
  swift_release();
  uint64_t v14 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v15 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v16 = v14 + v15[10];
  uint64_t v17 = v16 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v18 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    uint64_t v19 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);

    uint64_t v20 = v17 + *(int *)(v18 + 28);
    uint64_t v21 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  uint64_t v22 = v14 + v15[11];
  uint64_t v23 = sub_1C151D2DC();
  uint64_t v24 = *(void *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  if (*(void *)(v14 + v15[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v14 + v15[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }
  uint64_t v25 = *(void **)(v14 + v15[14]);
}

uint64_t sub_1C0C0424C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v73 = a3;
  uint64_t v75 = a1;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C0C068F0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  uint64_t v30 = *(int *)(v73 + 28);
  uint64_t v31 = v75 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)(a2 + v30 + 8);
  *(void *)uint64_t v31 = *(void *)(a2 + v30);
  *(void *)(v31 + 8) = v33;
  *(void *)(v31 + 16) = *(void *)(a2 + v30 + 16);
  *(unsigned char *)(v31 + 24) = *(unsigned char *)(a2 + v30 + 24);
  uint64_t v34 = *(void *)(a2 + v30 + 32);
  uint64_t v35 = *(void *)(v32 + 40);
  *(void *)(v31 + 32) = v34;
  *(void *)(v31 + 40) = v35;
  *(void *)(v31 + 48) = *(void *)(v32 + 48);
  *(unsigned char *)(v31 + 56) = *(unsigned char *)(v32 + 56);
  unint64_t v74 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v36 = v74[10];
  uint64_t v37 = (unsigned char *)(v31 + v36);
  uint64_t v38 = v32 + v36;
  *uint64_t v37 = *(unsigned char *)(v32 + v36);
  v37[1] = *(unsigned char *)(v32 + v36 + 1);
  uint64_t v39 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v40 = v39[6];
  __dsta = &v37[v40];
  uint64_t v41 = (char *)(v38 + v40);
  uint64_t v42 = (int *)type metadata accessor for SharedItem();
  uint64_t v67 = *((void *)v42 - 1);
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, int *))(v67 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v43(v41, 1, v42))
  {
    uint64_t v44 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dsta, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(__dsta, v41, v45);
    __dsta[v42[5]] = v41[v42[5]];
    uint64_t v46 = v42[6];
    uint64_t v47 = *(void **)&v41[v46];
    *(void *)&__dsta[v46] = v47;
    uint64_t v48 = v42[7];
    long long v69 = &v41[v48];
    uint64_t v70 = &__dsta[v48];
    uint64_t v49 = sub_1C1515FDC();
    id v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
    id v50 = v47;
    v68(v70, v69, v49);
    (*(void (**)(char *, void, uint64_t, int *))(v67 + 56))(__dsta, 0, 1, v42);
  }
  v37[v39[7]] = *(unsigned char *)(v38 + v39[7]);
  v37[v39[8]] = *(unsigned char *)(v38 + v39[8]);
  v37[v39[9]] = *(unsigned char *)(v38 + v39[9]);
  v37[v39[10]] = *(unsigned char *)(v38 + v39[10]);
  uint64_t v51 = v74[11];
  uint64_t v52 = (void *)(v31 + v51);
  id v53 = (const void *)(v32 + v51);
  uint64_t v54 = sub_1C151D2DC();
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    sub_1C0C068F0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  uint64_t v57 = v74[12];
  uint64_t v58 = (void *)(v31 + v57);
  uint64_t v59 = (void *)(v32 + v57);
  unint64_t v60 = v59[1];
  if (v60 >= 0x11)
  {
    *uint64_t v58 = *v59;
    v58[1] = v60;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
  }
  uint64_t v61 = v74[13];
  unint64_t v62 = *(void *)(v32 + v61);
  if (v62 >= 2)
  {
    if (v62 == 2)
    {
      *(void *)(v31 + v61) = 2;
    }
    else
    {
      *(void *)(v31 + v61) = v62;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(void *)(v31 + v61) = v62;
  }
  uint64_t v63 = v74[14];
  uint64_t v64 = *(void **)(v32 + v63);
  *(void *)(v31 + v63) = v64;
  id v65 = v64;
  return v75;
}

void *sub_1C0C04928(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v97 = a3;
  uint64_t v99 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  long long v101 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  long long v91 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F344((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v95 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v95 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v93 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (v28)
    {
      sub_1C0C068F0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
      uint64_t v31 = (void *)v93;
LABEL_13:
      memcpy(v31, v24, v30);
      goto LABEL_16;
    }
    uint64_t v33 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v93, v24, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v93, 0, 1, v25);
  }
  else
  {
    if (v28)
    {
      sub_1BFF1F344(v93, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C0C068F0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
      uint64_t v31 = (void *)v93;
      goto LABEL_13;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v93, v24, v34);
  }
LABEL_16:
  *(void *)&v17[*(int *)(v95 + 40)] = *(void *)&v18[*(int *)(v95 + 40)];
  *(void *)&v8[v91[7]] = *(void *)&v9[v91[7]];
  *(void *)&v8[v91[8]] = *(void *)&v9[v91[8]];
  v8[v91[9]] = v9[v91[9]];
  *(void *)&v8[v91[10]] = *(void *)&v9[v91[10]];
  swift_retain();
  swift_release();
  v8[v91[11]] = v9[v91[11]];
  *(void *)&v8[v91[12]] = *(void *)&v9[v91[12]];
  swift_retain();
  swift_release();
  uint64_t v35 = *(int *)(v97 + 28);
  uint64_t v36 = (char *)v101 + v35;
  uint64_t v37 = (char *)v99 + v35;
  *(void *)uint64_t v36 = *(void *)((char *)v99 + v35);
  *((void *)v36 + 1) = *(void *)((char *)v99 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = *((void *)v37 + 2);
  v36[24] = v37[24];
  *((void *)v36 + 2) = v38;
  *((void *)v36 + 4) = *((void *)v37 + 4);
  *((void *)v36 + 5) = *((void *)v37 + 5);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((void *)v36 + 6) = *((void *)v37 + 6);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v36[56] = v37[56];
  uint64_t v98 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v100 = v37;
  uint64_t v39 = v98[10];
  uint64_t v40 = &v36[v39];
  uint64_t v41 = &v37[v39];
  char *v40 = *v41;
  v40[1] = v41[1];
  uint64_t v42 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v43 = v42[6];
  uint64_t v44 = &v40[v43];
  uint64_t v45 = &v41[v43];
  uint64_t v46 = (int *)type metadata accessor for SharedItem();
  uint64_t v96 = *((void *)v46 - 1);
  uint64_t v47 = *(uint64_t (**)(char *, uint64_t, int *))(v96 + 48);
  int v48 = v47(v44, 1, v46);
  int v49 = v47(v45, 1, v46);
  if (v48)
  {
    if (!v49)
    {
      uint64_t v50 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v44, v45, v50);
      v44[v46[5]] = v45[v46[5]];
      uint64_t v51 = v46[6];
      uint64_t v52 = *(void **)&v45[v51];
      *(void *)&v44[v51] = v52;
      uint64_t v53 = v46[7];
      __src = &v45[v53];
      uint64_t v94 = &v44[v53];
      uint64_t v54 = sub_1C1515FDC();
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
      id v56 = v52;
      v55(v94, __src, v54);
      (*(void (**)(char *, void, uint64_t, int *))(v96 + 56))(v44, 0, 1, v46);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v49)
  {
    sub_1BFF1F344((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for SharedItem);
LABEL_21:
    uint64_t v57 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v44, v45, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_22;
  }
  uint64_t v77 = sub_1C151631C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 24))(v44, v45, v77);
  v44[v46[5]] = v45[v46[5]];
  uint64_t v78 = v46[6];
  uint64_t v79 = *(void **)&v45[v78];
  long long v80 = *(void **)&v44[v78];
  *(void *)&v44[v78] = v79;
  id v81 = v79;

  uint64_t v82 = v46[7];
  uint64_t v83 = &v44[v82];
  uint64_t v84 = &v45[v82];
  uint64_t v85 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 24))(v83, v84, v85);
LABEL_22:
  v40[v42[7]] = v41[v42[7]];
  v40[v42[8]] = v41[v42[8]];
  v40[v42[9]] = v41[v42[9]];
  v40[v42[10]] = v41[v42[10]];
  uint64_t v58 = v98[11];
  uint64_t v59 = &v36[v58];
  unint64_t v60 = &v100[v58];
  uint64_t v61 = sub_1C151D2DC();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  int v64 = v63(v59, 1, v61);
  int v65 = v63(v60, 1, v61);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
LABEL_27:
    sub_1C0C068F0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v59, v60, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v59, v60, v61);
LABEL_28:
  uint64_t v67 = v98[12];
  id v68 = &v36[v67];
  long long v69 = &v100[v67];
  unint64_t v70 = *(void *)&v36[v67 + 8];
  unint64_t v71 = *(void *)&v100[v67 + 8];
  if (v70 < 0x11)
  {
    if (v71 >= 0x11)
    {
      *(void *)id v68 = *(void *)v69;
      *((void *)v68 + 1) = *((void *)v69 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  if (v71 < 0x11)
  {
    sub_1C01A7564((uint64_t)v68);
LABEL_33:
    *(_OWORD *)id v68 = *(_OWORD *)v69;
    goto LABEL_35;
  }
  *(void *)id v68 = *(void *)v69;
  *((void *)v68 + 1) = *((void *)v69 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v72 = v98[13];
  uint64_t v73 = &v36[v72];
  unint64_t v74 = *(void *)&v36[v72];
  unint64_t v75 = *(void *)&v100[v72];
  if (v74 == 2)
  {
    if (v75 >= 2)
    {
      if (v75 == 2)
      {
        uint64_t v76 = 2;
LABEL_50:
        *(void *)uint64_t v73 = v76;
        goto LABEL_51;
      }
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v75 == 2)
  {
    sub_1C01A75B8((uint64_t)&v36[v72]);
LABEL_49:
    uint64_t v76 = *(void *)&v100[v72];
    goto LABEL_50;
  }
  if (v74 >= 2)
  {
    if (v75 >= 2)
    {
      *(void *)uint64_t v73 = v75;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_51;
    }
    swift_unknownObjectRelease();
    goto LABEL_49;
  }
  if (v75 >= 2)
  {
LABEL_44:
    *(void *)uint64_t v73 = v75;
    swift_unknownObjectRetain();
    goto LABEL_51;
  }
LABEL_43:
  *(void *)uint64_t v73 = v75;
LABEL_51:
  uint64_t v86 = v98[14];
  uint64_t v87 = *(void **)&v36[v86];
  int v88 = *(void **)&v100[v86];
  *(void *)&v36[v86] = v88;
  id v89 = v88;

  return v101;
}

uint64_t sub_1C0C0534C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v9 = v8[5];
  uint64_t v10 = v5 + v9;
  uint64_t v11 = v6 + v9;
  uint64_t v12 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = v5 + v13;
  uint64_t v15 = v6 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(v6 + v13);
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v6 + v13 + 16);
  *(_WORD *)(v14 + 17) = *(_WORD *)(v6 + v13 + 17);
  *(unsigned char *)(v14 + 19) = *(unsigned char *)(v6 + v13 + 19);
  *(_DWORD *)(v14 + 20) = *(_DWORD *)(v6 + v13 + 20);
  *(void *)(v14 + 24) = *(void *)(v6 + v13 + 24);
  uint64_t v16 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v16 + 36);
  __dst = (void *)(v14 + v17);
  uint64_t v18 = (const void *)(v15 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C0C068F0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v14 + *(int *)(v16 + 40)) = *(void *)(v15 + *(int *)(v16 + 40));
  *(void *)(v5 + v8[7]) = *(void *)(v6 + v8[7]);
  *(void *)(v5 + v8[8]) = *(void *)(v6 + v8[8]);
  *(unsigned char *)(v5 + v8[9]) = *(unsigned char *)(v6 + v8[9]);
  *(void *)(v5 + v8[10]) = *(void *)(v6 + v8[10]);
  *(unsigned char *)(v5 + v8[11]) = *(unsigned char *)(v6 + v8[11]);
  *(void *)(v5 + v8[12]) = *(void *)(v6 + v8[12]);
  uint64_t v23 = *(int *)(a3 + 28);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)(a2 + v23);
  *(void *)(v24 + 16) = *(void *)(a2 + v23 + 16);
  *(unsigned char *)(v24 + 24) = *(unsigned char *)(a2 + v23 + 24);
  *(void *)(v24 + 32) = *(void *)(a2 + v23 + 32);
  *(_OWORD *)(v24 + 40) = *(_OWORD *)(a2 + v23 + 40);
  *(unsigned char *)(v24 + 56) = *(unsigned char *)(a2 + v23 + 56);
  uint64_t v26 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v27 = v26[10];
  int v28 = (unsigned char *)(v24 + v27);
  uint64_t v29 = v25 + v27;
  unsigned char *v28 = *(unsigned char *)(v25 + v27);
  v28[1] = *(unsigned char *)(v25 + v27 + 1);
  size_t v30 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v31 = v30[6];
  uint64_t v32 = &v28[v31];
  uint64_t v33 = (char *)(v29 + v31);
  uint64_t v34 = (int *)type metadata accessor for SharedItem();
  uint64_t v35 = *((void *)v34 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1, v34))
  {
    uint64_t v36 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v37 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v32, v33, v37);
    v32[v34[5]] = v33[v34[5]];
    *(void *)&v32[v34[6]] = *(void *)&v33[v34[6]];
    uint64_t v38 = v34[7];
    uint64_t v52 = &v32[v38];
    uint64_t v39 = &v33[v38];
    uint64_t v40 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v52, v39, v40);
    (*(void (**)(char *, void, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
  }
  v28[v30[7]] = *(unsigned char *)(v29 + v30[7]);
  v28[v30[8]] = *(unsigned char *)(v29 + v30[8]);
  v28[v30[9]] = *(unsigned char *)(v29 + v30[9]);
  v28[v30[10]] = *(unsigned char *)(v29 + v30[10]);
  uint64_t v41 = v26[11];
  uint64_t v42 = (void *)(v24 + v41);
  uint64_t v43 = (const void *)(v25 + v41);
  uint64_t v44 = sub_1C151D2DC();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    sub_1C0C068F0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  *(_OWORD *)(v24 + v26[12]) = *(_OWORD *)(v25 + v26[12]);
  uint64_t v47 = v26[13];
  uint64_t v48 = *(void *)(v25 + v47);
  if (v48 == 2) {
    uint64_t v48 = 2;
  }
  *(void *)(v24 + v47) = v48;
  *(void *)(v24 + v26[14]) = *(void *)(v25 + v26[14]);
  return a1;
}

uint64_t sub_1C0C05954(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v86 = a3;
  uint64_t v87 = a2;
  uint64_t v6 = a3[6];
  uint64_t v89 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  id v81 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F344((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v84 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v84 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v82 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (v26)
    {
      sub_1C0C068F0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
      uint64_t v29 = (void *)v82;
LABEL_11:
      memcpy(v29, v22, v28);
      goto LABEL_14;
    }
    uint64_t v31 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v82, v22, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v82, 0, 1, v23);
  }
  else
  {
    if (v26)
    {
      sub_1BFF1F344(v82, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C0C068F0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
      uint64_t v29 = (void *)v82;
      goto LABEL_11;
    }
    uint64_t v32 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v82, v22, v32);
  }
LABEL_14:
  *(void *)(v16 + *(int *)(v84 + 40)) = *(void *)(v17 + *(int *)(v84 + 40));
  *(void *)(v7 + v81[7]) = *(void *)(v8 + v81[7]);
  *(void *)(v7 + v81[8]) = *(void *)(v8 + v81[8]);
  *(unsigned char *)(v7 + v81[9]) = *(unsigned char *)(v8 + v81[9]);
  *(void *)(v7 + v81[10]) = *(void *)(v8 + v81[10]);
  swift_release();
  *(unsigned char *)(v7 + v81[11]) = *(unsigned char *)(v8 + v81[11]);
  *(void *)(v7 + v81[12]) = *(void *)(v8 + v81[12]);
  swift_release();
  uint64_t v33 = v86[7];
  uint64_t v34 = v89 + v33;
  uint64_t v35 = v87 + v33;
  uint64_t v36 = *(void *)(v87 + v33 + 8);
  *(void *)uint64_t v34 = *(void *)(v87 + v33);
  *(void *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(unsigned char *)(v34 + 24) = *(unsigned char *)(v35 + 24);
  uint64_t v37 = *(void *)(v35 + 40);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(void *)(v34 + 40) = v37;
  swift_unknownObjectRelease();
  *(void *)(v34 + 48) = *(void *)(v35 + 48);
  swift_unknownObjectRelease();
  *(unsigned char *)(v34 + 56) = *(unsigned char *)(v35 + 56);
  int v88 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v38 = v88[10];
  uint64_t v39 = (unsigned char *)(v34 + v38);
  uint64_t v40 = v35 + v38;
  *uint64_t v39 = *(unsigned char *)(v35 + v38);
  v39[1] = *(unsigned char *)(v35 + v38 + 1);
  uint64_t v85 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v41 = v85[6];
  uint64_t v42 = &v39[v41];
  uint64_t v43 = (unsigned char *)(v40 + v41);
  uint64_t v44 = (int *)type metadata accessor for SharedItem();
  uint64_t v83 = *((void *)v44 - 1);
  uint64_t v45 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v83 + 48);
  int v46 = v45(v42, 1, v44);
  int v47 = v45(v43, 1, v44);
  if (v46)
  {
    if (!v47)
    {
      uint64_t v48 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 32))(v42, v43, v48);
      v42[v44[5]] = v43[v44[5]];
      *(void *)&v42[v44[6]] = *(void *)&v43[v44[6]];
      uint64_t v49 = v44[7];
      uint64_t v50 = &v42[v49];
      uint64_t v51 = &v43[v49];
      uint64_t v52 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v83 + 56))(v42, 0, 1, v44);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v47)
  {
    sub_1BFF1F344((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for SharedItem);
LABEL_19:
    uint64_t v53 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v42, v43, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_20;
  }
  uint64_t v71 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 40))(v42, v43, v71);
  v42[v44[5]] = v43[v44[5]];
  uint64_t v72 = v44[6];
  uint64_t v73 = *(void **)&v42[v72];
  *(void *)&v42[v72] = *(void *)&v43[v72];

  uint64_t v74 = v44[7];
  unint64_t v75 = &v42[v74];
  uint64_t v76 = &v43[v74];
  uint64_t v77 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
LABEL_20:
  v39[v85[7]] = *(unsigned char *)(v40 + v85[7]);
  v39[v85[8]] = *(unsigned char *)(v40 + v85[8]);
  v39[v85[9]] = *(unsigned char *)(v40 + v85[9]);
  v39[v85[10]] = *(unsigned char *)(v40 + v85[10]);
  uint64_t v54 = v88[11];
  uint64_t v55 = (void *)(v34 + v54);
  id v56 = (void *)(v35 + v54);
  uint64_t v57 = sub_1C151D2DC();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
  int v60 = v59(v55, 1, v57);
  int v61 = v59(v56, 1, v57);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, void *, uint64_t))(v58 + 32))(v55, v56, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v61)
  {
    (*(void (**)(void *, uint64_t))(v58 + 8))(v55, v57);
LABEL_25:
    sub_1C0C068F0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v55, v56, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v58 + 40))(v55, v56, v57);
LABEL_26:
  uint64_t v63 = v88[12];
  uint64_t v64 = v34 + v63;
  uint64_t v65 = v35 + v63;
  if (*(void *)(v34 + v63 + 8) < 0x11uLL)
  {
LABEL_29:
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    goto LABEL_31;
  }
  unint64_t v66 = *(void *)(v65 + 8);
  if (v66 < 0x11)
  {
    sub_1C01A7564(v64);
    goto LABEL_29;
  }
  *(void *)uint64_t v64 = *(void *)v65;
  *(void *)(v64 + 8) = v66;
  swift_bridgeObjectRelease();
LABEL_31:
  uint64_t v67 = v88[13];
  id v68 = (unint64_t *)(v34 + v67);
  unint64_t v69 = *(void *)(v34 + v67);
  unint64_t v70 = *(void *)(v35 + v67);
  if (v69 == 2)
  {
    if (v70 == 2) {
      unint64_t v70 = 2;
    }
    goto LABEL_43;
  }
  if (v70 == 2)
  {
    sub_1C01A75B8(v34 + v67);
  }
  else
  {
    if (v69 < 2) {
      goto LABEL_43;
    }
    if (v70 >= 2)
    {
      *id v68 = v70;
      swift_unknownObjectRelease();
      goto LABEL_44;
    }
    swift_unknownObjectRelease();
  }
  unint64_t v70 = *(void *)(v35 + v67);
LABEL_43:
  *id v68 = v70;
LABEL_44:
  uint64_t v78 = v88[14];
  uint64_t v79 = *(void **)(v34 + v78);
  *(void *)(v34 + v78) = *(void *)(v35 + v78);

  return v89;
}

uint64_t sub_1C0C062D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0C062E4);
}

uint64_t sub_1C0C062E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedHeadline(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C0C06410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0C06424);
}

void *sub_1C0C06424(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedHeadline(0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1C0C06550()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedHeadline(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0C06630(uint64_t a1)
{
  uint64_t result = sub_1C0C06688(&qword_1EA1A4938, (void (*)(uint64_t))type metadata accessor for A12_V10.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C06688(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C066D0(uint64_t a1)
{
  return sub_1C0C02D8C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0C066D8()
{
  unint64_t result = qword_1EA1A4948;
  if (!qword_1EA1A4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4948);
  }
  return result;
}

unint64_t sub_1C0C0672C()
{
  unint64_t result = qword_1EA1A4950;
  if (!qword_1EA1A4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4950);
  }
  return result;
}

uint64_t sub_1C0C06780()
{
  return swift_deallocObject();
}

uint64_t sub_1C0C06790(uint64_t a1)
{
  return sub_1C0C02F78(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0C06798(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0C067DC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0C067DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V10.Layout;
    v8[1] = &type metadata for A12_V10.Layout.Attributes;
    long long v8[2] = sub_1C0C066D8();
    v8[3] = sub_1C0C0672C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C0C06860()
{
  unint64_t result = qword_1EA1A4980;
  if (!qword_1EA1A4980)
  {
    sub_1C0C06C94(255, &qword_1EA1A4988, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB4F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4980);
  }
  return result;
}

void sub_1C0C068F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *__swift_memcpy336_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x150uLL);
}

uint64_t getEnumTagSinglePayload for A12_V10.Layout.Attributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 336)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for A12_V10.Layout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 336) = v3;
  return result;
}

ValueMetadata *type metadata accessor for A12_V10.Layout.Attributes()
{
  return &type metadata for A12_V10.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V10.Layout()
{
  return &type metadata for A12_V10.Layout;
}

unint64_t sub_1C0C06A24()
{
  unint64_t result = qword_1EA1A4990;
  if (!qword_1EA1A4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4990);
  }
  return result;
}

unint64_t sub_1C0C06A7C()
{
  unint64_t result = qword_1EA1A4998;
  if (!qword_1EA1A4998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4998);
  }
  return result;
}

unint64_t sub_1C0C06AD4()
{
  unint64_t result = qword_1EA1A49A0;
  if (!qword_1EA1A49A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49A0);
  }
  return result;
}

unint64_t sub_1C0C06B2C()
{
  unint64_t result = qword_1EA1A49A8;
  if (!qword_1EA1A49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49A8);
  }
  return result;
}

double sub_1C0C06B80(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 304) = 1;
  return result;
}

uint64_t sub_1C0C06BB8(uint64_t a1, uint64_t a2)
{
  sub_1BFCA5A7C(0, &qword_1EA1A49B0, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0C06C40()
{
  unint64_t result = qword_1EA1A49C0;
  if (!qword_1EA1A49C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49C0);
  }
  return result;
}

void sub_1C0C06C94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for A12_V10.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C06DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V10.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V10.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0C06E04()
{
  unint64_t result = qword_1EA1A49D0;
  if (!qword_1EA1A49D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49D0);
  }
  return result;
}

unint64_t sub_1C0C06E5C()
{
  unint64_t result = qword_1EA1A49D8;
  if (!qword_1EA1A49D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49D8);
  }
  return result;
}

unint64_t sub_1C0C06EB4()
{
  unint64_t result = qword_1EA1A49E0;
  if (!qword_1EA1A49E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49E0);
  }
  return result;
}

uint64_t dispatch thunk of WebEmbedDataSourceManagerObserver.webEmbedDataSourceManager(_:dataVisualization:didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1C0C06F1C()
{
  sub_1C019B9B4(v0 + 16);
  sub_1C04ADE38(v0 + OBJC_IVAR____TtC8NewsFeed37WeakWebEmbedDataSourceManagerObserver_dataVisualization);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C06F88()
{
  return type metadata accessor for WeakWebEmbedDataSourceManagerObserver();
}

uint64_t type metadata accessor for WeakWebEmbedDataSourceManagerObserver()
{
  uint64_t result = qword_1EB88F548;
  if (!qword_1EB88F548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C06FDC()
{
  uint64_t result = type metadata accessor for WebEmbedDataVisualization();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0C07078(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  unint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  return sub_1C0C070DC((uint64_t)v8, a2, a3, v3, v6, v7);
}

uint64_t sub_1C0C070DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_0, a1, a5);
  if (MEMORY[0x1C18C9C60](a4 + 16))
  {
    uint64_t v12 = *(void *)(a4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v15, a2, a3, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1C0C071B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a5;
  uint64_t v16 = a4;
  sub_1C0C07CA8(0, &qword_1EA1A4A10, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C07BAC();
  sub_1C1520F0C();
  LOBYTE(v18) = 0;
  sub_1C15207CC();
  if (!v5)
  {
    uint64_t v12 = v15;
    uint64_t v18 = v16;
    char v17 = 1;
    sub_1C0C07D0C();
    sub_1C152080C();
    uint64_t v18 = v12;
    char v17 = 2;
    sub_1C0C07D60();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C0C07390()
{
  return sub_1C151EB7C();
}

uint64_t sub_1C0C073F0()
{
  return sub_1C151EB0C();
}

uint64_t sub_1C0C07440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C00998E4();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C0C07480()
{
  uint64_t v1 = 0x6F746164696C6176;
  if (*v0 != 1) {
    uint64_t v1 = 0x617461646174656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1C0C074E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0C08130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0C0750C(uint64_t a1)
{
  unint64_t v2 = sub_1C0C07BAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0C07548(uint64_t a1)
{
  unint64_t v2 = sub_1C0C07BAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0C07584@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C0C078EC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1C0C075B4(void *a1)
{
  return sub_1C0C071B4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C0C075D4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return sub_1C00ABAD8(v2, v4) & (v3 == v5);
  }
  char v7 = sub_1C1520A9C();
  uint64_t result = 0;
  if (v7) {
    return sub_1C00ABAD8(v2, v4) & (v3 == v5);
  }
  return result;
}

uint64_t sub_1C0C0764C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1475940((uint64_t)v3, v1);
  sub_1C1520DCC();
  return sub_1C1520E0C();
}

uint64_t sub_1C0C076C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1C151E77C();
  sub_1C1475940(a1, v3);
  return sub_1C1520DCC();
}

uint64_t sub_1C0C07710()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1475940((uint64_t)v3, v1);
  sub_1C1520DCC();
  return sub_1C1520E0C();
}

void *initializeWithCopy for FormatDerivedDataOptionReference(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatDerivedDataOptionReference(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataOptionReference(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionReference()
{
  return &type metadata for FormatDerivedDataOptionReference;
}

unint64_t sub_1C0C07898()
{
  unint64_t result = qword_1EA1A49E8;
  if (!qword_1EA1A49E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49E8);
  }
  return result;
}

uint64_t sub_1C0C078EC(void *a1)
{
  sub_1C0C07CA8(0, &qword_1EA1A49F0, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0C07BAC();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v12) = 0;
    uint64_t v8 = sub_1C152069C();
    char v11 = 1;
    sub_1C0C07C00();
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    char v11 = 2;
    sub_1C0C07C54();
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1C0C07BAC()
{
  unint64_t result = qword_1EA1A49F8;
  if (!qword_1EA1A49F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A49F8);
  }
  return result;
}

unint64_t sub_1C0C07C00()
{
  unint64_t result = qword_1EA1A4A00;
  if (!qword_1EA1A4A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A00);
  }
  return result;
}

unint64_t sub_1C0C07C54()
{
  unint64_t result = qword_1EA1A4A08;
  if (!qword_1EA1A4A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A08);
  }
  return result;
}

void sub_1C0C07CA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0C07BAC();
    unint64_t v7 = a3(a1, &type metadata for FormatDerivedDataOptionReference.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0C07D0C()
{
  unint64_t result = qword_1EA1A4A18;
  if (!qword_1EA1A4A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A18);
  }
  return result;
}

unint64_t sub_1C0C07D60()
{
  unint64_t result = qword_1EA1A4A20;
  if (!qword_1EA1A4A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataOptionReference.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0C07E80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionReference.CodingKeys()
{
  return &type metadata for FormatDerivedDataOptionReference.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatDerivedDataOptionReference.Metadata()
{
  return &type metadata for FormatDerivedDataOptionReference.Metadata;
}

unint64_t sub_1C0C07ECC()
{
  unint64_t result = qword_1EA1A4A28;
  if (!qword_1EA1A4A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A28);
  }
  return result;
}

unint64_t sub_1C0C07F24()
{
  unint64_t result = qword_1EA1A4A30;
  if (!qword_1EA1A4A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A30);
  }
  return result;
}

unint64_t sub_1C0C07F7C()
{
  unint64_t result = qword_1EA1A4A38;
  if (!qword_1EA1A4A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A38);
  }
  return result;
}

unint64_t sub_1C0C07FD4()
{
  unint64_t result = qword_1EA1A4A40;
  if (!qword_1EA1A4A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A40);
  }
  return result;
}

unint64_t sub_1C0C0802C()
{
  unint64_t result = qword_1EA1A4A48;
  if (!qword_1EA1A4A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A48);
  }
  return result;
}

unint64_t sub_1C0C08084()
{
  unint64_t result = qword_1EA1A4A50;
  if (!qword_1EA1A4A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A50);
  }
  return result;
}

unint64_t sub_1C0C080DC()
{
  unint64_t result = qword_1EA1A4A58;
  if (!qword_1EA1A4A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A4A58);
  }
  return result;
}

uint64_t sub_1C0C08130(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F746164696C6176 && a2 == 0xE900000000000072 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t FormatWebEmbedData.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedData.feedItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C083DC(v1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem, a1, (uint64_t (*)(void))sub_1BFEE4C70);
}

uint64_t FormatWebEmbedData.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url;
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FormatWebEmbedData.indexFileURLPromise.getter()
{
  return swift_retain();
}

uint64_t FormatWebEmbedData.dataURLPromise.getter()
{
  return swift_retain();
}

uint64_t FormatWebEmbedData.dataVisualization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0C083DC(v1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization, a1, (uint64_t (*)(void))sub_1BFECFC20);
}

uint64_t sub_1C0C083DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FormatWebEmbedData.config.getter()
{
  return swift_retain();
}

uint64_t sub_1C0C08454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v47 = a4;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v45 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE171C(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v51 = (uint64_t)&v40 - v12;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE4C70(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v44 = (uint64_t *)((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v43 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v46 = a1;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 16);
  v41(v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url, a3, v13, v21);
  uint64_t v48 = v14;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v24(v23, 1, 1, v13);
  sub_1BFEE171C(0, (unint64_t *)&unk_1EB85AB50, (uint64_t (*)(uint64_t))sub_1BFF00BEC, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_indexFileURLPromise) = sub_1C151908C();
  uint64_t v42 = v24;
  v24(v23, 1, 1, v13);
  swift_allocObject();
  *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataURLPromise) = sub_1C151908C();
  uint64_t v25 = v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization;
  uint64_t v26 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  uint64_t v49 = v5;
  *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_config) = v47;
  if (v52)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v50, v53, v13);
    size_t v28 = v42;
    v42(v23, 1, 1, v13);
    uint64_t v29 = type metadata accessor for FeedHeadline(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v51, 1, 1, v29);
    uint64_t v30 = (uint64_t)v45;
    v27((uint64_t)v45, 1, 1, v26);
    uint64_t v31 = v43;
    v28(v43, 1, 1, v13);
    swift_allocObject();
    swift_retain();
    uint64_t v32 = sub_1C151908C();
    v28(v31, 1, 1, v13);
    swift_allocObject();
    uint64_t v33 = sub_1C151908C();
    uint64_t v34 = v44;
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v46, v52, v50, (uint64_t)v23, v32, v33, v51, v30, v44, 2u);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v53, v13);
    uint64_t v35 = type metadata accessor for FeedItem(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
    uint64_t v36 = v49;
    sub_1C0C08DF8((uint64_t)v34, v49 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v53, v13);
    uint64_t v36 = v49;
    uint64_t v37 = v49 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem;
    uint64_t v38 = type metadata accessor for FeedItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
  }
  return v36;
}

uint64_t FormatWebEmbedData.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFEE4A88(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem, (uint64_t (*)(void))sub_1BFEE4C70);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url;
  uint64_t v2 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  sub_1BFEE4A88(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization, (uint64_t (*)(void))sub_1BFECFC20);
  swift_release();
  return v0;
}

uint64_t FormatWebEmbedData.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFEE4A88(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_feedItem, (uint64_t (*)(void))sub_1BFEE4C70);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_url;
  uint64_t v2 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  sub_1BFEE4A88(v0 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization, (uint64_t (*)(void))sub_1BFECFC20);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C08C6C()
{
  return type metadata accessor for FormatWebEmbedData();
}

uint64_t type metadata accessor for FormatWebEmbedData()
{
  uint64_t result = qword_1EB866648;
  if (!qword_1EB866648) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0C08CC0()
{
  sub_1BFEE4C70(319);
  if (v0 <= 0x3F)
  {
    sub_1C1515FDC();
    if (v1 <= 0x3F)
    {
      sub_1BFECFC20(319);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for FormatWebEmbedData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatWebEmbedData);
}

uint64_t sub_1C0C08DF8(uint64_t a1, uint64_t a2)
{
  sub_1BFEE4C70(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t FormatGroupNodeMask.size.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

uint64_t FormatGroupNodeMask.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMask.style.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeMask.animation.getter()
{
  return swift_retain();
}

unint64_t FormatGroupNodeMask.size.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatGroupNodeMask.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatGroupNodeMask.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeMask.adjustments.modify())()
{
  return j__swift_endAccess;
}

void *FormatGroupNodeMask.__allocating_init(style:animation:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = *a3;
  long long v8[2] = a1;
  v8[3] = a2;
  swift_beginAccess();
  void v8[4] = v9;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

void *FormatGroupNodeMask.init(style:animation:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = *a3;
  v4[2] = a1;
  v4[3] = a2;
  swift_beginAccess();
  v4[4] = v6;
  swift_beginAccess();
  uint64_t v4[5] = a4;
  return v4;
}

uint64_t FormatGroupNodeMask.deinit()
{
  swift_release();
  swift_release();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatGroupNodeMask.__deallocating_deinit()
{
  swift_release();
  swift_release();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C091AC(uint64_t a1)
{
  uint64_t result = sub_1C0C0927C(&qword_1EA1A4A60);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C091F0(void *a1)
{
  a1[1] = sub_1C0C0927C(&qword_1EB87EF28);
  a1[2] = sub_1C0C0927C(&qword_1EB8602B0);
  uint64_t result = sub_1C0C0927C(&qword_1EA1A4A68);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0C0927C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatGroupNodeMask();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0C092BC(void *a1)
{
  return FormatGroupNodeMask.encode(to:)(a1);
}

uint64_t sub_1C0C092E0(void *a1, void *a2)
{
  return static FormatGroupNodeMask.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1C0C092EC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 32);
  *a2 = v4;
  return sub_1BFF35EA4(v4);
}

uint64_t sub_1C0C0933C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatGroupNodeMask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeMask);
}

uint64_t dispatch thunk of FormatGroupNodeMask.__allocating_init(style:animation:size:adjustments:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C0C093B8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_1C151D2DC();
      (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1u:
    case 2u:
    case 3u:
    case 7u:
    case 8u:
    case 0x13u:
      *(void *)a1 = *v3;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4u:
      uint64_t v10 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v11;
          uint64_t v12 = v3[3];
          *(void *)(a1 + 16) = v3[2];
          *(void *)(a1 + 24) = v12;
          *(unsigned char *)(a1 + 32) = *((unsigned char *)v3 + 32);
          uint64_t v13 = v3 + 5;
          unint64_t v14 = v3[6];
          swift_bridgeObjectRetain();
          if (v14 >= 0x11)
          {
            *(void *)(a1 + 40) = *v13;
            *(void *)(a1 + 48) = v14;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)v13;
          }
          goto LABEL_289;
        case 1u:
          uint64_t v158 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v158;
          uint64_t v159 = v3[3];
          *(void *)(a1 + 16) = v3[2];
          *(void *)(a1 + 24) = v159;
          *(unsigned char *)(a1 + 32) = *((unsigned char *)v3 + 32);
          uint64_t v160 = v3[6];
          *(void *)(a1 + 40) = v3[5];
          *(void *)(a1 + 48) = v160;
          uint64_t v161 = v3[8];
          *(void *)(a1 + 56) = v3[7];
          *(void *)(a1 + 64) = v161;
          CGRect v162 = v3 + 9;
          unint64_t v163 = v3[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v163 >= 0x11)
          {
            *(void *)(a1 + 72) = *v162;
            *(void *)(a1 + 80) = v163;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)v162;
          }
          goto LABEL_289;
        case 2u:
          uint64_t v164 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v164;
          CGRect v165 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v166 = v165[5];
          uint64_t v167 = a1 + v166;
          CGRect v168 = (char *)v3 + v166;
          CGRect v169 = v3;
          uint64_t v170 = sub_1C151DBAC();
          CGRect v171 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v170 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v172 = v170;
          uint64_t v3 = v169;
          v171(v167, v168, v172);
          *(void *)(a1 + v165[6]) = *(void *)((char *)v169 + v165[6]);
          uint64_t v173 = v165[7];
          uint64_t v174 = a1 + v173;
          uint64_t v175 = (uint64_t)v169 + v173;
          *(void *)uint64_t v174 = *(void *)v175;
          *(unsigned char *)(v174 + 8) = *(unsigned char *)(v175 + 8);
          uint64_t v176 = v165[8];
          uint64_t v177 = a1 + v176;
          CGRect v178 = (char *)v169 + v176;
          unint64_t v179 = *((void *)v178 + 1);
          if (v179 >= 0x11) {
            goto LABEL_87;
          }
          *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
          goto LABEL_289;
        case 3u:
          uint64_t v180 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v180;
          *(void *)(a1 + 16) = v3[2];
          *(unsigned char *)(a1 + 24) = *((unsigned char *)v3 + 24);
          uint64_t v181 = v3[5];
          *(void *)(a1 + 32) = v3[4];
          *(void *)(a1 + 40) = v181;
          *(void *)(a1 + 48) = v3[6];
          *(unsigned char *)(a1 + 56) = *((unsigned char *)v3 + 56);
          v652 = (int *)type metadata accessor for FeedHeadline(0);
          v662 = v3;
          uint64_t v182 = v652[10];
          CGRect v183 = (unsigned char *)(a1 + v182);
          CGRect v184 = (char *)v3 + v182;
          *CGRect v183 = *((unsigned char *)v3 + v182);
          v183[1] = *((unsigned char *)v3 + v182 + 1);
          CGRect v185 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v186 = v185[6];
          __dst = &v183[v186];
          CGRect v187 = &v184[v186];
          uint64_t v188 = (int *)type metadata accessor for SharedItem();
          uint64_t v639 = *((void *)v188 - 1);
          uint64_t v189 = *(unsigned int (**)(char *, uint64_t, int *))(v639 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v189(v187, 1, v188))
          {
            uint64_t v190 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v187, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            uint64_t v309 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(__dst, v187, v309);
            __dst[v188[5]] = v187[v188[5]];
            uint64_t v310 = v188[6];
            uint64_t v311 = *(void **)&v187[v310];
            *(void *)&__dst[v310] = v311;
            uint64_t v312 = v188[7];
            v647 = &__dst[v312];
            v637 = &v187[v312];
            uint64_t v313 = sub_1C1515FDC();
            uint64_t v314 = *(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16);
            id v315 = v311;
            v314(v647, v637, v313);
            (*(void (**)(char *, void, uint64_t, int *))(v639 + 56))(__dst, 0, 1, v188);
          }
          v183[v185[7]] = v184[v185[7]];
          v183[v185[8]] = v184[v185[8]];
          v183[v185[9]] = v184[v185[9]];
          v183[v185[10]] = v184[v185[10]];
          uint64_t v3 = v662;
          uint64_t v316 = v652[11];
          int v317 = (void *)(a1 + v316);
          uint64_t v318 = (char *)v662 + v316;
          uint64_t v319 = sub_1C151D2DC();
          uint64_t v320 = *(void *)(v319 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v320 + 48))(v318, 1, v319))
          {
            sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v317, v318, *(void *)(*(void *)(v321 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v320 + 16))(v317, v318, v319);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v320 + 56))(v317, 0, 1, v319);
          }
          uint64_t v350 = v652[12];
          uint64_t v351 = (void *)(a1 + v350);
          v352 = (void *)((char *)v662 + v350);
          unint64_t v353 = v352[1];
          if (v353 >= 0x11)
          {
            *uint64_t v351 = *v352;
            v351[1] = v353;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v351 = *(_OWORD *)v352;
          }
          uint64_t v354 = v652[13];
          unint64_t v355 = *(void *)((char *)v662 + v354);
          if (v355 >= 2)
          {
            if (v355 == 2)
            {
              *(void *)(a1 + v354) = 2;
            }
            else
            {
              *(void *)(a1 + v354) = v355;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)(a1 + v354) = v355;
          }
          uint64_t v412 = v652[14];
          v413 = *(void **)((char *)v662 + v412);
          *(void *)(a1 + v412) = v413;
          id v414 = v413;
          goto LABEL_289;
        case 4u:
          uint64_t v191 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v191;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)v3 + 16);
          uint64_t v192 = v3 + 3;
          unint64_t v193 = v3[4];
          if (v193 >= 0x11)
          {
            *(void *)(a1 + 24) = *v192;
            *(void *)(a1 + 32) = v193;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v192;
          }
          uint64_t v269 = v3[6];
          *(void *)(a1 + 40) = v3[5];
          *(void *)(a1 + 48) = v269;
          uint64_t v270 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v271 = v270[8];
          uint64_t v272 = a1 + v271;
          long long v273 = (char *)v3 + v271;
          uint64_t v274 = sub_1C1515FDC();
          uint64_t v275 = *(void *)(v274 - 8);
          v276 = *(void (**)(uint64_t, char *, uint64_t))(v275 + 16);
          swift_bridgeObjectRetain();
          v276(v272, v273, v274);
          uint64_t v277 = v270[9];
          long long v278 = (void *)(a1 + v277);
          long long v279 = (char *)v3 + v277;
          v646 = (void *)v274;
          v640 = (void (*)(char *, char *, void *))v276;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48))((char *)v3 + v277, 1, v274))
          {
            sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
          }
          else
          {
            v276((uint64_t)v278, v279, v274);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v275 + 56))(v278, 0, 1, v274);
          }
          *(void *)(a1 + v270[10]) = *(void *)((char *)v3 + v270[10]);
          *(void *)(a1 + v270[11]) = *(void *)((char *)v3 + v270[11]);
          v654 = v270;
          uint64_t v337 = v270[12];
          uint64_t v338 = (void *)(a1 + v337);
          v339 = (void *)((char *)v3 + v337);
          uint64_t v340 = type metadata accessor for FeedHeadline(0);
          uint64_t v341 = *(void *)(v340 - 8);
          uint64_t v342 = *(unsigned int (**)(void *, uint64_t, int *))(v341 + 48);
          uint64_t v343 = (int *)v340;
          swift_retain();
          swift_retain();
          if (v342(v339, 1, v343))
          {
            sub_1BFEEF440(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v338, v339, *(void *)(*(void *)(v344 - 8) + 64));
          }
          else
          {
            v636 = v343;
            uint64_t v638 = v341;
            v665 = v3;
            uint64_t v361 = v339[1];
            *uint64_t v338 = *v339;
            v338[1] = v361;
            v338[2] = v339[2];
            *((unsigned char *)v338 + 24) = *((unsigned char *)v339 + 24);
            uint64_t v362 = v339[5];
            v338[4] = v339[4];
            v338[5] = v362;
            v338[6] = v339[6];
            *((unsigned char *)v338 + 56) = *((unsigned char *)v339 + 56);
            uint64_t v363 = v343[10];
            uint64_t v364 = (char *)v338 + v363;
            uint64_t v365 = (char *)v339 + v363;
            *uint64_t v364 = *((unsigned char *)v339 + v363);
            v364[1] = *((unsigned char *)v339 + v363 + 1);
            v635 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v366 = v635[6];
            v634 = &v364[v366];
            uint64_t v367 = &v365[v366];
            uint64_t v368 = (int *)type metadata accessor for SharedItem();
            uint64_t v633 = *((void *)v368 - 1);
            uint64_t v369 = *(unsigned int (**)(char *, uint64_t, int *))(v633 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v369(v367, 1, v368))
            {
              uint64_t v370 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v634, v367, *(void *)(*(void *)(v370 - 8) + 64));
            }
            else
            {
              uint64_t v440 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 16))(v634, v367, v440);
              v634[v368[5]] = v367[v368[5]];
              uint64_t v441 = v368[6];
              v442 = *(void **)&v367[v441];
              *(void *)&v634[v441] = v442;
              uint64_t v443 = v368[7];
              v444 = &v634[v443];
              v445 = &v367[v443];
              id v446 = v442;
              v640(v444, v445, v646);
              (*(void (**)(char *, void, uint64_t, int *))(v633 + 56))(v634, 0, 1, v368);
            }
            v364[v635[7]] = v365[v635[7]];
            v364[v635[8]] = v365[v635[8]];
            v364[v635[9]] = v365[v635[9]];
            v364[v635[10]] = v365[v635[10]];
            uint64_t v447 = v636[11];
            v448 = (char *)v338 + v447;
            v449 = (char *)v339 + v447;
            uint64_t v450 = sub_1C151D2DC();
            uint64_t v451 = *(void *)(v450 - 8);
            uint64_t v3 = v665;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v451 + 48))(v449, 1, v450))
            {
              sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v448, v449, *(void *)(*(void *)(v452 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v451 + 16))(v448, v449, v450);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v451 + 56))(v448, 0, 1, v450);
            }
            uint64_t v453 = v636[12];
            v454 = (void *)((char *)v338 + v453);
            v455 = (void *)((char *)v339 + v453);
            unint64_t v456 = v455[1];
            if (v456 >= 0x11)
            {
              void *v454 = *v455;
              v454[1] = v456;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v454 = *(_OWORD *)v455;
            }
            uint64_t v457 = v636[13];
            unint64_t v458 = *(void *)((char *)v339 + v457);
            if (v458 >= 2)
            {
              if (v458 == 2)
              {
                *(void *)((char *)v338 + v457) = 2;
              }
              else
              {
                *(void *)((char *)v338 + v457) = v458;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v338 + v457) = v458;
            }
            uint64_t v489 = v636[14];
            v490 = *(void **)((char *)v339 + v489);
            *(void *)((char *)v338 + v489) = v490;
            v491 = *(void (**)(void *, void, uint64_t, int *))(v638 + 56);
            id v492 = v490;
            v491(v338, 0, 1, v636);
          }
          uint64_t v493 = v654[13];
          v494 = (void *)(a1 + v493);
          v495 = (void *)((char *)v3 + v493);
          uint64_t v496 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v497 = *(void *)(v496 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v497 + 48))(v495, 1, v496))
          {
            sub_1BFEEF440(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v494, v495, *(void *)(*(void *)(v498 - 8) + 64));
            v499 = v654;
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v501 = *v495;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v502 = v495[1];
              void *v494 = v501;
              v494[1] = v502;
              uint64_t v503 = type metadata accessor for GenericDataVisualization();
              uint64_t v504 = *(int *)(v503 + 20);
              v669 = v3;
              v505 = (char *)v494 + v504;
              v506 = (char *)v495 + v504;
              swift_bridgeObjectRetain();
              v507 = v505;
              uint64_t v3 = v669;
              v640(v507, v506, v646);
              *(void *)((char *)v494 + *(int *)(v503 + 24)) = *(uint64_t *)((char *)v495 + *(int *)(v503 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              void *v494 = v501;
              swift_retain();
            }
            v499 = v654;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v497 + 56))(v494, 0, 1, v496);
          }
          *(unsigned char *)(a1 + v499[14]) = *((unsigned char *)v3 + v499[14]);
          goto LABEL_289;
        case 5u:
          uint64_t v194 = (void *)*v3;
          uint64_t v195 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v195;
          *(void *)(a1 + 16) = v3[2];
          *(_WORD *)(a1 + 24) = *((_WORD *)v3 + 12);
          *(void *)(a1 + 32) = v3[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)v3 + 40);
          int v196 = (void *)v3[7];
          *(void *)(a1 + 48) = v3[6];
          *(void *)(a1 + 56) = v196;
          *(unsigned char *)(a1 + 64) = *((unsigned char *)v3 + 64);
          uint64_t v197 = v3[10];
          id v198 = v194;
          swift_bridgeObjectRetain();
          id v199 = v196;
          if (v197 == 1)
          {
            long long v200 = *(_OWORD *)(v3 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 9);
            *(_OWORD *)(a1 + 88) = v200;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(v3 + 13);
          }
          else
          {
            *(void *)(a1 + 72) = v3[9];
            *(void *)(a1 + 80) = v197;
            uint64_t v281 = v3[12];
            *(void *)(a1 + 88) = v3[11];
            *(void *)(a1 + 96) = v281;
            long long v283 = (void *)v3[13];
            uint64_t v282 = v3[14];
            *(void *)(a1 + 104) = v283;
            *(void *)(a1 + 112) = v282;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v284 = v283;
          }
          uint64_t v285 = v3 + 15;
          unint64_t v286 = v3[16];
          if (v286 >= 0x11)
          {
            *(void *)(a1 + 120) = *v285;
            *(void *)(a1 + 128) = v286;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v285;
          }
          *(unsigned char *)(a1 + 136) = *((unsigned char *)v3 + 136);
          goto LABEL_289;
        case 6u:
          int v201 = *((unsigned __int8 *)v3 + 281);
          if (v201 == 2)
          {
            uint64_t v378 = v3[1];
            *(void *)a1 = *v3;
            *(void *)(a1 + 8) = v378;
            *(void *)(a1 + 16) = v3[2];
            *(unsigned char *)(a1 + 24) = *((unsigned char *)v3 + 24);
            *(void *)(a1 + 32) = v3[4];
            *(unsigned char *)(a1 + 40) = *((unsigned char *)v3 + 40);
            uint64_t v379 = v3[7];
            *(void *)(a1 + 48) = v3[6];
            *(void *)(a1 + 56) = v379;
            uint64_t v380 = v3[9];
            *(void *)(a1 + 64) = v3[8];
            *(void *)(a1 + 72) = v380;
            uint64_t v381 = v3[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v381 != 1)
            {
              *(void *)(a1 + 80) = v3[10];
              *(void *)(a1 + 88) = v381;
              uint64_t v422 = v3[15];
              swift_bridgeObjectRetain();
              if (v422)
              {
                uint64_t v423 = v3[16];
                *(void *)(a1 + 120) = v422;
                *(void *)(a1 + 128) = v423;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v422 - 8))(a1 + 96, (uint64_t)(v3 + 12), v422);
                *(void *)(a1 + 136) = v3[17];
              }
              else
              {
                long long v525 = *((_OWORD *)v3 + 7);
                *(_OWORD *)(a1 + 96) = *((_OWORD *)v3 + 6);
                *(_OWORD *)(a1 + 112) = v525;
                *(_OWORD *)(a1 + 128) = *((_OWORD *)v3 + 8);
              }
              *(unsigned char *)(a1 + 144) = *((unsigned char *)v3 + 144);
              goto LABEL_225;
            }
            v382 = (_OWORD *)(a1 + 80);
            v383 = v3 + 10;
            long long v384 = *((_OWORD *)v3 + 8);
            *(_OWORD *)(a1 + 112) = *((_OWORD *)v3 + 7);
            *(_OWORD *)(a1 + 128) = v384;
            *(unsigned char *)(a1 + 144) = *((unsigned char *)v3 + 144);
LABEL_196:
            long long v462 = v383[1];
            _OWORD *v382 = *v383;
            v382[1] = v462;
            goto LABEL_225;
          }
          if (v201 != 1)
          {
            v385 = (void *)*v3;
            uint64_t v386 = v3[1];
            *(void *)a1 = *v3;
            *(void *)(a1 + 8) = v386;
            *(void *)(a1 + 16) = v3[2];
            *(_WORD *)(a1 + 24) = *((_WORD *)v3 + 12);
            *(void *)(a1 + 32) = v3[4];
            *(unsigned char *)(a1 + 40) = *((unsigned char *)v3 + 40);
            v387 = (void *)v3[7];
            *(void *)(a1 + 48) = v3[6];
            *(void *)(a1 + 56) = v387;
            *(unsigned char *)(a1 + 64) = *((unsigned char *)v3 + 64);
            uint64_t v388 = v3[10];
            id v389 = v385;
            swift_bridgeObjectRetain();
            id v390 = v387;
            if (v388 == 1)
            {
              long long v391 = *(_OWORD *)(v3 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 9);
              *(_OWORD *)(a1 + 88) = v391;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(v3 + 13);
            }
            else
            {
              *(void *)(a1 + 72) = v3[9];
              *(void *)(a1 + 80) = v388;
              uint64_t v424 = v3[12];
              *(void *)(a1 + 88) = v3[11];
              *(void *)(a1 + 96) = v424;
              uint64_t v426 = (void *)v3[13];
              uint64_t v425 = v3[14];
              *(void *)(a1 + 104) = v426;
              *(void *)(a1 + 112) = v425;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v427 = v426;
            }
            uint64_t v428 = v3 + 15;
            unint64_t v429 = v3[16];
            if (v429 >= 0x11)
            {
              *(void *)(a1 + 120) = *v428;
              *(void *)(a1 + 128) = v429;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v428;
            }
            *(unsigned char *)(a1 + 136) = *((unsigned char *)v3 + 136);
            goto LABEL_225;
          }
          uint64_t v202 = (void *)*v3;
          uint64_t v203 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v203;
          *(void *)(a1 + 16) = v3[2];
          *(_WORD *)(a1 + 24) = *((_WORD *)v3 + 12);
          *(void *)(a1 + 32) = v3[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)v3 + 40);
          uint64_t v204 = (void *)v3[7];
          *(void *)(a1 + 48) = v3[6];
          *(void *)(a1 + 56) = v204;
          *(unsigned char *)(a1 + 64) = *((unsigned char *)v3 + 64);
          uint64_t v205 = v3[10];
          id v206 = v202;
          swift_bridgeObjectRetain();
          id v207 = v204;
          if (v205 == 1)
          {
            long long v208 = *(_OWORD *)(v3 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 9);
            *(_OWORD *)(a1 + 88) = v208;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(v3 + 13);
          }
          else
          {
            *(void *)(a1 + 72) = v3[9];
            *(void *)(a1 + 80) = v205;
            uint64_t v416 = v3[12];
            *(void *)(a1 + 88) = v3[11];
            *(void *)(a1 + 96) = v416;
            v418 = (void *)v3[13];
            uint64_t v417 = v3[14];
            *(void *)(a1 + 104) = v418;
            *(void *)(a1 + 112) = v417;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v419 = v418;
          }
          v420 = v3 + 15;
          unint64_t v421 = v3[16];
          if (v421 >= 0x11)
          {
            *(void *)(a1 + 120) = *v420;
            *(void *)(a1 + 128) = v421;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v420;
          }
          v383 = v3 + 18;
          v430 = (void *)v3[18];
          *(unsigned char *)(a1 + 136) = *((unsigned char *)v3 + 136);
          if (!v430)
          {
            v382 = (_OWORD *)(a1 + 144);
            long long v459 = *((_OWORD *)v3 + 16);
            *(_OWORD *)(a1 + 240) = *((_OWORD *)v3 + 15);
            *(_OWORD *)(a1 + 256) = v459;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)v3 + 265);
            long long v460 = *((_OWORD *)v3 + 12);
            *(_OWORD *)(a1 + 176) = *((_OWORD *)v3 + 11);
            *(_OWORD *)(a1 + 192) = v460;
            long long v461 = *((_OWORD *)v3 + 14);
            *(_OWORD *)(a1 + 208) = *((_OWORD *)v3 + 13);
            *(_OWORD *)(a1 + 224) = v461;
            goto LABEL_196;
          }
          uint64_t v431 = v3[19];
          uint64_t v432 = v3[20];
          *(void *)(a1 + 144) = v430;
          *(void *)(a1 + 152) = v431;
          *(void *)(a1 + 160) = v432;
          *(_WORD *)(a1 + 168) = *((_WORD *)v3 + 84);
          *(void *)(a1 + 176) = v3[22];
          *(unsigned char *)(a1 + 184) = *((unsigned char *)v3 + 184);
          v433 = (void *)v3[25];
          *(void *)(a1 + 192) = v3[24];
          *(void *)(a1 + 200) = v433;
          *(unsigned char *)(a1 + 208) = *((unsigned char *)v3 + 208);
          uint64_t v434 = v3[28];
          id v435 = v430;
          swift_bridgeObjectRetain();
          id v436 = v433;
          if (v434 == 1)
          {
            long long v437 = *(_OWORD *)(v3 + 29);
            *(_OWORD *)(a1 + 216) = *(_OWORD *)(v3 + 27);
            *(_OWORD *)(a1 + 232) = v437;
            *(_OWORD *)(a1 + 248) = *(_OWORD *)(v3 + 31);
          }
          else
          {
            *(void *)(a1 + 216) = v3[27];
            *(void *)(a1 + 224) = v434;
            uint64_t v463 = v3[30];
            *(void *)(a1 + 232) = v3[29];
            *(void *)(a1 + 240) = v463;
            v465 = (void *)v3[31];
            uint64_t v464 = v3[32];
            *(void *)(a1 + 248) = v465;
            *(void *)(a1 + 256) = v464;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v466 = v465;
          }
          v467 = v3 + 33;
          unint64_t v468 = v3[34];
          if (v468 >= 0x11)
          {
            *(void *)(a1 + 264) = *v467;
            *(void *)(a1 + 272) = v468;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 264) = *(_OWORD *)v467;
          }
          *(unsigned char *)(a1 + 280) = *((unsigned char *)v3 + 280);
LABEL_225:
          *(unsigned char *)(a1 + 281) = v201;
LABEL_289:
          swift_storeEnumTagMultiPayload();
LABEL_290:
          v676 = (int *)type metadata accessor for FormatItemNodeData();
          uint64_t v607 = v676[5];
          uint64_t v608 = a1 + v607;
          v609 = (char *)v3 + v607;
          uint64_t v610 = *(void *)((char *)v3 + v607 + 8);
          *(void *)uint64_t v608 = *(void *)((char *)v3 + v607);
          *(void *)(v608 + 8) = v610;
          uint64_t v611 = *(void *)((char *)v3 + v607 + 24);
          *(void *)(v608 + 16) = *(void *)((char *)v3 + v607 + 16);
          *(void *)(v608 + 24) = v611;
          uint64_t v612 = *(void *)((char *)v3 + v607 + 40);
          *(void *)(v608 + 32) = *(void *)((char *)v3 + v607 + 32);
          *(void *)(v608 + 40) = v612;
          v613 = (void *)((char *)v3 + v607 + 48);
          unint64_t v614 = *(void *)((char *)v3 + v607 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v615 = v3;
          if (v614 >= 0xF)
          {
            *(void *)(v608 + 48) = *v613;
            *(void *)(v608 + 56) = v614;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v608 + 48) = *(_OWORD *)v613;
          }
          uint64_t v616 = *((void *)v609 + 9);
          *(void *)(v608 + 64) = *((void *)v609 + 8);
          *(void *)(v608 + 72) = v616;
          uint64_t v617 = *((void *)v609 + 11);
          *(void *)(v608 + 80) = *((void *)v609 + 10);
          *(void *)(v608 + 88) = v617;
          uint64_t v618 = *((void *)v609 + 13);
          *(void *)(v608 + 96) = *((void *)v609 + 12);
          *(void *)(v608 + 104) = v618;
          *(void *)(v608 + 112) = *((void *)v609 + 14);
          *(unsigned char *)(v608 + 120) = v609[120];
          uint64_t v619 = v676[6];
          unint64_t v620 = *(void *)((char *)v615 + v619);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF45054(v620);
          *(void *)(a1 + v619) = v620;
          uint64_t v621 = v676[7];
          uint64_t v622 = a1 + v621;
          uint64_t v623 = (uint64_t)v615 + v621;
          uint64_t v624 = sub_1C151AC1C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v624 - 8) + 16))(v622, v623, v624);
          uint64_t v625 = v676[8];
          v626 = (void *)(a1 + v625);
          v627 = (void *)((char *)v615 + v625);
          uint64_t v628 = v627[1];
          if (v628)
          {
            void *v626 = *v627;
            v626[1] = v628;
            v626[2] = v627[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v626 = *(_OWORD *)v627;
            v626[2] = v627[2];
          }
LABEL_302:
          swift_storeEnumTagMultiPayload();
          return a1;
        case 7u:
          uint64_t v209 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v209;
          *(void *)(a1 + 16) = v3[2];
          *(unsigned char *)(a1 + 24) = *((unsigned char *)v3 + 24);
          *(void *)(a1 + 32) = v3[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)v3 + 40);
          uint64_t v210 = v3[7];
          *(void *)(a1 + 48) = v3[6];
          *(void *)(a1 + 56) = v210;
          uint64_t v211 = v3[9];
          *(void *)(a1 + 64) = v3[8];
          *(void *)(a1 + 72) = v211;
          uint64_t v212 = v3[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v212 == 1)
          {
            long long v213 = *((_OWORD *)v3 + 8);
            *(_OWORD *)(a1 + 112) = *((_OWORD *)v3 + 7);
            *(_OWORD *)(a1 + 128) = v213;
            *(unsigned char *)(a1 + 144) = *((unsigned char *)v3 + 144);
            long long v214 = *((_OWORD *)v3 + 6);
            *(_OWORD *)(a1 + 80) = *((_OWORD *)v3 + 5);
            *(_OWORD *)(a1 + 96) = v214;
          }
          else
          {
            *(void *)(a1 + 80) = v3[10];
            *(void *)(a1 + 88) = v212;
            uint64_t v287 = v3[15];
            swift_bridgeObjectRetain();
            if (v287)
            {
              uint64_t v288 = v3[16];
              *(void *)(a1 + 120) = v287;
              *(void *)(a1 + 128) = v288;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v287 - 8))(a1 + 96, (uint64_t)(v3 + 12), v287);
              *(void *)(a1 + 136) = v3[17];
            }
            else
            {
              long long v415 = *((_OWORD *)v3 + 7);
              *(_OWORD *)(a1 + 96) = *((_OWORD *)v3 + 6);
              *(_OWORD *)(a1 + 112) = v415;
              *(_OWORD *)(a1 + 128) = *((_OWORD *)v3 + 8);
            }
            *(unsigned char *)(a1 + 144) = *((unsigned char *)v3 + 144);
          }
          goto LABEL_289;
        case 8u:
          uint64_t v215 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v215;
          uint64_t v216 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          uint64_t v217 = (void *)(a1 + v216);
          v663 = v3;
          uint64_t v218 = (void *)((char *)v3 + v216);
          uint64_t v219 = *(void *)((char *)v3 + v216);
          uint64_t v220 = v218[1];
          void *v217 = v219;
          v217[1] = v220;
          uint64_t v221 = v218[3];
          v217[2] = v218[2];
          v217[3] = v221;
          uint64_t v222 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v223 = *(int *)(v222 + 24);
          v645 = (char *)v217 + v223;
          v653 = (int *)v222;
          uint64_t v224 = (char *)v218 + v223;
          uint64_t v225 = type metadata accessor for FormatCustomItem.Action();
          __dsta = *(void **)(v225 - 8);
          uint64_t v226 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v226(v224, 1, v225))
          {
            sub_1BFEEF440(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v645, v224, *(void *)(*(void *)(v227 - 8) + 64));
          }
          else
          {
            uint64_t v322 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v645, v224, v322);
            ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v645, 0, 1, v225);
          }
          *(void *)((char *)v217 + v653[7]) = *(void *)((char *)v218 + v653[7]);
          swift_bridgeObjectRetain();
          goto LABEL_118;
        case 9u:
          uint64_t v228 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v228;
          uint64_t v229 = v3[3];
          *(void *)(a1 + 16) = v3[2];
          *(void *)(a1 + 24) = v229;
          uint64_t v230 = v3[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v230)
          {
            uint64_t v231 = v3[8];
            *(void *)(a1 + 56) = v230;
            *(void *)(a1 + 64) = v231;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v230 - 8))(a1 + 32, (uint64_t)(v3 + 4), v230);
          }
          else
          {
            long long v323 = *((_OWORD *)v3 + 3);
            *(_OWORD *)(a1 + 32) = *((_OWORD *)v3 + 2);
            *(_OWORD *)(a1 + 48) = v323;
            *(void *)(a1 + 64) = v3[8];
          }
          uint64_t v324 = (_OWORD *)(a1 + 72);
          uint64_t v325 = v3 + 9;
          uint64_t v326 = v3[12];
          if (v326)
          {
            uint64_t v327 = v3[13];
            *(void *)(a1 + 96) = v326;
            *(void *)(a1 + 104) = v327;
            (**(void (***)(_OWORD *, _OWORD *))(v326 - 8))(v324, v325);
          }
          else
          {
            long long v356 = *(_OWORD *)(v3 + 11);
            *uint64_t v324 = *v325;
            *(_OWORD *)(a1 + 88) = v356;
            *(void *)(a1 + 104) = v3[13];
          }
          uint64_t v357 = (_OWORD *)(a1 + 112);
          v358 = v3 + 14;
          uint64_t v359 = v3[17];
          if (v359)
          {
            uint64_t v360 = v3[18];
            *(void *)(a1 + 136) = v359;
            *(void *)(a1 + 144) = v360;
            (**(void (***)(_OWORD *, _OWORD *))(v359 - 8))(v357, v358);
          }
          else
          {
            long long v376 = *((_OWORD *)v3 + 8);
            *uint64_t v357 = *v358;
            *(_OWORD *)(a1 + 128) = v376;
            *(void *)(a1 + 144) = v3[18];
          }
          goto LABEL_289;
        case 0xAu:
          uint64_t v232 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v232;
          long long v233 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v234 = v233[5];
          uint64_t v235 = a1 + v234;
          long long v236 = (char *)v3 + v234;
          uint64_t v237 = sub_1C151959C();
          long long v238 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v237 - 8) + 16);
          swift_bridgeObjectRetain();
          v238(v235, v236, v237);
          *(void *)(a1 + v233[6]) = *(void *)((char *)v3 + v233[6]);
          uint64_t v239 = v233[7];
          uint64_t v240 = a1 + v239;
          uint64_t v241 = (char *)v3 + v239;
          *(void *)uint64_t v240 = *(void *)v241;
          *(unsigned char *)(v240 + 8) = v241[8];
          uint64_t v242 = v233[8];
          uint64_t v177 = a1 + v242;
          CGRect v178 = (char *)v3 + v242;
          unint64_t v179 = *((void *)v178 + 1);
          if (v179 >= 0x11)
          {
LABEL_87:
            *(void *)uint64_t v177 = *(void *)v178;
            *(void *)(v177 + 8) = v179;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
          }
          goto LABEL_289;
        case 0xBu:
          *(void *)a1 = *v3;
          swift_retain();
          goto LABEL_289;
        case 0xCu:
          uint64_t v243 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v243;
          uint64_t v244 = v3[3];
          *(void *)(a1 + 16) = v3[2];
          *(void *)(a1 + 24) = v244;
          *(unsigned char *)(a1 + 32) = *((unsigned char *)v3 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_289;
        case 0xDu:
          uint64_t v245 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v245;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)v3 + 16);
          uint64_t v246 = v3 + 3;
          unint64_t v247 = v3[4];
          if (v247 >= 0x11)
          {
            *(void *)(a1 + 24) = *v246;
            *(void *)(a1 + 32) = v247;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v246;
          }
          uint64_t v289 = v3[6];
          *(void *)(a1 + 40) = v3[5];
          *(void *)(a1 + 48) = v289;
          long long v290 = (void *)v3[8];
          *(void *)(a1 + 56) = v3[7];
          *(void *)(a1 + 64) = v290;
          *(unsigned char *)(a1 + 72) = *((unsigned char *)v3 + 72);
          *(void *)(a1 + 80) = v3[10];
          uint64_t v291 = v3[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v292 = v290;
          swift_bridgeObjectRetain();
          if (v291)
          {
            uint64_t v293 = v3[15];
            *(void *)(a1 + 112) = v291;
            *(void *)(a1 + 120) = v293;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v291 - 8))(a1 + 88, (uint64_t)(v3 + 11), v291);
          }
          else
          {
            long long v345 = *(_OWORD *)(v3 + 13);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(v3 + 11);
            *(_OWORD *)(a1 + 104) = v345;
            *(void *)(a1 + 120) = v3[15];
          }
          long long v346 = (_OWORD *)(a1 + 128);
          uint64_t v347 = v3 + 16;
          uint64_t v348 = v3[19];
          if (v348)
          {
            uint64_t v349 = v3[20];
            *(void *)(a1 + 152) = v348;
            *(void *)(a1 + 160) = v349;
            (**(void (***)(_OWORD *, _OWORD *))(v348 - 8))(v346, v347);
          }
          else
          {
            long long v371 = *((_OWORD *)v3 + 9);
            *long long v346 = *v347;
            *(_OWORD *)(a1 + 144) = v371;
            *(void *)(a1 + 160) = v3[20];
          }
          int v372 = (_OWORD *)(a1 + 168);
          uint64_t v373 = v3 + 21;
          uint64_t v374 = v3[24];
          if (v374)
          {
            uint64_t v375 = v3[25];
            *(void *)(a1 + 192) = v374;
            *(void *)(a1 + 200) = v375;
            (**(void (***)(_OWORD *, _OWORD *))(v374 - 8))(v372, v373);
          }
          else
          {
            long long v377 = *(_OWORD *)(v3 + 23);
            *int v372 = *v373;
            *(_OWORD *)(a1 + 184) = v377;
            *(void *)(a1 + 200) = v3[25];
          }
          goto LABEL_289;
        case 0xEu:
          uint64_t v248 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v248;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)v3 + 16);
          v249 = v3 + 3;
          unint64_t v250 = v3[4];
          if (v250 >= 0x11)
          {
            *(void *)(a1 + 24) = *v249;
            *(void *)(a1 + 32) = v250;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v249;
          }
          uint64_t v294 = v3[6];
          *(void *)(a1 + 40) = v3[5];
          *(void *)(a1 + 48) = v294;
          *(void *)(a1 + 56) = v3[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_289;
        case 0xFu:
          uint64_t v251 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v251;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)v3 + 16);
          unint64_t v252 = v3 + 3;
          unint64_t v253 = v3[4];
          if (v253 >= 0x11)
          {
            *(void *)(a1 + 24) = *v252;
            *(void *)(a1 + 32) = v253;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v252;
          }
          break;
        case 0x10u:
          uint64_t v254 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v254;
          uint64_t v255 = v3[3];
          *(void *)(a1 + 16) = v3[2];
          *(void *)(a1 + 24) = v255;
          uint64_t v256 = v3[5];
          *(void *)(a1 + 32) = v3[4];
          *(void *)(a1 + 40) = v256;
          *(_WORD *)(a1 + 48) = *((_WORD *)v3 + 24);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(v3 + 7);
          uint64_t v257 = v3[10];
          *(void *)(a1 + 72) = v3[9];
          *(void *)(a1 + 80) = v257;
          uint64_t v258 = v3[12];
          *(void *)(a1 + 88) = v3[11];
          *(void *)(a1 + 96) = v258;
          *(void *)(a1 + 104) = v3[13];
          *(unsigned char *)(a1 + 112) = *((unsigned char *)v3 + 112);
          uint64_t v259 = v3[16];
          *(void *)(a1 + 120) = v3[15];
          *(void *)(a1 + 128) = v259;
          *(unsigned char *)(a1 + 136) = *((unsigned char *)v3 + 136);
          uint64_t v260 = v3[19];
          *(void *)(a1 + 144) = v3[18];
          *(void *)(a1 + 152) = v260;
          uint64_t v261 = v3[21];
          *(void *)(a1 + 160) = v3[20];
          *(void *)(a1 + 168) = v261;
          *(unsigned char *)(a1 + 184) = *((unsigned char *)v3 + 184);
          *(void *)(a1 + 176) = v3[22];
          uint64_t v262 = v3[25];
          *(void *)(a1 + 192) = v3[24];
          *(void *)(a1 + 200) = v262;
          *(unsigned char *)(a1 + 224) = *((unsigned char *)v3 + 224);
          uint64_t v263 = v3[27];
          *(void *)(a1 + 208) = v3[26];
          *(void *)(a1 + 216) = v263;
          uint64_t v264 = v3 + 29;
          v663 = v3;
          unint64_t v265 = v3[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v265 >= 0x11)
          {
            *(void *)(a1 + 232) = *v264;
            *(void *)(a1 + 240) = v265;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 232) = *(_OWORD *)v264;
          }
LABEL_118:
          swift_storeEnumTagMultiPayload();
          uint64_t v3 = v663;
          goto LABEL_290;
        default:
          memcpy((void *)a1, v3, *(void *)(*(void *)(v10 - 8) + 64));
          goto LABEL_290;
      }
      break;
    case 5u:
      uint64_t v15 = v3[1];
      *(void *)a1 = *v3;
      *(void *)(a1 + 8) = v15;
      uint64_t v16 = v3[3];
      *(void *)(a1 + 16) = v3[2];
      *(void *)(a1 + 24) = v16;
      uint64_t v17 = v3[5];
      *(void *)(a1 + 32) = v3[4];
      *(void *)(a1 + 40) = v17;
      uint64_t v18 = v3[7];
      *(void *)(a1 + 48) = v3[6];
      *(void *)(a1 + 56) = v18;
      uint64_t v19 = v3[9];
      *(void *)(a1 + 64) = v3[8];
      *(void *)(a1 + 72) = v19;
      *(unsigned char *)(a1 + 80) = *((unsigned char *)v3 + 80);
      uint64_t v20 = v3[12];
      *(void *)(a1 + 88) = v3[11];
      *(void *)(a1 + 96) = v20;
      *(unsigned char *)(a1 + 104) = *((unsigned char *)v3 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 6u:
      uint64_t v21 = type metadata accessor for FormatAction();
      uint64_t v672 = v21;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(void *)a1 = *v3;
          uint64_t v22 = (id *)(v3 + 1);
          unsigned int v23 = *((unsigned __int8 *)v3 + 16);
          swift_bridgeObjectRetain();
          if (v23 <= 0xFD)
          {
            id v157 = *v22;
            sub_1BFF43A68(*v22, v23);
            *(void *)(a1 + 8) = v157;
            *(unsigned char *)(a1 + 16) = v23;
          }
          else
          {
            *(void *)(a1 + 8) = *v22;
            *(unsigned char *)(a1 + 16) = *((unsigned char *)v3 + 16);
          }
          goto LABEL_230;
        case 1u:
          long long v111 = (void *)*v3;
          uint64_t v112 = v3[1];
          uint64_t v113 = v3[2];
          uint64_t v114 = v3[3];
          uint64_t v115 = v3[4];
          uint64_t v116 = v3;
          char v117 = *((unsigned char *)v3 + 41);
          unsigned __int8 v118 = *((unsigned char *)v116 + 40);
          sub_1BFF43AA4(v111, v112, v113, v114, v115, v118, v117);
          *(void *)a1 = v111;
          *(void *)(a1 + 8) = v112;
          *(void *)(a1 + 16) = v113;
          *(void *)(a1 + 24) = v114;
          *(void *)(a1 + 32) = v115;
          *(unsigned char *)(a1 + 40) = v118;
          *(unsigned char *)(a1 + 41) = v117;
          uint64_t v3 = v116;
          int v119 = (void *)v116[7];
          *(void *)(a1 + 48) = v116[6];
          LOBYTE(v112) = *((unsigned char *)v116 + 64);
          swift_bridgeObjectRetain();
          sub_1BFF43A68(v119, v112);
          *(void *)(a1 + 56) = v119;
          *(unsigned char *)(a1 + 64) = v112;
          goto LABEL_230;
        case 2u:
          *(void *)a1 = *v3;
          swift_retain();
          goto LABEL_230;
        case 4u:
          uint64_t v120 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v120;
          uint64_t v121 = v3[3];
          *(void *)(a1 + 16) = v3[2];
          *(void *)(a1 + 24) = v121;
          uint64_t v122 = v3[5];
          *(void *)(a1 + 32) = v3[4];
          *(void *)(a1 + 40) = v122;
          uint64_t v123 = v3[6];
          uint64_t v124 = v3[7];
          uint64_t v125 = v3[8];
          uint64_t v126 = v3[9];
          char v127 = *((unsigned char *)v3 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF429DC(v123, v124, v125, v126, v127);
          *(void *)(a1 + 48) = v123;
          *(void *)(a1 + 56) = v124;
          *(void *)(a1 + 64) = v125;
          *(void *)(a1 + 72) = v126;
          *(unsigned char *)(a1 + 80) = v127;
          uint64_t v128 = v3[12];
          *(void *)(a1 + 88) = v3[11];
          *(void *)(a1 + 96) = v128;
          uint64_t v129 = v3[14];
          *(void *)(a1 + 104) = v3[13];
          *(void *)(a1 + 112) = v129;
          *(void *)(a1 + 120) = v3[15];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_230;
        case 5u:
          uint64_t v130 = type metadata accessor for FormatPurchaseData(0);
          int v131 = swift_getEnumCaseMultiPayload();
          if (v131 == 1)
          {
            uint64_t v266 = type metadata accessor for FormatPurchaseLandingPageData();
            uint64_t v267 = *(void *)(v266 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v267 + 48))(v3, 1, v266))
            {
              sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
              memcpy((void *)a1, v3, *(void *)(*(void *)(v268 - 8) + 64));
            }
            else
            {
              uint64_t v328 = v3[1];
              *(void *)a1 = *v3;
              *(void *)(a1 + 8) = v328;
              uint64_t v329 = *(int *)(v266 + 20);
              uint64_t v330 = (void *)(a1 + v329);
              v664 = v3;
              v331 = (char *)v3 + v329;
              uint64_t v332 = type metadata accessor for FormatPostPurchaseData();
              uint64_t v333 = *(void *)(v332 - 8);
              uint64_t v334 = *(unsigned int (**)(char *, uint64_t, void *))(v333 + 48);
              v335 = (void *)v332;
              swift_bridgeObjectRetain();
              if (v334(v331, 1, v335))
              {
                sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                memcpy(v330, v331, *(void *)(*(void *)(v336 - 8) + 64));
              }
              else
              {
                v655 = v335;
                uint64_t v438 = sub_1C1515FDC();
                uint64_t v439 = *(void *)(v438 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v439 + 48))(v331, 2, v438))
                {
                  memcpy(v330, v331, *(void *)(v333 + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v439 + 16))(v330, v331, v438);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v439 + 56))(v330, 0, 2, v438);
                }
                (*(void (**)(void *, void, uint64_t, void *))(v333 + 56))(v330, 0, 1, v655);
              }
              uint64_t v3 = v664;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v267 + 56))(a1, 0, 1, v266);
            }
          }
          else
          {
            if (v131)
            {
              memcpy((void *)a1, v3, *(void *)(*(void *)(v130 - 8) + 64));
              goto LABEL_230;
            }
            uint64_t v132 = v3[1];
            *(void *)a1 = *v3;
            *(void *)(a1 + 8) = v132;
            uint64_t v133 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
            uint64_t v134 = (void *)(a1 + v133);
            uint64_t v135 = v3;
            uint64_t v136 = (char *)v3 + v133;
            uint64_t v137 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v138 = *(void *)(v137 - 8);
            uint64_t v139 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48);
            swift_bridgeObjectRetain();
            if (v139(v136, 1, v137))
            {
              sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(v134, v136, *(void *)(*(void *)(v140 - 8) + 64));
            }
            else
            {
              uint64_t v307 = sub_1C1515FDC();
              uint64_t v308 = *(void *)(v307 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v308 + 48))(v136, 2, v307))
              {
                memcpy(v134, v136, *(void *)(v138 + 64));
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v308 + 16))(v134, v136, v307);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v308 + 56))(v134, 0, 2, v307);
              }
              uint64_t v3 = v135;
              (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v134, 0, 1, v137);
            }
          }
          swift_storeEnumTagMultiPayload();
LABEL_230:
          swift_storeEnumTagMultiPayload();
LABEL_231:
          uint64_t v526 = type metadata accessor for FormatButtonNodeDataAction();
          uint64_t v527 = *(int *)(v526 + 20);
          v528 = *(void **)((char *)v3 + v527);
          *(void *)(a1 + v527) = v528;
          uint64_t v529 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
          v530 = (void *)(a1 + v529);
          v531 = (void *)((char *)v3 + v529);
          uint64_t v532 = *(void *)(v526 - 8);
          v533 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v532 + 48);
          id v534 = v528;
          if (v533(v531, 1, v526))
          {
            sub_1BFEEF440(0, &qword_1EB88C058, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
            memcpy(v530, v531, *(void *)(*(void *)(v535 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                void *v530 = *v531;
                v536 = (id *)(v531 + 1);
                unsigned int v537 = *((unsigned __int8 *)v531 + 16);
                swift_bridgeObjectRetain();
                if (v537 <= 0xFD)
                {
                  id v561 = *v536;
                  sub_1BFF43A68(*v536, v537);
                  v530[1] = v561;
                  *((unsigned char *)v530 + 16) = v537;
                }
                else
                {
                  v530[1] = *v536;
                  *((unsigned char *)v530 + 16) = *((unsigned char *)v531 + 16);
                }
                goto LABEL_300;
              case 1u:
                uint64_t v538 = *v531;
                uint64_t v539 = v531[1];
                uint64_t v540 = v531[3];
                v656 = (void *)v531[2];
                uint64_t v541 = v531[4];
                char v670 = *((unsigned char *)v531 + 41);
                unsigned __int8 v542 = *((unsigned char *)v531 + 40);
                sub_1BFF43AA4((id)*v531, v539, (uint64_t)v656, v540, v541, v542, v670);
                void *v530 = v538;
                v530[1] = v539;
                v530[2] = v656;
                v530[3] = v540;
                v530[4] = v541;
                *((unsigned char *)v530 + 40) = v542;
                *((unsigned char *)v530 + 41) = v670;
                v543 = (void *)v531[7];
                v530[6] = v531[6];
                LOBYTE(v539) = *((unsigned char *)v531 + 64);
                swift_bridgeObjectRetain();
                sub_1BFF43A68(v543, v539);
                v530[7] = v543;
                *((unsigned char *)v530 + 64) = v539;
                goto LABEL_300;
              case 2u:
                void *v530 = *v531;
                swift_retain();
                goto LABEL_300;
              case 4u:
                uint64_t v544 = v531[1];
                void *v530 = *v531;
                v530[1] = v544;
                uint64_t v545 = v531[3];
                v530[2] = v531[2];
                v530[3] = v545;
                uint64_t v546 = v531[5];
                v530[4] = v531[4];
                v530[5] = v546;
                uint64_t v547 = v531[7];
                uint64_t v671 = v531[6];
                uint64_t v548 = v531[8];
                v657 = (void *)v531[9];
                char v648 = *((unsigned char *)v531 + 80);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BFF429DC(v671, v547, v548, (uint64_t)v657, v648);
                v530[6] = v671;
                v530[7] = v547;
                v530[8] = v548;
                v530[9] = v657;
                *((unsigned char *)v530 + 80) = v648;
                uint64_t v549 = v531[12];
                v530[11] = v531[11];
                v530[12] = v549;
                uint64_t v550 = v531[14];
                v530[13] = v531[13];
                v530[14] = v550;
                v530[15] = v531[15];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_300;
              case 5u:
                uint64_t v551 = type metadata accessor for FormatPurchaseData(0);
                int v552 = swift_getEnumCaseMultiPayload();
                if (v552 == 1)
                {
                  uint64_t v562 = type metadata accessor for FormatPurchaseLandingPageData();
                  uint64_t v563 = *(void *)(v562 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v563 + 48))(v531, 1, v562))
                  {
                    sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                    memcpy(v530, v531, *(void *)(*(void *)(v564 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v567 = v531[1];
                    void *v530 = *v531;
                    v530[1] = v567;
                    uint64_t v568 = *(int *)(v562 + 20);
                    __dstb = (char *)v530 + v568;
                    v650 = (void *)v562;
                    v569 = (char *)v531 + v568;
                    uint64_t v570 = type metadata accessor for FormatPostPurchaseData();
                    uint64_t v641 = *(void *)(v570 - 8);
                    v571 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v641 + 48);
                    swift_bridgeObjectRetain();
                    v572 = v569;
                    if (v571(v569, 1, v570))
                    {
                      sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                      memcpy(__dstb, v569, *(void *)(*(void *)(v573 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v574 = sub_1C1515FDC();
                      uint64_t v575 = *(void *)(v574 - 8);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v575 + 48))(v572, 2, v574))
                      {
                        memcpy(__dstb, v572, *(void *)(v641 + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, const void *, uint64_t))(v575 + 16))(__dstb, v572, v574);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v575 + 56))(__dstb, 0, 2, v574);
                      }
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v641 + 56))(__dstb, 0, 1, v570);
                    }
                    (*(void (**)(void *, void, uint64_t, void *))(v563 + 56))(v530, 0, 1, v650);
                  }
                }
                else
                {
                  if (v552)
                  {
                    memcpy(v530, v531, *(void *)(*(void *)(v551 - 8) + 64));
                    goto LABEL_300;
                  }
                  uint64_t v553 = v531[1];
                  void *v530 = *v531;
                  v530[1] = v553;
                  uint64_t v554 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
                  v658 = (char *)v530 + v554;
                  v555 = (char *)v531 + v554;
                  uint64_t v556 = type metadata accessor for FormatPostPurchaseData();
                  uint64_t v557 = *(void *)(v556 - 8);
                  v558 = *(unsigned int (**)(char *, uint64_t, void *))(v557 + 48);
                  v559 = (void *)v556;
                  swift_bridgeObjectRetain();
                  if (v558(v555, 1, v559))
                  {
                    sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                    memcpy(v658, v555, *(void *)(*(void *)(v560 - 8) + 64));
                  }
                  else
                  {
                    v649 = v559;
                    uint64_t v565 = sub_1C1515FDC();
                    uint64_t v566 = *(void *)(v565 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v566 + 48))(v555, 2, v565))
                    {
                      memcpy(v658, v555, *(void *)(v557 + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v566 + 16))(v658, v555, v565);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v566 + 56))(v658, 0, 2, v565);
                    }
                    (*(void (**)(char *, void, uint64_t, void *))(v557 + 56))(v658, 0, 1, v649);
                  }
                }
                swift_storeEnumTagMultiPayload();
LABEL_300:
                swift_storeEnumTagMultiPayload();
LABEL_301:
                uint64_t v629 = *(int *)(v526 + 20);
                v630 = *(void **)((char *)v531 + v629);
                *(void *)((char *)v530 + v629) = v630;
                v631 = *(void (**)(void *, void, uint64_t, uint64_t))(v532 + 56);
                id v632 = v630;
                v631(v530, 0, 1, v526);
                break;
              default:
                memcpy(v530, v531, *(void *)(*(void *)(v672 - 8) + 64));
                goto LABEL_301;
            }
          }
          break;
        default:
          memcpy((void *)a1, v3, *(void *)(*(void *)(v21 - 8) + 64));
          goto LABEL_231;
      }
      goto LABEL_302;
    case 0xAu:
      uint64_t v24 = type metadata accessor for FormatViewBackground(0);
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v3, 1, v24))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        memcpy((void *)a1, v3, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        int v92 = swift_getEnumCaseMultiPayload();
        if (v92 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)v3;
          uint64_t v142 = v3[2];
          uint64_t v141 = v3[3];
          uint64_t v660 = v141;
          uint64_t v143 = v3[4];
          uint64_t v144 = v3[5];
          long long v145 = v3;
          uint64_t v146 = v3[6];
          uint64_t v147 = v3[7];
          uint64_t v148 = v145[8];
          v651 = (void *)v145[9];
          char v674 = *((unsigned char *)v145 + 80);
          sub_1C03A98B4(v142, v141, v143, v144, v146, v147, v148, (uint64_t)v651, v674);
          *(void *)(a1 + 16) = v142;
          *(void *)(a1 + 24) = v660;
          *(void *)(a1 + 32) = v143;
          *(void *)(a1 + 40) = v144;
          *(void *)(a1 + 48) = v146;
          *(void *)(a1 + 56) = v147;
          *(void *)(a1 + 64) = v148;
          *(void *)(a1 + 72) = v651;
          *(unsigned char *)(a1 + 80) = v674;
          uint64_t v149 = v145[11];
          uint64_t v675 = v145[12];
          uint64_t v150 = v145[13];
          uint64_t v151 = v145[14];
          uint64_t v152 = v145[15];
          uint64_t v153 = v145[16];
          uint64_t v155 = v145[17];
          uint64_t v154 = v145[18];
          uint64_t v661 = v154;
          LOBYTE(v145) = *((unsigned char *)v145 + 152);
          sub_1C03A98B4(v149, v675, v150, v151, v152, v153, v155, v154, (char)v145);
          *(void *)(a1 + 88) = v149;
          *(void *)(a1 + 96) = v675;
          *(void *)(a1 + 104) = v150;
          *(void *)(a1 + 112) = v151;
          *(void *)(a1 + 120) = v152;
          *(void *)(a1 + 128) = v153;
          *(void *)(a1 + 136) = v155;
          *(void *)(a1 + 144) = v661;
          *(unsigned char *)(a1 + 152) = (_BYTE)v145;
        }
        else if (v92 == 1)
        {
          *(void *)a1 = *v3;
          uint64_t v93 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
          uint64_t v94 = (void *)(a1 + v93);
          uint64_t v95 = (char *)v3 + v93;
          uint64_t v96 = sub_1C151A8EC();
          uint64_t v97 = *(void *)(v96 - 8);
          uint64_t v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
          swift_retain();
          if (v98(v95, 1, v96))
          {
            sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
            memcpy(v94, v95, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v97 + 16))(v94, v95, v96);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
          }
        }
        else
        {
          uint64_t v156 = v3[1];
          *(void *)a1 = *v3;
          *(void *)(a1 + 8) = v156;
          swift_retain();
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
      }
      goto LABEL_302;
    case 0xBu:
      *(void *)a1 = *v3;
      uint64_t v27 = type metadata accessor for FormatMicaData();
      uint64_t v28 = *(int *)(v27 + 20);
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (char *)v3 + v28;
      uint64_t v31 = sub_1C151A8EC();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_retain();
      if (v33(v30, 1, v31))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
        memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      uint64_t v100 = *(int *)(v27 + 24);
      uint64_t v101 = a1 + v100;
      long long v102 = (char *)v3 + v100;
      *(_DWORD *)uint64_t v101 = *(_DWORD *)v102;
      *(unsigned char *)(v101 + 4) = v102[4];
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xCu:
      uint64_t v35 = v3[1];
      *(void *)a1 = *v3;
      *(void *)(a1 + 8) = v35;
      uint64_t v36 = v3[3];
      *(void *)(a1 + 16) = v3[2];
      *(void *)(a1 + 24) = v36;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)v3 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xDu:
      uint64_t v37 = sub_1C1515FDC();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 16);
      v39(a1, (char *)v3, v37);
      uint64_t v40 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      uint64_t v41 = (void *)(a1 + v40);
      uint64_t v42 = (char *)v3 + v40;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))((char *)v3 + v40, 1, v37))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        v39((uint64_t)v41, v42, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
      }
      uint64_t v103 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
      uint64_t v104 = a1 + v103;
      uint64_t v105 = (char *)v3 + v103;
      uint64_t v106 = *(void **)v105;
      *(void *)uint64_t v104 = *(void *)v105;
      *(unsigned char *)(v104 + 8) = v105[8];
      *(void *)(v104 + 16) = *((void *)v105 + 2);
      *(_WORD *)(v104 + 24) = *((_WORD *)v105 + 12);
      long long v108 = (void *)*((void *)v105 + 4);
      uint64_t v107 = *((void *)v105 + 5);
      *(void *)(v104 + 32) = v108;
      *(void *)(v104 + 40) = v107;
      id v109 = v106;
      id v110 = v108;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xEu:
      uint64_t v44 = (void *)*v3;
      uint64_t v45 = v3[1];
      uint64_t v46 = (void *)v3[2];
      uint64_t v47 = v3[3];
      uint64_t v48 = (void *)v3[4];
      uint64_t v49 = v3[5];
      uint64_t v50 = v3;
      uint64_t v51 = (void *)v3[6];
      char v52 = *((unsigned char *)v50 + 56);
      sub_1C00FA170(v44, v45, v46, v47, v48, v49, v51, v52);
      *(void *)a1 = v44;
      *(void *)(a1 + 8) = v45;
      *(void *)(a1 + 16) = v46;
      *(void *)(a1 + 24) = v47;
      *(void *)(a1 + 32) = v48;
      *(void *)(a1 + 40) = v49;
      *(void *)(a1 + 48) = v51;
      *(unsigned char *)(a1 + 56) = v52;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0xFu:
      uint64_t v53 = sub_1C151631C();
      (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, v3, v53);
      uint64_t v54 = (int *)type metadata accessor for SharedItem();
      *(unsigned char *)(a1 + v54[5]) = *((unsigned char *)v3 + v54[5]);
      uint64_t v55 = v54[6];
      id v56 = *(void **)((char *)v3 + v55);
      *(void *)(a1 + v55) = v56;
      uint64_t v57 = v54[7];
      uint64_t v58 = a1 + v57;
      uint64_t v59 = (char *)v3 + v57;
      uint64_t v60 = sub_1C1515FDC();
      int v61 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v60 - 8) + 16);
      id v62 = v56;
      v61(v58, v59, v60);
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x10u:
      uint64_t v63 = (void *)*v3;
      uint64_t v64 = v3[1];
      uint64_t v65 = v3[2];
      uint64_t v66 = v3[3];
      uint64_t v67 = v3[4];
      uint64_t v68 = v3[5];
      unint64_t v69 = v3;
      uint64_t v70 = v3[6];
      uint64_t v71 = v69[7];
      char v72 = *((unsigned char *)v69 + 64);
      sub_1C00364B0(v63, v64, v65, v66, v67, v68, v70, v71, v72);
      *(void *)a1 = v63;
      *(void *)(a1 + 8) = v64;
      *(void *)(a1 + 16) = v65;
      *(void *)(a1 + 24) = v66;
      *(void *)(a1 + 32) = v67;
      *(void *)(a1 + 40) = v68;
      *(void *)(a1 + 48) = v70;
      *(void *)(a1 + 56) = v71;
      *(unsigned char *)(a1 + 64) = v72;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x11u:
      uint64_t v73 = v3[1];
      *(void *)a1 = *v3;
      *(void *)(a1 + 8) = v73;
      uint64_t v74 = v3[3];
      *(void *)(a1 + 16) = v3[2];
      *(void *)(a1 + 24) = v74;
      uint64_t v75 = v3[5];
      *(void *)(a1 + 32) = v3[4];
      *(void *)(a1 + 40) = v75;
      *(void *)(a1 + 48) = v3[6];
      *(unsigned char *)(a1 + 56) = *((unsigned char *)v3 + 56);
      uint64_t v76 = (int *)type metadata accessor for FormatVideoPlayerData();
      uint64_t v77 = v76[9];
      uint64_t v673 = a1 + v77;
      v659 = (char *)v3 + v77;
      uint64_t v78 = sub_1C1515FDC();
      uint64_t v79 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v78 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v79(v673, v659, v78);
      *(void *)(a1 + v76[10]) = *(void *)((char *)v3 + v76[10]);
      *(unsigned char *)(a1 + v76[11]) = *((unsigned char *)v3 + v76[11]);
      uint64_t v80 = v76[12];
      uint64_t v81 = a1 + v80;
      uint64_t v82 = (char *)v3 + v80;
      *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
      uint64_t v83 = *((void *)v82 + 3);
      *(void *)(v81 + 16) = *((void *)v82 + 2);
      *(void *)(v81 + 24) = v83;
      *(unsigned char *)(v81 + 32) = v82[32];
      uint64_t v84 = *((void *)v82 + 6);
      *(void *)(v81 + 40) = *((void *)v82 + 5);
      *(void *)(v81 + 48) = v84;
      *(unsigned char *)(a1 + v76[13]) = *((unsigned char *)v3 + v76[13]);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x12u:
      *(_DWORD *)a1 = *(_DWORD *)v3;
      uint64_t v85 = v3[1];
      sub_1C00F804C(v85);
      *(void *)(a1 + 8) = v85;
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x14u:
      uint64_t v86 = v3[1];
      *(void *)a1 = *v3;
      *(void *)(a1 + 8) = v86;
      uint64_t v87 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v88 = a1 + v87;
      uint64_t v89 = (char *)v3 + v87;
      uint64_t v90 = sub_1C151D6DC();
      long long v91 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      v91(v88, v89, v90);
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy((void *)a1, v3, *(void *)(v6 + 64));
      return a1;
  }
  uint64_t v295 = v3[6];
  *(void *)(a1 + 40) = v3[5];
  *(void *)(a1 + 48) = v295;
  uint64_t v296 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v297 = a1 + v296;
  uint64_t v298 = (char *)v3 + v296;
  *(void *)(a1 + v296) = *(void *)((char *)v3 + v296);
  uint64_t v299 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v300 = (void *)(v297 + v299);
  uint64_t v301 = &v298[v299];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v392 = type metadata accessor for PuzzleStatisticValue(0);
      int v393 = swift_getEnumCaseMultiPayload();
      uint64_t v666 = v392;
      v394 = v3;
      if (v393 == 5)
      {
        uint64_t v522 = type metadata accessor for PuzzleStreak();
        uint64_t v523 = *(void *)(v522 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v523 + 48))(v301, 1, v522))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v300, v301, *(void *)(*(void *)(v524 - 8) + 64));
        }
        else
        {
          uint64_t v584 = sub_1C151555C();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v584 - 8) + 16))(v300, v301, v584);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v523 + 56))(v300, 0, 1, v522);
        }
        uint64_t v392 = v666;
      }
      else
      {
        if (v393 != 4)
        {
          memcpy(v300, v301, *(void *)(*(void *)(v392 - 8) + 64));
          goto LABEL_266;
        }
        uint64_t v395 = type metadata accessor for PuzzleStreak();
        uint64_t v396 = *(void *)(v395 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v396 + 48))(v301, 1, v395))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v300, v301, *(void *)(*(void *)(v397 - 8) + 64));
        }
        else
        {
          uint64_t v582 = sub_1C151555C();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v582 - 8) + 16))(v300, v301, v582);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v396 + 56))(v300, 0, 1, v395);
        }
        uint64_t v392 = v666;
      }
      swift_storeEnumTagMultiPayload();
LABEL_266:
      uint64_t v585 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v586 = *(int *)(v585 + 20);
      v587 = v300;
      v588 = (char *)v300 + v586;
      v589 = &v301[v586];
      int v590 = swift_getEnumCaseMultiPayload();
      if (v590 == 5)
      {
        uint64_t v594 = type metadata accessor for PuzzleStreak();
        uint64_t v595 = *(void *)(v594 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v595 + 48))(v589, 1, v594))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v588, v589, *(void *)(*(void *)(v596 - 8) + 64));
        }
        else
        {
          uint64_t v598 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v598 - 8) + 16))(v588, v589, v598);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v595 + 56))(v588, 0, 1, v594);
        }
        uint64_t v392 = v666;
      }
      else
      {
        if (v590 != 4)
        {
          memcpy(v588, v589, *(void *)(*(void *)(v392 - 8) + 64));
          goto LABEL_278;
        }
        uint64_t v591 = type metadata accessor for PuzzleStreak();
        uint64_t v592 = *(void *)(v591 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v592 + 48))(v589, 1, v591))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v588, v589, *(void *)(*(void *)(v593 - 8) + 64));
        }
        else
        {
          uint64_t v597 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v597 - 8) + 16))(v588, v589, v597);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v592 + 56))(v588, 0, 1, v591);
        }
        uint64_t v392 = v666;
      }
      swift_storeEnumTagMultiPayload();
LABEL_278:
      uint64_t v599 = *(int *)(v585 + 24);
      v600 = (char *)v587 + v599;
      v601 = &v301[v599];
      int v602 = swift_getEnumCaseMultiPayload();
      if (v602 == 5)
      {
        uint64_t v603 = type metadata accessor for PuzzleStreak();
        uint64_t v604 = *(void *)(v603 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v604 + 48))(v601, 1, v603))
        {
LABEL_281:
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v600, v601, *(void *)(*(void *)(v605 - 8) + 64));
LABEL_286:
          swift_storeEnumTagMultiPayload();
          goto LABEL_287;
        }
      }
      else
      {
        if (v602 != 4)
        {
          memcpy(v600, v601, *(void *)(*(void *)(v392 - 8) + 64));
LABEL_287:
          uint64_t v3 = v394;
          goto LABEL_288;
        }
        uint64_t v603 = type metadata accessor for PuzzleStreak();
        uint64_t v604 = *(void *)(v603 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v604 + 48))(v601, 1, v603)) {
          goto LABEL_281;
        }
      }
      uint64_t v606 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v606 - 8) + 16))(v600, v601, v606);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v604 + 56))(v600, 0, 1, v603);
      goto LABEL_286;
    case 2u:
      v398 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v399 = *((void *)v398 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v399 + 48))(v301, 1, v398))
      {
        sub_1BFEEF440(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        size_t v401 = *(void *)(*(void *)(v400 - 8) + 64);
        goto LABEL_220;
      }
      v668 = v3;
      uint64_t v469 = sub_1C151631C();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v469 - 8) + 16))(v300, v301, v469);
      uint64_t v470 = type metadata accessor for PuzzleLeaderboardEntry();
      v471 = v300;
      v472 = (int *)v470;
      uint64_t v473 = *(int *)(v470 + 20);
      v474 = (void *)((char *)v471 + v473);
      v475 = &v301[v473];
      uint64_t v476 = *((void *)v475 + 1);
      void *v474 = *(void *)v475;
      v474[1] = v476;
      uint64_t v477 = v472[6];
      v478 = v471;
      v479 = (char *)v471 + v477;
      v480 = &v301[v477];
      uint64_t v481 = *((void *)v480 + 1);
      *(void *)v479 = *(void *)v480;
      *((void *)v479 + 1) = v481;
      v482 = (uint64_t *)(v480 + 16);
      unint64_t v483 = *((void *)v480 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v483 >> 60 == 15)
      {
        *((_OWORD *)v479 + 1) = *(_OWORD *)v482;
      }
      else
      {
        uint64_t v576 = *v482;
        sub_1BFE95820(*v482, v483);
        *((void *)v479 + 2) = v576;
        *((void *)v479 + 3) = v483;
      }
      *(void *)((char *)v478 + v472[7]) = *(void *)&v301[v472[7]];
      *(void *)((char *)v478 + v472[8]) = *(void *)&v301[v472[8]];
      *(void *)((char *)v478 + v398[5]) = *(void *)&v301[v398[5]];
      *(void *)((char *)v478 + v398[6]) = *(void *)&v301[v398[6]];
      uint64_t v577 = v398[7];
      v578 = (void *)((char *)v478 + v577);
      v579 = &v301[v577];
      uint64_t v580 = *((void *)v579 + 1);
      void *v578 = *(void *)v579;
      v578[1] = v580;
      v581 = *(void (**)(void *, void, uint64_t, int *))(v399 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v581(v478, 0, 1, v398);
      uint64_t v3 = v668;
      goto LABEL_288;
    case 3u:
      v667 = v3;
      uint64_t v402 = *((void *)v301 + 1);
      void *v300 = *(void *)v301;
      v300[1] = v402;
      *((unsigned char *)v300 + 16) = v301[16];
      v403 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v404 = v403[6];
      v405 = v300;
      v406 = (char *)v300 + v404;
      v407 = &v301[v404];
      uint64_t v408 = type metadata accessor for PuzzleStreak();
      uint64_t v409 = *(void *)(v408 - 8);
      v410 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48);
      if (v410(v407, 1, v408))
      {
        sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v406, v407, *(void *)(*(void *)(v411 - 8) + 64));
      }
      else
      {
        uint64_t v484 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v484 - 8) + 16))(v406, v407, v484);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v409 + 56))(v406, 0, 1, v408);
      }
      uint64_t v485 = v403[7];
      v486 = (char *)v405 + v485;
      v487 = &v301[v485];
      if (v410(&v301[v485], 1, v408))
      {
        sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v486, v487, *(void *)(*(void *)(v488 - 8) + 64));
      }
      else
      {
        uint64_t v508 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v508 - 8) + 16))(v486, v487, v508);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v409 + 56))(v486, 0, 1, v408);
      }
      uint64_t v509 = v403[8];
      v510 = (_OWORD *)((char *)v405 + v509);
      v511 = &v301[v509];
      long long v512 = *((_OWORD *)v511 + 1);
      _OWORD *v510 = *(_OWORD *)v511;
      v510[1] = v512;
      *(_OWORD *)((char *)v510 + 25) = *(_OWORD *)(v511 + 25);
      uint64_t v513 = v403[9];
      v514 = (_OWORD *)((char *)v405 + v513);
      v515 = &v301[v513];
      *(_OWORD *)((char *)v514 + 25) = *(_OWORD *)(v515 + 25);
      long long v516 = *((_OWORD *)v515 + 1);
      _OWORD *v514 = *(_OWORD *)v515;
      v514[1] = v516;
      uint64_t v517 = v403[10];
      v518 = (_OWORD *)((char *)v405 + v517);
      v519 = &v301[v517];
      long long v520 = *((_OWORD *)v519 + 1);
      _OWORD *v518 = *(_OWORD *)v519;
      v518[1] = v520;
      *(_OWORD *)((char *)v518 + 25) = *(_OWORD *)(v519 + 25);
      uint64_t v3 = v667;
      goto LABEL_288;
    default:
      uint64_t v302 = type metadata accessor for PuzzleStatisticValue(0);
      int v303 = swift_getEnumCaseMultiPayload();
      if (v303 == 5)
      {
        v304 = v300;
        uint64_t v305 = type metadata accessor for PuzzleStreak();
        uint64_t v306 = *(void *)(v305 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v306 + 48))(v301, 1, v305))
        {
LABEL_218:
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v304, v301, *(void *)(*(void *)(v521 - 8) + 64));
LABEL_262:
          swift_storeEnumTagMultiPayload();
LABEL_288:
          swift_storeEnumTagMultiPayload();
          goto LABEL_289;
        }
      }
      else
      {
        if (v303 != 4)
        {
          size_t v401 = *(void *)(*(void *)(v302 - 8) + 64);
LABEL_220:
          memcpy(v300, v301, v401);
          goto LABEL_288;
        }
        v304 = v300;
        uint64_t v305 = type metadata accessor for PuzzleStreak();
        uint64_t v306 = *(void *)(v305 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v306 + 48))(v301, 1, v305)) {
          goto LABEL_218;
        }
      }
      uint64_t v583 = sub_1C151555C();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v583 - 8) + 16))(v304, v301, v583);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v306 + 56))(v304, 0, 1, v305);
      goto LABEL_262;
  }
}

uint64_t sub_1C0C0DDFC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_1BFF40FB4(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1C151D2DC();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_294;
      case 1u:
      case 2u:
      case 3u:
      case 7u:
      case 8u:
      case 0x13u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_294;
      case 4u:
        uint64_t v7 = type metadata accessor for FeedItem(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            uint64_t v8 = a2[3];
            *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
            *(void *)(a1 + 24) = v8;
            unint64_t v9 = a2[6];
            swift_bridgeObjectRetain();
            if (v9 >= 0x11)
            {
              *(void *)(a1 + 40) = a2[5];
              *(void *)(a1 + 48) = a2[6];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
            }
            goto LABEL_281;
          case 1u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            uint64_t v128 = a2[3];
            *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
            *(void *)(a1 + 24) = v128;
            *(void *)(a1 + 40) = a2[5];
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = a2[7];
            *(void *)(a1 + 64) = a2[8];
            unint64_t v129 = a2[10];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v129 >= 0x11)
            {
              *(void *)(a1 + 72) = a2[9];
              *(void *)(a1 + 80) = a2[10];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            }
            goto LABEL_281;
          case 2u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            uint64_t v130 = (int *)type metadata accessor for FeedBannerAd();
            uint64_t v131 = v130[5];
            uint64_t v132 = a1 + v131;
            uint64_t v133 = (uint64_t)a2 + v131;
            uint64_t v134 = sub_1C151DBAC();
            uint64_t v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 16);
            swift_bridgeObjectRetain();
            v135(v132, v133, v134);
            *(void *)(a1 + v130[6]) = *(uint64_t *)((char *)a2 + v130[6]);
            uint64_t v136 = v130[7];
            uint64_t v137 = a1 + v136;
            uint64_t v138 = (uint64_t)a2 + v136;
            char v139 = *(unsigned char *)(v138 + 8);
            *(void *)uint64_t v137 = *(void *)v138;
            *(unsigned char *)(v137 + 8) = v139;
            uint64_t v140 = v130[8];
            uint64_t v141 = a1 + v140;
            uint64_t v142 = (uint64_t)a2 + v140;
            if (*(void *)(v142 + 8) >= 0x11uLL) {
              goto LABEL_85;
            }
            *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
            goto LABEL_281;
          case 3u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            uint64_t v143 = a2[2];
            *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
            *(void *)(a1 + 16) = v143;
            *(void *)(a1 + 32) = a2[4];
            *(void *)(a1 + 40) = a2[5];
            *(void *)(a1 + 48) = a2[6];
            *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
            id v561 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v144 = v561[10];
            long long v145 = (unsigned char *)(a1 + v144);
            uint64_t v146 = (uint64_t)a2 + v144;
            *long long v145 = *((unsigned char *)a2 + v144);
            v145[1] = *((unsigned char *)a2 + v144 + 1);
            uint64_t v147 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v148 = v147[6];
            __dst = &v145[v148];
            uint64_t v149 = (char *)(v146 + v148);
            uint64_t v150 = (int *)type metadata accessor for SharedItem();
            uint64_t v539 = *((void *)v150 - 1);
            uint64_t v151 = *(unsigned int (**)(char *, uint64_t, int *))(v539 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v151(v149, 1, v150))
            {
              uint64_t v152 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v149, *(void *)(*(void *)(v152 - 8) + 64));
            }
            else
            {
              uint64_t v237 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16))(__dst, v149, v237);
              __dst[v150[5]] = v149[v150[5]];
              uint64_t v238 = v150[6];
              uint64_t v239 = *(void **)&v149[v238];
              *(void *)&__dst[v238] = v239;
              uint64_t v240 = v150[7];
              uint64_t v547 = &v149[v240];
              uint64_t v554 = &__dst[v240];
              uint64_t v241 = sub_1C1515FDC();
              unsigned int v537 = *(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16);
              id v242 = v239;
              v537(v554, v547, v241);
              (*(void (**)(char *, void, uint64_t, int *))(v539 + 56))(__dst, 0, 1, v150);
            }
            v145[v147[7]] = *(unsigned char *)(v146 + v147[7]);
            v145[v147[8]] = *(unsigned char *)(v146 + v147[8]);
            v145[v147[9]] = *(unsigned char *)(v146 + v147[9]);
            v145[v147[10]] = *(unsigned char *)(v146 + v147[10]);
            uint64_t v243 = v561[11];
            uint64_t v244 = (void *)(a1 + v243);
            uint64_t v245 = (char *)a2 + v243;
            uint64_t v246 = sub_1C151D2DC();
            uint64_t v247 = *(void *)(v246 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48))(v245, 1, v246))
            {
              sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v244, v245, *(void *)(*(void *)(v248 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v247 + 16))(v244, v245, v246);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v247 + 56))(v244, 0, 1, v246);
            }
            uint64_t v275 = v561[12];
            v276 = (void *)(a1 + v275);
            uint64_t v277 = (uint64_t *)((char *)a2 + v275);
            if (v277[1] >= 0x11uLL)
            {
              void *v276 = *v277;
              v276[1] = v277[1];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v276 = *(_OWORD *)v277;
            }
            uint64_t v278 = v561[13];
            unint64_t v279 = *(uint64_t *)((char *)a2 + v278);
            if (v279 >= 2)
            {
              if (v279 == 2)
              {
                *(void *)(a1 + v278) = 2;
              }
              else
              {
                *(void *)(a1 + v278) = v279;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)(a1 + v278) = v279;
            }
            uint64_t v334 = v561[14];
            v335 = *(void **)((char *)a2 + v334);
            *(void *)(a1 + v334) = v335;
            id v336 = v335;
            goto LABEL_281;
          case 4u:
            *(void *)a1 = *a2;
            uint64_t v153 = a2[1];
            *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
            *(void *)(a1 + 8) = v153;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(void *)(a1 + 24) = a2[3];
              *(void *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            *(void *)(a1 + 40) = a2[5];
            *(void *)(a1 + 48) = a2[6];
            id v206 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v207 = v206[8];
            uint64_t v208 = a1 + v207;
            uint64_t v209 = (uint64_t)a2 + v207;
            uint64_t v210 = sub_1C1515FDC();
            uint64_t v211 = *(void *)(v210 - 8);
            uint64_t v212 = *(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 16);
            swift_bridgeObjectRetain();
            v212(v208, v209, v210);
            uint64_t v213 = v206[9];
            long long v214 = (void *)(a1 + v213);
            uint64_t v215 = (char *)a2 + v213;
            uint64_t v553 = v210;
            __dstb = (void (*)(char *, char *, uint64_t))v212;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))((uint64_t)a2 + v213, 1, v210))
            {
              sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
              memcpy(v214, v215, *(void *)(*(void *)(v216 - 8) + 64));
            }
            else
            {
              v212((uint64_t)v214, (uint64_t)v215, v210);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v211 + 56))(v214, 0, 1, v210);
            }
            *(void *)(a1 + v206[10]) = *(uint64_t *)((char *)a2 + v206[10]);
            *(void *)(a1 + v206[11]) = *(uint64_t *)((char *)a2 + v206[11]);
            uint64_t v564 = v206;
            uint64_t v262 = v206[12];
            uint64_t v263 = (void *)(a1 + v262);
            uint64_t v264 = (uint64_t *)((char *)a2 + v262);
            uint64_t v265 = type metadata accessor for FeedHeadline(0);
            uint64_t v266 = *(void *)(v265 - 8);
            uint64_t v267 = *(unsigned int (**)(void *, uint64_t, int *))(v266 + 48);
            uint64_t v268 = (int *)v265;
            swift_retain();
            swift_retain();
            if (v267(v264, 1, v268))
            {
              sub_1BFEEF440(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
              memcpy(v263, v264, *(void *)(*(void *)(v269 - 8) + 64));
            }
            else
            {
              uint64_t v538 = v266;
              uint64_t v540 = v268;
              *uint64_t v263 = *v264;
              v263[1] = v264[1];
              uint64_t v285 = v264[2];
              *((unsigned char *)v263 + 24) = *((unsigned char *)v264 + 24);
              v263[2] = v285;
              v263[4] = v264[4];
              v263[5] = v264[5];
              v263[6] = v264[6];
              *((unsigned char *)v263 + 56) = *((unsigned char *)v264 + 56);
              uint64_t v286 = v268[10];
              uint64_t v287 = (char *)v263 + v286;
              uint64_t v288 = (char *)v264 + v286;
              *uint64_t v287 = *((unsigned char *)v264 + v286);
              v287[1] = *((unsigned char *)v264 + v286 + 1);
              v536 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v289 = v536[6];
              uint64_t v535 = &v287[v289];
              long long v290 = &v288[v289];
              uint64_t v291 = (int *)type metadata accessor for SharedItem();
              uint64_t v534 = *((void *)v291 - 1);
              id v292 = *(unsigned int (**)(char *, uint64_t, int *))(v534 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              if (v292(v290, 1, v291))
              {
                uint64_t v293 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v535, v290, *(void *)(*(void *)(v293 - 8) + 64));
              }
              else
              {
                uint64_t v356 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v535, v290, v356);
                v535[v291[5]] = v290[v291[5]];
                uint64_t v357 = v291[6];
                v358 = *(void **)&v290[v357];
                *(void *)&v535[v357] = v358;
                uint64_t v359 = v291[7];
                uint64_t v360 = &v535[v359];
                uint64_t v361 = &v290[v359];
                id v362 = v358;
                __dstb(v360, v361, v553);
                (*(void (**)(char *, void, uint64_t, int *))(v534 + 56))(v535, 0, 1, v291);
              }
              v287[v536[7]] = v288[v536[7]];
              v287[v536[8]] = v288[v536[8]];
              v287[v536[9]] = v288[v536[9]];
              v287[v536[10]] = v288[v536[10]];
              uint64_t v363 = v540[11];
              uint64_t v364 = (char *)v263 + v363;
              uint64_t v365 = (char *)v264 + v363;
              uint64_t v366 = sub_1C151D2DC();
              uint64_t v367 = *(void *)(v366 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v367 + 48))(v365, 1, v366))
              {
                sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                memcpy(v364, v365, *(void *)(*(void *)(v368 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v367 + 16))(v364, v365, v366);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v367 + 56))(v364, 0, 1, v366);
              }
              uint64_t v369 = v540[12];
              uint64_t v370 = (void *)((char *)v263 + v369);
              long long v371 = (void *)((char *)v264 + v369);
              if (v371[1] >= 0x11uLL)
              {
                void *v370 = *v371;
                v370[1] = v371[1];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)uint64_t v370 = *(_OWORD *)v371;
              }
              uint64_t v372 = v540[13];
              unint64_t v373 = *(void *)((char *)v264 + v372);
              if (v373 >= 2)
              {
                if (v373 == 2)
                {
                  *(void *)((char *)v263 + v372) = 2;
                }
                else
                {
                  *(void *)((char *)v263 + v372) = v373;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(void *)((char *)v263 + v372) = v373;
              }
              uint64_t v399 = v540[14];
              uint64_t v400 = *(void **)((char *)v264 + v399);
              *(void *)((char *)v263 + v399) = v400;
              size_t v401 = *(void (**)(void *, void, uint64_t, int *))(v538 + 56);
              id v402 = v400;
              v401(v263, 0, 1, v540);
            }
            uint64_t v403 = v564[13];
            uint64_t v404 = (void *)(a1 + v403);
            v405 = (uint64_t *)((char *)a2 + v403);
            uint64_t v406 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v407 = *(void *)(v406 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v407 + 48))(v405, 1, v406))
            {
              sub_1BFEEF440(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
              memcpy(v404, v405, *(void *)(*(void *)(v408 - 8) + 64));
              uint64_t v409 = v564;
            }
            else
            {
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              *uint64_t v404 = *v405;
              if (EnumCaseMultiPayload == 1)
              {
                v404[1] = v405[1];
                uint64_t v411 = type metadata accessor for GenericDataVisualization();
                uint64_t v412 = *(int *)(v411 + 20);
                v413 = (char *)v404 + v412;
                id v414 = (char *)v405 + v412;
                swift_bridgeObjectRetain();
                __dstb(v413, v414, v553);
                *(void *)((char *)v404 + *(int *)(v411 + 24)) = *(void *)((char *)v405 + *(int *)(v411 + 24));
                swift_bridgeObjectRetain();
              }
              else
              {
                swift_retain();
              }
              uint64_t v409 = v564;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v407 + 56))(v404, 0, 1, v406);
            }
            *(unsigned char *)(a1 + v409[14]) = *((unsigned char *)a2 + v409[14]);
            goto LABEL_281;
          case 5u:
            uint64_t v154 = (void *)*a2;
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
            *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
            uint64_t v155 = a2[4];
            *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
            *(void *)(a1 + 32) = v155;
            *(void *)(a1 + 48) = a2[6];
            uint64_t v156 = (void *)a2[7];
            *(void *)(a1 + 56) = v156;
            *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v157 = a2[10];
            id v158 = v154;
            swift_bridgeObjectRetain();
            id v159 = v156;
            if (v157 == 1)
            {
              long long v160 = *(_OWORD *)(a2 + 9);
              long long v161 = *(_OWORD *)(a2 + 13);
              *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 104) = v161;
              *(_OWORD *)(a1 + 72) = v160;
            }
            else
            {
              *(void *)(a1 + 72) = a2[9];
              *(void *)(a1 + 80) = a2[10];
              *(void *)(a1 + 88) = a2[11];
              *(void *)(a1 + 96) = a2[12];
              uint64_t v217 = (void *)a2[13];
              *(void *)(a1 + 104) = v217;
              *(void *)(a1 + 112) = a2[14];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v218 = v217;
            }
            if ((unint64_t)a2[16] >= 0x11)
            {
              *(void *)(a1 + 120) = a2[15];
              *(void *)(a1 + 128) = a2[16];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
            }
            *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_281;
          case 6u:
            int v162 = *((unsigned __int8 *)a2 + 281);
            if (v162 == 2)
            {
              *(void *)a1 = *a2;
              *(void *)(a1 + 8) = a2[1];
              *(void *)(a1 + 16) = a2[2];
              *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
              uint64_t v303 = a2[4];
              *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
              *(void *)(a1 + 32) = v303;
              *(void *)(a1 + 48) = a2[6];
              *(void *)(a1 + 56) = a2[7];
              *(void *)(a1 + 64) = a2[8];
              *(void *)(a1 + 72) = a2[9];
              uint64_t v304 = a2[11];
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v304 == 1)
              {
                *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
                long long v305 = *((_OWORD *)a2 + 6);
                long long v306 = *((_OWORD *)a2 + 7);
                long long v307 = *((_OWORD *)a2 + 8);
                *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
                *(_OWORD *)(a1 + 112) = v306;
                *(_OWORD *)(a1 + 128) = v307;
                *(_OWORD *)(a1 + 96) = v305;
              }
              else
              {
                *(void *)(a1 + 80) = a2[10];
                *(void *)(a1 + 88) = a2[11];
                uint64_t v342 = a2[15];
                swift_bridgeObjectRetain();
                if (v342)
                {
                  *(void *)(a1 + 120) = v342;
                  *(void *)(a1 + 128) = a2[16];
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v342 - 8))(a1 + 96, (uint64_t)(a2 + 12), v342);
                  char v343 = *((unsigned char *)a2 + 144);
                  *(void *)(a1 + 136) = a2[17];
                  *(unsigned char *)(a1 + 144) = v343;
                }
                else
                {
                  long long v435 = *((_OWORD *)a2 + 6);
                  long long v436 = *((_OWORD *)a2 + 7);
                  long long v437 = *((_OWORD *)a2 + 8);
                  *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
                  *(_OWORD *)(a1 + 112) = v436;
                  *(_OWORD *)(a1 + 128) = v437;
                  *(_OWORD *)(a1 + 96) = v435;
                }
              }
            }
            else if (v162 == 1)
            {
              unint64_t v163 = (void *)*a2;
              *(void *)a1 = *a2;
              *(void *)(a1 + 8) = a2[1];
              *(void *)(a1 + 16) = a2[2];
              *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
              *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
              uint64_t v164 = a2[4];
              *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
              *(void *)(a1 + 32) = v164;
              *(void *)(a1 + 48) = a2[6];
              CGRect v165 = (void *)a2[7];
              *(void *)(a1 + 56) = v165;
              *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v166 = a2[10];
              id v167 = v163;
              swift_bridgeObjectRetain();
              id v168 = v165;
              if (v166 == 1)
              {
                long long v169 = *(_OWORD *)(a2 + 9);
                long long v170 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 104) = v170;
                *(_OWORD *)(a1 + 72) = v169;
              }
              else
              {
                *(void *)(a1 + 72) = a2[9];
                *(void *)(a1 + 80) = a2[10];
                *(void *)(a1 + 88) = a2[11];
                *(void *)(a1 + 96) = a2[12];
                uint64_t v340 = (void *)a2[13];
                *(void *)(a1 + 104) = v340;
                *(void *)(a1 + 112) = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v341 = v340;
              }
              if ((unint64_t)a2[16] >= 0x11)
              {
                *(void *)(a1 + 120) = a2[15];
                *(void *)(a1 + 128) = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
              }
              *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
              long long v346 = (void *)a2[18];
              if (v346)
              {
                *(void *)(a1 + 144) = v346;
                *(void *)(a1 + 152) = a2[19];
                *(void *)(a1 + 160) = a2[20];
                *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
                *(unsigned char *)(a1 + 169) = *((unsigned char *)a2 + 169);
                uint64_t v347 = a2[22];
                *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
                *(void *)(a1 + 176) = v347;
                *(void *)(a1 + 192) = a2[24];
                uint64_t v348 = (void *)a2[25];
                *(void *)(a1 + 200) = v348;
                *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
                uint64_t v349 = a2[28];
                id v350 = v346;
                swift_bridgeObjectRetain();
                id v351 = v348;
                if (v349 == 1)
                {
                  long long v352 = *(_OWORD *)(a2 + 27);
                  long long v353 = *(_OWORD *)(a2 + 31);
                  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
                  *(_OWORD *)(a1 + 248) = v353;
                  *(_OWORD *)(a1 + 216) = v352;
                }
                else
                {
                  *(void *)(a1 + 216) = a2[27];
                  *(void *)(a1 + 224) = a2[28];
                  *(void *)(a1 + 232) = a2[29];
                  *(void *)(a1 + 240) = a2[30];
                  uint64_t v380 = (void *)a2[31];
                  *(void *)(a1 + 248) = v380;
                  *(void *)(a1 + 256) = a2[32];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v381 = v380;
                }
                if ((unint64_t)a2[34] >= 0x11)
                {
                  *(void *)(a1 + 264) = a2[33];
                  *(void *)(a1 + 272) = a2[34];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
                }
                *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
              }
              else
              {
                *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
                long long v374 = *((_OWORD *)a2 + 10);
                long long v375 = *((_OWORD *)a2 + 11);
                long long v376 = *((_OWORD *)a2 + 13);
                *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
                *(_OWORD *)(a1 + 208) = v376;
                *(_OWORD *)(a1 + 160) = v374;
                *(_OWORD *)(a1 + 176) = v375;
                long long v377 = *((_OWORD *)a2 + 14);
                long long v378 = *((_OWORD *)a2 + 15);
                long long v379 = *((_OWORD *)a2 + 16);
                *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
                *(_OWORD *)(a1 + 240) = v378;
                *(_OWORD *)(a1 + 256) = v379;
                *(_OWORD *)(a1 + 224) = v377;
              }
            }
            else
            {
              uint64_t v308 = (void *)*a2;
              *(void *)a1 = *a2;
              *(void *)(a1 + 8) = a2[1];
              *(void *)(a1 + 16) = a2[2];
              *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
              *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
              uint64_t v309 = a2[4];
              *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
              *(void *)(a1 + 32) = v309;
              *(void *)(a1 + 48) = a2[6];
              uint64_t v310 = (void *)a2[7];
              *(void *)(a1 + 56) = v310;
              *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v311 = a2[10];
              id v312 = v308;
              swift_bridgeObjectRetain();
              id v313 = v310;
              if (v311 == 1)
              {
                long long v314 = *(_OWORD *)(a2 + 9);
                long long v315 = *(_OWORD *)(a2 + 13);
                *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 104) = v315;
                *(_OWORD *)(a1 + 72) = v314;
              }
              else
              {
                *(void *)(a1 + 72) = a2[9];
                *(void *)(a1 + 80) = a2[10];
                *(void *)(a1 + 88) = a2[11];
                *(void *)(a1 + 96) = a2[12];
                uint64_t v344 = (void *)a2[13];
                *(void *)(a1 + 104) = v344;
                *(void *)(a1 + 112) = a2[14];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v345 = v344;
              }
              if ((unint64_t)a2[16] >= 0x11)
              {
                *(void *)(a1 + 120) = a2[15];
                *(void *)(a1 + 128) = a2[16];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
              }
              *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
            }
            *(unsigned char *)(a1 + 281) = v162;
            goto LABEL_281;
          case 7u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
            uint64_t v171 = a2[4];
            *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
            *(void *)(a1 + 32) = v171;
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = a2[7];
            *(void *)(a1 + 64) = a2[8];
            *(void *)(a1 + 72) = a2[9];
            uint64_t v172 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v172 == 1)
            {
              *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
              long long v173 = *((_OWORD *)a2 + 6);
              long long v174 = *((_OWORD *)a2 + 7);
              long long v175 = *((_OWORD *)a2 + 8);
              *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
              *(_OWORD *)(a1 + 112) = v174;
              *(_OWORD *)(a1 + 128) = v175;
              *(_OWORD *)(a1 + 96) = v173;
            }
            else
            {
              *(void *)(a1 + 80) = a2[10];
              *(void *)(a1 + 88) = a2[11];
              uint64_t v219 = a2[15];
              swift_bridgeObjectRetain();
              if (v219)
              {
                *(void *)(a1 + 120) = v219;
                *(void *)(a1 + 128) = a2[16];
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v219 - 8))(a1 + 96, (uint64_t)(a2 + 12), v219);
                char v220 = *((unsigned char *)a2 + 144);
                *(void *)(a1 + 136) = a2[17];
                *(unsigned char *)(a1 + 144) = v220;
              }
              else
              {
                long long v337 = *((_OWORD *)a2 + 6);
                long long v338 = *((_OWORD *)a2 + 7);
                long long v339 = *((_OWORD *)a2 + 8);
                *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
                *(_OWORD *)(a1 + 112) = v338;
                *(_OWORD *)(a1 + 128) = v339;
                *(_OWORD *)(a1 + 96) = v337;
              }
            }
            goto LABEL_281;
          case 8u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            uint64_t v176 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
            uint64_t v177 = (void *)(a1 + v176);
            uint64_t v178 = (uint64_t)a2 + v176;
            *uint64_t v177 = *(uint64_t *)((char *)a2 + v176);
            v177[1] = *(uint64_t *)((char *)a2 + v176 + 8);
            v177[2] = *(uint64_t *)((char *)a2 + v176 + 16);
            v177[3] = *(uint64_t *)((char *)a2 + v176 + 24);
            uint64_t v562 = (int *)type metadata accessor for FormatCustomItem.Resolved();
            uint64_t v179 = v562[6];
            uint64_t v546 = (char *)v177 + v179;
            uint64_t v180 = (const void *)(v178 + v179);
            uint64_t v181 = type metadata accessor for FormatCustomItem.Action();
            __dsta = *(void **)(v181 - 8);
            uint64_t v182 = (unsigned int (*)(const void *, uint64_t, uint64_t))__dsta[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v182(v180, 1, v181))
            {
              sub_1BFEEF440(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
              memcpy(v546, v180, *(void *)(*(void *)(v183 - 8) + 64));
            }
            else
            {
              uint64_t v249 = sub_1C1515FDC();
              (*(void (**)(char *, const void *, uint64_t))(*(void *)(v249 - 8) + 16))(v546, v180, v249);
              ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v546, 0, 1, v181);
            }
            *(void *)((char *)v177 + v562[7]) = *(void *)(v178 + v562[7]);
            swift_bridgeObjectRetain();
            goto LABEL_281;
          case 9u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            *(void *)(a1 + 24) = a2[3];
            uint64_t v184 = a2[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v184)
            {
              *(void *)(a1 + 56) = v184;
              *(void *)(a1 + 64) = a2[8];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v184 - 8))(a1 + 32, (uint64_t)(a2 + 4), v184);
            }
            else
            {
              long long v250 = *((_OWORD *)a2 + 2);
              long long v251 = *((_OWORD *)a2 + 3);
              *(void *)(a1 + 64) = a2[8];
              *(_OWORD *)(a1 + 32) = v250;
              *(_OWORD *)(a1 + 48) = v251;
            }
            unint64_t v252 = (_OWORD *)(a1 + 72);
            unint64_t v253 = (long long *)(a2 + 9);
            uint64_t v254 = a2[12];
            if (v254)
            {
              *(void *)(a1 + 96) = v254;
              *(void *)(a1 + 104) = a2[13];
              (**(void (***)(_OWORD *, long long *))(v254 - 8))(v252, v253);
            }
            else
            {
              long long v280 = *v253;
              long long v281 = *(_OWORD *)(a2 + 11);
              *(void *)(a1 + 104) = a2[13];
              *unint64_t v252 = v280;
              *(_OWORD *)(a1 + 88) = v281;
            }
            uint64_t v282 = (_OWORD *)(a1 + 112);
            long long v283 = (long long *)(a2 + 14);
            uint64_t v284 = a2[17];
            if (v284)
            {
              *(void *)(a1 + 136) = v284;
              *(void *)(a1 + 144) = a2[18];
              (**(void (***)(_OWORD *, long long *))(v284 - 8))(v282, v283);
            }
            else
            {
              long long v299 = *v283;
              long long v300 = *((_OWORD *)a2 + 8);
              *(void *)(a1 + 144) = a2[18];
              _OWORD *v282 = v299;
              *(_OWORD *)(a1 + 128) = v300;
            }
            goto LABEL_281;
          case 0xAu:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            CGRect v185 = (int *)type metadata accessor for FeedEngagementBanner();
            uint64_t v186 = v185[5];
            uint64_t v187 = a1 + v186;
            uint64_t v188 = (uint64_t)a2 + v186;
            uint64_t v189 = sub_1C151959C();
            uint64_t v190 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v189 - 8) + 16);
            swift_bridgeObjectRetain();
            v190(v187, v188, v189);
            *(void *)(a1 + v185[6]) = *(uint64_t *)((char *)a2 + v185[6]);
            uint64_t v191 = v185[7];
            uint64_t v192 = a1 + v191;
            uint64_t v193 = (uint64_t)a2 + v191;
            char v194 = *(unsigned char *)(v193 + 8);
            *(void *)uint64_t v192 = *(void *)v193;
            *(unsigned char *)(v192 + 8) = v194;
            uint64_t v195 = v185[8];
            uint64_t v141 = a1 + v195;
            uint64_t v142 = (uint64_t)a2 + v195;
            if (*(void *)(v142 + 8) >= 0x11uLL)
            {
LABEL_85:
              *(void *)uint64_t v141 = *(void *)v142;
              *(void *)(v141 + 8) = *(void *)(v142 + 8);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
            }
            goto LABEL_281;
          case 0xBu:
            *(void *)a1 = *a2;
            swift_retain();
            goto LABEL_281;
          case 0xCu:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            uint64_t v196 = a2[3];
            *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
            *(void *)(a1 + 24) = v196;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_281;
          case 0xDu:
            *(void *)a1 = *a2;
            uint64_t v197 = a2[1];
            *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
            *(void *)(a1 + 8) = v197;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(void *)(a1 + 24) = a2[3];
              *(void *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            *(void *)(a1 + 40) = a2[5];
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = a2[7];
            uint64_t v221 = (void *)a2[8];
            *(void *)(a1 + 64) = v221;
            *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
            *(void *)(a1 + 80) = a2[10];
            uint64_t v222 = a2[14];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            id v223 = v221;
            swift_bridgeObjectRetain();
            if (v222)
            {
              *(void *)(a1 + 112) = v222;
              *(void *)(a1 + 120) = a2[15];
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v222 - 8))(a1 + 88, (uint64_t)(a2 + 11), v222);
            }
            else
            {
              long long v270 = *(_OWORD *)(a2 + 11);
              long long v271 = *(_OWORD *)(a2 + 13);
              *(void *)(a1 + 120) = a2[15];
              *(_OWORD *)(a1 + 88) = v270;
              *(_OWORD *)(a1 + 104) = v271;
            }
            uint64_t v272 = (_OWORD *)(a1 + 128);
            long long v273 = (long long *)(a2 + 16);
            uint64_t v274 = a2[19];
            if (v274)
            {
              *(void *)(a1 + 152) = v274;
              *(void *)(a1 + 160) = a2[20];
              (**(void (***)(_OWORD *, long long *))(v274 - 8))(v272, v273);
            }
            else
            {
              long long v294 = *v273;
              long long v295 = *((_OWORD *)a2 + 9);
              *(void *)(a1 + 160) = a2[20];
              *uint64_t v272 = v294;
              *(_OWORD *)(a1 + 144) = v295;
            }
            uint64_t v296 = (_OWORD *)(a1 + 168);
            uint64_t v297 = (long long *)(a2 + 21);
            uint64_t v298 = a2[24];
            if (v298)
            {
              *(void *)(a1 + 192) = v298;
              *(void *)(a1 + 200) = a2[25];
              (**(void (***)(_OWORD *, long long *))(v298 - 8))(v296, v297);
            }
            else
            {
              long long v301 = *v297;
              long long v302 = *(_OWORD *)(a2 + 23);
              *(void *)(a1 + 200) = a2[25];
              *uint64_t v296 = v301;
              *(_OWORD *)(a1 + 184) = v302;
            }
            goto LABEL_281;
          case 0xEu:
            *(void *)a1 = *a2;
            uint64_t v198 = a2[1];
            *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
            *(void *)(a1 + 8) = v198;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(void *)(a1 + 24) = a2[3];
              *(void *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            *(void *)(a1 + 40) = a2[5];
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = a2[7];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_281;
          case 0xFu:
            *(void *)a1 = *a2;
            uint64_t v199 = a2[1];
            *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
            *(void *)(a1 + 8) = v199;
            if ((unint64_t)a2[4] >= 0x11)
            {
              *(void *)(a1 + 24) = a2[3];
              *(void *)(a1 + 32) = a2[4];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
            }
            break;
          case 0x10u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            *(void *)(a1 + 24) = a2[3];
            *(void *)(a1 + 32) = a2[4];
            *(void *)(a1 + 40) = a2[5];
            *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
            *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
            *(void *)(a1 + 56) = a2[7];
            *(void *)(a1 + 64) = a2[8];
            *(void *)(a1 + 72) = a2[9];
            *(void *)(a1 + 80) = a2[10];
            *(void *)(a1 + 88) = a2[11];
            *(void *)(a1 + 96) = a2[12];
            *(void *)(a1 + 104) = a2[13];
            *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
            *(void *)(a1 + 120) = a2[15];
            *(void *)(a1 + 128) = a2[16];
            *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
            *(void *)(a1 + 144) = a2[18];
            *(void *)(a1 + 152) = a2[19];
            *(void *)(a1 + 160) = a2[20];
            *(void *)(a1 + 168) = a2[21];
            uint64_t v200 = a2[22];
            *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
            *(void *)(a1 + 176) = v200;
            *(void *)(a1 + 192) = a2[24];
            *(void *)(a1 + 200) = a2[25];
            *(void *)(a1 + 208) = a2[26];
            uint64_t v201 = a2[27];
            *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
            *(void *)(a1 + 216) = v201;
            unint64_t v202 = a2[30];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v202 >= 0x11)
            {
              *(void *)(a1 + 232) = a2[29];
              *(void *)(a1 + 240) = a2[30];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
            }
            goto LABEL_281;
          default:
            memcpy((void *)a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            goto LABEL_282;
        }
        break;
      case 5u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = a2[9];
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = a2[12];
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_294;
      case 6u:
        uint64_t v10 = type metadata accessor for FormatAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(void *)a1 = *a2;
            uint64_t v11 = (id *)(a2 + 1);
            unsigned int v12 = *((unsigned __int8 *)a2 + 16);
            swift_bridgeObjectRetain();
            if (v12 <= 0xFD)
            {
              id v127 = *v11;
              sub_1BFF43A68(*v11, v12);
              *(void *)(a1 + 8) = v127;
              *(unsigned char *)(a1 + 16) = v12;
            }
            else
            {
              id v13 = *v11;
              *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
              *(void *)(a1 + 8) = v13;
            }
            goto LABEL_224;
          case 1u:
            uint64_t v91 = *a2;
            uint64_t v92 = a2[1];
            uint64_t v93 = a2[2];
            uint64_t v94 = a2[3];
            uint64_t v95 = a2[4];
            uint64_t v572 = v10;
            char v96 = *((unsigned char *)a2 + 41);
            unsigned __int8 v97 = *((unsigned char *)a2 + 40);
            sub_1BFF43AA4((id)*a2, v92, v93, v94, v95, v97, v96);
            *(void *)a1 = v91;
            *(void *)(a1 + 8) = v92;
            *(void *)(a1 + 16) = v93;
            *(void *)(a1 + 24) = v94;
            *(void *)(a1 + 32) = v95;
            *(unsigned char *)(a1 + 40) = v97;
            *(unsigned char *)(a1 + 41) = v96;
            uint64_t v10 = v572;
            *(void *)(a1 + 48) = a2[6];
            uint64_t v98 = (void *)a2[7];
            LOBYTE(v92) = *((unsigned char *)a2 + 64);
            swift_bridgeObjectRetain();
            sub_1BFF43A68(v98, v92);
            *(void *)(a1 + 56) = v98;
            *(unsigned char *)(a1 + 64) = v92;
            goto LABEL_224;
          case 2u:
            *(void *)a1 = *a2;
            swift_retain();
            goto LABEL_224;
          case 4u:
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            *(void *)(a1 + 16) = a2[2];
            *(void *)(a1 + 24) = a2[3];
            *(void *)(a1 + 32) = a2[4];
            *(void *)(a1 + 40) = a2[5];
            uint64_t v99 = a2[6];
            uint64_t v100 = a2[7];
            uint64_t v573 = v10;
            uint64_t v101 = a2[8];
            uint64_t v102 = a2[9];
            char v103 = *((unsigned char *)a2 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF429DC(v99, v100, v101, v102, v103);
            *(void *)(a1 + 48) = v99;
            *(void *)(a1 + 56) = v100;
            *(void *)(a1 + 64) = v101;
            *(void *)(a1 + 72) = v102;
            uint64_t v10 = v573;
            *(unsigned char *)(a1 + 80) = v103;
            *(void *)(a1 + 88) = a2[11];
            *(void *)(a1 + 96) = a2[12];
            *(void *)(a1 + 104) = a2[13];
            *(void *)(a1 + 112) = a2[14];
            *(void *)(a1 + 120) = a2[15];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_224;
          case 5u:
            uint64_t v104 = type metadata accessor for FormatPurchaseData(0);
            int v105 = swift_getEnumCaseMultiPayload();
            if (v105 == 1)
            {
              uint64_t v203 = type metadata accessor for FormatPurchaseLandingPageData();
              uint64_t v204 = *(void *)(v203 - 8);
              if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v204 + 48))(a2, 1, v203))
              {
                sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                memcpy((void *)a1, a2, *(void *)(*(void *)(v205 - 8) + 64));
              }
              else
              {
                uint64_t v577 = v10;
                *(void *)a1 = *a2;
                *(void *)(a1 + 8) = a2[1];
                uint64_t v255 = *(int *)(v203 + 20);
                uint64_t v563 = (void *)(a1 + v255);
                uint64_t v256 = (char *)a2 + v255;
                uint64_t v257 = type metadata accessor for FormatPostPurchaseData();
                uint64_t v258 = *(void *)(v257 - 8);
                uint64_t v259 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48);
                uint64_t v260 = v257;
                swift_bridgeObjectRetain();
                if (v259(v256, 1, v260))
                {
                  sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                  memcpy(v563, v256, *(void *)(*(void *)(v261 - 8) + 64));
                }
                else
                {
                  uint64_t v555 = v260;
                  uint64_t v354 = sub_1C1515FDC();
                  uint64_t v355 = *(void *)(v354 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v355 + 48))(v256, 2, v354))
                  {
                    memcpy(v563, v256, *(void *)(v258 + 64));
                  }
                  else
                  {
                    (*(void (**)(void *, char *, uint64_t))(v355 + 16))(v563, v256, v354);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v355 + 56))(v563, 0, 2, v354);
                  }
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v258 + 56))(v563, 0, 1, v555);
                }
                uint64_t v10 = v577;
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v204 + 56))(a1, 0, 1, v203);
              }
            }
            else
            {
              if (v105)
              {
                memcpy((void *)a1, a2, *(void *)(*(void *)(v104 - 8) + 64));
                goto LABEL_224;
              }
              uint64_t v574 = v10;
              *(void *)a1 = *a2;
              *(void *)(a1 + 8) = a2[1];
              uint64_t v106 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
              uint64_t v107 = (void *)(a1 + v106);
              long long v108 = (char *)a2 + v106;
              uint64_t v109 = type metadata accessor for FormatPostPurchaseData();
              uint64_t v110 = *(void *)(v109 - 8);
              long long v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
              swift_bridgeObjectRetain();
              if (v111(v108, 1, v109))
              {
                sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
              }
              else
              {
                uint64_t v235 = sub_1C1515FDC();
                uint64_t v236 = *(void *)(v235 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v108, 2, v235))
                {
                  memcpy(v107, v108, *(void *)(v110 + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(v236 + 16))(v107, v108, v235);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v236 + 56))(v107, 0, 2, v235);
                }
                uint64_t v10 = v574;
                (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
              }
            }
            swift_storeEnumTagMultiPayload();
LABEL_224:
            swift_storeEnumTagMultiPayload();
LABEL_225:
            uint64_t v438 = type metadata accessor for FormatButtonNodeDataAction();
            uint64_t v439 = *(int *)(v438 + 20);
            uint64_t v440 = *(void **)((char *)a2 + v439);
            *(void *)(a1 + v439) = v440;
            uint64_t v441 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
            v442 = (void *)(a1 + v441);
            uint64_t v443 = (uint64_t *)((char *)a2 + v441);
            uint64_t v444 = *(void *)(v438 - 8);
            v445 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v444 + 48);
            id v446 = v440;
            if (v445(v443, 1, v438))
            {
              sub_1BFEEF440(0, &qword_1EB88C058, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
              memcpy(v442, v443, *(void *)(*(void *)(v447 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  void *v442 = *v443;
                  v448 = (id *)(v443 + 1);
                  unsigned int v449 = *((unsigned __int8 *)v443 + 16);
                  swift_bridgeObjectRetain();
                  if (v449 <= 0xFD)
                  {
                    id v468 = *v448;
                    sub_1BFF43A68(*v448, v449);
                    v442[1] = v468;
                    *((unsigned char *)v442 + 16) = v449;
                  }
                  else
                  {
                    id v450 = *v448;
                    *((unsigned char *)v442 + 16) = *((unsigned char *)v443 + 16);
                    v442[1] = v450;
                  }
                  goto LABEL_292;
                case 1u:
                  uint64_t v451 = *v443;
                  uint64_t v452 = v443[1];
                  uint64_t v453 = v443[3];
                  uint64_t v565 = (void *)v443[2];
                  uint64_t v454 = v443[4];
                  char v569 = *((unsigned char *)v443 + 41);
                  unsigned __int8 v455 = *((unsigned char *)v443 + 40);
                  sub_1BFF43AA4((id)*v443, v452, (uint64_t)v565, v453, v454, v455, v569);
                  void *v442 = v451;
                  v442[1] = v452;
                  v442[2] = v565;
                  v442[3] = v453;
                  v442[4] = v454;
                  *((unsigned char *)v442 + 40) = v455;
                  *((unsigned char *)v442 + 41) = v569;
                  v442[6] = v443[6];
                  unint64_t v456 = (void *)v443[7];
                  LOBYTE(v452) = *((unsigned char *)v443 + 64);
                  swift_bridgeObjectRetain();
                  sub_1BFF43A68(v456, v452);
                  v442[7] = v456;
                  *((unsigned char *)v442 + 64) = v452;
                  goto LABEL_292;
                case 2u:
                  void *v442 = *v443;
                  swift_retain();
                  goto LABEL_292;
                case 4u:
                  void *v442 = *v443;
                  v442[1] = v443[1];
                  v442[2] = v443[2];
                  v442[3] = v443[3];
                  v442[4] = v443[4];
                  v442[5] = v443[5];
                  uint64_t v570 = v443[6];
                  uint64_t v457 = v443[7];
                  uint64_t v458 = v443[8];
                  uint64_t v566 = (void *)v443[9];
                  char v556 = *((unsigned char *)v443 + 80);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1BFF429DC(v570, v457, v458, (uint64_t)v566, v556);
                  v442[6] = v570;
                  v442[7] = v457;
                  v442[8] = v458;
                  v442[9] = v566;
                  *((unsigned char *)v442 + 80) = v556;
                  v442[11] = v443[11];
                  v442[12] = v443[12];
                  v442[13] = v443[13];
                  v442[14] = v443[14];
                  v442[15] = v443[15];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_292;
                case 5u:
                  uint64_t v459 = type metadata accessor for FormatPurchaseData(0);
                  int v460 = swift_getEnumCaseMultiPayload();
                  if (v460 == 1)
                  {
                    uint64_t v469 = type metadata accessor for FormatPurchaseLandingPageData();
                    uint64_t v470 = *(void *)(v469 - 8);
                    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v470 + 48))(v443, 1, v469))
                    {
                      sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                      memcpy(v442, v443, *(void *)(*(void *)(v471 - 8) + 64));
                    }
                    else
                    {
                      void *v442 = *v443;
                      v442[1] = v443[1];
                      uint64_t v568 = (void *)v469;
                      uint64_t v474 = *(int *)(v469 + 20);
                      uint64_t v551 = (char *)v442 + v474;
                      v475 = (char *)v443 + v474;
                      uint64_t v476 = type metadata accessor for FormatPostPurchaseData();
                      uint64_t v541 = *(void *)(v476 - 8);
                      uint64_t v477 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v541 + 48);
                      swift_bridgeObjectRetain();
                      v478 = v475;
                      __dstc = (void *)v476;
                      if (v477(v475, 1, v476))
                      {
                        sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                        memcpy(v551, v475, *(void *)(*(void *)(v479 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v480 = sub_1C1515FDC();
                        uint64_t v481 = *(void *)(v480 - 8);
                        v482 = v478;
                        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v481 + 48))(v478, 2, v480))
                        {
                          uint64_t v483 = v541;
                          memcpy(v551, v482, *(void *)(v541 + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, const void *, uint64_t))(v481 + 16))(v551, v478, v480);
                          (*(void (**)(char *, void, uint64_t, uint64_t))(v481 + 56))(v551, 0, 2, v480);
                          uint64_t v483 = v541;
                        }
                        (*(void (**)(char *, void, uint64_t, void *))(v483 + 56))(v551, 0, 1, __dstc);
                      }
                      (*(void (**)(void *, void, uint64_t, void *))(v470 + 56))(v442, 0, 1, v568);
                    }
                  }
                  else
                  {
                    if (v460)
                    {
                      memcpy(v442, v443, *(void *)(*(void *)(v459 - 8) + 64));
                      goto LABEL_292;
                    }
                    void *v442 = *v443;
                    v442[1] = v443[1];
                    uint64_t v461 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
                    uint64_t v567 = (char *)v442 + v461;
                    long long v462 = (char *)v443 + v461;
                    uint64_t v463 = type metadata accessor for FormatPostPurchaseData();
                    uint64_t v464 = *(void *)(v463 - 8);
                    v465 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v464 + 48);
                    uint64_t v466 = v463;
                    swift_bridgeObjectRetain();
                    if (v465(v462, 1, v466))
                    {
                      sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                      memcpy(v567, v462, *(void *)(*(void *)(v467 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v557 = v466;
                      uint64_t v472 = sub_1C1515FDC();
                      uint64_t v473 = *(void *)(v472 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v473 + 48))(v462, 2, v472))
                      {
                        memcpy(v567, v462, *(void *)(v464 + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(v473 + 16))(v567, v462, v472);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v473 + 56))(v567, 0, 2, v472);
                      }
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v464 + 56))(v567, 0, 1, v557);
                    }
                  }
                  swift_storeEnumTagMultiPayload();
LABEL_292:
                  swift_storeEnumTagMultiPayload();
LABEL_293:
                  uint64_t v529 = *(int *)(v438 + 20);
                  v530 = *(void **)((char *)v443 + v529);
                  *(void *)((char *)v442 + v529) = v530;
                  v531 = *(void (**)(void *, void, uint64_t, uint64_t))(v444 + 56);
                  id v532 = v530;
                  v531(v442, 0, 1, v438);
                  break;
                default:
                  memcpy(v442, v443, *(void *)(*(void *)(v10 - 8) + 64));
                  goto LABEL_293;
              }
            }
            break;
          default:
            memcpy((void *)a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            goto LABEL_225;
        }
        goto LABEL_294;
      case 0xAu:
        uint64_t v14 = type metadata accessor for FormatViewBackground(0);
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
          memcpy((void *)a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          int v72 = swift_getEnumCaseMultiPayload();
          if (v72 == 2)
          {
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            uint64_t v113 = a2[2];
            v559 = (void *)a2[3];
            uint64_t v114 = a2[4];
            uint64_t v115 = a2[5];
            uint64_t v116 = a2[6];
            uint64_t v117 = a2[7];
            uint64_t v118 = a2[8];
            uint64_t v552 = a2[9];
            char v575 = *((unsigned char *)a2 + 80);
            sub_1C03A98B4(v113, (uint64_t)v559, v114, v115, v116, v117, v118, v552, v575);
            *(void *)(a1 + 16) = v113;
            *(void *)(a1 + 24) = v559;
            *(void *)(a1 + 32) = v114;
            *(void *)(a1 + 40) = v115;
            *(void *)(a1 + 48) = v116;
            *(void *)(a1 + 56) = v117;
            *(void *)(a1 + 64) = v118;
            *(void *)(a1 + 72) = v552;
            *(unsigned char *)(a1 + 80) = v575;
            uint64_t v119 = a2[11];
            uint64_t v576 = a2[12];
            uint64_t v120 = a2[13];
            uint64_t v121 = a2[14];
            uint64_t v122 = a2[15];
            uint64_t v123 = a2[16];
            uint64_t v125 = a2[17];
            uint64_t v124 = a2[18];
            uint64_t v560 = (void *)v124;
            char v126 = *((unsigned char *)a2 + 152);
            sub_1C03A98B4(v119, v576, v120, v121, v122, v123, v125, v124, v126);
            *(void *)(a1 + 88) = v119;
            *(void *)(a1 + 96) = v576;
            *(void *)(a1 + 104) = v120;
            *(void *)(a1 + 112) = v121;
            *(void *)(a1 + 120) = v122;
            *(void *)(a1 + 128) = v123;
            *(void *)(a1 + 136) = v125;
            *(void *)(a1 + 144) = v560;
            *(unsigned char *)(a1 + 152) = v126;
          }
          else if (v72 == 1)
          {
            *(void *)a1 = *a2;
            uint64_t v73 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
            uint64_t v74 = (void *)(a1 + v73);
            uint64_t v75 = (char *)a2 + v73;
            uint64_t v76 = sub_1C151A8EC();
            uint64_t v77 = *(void *)(v76 - 8);
            uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
            swift_retain();
            if (v78(v75, 1, v76))
            {
              sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
              memcpy(v74, v75, *(void *)(*(void *)(v79 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
            }
          }
          else
          {
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = a2[1];
            swift_retain();
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
        goto LABEL_294;
      case 0xBu:
        *(void *)a1 = *a2;
        uint64_t v17 = type metadata accessor for FormatMicaData();
        uint64_t v18 = *(int *)(v17 + 20);
        uint64_t v19 = (void *)(a1 + v18);
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_1C151A8EC();
        uint64_t v22 = *(void *)(v21 - 8);
        unsigned int v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_retain();
        if (v23(v20, 1, v21))
        {
          sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
          memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        uint64_t v80 = *(int *)(v17 + 24);
        uint64_t v81 = a1 + v80;
        uint64_t v82 = (int *)((char *)a2 + v80);
        int v83 = *v82;
        *(unsigned char *)(v81 + 4) = *((unsigned char *)v82 + 4);
        *(_DWORD *)uint64_t v81 = v83;
        goto LABEL_294;
      case 0xCu:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_294;
      case 0xDu:
        uint64_t v25 = sub_1C1515FDC();
        uint64_t v26 = *(void *)(v25 - 8);
        uint64_t v27 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v26 + 16);
        v27(a1, a2, v25);
        uint64_t v28 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
        uint64_t v29 = (void *)(a1 + v28);
        uint64_t v30 = (char *)a2 + v28;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((uint64_t)a2 + v28, 1, v25))
        {
          sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          v27((uint64_t)v29, (uint64_t *)v30, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
        }
        uint64_t v84 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
        uint64_t v85 = a1 + v84;
        uint64_t v86 = (uint64_t)a2 + v84;
        uint64_t v87 = *(void **)v86;
        *(void *)uint64_t v85 = *(void *)v86;
        *(unsigned char *)(v85 + 8) = *(unsigned char *)(v86 + 8);
        *(void *)(v85 + 16) = *(void *)(v86 + 16);
        *(unsigned char *)(v85 + 24) = *(unsigned char *)(v86 + 24);
        *(unsigned char *)(v85 + 25) = *(unsigned char *)(v86 + 25);
        uint64_t v88 = *(void **)(v86 + 32);
        *(void *)(v85 + 32) = v88;
        *(void *)(v85 + 40) = *(void *)(v86 + 40);
        id v89 = v87;
        id v90 = v88;
        goto LABEL_294;
      case 0xEu:
        uint64_t v32 = (void *)*a2;
        uint64_t v33 = a2[1];
        uint64_t v34 = (void *)a2[2];
        uint64_t v35 = a2[3];
        uint64_t v36 = (void *)a2[4];
        uint64_t v37 = a2[5];
        uint64_t v38 = (void *)a2[6];
        char v39 = *((unsigned char *)a2 + 56);
        sub_1C00FA170(v32, v33, v34, v35, v36, v37, v38, v39);
        *(void *)a1 = v32;
        *(void *)(a1 + 8) = v33;
        *(void *)(a1 + 16) = v34;
        *(void *)(a1 + 24) = v35;
        *(void *)(a1 + 32) = v36;
        *(void *)(a1 + 40) = v37;
        *(void *)(a1 + 48) = v38;
        *(unsigned char *)(a1 + 56) = v39;
        goto LABEL_294;
      case 0xFu:
        uint64_t v40 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
        uint64_t v41 = (int *)type metadata accessor for SharedItem();
        *(unsigned char *)(a1 + v41[5]) = *((unsigned char *)a2 + v41[5]);
        uint64_t v42 = v41[6];
        uint64_t v43 = *(void **)((char *)a2 + v42);
        *(void *)(a1 + v42) = v43;
        uint64_t v44 = v41[7];
        uint64_t v45 = a1 + v44;
        uint64_t v46 = (uint64_t)a2 + v44;
        uint64_t v47 = sub_1C1515FDC();
        uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
        id v49 = v43;
        v48(v45, v46, v47);
        goto LABEL_294;
      case 0x10u:
        uint64_t v50 = (void *)*a2;
        uint64_t v51 = a2[1];
        uint64_t v52 = a2[2];
        uint64_t v53 = a2[3];
        uint64_t v54 = a2[4];
        uint64_t v55 = a2[5];
        uint64_t v56 = a2[6];
        uint64_t v57 = a2[7];
        char v58 = *((unsigned char *)a2 + 64);
        sub_1C00364B0(v50, v51, v52, v53, v54, v55, v56, v57, v58);
        *(void *)a1 = v50;
        *(void *)(a1 + 8) = v51;
        *(void *)(a1 + 16) = v52;
        *(void *)(a1 + 24) = v53;
        *(void *)(a1 + 32) = v54;
        *(void *)(a1 + 40) = v55;
        *(void *)(a1 + 48) = v56;
        *(void *)(a1 + 56) = v57;
        *(unsigned char *)(a1 + 64) = v58;
        goto LABEL_294;
      case 0x11u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v59 = (int *)type metadata accessor for FormatVideoPlayerData();
        uint64_t v60 = v59[9];
        uint64_t v571 = a1 + v60;
        v558 = (char *)a2 + v60;
        uint64_t v61 = sub_1C1515FDC();
        id v62 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v62(v571, v558, v61);
        *(void *)(a1 + v59[10]) = *(uint64_t *)((char *)a2 + v59[10]);
        *(unsigned char *)(a1 + v59[11]) = *((unsigned char *)a2 + v59[11]);
        uint64_t v63 = v59[12];
        uint64_t v64 = a1 + v63;
        uint64_t v65 = (uint64_t)a2 + v63;
        *(void *)uint64_t v64 = *(void *)v65;
        *(void *)(v64 + 8) = *(void *)(v65 + 8);
        *(void *)(v64 + 16) = *(void *)(v65 + 16);
        *(void *)(v64 + 24) = *(void *)(v65 + 24);
        *(unsigned char *)(v64 + 32) = *(unsigned char *)(v65 + 32);
        *(void *)(v64 + 40) = *(void *)(v65 + 40);
        *(void *)(v64 + 48) = *(void *)(v65 + 48);
        *(unsigned char *)(a1 + v59[13]) = *((unsigned char *)a2 + v59[13]);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_294;
      case 0x12u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v66 = a2[1];
        sub_1C00F804C(v66);
        *(void *)(a1 + 8) = v66;
        goto LABEL_294;
      case 0x14u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v67 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        uint64_t v68 = a1 + v67;
        uint64_t v69 = (uint64_t)a2 + v67;
        uint64_t v70 = sub_1C151D6DC();
        uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        goto LABEL_294;
      default:
        memcpy((void *)a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = a2[6];
    uint64_t v224 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v225 = a1 + v224;
    uint64_t v226 = (uint64_t)a2 + v224;
    *(void *)(a1 + v224) = *(uint64_t *)((char *)a2 + v224);
    uint64_t v227 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v228 = (void *)(v225 + v227);
    uint64_t v229 = (void *)(v226 + v227);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v316 = type metadata accessor for PuzzleStatisticValue(0);
        int v317 = swift_getEnumCaseMultiPayload();
        uint64_t v548 = (void *)v316;
        if (v317 == 5)
        {
          uint64_t v432 = type metadata accessor for PuzzleStreak();
          uint64_t v433 = *(void *)(v432 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v433 + 48))(v229, 1, v432))
          {
            sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v228, v229, *(void *)(*(void *)(v434 - 8) + 64));
          }
          else
          {
            uint64_t v491 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v491 - 8) + 16))(v228, v229, v491);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v433 + 56))(v228, 0, 1, v432);
          }
          uint64_t v316 = (uint64_t)v548;
        }
        else
        {
          if (v317 != 4)
          {
            memcpy(v228, v229, *(void *)(*(void *)(v316 - 8) + 64));
            goto LABEL_259;
          }
          uint64_t v318 = type metadata accessor for PuzzleStreak();
          uint64_t v319 = *(void *)(v318 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v319 + 48))(v229, 1, v318))
          {
            sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v228, v229, *(void *)(*(void *)(v320 - 8) + 64));
          }
          else
          {
            uint64_t v489 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v489 - 8) + 16))(v228, v229, v489);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v319 + 56))(v228, 0, 1, v318);
          }
          uint64_t v316 = (uint64_t)v548;
        }
        swift_storeEnumTagMultiPayload();
LABEL_259:
        uint64_t v492 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v493 = *(int *)(v492 + 20);
        v494 = v228;
        v495 = (char *)v228 + v493;
        uint64_t v496 = (char *)v229 + v493;
        int v497 = swift_getEnumCaseMultiPayload();
        if (v497 == 5)
        {
          uint64_t v501 = type metadata accessor for PuzzleStreak();
          uint64_t v502 = *(void *)(v501 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v502 + 48))(v496, 1, v501))
          {
            sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v495, v496, *(void *)(*(void *)(v503 - 8) + 64));
          }
          else
          {
            uint64_t v505 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v505 - 8) + 16))(v495, v496, v505);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v502 + 56))(v495, 0, 1, v501);
          }
          uint64_t v316 = (uint64_t)v548;
        }
        else
        {
          if (v497 != 4)
          {
            memcpy(v495, v496, *(void *)(*(void *)(v316 - 8) + 64));
            goto LABEL_271;
          }
          uint64_t v498 = type metadata accessor for PuzzleStreak();
          uint64_t v499 = *(void *)(v498 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v499 + 48))(v496, 1, v498))
          {
            sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v495, v496, *(void *)(*(void *)(v500 - 8) + 64));
          }
          else
          {
            uint64_t v504 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 16))(v495, v496, v504);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v499 + 56))(v495, 0, 1, v498);
          }
          uint64_t v316 = (uint64_t)v548;
        }
        swift_storeEnumTagMultiPayload();
LABEL_271:
        uint64_t v506 = *(int *)(v492 + 24);
        v507 = (char *)v494 + v506;
        uint64_t v508 = (char *)v229 + v506;
        int v509 = swift_getEnumCaseMultiPayload();
        if (v509 == 5)
        {
          uint64_t v510 = type metadata accessor for PuzzleStreak();
          uint64_t v511 = *(void *)(v510 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v511 + 48))(v508, 1, v510)) {
            goto LABEL_274;
          }
        }
        else
        {
          if (v509 != 4)
          {
            memcpy(v507, v508, *(void *)(*(void *)(v316 - 8) + 64));
            goto LABEL_280;
          }
          uint64_t v510 = type metadata accessor for PuzzleStreak();
          uint64_t v511 = *(void *)(v510 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v511 + 48))(v508, 1, v510))
          {
LABEL_274:
            sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v507, v508, *(void *)(*(void *)(v512 - 8) + 64));
            goto LABEL_279;
          }
        }
        uint64_t v513 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v513 - 8) + 16))(v507, v508, v513);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v511 + 56))(v507, 0, 1, v510);
        goto LABEL_279;
      case 2u:
        uint64_t v321 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v322 = *((void *)v321 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v322 + 48))(v229, 1, v321))
        {
          sub_1BFEEF440(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          size_t v324 = *(void *)(*(void *)(v323 - 8) + 64);
          goto LABEL_214;
        }
        uint64_t v382 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v382 - 8) + 16))(v228, v229, v382);
        uint64_t v383 = type metadata accessor for PuzzleLeaderboardEntry();
        long long v384 = (char *)v228;
        uint64_t v385 = v383;
        uint64_t v386 = *(int *)(v383 + 20);
        v387 = &v384[v386];
        uint64_t v388 = (void *)((char *)v229 + v386);
        *(void *)v387 = *v388;
        *((void *)v387 + 1) = v388[1];
        uint64_t v389 = *(int *)(v383 + 24);
        uint64_t v550 = v384;
        id v390 = &v384[v389];
        long long v391 = (void *)((char *)v229 + v389);
        *(void *)id v390 = *v391;
        *((void *)v390 + 1) = v391[1];
        uint64_t v392 = v391 + 2;
        unint64_t v393 = v391[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v393 >> 60 == 15)
        {
          *((_OWORD *)v390 + 1) = *(_OWORD *)v392;
        }
        else
        {
          uint64_t v484 = *v392;
          sub_1BFE95820(*v392, v393);
          *((void *)v390 + 2) = v484;
          *((void *)v390 + 3) = v393;
        }
        *(void *)&v550[*(int *)(v385 + 28)] = *(void *)((char *)v229 + *(int *)(v385 + 28));
        *(void *)&v550[*(int *)(v385 + 32)] = *(void *)((char *)v229 + *(int *)(v385 + 32));
        *(void *)&v550[v321[5]] = *(void *)((char *)v229 + v321[5]);
        *(void *)&v550[v321[6]] = *(void *)((char *)v229 + v321[6]);
        uint64_t v485 = v321[7];
        v486 = &v550[v485];
        v487 = (void *)((char *)v229 + v485);
        *(void *)v486 = *v487;
        *((void *)v486 + 1) = v487[1];
        uint64_t v488 = *(void (**)(char *, void, uint64_t, int *))(v322 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v488(v550, 0, 1, v321);
        goto LABEL_280;
      case 3u:
        *uint64_t v228 = *v229;
        uint64_t v325 = v229[1];
        *((unsigned char *)v228 + 16) = *((unsigned char *)v229 + 16);
        v228[1] = v325;
        uint64_t v326 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v327 = v326[6];
        uint64_t v549 = (char *)v228;
        uint64_t v328 = (char *)v228 + v327;
        uint64_t v329 = (char *)v229 + v327;
        uint64_t v330 = type metadata accessor for PuzzleStreak();
        uint64_t v331 = *(void *)(v330 - 8);
        uint64_t v332 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v331 + 48);
        if (v332(v329, 1, v330))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v328, v329, *(void *)(*(void *)(v333 - 8) + 64));
        }
        else
        {
          uint64_t v394 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 16))(v328, v329, v394);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v331 + 56))(v328, 0, 1, v330);
        }
        uint64_t v395 = v326[7];
        uint64_t v396 = &v549[v395];
        uint64_t v397 = (char *)v229 + v395;
        if (v332((char *)v229 + v395, 1, v330))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v396, v397, *(void *)(*(void *)(v398 - 8) + 64));
        }
        else
        {
          uint64_t v415 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 16))(v396, v397, v415);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v331 + 56))(v396, 0, 1, v330);
        }
        uint64_t v416 = v326[8];
        uint64_t v417 = &v549[v416];
        v418 = (long long *)((char *)v229 + v416);
        long long v419 = *v418;
        long long v420 = v418[1];
        *(_OWORD *)(v417 + 25) = *(long long *)((char *)v418 + 25);
        *(_OWORD *)uint64_t v417 = v419;
        *((_OWORD *)v417 + 1) = v420;
        uint64_t v421 = v326[9];
        uint64_t v422 = &v549[v421];
        uint64_t v423 = (long long *)((char *)v229 + v421);
        long long v424 = *v423;
        long long v425 = v423[1];
        *(_OWORD *)(v422 + 25) = *(long long *)((char *)v423 + 25);
        *(_OWORD *)uint64_t v422 = v424;
        *((_OWORD *)v422 + 1) = v425;
        uint64_t v426 = v326[10];
        id v427 = &v549[v426];
        uint64_t v428 = (long long *)((char *)v229 + v426);
        long long v429 = *v428;
        long long v430 = v428[1];
        *(_OWORD *)(v427 + 25) = *(long long *)((char *)v428 + 25);
        *(_OWORD *)id v427 = v429;
        *((_OWORD *)v427 + 1) = v430;
        goto LABEL_280;
      default:
        uint64_t v230 = type metadata accessor for PuzzleStatisticValue(0);
        int v231 = swift_getEnumCaseMultiPayload();
        if (v231 == 5)
        {
          uint64_t v232 = v228;
          uint64_t v233 = type metadata accessor for PuzzleStreak();
          uint64_t v234 = *(void *)(v233 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v234 + 48))(v229, 1, v233))
          {
LABEL_212:
            sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v232, v229, *(void *)(*(void *)(v431 - 8) + 64));
            goto LABEL_279;
          }
        }
        else
        {
          if (v231 != 4)
          {
            size_t v324 = *(void *)(*(void *)(v230 - 8) + 64);
LABEL_214:
            memcpy(v228, v229, v324);
            goto LABEL_280;
          }
          uint64_t v232 = v228;
          uint64_t v233 = type metadata accessor for PuzzleStreak();
          uint64_t v234 = *(void *)(v233 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v234 + 48))(v229, 1, v233)) {
            goto LABEL_212;
          }
        }
        uint64_t v490 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v490 - 8) + 16))(v232, v229, v490);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v234 + 56))(v232, 0, 1, v233);
LABEL_279:
        swift_storeEnumTagMultiPayload();
LABEL_280:
        swift_storeEnumTagMultiPayload();
LABEL_281:
        swift_storeEnumTagMultiPayload();
LABEL_282:
        v514 = (int *)type metadata accessor for FormatItemNodeData();
        uint64_t v515 = v514[5];
        uint64_t v516 = a1 + v515;
        uint64_t v517 = (uint64_t)a2 + v515;
        *(void *)uint64_t v516 = *(uint64_t *)((char *)a2 + v515);
        *(void *)(v516 + 8) = *(uint64_t *)((char *)a2 + v515 + 8);
        *(void *)(v516 + 16) = *(uint64_t *)((char *)a2 + v515 + 16);
        *(void *)(v516 + 24) = *(uint64_t *)((char *)a2 + v515 + 24);
        *(void *)(v516 + 32) = *(uint64_t *)((char *)a2 + v515 + 32);
        *(void *)(v516 + 40) = *(uint64_t *)((char *)a2 + v515 + 40);
        unint64_t v518 = *(uint64_t *)((char *)a2 + v515 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v518 >= 0xF)
        {
          *(void *)(v516 + 48) = *(void *)(v517 + 48);
          *(void *)(v516 + 56) = *(void *)(v517 + 56);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v516 + 48) = *(_OWORD *)(v517 + 48);
        }
        *(void *)(v516 + 64) = *(void *)(v517 + 64);
        *(void *)(v516 + 72) = *(void *)(v517 + 72);
        *(void *)(v516 + 80) = *(void *)(v517 + 80);
        *(void *)(v516 + 88) = *(void *)(v517 + 88);
        *(void *)(v516 + 96) = *(void *)(v517 + 96);
        *(void *)(v516 + 104) = *(void *)(v517 + 104);
        *(void *)(v516 + 112) = *(void *)(v517 + 112);
        *(unsigned char *)(v516 + 120) = *(unsigned char *)(v517 + 120);
        uint64_t v519 = v514[6];
        unint64_t v520 = *(uint64_t *)((char *)a2 + v519);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF45054(v520);
        *(void *)(a1 + v519) = v520;
        uint64_t v521 = v514[7];
        uint64_t v522 = a1 + v521;
        uint64_t v523 = (uint64_t)a2 + v521;
        uint64_t v524 = sub_1C151AC1C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v524 - 8) + 16))(v522, v523, v524);
        uint64_t v525 = v514[8];
        uint64_t v526 = (void *)(a1 + v525);
        uint64_t v527 = (uint64_t *)((char *)a2 + v525);
        if (v527[1])
        {
          *uint64_t v526 = *v527;
          v526[1] = v527[1];
          v526[2] = v527[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v528 = *(_OWORD *)v527;
          v526[2] = v527[2];
          *(_OWORD *)uint64_t v526 = v528;
        }
LABEL_294:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

uint64_t sub_1C0C129B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1C151D2DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_160;
    case 4u:
      uint64_t v7 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v8 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v9 = v8[5];
          uint64_t v10 = a1 + v9;
          uint64_t v11 = a2 + v9;
          uint64_t v12 = sub_1C151DBAC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
          *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
          uint64_t v13 = v8[7];
          uint64_t v14 = a1 + v13;
          uint64_t v15 = a2 + v13;
          *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
          *(void *)uint64_t v14 = *(void *)v15;
          *(_OWORD *)(a1 + v8[8]) = *(_OWORD *)(a2 + v8[8]);
          goto LABEL_152;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          uint64_t v304 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v78 = v304[10];
          uint64_t v79 = (unsigned char *)(a1 + v78);
          uint64_t v80 = a2 + v78;
          *uint64_t v79 = *(unsigned char *)(a2 + v78);
          v79[1] = *(unsigned char *)(a2 + v78 + 1);
          uint64_t v81 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v82 = v81[6];
          int v83 = &v79[v82];
          uint64_t v84 = (char *)(v80 + v82);
          uint64_t v85 = (int *)type metadata accessor for SharedItem();
          uint64_t v86 = *((void *)v85 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v86 + 48))(v84, 1, v85))
          {
            uint64_t v87 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
          }
          else
          {
            uint64_t v137 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v83, v84, v137);
            v83[v85[5]] = v84[v85[5]];
            *(void *)&v83[v85[6]] = *(void *)&v84[v85[6]];
            uint64_t v138 = v85[7];
            long long v300 = &v83[v138];
            char v139 = &v84[v138];
            uint64_t v140 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v300, v139, v140);
            (*(void (**)(char *, void, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
          }
          v79[v81[7]] = *(unsigned char *)(v80 + v81[7]);
          v79[v81[8]] = *(unsigned char *)(v80 + v81[8]);
          v79[v81[9]] = *(unsigned char *)(v80 + v81[9]);
          v79[v81[10]] = *(unsigned char *)(v80 + v81[10]);
          uint64_t v141 = v304[11];
          uint64_t v142 = (void *)(a1 + v141);
          uint64_t v143 = (const void *)(a2 + v141);
          uint64_t v144 = sub_1C151D2DC();
          uint64_t v145 = *(void *)(v144 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
          {
            sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v145 + 32))(v142, v143, v144);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
          }
          *(_OWORD *)(a1 + v304[12]) = *(_OWORD *)(a2 + v304[12]);
          uint64_t v155 = v304[13];
          uint64_t v156 = *(void *)(a2 + v155);
          if (v156 == 2) {
            uint64_t v156 = 2;
          }
          *(void *)(a1 + v155) = v156;
          *(void *)(a1 + v304[14]) = *(void *)(a2 + v304[14]);
          goto LABEL_152;
        case 4u:
          uint64_t v88 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v88;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          id v89 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v90 = v89[8];
          uint64_t v91 = a1 + v90;
          uint64_t v92 = a2 + v90;
          uint64_t v93 = sub_1C1515FDC();
          uint64_t v94 = *(void *)(v93 - 8);
          uint64_t v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
          v95(v91, v92, v93);
          uint64_t v96 = v89[9];
          unsigned __int8 v97 = (void *)(a1 + v96);
          uint64_t v98 = (const void *)(a2 + v96);
          uint64_t v299 = v93;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(a2 + v96, 1, v93))
          {
            sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            v95((uint64_t)v97, (uint64_t)v98, v93);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v97, 0, 1, v93);
          }
          uint64_t v147 = (void (*)(char *, char *, uint64_t))v95;
          *(void *)(a1 + v89[10]) = *(void *)(a2 + v89[10]);
          *(void *)(a1 + v89[11]) = *(void *)(a2 + v89[11]);
          long long v305 = v89;
          uint64_t v148 = v89[12];
          uint64_t v149 = (_OWORD *)(a1 + v148);
          uint64_t v150 = (_OWORD *)(a2 + v148);
          uint64_t v151 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v152 = *((void *)v151 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v152 + 48))(v150, 1, v151))
          {
            sub_1BFEEF440(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v149, v150, *(void *)(*(void *)(v153 - 8) + 64));
          }
          else
          {
            uint64_t v288 = v152;
            id v292 = (void (*)(char *, char *, uint64_t))v95;
            *uint64_t v149 = *v150;
            *((void *)v149 + 2) = *((void *)v150 + 2);
            *((unsigned char *)v149 + 24) = *((unsigned char *)v150 + 24);
            *((void *)v149 + 4) = *((void *)v150 + 4);
            *(_OWORD *)((char *)v149 + 40) = *(_OWORD *)((char *)v150 + 40);
            *((unsigned char *)v149 + 56) = *((unsigned char *)v150 + 56);
            uint64_t v157 = v151[10];
            id v158 = (char *)v149 + v157;
            id v159 = (char *)v150 + v157;
            *id v158 = *((unsigned char *)v150 + v157);
            v158[1] = *((unsigned char *)v150 + v157 + 1);
            long long v290 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v160 = v290[6];
            long long v294 = &v158[v160];
            long long v161 = &v159[v160];
            int v162 = (int *)type metadata accessor for SharedItem();
            uint64_t v287 = *((void *)v162 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v287 + 48))(v161, 1, v162))
            {
              uint64_t v163 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v294, v161, *(void *)(*(void *)(v163 - 8) + 64));
            }
            else
            {
              uint64_t v182 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v294, v161, v182);
              v294[v162[5]] = v161[v162[5]];
              *(void *)&v294[v162[6]] = *(void *)&v161[v162[6]];
              v292(&v294[v162[7]], &v161[v162[7]], v299);
              (*(void (**)(char *, void, uint64_t, int *))(v287 + 56))(v294, 0, 1, v162);
            }
            v158[v290[7]] = v159[v290[7]];
            v158[v290[8]] = v159[v290[8]];
            v158[v290[9]] = v159[v290[9]];
            v158[v290[10]] = v159[v290[10]];
            uint64_t v183 = v151[11];
            uint64_t v184 = (char *)v149 + v183;
            CGRect v185 = (char *)v150 + v183;
            uint64_t v186 = sub_1C151D2DC();
            uint64_t v187 = *(void *)(v186 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48))(v185, 1, v186))
            {
              sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v184, v185, *(void *)(*(void *)(v188 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v184, v185, v186);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v184, 0, 1, v186);
            }
            *(_OWORD *)((char *)v149 + v151[12]) = *(_OWORD *)((char *)v150 + v151[12]);
            uint64_t v189 = v151[13];
            uint64_t v190 = *(void *)((char *)v150 + v189);
            uint64_t v147 = v292;
            if (v190 == 2) {
              uint64_t v190 = 2;
            }
            *(void *)((char *)v149 + v189) = v190;
            *(void *)((char *)v149 + v151[14]) = *(void *)((char *)v150 + v151[14]);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v288 + 56))(v149, 0, 1, v151);
          }
          uint64_t v191 = v305[13];
          uint64_t v192 = (_OWORD *)(a1 + v191);
          uint64_t v193 = (_OWORD *)(a2 + v191);
          uint64_t v194 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v195 = *(void *)(v194 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
          {
            sub_1BFEEF440(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              _OWORD *v192 = *v193;
              uint64_t v197 = type metadata accessor for GenericDataVisualization();
              uint64_t v198 = v147;
              uint64_t v199 = v197;
              v198((char *)v192 + *(int *)(v197 + 20), (char *)v193 + *(int *)(v197 + 20), v299);
              *(void *)((char *)v192 + *(int *)(v199 + 24)) = *(void *)((char *)v193 + *(int *)(v199 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v192, v193, *(void *)(v195 + 64));
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
          }
          *(unsigned char *)(a1 + v305[14]) = *(unsigned char *)(a2 + v305[14]);
          goto LABEL_152;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v100 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          uint64_t v101 = (_OWORD *)(a1 + v100);
          uint64_t v102 = a2 + v100;
          long long v103 = *(_OWORD *)(a2 + v100 + 16);
          *uint64_t v101 = *(_OWORD *)(a2 + v100);
          v101[1] = v103;
          uint64_t v104 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v105 = *(int *)(v104 + 24);
          uint64_t v106 = (char *)v101 + v105;
          uint64_t v107 = (const void *)(v102 + v105);
          uint64_t v108 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v109 = *(void *)(v108 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
          {
            sub_1BFEEF440(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            uint64_t v154 = sub_1C1515FDC();
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v154 - 8) + 32))(v106, v107, v154);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
          }
          *(void *)((char *)v101 + *(int *)(v104 + 28)) = *(void *)(v102 + *(int *)(v104 + 28));
          goto LABEL_152;
        case 0xAu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          long long v111 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v112 = v111[5];
          uint64_t v113 = a1 + v112;
          uint64_t v114 = a2 + v112;
          uint64_t v115 = sub_1C151959C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
          *(void *)(a1 + v111[6]) = *(void *)(a2 + v111[6]);
          uint64_t v116 = v111[7];
          uint64_t v117 = a1 + v116;
          uint64_t v118 = a2 + v116;
          *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
          *(void *)uint64_t v117 = *(void *)v118;
          *(_OWORD *)(a1 + v111[8]) = *(_OWORD *)(a2 + v111[8]);
          goto LABEL_152;
        case 0xFu:
          uint64_t v119 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v119;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          uint64_t v120 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          uint64_t v121 = a1 + v120;
          uint64_t v122 = a2 + v120;
          *(void *)(a1 + v120) = *(void *)(a2 + v120);
          uint64_t v123 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          uint64_t v124 = (void *)(v121 + v123);
          uint64_t v125 = (void *)(v122 + v123);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v164 = type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5)
              {
                uint64_t v166 = type metadata accessor for PuzzleStreak();
                uint64_t v167 = *(void *)(v166 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v167 + 48))(v125, 1, v166))
                {
LABEL_102:
                  sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v124, v125, *(void *)(*(void *)(v224 - 8) + 64));
                  goto LABEL_132;
                }
              }
              else
              {
                if (EnumCaseMultiPayload != 4)
                {
                  memcpy(v124, v125, *(void *)(*(void *)(v164 - 8) + 64));
                  goto LABEL_133;
                }
                uint64_t v166 = type metadata accessor for PuzzleStreak();
                uint64_t v167 = *(void *)(v166 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v167 + 48))(v125, 1, v166)) {
                  goto LABEL_102;
                }
              }
              uint64_t v253 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v253 - 8) + 32))(v124, v125, v253);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v167 + 56))(v124, 0, 1, v166);
LABEL_132:
              swift_storeEnumTagMultiPayload();
LABEL_133:
              uint64_t v254 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v255 = *(int *)(v254 + 20);
              uint64_t v310 = (char *)v124;
              uint64_t v256 = (char *)v124 + v255;
              uint64_t v257 = (char *)v125 + v255;
              int v258 = swift_getEnumCaseMultiPayload();
              if (v258 == 5)
              {
                uint64_t v259 = type metadata accessor for PuzzleStreak();
                uint64_t v260 = *(void *)(v259 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48))(v257, 1, v259))
                {
LABEL_138:
                  sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v256, v257, *(void *)(*(void *)(v261 - 8) + 64));
                  goto LABEL_141;
                }
              }
              else
              {
                if (v258 != 4)
                {
                  memcpy(v256, v257, *(void *)(*(void *)(v164 - 8) + 64));
                  goto LABEL_142;
                }
                uint64_t v259 = type metadata accessor for PuzzleStreak();
                uint64_t v260 = *(void *)(v259 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48))(v257, 1, v259)) {
                  goto LABEL_138;
                }
              }
              uint64_t v262 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 32))(v256, v257, v262);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v260 + 56))(v256, 0, 1, v259);
LABEL_141:
              swift_storeEnumTagMultiPayload();
LABEL_142:
              uint64_t v263 = *(int *)(v254 + 24);
              uint64_t v264 = &v310[v263];
              uint64_t v265 = (char *)v125 + v263;
              int v266 = swift_getEnumCaseMultiPayload();
              if (v266 == 5)
              {
                uint64_t v267 = type metadata accessor for PuzzleStreak();
                uint64_t v268 = *(void *)(v267 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v265, 1, v267))
                {
LABEL_147:
                  sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v264, v265, *(void *)(*(void *)(v269 - 8) + 64));
                  goto LABEL_150;
                }
              }
              else
              {
                if (v266 != 4)
                {
                  memcpy(v264, v265, *(void *)(*(void *)(v164 - 8) + 64));
                  goto LABEL_151;
                }
                uint64_t v267 = type metadata accessor for PuzzleStreak();
                uint64_t v268 = *(void *)(v267 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v265, 1, v267)) {
                  goto LABEL_147;
                }
              }
              uint64_t v270 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v264, v265, v270);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v264, 0, 1, v267);
              goto LABEL_150;
            case 2u:
              id v168 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              uint64_t v169 = *((void *)v168 - 1);
              if ((*(unsigned int (**)(void *, uint64_t, int *))(v169 + 48))(v125, 1, v168))
              {
                sub_1BFEEF440(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                memcpy(v124, v125, *(void *)(*(void *)(v170 - 8) + 64));
              }
              else
              {
                uint64_t v200 = sub_1C151631C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v200 - 8) + 32))(v124, v125, v200);
                uint64_t v201 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                *(_OWORD *)((char *)v124 + v201[5]) = *(_OWORD *)((char *)v125 + v201[5]);
                uint64_t v202 = v201[6];
                uint64_t v203 = (_OWORD *)((char *)v124 + v202);
                uint64_t v204 = (_OWORD *)((char *)v125 + v202);
                long long v205 = v204[1];
                *uint64_t v203 = *v204;
                v203[1] = v205;
                *(void *)((char *)v124 + v201[7]) = *(void *)((char *)v125 + v201[7]);
                *(void *)((char *)v124 + v201[8]) = *(void *)((char *)v125 + v201[8]);
                *(void *)((char *)v124 + v168[5]) = *(void *)((char *)v125 + v168[5]);
                *(void *)((char *)v124 + v168[6]) = *(void *)((char *)v125 + v168[6]);
                *(_OWORD *)((char *)v124 + v168[7]) = *(_OWORD *)((char *)v125 + v168[7]);
                (*(void (**)(void *, void, uint64_t, int *))(v169 + 56))(v124, 0, 1, v168);
              }
              goto LABEL_151;
            case 3u:
              uint64_t v171 = v125[1];
              *uint64_t v124 = *v125;
              v124[1] = v171;
              *((unsigned char *)v124 + 16) = *((unsigned char *)v125 + 16);
              uint64_t v172 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v173 = v172[6];
              long long v306 = (char *)v124;
              long long v174 = (char *)v124 + v173;
              long long v175 = (char *)v125 + v173;
              uint64_t v176 = type metadata accessor for PuzzleStreak();
              uint64_t v177 = *(void *)(v176 - 8);
              long long v295 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
              if (v295(v175, 1, v176))
              {
                sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v174, v175, *(void *)(*(void *)(v178 - 8) + 64));
              }
              else
              {
                uint64_t v206 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 32))(v174, v175, v206);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
              }
              uint64_t v207 = v172[7];
              uint64_t v208 = &v306[v207];
              uint64_t v209 = (char *)v125 + v207;
              if (v295((char *)v125 + v207, 1, v176))
              {
                sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
              }
              else
              {
                uint64_t v211 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v208, v209, v211);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v208, 0, 1, v176);
              }
              uint64_t v212 = v172[8];
              uint64_t v213 = &v306[v212];
              long long v214 = (_OWORD *)((char *)v125 + v212);
              long long v215 = v214[1];
              *(_OWORD *)uint64_t v213 = *v214;
              *((_OWORD *)v213 + 1) = v215;
              *(_OWORD *)(v213 + 25) = *(_OWORD *)((char *)v214 + 25);
              uint64_t v216 = v172[9];
              uint64_t v217 = &v306[v216];
              id v218 = (_OWORD *)((char *)v125 + v216);
              *(_OWORD *)(v217 + 25) = *(_OWORD *)((char *)v218 + 25);
              long long v219 = v218[1];
              *(_OWORD *)uint64_t v217 = *v218;
              *((_OWORD *)v217 + 1) = v219;
              uint64_t v220 = v172[10];
              uint64_t v221 = &v306[v220];
              uint64_t v222 = (_OWORD *)((char *)v125 + v220);
              long long v223 = v222[1];
              *(_OWORD *)uint64_t v221 = *v222;
              *((_OWORD *)v221 + 1) = v223;
              *(_OWORD *)(v221 + 25) = *(_OWORD *)((char *)v222 + 25);
              goto LABEL_151;
            default:
              uint64_t v126 = type metadata accessor for PuzzleStatisticValue(0);
              int v127 = swift_getEnumCaseMultiPayload();
              if (v127 == 5)
              {
                uint64_t v128 = type metadata accessor for PuzzleStreak();
                uint64_t v129 = *(void *)(v128 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v128)) {
                  goto LABEL_44;
                }
              }
              else
              {
                if (v127 != 4)
                {
                  memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
                  goto LABEL_151;
                }
                uint64_t v128 = type metadata accessor for PuzzleStreak();
                uint64_t v129 = *(void *)(v128 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v128))
                {
LABEL_44:
                  sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v124, v125, *(void *)(*(void *)(v130 - 8) + 64));
                  goto LABEL_150;
                }
              }
              uint64_t v252 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v252 - 8) + 32))(v124, v125, v252);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v124, 0, 1, v128);
LABEL_150:
              swift_storeEnumTagMultiPayload();
LABEL_151:
              swift_storeEnumTagMultiPayload();
LABEL_152:
              swift_storeEnumTagMultiPayload();
LABEL_153:
              long long v271 = (int *)type metadata accessor for FormatItemNodeData();
              uint64_t v272 = v271[5];
              long long v273 = (_OWORD *)(a1 + v272);
              uint64_t v274 = (_OWORD *)(a2 + v272);
              long long v275 = v274[3];
              v273[2] = v274[2];
              v273[3] = v275;
              long long v276 = v274[1];
              _OWORD *v273 = *v274;
              v273[1] = v276;
              *(_OWORD *)((char *)v273 + 105) = *(_OWORD *)((char *)v274 + 105);
              long long v277 = v274[6];
              long long v278 = v274[4];
              v273[5] = v274[5];
              v273[6] = v277;
              v273[4] = v278;
              *(void *)(a1 + v271[6]) = *(void *)(a2 + v271[6]);
              uint64_t v279 = v271[7];
              uint64_t v280 = a1 + v279;
              uint64_t v281 = a2 + v279;
              uint64_t v282 = sub_1C151AC1C();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v282 - 8) + 32))(v280, v281, v282);
              uint64_t v283 = v271[8];
              uint64_t v284 = a1 + v283;
              uint64_t v285 = a2 + v283;
              *(_OWORD *)uint64_t v284 = *(_OWORD *)v285;
              *(void *)(v284 + 16) = *(void *)(v285 + 16);
LABEL_160:
              swift_storeEnumTagMultiPayload();
              return a1;
          }
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_153;
      }
    case 6u:
      uint64_t v16 = type metadata accessor for FormatAction();
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_109;
      }
      uint64_t v17 = type metadata accessor for FormatPurchaseData(0);
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 1)
      {
        uint64_t v75 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v76 = *(void *)(v75 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(a2, 1, v75))
        {
          sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v132 = *(int *)(v75 + 20);
          __dsta = (void *)(a1 + v132);
          uint64_t v133 = (const void *)(a2 + v132);
          uint64_t v134 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v135 = *(void *)(v134 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134))
          {
            sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dsta, v133, *(void *)(*(void *)(v136 - 8) + 64));
          }
          else
          {
            uint64_t v179 = sub_1C1515FDC();
            uint64_t v301 = *(void *)(v179 - 8);
            long long v307 = (void *)v179;
            if ((*(unsigned int (**)(const void *, uint64_t))(v301 + 48))(v133, 2))
            {
              uint64_t v180 = v133;
              uint64_t v181 = __dsta;
              memcpy(__dsta, v180, *(void *)(v135 + 64));
            }
            else
            {
              uint64_t v181 = __dsta;
              (*(void (**)(void))(v301 + 32))();
              (*(void (**)(void *, void, uint64_t, void *))(v301 + 56))(__dsta, 0, 2, v307);
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v181, 0, 1, v134);
          }
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(a1, 0, 1, v75);
        }
      }
      else
      {
        if (v18)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
          goto LABEL_108;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v19 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v20 = (void *)(a1 + v19);
        uint64_t v21 = (const void *)(a2 + v19);
        uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v131 = sub_1C1515FDC();
          __dst = *(void (***)(void *, const void *, uint64_t))(v131 - 8);
          if (((unsigned int (*)(const void *, uint64_t, uint64_t))__dst[6])(v21, 2, v131))
          {
            memcpy(v20, v21, *(void *)(v23 + 64));
          }
          else
          {
            __dst[4](v20, v21, v131);
            ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v20, 0, 2, v131);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_108:
      swift_storeEnumTagMultiPayload();
LABEL_109:
      uint64_t v225 = type metadata accessor for FormatButtonNodeDataAction();
      *(void *)(a1 + *(int *)(v225 + 20)) = *(void *)(a2 + *(int *)(v225 + 20));
      uint64_t v226 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
      uint64_t v227 = (_OWORD *)(a1 + v226);
      uint64_t v228 = (_OWORD *)(a2 + v226);
      uint64_t v229 = *(void *)(v225 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v229 + 48))(v228, 1, v225))
      {
        sub_1BFEEF440(0, &qword_1EB88C058, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
        memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
        goto LABEL_160;
      }
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        memcpy(v227, v228, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_159;
      }
      uint64_t v231 = type metadata accessor for FormatPurchaseData(0);
      int v232 = swift_getEnumCaseMultiPayload();
      if (v232 == 1)
      {
        uint64_t v238 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v239 = *(void *)(v238 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v239 + 48))(v228, 1, v238))
        {
          sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(v227, v228, *(void *)(*(void *)(v240 - 8) + 64));
        }
        else
        {
          uint64_t v298 = v238;
          uint64_t v303 = v239;
          *uint64_t v227 = *v228;
          uint64_t v244 = *(int *)(v238 + 20);
          uint64_t v309 = (char *)v227 + v244;
          uint64_t v245 = (char *)v228 + v244;
          uint64_t v246 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v293 = *(void *)(v246 - 8);
          uint64_t v296 = v245;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v293 + 48))(v245, 1, v246))
          {
            sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v309, v245, *(void *)(*(void *)(v247 - 8) + 64));
            uint64_t v248 = v303;
          }
          else
          {
            uint64_t v291 = v246;
            uint64_t v249 = sub_1C1515FDC();
            uint64_t v250 = *(void *)(v249 - 8);
            uint64_t v289 = v249;
            if ((*(unsigned int (**)(char *, uint64_t))(v250 + 48))(v245, 2))
            {
              uint64_t v251 = v293;
              memcpy(v309, v296, *(void *)(v293 + 64));
              uint64_t v248 = v303;
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v250 + 32))(v309, v245, v289);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v250 + 56))(v309, 0, 2, v289);
              uint64_t v248 = v303;
              uint64_t v251 = v293;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v251 + 56))(v309, 0, 1, v291);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v248 + 56))(v227, 0, 1, v298);
        }
      }
      else
      {
        if (v232)
        {
          memcpy(v227, v228, *(void *)(*(void *)(v231 - 8) + 64));
          goto LABEL_158;
        }
        *uint64_t v227 = *v228;
        uint64_t v233 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v308 = (char *)v227 + v233;
        uint64_t v234 = (char *)v228 + v233;
        uint64_t v235 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v236 = *(void *)(v235 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235))
        {
          sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v308, v234, *(void *)(*(void *)(v237 - 8) + 64));
        }
        else
        {
          uint64_t v241 = sub_1C1515FDC();
          uint64_t v297 = *(void *)(v241 - 8);
          uint64_t v302 = v241;
          if ((*(unsigned int (**)(char *, uint64_t))(v297 + 48))(v234, 2))
          {
            id v242 = v234;
            uint64_t v243 = v308;
            memcpy(v308, v242, *(void *)(v236 + 64));
          }
          else
          {
            uint64_t v243 = v308;
            (*(void (**)(void))(v297 + 32))();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v297 + 56))(v308, 0, 2, v302);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v236 + 56))(v243, 0, 1, v235);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_158:
      swift_storeEnumTagMultiPayload();
LABEL_159:
      *(void *)((char *)v227 + *(int *)(v225 + 20)) = *(void *)((char *)v228 + *(int *)(v225 + 20));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v229 + 56))(v227, 0, 1, v225);
      goto LABEL_160;
    case 0xAu:
      uint64_t v25 = type metadata accessor for FormatViewBackground(0);
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v62 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
          uint64_t v63 = (void *)(a1 + v62);
          uint64_t v64 = (const void *)(a2 + v62);
          uint64_t v65 = sub_1C151A8EC();
          uint64_t v66 = *(void *)(v65 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
          {
            sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
            memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v66 + 32))(v63, v64, v65);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(v26 + 64));
        }
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
      }
      goto LABEL_160;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      uint64_t v28 = type metadata accessor for FormatMicaData();
      uint64_t v29 = *(int *)(v28 + 20);
      uint64_t v30 = (void *)(a1 + v29);
      uint64_t v31 = (const void *)(a2 + v29);
      uint64_t v32 = sub_1C151A8EC();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      uint64_t v68 = *(int *)(v28 + 24);
      uint64_t v69 = a1 + v68;
      uint64_t v70 = a2 + v68;
      *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
      *(unsigned char *)(v69 + 4) = *(unsigned char *)(v70 + 4);
      goto LABEL_160;
    case 0xDu:
      uint64_t v35 = sub_1C1515FDC();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
      v37(a1, a2, v35);
      uint64_t v38 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      char v39 = (void *)(a1 + v38);
      uint64_t v40 = (const void *)(a2 + v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v38, 1, v35))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v37((uint64_t)v39, (uint64_t)v40, v35);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      uint64_t v71 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
      int v72 = (_OWORD *)(a1 + v71);
      uint64_t v73 = (_OWORD *)(a2 + v71);
      long long v74 = v73[1];
      *int v72 = *v73;
      v72[1] = v74;
      v72[2] = v73[2];
      goto LABEL_160;
    case 0xFu:
      uint64_t v42 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
      uint64_t v43 = (int *)type metadata accessor for SharedItem();
      *(unsigned char *)(a1 + v43[5]) = *(unsigned char *)(a2 + v43[5]);
      *(void *)(a1 + v43[6]) = *(void *)(a2 + v43[6]);
      uint64_t v44 = v43[7];
      uint64_t v45 = a1 + v44;
      uint64_t v46 = a2 + v44;
      uint64_t v47 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      goto LABEL_160;
    case 0x11u:
      long long v48 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v48;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      id v49 = (int *)type metadata accessor for FormatVideoPlayerData();
      uint64_t v50 = v49[9];
      uint64_t v51 = a1 + v50;
      uint64_t v52 = a2 + v50;
      uint64_t v53 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      *(void *)(a1 + v49[10]) = *(void *)(a2 + v49[10]);
      *(unsigned char *)(a1 + v49[11]) = *(unsigned char *)(a2 + v49[11]);
      uint64_t v54 = v49[12];
      uint64_t v55 = a1 + v54;
      uint64_t v56 = a2 + v54;
      long long v57 = *(_OWORD *)(v56 + 16);
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      *(_OWORD *)(v55 + 16) = v57;
      *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
      *(void *)(v55 + 48) = *(void *)(v56 + 48);
      *(unsigned char *)(a1 + v49[13]) = *(unsigned char *)(a2 + v49[13]);
      goto LABEL_160;
    case 0x14u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v58 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v59 = a1 + v58;
      uint64_t v60 = a2 + v58;
      uint64_t v61 = sub_1C151D6DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      goto LABEL_160;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t static FormatMicaNodeArchive.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C15B4C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v9[*(int *)(v10 + 56)];
  sub_1C0C15BFC(a1, (uint64_t)v9);
  sub_1C0C15BFC(a2, v11);
  sub_1C0AB0F8C((uint64_t)v9, (uint64_t)v6);
  LOBYTE(a2) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_1C0C15DA0(v11);
  sub_1C0C15DA0((uint64_t)v6);
  return a2 & 1;
}

void sub_1C0C15B4C()
{
  if (!qword_1EA1A4A70)
  {
    type metadata accessor for FormatMicaNodeArchive();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A4A70);
    }
  }
}

uint64_t type metadata accessor for FormatMicaNodeArchive()
{
  uint64_t result = qword_1EB85D5F0;
  if (!qword_1EB85D5F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0C15BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMicaNodeArchive();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C15C60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMicaNodeArchive.init(from:)(a1, a2);
}

uint64_t sub_1C0C15C78(void *a1)
{
  return FormatMicaNodeArchive.encode(to:)(a1);
}

uint64_t sub_1C0C15C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0C15B4C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v9[*(int *)(v10 + 56)];
  sub_1C0C15BFC(a1, (uint64_t)v9);
  sub_1C0C15BFC(a2, v11);
  sub_1C0AB0F8C((uint64_t)v9, (uint64_t)v6);
  LOBYTE(a2) = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_1C0C15DA0(v11);
  sub_1C0C15DA0((uint64_t)v6);
  return a2 & 1;
}

uint64_t sub_1C0C15DA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatURL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0C15DFC(uint64_t a1)
{
  uint64_t result = sub_1C0C15ECC(&qword_1EA1A4A78);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0C15E40(void *a1)
{
  a1[1] = sub_1C0C15ECC(&qword_1EB85EBD8);
  a1[2] = sub_1C0C15ECC(&qword_1EB85EBD0);
  uint64_t result = sub_1C0C15ECC((unint64_t *)&unk_1EA1A4A80);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0C15ECC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatMicaNodeArchive();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for FormatMicaNodeArchive(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = *(void *)a2;
      uint64_t v10 = *(void *)(a2 + 8);
      uint64_t v11 = *(void *)(a2 + 16);
      char v12 = *(unsigned char *)(a2 + 24);
      sub_1BFE86E48(v9, v10, v11, v12);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v11;
      *(unsigned char *)(a1 + 24) = v12;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v7;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v13 = sub_1C1515FDC();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(a1 + *(int *)(v14 + 20)) = *(void *)(a2 + *(int *)(v14 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatMicaNodeArchive(uint64_t a1)
{
  type metadata accessor for FormatURL();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = *(void *)a1;
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(void *)(a1 + 16);
    char v7 = *(unsigned char *)(a1 + 24);
    return sub_1BFD7418C(v4, v5, v6, v7);
  }
  else
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for FormatAbsoluteURL();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for FormatMicaNodeArchive(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FormatURL();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    char v9 = *(unsigned char *)(a2 + 24);
    sub_1BFE86E48(v6, v7, v8, v9);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(a1 + *(int *)(v11 + 20)) = *(void *)(a2 + *(int *)(v11 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FormatMicaNodeArchive(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0C15DA0(a1);
    type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v5 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      uint64_t v7 = *(void *)(a2 + 16);
      char v8 = *(unsigned char *)(a2 + 24);
      sub_1BFE86E48(v5, v6, v7, v8);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v7;
      *(unsigned char *)(a1 + 24) = v8;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v9 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(a1 + *(int *)(v10 + 20)) = *(void *)(a2 + *(int *)(v10 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for FormatMicaNodeArchive(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for FormatMicaNodeArchive(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1C0C15DA0((uint64_t)a1);
    uint64_t v4 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v5 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMicaNodeArchive(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatMicaNodeArchive(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, a2, a3, v6);
}

uint64_t sub_1C0C16674(uint64_t a1)
{
  uint64_t result = type metadata accessor for FormatURL();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void sub_1C0C16718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    uint64_t v11 = a3 + 16;
    uint64_t v12 = *(void *)(a2 + 16);
    int v13 = *(unsigned __int8 *)(v12 + 24);
    if (v13 == 255
      || (v13 & 1) == 0
      && (double v15 = *(double *)(v12 + 16),
          uint64_t v16 = v12 + *(void *)(*(void *)v12 + 104),
          swift_beginAccess(),
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v5),
          sub_1C151627C(),
          double v18 = v17,
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
          v15 >= -v18))
    {
      uint64_t v14 = *(void **)(v12 + *(void *)(*(void *)v12 + 112));
    }
    else
    {
      uint64_t v14 = (void *)sub_1C037B4C0(v10);
    }
    swift_beginAccess();
    uint64_t v19 = MEMORY[0x1C18C9C60](v11);
    if (!v19) {
      goto LABEL_20;
    }
    uint64_t v20 = (void *)v19;
    id v21 = v14;
    id v22 = objc_msgSend(v20, sel_attributedText);
    uint64_t v23 = v22;
    if (v22)
    {
      id v24 = objc_msgSend(v22, sel_string);

      uint64_t v25 = sub_1C151E62C();
      uint64_t v23 = v26;
    }
    else
    {
      uint64_t v25 = 0;
    }
    id v27 = objc_msgSend(v21, sel_string);
    uint64_t v28 = sub_1C151E62C();
    uint64_t v30 = v29;

    if (!v23)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      id v33 = v20;
      objc_msgSend(v33, sel_setAttributedText_, v21);

LABEL_20:
      swift_release();
      return;
    }
    if (v25 != v28 || v23 != v30)
    {
      char v32 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32)
      {

        swift_release();
        return;
      }
      goto LABEL_19;
    }

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1C0C16A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1C18C9C60](a1 + 16);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = Strong;
      uint64_t v13 = *(void *)(a3 + 16);
      int v14 = *(unsigned __int8 *)(v13 + 24);
      if (v14 == 255
        || (v14 & 1) == 0
        && (double v15 = *(double *)(v13 + 16),
            uint64_t v16 = v13 + *(void *)(*(void *)v13 + 104),
            swift_beginAccess(),
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v5),
            sub_1C151627C(),
            double v18 = v17,
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
            v15 >= -v18))
      {
        uint64_t v19 = *(void **)(v13 + *(void *)(*(void *)v13 + 112));
      }
      else
      {
        uint64_t v19 = (void *)sub_1C037B4C0(v12);
      }
      id v20 = v19;
      sub_1C151FB1C();

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_1C0C16C24(uint64_t a1)
{
  sub_1BFE6A80C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    if (qword_1EB87B130 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
    sub_1C151ADBC();
    sub_1C0C17808((uint64_t)v4, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0C16E1C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C16E5C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  void (*v37)(uint64_t *__return_ptr, uint64_t, uint64_t, void (*)(), void *);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char **v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  int v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  long long v56;
  long long *v57;
  long long v58;
  long long v59;
  long long v60;
  long long v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  long long v76;
  long long v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  void v84[16];
  void v85[16];
  uint64_t v86[3];
  uint64_t v87;
  uint64_t v88[2];
  char v89;

  uint64_t v9 = v8;
  uint64_t v71 = a7;
  int v72 = a8;
  uint64_t v68 = a6;
  uint64_t v69 = a5;
  long long v74 = a4;
  uint64_t v13 = sub_1C151631C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151F8FC();
  swift_beginAccess();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 128));
  objc_msgSend(a3, sel_setNumberOfLines_, 0);
  uint64_t v17 = *(void *)(a2 + 24);
  double v18 = &a3[OBJC_IVAR____TtC8NewsFeed11FormatLabel_identifier];
  *(void *)double v18 = *(void *)(a2 + 16);
  *((void *)v18 + 1) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 96);
  uint64_t v73 = v19;
  if (v19) {
    uint64_t v20 = *(unsigned char *)(v19 + 552) & 1;
  }
  else {
    uint64_t v20 = 0;
  }
  objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, v20);
  uint64_t v75 = a1;
  uint64_t v21 = *(uint64_t **)(a1 + 16);
  int v22 = *((unsigned __int8 *)v21 + 24);
  if (v22 == 255)
  {
    id v31 = *(id *)((char *)v21 + *(void *)(*v21 + 112));
    sub_1C151FB1C();

    uint64_t v32 = v75;
LABEL_13:
    uint64_t v41 = v73;
    goto LABEL_16;
  }
  uint64_t v70 = a3;
  uint64_t v23 = v21[2];
  uint64_t v24 = v8[4];
  if ((v22 & 1) == 0)
  {
    uint64_t v25 = v9[4];
    double v26 = *((double *)v21 + 2);
    id v27 = (char *)v21 + *(void *)(*v21 + 104);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v27, v13);
    sub_1C151627C();
    double v29 = v28;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (-v29 <= *(double *)&v23) {
      uint64_t v30 = *(uint64_t *)((char *)v21 + *(void *)(*v21 + 112));
    }
    else {
      uint64_t v30 = sub_1C037B4C0(v25);
    }
    a3 = v70;
    objc_msgSend(v70, sel_setAttributedText_, v30);
    uint64_t v38 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v39 = swift_allocObject();
    swift_weakInit();
    uint64_t v40 = (void *)swift_allocObject();
    uint64_t v32 = v75;
    v40[2] = v39;
    v40[3] = v32;
    v40[4] = v38;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BFE6DF58(v26, v69, (uint64_t)sub_1C0C177FC, (uint64_t)v40);
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_13;
  }
  sub_1BFF6BF20(v21[2], 1);
  id v33 = (id)sub_1C037B4C0(v24);
  sub_1C151FB1C();

  uint64_t v67 = v9[2];
  uint64_t v68 = v9;
  uint64_t v66 = v9[3];
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  uint64_t v36 = (void *)swift_allocObject();
  uint64_t v36[2] = v34;
  v36[3] = v35;
  _OWORD v36[4] = v75;
  uint64_t v37 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, void (*)(), void *))(v23 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  v37(v88, v67, v66, sub_1C0C177EC, v36);
  swift_release();
  swift_release();
  swift_release();
  sub_1BFE6A378((uint64_t)v88, (uint64_t)v86);
  if (v87)
  {
    __swift_project_boxed_opaque_existential_1(v86, v87);
    sub_1C1517E3C();
    sub_1BFF4D0F0(v23, v22);
    sub_1C0C17808((uint64_t)v88, &qword_1EB8713D8, (void (*)(uint64_t))sub_1C00F8100);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  }
  else
  {
    sub_1C0C17808((uint64_t)v88, &qword_1EB8713D8, (void (*)(uint64_t))sub_1C00F8100);
    sub_1BFF4D0F0(v23, v22);
    sub_1C0C17808((uint64_t)v86, &qword_1EB8713D8, (void (*)(uint64_t))sub_1C00F8100);
  }
  uint64_t v32 = v75;
  uint64_t v41 = v73;
  a3 = v70;
LABEL_16:
  uint64_t v42 = *(void *)(a2 + 144);
  uint64_t v43 = *(unsigned __int8 *)(a2 + 152);
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setAccessibilityElementsHidden_, 0);
  if (v43 > 0xFD) {
    goto LABEL_22;
  }
  if ((v43 & 0x80) != 0)
  {
    if (!(v42 | v43 ^ 0x80)) {
      goto LABEL_22;
    }
    uint64_t v44 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    uint64_t v44 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(a3, *v44, 1);
LABEL_22:
  uint64_t v45 = *(void *)(a2 + 136);
  if (v41)
  {
    uint64_t v46 = *(void *)(v41 + 192);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v46 = 0;
  }
  uint64_t v47 = objc_msgSend(a3, sel_layer);
  v88[0] = 0;
  v88[1] = 0;
  id v89 = -2;
  sub_1BFE69BFC(v45, v47, v71, v46, v88);

  swift_bridgeObjectRelease();
  if (v41)
  {
    sub_1BFF65D2C(v41 + 64, (uint64_t)v85);
    sub_1BFF65D2C((uint64_t)v85, (uint64_t)v86);
    long long v48 = sub_1C044587C((uint64_t)v86);
    id v49 = v74;
    if (v48 != 1)
    {
      sub_1BFF6530C((uint64_t)v86, (uint64_t)v88);
      switch(sub_1C0444FE8((uint64_t)v88))
      {
        case 1u:
          uint64_t v54 = sub_1C0445038((uint64_t)v88);
          uint64_t v55 = *(void *)(v54 + 8);
          *(void *)&uint64_t v76 = *(void *)v54;
          *((void *)&v76 + 1) = v55;
          uint64_t v56 = *(_OWORD *)(v54 + 32);
          uint64_t v77 = *(_OWORD *)(v54 + 16);
          uint64_t v78 = v56;
          uint64_t v79 = *(_OWORD *)(v54 + 48);
          sub_1BFF65D2C((uint64_t)v85, (uint64_t)v84);
          sub_1BFF99A50(v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
          sub_1C14B83D8(a3, &v76, v49);
          break;
        case 2u:
          long long v57 = (long long *)sub_1C0445038((uint64_t)v88);
          uint64_t v58 = v57[5];
          uint64_t v80 = v57[4];
          uint64_t v81 = v58;
          uint64_t v59 = v57[7];
          uint64_t v82 = v57[6];
          int v83 = v59;
          uint64_t v60 = v57[1];
          uint64_t v76 = *v57;
          uint64_t v77 = v60;
          uint64_t v61 = v57[3];
          uint64_t v78 = v57[2];
          uint64_t v79 = v61;
          sub_1BFF65D2C((uint64_t)v85, (uint64_t)v84);
          sub_1BFF99A50(v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
          sub_1C0C63168(a3, &v76, v49);
          break;
        default:
          sub_1C0445038((uint64_t)v88);
          uint64_t v52 = self;
          sub_1BFF65D2C((uint64_t)v85, (uint64_t)v84);
          sub_1BFF99A50(v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
          uint64_t v53 = objc_msgSend(v52, sel_clearColor);
          sub_1C151F95C();

          break;
      }
      sub_1BFF99A50(v85, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
      goto LABEL_36;
    }
    sub_1BFF65D2C((uint64_t)v85, (uint64_t)v88);
  }
  else
  {
    sub_1C0C17750((uint64_t)v86);
    sub_1BFF65D2C((uint64_t)v86, (uint64_t)v88);
    id v49 = v74;
  }
  uint64_t v50 = objc_msgSend(self, sel_clearColor);
  sub_1C151F95C();

  sub_1BFF99A50(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
  if (v41)
  {
LABEL_36:
    uint64_t v51 = *(void *)(v41 + 512);
    swift_bridgeObjectRetain();
    goto LABEL_37;
  }
  uint64_t v51 = 0;
LABEL_37:
  v86[0] = v51;
  sub_1BFE69FD4(v45, a3, v86, v49);
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void *)(v32 + 24);
  uint64_t v63 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1BFE6A860(v62, (uint64_t)sub_1C0C177A8, v63);
  return swift_release_n();
}